

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 12 17:15:18 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	text44,global,reloc=2,class=CODE,delta=1
    58                           	psect	text45,global,reloc=2,class=CODE,delta=1
    59                           	psect	text46,global,reloc=2,class=CODE,delta=1
    60                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    61                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    62                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    63                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    64                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    65   000000                     
    66                           ; Generated 05/01/2024 GMT
    67                           ; 
    68                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    69                           ; All rights reserved.
    70                           ; 
    71                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    72                           ; 
    73                           ; Redistribution and use in source and binary forms, with or without modification, are
    74                           ; permitted provided that the following conditions are met:
    75                           ; 
    76                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    77                           ;        conditions and the following disclaimer.
    78                           ; 
    79                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    80                           ;        of conditions and the following disclaimer in the documentation and/or other
    81                           ;        materials provided with the distribution. Publication is not required when
    82                           ;        this file is used in an embedded application.
    83                           ; 
    84                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    85                           ;        software without specific prior written permission.
    86                           ; 
    87                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    88                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    89                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    90                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    91                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    92                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    93                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    94                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    95                           ; 
    96                           ; 
    97                           ; Code-generator required, PIC18F26K20 Definitions
    98                           ; 
    99                           ; SFR Addresses
   100   000000                     
   101 ;; Function _EUSART_Transmit_ISR is unused but had its address taken
   102   000000                     
   103 ;; Function _EUSART_Receive_ISR is unused but had its address taken
   104   000000                     
   105                           	psect	mediumconst
   106   00F7F4                     __pmediumconst:
   107                           	callstack 0
   108   00F7F4  00                 	db	0
   109   00F7F5                     _MAX7219_Dot_Matrix_font:
   110                           	callstack 0
   111   00F7F5  00                 	db	0
   112   00F7F6  00                 	db	0
   113   00F7F7  00                 	db	0
   114   00F7F8  00                 	db	0
   115   00F7F9  00                 	db	0
   116   00F7FA  00                 	db	0
   117   00F7FB  00                 	db	0
   118   00F7FC  00                 	db	0
   119   00F7FD  7E                 	db	126
   120   00F7FE  81                 	db	129
   121   00F7FF  95                 	db	149
   122   00F800  B1                 	db	177
   123   00F801  B1                 	db	177
   124   00F802  95                 	db	149
   125   00F803  81                 	db	129
   126   00F804  7E                 	db	126
   127   00F805  7E                 	db	126
   128   00F806  FF                 	db	255
   129   00F807  EB                 	db	235
   130   00F808  CF                 	db	207
   131   00F809  CF                 	db	207
   132   00F80A  EB                 	db	235
   133   00F80B  FF                 	db	255
   134   00F80C  7E                 	db	126
   135   00F80D  0E                 	db	14
   136   00F80E  1F                 	db	31
   137   00F80F  3F                 	db	63
   138   00F810  7E                 	db	126
   139   00F811  3F                 	db	63
   140   00F812  1F                 	db	31
   141   00F813  0E                 	db	14
   142   00F814  00                 	db	0
   143   00F815  08                 	db	8
   144   00F816  1C                 	db	28
   145   00F817  3E                 	db	62
   146   00F818  7F                 	db	127
   147   00F819  3E                 	db	62
   148   00F81A  1C                 	db	28
   149   00F81B  08                 	db	8
   150   00F81C  00                 	db	0
   151   00F81D  18                 	db	24
   152   00F81E  BA                 	db	186
   153   00F81F  FF                 	db	255
   154   00F820  FF                 	db	255
   155   00F821  FF                 	db	255
   156   00F822  BA                 	db	186
   157   00F823  18                 	db	24
   158   00F824  00                 	db	0
   159   00F825  10                 	db	16
   160   00F826  B8                 	db	184
   161   00F827  FC                 	db	252
   162   00F828  FF                 	db	255
   163   00F829  FC                 	db	252
   164   00F82A  B8                 	db	184
   165   00F82B  10                 	db	16
   166   00F82C  00                 	db	0
   167   00F82D  00                 	db	0
   168   00F82E  00                 	db	0
   169   00F82F  18                 	db	24
   170   00F830  3C                 	db	60
   171   00F831  3C                 	db	60
   172   00F832  18                 	db	24
   173   00F833  00                 	db	0
   174   00F834  00                 	db	0
   175   00F835  FF                 	db	255
   176   00F836  FF                 	db	255
   177   00F837  E7                 	db	231
   178   00F838  C3                 	db	195
   179   00F839  C3                 	db	195
   180   00F83A  E7                 	db	231
   181   00F83B  FF                 	db	255
   182   00F83C  FF                 	db	255
   183   00F83D  00                 	db	0
   184   00F83E  3C                 	db	60
   185   00F83F  66                 	db	102
   186   00F840  42                 	db	66
   187   00F841  42                 	db	66
   188   00F842  66                 	db	102
   189   00F843  3C                 	db	60
   190   00F844  00                 	db	0
   191   00F845  FF                 	db	255
   192   00F846  C3                 	db	195
   193   00F847  99                 	db	153
   194   00F848  BD                 	db	189
   195   00F849  BD                 	db	189
   196   00F84A  99                 	db	153
   197   00F84B  C3                 	db	195
   198   00F84C  FF                 	db	255
   199   00F84D  70                 	db	112
   200   00F84E  F8                 	db	248
   201   00F84F  88                 	db	136
   202   00F850  88                 	db	136
   203   00F851  FD                 	db	253
   204   00F852  7F                 	db	127
   205   00F853  07                 	db	7
   206   00F854  0F                 	db	15
   207   00F855  00                 	db	0
   208   00F856  4E                 	db	78
   209   00F857  5F                 	db	95
   210   00F858  F1                 	db	241
   211   00F859  F1                 	db	241
   212   00F85A  5F                 	db	95
   213   00F85B  4E                 	db	78
   214   00F85C  00                 	db	0
   215   00F85D  C0                 	db	192
   216   00F85E  E0                 	db	224
   217   00F85F  FF                 	db	255
   218   00F860  7F                 	db	127
   219   00F861  05                 	db	5
   220   00F862  05                 	db	5
   221   00F863  07                 	db	7
   222   00F864  07                 	db	7
   223   00F865  C0                 	db	192
   224   00F866  FF                 	db	255
   225   00F867  7F                 	db	127
   226   00F868  05                 	db	5
   227   00F869  05                 	db	5
   228   00F86A  65                 	db	101
   229   00F86B  7F                 	db	127
   230   00F86C  3F                 	db	63
   231   00F86D  99                 	db	153
   232   00F86E  5A                 	db	90
   233   00F86F  3C                 	db	60
   234   00F870  E7                 	db	231
   235   00F871  E7                 	db	231
   236   00F872  3C                 	db	60
   237   00F873  5A                 	db	90
   238   00F874  99                 	db	153
   239   00F875  7F                 	db	127
   240   00F876  3E                 	db	62
   241   00F877  3E                 	db	62
   242   00F878  1C                 	db	28
   243   00F879  1C                 	db	28
   244   00F87A  08                 	db	8
   245   00F87B  08                 	db	8
   246   00F87C  00                 	db	0
   247   00F87D  08                 	db	8
   248   00F87E  08                 	db	8
   249   00F87F  1C                 	db	28
   250   00F880  1C                 	db	28
   251   00F881  3E                 	db	62
   252   00F882  3E                 	db	62
   253   00F883  7F                 	db	127
   254   00F884  00                 	db	0
   255   00F885  00                 	db	0
   256   00F886  24                 	db	36
   257   00F887  66                 	db	102
   258   00F888  FF                 	db	255
   259   00F889  FF                 	db	255
   260   00F88A  66                 	db	102
   261   00F88B  24                 	db	36
   262   00F88C  00                 	db	0
   263   00F88D  00                 	db	0
   264   00F88E  5F                 	db	95
   265   00F88F  5F                 	db	95
   266   00F890  00                 	db	0
   267   00F891  00                 	db	0
   268   00F892  5F                 	db	95
   269   00F893  5F                 	db	95
   270   00F894  00                 	db	0
   271   00F895  06                 	db	6
   272   00F896  0F                 	db	15
   273   00F897  09                 	db	9
   274   00F898  7F                 	db	127
   275   00F899  7F                 	db	127
   276   00F89A  01                 	db	1
   277   00F89B  7F                 	db	127
   278   00F89C  7F                 	db	127
   279   00F89D  40                 	db	64
   280   00F89E  DA                 	db	218
   281   00F89F  BF                 	db	191
   282   00F8A0  A5                 	db	165
   283   00F8A1  FD                 	db	253
   284   00F8A2  59                 	db	89
   285   00F8A3  03                 	db	3
   286   00F8A4  02                 	db	2
   287   00F8A5  00                 	db	0
   288   00F8A6  70                 	db	112
   289   00F8A7  70                 	db	112
   290   00F8A8  70                 	db	112
   291   00F8A9  70                 	db	112
   292   00F8AA  70                 	db	112
   293   00F8AB  70                 	db	112
   294   00F8AC  00                 	db	0
   295   00F8AD  80                 	db	128
   296   00F8AE  94                 	db	148
   297   00F8AF  B6                 	db	182
   298   00F8B0  FF                 	db	255
   299   00F8B1  FF                 	db	255
   300   00F8B2  B6                 	db	182
   301   00F8B3  94                 	db	148
   302   00F8B4  80                 	db	128
   303   00F8B5  00                 	db	0
   304   00F8B6  04                 	db	4
   305   00F8B7  06                 	db	6
   306   00F8B8  7F                 	db	127
   307   00F8B9  7F                 	db	127
   308   00F8BA  06                 	db	6
   309   00F8BB  04                 	db	4
   310   00F8BC  00                 	db	0
   311   00F8BD  00                 	db	0
   312   00F8BE  10                 	db	16
   313   00F8BF  30                 	db	48
   314   00F8C0  7F                 	db	127
   315   00F8C1  7F                 	db	127
   316   00F8C2  30                 	db	48
   317   00F8C3  10                 	db	16
   318   00F8C4  00                 	db	0
   319   00F8C5  08                 	db	8
   320   00F8C6  08                 	db	8
   321   00F8C7  08                 	db	8
   322   00F8C8  2A                 	db	42
   323   00F8C9  3E                 	db	62
   324   00F8CA  1C                 	db	28
   325   00F8CB  08                 	db	8
   326   00F8CC  00                 	db	0
   327   00F8CD  08                 	db	8
   328   00F8CE  1C                 	db	28
   329   00F8CF  3E                 	db	62
   330   00F8D0  2A                 	db	42
   331   00F8D1  08                 	db	8
   332   00F8D2  08                 	db	8
   333   00F8D3  08                 	db	8
   334   00F8D4  00                 	db	0
   335   00F8D5  3C                 	db	60
   336   00F8D6  3C                 	db	60
   337   00F8D7  20                 	db	32
   338   00F8D8  20                 	db	32
   339   00F8D9  20                 	db	32
   340   00F8DA  20                 	db	32
   341   00F8DB  20                 	db	32
   342   00F8DC  00                 	db	0
   343   00F8DD  08                 	db	8
   344   00F8DE  1C                 	db	28
   345   00F8DF  3E                 	db	62
   346   00F8E0  08                 	db	8
   347   00F8E1  08                 	db	8
   348   00F8E2  3E                 	db	62
   349   00F8E3  1C                 	db	28
   350   00F8E4  08                 	db	8
   351   00F8E5  30                 	db	48
   352   00F8E6  38                 	db	56
   353   00F8E7  3C                 	db	60
   354   00F8E8  3E                 	db	62
   355   00F8E9  3E                 	db	62
   356   00F8EA  3C                 	db	60
   357   00F8EB  38                 	db	56
   358   00F8EC  30                 	db	48
   359   00F8ED  06                 	db	6
   360   00F8EE  0E                 	db	14
   361   00F8EF  1E                 	db	30
   362   00F8F0  3E                 	db	62
   363   00F8F1  3E                 	db	62
   364   00F8F2  1E                 	db	30
   365   00F8F3  0E                 	db	14
   366   00F8F4  06                 	db	6
   367   00F8F5  00                 	db	0
   368   00F8F6  00                 	db	0
   369   00F8F7  00                 	db	0
   370   00F8F8  00                 	db	0
   371   00F8F9  00                 	db	0
   372   00F8FA  00                 	db	0
   373   00F8FB  00                 	db	0
   374   00F8FC  00                 	db	0
   375   00F8FD  00                 	db	0
   376   00F8FE  06                 	db	6
   377   00F8FF  5F                 	db	95
   378   00F900  5F                 	db	95
   379   00F901  06                 	db	6
   380   00F902  00                 	db	0
   381   00F903  00                 	db	0
   382   00F904  00                 	db	0
   383   00F905  00                 	db	0
   384   00F906  07                 	db	7
   385   00F907  07                 	db	7
   386   00F908  00                 	db	0
   387   00F909  07                 	db	7
   388   00F90A  07                 	db	7
   389   00F90B  00                 	db	0
   390   00F90C  00                 	db	0
   391   00F90D  14                 	db	20
   392   00F90E  7F                 	db	127
   393   00F90F  7F                 	db	127
   394   00F910  14                 	db	20
   395   00F911  7F                 	db	127
   396   00F912  7F                 	db	127
   397   00F913  14                 	db	20
   398   00F914  00                 	db	0
   399   00F915  24                 	db	36
   400   00F916  2E                 	db	46
   401   00F917  6B                 	db	107
   402   00F918  6B                 	db	107
   403   00F919  3A                 	db	58
   404   00F91A  12                 	db	18
   405   00F91B  00                 	db	0
   406   00F91C  00                 	db	0
   407   00F91D  46                 	db	70
   408   00F91E  66                 	db	102
   409   00F91F  30                 	db	48
   410   00F920  18                 	db	24
   411   00F921  0C                 	db	12
   412   00F922  66                 	db	102
   413   00F923  62                 	db	98
   414   00F924  00                 	db	0
   415   00F925  30                 	db	48
   416   00F926  7A                 	db	122
   417   00F927  4F                 	db	79
   418   00F928  5D                 	db	93
   419   00F929  37                 	db	55
   420   00F92A  7A                 	db	122
   421   00F92B  48                 	db	72
   422   00F92C  00                 	db	0
   423   00F92D  04                 	db	4
   424   00F92E  07                 	db	7
   425   00F92F  03                 	db	3
   426   00F930  00                 	db	0
   427   00F931  00                 	db	0
   428   00F932  00                 	db	0
   429   00F933  00                 	db	0
   430   00F934  00                 	db	0
   431   00F935  00                 	db	0
   432   00F936  1C                 	db	28
   433   00F937  3E                 	db	62
   434   00F938  63                 	db	99
   435   00F939  41                 	db	65
   436   00F93A  00                 	db	0
   437   00F93B  00                 	db	0
   438   00F93C  00                 	db	0
   439   00F93D  00                 	db	0
   440   00F93E  41                 	db	65
   441   00F93F  63                 	db	99
   442   00F940  3E                 	db	62
   443   00F941  1C                 	db	28
   444   00F942  00                 	db	0
   445   00F943  00                 	db	0
   446   00F944  00                 	db	0
   447   00F945  08                 	db	8
   448   00F946  2A                 	db	42
   449   00F947  3E                 	db	62
   450   00F948  1C                 	db	28
   451   00F949  1C                 	db	28
   452   00F94A  3E                 	db	62
   453   00F94B  2A                 	db	42
   454   00F94C  08                 	db	8
   455   00F94D  08                 	db	8
   456   00F94E  08                 	db	8
   457   00F94F  3E                 	db	62
   458   00F950  3E                 	db	62
   459   00F951  08                 	db	8
   460   00F952  08                 	db	8
   461   00F953  00                 	db	0
   462   00F954  00                 	db	0
   463   00F955  00                 	db	0
   464   00F956  80                 	db	128
   465   00F957  E0                 	db	224
   466   00F958  60                 	db	96
   467   00F959  00                 	db	0
   468   00F95A  00                 	db	0
   469   00F95B  00                 	db	0
   470   00F95C  00                 	db	0
   471   00F95D  08                 	db	8
   472   00F95E  08                 	db	8
   473   00F95F  08                 	db	8
   474   00F960  08                 	db	8
   475   00F961  08                 	db	8
   476   00F962  08                 	db	8
   477   00F963  00                 	db	0
   478   00F964  00                 	db	0
   479   00F965  00                 	db	0
   480   00F966  00                 	db	0
   481   00F967  60                 	db	96
   482   00F968  60                 	db	96
   483   00F969  00                 	db	0
   484   00F96A  00                 	db	0
   485   00F96B  00                 	db	0
   486   00F96C  00                 	db	0
   487   00F96D  60                 	db	96
   488   00F96E  30                 	db	48
   489   00F96F  18                 	db	24
   490   00F970  0C                 	db	12
   491   00F971  06                 	db	6
   492   00F972  03                 	db	3
   493   00F973  01                 	db	1
   494   00F974  00                 	db	0
   495   00F975  3E                 	db	62
   496   00F976  7F                 	db	127
   497   00F977  71                 	db	113
   498   00F978  59                 	db	89
   499   00F979  4D                 	db	77
   500   00F97A  7F                 	db	127
   501   00F97B  3E                 	db	62
   502   00F97C  00                 	db	0
   503   00F97D  40                 	db	64
   504   00F97E  42                 	db	66
   505   00F97F  7F                 	db	127
   506   00F980  7F                 	db	127
   507   00F981  40                 	db	64
   508   00F982  40                 	db	64
   509   00F983  00                 	db	0
   510   00F984  00                 	db	0
   511   00F985  62                 	db	98
   512   00F986  73                 	db	115
   513   00F987  59                 	db	89
   514   00F988  49                 	db	73
   515   00F989  6F                 	db	111
   516   00F98A  66                 	db	102
   517   00F98B  00                 	db	0
   518   00F98C  00                 	db	0
   519   00F98D  22                 	db	34
   520   00F98E  63                 	db	99
   521   00F98F  49                 	db	73
   522   00F990  49                 	db	73
   523   00F991  7F                 	db	127
   524   00F992  36                 	db	54
   525   00F993  00                 	db	0
   526   00F994  00                 	db	0
   527   00F995  18                 	db	24
   528   00F996  1C                 	db	28
   529   00F997  16                 	db	22
   530   00F998  53                 	db	83
   531   00F999  7F                 	db	127
   532   00F99A  7F                 	db	127
   533   00F99B  50                 	db	80
   534   00F99C  00                 	db	0
   535   00F99D  27                 	db	39
   536   00F99E  67                 	db	103
   537   00F99F  45                 	db	69
   538   00F9A0  45                 	db	69
   539   00F9A1  7D                 	db	125
   540   00F9A2  39                 	db	57
   541   00F9A3  00                 	db	0
   542   00F9A4  00                 	db	0
   543   00F9A5  3C                 	db	60
   544   00F9A6  7E                 	db	126
   545   00F9A7  4B                 	db	75
   546   00F9A8  49                 	db	73
   547   00F9A9  79                 	db	121
   548   00F9AA  30                 	db	48
   549   00F9AB  00                 	db	0
   550   00F9AC  00                 	db	0
   551   00F9AD  03                 	db	3
   552   00F9AE  03                 	db	3
   553   00F9AF  71                 	db	113
   554   00F9B0  79                 	db	121
   555   00F9B1  0F                 	db	15
   556   00F9B2  07                 	db	7
   557   00F9B3  00                 	db	0
   558   00F9B4  00                 	db	0
   559   00F9B5  36                 	db	54
   560   00F9B6  7F                 	db	127
   561   00F9B7  49                 	db	73
   562   00F9B8  49                 	db	73
   563   00F9B9  7F                 	db	127
   564   00F9BA  36                 	db	54
   565   00F9BB  00                 	db	0
   566   00F9BC  00                 	db	0
   567   00F9BD  06                 	db	6
   568   00F9BE  4F                 	db	79
   569   00F9BF  49                 	db	73
   570   00F9C0  69                 	db	105
   571   00F9C1  3F                 	db	63
   572   00F9C2  1E                 	db	30
   573   00F9C3  00                 	db	0
   574   00F9C4  00                 	db	0
   575   00F9C5  00                 	db	0
   576   00F9C6  00                 	db	0
   577   00F9C7  66                 	db	102
   578   00F9C8  66                 	db	102
   579   00F9C9  00                 	db	0
   580   00F9CA  00                 	db	0
   581   00F9CB  00                 	db	0
   582   00F9CC  00                 	db	0
   583   00F9CD  00                 	db	0
   584   00F9CE  80                 	db	128
   585   00F9CF  E6                 	db	230
   586   00F9D0  66                 	db	102
   587   00F9D1  00                 	db	0
   588   00F9D2  00                 	db	0
   589   00F9D3  00                 	db	0
   590   00F9D4  00                 	db	0
   591   00F9D5  08                 	db	8
   592   00F9D6  1C                 	db	28
   593   00F9D7  36                 	db	54
   594   00F9D8  63                 	db	99
   595   00F9D9  41                 	db	65
   596   00F9DA  00                 	db	0
   597   00F9DB  00                 	db	0
   598   00F9DC  00                 	db	0
   599   00F9DD  24                 	db	36
   600   00F9DE  24                 	db	36
   601   00F9DF  24                 	db	36
   602   00F9E0  24                 	db	36
   603   00F9E1  24                 	db	36
   604   00F9E2  24                 	db	36
   605   00F9E3  00                 	db	0
   606   00F9E4  00                 	db	0
   607   00F9E5  00                 	db	0
   608   00F9E6  41                 	db	65
   609   00F9E7  63                 	db	99
   610   00F9E8  36                 	db	54
   611   00F9E9  1C                 	db	28
   612   00F9EA  08                 	db	8
   613   00F9EB  00                 	db	0
   614   00F9EC  00                 	db	0
   615   00F9ED  02                 	db	2
   616   00F9EE  03                 	db	3
   617   00F9EF  51                 	db	81
   618   00F9F0  59                 	db	89
   619   00F9F1  0F                 	db	15
   620   00F9F2  06                 	db	6
   621   00F9F3  00                 	db	0
   622   00F9F4  00                 	db	0
   623   00F9F5  3E                 	db	62
   624   00F9F6  7F                 	db	127
   625   00F9F7  41                 	db	65
   626   00F9F8  5D                 	db	93
   627   00F9F9  5D                 	db	93
   628   00F9FA  1F                 	db	31
   629   00F9FB  1E                 	db	30
   630   00F9FC  00                 	db	0
   631   00F9FD  7C                 	db	124
   632   00F9FE  7E                 	db	126
   633   00F9FF  13                 	db	19
   634   00FA00  13                 	db	19
   635   00FA01  7E                 	db	126
   636   00FA02  7C                 	db	124
   637   00FA03  00                 	db	0
   638   00FA04  00                 	db	0
   639   00FA05  41                 	db	65
   640   00FA06  7F                 	db	127
   641   00FA07  7F                 	db	127
   642   00FA08  49                 	db	73
   643   00FA09  49                 	db	73
   644   00FA0A  7F                 	db	127
   645   00FA0B  36                 	db	54
   646   00FA0C  00                 	db	0
   647   00FA0D  1C                 	db	28
   648   00FA0E  3E                 	db	62
   649   00FA0F  63                 	db	99
   650   00FA10  41                 	db	65
   651   00FA11  41                 	db	65
   652   00FA12  63                 	db	99
   653   00FA13  22                 	db	34
   654   00FA14  00                 	db	0
   655   00FA15  41                 	db	65
   656   00FA16  7F                 	db	127
   657   00FA17  7F                 	db	127
   658   00FA18  41                 	db	65
   659   00FA19  63                 	db	99
   660   00FA1A  3E                 	db	62
   661   00FA1B  1C                 	db	28
   662   00FA1C  00                 	db	0
   663   00FA1D  41                 	db	65
   664   00FA1E  7F                 	db	127
   665   00FA1F  7F                 	db	127
   666   00FA20  49                 	db	73
   667   00FA21  5D                 	db	93
   668   00FA22  41                 	db	65
   669   00FA23  63                 	db	99
   670   00FA24  00                 	db	0
   671   00FA25  41                 	db	65
   672   00FA26  7F                 	db	127
   673   00FA27  7F                 	db	127
   674   00FA28  49                 	db	73
   675   00FA29  1D                 	db	29
   676   00FA2A  01                 	db	1
   677   00FA2B  03                 	db	3
   678   00FA2C  00                 	db	0
   679   00FA2D  1C                 	db	28
   680   00FA2E  3E                 	db	62
   681   00FA2F  63                 	db	99
   682   00FA30  41                 	db	65
   683   00FA31  51                 	db	81
   684   00FA32  73                 	db	115
   685   00FA33  72                 	db	114
   686   00FA34  00                 	db	0
   687   00FA35  7F                 	db	127
   688   00FA36  7F                 	db	127
   689   00FA37  08                 	db	8
   690   00FA38  08                 	db	8
   691   00FA39  7F                 	db	127
   692   00FA3A  7F                 	db	127
   693   00FA3B  00                 	db	0
   694   00FA3C  00                 	db	0
   695   00FA3D  00                 	db	0
   696   00FA3E  41                 	db	65
   697   00FA3F  7F                 	db	127
   698   00FA40  7F                 	db	127
   699   00FA41  41                 	db	65
   700   00FA42  00                 	db	0
   701   00FA43  00                 	db	0
   702   00FA44  00                 	db	0
   703   00FA45  30                 	db	48
   704   00FA46  70                 	db	112
   705   00FA47  40                 	db	64
   706   00FA48  41                 	db	65
   707   00FA49  7F                 	db	127
   708   00FA4A  3F                 	db	63
   709   00FA4B  01                 	db	1
   710   00FA4C  00                 	db	0
   711   00FA4D  41                 	db	65
   712   00FA4E  7F                 	db	127
   713   00FA4F  7F                 	db	127
   714   00FA50  08                 	db	8
   715   00FA51  1C                 	db	28
   716   00FA52  77                 	db	119
   717   00FA53  63                 	db	99
   718   00FA54  00                 	db	0
   719   00FA55  41                 	db	65
   720   00FA56  7F                 	db	127
   721   00FA57  7F                 	db	127
   722   00FA58  41                 	db	65
   723   00FA59  40                 	db	64
   724   00FA5A  60                 	db	96
   725   00FA5B  70                 	db	112
   726   00FA5C  00                 	db	0
   727   00FA5D  00                 	db	0
   728   00FA5E  7F                 	db	127
   729   00FA5F  0E                 	db	14
   730   00FA60  1C                 	db	28
   731   00FA61  0E                 	db	14
   732   00FA62  7F                 	db	127
   733   00FA63  00                 	db	0
   734   00FA64  00                 	db	0
   735   00FA65  7F                 	db	127
   736   00FA66  7F                 	db	127
   737   00FA67  06                 	db	6
   738   00FA68  0C                 	db	12
   739   00FA69  18                 	db	24
   740   00FA6A  7F                 	db	127
   741   00FA6B  7F                 	db	127
   742   00FA6C  00                 	db	0
   743   00FA6D  1C                 	db	28
   744   00FA6E  3E                 	db	62
   745   00FA6F  63                 	db	99
   746   00FA70  41                 	db	65
   747   00FA71  63                 	db	99
   748   00FA72  3E                 	db	62
   749   00FA73  1C                 	db	28
   750   00FA74  00                 	db	0
   751   00FA75  41                 	db	65
   752   00FA76  7F                 	db	127
   753   00FA77  7F                 	db	127
   754   00FA78  49                 	db	73
   755   00FA79  09                 	db	9
   756   00FA7A  0F                 	db	15
   757   00FA7B  06                 	db	6
   758   00FA7C  00                 	db	0
   759   00FA7D  1E                 	db	30
   760   00FA7E  3F                 	db	63
   761   00FA7F  21                 	db	33
   762   00FA80  71                 	db	113
   763   00FA81  7F                 	db	127
   764   00FA82  5E                 	db	94
   765   00FA83  00                 	db	0
   766   00FA84  00                 	db	0
   767   00FA85  41                 	db	65
   768   00FA86  7F                 	db	127
   769   00FA87  7F                 	db	127
   770   00FA88  09                 	db	9
   771   00FA89  19                 	db	25
   772   00FA8A  7F                 	db	127
   773   00FA8B  66                 	db	102
   774   00FA8C  00                 	db	0
   775   00FA8D  26                 	db	38
   776   00FA8E  6F                 	db	111
   777   00FA8F  4D                 	db	77
   778   00FA90  59                 	db	89
   779   00FA91  73                 	db	115
   780   00FA92  32                 	db	50
   781   00FA93  00                 	db	0
   782   00FA94  00                 	db	0
   783   00FA95  03                 	db	3
   784   00FA96  41                 	db	65
   785   00FA97  7F                 	db	127
   786   00FA98  7F                 	db	127
   787   00FA99  41                 	db	65
   788   00FA9A  03                 	db	3
   789   00FA9B  00                 	db	0
   790   00FA9C  00                 	db	0
   791   00FA9D  7F                 	db	127
   792   00FA9E  7F                 	db	127
   793   00FA9F  40                 	db	64
   794   00FAA0  40                 	db	64
   795   00FAA1  7F                 	db	127
   796   00FAA2  7F                 	db	127
   797   00FAA3  00                 	db	0
   798   00FAA4  00                 	db	0
   799   00FAA5  1F                 	db	31
   800   00FAA6  3F                 	db	63
   801   00FAA7  60                 	db	96
   802   00FAA8  60                 	db	96
   803   00FAA9  3F                 	db	63
   804   00FAAA  1F                 	db	31
   805   00FAAB  00                 	db	0
   806   00FAAC  00                 	db	0
   807   00FAAD  7F                 	db	127
   808   00FAAE  7F                 	db	127
   809   00FAAF  30                 	db	48
   810   00FAB0  18                 	db	24
   811   00FAB1  30                 	db	48
   812   00FAB2  7F                 	db	127
   813   00FAB3  7F                 	db	127
   814   00FAB4  00                 	db	0
   815   00FAB5  43                 	db	67
   816   00FAB6  67                 	db	103
   817   00FAB7  3C                 	db	60
   818   00FAB8  18                 	db	24
   819   00FAB9  3C                 	db	60
   820   00FABA  67                 	db	103
   821   00FABB  43                 	db	67
   822   00FABC  00                 	db	0
   823   00FABD  07                 	db	7
   824   00FABE  4F                 	db	79
   825   00FABF  78                 	db	120
   826   00FAC0  78                 	db	120
   827   00FAC1  4F                 	db	79
   828   00FAC2  07                 	db	7
   829   00FAC3  00                 	db	0
   830   00FAC4  00                 	db	0
   831   00FAC5  47                 	db	71
   832   00FAC6  63                 	db	99
   833   00FAC7  71                 	db	113
   834   00FAC8  59                 	db	89
   835   00FAC9  4D                 	db	77
   836   00FACA  67                 	db	103
   837   00FACB  73                 	db	115
   838   00FACC  00                 	db	0
   839   00FACD  00                 	db	0
   840   00FACE  7F                 	db	127
   841   00FACF  7F                 	db	127
   842   00FAD0  41                 	db	65
   843   00FAD1  41                 	db	65
   844   00FAD2  00                 	db	0
   845   00FAD3  00                 	db	0
   846   00FAD4  00                 	db	0
   847   00FAD5  01                 	db	1
   848   00FAD6  03                 	db	3
   849   00FAD7  06                 	db	6
   850   00FAD8  0C                 	db	12
   851   00FAD9  18                 	db	24
   852   00FADA  30                 	db	48
   853   00FADB  60                 	db	96
   854   00FADC  00                 	db	0
   855   00FADD  00                 	db	0
   856   00FADE  41                 	db	65
   857   00FADF  41                 	db	65
   858   00FAE0  7F                 	db	127
   859   00FAE1  7F                 	db	127
   860   00FAE2  00                 	db	0
   861   00FAE3  00                 	db	0
   862   00FAE4  00                 	db	0
   863   00FAE5  08                 	db	8
   864   00FAE6  0C                 	db	12
   865   00FAE7  06                 	db	6
   866   00FAE8  03                 	db	3
   867   00FAE9  06                 	db	6
   868   00FAEA  0C                 	db	12
   869   00FAEB  08                 	db	8
   870   00FAEC  00                 	db	0
   871   00FAED  80                 	db	128
   872   00FAEE  80                 	db	128
   873   00FAEF  80                 	db	128
   874   00FAF0  80                 	db	128
   875   00FAF1  80                 	db	128
   876   00FAF2  80                 	db	128
   877   00FAF3  80                 	db	128
   878   00FAF4  80                 	db	128
   879   00FAF5  00                 	db	0
   880   00FAF6  00                 	db	0
   881   00FAF7  03                 	db	3
   882   00FAF8  07                 	db	7
   883   00FAF9  04                 	db	4
   884   00FAFA  00                 	db	0
   885   00FAFB  00                 	db	0
   886   00FAFC  00                 	db	0
   887   00FAFD  20                 	db	32
   888   00FAFE  74                 	db	116
   889   00FAFF  54                 	db	84
   890   00FB00  54                 	db	84
   891   00FB01  3C                 	db	60
   892   00FB02  78                 	db	120
   893   00FB03  40                 	db	64
   894   00FB04  00                 	db	0
   895   00FB05  41                 	db	65
   896   00FB06  7F                 	db	127
   897   00FB07  3F                 	db	63
   898   00FB08  48                 	db	72
   899   00FB09  48                 	db	72
   900   00FB0A  78                 	db	120
   901   00FB0B  30                 	db	48
   902   00FB0C  00                 	db	0
   903   00FB0D  38                 	db	56
   904   00FB0E  7C                 	db	124
   905   00FB0F  44                 	db	68
   906   00FB10  44                 	db	68
   907   00FB11  6C                 	db	108
   908   00FB12  28                 	db	40
   909   00FB13  00                 	db	0
   910   00FB14  00                 	db	0
   911   00FB15  30                 	db	48
   912   00FB16  78                 	db	120
   913   00FB17  48                 	db	72
   914   00FB18  49                 	db	73
   915   00FB19  3F                 	db	63
   916   00FB1A  7F                 	db	127
   917   00FB1B  40                 	db	64
   918   00FB1C  00                 	db	0
   919   00FB1D  38                 	db	56
   920   00FB1E  7C                 	db	124
   921   00FB1F  54                 	db	84
   922   00FB20  54                 	db	84
   923   00FB21  5C                 	db	92
   924   00FB22  18                 	db	24
   925   00FB23  00                 	db	0
   926   00FB24  00                 	db	0
   927   00FB25  48                 	db	72
   928   00FB26  7E                 	db	126
   929   00FB27  7F                 	db	127
   930   00FB28  49                 	db	73
   931   00FB29  03                 	db	3
   932   00FB2A  02                 	db	2
   933   00FB2B  00                 	db	0
   934   00FB2C  00                 	db	0
   935   00FB2D  98                 	db	152
   936   00FB2E  BC                 	db	188
   937   00FB2F  A4                 	db	164
   938   00FB30  A4                 	db	164
   939   00FB31  F8                 	db	248
   940   00FB32  7C                 	db	124
   941   00FB33  04                 	db	4
   942   00FB34  00                 	db	0
   943   00FB35  41                 	db	65
   944   00FB36  7F                 	db	127
   945   00FB37  7F                 	db	127
   946   00FB38  08                 	db	8
   947   00FB39  04                 	db	4
   948   00FB3A  7C                 	db	124
   949   00FB3B  78                 	db	120
   950   00FB3C  00                 	db	0
   951   00FB3D  00                 	db	0
   952   00FB3E  44                 	db	68
   953   00FB3F  7D                 	db	125
   954   00FB40  7D                 	db	125
   955   00FB41  40                 	db	64
   956   00FB42  00                 	db	0
   957   00FB43  00                 	db	0
   958   00FB44  00                 	db	0
   959   00FB45  60                 	db	96
   960   00FB46  E0                 	db	224
   961   00FB47  80                 	db	128
   962   00FB48  80                 	db	128
   963   00FB49  FD                 	db	253
   964   00FB4A  7D                 	db	125
   965   00FB4B  00                 	db	0
   966   00FB4C  00                 	db	0
   967   00FB4D  41                 	db	65
   968   00FB4E  7F                 	db	127
   969   00FB4F  7F                 	db	127
   970   00FB50  10                 	db	16
   971   00FB51  38                 	db	56
   972   00FB52  6C                 	db	108
   973   00FB53  44                 	db	68
   974   00FB54  00                 	db	0
   975   00FB55  00                 	db	0
   976   00FB56  41                 	db	65
   977   00FB57  7F                 	db	127
   978   00FB58  7F                 	db	127
   979   00FB59  40                 	db	64
   980   00FB5A  00                 	db	0
   981   00FB5B  00                 	db	0
   982   00FB5C  00                 	db	0
   983   00FB5D  7C                 	db	124
   984   00FB5E  7C                 	db	124
   985   00FB5F  18                 	db	24
   986   00FB60  38                 	db	56
   987   00FB61  1C                 	db	28
   988   00FB62  7C                 	db	124
   989   00FB63  78                 	db	120
   990   00FB64  00                 	db	0
   991   00FB65  7C                 	db	124
   992   00FB66  7C                 	db	124
   993   00FB67  04                 	db	4
   994   00FB68  04                 	db	4
   995   00FB69  7C                 	db	124
   996   00FB6A  78                 	db	120
   997   00FB6B  00                 	db	0
   998   00FB6C  00                 	db	0
   999   00FB6D  38                 	db	56
  1000   00FB6E  7C                 	db	124
  1001   00FB6F  44                 	db	68
  1002   00FB70  44                 	db	68
  1003   00FB71  7C                 	db	124
  1004   00FB72  38                 	db	56
  1005   00FB73  00                 	db	0
  1006   00FB74  00                 	db	0
  1007   00FB75  84                 	db	132
  1008   00FB76  FC                 	db	252
  1009   00FB77  F8                 	db	248
  1010   00FB78  A4                 	db	164
  1011   00FB79  24                 	db	36
  1012   00FB7A  3C                 	db	60
  1013   00FB7B  18                 	db	24
  1014   00FB7C  00                 	db	0
  1015   00FB7D  18                 	db	24
  1016   00FB7E  3C                 	db	60
  1017   00FB7F  24                 	db	36
  1018   00FB80  A4                 	db	164
  1019   00FB81  F8                 	db	248
  1020   00FB82  FC                 	db	252
  1021   00FB83  84                 	db	132
  1022   00FB84  00                 	db	0
  1023   00FB85  44                 	db	68
  1024   00FB86  7C                 	db	124
  1025   00FB87  78                 	db	120
  1026   00FB88  4C                 	db	76
  1027   00FB89  04                 	db	4
  1028   00FB8A  1C                 	db	28
  1029   00FB8B  18                 	db	24
  1030   00FB8C  00                 	db	0
  1031   00FB8D  48                 	db	72
  1032   00FB8E  5C                 	db	92
  1033   00FB8F  54                 	db	84
  1034   00FB90  54                 	db	84
  1035   00FB91  74                 	db	116
  1036   00FB92  24                 	db	36
  1037   00FB93  00                 	db	0
  1038   00FB94  00                 	db	0
  1039   00FB95  00                 	db	0
  1040   00FB96  04                 	db	4
  1041   00FB97  3E                 	db	62
  1042   00FB98  7F                 	db	127
  1043   00FB99  44                 	db	68
  1044   00FB9A  24                 	db	36
  1045   00FB9B  00                 	db	0
  1046   00FB9C  00                 	db	0
  1047   00FB9D  3C                 	db	60
  1048   00FB9E  7C                 	db	124
  1049   00FB9F  40                 	db	64
  1050   00FBA0  40                 	db	64
  1051   00FBA1  3C                 	db	60
  1052   00FBA2  7C                 	db	124
  1053   00FBA3  40                 	db	64
  1054   00FBA4  00                 	db	0
  1055   00FBA5  1C                 	db	28
  1056   00FBA6  3C                 	db	60
  1057   00FBA7  60                 	db	96
  1058   00FBA8  60                 	db	96
  1059   00FBA9  3C                 	db	60
  1060   00FBAA  1C                 	db	28
  1061   00FBAB  00                 	db	0
  1062   00FBAC  00                 	db	0
  1063   00FBAD  3C                 	db	60
  1064   00FBAE  7C                 	db	124
  1065   00FBAF  70                 	db	112
  1066   00FBB0  38                 	db	56
  1067   00FBB1  70                 	db	112
  1068   00FBB2  7C                 	db	124
  1069   00FBB3  3C                 	db	60
  1070   00FBB4  00                 	db	0
  1071   00FBB5  44                 	db	68
  1072   00FBB6  6C                 	db	108
  1073   00FBB7  38                 	db	56
  1074   00FBB8  10                 	db	16
  1075   00FBB9  38                 	db	56
  1076   00FBBA  6C                 	db	108
  1077   00FBBB  44                 	db	68
  1078   00FBBC  00                 	db	0
  1079   00FBBD  9C                 	db	156
  1080   00FBBE  BC                 	db	188
  1081   00FBBF  A0                 	db	160
  1082   00FBC0  A0                 	db	160
  1083   00FBC1  FC                 	db	252
  1084   00FBC2  7C                 	db	124
  1085   00FBC3  00                 	db	0
  1086   00FBC4  00                 	db	0
  1087   00FBC5  4C                 	db	76
  1088   00FBC6  64                 	db	100
  1089   00FBC7  74                 	db	116
  1090   00FBC8  5C                 	db	92
  1091   00FBC9  4C                 	db	76
  1092   00FBCA  64                 	db	100
  1093   00FBCB  00                 	db	0
  1094   00FBCC  00                 	db	0
  1095   00FBCD  08                 	db	8
  1096   00FBCE  08                 	db	8
  1097   00FBCF  3E                 	db	62
  1098   00FBD0  77                 	db	119
  1099   00FBD1  41                 	db	65
  1100   00FBD2  41                 	db	65
  1101   00FBD3  00                 	db	0
  1102   00FBD4  00                 	db	0
  1103   00FBD5  00                 	db	0
  1104   00FBD6  00                 	db	0
  1105   00FBD7  00                 	db	0
  1106   00FBD8  77                 	db	119
  1107   00FBD9  77                 	db	119
  1108   00FBDA  00                 	db	0
  1109   00FBDB  00                 	db	0
  1110   00FBDC  00                 	db	0
  1111   00FBDD  41                 	db	65
  1112   00FBDE  41                 	db	65
  1113   00FBDF  77                 	db	119
  1114   00FBE0  3E                 	db	62
  1115   00FBE1  08                 	db	8
  1116   00FBE2  08                 	db	8
  1117   00FBE3  00                 	db	0
  1118   00FBE4  00                 	db	0
  1119   00FBE5  02                 	db	2
  1120   00FBE6  03                 	db	3
  1121   00FBE7  01                 	db	1
  1122   00FBE8  03                 	db	3
  1123   00FBE9  02                 	db	2
  1124   00FBEA  03                 	db	3
  1125   00FBEB  01                 	db	1
  1126   00FBEC  00                 	db	0
  1127   00FBED  70                 	db	112
  1128   00FBEE  78                 	db	120
  1129   00FBEF  4C                 	db	76
  1130   00FBF0  46                 	db	70
  1131   00FBF1  4C                 	db	76
  1132   00FBF2  78                 	db	120
  1133   00FBF3  70                 	db	112
  1134   00FBF4  00                 	db	0
  1135   00FBF5  0E                 	db	14
  1136   00FBF6  9F                 	db	159
  1137   00FBF7  91                 	db	145
  1138   00FBF8  B1                 	db	177
  1139   00FBF9  FB                 	db	251
  1140   00FBFA  4A                 	db	74
  1141   00FBFB  00                 	db	0
  1142   00FBFC  00                 	db	0
  1143   00FBFD  3A                 	db	58
  1144   00FBFE  7A                 	db	122
  1145   00FBFF  40                 	db	64
  1146   00FC00  40                 	db	64
  1147   00FC01  7A                 	db	122
  1148   00FC02  7A                 	db	122
  1149   00FC03  40                 	db	64
  1150   00FC04  00                 	db	0
  1151   00FC05  38                 	db	56
  1152   00FC06  7C                 	db	124
  1153   00FC07  54                 	db	84
  1154   00FC08  55                 	db	85
  1155   00FC09  5D                 	db	93
  1156   00FC0A  19                 	db	25
  1157   00FC0B  00                 	db	0
  1158   00FC0C  00                 	db	0
  1159   00FC0D  02                 	db	2
  1160   00FC0E  23                 	db	35
  1161   00FC0F  75                 	db	117
  1162   00FC10  55                 	db	85
  1163   00FC11  55                 	db	85
  1164   00FC12  7D                 	db	125
  1165   00FC13  7B                 	db	123
  1166   00FC14  42                 	db	66
  1167   00FC15  21                 	db	33
  1168   00FC16  75                 	db	117
  1169   00FC17  54                 	db	84
  1170   00FC18  54                 	db	84
  1171   00FC19  7D                 	db	125
  1172   00FC1A  79                 	db	121
  1173   00FC1B  40                 	db	64
  1174   00FC1C  00                 	db	0
  1175   00FC1D  21                 	db	33
  1176   00FC1E  75                 	db	117
  1177   00FC1F  55                 	db	85
  1178   00FC20  54                 	db	84
  1179   00FC21  7C                 	db	124
  1180   00FC22  78                 	db	120
  1181   00FC23  40                 	db	64
  1182   00FC24  00                 	db	0
  1183   00FC25  20                 	db	32
  1184   00FC26  74                 	db	116
  1185   00FC27  57                 	db	87
  1186   00FC28  57                 	db	87
  1187   00FC29  7C                 	db	124
  1188   00FC2A  78                 	db	120
  1189   00FC2B  40                 	db	64
  1190   00FC2C  00                 	db	0
  1191   00FC2D  18                 	db	24
  1192   00FC2E  3C                 	db	60
  1193   00FC2F  A4                 	db	164
  1194   00FC30  A4                 	db	164
  1195   00FC31  E4                 	db	228
  1196   00FC32  40                 	db	64
  1197   00FC33  00                 	db	0
  1198   00FC34  00                 	db	0
  1199   00FC35  02                 	db	2
  1200   00FC36  3B                 	db	59
  1201   00FC37  7D                 	db	125
  1202   00FC38  55                 	db	85
  1203   00FC39  55                 	db	85
  1204   00FC3A  5D                 	db	93
  1205   00FC3B  1B                 	db	27
  1206   00FC3C  02                 	db	2
  1207   00FC3D  39                 	db	57
  1208   00FC3E  7D                 	db	125
  1209   00FC3F  54                 	db	84
  1210   00FC40  54                 	db	84
  1211   00FC41  5D                 	db	93
  1212   00FC42  19                 	db	25
  1213   00FC43  00                 	db	0
  1214   00FC44  00                 	db	0
  1215   00FC45  39                 	db	57
  1216   00FC46  7D                 	db	125
  1217   00FC47  55                 	db	85
  1218   00FC48  54                 	db	84
  1219   00FC49  5C                 	db	92
  1220   00FC4A  18                 	db	24
  1221   00FC4B  00                 	db	0
  1222   00FC4C  00                 	db	0
  1223   00FC4D  01                 	db	1
  1224   00FC4E  45                 	db	69
  1225   00FC4F  7C                 	db	124
  1226   00FC50  7C                 	db	124
  1227   00FC51  41                 	db	65
  1228   00FC52  01                 	db	1
  1229   00FC53  00                 	db	0
  1230   00FC54  00                 	db	0
  1231   00FC55  02                 	db	2
  1232   00FC56  03                 	db	3
  1233   00FC57  45                 	db	69
  1234   00FC58  7D                 	db	125
  1235   00FC59  7D                 	db	125
  1236   00FC5A  43                 	db	67
  1237   00FC5B  02                 	db	2
  1238   00FC5C  00                 	db	0
  1239   00FC5D  01                 	db	1
  1240   00FC5E  45                 	db	69
  1241   00FC5F  7D                 	db	125
  1242   00FC60  7C                 	db	124
  1243   00FC61  40                 	db	64
  1244   00FC62  00                 	db	0
  1245   00FC63  00                 	db	0
  1246   00FC64  00                 	db	0
  1247   00FC65  79                 	db	121
  1248   00FC66  7D                 	db	125
  1249   00FC67  16                 	db	22
  1250   00FC68  12                 	db	18
  1251   00FC69  16                 	db	22
  1252   00FC6A  7D                 	db	125
  1253   00FC6B  79                 	db	121
  1254   00FC6C  00                 	db	0
  1255   00FC6D  70                 	db	112
  1256   00FC6E  78                 	db	120
  1257   00FC6F  2B                 	db	43
  1258   00FC70  2B                 	db	43
  1259   00FC71  78                 	db	120
  1260   00FC72  70                 	db	112
  1261   00FC73  00                 	db	0
  1262   00FC74  00                 	db	0
  1263   00FC75  44                 	db	68
  1264   00FC76  7C                 	db	124
  1265   00FC77  7C                 	db	124
  1266   00FC78  55                 	db	85
  1267   00FC79  55                 	db	85
  1268   00FC7A  45                 	db	69
  1269   00FC7B  00                 	db	0
  1270   00FC7C  00                 	db	0
  1271   00FC7D  20                 	db	32
  1272   00FC7E  74                 	db	116
  1273   00FC7F  54                 	db	84
  1274   00FC80  54                 	db	84
  1275   00FC81  7C                 	db	124
  1276   00FC82  7C                 	db	124
  1277   00FC83  54                 	db	84
  1278   00FC84  54                 	db	84
  1279   00FC85  7C                 	db	124
  1280   00FC86  7E                 	db	126
  1281   00FC87  0B                 	db	11
  1282   00FC88  09                 	db	9
  1283   00FC89  7F                 	db	127
  1284   00FC8A  7F                 	db	127
  1285   00FC8B  49                 	db	73
  1286   00FC8C  00                 	db	0
  1287   00FC8D  32                 	db	50
  1288   00FC8E  7B                 	db	123
  1289   00FC8F  49                 	db	73
  1290   00FC90  49                 	db	73
  1291   00FC91  7B                 	db	123
  1292   00FC92  32                 	db	50
  1293   00FC93  00                 	db	0
  1294   00FC94  00                 	db	0
  1295   00FC95  32                 	db	50
  1296   00FC96  7A                 	db	122
  1297   00FC97  48                 	db	72
  1298   00FC98  48                 	db	72
  1299   00FC99  7A                 	db	122
  1300   00FC9A  32                 	db	50
  1301   00FC9B  00                 	db	0
  1302   00FC9C  00                 	db	0
  1303   00FC9D  32                 	db	50
  1304   00FC9E  7A                 	db	122
  1305   00FC9F  4A                 	db	74
  1306   00FCA0  48                 	db	72
  1307   00FCA1  78                 	db	120
  1308   00FCA2  30                 	db	48
  1309   00FCA3  00                 	db	0
  1310   00FCA4  00                 	db	0
  1311   00FCA5  3A                 	db	58
  1312   00FCA6  7B                 	db	123
  1313   00FCA7  41                 	db	65
  1314   00FCA8  41                 	db	65
  1315   00FCA9  7B                 	db	123
  1316   00FCAA  7A                 	db	122
  1317   00FCAB  40                 	db	64
  1318   00FCAC  00                 	db	0
  1319   00FCAD  3A                 	db	58
  1320   00FCAE  7A                 	db	122
  1321   00FCAF  42                 	db	66
  1322   00FCB0  40                 	db	64
  1323   00FCB1  78                 	db	120
  1324   00FCB2  78                 	db	120
  1325   00FCB3  40                 	db	64
  1326   00FCB4  00                 	db	0
  1327   00FCB5  9A                 	db	154
  1328   00FCB6  BA                 	db	186
  1329   00FCB7  A0                 	db	160
  1330   00FCB8  A0                 	db	160
  1331   00FCB9  FA                 	db	250
  1332   00FCBA  7A                 	db	122
  1333   00FCBB  00                 	db	0
  1334   00FCBC  00                 	db	0
  1335   00FCBD  01                 	db	1
  1336   00FCBE  19                 	db	25
  1337   00FCBF  3C                 	db	60
  1338   00FCC0  66                 	db	102
  1339   00FCC1  66                 	db	102
  1340   00FCC2  3C                 	db	60
  1341   00FCC3  19                 	db	25
  1342   00FCC4  01                 	db	1
  1343   00FCC5  3D                 	db	61
  1344   00FCC6  7D                 	db	125
  1345   00FCC7  40                 	db	64
  1346   00FCC8  40                 	db	64
  1347   00FCC9  7D                 	db	125
  1348   00FCCA  3D                 	db	61
  1349   00FCCB  00                 	db	0
  1350   00FCCC  00                 	db	0
  1351   00FCCD  18                 	db	24
  1352   00FCCE  3C                 	db	60
  1353   00FCCF  24                 	db	36
  1354   00FCD0  E7                 	db	231
  1355   00FCD1  E7                 	db	231
  1356   00FCD2  24                 	db	36
  1357   00FCD3  24                 	db	36
  1358   00FCD4  00                 	db	0
  1359   00FCD5  68                 	db	104
  1360   00FCD6  7E                 	db	126
  1361   00FCD7  7F                 	db	127
  1362   00FCD8  49                 	db	73
  1363   00FCD9  43                 	db	67
  1364   00FCDA  66                 	db	102
  1365   00FCDB  20                 	db	32
  1366   00FCDC  00                 	db	0
  1367   00FCDD  2B                 	db	43
  1368   00FCDE  2F                 	db	47
  1369   00FCDF  FC                 	db	252
  1370   00FCE0  FC                 	db	252
  1371   00FCE1  2F                 	db	47
  1372   00FCE2  2B                 	db	43
  1373   00FCE3  00                 	db	0
  1374   00FCE4  00                 	db	0
  1375   00FCE5  FF                 	db	255
  1376   00FCE6  FF                 	db	255
  1377   00FCE7  09                 	db	9
  1378   00FCE8  09                 	db	9
  1379   00FCE9  2F                 	db	47
  1380   00FCEA  F6                 	db	246
  1381   00FCEB  F8                 	db	248
  1382   00FCEC  A0                 	db	160
  1383   00FCED  40                 	db	64
  1384   00FCEE  C0                 	db	192
  1385   00FCEF  88                 	db	136
  1386   00FCF0  FE                 	db	254
  1387   00FCF1  7F                 	db	127
  1388   00FCF2  09                 	db	9
  1389   00FCF3  03                 	db	3
  1390   00FCF4  02                 	db	2
  1391   00FCF5  20                 	db	32
  1392   00FCF6  74                 	db	116
  1393   00FCF7  54                 	db	84
  1394   00FCF8  55                 	db	85
  1395   00FCF9  7D                 	db	125
  1396   00FCFA  79                 	db	121
  1397   00FCFB  40                 	db	64
  1398   00FCFC  00                 	db	0
  1399   00FCFD  00                 	db	0
  1400   00FCFE  44                 	db	68
  1401   00FCFF  7D                 	db	125
  1402   00FD00  7D                 	db	125
  1403   00FD01  41                 	db	65
  1404   00FD02  00                 	db	0
  1405   00FD03  00                 	db	0
  1406   00FD04  00                 	db	0
  1407   00FD05  30                 	db	48
  1408   00FD06  78                 	db	120
  1409   00FD07  48                 	db	72
  1410   00FD08  4A                 	db	74
  1411   00FD09  7A                 	db	122
  1412   00FD0A  32                 	db	50
  1413   00FD0B  00                 	db	0
  1414   00FD0C  00                 	db	0
  1415   00FD0D  38                 	db	56
  1416   00FD0E  78                 	db	120
  1417   00FD0F  40                 	db	64
  1418   00FD10  42                 	db	66
  1419   00FD11  7A                 	db	122
  1420   00FD12  7A                 	db	122
  1421   00FD13  40                 	db	64
  1422   00FD14  00                 	db	0
  1423   00FD15  7A                 	db	122
  1424   00FD16  7A                 	db	122
  1425   00FD17  0A                 	db	10
  1426   00FD18  0A                 	db	10
  1427   00FD19  7A                 	db	122
  1428   00FD1A  70                 	db	112
  1429   00FD1B  00                 	db	0
  1430   00FD1C  00                 	db	0
  1431   00FD1D  7D                 	db	125
  1432   00FD1E  7D                 	db	125
  1433   00FD1F  19                 	db	25
  1434   00FD20  31                 	db	49
  1435   00FD21  7D                 	db	125
  1436   00FD22  7D                 	db	125
  1437   00FD23  00                 	db	0
  1438   00FD24  00                 	db	0
  1439   00FD25  00                 	db	0
  1440   00FD26  26                 	db	38
  1441   00FD27  2F                 	db	47
  1442   00FD28  29                 	db	41
  1443   00FD29  2F                 	db	47
  1444   00FD2A  2F                 	db	47
  1445   00FD2B  28                 	db	40
  1446   00FD2C  00                 	db	0
  1447   00FD2D  00                 	db	0
  1448   00FD2E  26                 	db	38
  1449   00FD2F  2F                 	db	47
  1450   00FD30  29                 	db	41
  1451   00FD31  2F                 	db	47
  1452   00FD32  26                 	db	38
  1453   00FD33  00                 	db	0
  1454   00FD34  00                 	db	0
  1455   00FD35  30                 	db	48
  1456   00FD36  78                 	db	120
  1457   00FD37  4D                 	db	77
  1458   00FD38  45                 	db	69
  1459   00FD39  60                 	db	96
  1460   00FD3A  20                 	db	32
  1461   00FD3B  00                 	db	0
  1462   00FD3C  00                 	db	0
  1463   00FD3D  38                 	db	56
  1464   00FD3E  38                 	db	56
  1465   00FD3F  08                 	db	8
  1466   00FD40  08                 	db	8
  1467   00FD41  08                 	db	8
  1468   00FD42  08                 	db	8
  1469   00FD43  00                 	db	0
  1470   00FD44  00                 	db	0
  1471   00FD45  08                 	db	8
  1472   00FD46  08                 	db	8
  1473   00FD47  08                 	db	8
  1474   00FD48  08                 	db	8
  1475   00FD49  38                 	db	56
  1476   00FD4A  38                 	db	56
  1477   00FD4B  00                 	db	0
  1478   00FD4C  00                 	db	0
  1479   00FD4D  4F                 	db	79
  1480   00FD4E  6F                 	db	111
  1481   00FD4F  30                 	db	48
  1482   00FD50  18                 	db	24
  1483   00FD51  CC                 	db	204
  1484   00FD52  EE                 	db	238
  1485   00FD53  BB                 	db	187
  1486   00FD54  91                 	db	145
  1487   00FD55  4F                 	db	79
  1488   00FD56  6F                 	db	111
  1489   00FD57  30                 	db	48
  1490   00FD58  18                 	db	24
  1491   00FD59  6C                 	db	108
  1492   00FD5A  76                 	db	118
  1493   00FD5B  FB                 	db	251
  1494   00FD5C  F9                 	db	249
  1495   00FD5D  00                 	db	0
  1496   00FD5E  00                 	db	0
  1497   00FD5F  00                 	db	0
  1498   00FD60  7B                 	db	123
  1499   00FD61  7B                 	db	123
  1500   00FD62  00                 	db	0
  1501   00FD63  00                 	db	0
  1502   00FD64  00                 	db	0
  1503   00FD65  08                 	db	8
  1504   00FD66  1C                 	db	28
  1505   00FD67  36                 	db	54
  1506   00FD68  22                 	db	34
  1507   00FD69  08                 	db	8
  1508   00FD6A  1C                 	db	28
  1509   00FD6B  36                 	db	54
  1510   00FD6C  22                 	db	34
  1511   00FD6D  22                 	db	34
  1512   00FD6E  36                 	db	54
  1513   00FD6F  1C                 	db	28
  1514   00FD70  08                 	db	8
  1515   00FD71  22                 	db	34
  1516   00FD72  36                 	db	54
  1517   00FD73  1C                 	db	28
  1518   00FD74  08                 	db	8
  1519   00FD75  AA                 	db	170
  1520   00FD76  00                 	db	0
  1521   00FD77  55                 	db	85
  1522   00FD78  00                 	db	0
  1523   00FD79  AA                 	db	170
  1524   00FD7A  00                 	db	0
  1525   00FD7B  55                 	db	85
  1526   00FD7C  00                 	db	0
  1527   00FD7D  AA                 	db	170
  1528   00FD7E  55                 	db	85
  1529   00FD7F  AA                 	db	170
  1530   00FD80  55                 	db	85
  1531   00FD81  AA                 	db	170
  1532   00FD82  55                 	db	85
  1533   00FD83  AA                 	db	170
  1534   00FD84  55                 	db	85
  1535   00FD85  DD                 	db	221
  1536   00FD86  FF                 	db	255
  1537   00FD87  AA                 	db	170
  1538   00FD88  77                 	db	119
  1539   00FD89  DD                 	db	221
  1540   00FD8A  AA                 	db	170
  1541   00FD8B  FF                 	db	255
  1542   00FD8C  77                 	db	119
  1543   00FD8D  00                 	db	0
  1544   00FD8E  00                 	db	0
  1545   00FD8F  00                 	db	0
  1546   00FD90  FF                 	db	255
  1547   00FD91  FF                 	db	255
  1548   00FD92  00                 	db	0
  1549   00FD93  00                 	db	0
  1550   00FD94  00                 	db	0
  1551   00FD95  10                 	db	16
  1552   00FD96  10                 	db	16
  1553   00FD97  10                 	db	16
  1554   00FD98  FF                 	db	255
  1555   00FD99  FF                 	db	255
  1556   00FD9A  00                 	db	0
  1557   00FD9B  00                 	db	0
  1558   00FD9C  00                 	db	0
  1559   00FD9D  14                 	db	20
  1560   00FD9E  14                 	db	20
  1561   00FD9F  14                 	db	20
  1562   00FDA0  FF                 	db	255
  1563   00FDA1  FF                 	db	255
  1564   00FDA2  00                 	db	0
  1565   00FDA3  00                 	db	0
  1566   00FDA4  00                 	db	0
  1567   00FDA5  10                 	db	16
  1568   00FDA6  10                 	db	16
  1569   00FDA7  FF                 	db	255
  1570   00FDA8  FF                 	db	255
  1571   00FDA9  00                 	db	0
  1572   00FDAA  FF                 	db	255
  1573   00FDAB  FF                 	db	255
  1574   00FDAC  00                 	db	0
  1575   00FDAD  10                 	db	16
  1576   00FDAE  10                 	db	16
  1577   00FDAF  F0                 	db	240
  1578   00FDB0  F0                 	db	240
  1579   00FDB1  10                 	db	16
  1580   00FDB2  F0                 	db	240
  1581   00FDB3  F0                 	db	240
  1582   00FDB4  00                 	db	0
  1583   00FDB5  14                 	db	20
  1584   00FDB6  14                 	db	20
  1585   00FDB7  14                 	db	20
  1586   00FDB8  FC                 	db	252
  1587   00FDB9  FC                 	db	252
  1588   00FDBA  00                 	db	0
  1589   00FDBB  00                 	db	0
  1590   00FDBC  00                 	db	0
  1591   00FDBD  14                 	db	20
  1592   00FDBE  14                 	db	20
  1593   00FDBF  F7                 	db	247
  1594   00FDC0  F7                 	db	247
  1595   00FDC1  00                 	db	0
  1596   00FDC2  FF                 	db	255
  1597   00FDC3  FF                 	db	255
  1598   00FDC4  00                 	db	0
  1599   00FDC5  00                 	db	0
  1600   00FDC6  00                 	db	0
  1601   00FDC7  FF                 	db	255
  1602   00FDC8  FF                 	db	255
  1603   00FDC9  00                 	db	0
  1604   00FDCA  FF                 	db	255
  1605   00FDCB  FF                 	db	255
  1606   00FDCC  00                 	db	0
  1607   00FDCD  14                 	db	20
  1608   00FDCE  14                 	db	20
  1609   00FDCF  F4                 	db	244
  1610   00FDD0  F4                 	db	244
  1611   00FDD1  04                 	db	4
  1612   00FDD2  FC                 	db	252
  1613   00FDD3  FC                 	db	252
  1614   00FDD4  00                 	db	0
  1615   00FDD5  14                 	db	20
  1616   00FDD6  14                 	db	20
  1617   00FDD7  17                 	db	23
  1618   00FDD8  17                 	db	23
  1619   00FDD9  10                 	db	16
  1620   00FDDA  1F                 	db	31
  1621   00FDDB  1F                 	db	31
  1622   00FDDC  00                 	db	0
  1623   00FDDD  10                 	db	16
  1624   00FDDE  10                 	db	16
  1625   00FDDF  1F                 	db	31
  1626   00FDE0  1F                 	db	31
  1627   00FDE1  10                 	db	16
  1628   00FDE2  1F                 	db	31
  1629   00FDE3  1F                 	db	31
  1630   00FDE4  00                 	db	0
  1631   00FDE5  14                 	db	20
  1632   00FDE6  14                 	db	20
  1633   00FDE7  14                 	db	20
  1634   00FDE8  1F                 	db	31
  1635   00FDE9  1F                 	db	31
  1636   00FDEA  00                 	db	0
  1637   00FDEB  00                 	db	0
  1638   00FDEC  00                 	db	0
  1639   00FDED  10                 	db	16
  1640   00FDEE  10                 	db	16
  1641   00FDEF  10                 	db	16
  1642   00FDF0  F0                 	db	240
  1643   00FDF1  F0                 	db	240
  1644   00FDF2  00                 	db	0
  1645   00FDF3  00                 	db	0
  1646   00FDF4  00                 	db	0
  1647   00FDF5  00                 	db	0
  1648   00FDF6  00                 	db	0
  1649   00FDF7  00                 	db	0
  1650   00FDF8  1F                 	db	31
  1651   00FDF9  1F                 	db	31
  1652   00FDFA  10                 	db	16
  1653   00FDFB  10                 	db	16
  1654   00FDFC  10                 	db	16
  1655   00FDFD  10                 	db	16
  1656   00FDFE  10                 	db	16
  1657   00FDFF  10                 	db	16
  1658   00FE00  1F                 	db	31
  1659   00FE01  1F                 	db	31
  1660   00FE02  10                 	db	16
  1661   00FE03  10                 	db	16
  1662   00FE04  10                 	db	16
  1663   00FE05  10                 	db	16
  1664   00FE06  10                 	db	16
  1665   00FE07  10                 	db	16
  1666   00FE08  F0                 	db	240
  1667   00FE09  F0                 	db	240
  1668   00FE0A  10                 	db	16
  1669   00FE0B  10                 	db	16
  1670   00FE0C  10                 	db	16
  1671   00FE0D  00                 	db	0
  1672   00FE0E  00                 	db	0
  1673   00FE0F  00                 	db	0
  1674   00FE10  FF                 	db	255
  1675   00FE11  FF                 	db	255
  1676   00FE12  10                 	db	16
  1677   00FE13  10                 	db	16
  1678   00FE14  10                 	db	16
  1679   00FE15  10                 	db	16
  1680   00FE16  10                 	db	16
  1681   00FE17  10                 	db	16
  1682   00FE18  10                 	db	16
  1683   00FE19  10                 	db	16
  1684   00FE1A  10                 	db	16
  1685   00FE1B  10                 	db	16
  1686   00FE1C  10                 	db	16
  1687   00FE1D  10                 	db	16
  1688   00FE1E  10                 	db	16
  1689   00FE1F  10                 	db	16
  1690   00FE20  FF                 	db	255
  1691   00FE21  FF                 	db	255
  1692   00FE22  10                 	db	16
  1693   00FE23  10                 	db	16
  1694   00FE24  10                 	db	16
  1695   00FE25  00                 	db	0
  1696   00FE26  00                 	db	0
  1697   00FE27  00                 	db	0
  1698   00FE28  FF                 	db	255
  1699   00FE29  FF                 	db	255
  1700   00FE2A  14                 	db	20
  1701   00FE2B  14                 	db	20
  1702   00FE2C  14                 	db	20
  1703   00FE2D  00                 	db	0
  1704   00FE2E  00                 	db	0
  1705   00FE2F  FF                 	db	255
  1706   00FE30  FF                 	db	255
  1707   00FE31  00                 	db	0
  1708   00FE32  FF                 	db	255
  1709   00FE33  FF                 	db	255
  1710   00FE34  10                 	db	16
  1711   00FE35  00                 	db	0
  1712   00FE36  00                 	db	0
  1713   00FE37  1F                 	db	31
  1714   00FE38  1F                 	db	31
  1715   00FE39  10                 	db	16
  1716   00FE3A  17                 	db	23
  1717   00FE3B  17                 	db	23
  1718   00FE3C  14                 	db	20
  1719   00FE3D  00                 	db	0
  1720   00FE3E  00                 	db	0
  1721   00FE3F  FC                 	db	252
  1722   00FE40  FC                 	db	252
  1723   00FE41  04                 	db	4
  1724   00FE42  F4                 	db	244
  1725   00FE43  F4                 	db	244
  1726   00FE44  14                 	db	20
  1727   00FE45  14                 	db	20
  1728   00FE46  14                 	db	20
  1729   00FE47  17                 	db	23
  1730   00FE48  17                 	db	23
  1731   00FE49  10                 	db	16
  1732   00FE4A  17                 	db	23
  1733   00FE4B  17                 	db	23
  1734   00FE4C  14                 	db	20
  1735   00FE4D  14                 	db	20
  1736   00FE4E  14                 	db	20
  1737   00FE4F  F4                 	db	244
  1738   00FE50  F4                 	db	244
  1739   00FE51  04                 	db	4
  1740   00FE52  F4                 	db	244
  1741   00FE53  F4                 	db	244
  1742   00FE54  14                 	db	20
  1743   00FE55  00                 	db	0
  1744   00FE56  00                 	db	0
  1745   00FE57  FF                 	db	255
  1746   00FE58  FF                 	db	255
  1747   00FE59  00                 	db	0
  1748   00FE5A  F7                 	db	247
  1749   00FE5B  F7                 	db	247
  1750   00FE5C  14                 	db	20
  1751   00FE5D  14                 	db	20
  1752   00FE5E  14                 	db	20
  1753   00FE5F  14                 	db	20
  1754   00FE60  14                 	db	20
  1755   00FE61  14                 	db	20
  1756   00FE62  14                 	db	20
  1757   00FE63  14                 	db	20
  1758   00FE64  14                 	db	20
  1759   00FE65  14                 	db	20
  1760   00FE66  14                 	db	20
  1761   00FE67  F7                 	db	247
  1762   00FE68  F7                 	db	247
  1763   00FE69  00                 	db	0
  1764   00FE6A  F7                 	db	247
  1765   00FE6B  F7                 	db	247
  1766   00FE6C  14                 	db	20
  1767   00FE6D  14                 	db	20
  1768   00FE6E  14                 	db	20
  1769   00FE6F  14                 	db	20
  1770   00FE70  17                 	db	23
  1771   00FE71  17                 	db	23
  1772   00FE72  14                 	db	20
  1773   00FE73  14                 	db	20
  1774   00FE74  14                 	db	20
  1775   00FE75  10                 	db	16
  1776   00FE76  10                 	db	16
  1777   00FE77  1F                 	db	31
  1778   00FE78  1F                 	db	31
  1779   00FE79  10                 	db	16
  1780   00FE7A  1F                 	db	31
  1781   00FE7B  1F                 	db	31
  1782   00FE7C  10                 	db	16
  1783   00FE7D  14                 	db	20
  1784   00FE7E  14                 	db	20
  1785   00FE7F  14                 	db	20
  1786   00FE80  F4                 	db	244
  1787   00FE81  F4                 	db	244
  1788   00FE82  14                 	db	20
  1789   00FE83  14                 	db	20
  1790   00FE84  14                 	db	20
  1791   00FE85  10                 	db	16
  1792   00FE86  10                 	db	16
  1793   00FE87  F0                 	db	240
  1794   00FE88  F0                 	db	240
  1795   00FE89  10                 	db	16
  1796   00FE8A  F0                 	db	240
  1797   00FE8B  F0                 	db	240
  1798   00FE8C  10                 	db	16
  1799   00FE8D  00                 	db	0
  1800   00FE8E  00                 	db	0
  1801   00FE8F  1F                 	db	31
  1802   00FE90  1F                 	db	31
  1803   00FE91  10                 	db	16
  1804   00FE92  1F                 	db	31
  1805   00FE93  1F                 	db	31
  1806   00FE94  10                 	db	16
  1807   00FE95  00                 	db	0
  1808   00FE96  00                 	db	0
  1809   00FE97  00                 	db	0
  1810   00FE98  1F                 	db	31
  1811   00FE99  1F                 	db	31
  1812   00FE9A  14                 	db	20
  1813   00FE9B  14                 	db	20
  1814   00FE9C  14                 	db	20
  1815   00FE9D  00                 	db	0
  1816   00FE9E  00                 	db	0
  1817   00FE9F  00                 	db	0
  1818   00FEA0  FC                 	db	252
  1819   00FEA1  FC                 	db	252
  1820   00FEA2  14                 	db	20
  1821   00FEA3  14                 	db	20
  1822   00FEA4  14                 	db	20
  1823   00FEA5  00                 	db	0
  1824   00FEA6  00                 	db	0
  1825   00FEA7  F0                 	db	240
  1826   00FEA8  F0                 	db	240
  1827   00FEA9  10                 	db	16
  1828   00FEAA  F0                 	db	240
  1829   00FEAB  F0                 	db	240
  1830   00FEAC  10                 	db	16
  1831   00FEAD  10                 	db	16
  1832   00FEAE  10                 	db	16
  1833   00FEAF  FF                 	db	255
  1834   00FEB0  FF                 	db	255
  1835   00FEB1  10                 	db	16
  1836   00FEB2  FF                 	db	255
  1837   00FEB3  FF                 	db	255
  1838   00FEB4  10                 	db	16
  1839   00FEB5  14                 	db	20
  1840   00FEB6  14                 	db	20
  1841   00FEB7  14                 	db	20
  1842   00FEB8  FF                 	db	255
  1843   00FEB9  FF                 	db	255
  1844   00FEBA  14                 	db	20
  1845   00FEBB  14                 	db	20
  1846   00FEBC  14                 	db	20
  1847   00FEBD  10                 	db	16
  1848   00FEBE  10                 	db	16
  1849   00FEBF  10                 	db	16
  1850   00FEC0  1F                 	db	31
  1851   00FEC1  1F                 	db	31
  1852   00FEC2  00                 	db	0
  1853   00FEC3  00                 	db	0
  1854   00FEC4  00                 	db	0
  1855   00FEC5  00                 	db	0
  1856   00FEC6  00                 	db	0
  1857   00FEC7  00                 	db	0
  1858   00FEC8  F0                 	db	240
  1859   00FEC9  F0                 	db	240
  1860   00FECA  10                 	db	16
  1861   00FECB  10                 	db	16
  1862   00FECC  10                 	db	16
  1863   00FECD  FF                 	db	255
  1864   00FECE  FF                 	db	255
  1865   00FECF  FF                 	db	255
  1866   00FED0  FF                 	db	255
  1867   00FED1  FF                 	db	255
  1868   00FED2  FF                 	db	255
  1869   00FED3  FF                 	db	255
  1870   00FED4  FF                 	db	255
  1871   00FED5  F0                 	db	240
  1872   00FED6  F0                 	db	240
  1873   00FED7  F0                 	db	240
  1874   00FED8  F0                 	db	240
  1875   00FED9  F0                 	db	240
  1876   00FEDA  F0                 	db	240
  1877   00FEDB  F0                 	db	240
  1878   00FEDC  F0                 	db	240
  1879   00FEDD  FF                 	db	255
  1880   00FEDE  FF                 	db	255
  1881   00FEDF  FF                 	db	255
  1882   00FEE0  FF                 	db	255
  1883   00FEE1  00                 	db	0
  1884   00FEE2  00                 	db	0
  1885   00FEE3  00                 	db	0
  1886   00FEE4  00                 	db	0
  1887   00FEE5  00                 	db	0
  1888   00FEE6  00                 	db	0
  1889   00FEE7  00                 	db	0
  1890   00FEE8  00                 	db	0
  1891   00FEE9  FF                 	db	255
  1892   00FEEA  FF                 	db	255
  1893   00FEEB  FF                 	db	255
  1894   00FEEC  FF                 	db	255
  1895   00FEED  0F                 	db	15
  1896   00FEEE  0F                 	db	15
  1897   00FEEF  0F                 	db	15
  1898   00FEF0  0F                 	db	15
  1899   00FEF1  0F                 	db	15
  1900   00FEF2  0F                 	db	15
  1901   00FEF3  0F                 	db	15
  1902   00FEF4  0F                 	db	15
  1903   00FEF5  38                 	db	56
  1904   00FEF6  7C                 	db	124
  1905   00FEF7  44                 	db	68
  1906   00FEF8  6C                 	db	108
  1907   00FEF9  38                 	db	56
  1908   00FEFA  6C                 	db	108
  1909   00FEFB  44                 	db	68
  1910   00FEFC  00                 	db	0
  1911   00FEFD  FC                 	db	252
  1912   00FEFE  FE                 	db	254
  1913   00FEFF  2A                 	db	42
  1914   00FF00  2A                 	db	42
  1915   00FF01  3E                 	db	62
  1916   00FF02  14                 	db	20
  1917   00FF03  00                 	db	0
  1918   00FF04  00                 	db	0
  1919   00FF05  7E                 	db	126
  1920   00FF06  7E                 	db	126
  1921   00FF07  02                 	db	2
  1922   00FF08  02                 	db	2
  1923   00FF09  06                 	db	6
  1924   00FF0A  06                 	db	6
  1925   00FF0B  00                 	db	0
  1926   00FF0C  00                 	db	0
  1927   00FF0D  02                 	db	2
  1928   00FF0E  7E                 	db	126
  1929   00FF0F  7E                 	db	126
  1930   00FF10  02                 	db	2
  1931   00FF11  7E                 	db	126
  1932   00FF12  7E                 	db	126
  1933   00FF13  02                 	db	2
  1934   00FF14  00                 	db	0
  1935   00FF15  63                 	db	99
  1936   00FF16  77                 	db	119
  1937   00FF17  5D                 	db	93
  1938   00FF18  49                 	db	73
  1939   00FF19  63                 	db	99
  1940   00FF1A  63                 	db	99
  1941   00FF1B  00                 	db	0
  1942   00FF1C  00                 	db	0
  1943   00FF1D  38                 	db	56
  1944   00FF1E  7C                 	db	124
  1945   00FF1F  44                 	db	68
  1946   00FF20  7C                 	db	124
  1947   00FF21  3C                 	db	60
  1948   00FF22  04                 	db	4
  1949   00FF23  04                 	db	4
  1950   00FF24  00                 	db	0
  1951   00FF25  80                 	db	128
  1952   00FF26  FE                 	db	254
  1953   00FF27  7E                 	db	126
  1954   00FF28  20                 	db	32
  1955   00FF29  20                 	db	32
  1956   00FF2A  3E                 	db	62
  1957   00FF2B  1E                 	db	30
  1958   00FF2C  00                 	db	0
  1959   00FF2D  04                 	db	4
  1960   00FF2E  06                 	db	6
  1961   00FF2F  02                 	db	2
  1962   00FF30  7E                 	db	126
  1963   00FF31  7C                 	db	124
  1964   00FF32  06                 	db	6
  1965   00FF33  02                 	db	2
  1966   00FF34  00                 	db	0
  1967   00FF35  99                 	db	153
  1968   00FF36  BD                 	db	189
  1969   00FF37  E7                 	db	231
  1970   00FF38  E7                 	db	231
  1971   00FF39  BD                 	db	189
  1972   00FF3A  99                 	db	153
  1973   00FF3B  00                 	db	0
  1974   00FF3C  00                 	db	0
  1975   00FF3D  1C                 	db	28
  1976   00FF3E  3E                 	db	62
  1977   00FF3F  6B                 	db	107
  1978   00FF40  49                 	db	73
  1979   00FF41  6B                 	db	107
  1980   00FF42  3E                 	db	62
  1981   00FF43  1C                 	db	28
  1982   00FF44  00                 	db	0
  1983   00FF45  4C                 	db	76
  1984   00FF46  7E                 	db	126
  1985   00FF47  73                 	db	115
  1986   00FF48  01                 	db	1
  1987   00FF49  73                 	db	115
  1988   00FF4A  7E                 	db	126
  1989   00FF4B  4C                 	db	76
  1990   00FF4C  00                 	db	0
  1991   00FF4D  30                 	db	48
  1992   00FF4E  78                 	db	120
  1993   00FF4F  4A                 	db	74
  1994   00FF50  4F                 	db	79
  1995   00FF51  7D                 	db	125
  1996   00FF52  39                 	db	57
  1997   00FF53  00                 	db	0
  1998   00FF54  00                 	db	0
  1999   00FF55  18                 	db	24
  2000   00FF56  3C                 	db	60
  2001   00FF57  24                 	db	36
  2002   00FF58  3C                 	db	60
  2003   00FF59  3C                 	db	60
  2004   00FF5A  24                 	db	36
  2005   00FF5B  3C                 	db	60
  2006   00FF5C  18                 	db	24
  2007   00FF5D  98                 	db	152
  2008   00FF5E  FC                 	db	252
  2009   00FF5F  64                 	db	100
  2010   00FF60  3C                 	db	60
  2011   00FF61  3E                 	db	62
  2012   00FF62  27                 	db	39
  2013   00FF63  3D                 	db	61
  2014   00FF64  18                 	db	24
  2015   00FF65  1C                 	db	28
  2016   00FF66  3E                 	db	62
  2017   00FF67  6B                 	db	107
  2018   00FF68  49                 	db	73
  2019   00FF69  49                 	db	73
  2020   00FF6A  00                 	db	0
  2021   00FF6B  00                 	db	0
  2022   00FF6C  00                 	db	0
  2023   00FF6D  7E                 	db	126
  2024   00FF6E  7F                 	db	127
  2025   00FF6F  01                 	db	1
  2026   00FF70  01                 	db	1
  2027   00FF71  7F                 	db	127
  2028   00FF72  7E                 	db	126
  2029   00FF73  00                 	db	0
  2030   00FF74  00                 	db	0
  2031   00FF75  2A                 	db	42
  2032   00FF76  2A                 	db	42
  2033   00FF77  2A                 	db	42
  2034   00FF78  2A                 	db	42
  2035   00FF79  2A                 	db	42
  2036   00FF7A  2A                 	db	42
  2037   00FF7B  00                 	db	0
  2038   00FF7C  00                 	db	0
  2039   00FF7D  44                 	db	68
  2040   00FF7E  44                 	db	68
  2041   00FF7F  5F                 	db	95
  2042   00FF80  5F                 	db	95
  2043   00FF81  44                 	db	68
  2044   00FF82  44                 	db	68
  2045   00FF83  00                 	db	0
  2046   00FF84  00                 	db	0
  2047   00FF85  40                 	db	64
  2048   00FF86  51                 	db	81
  2049   00FF87  5B                 	db	91
  2050   00FF88  4E                 	db	78
  2051   00FF89  44                 	db	68
  2052   00FF8A  40                 	db	64
  2053   00FF8B  00                 	db	0
  2054   00FF8C  00                 	db	0
  2055   00FF8D  40                 	db	64
  2056   00FF8E  44                 	db	68
  2057   00FF8F  4E                 	db	78
  2058   00FF90  5B                 	db	91
  2059   00FF91  51                 	db	81
  2060   00FF92  40                 	db	64
  2061   00FF93  00                 	db	0
  2062   00FF94  00                 	db	0
  2063   00FF95  00                 	db	0
  2064   00FF96  00                 	db	0
  2065   00FF97  00                 	db	0
  2066   00FF98  FE                 	db	254
  2067   00FF99  FF                 	db	255
  2068   00FF9A  01                 	db	1
  2069   00FF9B  07                 	db	7
  2070   00FF9C  06                 	db	6
  2071   00FF9D  60                 	db	96
  2072   00FF9E  E0                 	db	224
  2073   00FF9F  80                 	db	128
  2074   00FFA0  FF                 	db	255
  2075   00FFA1  7F                 	db	127
  2076   00FFA2  00                 	db	0
  2077   00FFA3  00                 	db	0
  2078   00FFA4  00                 	db	0
  2079   00FFA5  08                 	db	8
  2080   00FFA6  08                 	db	8
  2081   00FFA7  6B                 	db	107
  2082   00FFA8  6B                 	db	107
  2083   00FFA9  08                 	db	8
  2084   00FFAA  08                 	db	8
  2085   00FFAB  00                 	db	0
  2086   00FFAC  00                 	db	0
  2087   00FFAD  24                 	db	36
  2088   00FFAE  36                 	db	54
  2089   00FFAF  12                 	db	18
  2090   00FFB0  36                 	db	54
  2091   00FFB1  24                 	db	36
  2092   00FFB2  36                 	db	54
  2093   00FFB3  12                 	db	18
  2094   00FFB4  00                 	db	0
  2095   00FFB5  00                 	db	0
  2096   00FFB6  06                 	db	6
  2097   00FFB7  0F                 	db	15
  2098   00FFB8  09                 	db	9
  2099   00FFB9  0F                 	db	15
  2100   00FFBA  06                 	db	6
  2101   00FFBB  00                 	db	0
  2102   00FFBC  00                 	db	0
  2103   00FFBD  00                 	db	0
  2104   00FFBE  00                 	db	0
  2105   00FFBF  00                 	db	0
  2106   00FFC0  18                 	db	24
  2107   00FFC1  18                 	db	24
  2108   00FFC2  00                 	db	0
  2109   00FFC3  00                 	db	0
  2110   00FFC4  00                 	db	0
  2111   00FFC5  00                 	db	0
  2112   00FFC6  00                 	db	0
  2113   00FFC7  00                 	db	0
  2114   00FFC8  10                 	db	16
  2115   00FFC9  10                 	db	16
  2116   00FFCA  00                 	db	0
  2117   00FFCB  00                 	db	0
  2118   00FFCC  00                 	db	0
  2119   00FFCD  10                 	db	16
  2120   00FFCE  30                 	db	48
  2121   00FFCF  70                 	db	112
  2122   00FFD0  C0                 	db	192
  2123   00FFD1  FF                 	db	255
  2124   00FFD2  FF                 	db	255
  2125   00FFD3  01                 	db	1
  2126   00FFD4  01                 	db	1
  2127   00FFD5  00                 	db	0
  2128   00FFD6  1F                 	db	31
  2129   00FFD7  1F                 	db	31
  2130   00FFD8  01                 	db	1
  2131   00FFD9  1F                 	db	31
  2132   00FFDA  1E                 	db	30
  2133   00FFDB  00                 	db	0
  2134   00FFDC  00                 	db	0
  2135   00FFDD  00                 	db	0
  2136   00FFDE  19                 	db	25
  2137   00FFDF  1D                 	db	29
  2138   00FFE0  17                 	db	23
  2139   00FFE1  12                 	db	18
  2140   00FFE2  00                 	db	0
  2141   00FFE3  00                 	db	0
  2142   00FFE4  00                 	db	0
  2143   00FFE5  00                 	db	0
  2144   00FFE6  00                 	db	0
  2145   00FFE7  3C                 	db	60
  2146   00FFE8  3C                 	db	60
  2147   00FFE9  3C                 	db	60
  2148   00FFEA  3C                 	db	60
  2149   00FFEB  00                 	db	0
  2150   00FFEC  00                 	db	0
  2151   00FFED  00                 	db	0
  2152   00FFEE  00                 	db	0
  2153   00FFEF  00                 	db	0
  2154   00FFF0  00                 	db	0
  2155   00FFF1  00                 	db	0
  2156   00FFF2  00                 	db	0
  2157   00FFF3  00                 	db	0
  2158   00FFF4  00                 	db	0
  2159   00FFF5                     __end_of_MAX7219_Dot_Matrix_font:
  2160                           	callstack 0
  2161   00FFF5  0000               	dw	0
  2162   00FFF7  4B00               	dw	19200
  2163   00FFF9                     __end_of_toint:
  2164                           	callstack 0
  2165   000000                     _EEDATA	set	4008
  2166   000000                     _EEADR	set	4009
  2167   000000                     _EEADRH	set	4010
  2168   000000                     _EECON2	set	4007
  2169   000000                     _RCREG	set	4014
  2170   000000                     _TXREG	set	4013
  2171   000000                     _SPBRG	set	4015
  2172   000000                     _TXSTA	set	4012
  2173   00FFF9                     STR_1:
  2174                           
  2175                           ; BSR set to: 0
  2176   00FFF9  41                 	db	65	;'A'
  2177   00FFFA  4C                 	db	76	;'L'
  2178   00FFFB  41                 	db	65	;'A'
  2179   00FFFC  52                 	db	82	;'R'
  2180   00FFFD  4D                 	db	77	;'M'
  2181   00FFFE  00                 	db	0
  2182   00FFFF  00                 	db	0	; dummy byte at the end
  2183   000000                     
  2184                           	psect	nvBANK0
  2185   0000FA                     __pnvBANK0:
  2186                           	callstack 0
  2187   0000FA                     _TMR1_InterruptHandler:
  2188                           	callstack 0
  2189   0000FA                     	ds	2
  2190   0000FC                     _EUSART_RxDefaultInterruptHandler:
  2191                           	callstack 0
  2192   0000FC                     	ds	2
  2193   0000FE                     _EUSART_TxDefaultInterruptHandler:
  2194                           	callstack 0
  2195   0000FE                     	ds	2
  2196   000000                     _LATCbits	set	3979
  2197   000000                     _LATBbits	set	3978
  2198   000000                     _TRISBbits	set	3987
  2199   000000                     _T1CONbits	set	4045
  2200   000000                     _RCSTAbits	set	4011
  2201   000000                     _TXSTAbits	set	4012
  2202   000000                     _SSPSTATbits	set	4039
  2203   000000                     _SSPCON1bits	set	4038
  2204   000000                     _WPUB	set	3964
  2205   000000                     _ANSEL	set	3966
  2206   000000                     _ANSELH	set	3967
  2207   000000                     _LATA	set	3977
  2208   000000                     _OSCTUNE	set	3995
  2209   000000                     _SSPCON1	set	4038
  2210   000000                     _SSPSTAT	set	4039
  2211   000000                     _T1CON	set	4045
  2212   000000                     _TMR1L	set	4046
  2213   000000                     _TMR1H	set	4047
  2214   000000                     _RCONbits	set	4048
  2215   000000                     _OSCCON	set	4051
  2216   000000                     _SSPBUF	set	4041
  2217   000000                     _SSPADD	set	4040
  2218   000000                     _INTCON2bits	set	4081
  2219   000000                     _PIE1bits	set	3997
  2220   000000                     _TRISA	set	3986
  2221   000000                     _LATC	set	3979
  2222   000000                     _LATB	set	3978
  2223   000000                     _TRISC	set	3988
  2224   000000                     _TRISB	set	3987
  2225   000000                     _PORTBbits	set	3969
  2226   000000                     _INTCONbits	set	4082
  2227   000000                     _TABLAT	set	4085
  2228   000000                     _TBLPTRL	set	4086
  2229   000000                     _TBLPTRH	set	4087
  2230   000000                     _TBLPTRU	set	4088
  2231   000000                     _PIR1bits	set	3998
  2232   000000                     _PIR2bits	set	4001
  2233   000000                     _EECON1bits	set	4006
  2234   000000                     _RCSTA	set	4011
  2235   000000                     _BAUDCON	set	4024
  2236   000000                     _SPBRGH	set	4016
  2237                           
  2238                           ; #config settings
  2239                           
  2240                           	psect	cinit
  2241   001B60                     __pcinit:
  2242                           	callstack 0
  2243   001B60                     start_initialization:
  2244                           	callstack 0
  2245   001B60                     __initialization:
  2246                           	callstack 0
  2247                           
  2248                           ; Clear objects allocated to BANK1 (32 bytes)
  2249   001B60  EE01  F000         	lfsr	0,__pbssBANK1
  2250   001B64  0E20               	movlw	32
  2251   001B66                     clear_0:
  2252   001B66  6AEE               	clrf	postinc0,c
  2253   001B68  06E8               	decf	wreg,f,c
  2254   001B6A  E1FD               	bnz	clear_0
  2255                           
  2256                           ; Clear objects allocated to BANK0 (83 bytes)
  2257   001B6C  EE00  F060         	lfsr	0,__pbssBANK0
  2258   001B70  0E53               	movlw	83
  2259   001B72                     clear_1:
  2260   001B72  6AEE               	clrf	postinc0,c
  2261   001B74  06E8               	decf	wreg,f,c
  2262   001B76  E1FD               	bnz	clear_1
  2263                           
  2264                           ; Clear objects allocated to COMRAM (7 bytes)
  2265   001B78  EE00  F052         	lfsr	0,__pbssCOMRAM
  2266   001B7C  0E07               	movlw	7
  2267   001B7E                     clear_2:
  2268   001B7E  6AEE               	clrf	postinc0,c
  2269   001B80  06E8               	decf	wreg,f,c
  2270   001B82  E1FD               	bnz	clear_2
  2271   001B84                     end_of_initialization:
  2272                           	callstack 0
  2273   001B84                     __end_of__initialization:
  2274                           	callstack 0
  2275   001B84  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2276   001B86  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2277   001B88  0100               	movlb	0
  2278   001B8A  EF48  F008         	goto	_main	;jump to C main() function
  2279                           
  2280                           	psect	bssCOMRAM
  2281   000052                     __pbssCOMRAM:
  2282                           	callstack 0
  2283   000052                     _timer1ReloadVal:
  2284                           	callstack 0
  2285   000052                     	ds	2
  2286   000054                     _uartBufferIndex:
  2287                           	callstack 0
  2288   000054                     	ds	1
  2289   000055                     _eusartRxHead:
  2290                           	callstack 0
  2291   000055                     	ds	1
  2292   000056                     _eusartTxBufferRemaining:
  2293                           	callstack 0
  2294   000056                     	ds	1
  2295   000057                     _eusartTxTail:
  2296                           	callstack 0
  2297   000057                     	ds	1
  2298   000058                     _eusartTxHead:
  2299                           	callstack 0
  2300   000058                     	ds	1
  2301                           
  2302                           	psect	bssBANK0
  2303   000060                     __pbssBANK0:
  2304                           	callstack 0
  2305   000060                     _bufferCol:
  2306                           	callstack 0
  2307   000060                     	ds	32
  2308   000080                     _uartBuffer:
  2309                           	callstack 0
  2310   000080                     	ds	10
  2311   00008A                     _eusartRxBuffer:
  2312                           	callstack 0
  2313   00008A                     	ds	8
  2314   000092                     _eusartTxBuffer:
  2315                           	callstack 0
  2316   000092                     	ds	8
  2317   00009A                     roundf@F522:
  2318                           	callstack 0
  2319   00009A                     	ds	4
  2320   00009E                     checkButtons@button3HoldTime:
  2321                           	callstack 0
  2322   00009E                     	ds	2
  2323   0000A0                     _button3PressTime:
  2324                           	callstack 0
  2325   0000A0                     	ds	2
  2326   0000A2                     _blinkTimer:
  2327                           	callstack 0
  2328   0000A2                     	ds	2
  2329   0000A4                     checkButtons@alarmSettingMode:
  2330                           	callstack 0
  2331   0000A4                     	ds	1
  2332   0000A5                     checkButtons@button3PressCount:
  2333                           	callstack 0
  2334   0000A5                     	ds	1
  2335   0000A6                     _btTimeSet:
  2336                           	callstack 0
  2337   0000A6                     	ds	1
  2338   0000A7                     _isButton3Pressed:
  2339                           	callstack 0
  2340   0000A7                     	ds	1
  2341   0000A8                     _displayBlinking:
  2342                           	callstack 0
  2343   0000A8                     	ds	1
  2344   0000A9                     _alarmTriggered:
  2345                           	callstack 0
  2346   0000A9                     	ds	1
  2347   0000AA                     _alarmActive:
  2348                           	callstack 0
  2349   0000AA                     	ds	1
  2350   0000AB                     _alarmSet:
  2351                           	callstack 0
  2352   0000AB                     	ds	1
  2353   0000AC                     _alarmMinutes:
  2354                           	callstack 0
  2355   0000AC                     	ds	1
  2356   0000AD                     _alarmHours:
  2357                           	callstack 0
  2358   0000AD                     	ds	1
  2359   0000AE                     _seconds:
  2360                           	callstack 0
  2361   0000AE                     	ds	1
  2362   0000AF                     _minutes:
  2363                           	callstack 0
  2364   0000AF                     	ds	1
  2365   0000B0                     _hours:
  2366                           	callstack 0
  2367   0000B0                     	ds	1
  2368   0000B1                     _eusartRxCount:
  2369                           	callstack 0
  2370   0000B1                     	ds	1
  2371   0000B2                     _eusartRxTail:
  2372                           	callstack 0
  2373   0000B2                     	ds	1
  2374                           
  2375                           	psect	bssBANK1
  2376   000100                     __pbssBANK1:
  2377                           	callstack 0
  2378   000100                     	ds	32
  2379                           
  2380                           	psect	cstackBANK0
  2381   0000B3                     __pcstackBANK0:
  2382                           	callstack 0
  2383   0000B3                     printString@indx:
  2384                           	callstack 0
  2385   0000B3                     saveTimeToFlash@flashBuffer:
  2386                           	callstack 0
  2387                           
  2388                           ; 64 bytes @ 0x0
  2389   0000B3                     	ds	2
  2390   0000B5                     printString@data:
  2391                           	callstack 0
  2392                           
  2393                           ; 1 bytes @ 0x2
  2394   0000B5                     	ds	1
  2395   0000B6                     printString@strindx:
  2396                           	callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x3
  2399   0000B6                     	ds	2
  2400   0000B8                     printString@i:
  2401                           	callstack 0
  2402                           
  2403                           ; 2 bytes @ 0x5
  2404   0000B8                     	ds	2
  2405   0000BA                     printString@k:
  2406                           	callstack 0
  2407                           
  2408                           ; 2 bytes @ 0x7
  2409   0000BA                     	ds	2
  2410   0000BC                     printString@j:
  2411                           	callstack 0
  2412                           
  2413                           ; 2 bytes @ 0x9
  2414   0000BC                     	ds	2
  2415   0000BE                     triggerAlarm@numCycles:
  2416                           	callstack 0
  2417   0000BE                     displayTime@displayString:
  2418                           	callstack 0
  2419   0000BE                     displayAlarmTime@displayString:
  2420                           	callstack 0
  2421                           
  2422                           ; 5 bytes @ 0xB
  2423   0000BE                     	ds	2
  2424   0000C0                     triggerAlarm@i:
  2425                           	callstack 0
  2426                           
  2427                           ; 2 bytes @ 0xD
  2428   0000C0                     	ds	3
  2429   0000C3                     displayTime@timeString:
  2430                           	callstack 0
  2431   0000C3                     displayAlarmTime@alarmTimeString:
  2432                           	callstack 0
  2433                           
  2434                           ; 5 bytes @ 0x10
  2435   0000C3                     	ds	5
  2436   0000C8                     displayTime@i:
  2437                           	callstack 0
  2438   0000C8                     displayAlarmTime@i:
  2439                           	callstack 0
  2440                           
  2441                           ; 2 bytes @ 0x15
  2442   0000C8                     	ds	43
  2443   0000F3                     saveTimeToFlash@flashAddress:
  2444                           	callstack 0
  2445                           
  2446                           ; 4 bytes @ 0x40
  2447   0000F3                     	ds	4
  2448   0000F7                     saveTimeToFlash@i:
  2449                           	callstack 0
  2450                           
  2451                           ; 1 bytes @ 0x44
  2452   0000F7                     	ds	1
  2453   0000F8                     main@hours_pom:
  2454                           	callstack 0
  2455                           
  2456                           ; 1 bytes @ 0x45
  2457   0000F8                     	ds	1
  2458   0000F9                     main@minutes_pom:
  2459                           	callstack 0
  2460                           
  2461                           ; 1 bytes @ 0x46
  2462   0000F9                     	ds	1
  2463                           
  2464                           	psect	cstackCOMRAM
  2465   000001                     __pcstackCOMRAM:
  2466                           	callstack 0
  2467   000001                     btGetData@rcv:
  2468                           	callstack 0
  2469                           
  2470                           ; 1 bytes @ 0x0
  2471   000001                     	ds	1
  2472   000002                     ??_INTERRUPT_InterruptManager:
  2473                           
  2474                           ; 1 bytes @ 0x1
  2475   000002                     	ds	4
  2476   000006                     ?___wmul:
  2477                           	callstack 0
  2478   000006                     ?___awdiv:
  2479                           	callstack 0
  2480   000006                     ?___awmod:
  2481                           	callstack 0
  2482   000006                     ?___fladd:
  2483                           	callstack 0
  2484   000006                     ?___flneg:
  2485                           	callstack 0
  2486   000006                     SPI_Exchange8bit@data:
  2487                           	callstack 0
  2488   000006                     EUSART_SetTxInterruptHandler@handler:
  2489                           	callstack 0
  2490   000006                     EUSART_SetRxInterruptHandler@handler:
  2491                           	callstack 0
  2492   000006                     TMR1_SetInterruptHandler@InterruptHandler:
  2493                           	callstack 0
  2494   000006                     delayMicroseconds@microseconds:
  2495                           	callstack 0
  2496   000006                     ___wmul@multiplier:
  2497                           	callstack 0
  2498   000006                     ___awdiv@dividend:
  2499                           	callstack 0
  2500   000006                     ___awmod@dividend:
  2501                           	callstack 0
  2502   000006                     FLASH_ReadByte@flashAddr:
  2503                           	callstack 0
  2504   000006                     FLASH_EraseBlock@baseAddr:
  2505                           	callstack 0
  2506   000006                     ___flge@ff1:
  2507                           	callstack 0
  2508   000006                     ___flneg@f1:
  2509                           	callstack 0
  2510   000006                     ___fladd@b:
  2511                           	callstack 0
  2512                           
  2513                           ; 4 bytes @ 0x5
  2514   000006                     	ds	1
  2515   000007                     max7219_cmd@data:
  2516                           	callstack 0
  2517                           
  2518                           ; 1 bytes @ 0x6
  2519   000007                     	ds	1
  2520   000008                     ??_max7219_cmd:
  2521   000008                     delayMicroseconds@i:
  2522                           	callstack 0
  2523   000008                     ___wmul@multiplicand:
  2524                           	callstack 0
  2525   000008                     ___awdiv@divisor:
  2526                           	callstack 0
  2527   000008                     ___awmod@divisor:
  2528                           	callstack 0
  2529                           
  2530                           ; 2 bytes @ 0x7
  2531   000008                     	ds	2
  2532   00000A                     FLASH_EraseBlock@GIEBitValue:
  2533                           	callstack 0
  2534   00000A                     max7219_cmd@Addr:
  2535                           	callstack 0
  2536   00000A                     ___awdiv@counter:
  2537                           	callstack 0
  2538   00000A                     ___awmod@counter:
  2539                           	callstack 0
  2540   00000A                     ___wmul@product:
  2541                           	callstack 0
  2542   00000A                     ___flge@ff2:
  2543                           	callstack 0
  2544   00000A                     ___fladd@a:
  2545                           	callstack 0
  2546                           
  2547                           ; 4 bytes @ 0x9
  2548   00000A                     	ds	1
  2549   00000B                     ___awdiv@sign:
  2550                           	callstack 0
  2551   00000B                     ___awmod@sign:
  2552                           	callstack 0
  2553   00000B                     max7219_cmd@writeData:
  2554                           	callstack 0
  2555   00000B                     FLASH_WriteBlock@writeAddr:
  2556                           	callstack 0
  2557                           
  2558                           ; 4 bytes @ 0xA
  2559   00000B                     	ds	1
  2560   00000C                     ?___lwdiv:
  2561                           	callstack 0
  2562   00000C                     ___awdiv@quotient:
  2563                           	callstack 0
  2564   00000C                     ___lwdiv@dividend:
  2565                           	callstack 0
  2566                           
  2567                           ; 2 bytes @ 0xB
  2568   00000C                     	ds	1
  2569   00000D                     max7219_cmd@i:
  2570                           	callstack 0
  2571                           
  2572                           ; 2 bytes @ 0xC
  2573   00000D                     	ds	1
  2574   00000E                     ??___fladd:
  2575   00000E                     ??___flge:
  2576   00000E                     max_write@row:
  2577                           	callstack 0
  2578   00000E                     ___lwdiv@divisor:
  2579                           	callstack 0
  2580                           
  2581                           ; 2 bytes @ 0xD
  2582   00000E                     	ds	1
  2583   00000F                     FLASH_WriteBlock@flashWrBufPtr:
  2584                           	callstack 0
  2585                           
  2586                           ; 1 bytes @ 0xE
  2587   00000F                     	ds	1
  2588   000010                     max_write@data:
  2589                           	callstack 0
  2590   000010                     ___lwdiv@counter:
  2591                           	callstack 0
  2592   000010                     FLASH_WriteBlock@blockStartAddr:
  2593                           	callstack 0
  2594                           
  2595                           ; 4 bytes @ 0xF
  2596   000010                     	ds	1
  2597   000011                     ??_max_write:
  2598   000011                     ___lwdiv@quotient:
  2599                           	callstack 0
  2600                           
  2601                           ; 2 bytes @ 0x10
  2602   000011                     	ds	1
  2603   000012                     ___fladd@signs:
  2604                           	callstack 0
  2605                           
  2606                           ; 1 bytes @ 0x11
  2607   000012                     	ds	1
  2608   000013                     ___fladd@aexp:
  2609                           	callstack 0
  2610   000013                     generateBeep@duration_ms:
  2611                           	callstack 0
  2612   000013                     max_write@offset:
  2613                           	callstack 0
  2614                           
  2615                           ; 2 bytes @ 0x12
  2616   000013                     	ds	1
  2617   000014                     FLASH_WriteBlock@GIEBitValue:
  2618                           	callstack 0
  2619   000014                     ___fladd@bexp:
  2620                           	callstack 0
  2621                           
  2622                           ; 1 bytes @ 0x13
  2623   000014                     	ds	1
  2624   000015                     FLASH_WriteBlock@j:
  2625                           	callstack 0
  2626   000015                     ___fladd@grs:
  2627                           	callstack 0
  2628   000015                     generateBeep@cycles:
  2629                           	callstack 0
  2630   000015                     max_write@devTarget:
  2631                           	callstack 0
  2632                           
  2633                           ; 2 bytes @ 0x14
  2634   000015                     	ds	1
  2635   000016                     ?___flsub:
  2636                           	callstack 0
  2637   000016                     FLASH_WriteBlock@numberOfWriteBlocks:
  2638                           	callstack 0
  2639   000016                     ___flsub@b:
  2640                           	callstack 0
  2641                           
  2642                           ; 4 bytes @ 0x15
  2643   000016                     	ds	1
  2644   000017                     FLASH_WriteBlock@dataCounter:
  2645                           	callstack 0
  2646   000017                     generateBeep@i:
  2647                           	callstack 0
  2648   000017                     max_write@dev:
  2649                           	callstack 0
  2650                           
  2651                           ; 2 bytes @ 0x16
  2652   000017                     	ds	1
  2653   000018                     FLASH_WriteBlock@i:
  2654                           	callstack 0
  2655                           
  2656                           ; 1 bytes @ 0x17
  2657   000018                     	ds	1
  2658   000019                     max_write@writeData:
  2659                           	callstack 0
  2660                           
  2661                           ; 2 bytes @ 0x18
  2662   000019                     	ds	1
  2663   00001A                     ___flsub@a:
  2664                           	callstack 0
  2665                           
  2666                           ; 4 bytes @ 0x19
  2667   00001A                     	ds	1
  2668   00001B                     ??_flushBuffer:
  2669                           
  2670                           ; 1 bytes @ 0x1A
  2671   00001B                     	ds	3
  2672   00001E                     ?_roundf:
  2673                           	callstack 0
  2674   00001E                     roundf@x:
  2675                           	callstack 0
  2676   00001E                     flushBuffer@bufferRow:
  2677                           	callstack 0
  2678                           
  2679                           ; 32 bytes @ 0x1D
  2680   00001E                     	ds	4
  2681   000022                     ??_roundf:
  2682                           
  2683                           ; 1 bytes @ 0x21
  2684   000022                     	ds	4
  2685   000026                     _roundf$2191:
  2686                           	callstack 0
  2687                           
  2688                           ; 4 bytes @ 0x25
  2689   000026                     	ds	4
  2690   00002A                     roundf@z:
  2691                           	callstack 0
  2692                           
  2693                           ; 4 bytes @ 0x29
  2694   00002A                     	ds	4
  2695   00002E                     roundf@e:
  2696                           	callstack 0
  2697                           
  2698                           ; 2 bytes @ 0x2D
  2699   00002E                     	ds	2
  2700   000030                     roundf@u:
  2701                           	callstack 0
  2702                           
  2703                           ; 4 bytes @ 0x2F
  2704   000030                     	ds	4
  2705   000034                     _roundf$2190:
  2706                           	callstack 0
  2707                           
  2708                           ; 4 bytes @ 0x33
  2709   000034                     	ds	4
  2710   000038                     roundf@sign:
  2711                           	callstack 0
  2712                           
  2713                           ; 1 bytes @ 0x37
  2714   000038                     	ds	1
  2715   000039                     roundf@y:
  2716                           	callstack 0
  2717                           
  2718                           ; 4 bytes @ 0x38
  2719   000039                     	ds	4
  2720   00003D                     ?___fltol:
  2721                           	callstack 0
  2722   00003D                     ___fltol@f1:
  2723                           	callstack 0
  2724                           
  2725                           ; 4 bytes @ 0x3C
  2726   00003D                     	ds	1
  2727   00003E                     flushBuffer@dev:
  2728                           	callstack 0
  2729                           
  2730                           ; 2 bytes @ 0x3D
  2731   00003E                     	ds	2
  2732   000040                     flushBuffer@j:
  2733                           	callstack 0
  2734                           
  2735                           ; 2 bytes @ 0x3F
  2736   000040                     	ds	1
  2737   000041                     ??___fltol:
  2738                           
  2739                           ; 1 bytes @ 0x40
  2740   000041                     	ds	1
  2741   000042                     flushBuffer@row:
  2742                           	callstack 0
  2743                           
  2744                           ; 2 bytes @ 0x41
  2745   000042                     	ds	2
  2746   000044                     flushBuffer@i:
  2747                           	callstack 0
  2748                           
  2749                           ; 2 bytes @ 0x43
  2750   000044                     	ds	1
  2751   000045                     ___fltol@sign1:
  2752                           	callstack 0
  2753                           
  2754                           ; 1 bytes @ 0x44
  2755   000045                     	ds	1
  2756   000046                     ___fltol@exp1:
  2757                           	callstack 0
  2758   000046                     clearDisplay@i:
  2759                           	callstack 0
  2760   000046                     printString@str:
  2761                           	callstack 0
  2762                           
  2763                           ; 2 bytes @ 0x45
  2764   000046                     	ds	1
  2765   000047                     ??_TMR1_Initialize:
  2766                           
  2767                           ; 1 bytes @ 0x46
  2768   000047                     	ds	1
  2769   000048                     ??_printString:
  2770                           
  2771                           ; 1 bytes @ 0x47
  2772   000048                     	ds	1
  2773   000049                     TMR1_Initialize@tmr1Offset:
  2774                           	callstack 0
  2775                           
  2776                           ; 1 bytes @ 0x48
  2777   000049                     	ds	1
  2778   00004A                     
  2779                           ; 1 bytes @ 0x49
  2780   00004A                     	ds	6
  2781   000050                     ??_checkButtons:
  2782   000050                     ??_triggerAlarm:
  2783   000050                     
  2784                           ; 1 bytes @ 0x4F
  2785   000050                     	ds	2
  2786   000052                     
  2787                           ; 1 bytes @ 0x51
  2788 ;;
  2789 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2790 ;;
  2791 ;; *************** function _main *****************
  2792 ;; Defined at:
  2793 ;;		line 46 in file "main.c"
  2794 ;; Parameters:    Size  Location     Type
  2795 ;;		None
  2796 ;; Auto vars:     Size  Location     Type
  2797 ;;  minutes_pom     1   70[BANK0 ] unsigned char 
  2798 ;;  hours_pom       1   69[BANK0 ] unsigned char 
  2799 ;; Return value:  Size  Location     Type
  2800 ;;                  1    wreg      void 
  2801 ;; Registers used:
  2802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2803 ;; Tracked objects:
  2804 ;;		On entry : 0/0
  2805 ;;		On exit  : 0/0
  2806 ;;		Unchanged: 0/0
  2807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2809 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2811 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2812 ;;Total ram usage:        2 bytes
  2813 ;; Hardware stack levels required when called: 10
  2814 ;; This function calls:
  2815 ;;		_SYSTEM_Initialize
  2816 ;;		_TMR1_StartTimer
  2817 ;;		_checkButtons
  2818 ;;		_clearDisplay
  2819 ;;		_displayTime
  2820 ;;		_loadTimeFromFlash
  2821 ;;		_matrixInit
  2822 ;;		_processAlarm
  2823 ;;		_saveTimeToFlash
  2824 ;; This function is called by:
  2825 ;;		Startup code after reset
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text0
  2830   001090                     __ptext0:
  2831                           	callstack 0
  2832   001090                     _main:
  2833                           	callstack 21
  2834   001090                     
  2835                           ;main.c: 48:     SYSTEM_Initialize();
  2836   001090  EC0D  F00E         	call	_SYSTEM_Initialize	;wreg free
  2837                           
  2838                           ;main.c: 49:     matrixInit();
  2839   001094  EC7C  F00D         	call	_matrixInit	;wreg free
  2840   001098                     
  2841                           ;main.c: 50:     clearDisplay();
  2842   001098  EC28  F00D         	call	_clearDisplay	;wreg free
  2843   00109C                     
  2844                           ;main.c: 51:     loadTimeFromFlash();
  2845   00109C  ECCC  F009         	call	_loadTimeFromFlash	;wreg free
  2846   0010A0                     
  2847                           ;main.c: 54:     TRISBbits.RB3 = 0;
  2848   0010A0  9693               	bcf	147,3,c	;volatile
  2849   0010A2                     
  2850                           ;main.c: 55:     INTCONbits.GIE = 1;
  2851   0010A2  8EF2               	bsf	242,7,c	;volatile
  2852   0010A4                     
  2853                           ;main.c: 56:     INTCONbits.PEIE = 1;
  2854   0010A4  8CF2               	bsf	242,6,c	;volatile
  2855   0010A6                     
  2856                           ;main.c: 58:     TMR1_StartTimer();
  2857   0010A6  EC47  F00E         	call	_TMR1_StartTimer	;wreg free
  2858   0010AA                     l4934:
  2859                           
  2860                           ;main.c: 60:     {;main.c: 61:         displayTime();
  2861   0010AA  EC27  F00A         	call	_displayTime	;wreg free
  2862   0010AE                     
  2863                           ;main.c: 62:         checkButtons();
  2864   0010AE  EC22  F004         	call	_checkButtons	;wreg free
  2865   0010B2                     
  2866                           ;main.c: 63:         processAlarm();
  2867   0010B2  EC69  F00C         	call	_processAlarm	;wreg free
  2868   0010B6                     
  2869                           ;main.c: 64:         if(btTimeSet) {
  2870   0010B6  0100               	movlb	0	; () banked
  2871   0010B8  51A6               	movf	_btTimeSet& (0+255),w,b
  2872   0010BA  B4D8               	btfsc	status,2,c
  2873   0010BC  EF62  F008         	goto	u5181
  2874   0010C0  EF64  F008         	goto	u5180
  2875   0010C4                     u5181:
  2876   0010C4  EF55  F008         	goto	l4934
  2877   0010C8                     u5180:
  2878   0010C8                     
  2879                           ; BSR set to: 0
  2880                           ;main.c: 66:             if (uartBuffer[0] == 'H' && uartBuffer[3] == 'M' && uartBuffer[
      +                          6] == ';')
  2881   0010C8  0E48               	movlw	72
  2882   0010CA  1980               	xorwf	_uartBuffer& (0+255),w,b
  2883   0010CC  A4D8               	btfss	status,2,c
  2884   0010CE  EF6B  F008         	goto	u5191
  2885   0010D2  EF6D  F008         	goto	u5190
  2886   0010D6                     u5191:
  2887   0010D6  EF55  F008         	goto	l4934
  2888   0010DA                     u5190:
  2889   0010DA                     
  2890                           ; BSR set to: 0
  2891   0010DA  0E4D               	movlw	77
  2892   0010DC  1983               	xorwf	(_uartBuffer+3)& (0+255),w,b
  2893   0010DE  A4D8               	btfss	status,2,c
  2894   0010E0  EF74  F008         	goto	u5201
  2895   0010E4  EF76  F008         	goto	u5200
  2896   0010E8                     u5201:
  2897   0010E8  EF55  F008         	goto	l4934
  2898   0010EC                     u5200:
  2899   0010EC                     
  2900                           ; BSR set to: 0
  2901   0010EC  0E3B               	movlw	59
  2902   0010EE  1986               	xorwf	(_uartBuffer+6)& (0+255),w,b
  2903   0010F0  A4D8               	btfss	status,2,c
  2904   0010F2  EF7D  F008         	goto	u5211
  2905   0010F6  EF7F  F008         	goto	u5210
  2906   0010FA                     u5211:
  2907   0010FA  EF55  F008         	goto	l4934
  2908   0010FE                     u5210:
  2909   0010FE                     
  2910                           ; BSR set to: 0
  2911                           ;main.c: 67:             {;main.c: 69:                 uint8_t hours_pom = (uartBuffer[1
      +                          ] - '0') * 10 + (uartBuffer[2] - '0');
  2912   0010FE  5181               	movf	(_uartBuffer+1)& (0+255),w,b
  2913   001100  0D0A               	mullw	10
  2914   001102  50F3               	movf	243,w,c
  2915   001104  2582               	addwf	(_uartBuffer+2)& (0+255),w,b
  2916   001106  0FF0               	addlw	240
  2917   001108  6FF8               	movwf	main@hours_pom& (0+255),b
  2918                           
  2919                           ;main.c: 72:                 uint8_t minutes_pom = (uartBuffer[4] - '0') * 10 + (uartBuf
      +                          fer[5] - '0');
  2920   00110A  5184               	movf	(_uartBuffer+4)& (0+255),w,b
  2921   00110C  0D0A               	mullw	10
  2922   00110E  50F3               	movf	243,w,c
  2923   001110  2585               	addwf	(_uartBuffer+5)& (0+255),w,b
  2924   001112  0FF0               	addlw	240
  2925   001114  6FF9               	movwf	main@minutes_pom& (0+255),b
  2926   001116                     
  2927                           ; BSR set to: 0
  2928                           ;main.c: 75:                 if (hours_pom < 24 && minutes_pom < 60)
  2929   001116  0E18               	movlw	24
  2930   001118  61F8               	cpfslt	main@hours_pom& (0+255),b
  2931   00111A  EF91  F008         	goto	u5221
  2932   00111E  EF93  F008         	goto	u5220
  2933   001122                     u5221:
  2934   001122  EFA7  F008         	goto	l426
  2935   001126                     u5220:
  2936   001126                     
  2937                           ; BSR set to: 0
  2938   001126  0E3C               	movlw	60
  2939   001128  61F9               	cpfslt	main@minutes_pom& (0+255),b
  2940   00112A  EF99  F008         	goto	u5231
  2941   00112E  EF9B  F008         	goto	u5230
  2942   001132                     u5231:
  2943   001132  EFA7  F008         	goto	l426
  2944   001136                     u5230:
  2945   001136                     
  2946                           ; BSR set to: 0
  2947                           ;main.c: 76:                 {;main.c: 78:                     btTimeSet = 0;
  2948   001136  0E00               	movlw	0
  2949   001138  6FA6               	movwf	_btTimeSet& (0+255),b
  2950   00113A                     
  2951                           ; BSR set to: 0
  2952                           ;main.c: 79:                     hours = hours_pom;
  2953   00113A  C0F8  F0B0         	movff	main@hours_pom,_hours
  2954   00113E                     
  2955                           ; BSR set to: 0
  2956                           ;main.c: 80:                     minutes = minutes_pom;
  2957   00113E  C0F9  F0AF         	movff	main@minutes_pom,_minutes
  2958   001142                     
  2959                           ; BSR set to: 0
  2960                           ;main.c: 81:                     displayTime();
  2961   001142  EC27  F00A         	call	_displayTime	;wreg free
  2962   001146                     
  2963                           ;main.c: 82:                     saveTimeToFlash();
  2964   001146  EC82  F00B         	call	_saveTimeToFlash	;wreg free
  2965   00114A  EF55  F008         	goto	l4934
  2966   00114E                     l426:
  2967                           
  2968                           ; BSR set to: 0
  2969   00114E  EF55  F008         	goto	l4934
  2970   001152  EF55  F000         	goto	start
  2971   001156                     __end_of_main:
  2972                           	callstack 0
  2973                           
  2974 ;; *************** function _processAlarm *****************
  2975 ;; Defined at:
  2976 ;;		line 164 in file "main.c"
  2977 ;; Parameters:    Size  Location     Type
  2978 ;;		None
  2979 ;; Auto vars:     Size  Location     Type
  2980 ;;		None
  2981 ;; Return value:  Size  Location     Type
  2982 ;;                  1    wreg      void 
  2983 ;; Registers used:
  2984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2985 ;; Tracked objects:
  2986 ;;		On entry : 0/0
  2987 ;;		On exit  : 0/0
  2988 ;;		Unchanged: 0/0
  2989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2990 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2991 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2992 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2993 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2994 ;;Total ram usage:        0 bytes
  2995 ;; Hardware stack levels used: 1
  2996 ;; Hardware stack levels required when called: 9
  2997 ;; This function calls:
  2998 ;;		_triggerAlarm
  2999 ;; This function is called by:
  3000 ;;		_main
  3001 ;; This function uses a non-reentrant model
  3002 ;;
  3003                           
  3004                           	psect	text1
  3005   0018D2                     __ptext1:
  3006                           	callstack 0
  3007   0018D2                     _processAlarm:
  3008                           	callstack 21
  3009   0018D2                     
  3010                           ;main.c: 167:     if (alarmSet && !alarmTriggered)
  3011   0018D2  0100               	movlb	0	; () banked
  3012   0018D4  51AB               	movf	_alarmSet& (0+255),w,b
  3013   0018D6  B4D8               	btfsc	status,2,c
  3014   0018D8  EF70  F00C         	goto	u5021
  3015   0018DC  EF72  F00C         	goto	u5020
  3016   0018E0                     u5021:
  3017   0018E0  EF91  F00C         	goto	l464
  3018   0018E4                     u5020:
  3019   0018E4                     
  3020                           ; BSR set to: 0
  3021   0018E4  51A9               	movf	_alarmTriggered& (0+255),w,b
  3022   0018E6  A4D8               	btfss	status,2,c
  3023   0018E8  EF78  F00C         	goto	u5031
  3024   0018EC  EF7A  F00C         	goto	u5030
  3025   0018F0                     u5031:
  3026   0018F0  EF91  F00C         	goto	l464
  3027   0018F4                     u5030:
  3028   0018F4                     
  3029                           ; BSR set to: 0
  3030                           ;main.c: 168:     {;main.c: 170:         if (hours == alarmHours && minutes == alarmMinu
      +                          tes)
  3031   0018F4  51AD               	movf	_alarmHours& (0+255),w,b
  3032   0018F6  19B0               	xorwf	_hours& (0+255),w,b
  3033   0018F8  A4D8               	btfss	status,2,c
  3034   0018FA  EF81  F00C         	goto	u5041
  3035   0018FE  EF83  F00C         	goto	u5040
  3036   001902                     u5041:
  3037   001902  EF91  F00C         	goto	l464
  3038   001906                     u5040:
  3039   001906                     
  3040                           ; BSR set to: 0
  3041   001906  51AC               	movf	_alarmMinutes& (0+255),w,b
  3042   001908  19AF               	xorwf	_minutes& (0+255),w,b
  3043   00190A  A4D8               	btfss	status,2,c
  3044   00190C  EF8A  F00C         	goto	u5051
  3045   001910  EF8C  F00C         	goto	u5050
  3046   001914                     u5051:
  3047   001914  EF91  F00C         	goto	l464
  3048   001918                     u5050:
  3049   001918                     
  3050                           ; BSR set to: 0
  3051                           ;main.c: 171:         {;main.c: 172:             triggerAlarm();
  3052   001918  EC6D  F009         	call	_triggerAlarm	;wreg free
  3053   00191C                     
  3054                           ;main.c: 173:             alarmTriggered = 1;
  3055   00191C  0E01               	movlw	1
  3056   00191E  0100               	movlb	0	; () banked
  3057   001920  6FA9               	movwf	_alarmTriggered& (0+255),b
  3058   001922                     l464:
  3059                           
  3060                           ; BSR set to: 0
  3061   001922  0012               	return		;funcret
  3062   001924                     __end_of_processAlarm:
  3063                           	callstack 0
  3064                           
  3065 ;; *************** function _triggerAlarm *****************
  3066 ;; Defined at:
  3067 ;;		line 179 in file "main.c"
  3068 ;; Parameters:    Size  Location     Type
  3069 ;;		None
  3070 ;; Auto vars:     Size  Location     Type
  3071 ;;  i               2   13[BANK0 ] unsigned int 
  3072 ;;  numCycles       2   11[BANK0 ] unsigned int 
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3083 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3084 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3085 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3086 ;;Total ram usage:        6 bytes
  3087 ;; Hardware stack levels used: 1
  3088 ;; Hardware stack levels required when called: 8
  3089 ;; This function calls:
  3090 ;;		_clearAlarm
  3091 ;;		_clearDisplay
  3092 ;;		_generateBeep
  3093 ;;		_printString
  3094 ;; This function is called by:
  3095 ;;		_processAlarm
  3096 ;; This function uses a non-reentrant model
  3097 ;;
  3098                           
  3099                           	psect	text2
  3100   0012DA                     __ptext2:
  3101                           	callstack 0
  3102   0012DA                     _triggerAlarm:
  3103                           	callstack 21
  3104   0012DA                     
  3105                           ;main.c: 186:     unsigned int numCycles = 60000 / (2 * 500);
  3106   0012DA  0E00               	movlw	0
  3107   0012DC  0100               	movlb	0	; () banked
  3108   0012DE  6FBF               	movwf	(triggerAlarm@numCycles+1)& (0+255),b
  3109   0012E0  0E3C               	movlw	60
  3110   0012E2  6FBE               	movwf	triggerAlarm@numCycles& (0+255),b
  3111                           
  3112                           ;main.c: 188:     for (unsigned int i = 0; i < numCycles; i++)
  3113   0012E4  0E00               	movlw	0
  3114   0012E6  6FC1               	movwf	(triggerAlarm@i+1)& (0+255),b
  3115   0012E8  0E00               	movlw	0
  3116   0012EA  6FC0               	movwf	triggerAlarm@i& (0+255),b
  3117   0012EC  EFC0  F009         	goto	l4674
  3118   0012F0                     l468:
  3119                           
  3120                           ; BSR set to: 0
  3121                           ;main.c: 189:     {;main.c: 191:         if (!PORTBbits.RB2)
  3122   0012F0  B481               	btfsc	129,2,c	;volatile
  3123   0012F2  EF7D  F009         	goto	u4781
  3124   0012F6  EF7F  F009         	goto	u4780
  3125   0012FA                     u4781:
  3126   0012FA  EF99  F009         	goto	l4662
  3127   0012FE                     u4780:
  3128   0012FE                     
  3129                           ; BSR set to: 0
  3130                           ;main.c: 192:         {;main.c: 193:             _delay((unsigned long)((100)*(8000000/4
      +                          000.0)));
  3131   0012FE  0E02               	movlw	2
  3132   001300  6E51               	movwf	(??_triggerAlarm+1)^0,c
  3133   001302  0E04               	movlw	4
  3134   001304  6E50               	movwf	??_triggerAlarm^0,c
  3135   001306  0EBA               	movlw	186
  3136   001308                     u5257:
  3137   001308  2EE8               	decfsz	wreg,f,c
  3138   00130A  D7FE               	bra	u5257
  3139   00130C  2E50               	decfsz	??_triggerAlarm^0,f,c
  3140   00130E  D7FC               	bra	u5257
  3141   001310  2E51               	decfsz	(??_triggerAlarm+1)^0,f,c
  3142   001312  D7FA               	bra	u5257
  3143   001314  F000 F000          	nop2	
  3144   001318                     
  3145                           ;main.c: 194:             if (!PORTBbits.RB2)
  3146   001318  B481               	btfsc	129,2,c	;volatile
  3147   00131A  EF91  F009         	goto	u4791
  3148   00131E  EF93  F009         	goto	u4790
  3149   001322                     u4791:
  3150   001322  EF99  F009         	goto	l4662
  3151   001326                     u4790:
  3152   001326                     
  3153                           ;main.c: 195:             {;main.c: 196:                 clearDisplay();
  3154   001326  EC28  F00D         	call	_clearDisplay	;wreg free
  3155   00132A                     
  3156                           ;main.c: 197:                 clearAlarm();
  3157   00132A  EC2A  F00E         	call	_clearAlarm	;wreg free
  3158   00132E  EFCB  F009         	goto	l471
  3159   001332                     l4662:
  3160                           
  3161                           ;main.c: 203:         printString("ALARM");
  3162   001332  0EF9               	movlw	low STR_1
  3163   001334  6E46               	movwf	printString@str^0,c
  3164   001336  0EFF               	movlw	high STR_1
  3165   001338  6E47               	movwf	(printString@str+1)^0,c
  3166   00133A  EC6D  F005         	call	_printString	;wreg free
  3167   00133E                     
  3168                           ;main.c: 205:         generateBeep(500);
  3169   00133E  0E01               	movlw	1
  3170   001340  6E14               	movwf	(generateBeep@duration_ms+1)^0,c
  3171   001342  0EF4               	movlw	244
  3172   001344  6E13               	movwf	generateBeep@duration_ms^0,c
  3173   001346  ECC1  F00B         	call	_generateBeep	;wreg free
  3174   00134A                     
  3175                           ;main.c: 206:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3176   00134A  0E06               	movlw	6
  3177   00134C  6E51               	movwf	(??_triggerAlarm+1)^0,c
  3178   00134E  0E13               	movlw	19
  3179   001350  6E50               	movwf	??_triggerAlarm^0,c
  3180   001352  0EAE               	movlw	174
  3181   001354                     u5267:
  3182   001354  2EE8               	decfsz	wreg,f,c
  3183   001356  D7FE               	bra	u5267
  3184   001358  2E50               	decfsz	??_triggerAlarm^0,f,c
  3185   00135A  D7FC               	bra	u5267
  3186   00135C  2E51               	decfsz	(??_triggerAlarm+1)^0,f,c
  3187   00135E  D7FA               	bra	u5267
  3188   001360                     
  3189                           ;main.c: 207:         clearDisplay();
  3190   001360  EC28  F00D         	call	_clearDisplay	;wreg free
  3191   001364                     
  3192                           ;main.c: 209:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3193   001364  0E06               	movlw	6
  3194   001366  6E51               	movwf	(??_triggerAlarm+1)^0,c
  3195   001368  0E13               	movlw	19
  3196   00136A  6E50               	movwf	??_triggerAlarm^0,c
  3197   00136C  0EAE               	movlw	174
  3198   00136E                     u5277:
  3199   00136E  2EE8               	decfsz	wreg,f,c
  3200   001370  D7FE               	bra	u5277
  3201   001372  2E50               	decfsz	??_triggerAlarm^0,f,c
  3202   001374  D7FC               	bra	u5277
  3203   001376  2E51               	decfsz	(??_triggerAlarm+1)^0,f,c
  3204   001378  D7FA               	bra	u5277
  3205   00137A                     
  3206                           ;main.c: 210:     }
  3207   00137A  0100               	movlb	0	; () banked
  3208   00137C  4BC0               	infsnz	triggerAlarm@i& (0+255),f,b
  3209   00137E  2BC1               	incf	(triggerAlarm@i+1)& (0+255),f,b
  3210   001380                     l4674:
  3211                           
  3212                           ; BSR set to: 0
  3213   001380  51BE               	movf	triggerAlarm@numCycles& (0+255),w,b
  3214   001382  5DC0               	subwf	triggerAlarm@i& (0+255),w,b
  3215   001384  51BF               	movf	(triggerAlarm@numCycles+1)& (0+255),w,b
  3216   001386  59C1               	subwfb	(triggerAlarm@i+1)& (0+255),w,b
  3217   001388  A0D8               	btfss	status,0,c
  3218   00138A  EFC9  F009         	goto	u4801
  3219   00138E  EFCB  F009         	goto	u4800
  3220   001392                     u4801:
  3221   001392  EF78  F009         	goto	l468
  3222   001396                     u4800:
  3223   001396                     l471:
  3224   001396  0012               	return		;funcret
  3225   001398                     __end_of_triggerAlarm:
  3226                           	callstack 0
  3227                           
  3228 ;; *************** function _generateBeep *****************
  3229 ;; Defined at:
  3230 ;;		line 99 in file "main.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  duration_ms     2   18[COMRAM] unsigned int 
  3233 ;; Auto vars:     Size  Location     Type
  3234 ;;  i               2   22[COMRAM] unsigned int 
  3235 ;;  cycles          2   20[COMRAM] unsigned int 
  3236 ;; Return value:  Size  Location     Type
  3237 ;;                  1    wreg      void 
  3238 ;; Registers used:
  3239 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3240 ;; Tracked objects:
  3241 ;;		On entry : 0/0
  3242 ;;		On exit  : 0/0
  3243 ;;		Unchanged: 0/0
  3244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3248 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3249 ;;Total ram usage:        6 bytes
  3250 ;; Hardware stack levels used: 1
  3251 ;; Hardware stack levels required when called: 5
  3252 ;; This function calls:
  3253 ;;		___lwdiv
  3254 ;;		___wmul
  3255 ;;		_delayMicroseconds
  3256 ;; This function is called by:
  3257 ;;		_triggerAlarm
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261                           	psect	text3
  3262   001782                     __ptext3:
  3263                           	callstack 0
  3264   001782                     _generateBeep:
  3265                           	callstack 23
  3266   001782                     
  3267                           ;main.c: 100:     unsigned int i;;main.c: 101:     unsigned int cycles = (duration_ms * 
      +                          1000) / 244;
  3268   001782  C013  F006         	movff	generateBeep@duration_ms,___wmul@multiplier
  3269   001786  C014  F007         	movff	generateBeep@duration_ms+1,___wmul@multiplier+1
  3270   00178A  0E03               	movlw	3
  3271   00178C  6E09               	movwf	(___wmul@multiplicand+1)^0,c
  3272   00178E  0EE8               	movlw	232
  3273   001790  6E08               	movwf	___wmul@multiplicand^0,c
  3274   001792  ECDC  F00D         	call	___wmul	;wreg free
  3275   001796  C006  F00C         	movff	?___wmul,___lwdiv@dividend
  3276   00179A  C007  F00D         	movff	?___wmul+1,___lwdiv@dividend+1
  3277   00179E  0E00               	movlw	0
  3278   0017A0  6E0F               	movwf	(___lwdiv@divisor+1)^0,c
  3279   0017A2  0EF4               	movlw	244
  3280   0017A4  6E0E               	movwf	___lwdiv@divisor^0,c
  3281   0017A6  ECFB  F00B         	call	___lwdiv	;wreg free
  3282   0017AA  C00C  F015         	movff	?___lwdiv,generateBeep@cycles
  3283   0017AE  C00D  F016         	movff	?___lwdiv+1,generateBeep@cycles+1
  3284   0017B2                     
  3285                           ;main.c: 102:     for (i = 0; i < cycles; i++) {
  3286   0017B2  0E00               	movlw	0
  3287   0017B4  6E18               	movwf	(generateBeep@i+1)^0,c
  3288   0017B6  0E00               	movlw	0
  3289   0017B8  6E17               	movwf	generateBeep@i^0,c
  3290   0017BA  EFEF  F00B         	goto	l4412
  3291   0017BE                     l441:
  3292                           
  3293                           ;main.c: 103:         LATBbits.LATB3 = 1;
  3294   0017BE  868A               	bsf	138,3,c	;volatile
  3295   0017C0                     
  3296                           ;main.c: 104:         delayMicroseconds(122);
  3297   0017C0  0E00               	movlw	0
  3298   0017C2  6E07               	movwf	(delayMicroseconds@microseconds+1)^0,c
  3299   0017C4  0E7A               	movlw	122
  3300   0017C6  6E06               	movwf	delayMicroseconds@microseconds^0,c
  3301   0017C8  ECC7  F00D         	call	_delayMicroseconds	;wreg free
  3302   0017CC                     
  3303                           ;main.c: 105:         LATBbits.LATB3 = 0;
  3304   0017CC  968A               	bcf	138,3,c	;volatile
  3305                           
  3306                           ;main.c: 106:         delayMicroseconds(122);
  3307   0017CE  0E00               	movlw	0
  3308   0017D0  6E07               	movwf	(delayMicroseconds@microseconds+1)^0,c
  3309   0017D2  0E7A               	movlw	122
  3310   0017D4  6E06               	movwf	delayMicroseconds@microseconds^0,c
  3311   0017D6  ECC7  F00D         	call	_delayMicroseconds	;wreg free
  3312   0017DA                     
  3313                           ;main.c: 107:     }
  3314   0017DA  4A17               	infsnz	generateBeep@i^0,f,c
  3315   0017DC  2A18               	incf	(generateBeep@i+1)^0,f,c
  3316   0017DE                     l4412:
  3317   0017DE  5015               	movf	generateBeep@cycles^0,w,c
  3318   0017E0  5C17               	subwf	generateBeep@i^0,w,c
  3319   0017E2  5016               	movf	(generateBeep@cycles+1)^0,w,c
  3320   0017E4  5818               	subwfb	(generateBeep@i+1)^0,w,c
  3321   0017E6  A0D8               	btfss	status,0,c
  3322   0017E8  EFF8  F00B         	goto	u4511
  3323   0017EC  EFFA  F00B         	goto	u4510
  3324   0017F0                     u4511:
  3325   0017F0  EFDF  F00B         	goto	l441
  3326   0017F4                     u4510:
  3327   0017F4  0012               	return		;funcret
  3328   0017F6                     __end_of_generateBeep:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function _delayMicroseconds *****************
  3332 ;; Defined at:
  3333 ;;		line 89 in file "main.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  microseconds    2    5[COMRAM] unsigned int 
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;  i               2    7[COMRAM] unsigned int 
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, status,2, status,0
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3347 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3348 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3349 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;Total ram usage:        4 bytes
  3352 ;; Hardware stack levels used: 1
  3353 ;; Hardware stack levels required when called: 4
  3354 ;; This function calls:
  3355 ;;		Nothing
  3356 ;; This function is called by:
  3357 ;;		_generateBeep
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text4
  3362   001B8E                     __ptext4:
  3363                           	callstack 0
  3364   001B8E                     _delayMicroseconds:
  3365                           	callstack 23
  3366   001B8E                     
  3367                           ;main.c: 91:     unsigned int i;;main.c: 92:     for (i = 0; i < microseconds; i++) {
  3368   001B8E  0E00               	movlw	0
  3369   001B90  6E09               	movwf	(delayMicroseconds@i+1)^0,c
  3370   001B92  0E00               	movlw	0
  3371   001B94  6E08               	movwf	delayMicroseconds@i^0,c
  3372   001B96  EFD0  F00D         	goto	l4180
  3373   001B9A                     l435:
  3374   001B9A  0000               	nop		;# 
  3375   001B9C                     
  3376                           ;main.c: 96:     }
  3377   001B9C  4A08               	infsnz	delayMicroseconds@i^0,f,c
  3378   001B9E  2A09               	incf	(delayMicroseconds@i+1)^0,f,c
  3379   001BA0                     l4180:
  3380   001BA0  5006               	movf	delayMicroseconds@microseconds^0,w,c
  3381   001BA2  5C08               	subwf	delayMicroseconds@i^0,w,c
  3382   001BA4  5007               	movf	(delayMicroseconds@microseconds+1)^0,w,c
  3383   001BA6  5809               	subwfb	(delayMicroseconds@i+1)^0,w,c
  3384   001BA8  A0D8               	btfss	status,0,c
  3385   001BAA  EFD9  F00D         	goto	u4191
  3386   001BAE  EFDB  F00D         	goto	u4190
  3387   001BB2                     u4191:
  3388   001BB2  EFCD  F00D         	goto	l435
  3389   001BB6                     u4190:
  3390   001BB6  0012               	return		;funcret
  3391   001BB8                     __end_of_delayMicroseconds:
  3392                           	callstack 0
  3393                           
  3394 ;; *************** function ___wmul *****************
  3395 ;; Defined at:
  3396 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  multiplier      2    5[COMRAM] unsigned int 
  3399 ;;  multiplicand    2    7[COMRAM] unsigned int 
  3400 ;; Auto vars:     Size  Location     Type
  3401 ;;  product         2    9[COMRAM] unsigned int 
  3402 ;; Return value:  Size  Location     Type
  3403 ;;                  2    5[COMRAM] unsigned int 
  3404 ;; Registers used:
  3405 ;;		wreg, status,2, status,0, prodl, prodh
  3406 ;; Tracked objects:
  3407 ;;		On entry : 0/0
  3408 ;;		On exit  : 0/0
  3409 ;;		Unchanged: 0/0
  3410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3411 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3412 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3414 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3415 ;;Total ram usage:        6 bytes
  3416 ;; Hardware stack levels used: 1
  3417 ;; Hardware stack levels required when called: 4
  3418 ;; This function calls:
  3419 ;;		Nothing
  3420 ;; This function is called by:
  3421 ;;		_generateBeep
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           	psect	text5
  3426   001BB8                     __ptext5:
  3427                           	callstack 0
  3428   001BB8                     ___wmul:
  3429                           	callstack 23
  3430   001BB8  5006               	movf	___wmul@multiplier^0,w,c
  3431   001BBA  0208               	mulwf	___wmul@multiplicand^0,c
  3432   001BBC  CFF3 F00A          	movff	prodl,___wmul@product
  3433   001BC0  CFF4 F00B          	movff	prodh,___wmul@product+1
  3434   001BC4  5006               	movf	___wmul@multiplier^0,w,c
  3435   001BC6  0209               	mulwf	(___wmul@multiplicand+1)^0,c
  3436   001BC8  50F3               	movf	243,w,c
  3437   001BCA  260B               	addwf	(___wmul@product+1)^0,f,c
  3438   001BCC  5007               	movf	(___wmul@multiplier+1)^0,w,c
  3439   001BCE  0208               	mulwf	___wmul@multiplicand^0,c
  3440   001BD0  50F3               	movf	243,w,c
  3441   001BD2  260B               	addwf	(___wmul@product+1)^0,f,c
  3442   001BD4  C00A  F006         	movff	___wmul@product,?___wmul
  3443   001BD8  C00B  F007         	movff	___wmul@product+1,?___wmul+1
  3444   001BDC  0012               	return		;funcret
  3445   001BDE                     __end_of___wmul:
  3446                           	callstack 0
  3447                           
  3448 ;; *************** function ___lwdiv *****************
  3449 ;; Defined at:
  3450 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3451 ;; Parameters:    Size  Location     Type
  3452 ;;  dividend        2   11[COMRAM] unsigned int 
  3453 ;;  divisor         2   13[COMRAM] unsigned int 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  quotient        2   16[COMRAM] unsigned int 
  3456 ;;  counter         1   15[COMRAM] unsigned char 
  3457 ;; Return value:  Size  Location     Type
  3458 ;;                  2   11[COMRAM] unsigned int 
  3459 ;; Registers used:
  3460 ;;		wreg, status,2, status,0
  3461 ;; Tracked objects:
  3462 ;;		On entry : 0/0
  3463 ;;		On exit  : 0/0
  3464 ;;		Unchanged: 0/0
  3465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3466 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3467 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3469 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3470 ;;Total ram usage:        7 bytes
  3471 ;; Hardware stack levels used: 1
  3472 ;; Hardware stack levels required when called: 4
  3473 ;; This function calls:
  3474 ;;		Nothing
  3475 ;; This function is called by:
  3476 ;;		_generateBeep
  3477 ;; This function uses a non-reentrant model
  3478 ;;
  3479                           
  3480                           	psect	text6
  3481   0017F6                     __ptext6:
  3482                           	callstack 0
  3483   0017F6                     ___lwdiv:
  3484                           	callstack 23
  3485   0017F6  0E00               	movlw	0
  3486   0017F8  6E12               	movwf	(___lwdiv@quotient+1)^0,c
  3487   0017FA  0E00               	movlw	0
  3488   0017FC  6E11               	movwf	___lwdiv@quotient^0,c
  3489   0017FE  500E               	movf	___lwdiv@divisor^0,w,c
  3490   001800  100F               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3491   001802  B4D8               	btfsc	status,2,c
  3492   001804  EF06  F00C         	goto	u4331
  3493   001808  EF08  F00C         	goto	u4330
  3494   00180C                     u4331:
  3495   00180C  EF30  F00C         	goto	l1110
  3496   001810                     u4330:
  3497   001810  0E01               	movlw	1
  3498   001812  6E10               	movwf	___lwdiv@counter^0,c
  3499   001814  EF10  F00C         	goto	l4272
  3500   001818                     l4270:
  3501   001818  90D8               	bcf	status,0,c
  3502   00181A  360E               	rlcf	___lwdiv@divisor^0,f,c
  3503   00181C  360F               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3504   00181E  2A10               	incf	___lwdiv@counter^0,f,c
  3505   001820                     l4272:
  3506   001820  AE0F               	btfss	(___lwdiv@divisor+1)^0,7,c
  3507   001822  EF15  F00C         	goto	u4341
  3508   001826  EF17  F00C         	goto	u4340
  3509   00182A                     u4341:
  3510   00182A  EF0C  F00C         	goto	l4270
  3511   00182E                     u4340:
  3512   00182E                     l4274:
  3513   00182E  90D8               	bcf	status,0,c
  3514   001830  3611               	rlcf	___lwdiv@quotient^0,f,c
  3515   001832  3612               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3516   001834  500E               	movf	___lwdiv@divisor^0,w,c
  3517   001836  5C0C               	subwf	___lwdiv@dividend^0,w,c
  3518   001838  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  3519   00183A  580D               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3520   00183C  A0D8               	btfss	status,0,c
  3521   00183E  EF23  F00C         	goto	u4351
  3522   001842  EF25  F00C         	goto	u4350
  3523   001846                     u4351:
  3524   001846  EF2A  F00C         	goto	l4282
  3525   00184A                     u4350:
  3526   00184A  500E               	movf	___lwdiv@divisor^0,w,c
  3527   00184C  5E0C               	subwf	___lwdiv@dividend^0,f,c
  3528   00184E  500F               	movf	(___lwdiv@divisor+1)^0,w,c
  3529   001850  5A0D               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3530   001852  8011               	bsf	___lwdiv@quotient^0,0,c
  3531   001854                     l4282:
  3532   001854  90D8               	bcf	status,0,c
  3533   001856  320F               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3534   001858  320E               	rrcf	___lwdiv@divisor^0,f,c
  3535   00185A  2E10               	decfsz	___lwdiv@counter^0,f,c
  3536   00185C  EF17  F00C         	goto	l4274
  3537   001860                     l1110:
  3538   001860  C011  F00C         	movff	___lwdiv@quotient,?___lwdiv
  3539   001864  C012  F00D         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3540   001868  0012               	return		;funcret
  3541   00186A                     __end_of___lwdiv:
  3542                           	callstack 0
  3543                           
  3544 ;; *************** function _clearDisplay *****************
  3545 ;; Defined at:
  3546 ;;		line 105 in file "MAX7219.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;  i               2   69[COMRAM] int 
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3560 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3561 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3562 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3563 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3564 ;;Total ram usage:        2 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 7
  3567 ;; This function calls:
  3568 ;;		_flushBuffer
  3569 ;; This function is called by:
  3570 ;;		_main
  3571 ;;		_triggerAlarm
  3572 ;; This function uses a non-reentrant model
  3573 ;;
  3574                           
  3575                           	psect	text7
  3576   001A50                     __ptext7:
  3577                           	callstack 0
  3578   001A50                     _clearDisplay:
  3579                           	callstack 21
  3580   001A50                     
  3581                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  3582   001A50  0E00               	movlw	0
  3583   001A52  6E47               	movwf	(clearDisplay@i+1)^0,c
  3584   001A54  0E00               	movlw	0
  3585   001A56  6E46               	movwf	clearDisplay@i^0,c
  3586   001A58                     l4394:
  3587                           
  3588                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  3589   001A58  5046               	movf	clearDisplay@i^0,w,c
  3590   001A5A  0F60               	addlw	low _bufferCol
  3591   001A5C  6ED9               	movwf	fsr2l,c
  3592   001A5E  6ADA               	clrf	fsr2h,c
  3593   001A60  6ADF               	clrf	indf2,c
  3594   001A62                     
  3595                           ;MAX7219.c: 110:  }
  3596   001A62  4A46               	infsnz	clearDisplay@i^0,f,c
  3597   001A64  2A47               	incf	(clearDisplay@i+1)^0,f,c
  3598   001A66  BE47               	btfsc	(clearDisplay@i+1)^0,7,c
  3599   001A68  EF3F  F00D         	goto	u4501
  3600   001A6C  5047               	movf	(clearDisplay@i+1)^0,w,c
  3601   001A6E  E109               	bnz	u4500
  3602   001A70  0E1F               	movlw	31
  3603   001A72  5C46               	subwf	clearDisplay@i^0,w,c
  3604   001A74  A0D8               	btfss	status,0,c
  3605   001A76  EF3F  F00D         	goto	u4501
  3606   001A7A  EF41  F00D         	goto	u4500
  3607   001A7E                     u4501:
  3608   001A7E  EF2C  F00D         	goto	l4394
  3609   001A82                     u4500:
  3610   001A82                     
  3611                           ;MAX7219.c: 111:  flushBuffer();
  3612   001A82  EC37  F006         	call	_flushBuffer	;wreg free
  3613   001A86  0012               	return		;funcret
  3614   001A88                     __end_of_clearDisplay:
  3615                           	callstack 0
  3616                           
  3617 ;; *************** function _matrixInit *****************
  3618 ;; Defined at:
  3619 ;;		line 96 in file "MAX7219.c"
  3620 ;; Parameters:    Size  Location     Type
  3621 ;;		None
  3622 ;; Auto vars:     Size  Location     Type
  3623 ;;		None
  3624 ;; Return value:  Size  Location     Type
  3625 ;;                  1    wreg      void 
  3626 ;; Registers used:
  3627 ;;		wreg, status,2, status,0, cstack
  3628 ;; Tracked objects:
  3629 ;;		On entry : 0/0
  3630 ;;		On exit  : 0/0
  3631 ;;		Unchanged: 0/0
  3632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3637 ;;Total ram usage:        0 bytes
  3638 ;; Hardware stack levels used: 1
  3639 ;; Hardware stack levels required when called: 6
  3640 ;; This function calls:
  3641 ;;		_max7219_cmd
  3642 ;; This function is called by:
  3643 ;;		_main
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text8
  3648   001AF8                     __ptext8:
  3649                           	callstack 0
  3650   001AF8                     _matrixInit:
  3651                           	callstack 24
  3652   001AF8                     
  3653                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  3654   001AF8  0E00               	movlw	0
  3655   001AFA  6E07               	movwf	max7219_cmd@data^0,c
  3656   001AFC  0E09               	movlw	9
  3657   001AFE  EC92  F00C         	call	_max7219_cmd
  3658                           
  3659                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  3660   001B02  0E01               	movlw	1
  3661   001B04  6E07               	movwf	max7219_cmd@data^0,c
  3662   001B06  0E0A               	movlw	10
  3663   001B08  EC92  F00C         	call	_max7219_cmd
  3664                           
  3665                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  3666   001B0C  0E07               	movlw	7
  3667   001B0E  6E07               	movwf	max7219_cmd@data^0,c
  3668   001B10  0E0B               	movlw	11
  3669   001B12  EC92  F00C         	call	_max7219_cmd
  3670                           
  3671                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  3672   001B16  0E01               	movlw	1
  3673   001B18  6E07               	movwf	max7219_cmd@data^0,c
  3674   001B1A  0E0C               	movlw	12
  3675   001B1C  EC92  F00C         	call	_max7219_cmd
  3676                           
  3677                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  3678   001B20  0E00               	movlw	0
  3679   001B22  6E07               	movwf	max7219_cmd@data^0,c
  3680   001B24  0E0F               	movlw	15
  3681   001B26  EC92  F00C         	call	_max7219_cmd
  3682   001B2A  0012               	return		;funcret
  3683   001B2C                     __end_of_matrixInit:
  3684                           	callstack 0
  3685                           
  3686 ;; *************** function _max7219_cmd *****************
  3687 ;; Defined at:
  3688 ;;		line 76 in file "MAX7219.c"
  3689 ;; Parameters:    Size  Location     Type
  3690 ;;  Addr            1    wreg     unsigned char 
  3691 ;;  data            1    6[COMRAM] unsigned char 
  3692 ;; Auto vars:     Size  Location     Type
  3693 ;;  Addr            1    9[COMRAM] unsigned char 
  3694 ;;  i               2   12[COMRAM] int 
  3695 ;;  writeData       2   10[COMRAM] unsigned short 
  3696 ;; Return value:  Size  Location     Type
  3697 ;;                  1    wreg      void 
  3698 ;; Registers used:
  3699 ;;		wreg, status,2, status,0, cstack
  3700 ;; Tracked objects:
  3701 ;;		On entry : 0/0
  3702 ;;		On exit  : 0/0
  3703 ;;		Unchanged: 0/0
  3704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3705 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3706 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3708 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3709 ;;Total ram usage:        8 bytes
  3710 ;; Hardware stack levels used: 1
  3711 ;; Hardware stack levels required when called: 5
  3712 ;; This function calls:
  3713 ;;		_SPI_Exchange8bit
  3714 ;; This function is called by:
  3715 ;;		_matrixInit
  3716 ;; This function uses a non-reentrant model
  3717 ;;
  3718                           
  3719                           	psect	text9
  3720   001924                     __ptext9:
  3721                           	callstack 0
  3722   001924                     _max7219_cmd:
  3723                           	callstack 24
  3724                           
  3725                           ;incstack = 0
  3726                           ;max7219_cmd@Addr stored from wreg
  3727   001924  6E0A               	movwf	max7219_cmd@Addr^0,c
  3728   001926                     
  3729                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  3730   001926  5007               	movf	max7219_cmd@data^0,w,c
  3731   001928  C00A  F008         	movff	max7219_cmd@Addr,??_max7219_cmd
  3732   00192C  6A09               	clrf	(??_max7219_cmd+1)^0,c
  3733   00192E  C008  F009         	movff	??_max7219_cmd,??_max7219_cmd+1
  3734   001932  6A08               	clrf	??_max7219_cmd^0,c
  3735   001934  1008               	iorwf	??_max7219_cmd^0,w,c
  3736   001936  6E0B               	movwf	max7219_cmd@writeData^0,c
  3737   001938  5009               	movf	(??_max7219_cmd+1)^0,w,c
  3738   00193A  6E0C               	movwf	(max7219_cmd@writeData+1)^0,c
  3739   00193C  948B               	bcf	139,2,c	;volatile
  3740   00193E                     
  3741                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  3742   00193E  0E00               	movlw	0
  3743   001940  6E0E               	movwf	(max7219_cmd@i+1)^0,c
  3744   001942  0E00               	movlw	0
  3745   001944  6E0D               	movwf	max7219_cmd@i^0,c
  3746   001946                     l4686:
  3747                           
  3748                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  3749   001946  500C               	movf	(max7219_cmd@writeData+1)^0,w,c
  3750   001948  EC00  F00E         	call	_SPI_Exchange8bit
  3751                           
  3752                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  3753   00194C  500B               	movf	max7219_cmd@writeData^0,w,c
  3754   00194E  EC00  F00E         	call	_SPI_Exchange8bit
  3755   001952                     
  3756                           ;MAX7219.c: 90:  }
  3757   001952  4A0D               	infsnz	max7219_cmd@i^0,f,c
  3758   001954  2A0E               	incf	(max7219_cmd@i+1)^0,f,c
  3759   001956  BE0E               	btfsc	(max7219_cmd@i+1)^0,7,c
  3760   001958  EFB7  F00C         	goto	u4811
  3761   00195C  500E               	movf	(max7219_cmd@i+1)^0,w,c
  3762   00195E  E109               	bnz	u4810
  3763   001960  0E04               	movlw	4
  3764   001962  5C0D               	subwf	max7219_cmd@i^0,w,c
  3765   001964  A0D8               	btfss	status,0,c
  3766   001966  EFB7  F00C         	goto	u4811
  3767   00196A  EFB9  F00C         	goto	u4810
  3768   00196E                     u4811:
  3769   00196E  EFA3  F00C         	goto	l4686
  3770   001972                     u4810:
  3771   001972  848B               	bsf	139,2,c	;volatile
  3772   001974  0012               	return		;funcret
  3773   001976                     __end_of_max7219_cmd:
  3774                           	callstack 0
  3775                           
  3776 ;; *************** function _loadTimeFromFlash *****************
  3777 ;; Defined at:
  3778 ;;		line 350 in file "main.c"
  3779 ;; Parameters:    Size  Location     Type
  3780 ;;		None
  3781 ;; Auto vars:     Size  Location     Type
  3782 ;;  flashAddress    4    0        unsigned long 
  3783 ;; Return value:  Size  Location     Type
  3784 ;;                  1    wreg      void 
  3785 ;; Registers used:
  3786 ;;		wreg, status,2, status,0, cstack
  3787 ;; Tracked objects:
  3788 ;;		On entry : 0/0
  3789 ;;		On exit  : 0/0
  3790 ;;		Unchanged: 0/0
  3791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3792 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3793 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3795 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3796 ;;Total ram usage:        0 bytes
  3797 ;; Hardware stack levels used: 1
  3798 ;; Hardware stack levels required when called: 5
  3799 ;; This function calls:
  3800 ;;		_FLASH_ReadByte
  3801 ;; This function is called by:
  3802 ;;		_main
  3803 ;; This function uses a non-reentrant model
  3804 ;;
  3805                           
  3806                           	psect	text10
  3807   001398                     __ptext10:
  3808                           	callstack 0
  3809   001398                     _loadTimeFromFlash:
  3810                           	callstack 25
  3811   001398                     
  3812                           ;main.c: 353:     hours = FLASH_ReadByte(flashAddress);
  3813   001398  0E80               	movlw	128
  3814   00139A  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3815   00139C  0E1F               	movlw	31
  3816   00139E  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3817   0013A0  0E00               	movlw	0
  3818   0013A2  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3819   0013A4  0E00               	movlw	0
  3820   0013A6  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3821   0013A8  EC1A  F00E         	call	_FLASH_ReadByte	;wreg free
  3822   0013AC  0100               	movlb	0	; () banked
  3823   0013AE  6FB0               	movwf	_hours& (0+255),b
  3824   0013B0                     
  3825                           ; BSR set to: 0
  3826                           ;main.c: 354:     minutes = FLASH_ReadByte(flashAddress + 1);
  3827   0013B0  0E81               	movlw	129
  3828   0013B2  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3829   0013B4  0E1F               	movlw	31
  3830   0013B6  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3831   0013B8  0E00               	movlw	0
  3832   0013BA  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3833   0013BC  0E00               	movlw	0
  3834   0013BE  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3835   0013C0  EC1A  F00E         	call	_FLASH_ReadByte	;wreg free
  3836   0013C4  0100               	movlb	0	; () banked
  3837   0013C6  6FAF               	movwf	_minutes& (0+255),b
  3838   0013C8                     
  3839                           ; BSR set to: 0
  3840                           ;main.c: 355:     alarmHours = FLASH_ReadByte(flashAddress + 2);
  3841   0013C8  0E82               	movlw	130
  3842   0013CA  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3843   0013CC  0E1F               	movlw	31
  3844   0013CE  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3845   0013D0  0E00               	movlw	0
  3846   0013D2  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3847   0013D4  0E00               	movlw	0
  3848   0013D6  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3849   0013D8  EC1A  F00E         	call	_FLASH_ReadByte	;wreg free
  3850   0013DC  0100               	movlb	0	; () banked
  3851   0013DE  6FAD               	movwf	_alarmHours& (0+255),b
  3852   0013E0                     
  3853                           ; BSR set to: 0
  3854                           ;main.c: 356:     alarmMinutes = FLASH_ReadByte(flashAddress + 3);
  3855   0013E0  0E83               	movlw	131
  3856   0013E2  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3857   0013E4  0E1F               	movlw	31
  3858   0013E6  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3859   0013E8  0E00               	movlw	0
  3860   0013EA  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3861   0013EC  0E00               	movlw	0
  3862   0013EE  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3863   0013F0  EC1A  F00E         	call	_FLASH_ReadByte	;wreg free
  3864   0013F4  0100               	movlb	0	; () banked
  3865   0013F6  6FAC               	movwf	_alarmMinutes& (0+255),b
  3866   0013F8                     
  3867                           ; BSR set to: 0
  3868                           ;main.c: 357:     alarmSet = FLASH_ReadByte(flashAddress + 4);
  3869   0013F8  0E84               	movlw	132
  3870   0013FA  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3871   0013FC  0E1F               	movlw	31
  3872   0013FE  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3873   001400  0E00               	movlw	0
  3874   001402  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3875   001404  0E00               	movlw	0
  3876   001406  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3877   001408  EC1A  F00E         	call	_FLASH_ReadByte	;wreg free
  3878   00140C  0900               	iorlw	0
  3879   00140E  A4D8               	btfss	status,2,c
  3880   001410  EF0C  F00A         	goto	u4831
  3881   001414  EF0F  F00A         	goto	u4830
  3882   001418                     u4831:
  3883   001418  0E01               	movlw	1
  3884   00141A  EF10  F00A         	goto	u4840
  3885   00141E                     u4830:
  3886   00141E  0E00               	movlw	0
  3887   001420                     u4840:
  3888   001420  0100               	movlb	0	; () banked
  3889   001422  6FAB               	movwf	_alarmSet& (0+255),b
  3890   001424                     
  3891                           ; BSR set to: 0
  3892                           ;main.c: 359:     if (hours >= 24) hours = 0;
  3893   001424  0E17               	movlw	23
  3894   001426  65B0               	cpfsgt	_hours& (0+255),b
  3895   001428  EF18  F00A         	goto	u4851
  3896   00142C  EF1A  F00A         	goto	u4850
  3897   001430                     u4851:
  3898   001430  EF1C  F00A         	goto	l4740
  3899   001434                     u4850:
  3900   001434                     
  3901                           ; BSR set to: 0
  3902   001434  0E00               	movlw	0
  3903   001436  6FB0               	movwf	_hours& (0+255),b
  3904   001438                     l4740:
  3905                           
  3906                           ; BSR set to: 0
  3907                           ;main.c: 360:     if (minutes >= 60) minutes = 0;
  3908   001438  0E3B               	movlw	59
  3909   00143A  65AF               	cpfsgt	_minutes& (0+255),b
  3910   00143C  EF22  F00A         	goto	u4861
  3911   001440  EF24  F00A         	goto	u4860
  3912   001444                     u4861:
  3913   001444  EF26  F00A         	goto	l515
  3914   001448                     u4860:
  3915   001448                     
  3916                           ; BSR set to: 0
  3917   001448  0E00               	movlw	0
  3918   00144A  6FAF               	movwf	_minutes& (0+255),b
  3919   00144C                     l515:
  3920                           
  3921                           ; BSR set to: 0
  3922   00144C  0012               	return		;funcret
  3923   00144E                     __end_of_loadTimeFromFlash:
  3924                           	callstack 0
  3925                           
  3926 ;; *************** function _checkButtons *****************
  3927 ;; Defined at:
  3928 ;;		line 226 in file "main.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3944 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3945 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3946 ;;Total ram usage:        2 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 9
  3949 ;; This function calls:
  3950 ;;		___awmod
  3951 ;;		_clearAlarm
  3952 ;;		_displayAlarmTime
  3953 ;;		_displayTime
  3954 ;;		_saveTimeToFlash
  3955 ;; This function is called by:
  3956 ;;		_main
  3957 ;; This function uses a non-reentrant model
  3958 ;;
  3959                           
  3960                           	psect	text11
  3961   000844                     __ptext11:
  3962                           	callstack 0
  3963   000844                     _checkButtons:
  3964                           	callstack 21
  3965   000844                     
  3966                           ;main.c: 228:     static uint8_t button3PressCount = 0;;main.c: 229:     static uint16_t
      +                           button3HoldTime = 0;;main.c: 230:     static _Bool alarmSettingMode = 0;;main.c: 233:  
      +                             if (!PORTBbits.RB0)
  3967   000844  B081               	btfsc	129,0,c	;volatile
  3968   000846  EF27  F004         	goto	u4871
  3969   00084A  EF29  F004         	goto	u4870
  3970   00084E                     u4871:
  3971   00084E  EF6A  F004         	goto	l4760
  3972   000852                     u4870:
  3973   000852                     
  3974                           ;main.c: 234:     {;main.c: 235:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3975   000852  0E02               	movlw	2
  3976   000854  6E51               	movwf	(??_checkButtons+1)^0,c
  3977   000856  0E04               	movlw	4
  3978   000858  6E50               	movwf	??_checkButtons^0,c
  3979   00085A  0EBA               	movlw	186
  3980   00085C                     u5287:
  3981   00085C  2EE8               	decfsz	wreg,f,c
  3982   00085E  D7FE               	bra	u5287
  3983   000860  2E50               	decfsz	??_checkButtons^0,f,c
  3984   000862  D7FC               	bra	u5287
  3985   000864  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  3986   000866  D7FA               	bra	u5287
  3987   000868  F000 F000          	nop2	
  3988   00086C                     
  3989                           ;main.c: 236:         if (!PORTBbits.RB0)
  3990   00086C  B081               	btfsc	129,0,c	;volatile
  3991   00086E  EF3B  F004         	goto	u4881
  3992   000872  EF3D  F004         	goto	u4880
  3993   000876                     u4881:
  3994   000876  EF6A  F004         	goto	l4760
  3995   00087A                     u4880:
  3996   00087A                     
  3997                           ;main.c: 237:         {;main.c: 238:             if (alarmSettingMode)
  3998   00087A  0100               	movlb	0	; () banked
  3999   00087C  51A4               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  4000   00087E  B4D8               	btfsc	status,2,c
  4001   000880  EF44  F004         	goto	u4891
  4002   000884  EF46  F004         	goto	u4890
  4003   000888                     u4891:
  4004   000888  EF59  F004         	goto	l4756
  4005   00088C                     u4890:
  4006   00088C                     
  4007                           ; BSR set to: 0
  4008                           ;main.c: 239:             {;main.c: 240:                 alarmHours = (alarmHours + 1) %
      +                           24;
  4009   00088C  0E01               	movlw	1
  4010   00088E  25AD               	addwf	_alarmHours& (0+255),w,b
  4011   000890  6E06               	movwf	___awmod@dividend^0,c
  4012   000892  6A07               	clrf	(___awmod@dividend+1)^0,c
  4013   000894  0E00               	movlw	0
  4014   000896  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  4015   000898  0E00               	movlw	0
  4016   00089A  6E09               	movwf	(___awmod@divisor+1)^0,c
  4017   00089C  0E18               	movlw	24
  4018   00089E  6E08               	movwf	___awmod@divisor^0,c
  4019   0008A0  ECDB  F00A         	call	___awmod	;wreg free
  4020   0008A4  5006               	movf	?___awmod^0,w,c
  4021   0008A6  0100               	movlb	0	; () banked
  4022   0008A8  6FAD               	movwf	_alarmHours& (0+255),b
  4023   0008AA                     
  4024                           ; BSR set to: 0
  4025                           ;main.c: 241:                 displayAlarmTime();
  4026   0008AA  EC81  F00A         	call	_displayAlarmTime	;wreg free
  4027                           
  4028                           ;main.c: 242:             }
  4029   0008AE  EF6A  F004         	goto	l4760
  4030   0008B2                     l4756:
  4031                           
  4032                           ; BSR set to: 0
  4033                           ;main.c: 244:             {;main.c: 245:                 hours = (hours + 1) % 24;
  4034   0008B2  0E01               	movlw	1
  4035   0008B4  25B0               	addwf	_hours& (0+255),w,b
  4036   0008B6  6E06               	movwf	___awmod@dividend^0,c
  4037   0008B8  6A07               	clrf	(___awmod@dividend+1)^0,c
  4038   0008BA  0E00               	movlw	0
  4039   0008BC  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  4040   0008BE  0E00               	movlw	0
  4041   0008C0  6E09               	movwf	(___awmod@divisor+1)^0,c
  4042   0008C2  0E18               	movlw	24
  4043   0008C4  6E08               	movwf	___awmod@divisor^0,c
  4044   0008C6  ECDB  F00A         	call	___awmod	;wreg free
  4045   0008CA  5006               	movf	?___awmod^0,w,c
  4046   0008CC  0100               	movlb	0	; () banked
  4047   0008CE  6FB0               	movwf	_hours& (0+255),b
  4048   0008D0                     
  4049                           ; BSR set to: 0
  4050                           ;main.c: 246:                 displayTime();
  4051   0008D0  EC27  F00A         	call	_displayTime	;wreg free
  4052   0008D4                     l4760:
  4053                           
  4054                           ;main.c: 252:     if (!PORTBbits.RB1)
  4055   0008D4  B281               	btfsc	129,1,c	;volatile
  4056   0008D6  EF6F  F004         	goto	u4901
  4057   0008DA  EF71  F004         	goto	u4900
  4058   0008DE                     u4901:
  4059   0008DE  EFB2  F004         	goto	l4776
  4060   0008E2                     u4900:
  4061   0008E2                     
  4062                           ;main.c: 253:     {;main.c: 254:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  4063   0008E2  0E02               	movlw	2
  4064   0008E4  6E51               	movwf	(??_checkButtons+1)^0,c
  4065   0008E6  0E04               	movlw	4
  4066   0008E8  6E50               	movwf	??_checkButtons^0,c
  4067   0008EA  0EBA               	movlw	186
  4068   0008EC                     u5297:
  4069   0008EC  2EE8               	decfsz	wreg,f,c
  4070   0008EE  D7FE               	bra	u5297
  4071   0008F0  2E50               	decfsz	??_checkButtons^0,f,c
  4072   0008F2  D7FC               	bra	u5297
  4073   0008F4  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  4074   0008F6  D7FA               	bra	u5297
  4075   0008F8  F000 F000          	nop2	
  4076   0008FC                     
  4077                           ;main.c: 255:         if (!PORTBbits.RB1)
  4078   0008FC  B281               	btfsc	129,1,c	;volatile
  4079   0008FE  EF83  F004         	goto	u4911
  4080   000902  EF85  F004         	goto	u4910
  4081   000906                     u4911:
  4082   000906  EFB2  F004         	goto	l4776
  4083   00090A                     u4910:
  4084   00090A                     
  4085                           ;main.c: 256:         {;main.c: 257:             if (alarmSettingMode)
  4086   00090A  0100               	movlb	0	; () banked
  4087   00090C  51A4               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  4088   00090E  B4D8               	btfsc	status,2,c
  4089   000910  EF8C  F004         	goto	u4921
  4090   000914  EF8E  F004         	goto	u4920
  4091   000918                     u4921:
  4092   000918  EFA1  F004         	goto	l4772
  4093   00091C                     u4920:
  4094   00091C                     
  4095                           ; BSR set to: 0
  4096                           ;main.c: 258:             {;main.c: 259:                 alarmMinutes = (alarmMinutes + 
      +                          1) % 60;
  4097   00091C  0E01               	movlw	1
  4098   00091E  25AC               	addwf	_alarmMinutes& (0+255),w,b
  4099   000920  6E06               	movwf	___awmod@dividend^0,c
  4100   000922  6A07               	clrf	(___awmod@dividend+1)^0,c
  4101   000924  0E00               	movlw	0
  4102   000926  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  4103   000928  0E00               	movlw	0
  4104   00092A  6E09               	movwf	(___awmod@divisor+1)^0,c
  4105   00092C  0E3C               	movlw	60
  4106   00092E  6E08               	movwf	___awmod@divisor^0,c
  4107   000930  ECDB  F00A         	call	___awmod	;wreg free
  4108   000934  5006               	movf	?___awmod^0,w,c
  4109   000936  0100               	movlb	0	; () banked
  4110   000938  6FAC               	movwf	_alarmMinutes& (0+255),b
  4111   00093A                     
  4112                           ; BSR set to: 0
  4113                           ;main.c: 260:                 displayAlarmTime();
  4114   00093A  EC81  F00A         	call	_displayAlarmTime	;wreg free
  4115                           
  4116                           ;main.c: 261:             }
  4117   00093E  EFB2  F004         	goto	l4776
  4118   000942                     l4772:
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;main.c: 263:             {;main.c: 264:                 minutes = (minutes + 1) % 60;
  4122   000942  0E01               	movlw	1
  4123   000944  25AF               	addwf	_minutes& (0+255),w,b
  4124   000946  6E06               	movwf	___awmod@dividend^0,c
  4125   000948  6A07               	clrf	(___awmod@dividend+1)^0,c
  4126   00094A  0E00               	movlw	0
  4127   00094C  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  4128   00094E  0E00               	movlw	0
  4129   000950  6E09               	movwf	(___awmod@divisor+1)^0,c
  4130   000952  0E3C               	movlw	60
  4131   000954  6E08               	movwf	___awmod@divisor^0,c
  4132   000956  ECDB  F00A         	call	___awmod	;wreg free
  4133   00095A  5006               	movf	?___awmod^0,w,c
  4134   00095C  0100               	movlb	0	; () banked
  4135   00095E  6FAF               	movwf	_minutes& (0+255),b
  4136   000960                     
  4137                           ; BSR set to: 0
  4138                           ;main.c: 265:                 displayTime();
  4139   000960  EC27  F00A         	call	_displayTime	;wreg free
  4140   000964                     l4776:
  4141                           
  4142                           ;main.c: 271:     if (!PORTBbits.RB2)
  4143   000964  B481               	btfsc	129,2,c	;volatile
  4144   000966  EFB7  F004         	goto	u4931
  4145   00096A  EFB9  F004         	goto	u4930
  4146   00096E                     u4931:
  4147   00096E  EF4D  F005         	goto	l4814
  4148   000972                     u4930:
  4149   000972                     
  4150                           ;main.c: 272:     {;main.c: 273:         button3HoldTime += 100;
  4151   000972  0E64               	movlw	100
  4152   000974  0100               	movlb	0	; () banked
  4153   000976  279E               	addwf	checkButtons@button3HoldTime& (0+255),f,b
  4154   000978  0E00               	movlw	0
  4155   00097A  239F               	addwfc	(checkButtons@button3HoldTime+1)& (0+255),f,b
  4156   00097C                     
  4157                           ; BSR set to: 0
  4158                           ;main.c: 274:         _delay((unsigned long)((100)*(8000000/4000.0)));
  4159   00097C  0E02               	movlw	2
  4160   00097E  6E51               	movwf	(??_checkButtons+1)^0,c
  4161   000980  0E04               	movlw	4
  4162   000982  6E50               	movwf	??_checkButtons^0,c
  4163   000984  0EBA               	movlw	186
  4164   000986                     u5307:
  4165   000986  2EE8               	decfsz	wreg,f,c
  4166   000988  D7FE               	bra	u5307
  4167   00098A  2E50               	decfsz	??_checkButtons^0,f,c
  4168   00098C  D7FC               	bra	u5307
  4169   00098E  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  4170   000990  D7FA               	bra	u5307
  4171   000992  F000 F000          	nop2	
  4172   000996                     
  4173                           ;main.c: 276:         if (button3HoldTime >= 1000)
  4174   000996  0EE8               	movlw	232
  4175   000998  0100               	movlb	0	; () banked
  4176   00099A  5D9E               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  4177   00099C  0E03               	movlw	3
  4178   00099E  599F               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  4179   0009A0  A0D8               	btfss	status,0,c
  4180   0009A2  EFD5  F004         	goto	u4941
  4181   0009A6  EFD7  F004         	goto	u4940
  4182   0009AA                     u4941:
  4183   0009AA  EF41  F005         	goto	l4810
  4184   0009AE                     u4940:
  4185   0009AE                     
  4186                           ; BSR set to: 0
  4187                           ;main.c: 277:         {;main.c: 278:             if (!alarmTriggered)
  4188   0009AE  51A9               	movf	_alarmTriggered& (0+255),w,b
  4189   0009B0  A4D8               	btfss	status,2,c
  4190   0009B2  EFDD  F004         	goto	u4951
  4191   0009B6  EFDF  F004         	goto	u4950
  4192   0009BA                     u4951:
  4193   0009BA  EF6C  F005         	goto	l505
  4194   0009BE                     u4950:
  4195   0009BE                     
  4196                           ; BSR set to: 0
  4197                           ;main.c: 279:             {;main.c: 280:                 alarmSettingMode = 1;
  4198   0009BE  0E01               	movlw	1
  4199   0009C0  6FA4               	movwf	checkButtons@alarmSettingMode& (0+255),b
  4200   0009C2                     l4788:
  4201                           
  4202                           ; BSR set to: 0
  4203                           ;main.c: 281:                 displayAlarmTime();
  4204   0009C2  EC81  F00A         	call	_displayAlarmTime	;wreg free
  4205                           
  4206                           ;main.c: 283:                 while (!PORTBbits.RB2)
  4207   0009C6  EF31  F005         	goto	l4804
  4208   0009CA                     l496:
  4209                           
  4210                           ;main.c: 284:                 {;main.c: 285:                     if (!PORTBbits.RB0)
  4211   0009CA  B081               	btfsc	129,0,c	;volatile
  4212   0009CC  EFEA  F004         	goto	u4961
  4213   0009D0  EFEC  F004         	goto	u4960
  4214   0009D4                     u4961:
  4215   0009D4  EF0B  F005         	goto	l4796
  4216   0009D8                     u4960:
  4217   0009D8                     
  4218                           ;main.c: 286:                     {;main.c: 287:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  4219   0009D8  0E02               	movlw	2
  4220   0009DA  6E51               	movwf	(??_checkButtons+1)^0,c
  4221   0009DC  0E04               	movlw	4
  4222   0009DE  6E50               	movwf	??_checkButtons^0,c
  4223   0009E0  0EBA               	movlw	186
  4224   0009E2                     u5317:
  4225   0009E2  2EE8               	decfsz	wreg,f,c
  4226   0009E4  D7FE               	bra	u5317
  4227   0009E6  2E50               	decfsz	??_checkButtons^0,f,c
  4228   0009E8  D7FC               	bra	u5317
  4229   0009EA  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  4230   0009EC  D7FA               	bra	u5317
  4231   0009EE  F000 F000          	nop2	
  4232   0009F2                     
  4233                           ;main.c: 288:                         alarmHours = (alarmHours + 1) % 24;
  4234   0009F2  0E01               	movlw	1
  4235   0009F4  0100               	movlb	0	; () banked
  4236   0009F6  25AD               	addwf	_alarmHours& (0+255),w,b
  4237   0009F8  6E06               	movwf	___awmod@dividend^0,c
  4238   0009FA  6A07               	clrf	(___awmod@dividend+1)^0,c
  4239   0009FC  0E00               	movlw	0
  4240   0009FE  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  4241   000A00  0E00               	movlw	0
  4242   000A02  6E09               	movwf	(___awmod@divisor+1)^0,c
  4243   000A04  0E18               	movlw	24
  4244   000A06  6E08               	movwf	___awmod@divisor^0,c
  4245   000A08  ECDB  F00A         	call	___awmod	;wreg free
  4246   000A0C  5006               	movf	?___awmod^0,w,c
  4247   000A0E  0100               	movlb	0	; () banked
  4248   000A10  6FAD               	movwf	_alarmHours& (0+255),b
  4249   000A12                     
  4250                           ; BSR set to: 0
  4251                           ;main.c: 289:                         displayAlarmTime();
  4252   000A12  EC81  F00A         	call	_displayAlarmTime	;wreg free
  4253   000A16                     l4796:
  4254                           
  4255                           ;main.c: 291:                     if (!PORTBbits.RB1)
  4256   000A16  B281               	btfsc	129,1,c	;volatile
  4257   000A18  EF10  F005         	goto	u4971
  4258   000A1C  EF12  F005         	goto	u4970
  4259   000A20                     u4971:
  4260   000A20  EF31  F005         	goto	l4804
  4261   000A24                     u4970:
  4262   000A24                     
  4263                           ;main.c: 292:                     {;main.c: 293:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  4264   000A24  0E02               	movlw	2
  4265   000A26  6E51               	movwf	(??_checkButtons+1)^0,c
  4266   000A28  0E04               	movlw	4
  4267   000A2A  6E50               	movwf	??_checkButtons^0,c
  4268   000A2C  0EBA               	movlw	186
  4269   000A2E                     u5327:
  4270   000A2E  2EE8               	decfsz	wreg,f,c
  4271   000A30  D7FE               	bra	u5327
  4272   000A32  2E50               	decfsz	??_checkButtons^0,f,c
  4273   000A34  D7FC               	bra	u5327
  4274   000A36  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  4275   000A38  D7FA               	bra	u5327
  4276   000A3A  F000 F000          	nop2	
  4277   000A3E                     
  4278                           ;main.c: 294:                         alarmMinutes = (alarmMinutes + 1) % 60;
  4279   000A3E  0E01               	movlw	1
  4280   000A40  0100               	movlb	0	; () banked
  4281   000A42  25AC               	addwf	_alarmMinutes& (0+255),w,b
  4282   000A44  6E06               	movwf	___awmod@dividend^0,c
  4283   000A46  6A07               	clrf	(___awmod@dividend+1)^0,c
  4284   000A48  0E00               	movlw	0
  4285   000A4A  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  4286   000A4C  0E00               	movlw	0
  4287   000A4E  6E09               	movwf	(___awmod@divisor+1)^0,c
  4288   000A50  0E3C               	movlw	60
  4289   000A52  6E08               	movwf	___awmod@divisor^0,c
  4290   000A54  ECDB  F00A         	call	___awmod	;wreg free
  4291   000A58  5006               	movf	?___awmod^0,w,c
  4292   000A5A  0100               	movlb	0	; () banked
  4293   000A5C  6FAC               	movwf	_alarmMinutes& (0+255),b
  4294   000A5E  EFE1  F004         	goto	l4788
  4295   000A62                     l4804:
  4296                           
  4297                           ;main.c: 283:                 while (!PORTBbits.RB2)
  4298   000A62  A481               	btfss	129,2,c	;volatile
  4299   000A64  EF36  F005         	goto	u4981
  4300   000A68  EF38  F005         	goto	u4980
  4301   000A6C                     u4981:
  4302   000A6C  EFE5  F004         	goto	l496
  4303   000A70                     u4980:
  4304   000A70                     
  4305                           ;main.c: 298:                 alarmSettingMode = 0;
  4306   000A70  0E00               	movlw	0
  4307   000A72  0100               	movlb	0	; () banked
  4308   000A74  6FA4               	movwf	checkButtons@alarmSettingMode& (0+255),b
  4309                           
  4310                           ;main.c: 299:                 alarmSet = 1;
  4311   000A76  0E01               	movlw	1
  4312   000A78  6FAB               	movwf	_alarmSet& (0+255),b
  4313   000A7A                     
  4314                           ; BSR set to: 0
  4315                           ;main.c: 300:                 displayTime();
  4316   000A7A  EC27  F00A         	call	_displayTime	;wreg free
  4317   000A7E  EF6C  F005         	goto	l505
  4318   000A82                     l4810:
  4319                           
  4320                           ; BSR set to: 0
  4321                           ;main.c: 304:         {;main.c: 305:             if (alarmTriggered)
  4322   000A82  51A9               	movf	_alarmTriggered& (0+255),w,b
  4323   000A84  B4D8               	btfsc	status,2,c
  4324   000A86  EF47  F005         	goto	u4991
  4325   000A8A  EF49  F005         	goto	u4990
  4326   000A8E                     u4991:
  4327   000A8E  EF6C  F005         	goto	l505
  4328   000A92                     u4990:
  4329   000A92                     
  4330                           ; BSR set to: 0
  4331                           ;main.c: 306:             {;main.c: 307:                 clearAlarm();
  4332   000A92  EC2A  F00E         	call	_clearAlarm	;wreg free
  4333   000A96  EF6C  F005         	goto	l505
  4334   000A9A                     l4814:
  4335                           
  4336                           ;main.c: 312:     {;main.c: 313:         if (button3HoldTime < 1000)
  4337   000A9A  0EE8               	movlw	232
  4338   000A9C  0100               	movlb	0	; () banked
  4339   000A9E  5D9E               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  4340   000AA0  0E03               	movlw	3
  4341   000AA2  599F               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  4342   000AA4  B0D8               	btfsc	status,0,c
  4343   000AA6  EF57  F005         	goto	u5001
  4344   000AAA  EF59  F005         	goto	u5000
  4345   000AAE                     u5001:
  4346   000AAE  EF68  F005         	goto	l4824
  4347   000AB2                     u5000:
  4348   000AB2                     
  4349                           ; BSR set to: 0
  4350                           ;main.c: 314:         {;main.c: 315:             button3PressCount++;
  4351   000AB2  2BA5               	incf	checkButtons@button3PressCount& (0+255),f,b
  4352   000AB4                     
  4353                           ; BSR set to: 0
  4354                           ;main.c: 316:             if (button3PressCount == 5)
  4355   000AB4  0E05               	movlw	5
  4356   000AB6  19A5               	xorwf	checkButtons@button3PressCount& (0+255),w,b
  4357   000AB8  A4D8               	btfss	status,2,c
  4358   000ABA  EF61  F005         	goto	u5011
  4359   000ABE  EF63  F005         	goto	u5010
  4360   000AC2                     u5011:
  4361   000AC2  EF68  F005         	goto	l4824
  4362   000AC6                     u5010:
  4363   000AC6                     
  4364                           ; BSR set to: 0
  4365                           ;main.c: 317:             {;main.c: 318:                 saveTimeToFlash();
  4366   000AC6  EC82  F00B         	call	_saveTimeToFlash	;wreg free
  4367   000ACA                     
  4368                           ;main.c: 319:                 button3PressCount = 0;
  4369   000ACA  0E00               	movlw	0
  4370   000ACC  0100               	movlb	0	; () banked
  4371   000ACE  6FA5               	movwf	checkButtons@button3PressCount& (0+255),b
  4372   000AD0                     l4824:
  4373                           
  4374                           ; BSR set to: 0
  4375                           ;main.c: 322:         button3HoldTime = 0;
  4376   000AD0  0E00               	movlw	0
  4377   000AD2  6F9F               	movwf	(checkButtons@button3HoldTime+1)& (0+255),b
  4378   000AD4  0E00               	movlw	0
  4379   000AD6  6F9E               	movwf	checkButtons@button3HoldTime& (0+255),b
  4380   000AD8                     l505:
  4381   000AD8  0012               	return		;funcret
  4382   000ADA                     __end_of_checkButtons:
  4383                           	callstack 0
  4384                           
  4385 ;; *************** function _saveTimeToFlash *****************
  4386 ;; Defined at:
  4387 ;;		line 328 in file "main.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;  i               1   68[BANK0 ] unsigned char 
  4392 ;;  flashBuffer    64    0[BANK0 ] unsigned char [64]
  4393 ;;  flashAddress    4   64[BANK0 ] unsigned long 
  4394 ;; Return value:  Size  Location     Type
  4395 ;;                  1    wreg      void 
  4396 ;; Registers used:
  4397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4398 ;; Tracked objects:
  4399 ;;		On entry : 0/0
  4400 ;;		On exit  : 0/0
  4401 ;;		Unchanged: 0/0
  4402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4404 ;;      Locals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4406 ;;      Totals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4407 ;;Total ram usage:       69 bytes
  4408 ;; Hardware stack levels used: 1
  4409 ;; Hardware stack levels required when called: 6
  4410 ;; This function calls:
  4411 ;;		_FLASH_ReadByte
  4412 ;;		_FLASH_WriteBlock
  4413 ;; This function is called by:
  4414 ;;		_main
  4415 ;;		_checkButtons
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text12
  4420   001704                     __ptext12:
  4421                           	callstack 0
  4422   001704                     _saveTimeToFlash:
  4423                           	callstack 24
  4424   001704                     
  4425                           ;main.c: 330:     uint32_t flashAddress = 0x1F80;
  4426   001704  0E80               	movlw	128
  4427   001706  0100               	movlb	0	; () banked
  4428   001708  6FF3               	movwf	saveTimeToFlash@flashAddress& (0+255),b
  4429   00170A  0E1F               	movlw	31
  4430   00170C  6FF4               	movwf	(saveTimeToFlash@flashAddress+1)& (0+255),b
  4431   00170E  0E00               	movlw	0
  4432   001710  6FF5               	movwf	(saveTimeToFlash@flashAddress+2)& (0+255),b
  4433   001712  0E00               	movlw	0
  4434   001714  6FF6               	movwf	(saveTimeToFlash@flashAddress+3)& (0+255),b
  4435                           
  4436                           ;main.c: 331:     uint8_t flashBuffer[64];;main.c: 334:     for (uint8_t i = 0; i < 64; 
      +                          i++) {
  4437   001716  0E00               	movlw	0
  4438   001718  6FF7               	movwf	saveTimeToFlash@i& (0+255),b
  4439   00171A                     l4624:
  4440                           
  4441                           ; BSR set to: 0
  4442                           ;main.c: 335:         flashBuffer[i] = FLASH_ReadByte(flashAddress + i);
  4443   00171A  51F7               	movf	saveTimeToFlash@i& (0+255),w,b
  4444   00171C  0FB3               	addlw	low saveTimeToFlash@flashBuffer
  4445   00171E  6ED9               	movwf	fsr2l,c
  4446   001720  6ADA               	clrf	fsr2h,c
  4447   001722  51F7               	movf	saveTimeToFlash@i& (0+255),w,b
  4448   001724  25F3               	addwf	saveTimeToFlash@flashAddress& (0+255),w,b
  4449   001726  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  4450   001728  0E00               	movlw	0
  4451   00172A  21F4               	addwfc	(saveTimeToFlash@flashAddress+1)& (0+255),w,b
  4452   00172C  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  4453   00172E  0E00               	movlw	0
  4454   001730  21F5               	addwfc	(saveTimeToFlash@flashAddress+2)& (0+255),w,b
  4455   001732  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  4456   001734  0E00               	movlw	0
  4457   001736  21F6               	addwfc	(saveTimeToFlash@flashAddress+3)& (0+255),w,b
  4458   001738  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  4459   00173A  EC1A  F00E         	call	_FLASH_ReadByte	;wreg free
  4460   00173E  6EDF               	movwf	indf2,c
  4461   001740                     
  4462                           ;main.c: 336:     }
  4463   001740  0100               	movlb	0	; () banked
  4464   001742  2BF7               	incf	saveTimeToFlash@i& (0+255),f,b
  4465   001744                     
  4466                           ; BSR set to: 0
  4467   001744  0E3F               	movlw	63
  4468   001746  65F7               	cpfsgt	saveTimeToFlash@i& (0+255),b
  4469   001748  EFA8  F00B         	goto	u4761
  4470   00174C  EFAA  F00B         	goto	u4760
  4471   001750                     u4761:
  4472   001750  EF8D  F00B         	goto	l4624
  4473   001754                     u4760:
  4474   001754                     
  4475                           ; BSR set to: 0
  4476                           ;main.c: 339:     flashBuffer[0] = hours;
  4477   001754  C0B0  F0B3         	movff	_hours,saveTimeToFlash@flashBuffer
  4478                           
  4479                           ;main.c: 340:     flashBuffer[1] = minutes;
  4480   001758  C0AF  F0B4         	movff	_minutes,saveTimeToFlash@flashBuffer+1
  4481                           
  4482                           ;main.c: 341:     flashBuffer[2] = alarmHours;
  4483   00175C  C0AD  F0B5         	movff	_alarmHours,saveTimeToFlash@flashBuffer+2
  4484                           
  4485                           ;main.c: 342:     flashBuffer[3] = alarmMinutes;
  4486   001760  C0AC  F0B6         	movff	_alarmMinutes,saveTimeToFlash@flashBuffer+3
  4487                           
  4488                           ;main.c: 343:     flashBuffer[4] = alarmSet;
  4489   001764  C0AB  F0B7         	movff	_alarmSet,saveTimeToFlash@flashBuffer+4
  4490   001768                     
  4491                           ; BSR set to: 0
  4492                           ;main.c: 346:     FLASH_WriteBlock(flashAddress, flashBuffer);
  4493   001768  C0F3  F00B         	movff	saveTimeToFlash@flashAddress,FLASH_WriteBlock@writeAddr
  4494   00176C  C0F4  F00C         	movff	saveTimeToFlash@flashAddress+1,FLASH_WriteBlock@writeAddr+1
  4495   001770  C0F5  F00D         	movff	saveTimeToFlash@flashAddress+2,FLASH_WriteBlock@writeAddr+2
  4496   001774  C0F6  F00E         	movff	saveTimeToFlash@flashAddress+3,FLASH_WriteBlock@writeAddr+3
  4497   001778  0EB3               	movlw	low saveTimeToFlash@flashBuffer
  4498   00177A  6E0F               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  4499   00177C  ECD3  F007         	call	_FLASH_WriteBlock	;wreg free
  4500   001780  0012               	return		;funcret
  4501   001782                     __end_of_saveTimeToFlash:
  4502                           	callstack 0
  4503                           
  4504 ;; *************** function _FLASH_WriteBlock *****************
  4505 ;; Defined at:
  4506 ;;		line 93 in file "mcc_generated_files/memory.c"
  4507 ;; Parameters:    Size  Location     Type
  4508 ;;  writeAddr       4   10[COMRAM] unsigned long 
  4509 ;;  flashWrBufPt    1   14[COMRAM] PTR unsigned char 
  4510 ;;		 -> saveTimeToFlash@flashBuffer(64), 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  blockStartAd    4   15[COMRAM] unsigned long 
  4513 ;;  i               1   23[COMRAM] unsigned char 
  4514 ;;  dataCounter     1   22[COMRAM] unsigned char 
  4515 ;;  numberOfWrit    1   21[COMRAM] unsigned char 
  4516 ;;  j               1   20[COMRAM] unsigned char 
  4517 ;;  GIEBitValue     1   19[COMRAM] unsigned char 
  4518 ;; Return value:  Size  Location     Type
  4519 ;;                  1    wreg      char 
  4520 ;; Registers used:
  4521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4522 ;; Tracked objects:
  4523 ;;		On entry : 0/0
  4524 ;;		On exit  : 0/0
  4525 ;;		Unchanged: 0/0
  4526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4527 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4528 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4529 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4530 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4531 ;;Total ram usage:       14 bytes
  4532 ;; Hardware stack levels used: 1
  4533 ;; Hardware stack levels required when called: 5
  4534 ;; This function calls:
  4535 ;;		_FLASH_EraseBlock
  4536 ;; This function is called by:
  4537 ;;		_saveTimeToFlash
  4538 ;;		_FLASH_WriteByte
  4539 ;; This function uses a non-reentrant model
  4540 ;;
  4541                           
  4542                           	psect	text13
  4543   000FA6                     __ptext13:
  4544                           	callstack 0
  4545   000FA6                     _FLASH_WriteBlock:
  4546                           	callstack 24
  4547   000FA6                     
  4548                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  4549   000FA6  0EC0               	movlw	192
  4550   000FA8  140B               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  4551   000FAA  6E10               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  4552   000FAC  0EFF               	movlw	255
  4553   000FAE  140C               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4554   000FB0  6E11               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  4555   000FB2  0E00               	movlw	0
  4556   000FB4  140D               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4557   000FB6  6E12               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  4558   000FB8  0E00               	movlw	0
  4559   000FBA  140E               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4560   000FBC  6E13               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  4561   000FBE                     
  4562                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  4563   000FBE  0E00               	movlw	0
  4564   000FC0  BEF2               	btfsc	242,7,c	;volatile
  4565   000FC2  0E01               	movlw	1
  4566   000FC4  6E14               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  4567   000FC6  0E00               	movlw	0
  4568   000FC8  6E17               	movwf	FLASH_WriteBlock@dataCounter^0,c
  4569   000FCA                     
  4570                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  4571   000FCA  0E01               	movlw	1
  4572   000FCC  6E16               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  4573   000FCE                     
  4574                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  4575   000FCE  5010               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  4576   000FD0  180B               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  4577   000FD2  E10F               	bnz	u4360
  4578   000FD4  5011               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  4579   000FD6  180C               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4580   000FD8  E10C               	bnz	u4360
  4581   000FDA  5012               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  4582   000FDC  180D               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4583   000FDE  E109               	bnz	u4360
  4584   000FE0  5013               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  4585   000FE2  180E               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4586   000FE4  B4D8               	btfsc	status,2,c
  4587   000FE6  EFF7  F007         	goto	u4361
  4588   000FEA  EFF9  F007         	goto	u4360
  4589   000FEE                     u4361:
  4590   000FEE  EFFB  F007         	goto	l4310
  4591   000FF2                     u4360:
  4592   000FF2  EF47  F008         	goto	l233
  4593   000FF6                     l4310:
  4594                           
  4595                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  4596   000FF6  C00B  F006         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  4597   000FFA  C00C  F007         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  4598   000FFE  C00D  F008         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  4599   001002  C00E  F009         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  4600   001006  EC96  F00D         	call	_FLASH_EraseBlock	;wreg free
  4601   00100A                     
  4602                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  4603   00100A  C00D  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  4604   00100E                     
  4605                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  4606   00100E  C00C  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  4607   001012                     
  4608                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  4609   001012  C00B  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  4610   001016                     
  4611                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  4612   001016  0E00               	movlw	0
  4613   001018  6E15               	movwf	FLASH_WriteBlock@j^0,c
  4614   00101A  EF3E  F008         	goto	l4346
  4615   00101E                     l4320:
  4616                           
  4617                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  4618   00101E  0E00               	movlw	0
  4619   001020  6E18               	movwf	FLASH_WriteBlock@i^0,c
  4620   001022                     l4326:
  4621                           
  4622                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  4623   001022  500F               	movf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  4624   001024  2417               	addwf	FLASH_WriteBlock@dataCounter^0,w,c
  4625   001026  6ED9               	movwf	fsr2l,c
  4626   001028  6ADA               	clrf	fsr2h,c
  4627   00102A  50DF               	movf	indf2,w,c
  4628   00102C  6EF5               	movwf	245,c	;volatile
  4629   00102E                     
  4630                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  4631   00102E  0E3F               	movlw	63
  4632   001030  1818               	xorwf	FLASH_WriteBlock@i^0,w,c
  4633   001032  A4D8               	btfss	status,2,c
  4634   001034  EF1E  F008         	goto	u4371
  4635   001038  EF20  F008         	goto	u4370
  4636   00103C                     u4371:
  4637   00103C  EF23  F008         	goto	l238
  4638   001040                     u4370:
  4639   001040  000C               	tblwt		*	;# 
  4640                           
  4641                           ;mcc_generated_files/memory.c: 124:    }
  4642   001042  EF25  F008         	goto	l239
  4643   001046                     l238:
  4644   001046  000D               	tblwt		*+	;# 
  4645   001048                     
  4646                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  4647   001048  2A17               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  4648   00104A                     l239:
  4649                           
  4650                           ;mcc_generated_files/memory.c: 130:   }
  4651   00104A  2A18               	incf	FLASH_WriteBlock@i^0,f,c
  4652   00104C  0E3F               	movlw	63
  4653   00104E  6418               	cpfsgt	FLASH_WriteBlock@i^0,c
  4654   001050  EF2C  F008         	goto	u4381
  4655   001054  EF2E  F008         	goto	u4380
  4656   001058                     u4381:
  4657   001058  EF11  F008         	goto	l4326
  4658   00105C                     u4380:
  4659   00105C                     
  4660                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  4661   00105C  8EA6               	bsf	166,7,c	;volsfr
  4662                           
  4663                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  4664   00105E  9CA6               	bcf	166,6,c	;volsfr
  4665                           
  4666                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  4667   001060  84A6               	bsf	166,2,c	;volsfr
  4668                           
  4669                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  4670   001062  9EF2               	bcf	242,7,c	;volatile
  4671   001064                     
  4672                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  4673   001064  0E55               	movlw	85
  4674   001066  6EA7               	movwf	167,c	;volsfr
  4675                           
  4676                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  4677   001068  0EAA               	movlw	170
  4678   00106A  6EA7               	movwf	167,c	;volsfr
  4679   00106C                     
  4680                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  4681   00106C  82A6               	bsf	166,1,c	;volsfr
  4682   00106E                     
  4683                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  4684   00106E  94A6               	bcf	166,2,c	;volsfr
  4685   001070                     
  4686                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  4687   001070  B014               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  4688   001072  D002               	bra	u4395
  4689   001074  9EF2               	bcf	242,7,c	;volatile
  4690   001076  D001               	bra	u4396
  4691   001078                     u4395:
  4692   001078  8EF2               	bsf	242,7,c	;volatile
  4693   00107A                     u4396:
  4694   00107A                     
  4695                           ;mcc_generated_files/memory.c: 142:  }
  4696   00107A  2A15               	incf	FLASH_WriteBlock@j^0,f,c
  4697   00107C                     l4346:
  4698   00107C  5016               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  4699   00107E  5C15               	subwf	FLASH_WriteBlock@j^0,w,c
  4700   001080  A0D8               	btfss	status,0,c
  4701   001082  EF45  F008         	goto	u4401
  4702   001086  EF47  F008         	goto	u4400
  4703   00108A                     u4401:
  4704   00108A  EF0F  F008         	goto	l4320
  4705   00108E                     u4400:
  4706   00108E                     l233:
  4707   00108E  0012               	return		;funcret
  4708   001090                     __end_of_FLASH_WriteBlock:
  4709                           	callstack 0
  4710                           
  4711 ;; *************** function _FLASH_EraseBlock *****************
  4712 ;; Defined at:
  4713 ;;		line 147 in file "mcc_generated_files/memory.c"
  4714 ;; Parameters:    Size  Location     Type
  4715 ;;  baseAddr        4    5[COMRAM] unsigned long 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  GIEBitValue     1    9[COMRAM] unsigned char 
  4718 ;; Return value:  Size  Location     Type
  4719 ;;                  1    wreg      void 
  4720 ;; Registers used:
  4721 ;;		wreg, status,2
  4722 ;; Tracked objects:
  4723 ;;		On entry : 0/0
  4724 ;;		On exit  : 0/0
  4725 ;;		Unchanged: 0/0
  4726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4727 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4728 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4730 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4731 ;;Total ram usage:        5 bytes
  4732 ;; Hardware stack levels used: 1
  4733 ;; Hardware stack levels required when called: 4
  4734 ;; This function calls:
  4735 ;;		Nothing
  4736 ;; This function is called by:
  4737 ;;		_FLASH_WriteBlock
  4738 ;; This function uses a non-reentrant model
  4739 ;;
  4740                           
  4741                           	psect	text14
  4742   001B2C                     __ptext14:
  4743                           	callstack 0
  4744   001B2C                     _FLASH_EraseBlock:
  4745                           	callstack 24
  4746   001B2C                     
  4747                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  4748   001B2C  0E00               	movlw	0
  4749   001B2E  BEF2               	btfsc	242,7,c	;volatile
  4750   001B30  0E01               	movlw	1
  4751   001B32  6E0A               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  4752   001B34                     
  4753                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  4754   001B34  C008  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  4755   001B38                     
  4756                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  4757   001B38  C007  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  4758   001B3C                     
  4759                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  4760   001B3C  C006  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  4761   001B40                     
  4762                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  4763   001B40  8EA6               	bsf	166,7,c	;volsfr
  4764   001B42                     
  4765                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  4766   001B42  9CA6               	bcf	166,6,c	;volsfr
  4767   001B44                     
  4768                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  4769   001B44  84A6               	bsf	166,2,c	;volsfr
  4770   001B46                     
  4771                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  4772   001B46  88A6               	bsf	166,4,c	;volsfr
  4773   001B48                     
  4774                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  4775   001B48  9EF2               	bcf	242,7,c	;volatile
  4776   001B4A                     
  4777                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  4778   001B4A  0E55               	movlw	85
  4779   001B4C  6EA7               	movwf	167,c	;volsfr
  4780   001B4E                     
  4781                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  4782   001B4E  0EAA               	movlw	170
  4783   001B50  6EA7               	movwf	167,c	;volsfr
  4784   001B52                     
  4785                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  4786   001B52  82A6               	bsf	166,1,c	;volsfr
  4787   001B54                     
  4788                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  4789   001B54  B00A               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  4790   001B56  D002               	bra	u4185
  4791   001B58  9EF2               	bcf	242,7,c	;volatile
  4792   001B5A  D001               	bra	u4186
  4793   001B5C                     u4185:
  4794   001B5C  8EF2               	bsf	242,7,c	;volatile
  4795   001B5E                     u4186:
  4796   001B5E  0012               	return		;funcret
  4797   001B60                     __end_of_FLASH_EraseBlock:
  4798                           	callstack 0
  4799                           
  4800 ;; *************** function _FLASH_ReadByte *****************
  4801 ;; Defined at:
  4802 ;;		line 58 in file "mcc_generated_files/memory.c"
  4803 ;; Parameters:    Size  Location     Type
  4804 ;;  flashAddr       4    5[COMRAM] unsigned long 
  4805 ;; Auto vars:     Size  Location     Type
  4806 ;;		None
  4807 ;; Return value:  Size  Location     Type
  4808 ;;                  1    wreg      unsigned char 
  4809 ;; Registers used:
  4810 ;;		wreg, status,2
  4811 ;; Tracked objects:
  4812 ;;		On entry : 0/0
  4813 ;;		On exit  : 0/0
  4814 ;;		Unchanged: 0/0
  4815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4816 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4818 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4819 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4820 ;;Total ram usage:        4 bytes
  4821 ;; Hardware stack levels used: 1
  4822 ;; Hardware stack levels required when called: 4
  4823 ;; This function calls:
  4824 ;;		Nothing
  4825 ;; This function is called by:
  4826 ;;		_saveTimeToFlash
  4827 ;;		_loadTimeFromFlash
  4828 ;;		_FLASH_ReadWord
  4829 ;;		_FLASH_WriteByte
  4830 ;; This function uses a non-reentrant model
  4831 ;;
  4832                           
  4833                           	psect	text15
  4834   001C34                     __ptext15:
  4835                           	callstack 0
  4836   001C34                     _FLASH_ReadByte:
  4837                           	callstack 25
  4838   001C34                     
  4839                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  4840   001C34  C008  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  4841                           
  4842                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  4843   001C38  C007  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  4844                           
  4845                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  4846   001C3C  C006  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  4847   001C40  0008               	tblrd		*	;# 
  4848   001C42                     
  4849                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  4850   001C42  50F5               	movf	245,w,c	;volatile
  4851   001C44  0012               	return		;funcret
  4852   001C46                     __end_of_FLASH_ReadByte:
  4853                           	callstack 0
  4854                           
  4855 ;; *************** function _displayTime *****************
  4856 ;; Defined at:
  4857 ;;		line 111 in file "main.c"
  4858 ;; Parameters:    Size  Location     Type
  4859 ;;		None
  4860 ;; Auto vars:     Size  Location     Type
  4861 ;;  i               2   21[BANK0 ] int 
  4862 ;;  timeString      5   16[BANK0 ] unsigned char [5]
  4863 ;;  displayStrin    5   11[BANK0 ] unsigned char [5]
  4864 ;; Return value:  Size  Location     Type
  4865 ;;                  1    wreg      void 
  4866 ;; Registers used:
  4867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4868 ;; Tracked objects:
  4869 ;;		On entry : 0/0
  4870 ;;		On exit  : 0/0
  4871 ;;		Unchanged: 0/0
  4872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4874 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4876 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4877 ;;Total ram usage:       12 bytes
  4878 ;; Hardware stack levels used: 1
  4879 ;; Hardware stack levels required when called: 8
  4880 ;; This function calls:
  4881 ;;		___awdiv
  4882 ;;		___awmod
  4883 ;;		_printString
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;;		_checkButtons
  4887 ;; This function uses a non-reentrant model
  4888 ;;
  4889                           
  4890                           	psect	text16
  4891   00144E                     __ptext16:
  4892                           	callstack 0
  4893   00144E                     _displayTime:
  4894                           	callstack 22
  4895   00144E                     
  4896                           ;main.c: 113:     char timeString[5];;main.c: 116:     timeString[0] = (hours / 10) + '0
      +                          ';
  4897   00144E  C0B0  F006         	movff	_hours,___awdiv@dividend
  4898   001452  6A07               	clrf	(___awdiv@dividend+1)^0,c
  4899   001454  0E00               	movlw	0
  4900   001456  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4901   001458  0E0A               	movlw	10
  4902   00145A  6E08               	movwf	___awdiv@divisor^0,c
  4903   00145C  ECAB  F008         	call	___awdiv	;wreg free
  4904   001460  5006               	movf	?___awdiv^0,w,c
  4905   001462  0F30               	addlw	48
  4906   001464  0100               	movlb	0	; () banked
  4907   001466  6FC3               	movwf	displayTime@timeString& (0+255),b
  4908                           
  4909                           ;main.c: 117:     timeString[1] = (hours % 10) + '0';
  4910   001468  C0B0  F006         	movff	_hours,___awmod@dividend
  4911   00146C  6A07               	clrf	(___awmod@dividend+1)^0,c
  4912   00146E  0E00               	movlw	0
  4913   001470  6E09               	movwf	(___awmod@divisor+1)^0,c
  4914   001472  0E0A               	movlw	10
  4915   001474  6E08               	movwf	___awmod@divisor^0,c
  4916   001476  ECDB  F00A         	call	___awmod	;wreg free
  4917   00147A  5006               	movf	?___awmod^0,w,c
  4918   00147C  0F30               	addlw	48
  4919   00147E  0100               	movlb	0	; () banked
  4920   001480  6FC4               	movwf	(displayTime@timeString+1)& (0+255),b
  4921                           
  4922                           ;main.c: 118:     timeString[2] = (minutes / 10) + '0';
  4923   001482  C0AF  F006         	movff	_minutes,___awdiv@dividend
  4924   001486  6A07               	clrf	(___awdiv@dividend+1)^0,c
  4925   001488  0E00               	movlw	0
  4926   00148A  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4927   00148C  0E0A               	movlw	10
  4928   00148E  6E08               	movwf	___awdiv@divisor^0,c
  4929   001490  ECAB  F008         	call	___awdiv	;wreg free
  4930   001494  5006               	movf	?___awdiv^0,w,c
  4931   001496  0F30               	addlw	48
  4932   001498  0100               	movlb	0	; () banked
  4933   00149A  6FC5               	movwf	(displayTime@timeString+2)& (0+255),b
  4934                           
  4935                           ;main.c: 119:     timeString[3] = (minutes % 10) + '0';
  4936   00149C  C0AF  F006         	movff	_minutes,___awmod@dividend
  4937   0014A0  6A07               	clrf	(___awmod@dividend+1)^0,c
  4938   0014A2  0E00               	movlw	0
  4939   0014A4  6E09               	movwf	(___awmod@divisor+1)^0,c
  4940   0014A6  0E0A               	movlw	10
  4941   0014A8  6E08               	movwf	___awmod@divisor^0,c
  4942   0014AA  ECDB  F00A         	call	___awmod	;wreg free
  4943   0014AE  5006               	movf	?___awmod^0,w,c
  4944   0014B0  0F30               	addlw	48
  4945   0014B2  0100               	movlb	0	; () banked
  4946   0014B4  6FC6               	movwf	(displayTime@timeString+3)& (0+255),b
  4947   0014B6                     
  4948                           ; BSR set to: 0
  4949                           ;main.c: 120:     timeString[4] = '\0';
  4950   0014B6  0E00               	movlw	0
  4951   0014B8  6FC7               	movwf	(displayTime@timeString+4)& (0+255),b
  4952   0014BA                     
  4953                           ; BSR set to: 0
  4954                           ;main.c: 123:     uint8_t displayString[5];;main.c: 124:     for (int i = 0; i < 5; i++)
      +                           {
  4955   0014BA  0E00               	movlw	0
  4956   0014BC  6FC9               	movwf	(displayTime@i+1)& (0+255),b
  4957   0014BE  0E00               	movlw	0
  4958   0014C0  6FC8               	movwf	displayTime@i& (0+255),b
  4959   0014C2                     l4610:
  4960                           
  4961                           ; BSR set to: 0
  4962                           ;main.c: 125:         displayString[i] = (uint8_t)timeString[i];
  4963   0014C2  51C8               	movf	displayTime@i& (0+255),w,b
  4964   0014C4  0FC3               	addlw	low displayTime@timeString
  4965   0014C6  6ED9               	movwf	fsr2l,c
  4966   0014C8  6ADA               	clrf	fsr2h,c
  4967   0014CA  51C8               	movf	displayTime@i& (0+255),w,b
  4968   0014CC  0FBE               	addlw	low displayTime@displayString
  4969   0014CE  6EE1               	movwf	fsr1l,c
  4970   0014D0  6AE2               	clrf	fsr1h,c
  4971   0014D2  CFDF FFE7          	movff	indf2,indf1
  4972   0014D6                     
  4973                           ; BSR set to: 0
  4974                           ;main.c: 126:     }
  4975   0014D6  4BC8               	infsnz	displayTime@i& (0+255),f,b
  4976   0014D8  2BC9               	incf	(displayTime@i+1)& (0+255),f,b
  4977   0014DA                     
  4978                           ; BSR set to: 0
  4979   0014DA  BFC9               	btfsc	(displayTime@i+1)& (0+255),7,b
  4980   0014DC  EF79  F00A         	goto	u4751
  4981   0014E0  51C9               	movf	(displayTime@i+1)& (0+255),w,b
  4982   0014E2  E109               	bnz	u4750
  4983   0014E4  0E05               	movlw	5
  4984   0014E6  5DC8               	subwf	displayTime@i& (0+255),w,b
  4985   0014E8  A0D8               	btfss	status,0,c
  4986   0014EA  EF79  F00A         	goto	u4751
  4987   0014EE  EF7B  F00A         	goto	u4750
  4988   0014F2                     u4751:
  4989   0014F2  EF61  F00A         	goto	l4610
  4990   0014F6                     u4750:
  4991   0014F6                     
  4992                           ; BSR set to: 0
  4993                           ;main.c: 128:     printString(displayString);
  4994   0014F6  0EBE               	movlw	low displayTime@displayString
  4995   0014F8  6E46               	movwf	printString@str^0,c
  4996   0014FA  6A47               	clrf	(printString@str+1)^0,c
  4997   0014FC  EC6D  F005         	call	_printString	;wreg free
  4998   001500  0012               	return		;funcret
  4999   001502                     __end_of_displayTime:
  5000                           	callstack 0
  5001                           
  5002 ;; *************** function _displayAlarmTime *****************
  5003 ;; Defined at:
  5004 ;;		line 144 in file "main.c"
  5005 ;; Parameters:    Size  Location     Type
  5006 ;;		None
  5007 ;; Auto vars:     Size  Location     Type
  5008 ;;  i               2   21[BANK0 ] int 
  5009 ;;  alarmTimeStr    5   16[BANK0 ] unsigned char [5]
  5010 ;;  displayStrin    5   11[BANK0 ] unsigned char [5]
  5011 ;; Return value:  Size  Location     Type
  5012 ;;                  1    wreg      void 
  5013 ;; Registers used:
  5014 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5015 ;; Tracked objects:
  5016 ;;		On entry : 0/0
  5017 ;;		On exit  : 0/0
  5018 ;;		Unchanged: 0/0
  5019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5021 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5023 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5024 ;;Total ram usage:       12 bytes
  5025 ;; Hardware stack levels used: 1
  5026 ;; Hardware stack levels required when called: 8
  5027 ;; This function calls:
  5028 ;;		___awdiv
  5029 ;;		___awmod
  5030 ;;		_printString
  5031 ;; This function is called by:
  5032 ;;		_checkButtons
  5033 ;; This function uses a non-reentrant model
  5034 ;;
  5035                           
  5036                           	psect	text17
  5037   001502                     __ptext17:
  5038                           	callstack 0
  5039   001502                     _displayAlarmTime:
  5040                           	callstack 21
  5041   001502                     
  5042                           ;main.c: 146:     char alarmTimeString[5];;main.c: 149:     alarmTimeString[0] = (alarmH
      +                          ours / 10) + '0';
  5043   001502  C0AD  F006         	movff	_alarmHours,___awdiv@dividend
  5044   001506  6A07               	clrf	(___awdiv@dividend+1)^0,c
  5045   001508  0E00               	movlw	0
  5046   00150A  6E09               	movwf	(___awdiv@divisor+1)^0,c
  5047   00150C  0E0A               	movlw	10
  5048   00150E  6E08               	movwf	___awdiv@divisor^0,c
  5049   001510  ECAB  F008         	call	___awdiv	;wreg free
  5050   001514  5006               	movf	?___awdiv^0,w,c
  5051   001516  0F30               	addlw	48
  5052   001518  0100               	movlb	0	; () banked
  5053   00151A  6FC3               	movwf	displayAlarmTime@alarmTimeString& (0+255),b
  5054                           
  5055                           ;main.c: 150:     alarmTimeString[1] = (alarmHours % 10) + '0';
  5056   00151C  C0AD  F006         	movff	_alarmHours,___awmod@dividend
  5057   001520  6A07               	clrf	(___awmod@dividend+1)^0,c
  5058   001522  0E00               	movlw	0
  5059   001524  6E09               	movwf	(___awmod@divisor+1)^0,c
  5060   001526  0E0A               	movlw	10
  5061   001528  6E08               	movwf	___awmod@divisor^0,c
  5062   00152A  ECDB  F00A         	call	___awmod	;wreg free
  5063   00152E  5006               	movf	?___awmod^0,w,c
  5064   001530  0F30               	addlw	48
  5065   001532  0100               	movlb	0	; () banked
  5066   001534  6FC4               	movwf	(displayAlarmTime@alarmTimeString+1)& (0+255),b
  5067                           
  5068                           ;main.c: 151:     alarmTimeString[2] = (alarmMinutes / 10) + '0';
  5069   001536  C0AC  F006         	movff	_alarmMinutes,___awdiv@dividend
  5070   00153A  6A07               	clrf	(___awdiv@dividend+1)^0,c
  5071   00153C  0E00               	movlw	0
  5072   00153E  6E09               	movwf	(___awdiv@divisor+1)^0,c
  5073   001540  0E0A               	movlw	10
  5074   001542  6E08               	movwf	___awdiv@divisor^0,c
  5075   001544  ECAB  F008         	call	___awdiv	;wreg free
  5076   001548  5006               	movf	?___awdiv^0,w,c
  5077   00154A  0F30               	addlw	48
  5078   00154C  0100               	movlb	0	; () banked
  5079   00154E  6FC5               	movwf	(displayAlarmTime@alarmTimeString+2)& (0+255),b
  5080                           
  5081                           ;main.c: 152:     alarmTimeString[3] = (alarmMinutes % 10) + '0';
  5082   001550  C0AC  F006         	movff	_alarmMinutes,___awmod@dividend
  5083   001554  6A07               	clrf	(___awmod@dividend+1)^0,c
  5084   001556  0E00               	movlw	0
  5085   001558  6E09               	movwf	(___awmod@divisor+1)^0,c
  5086   00155A  0E0A               	movlw	10
  5087   00155C  6E08               	movwf	___awmod@divisor^0,c
  5088   00155E  ECDB  F00A         	call	___awmod	;wreg free
  5089   001562  5006               	movf	?___awmod^0,w,c
  5090   001564  0F30               	addlw	48
  5091   001566  0100               	movlb	0	; () banked
  5092   001568  6FC6               	movwf	(displayAlarmTime@alarmTimeString+3)& (0+255),b
  5093   00156A                     
  5094                           ; BSR set to: 0
  5095                           ;main.c: 153:     alarmTimeString[4] = '\0';
  5096   00156A  0E00               	movlw	0
  5097   00156C  6FC7               	movwf	(displayAlarmTime@alarmTimeString+4)& (0+255),b
  5098   00156E                     
  5099                           ; BSR set to: 0
  5100                           ;main.c: 156:     uint8_t displayString[5];;main.c: 157:     for (int i = 0; i < 5; i++)
      +                           {
  5101   00156E  0E00               	movlw	0
  5102   001570  6FC9               	movwf	(displayAlarmTime@i+1)& (0+255),b
  5103   001572  0E00               	movlw	0
  5104   001574  6FC8               	movwf	displayAlarmTime@i& (0+255),b
  5105   001576                     l4642:
  5106                           
  5107                           ; BSR set to: 0
  5108                           ;main.c: 158:         displayString[i] = (uint8_t)alarmTimeString[i];
  5109   001576  51C8               	movf	displayAlarmTime@i& (0+255),w,b
  5110   001578  0FC3               	addlw	low displayAlarmTime@alarmTimeString
  5111   00157A  6ED9               	movwf	fsr2l,c
  5112   00157C  6ADA               	clrf	fsr2h,c
  5113   00157E  51C8               	movf	displayAlarmTime@i& (0+255),w,b
  5114   001580  0FBE               	addlw	low displayAlarmTime@displayString
  5115   001582  6EE1               	movwf	fsr1l,c
  5116   001584  6AE2               	clrf	fsr1h,c
  5117   001586  CFDF FFE7          	movff	indf2,indf1
  5118   00158A                     
  5119                           ; BSR set to: 0
  5120                           ;main.c: 159:     }
  5121   00158A  4BC8               	infsnz	displayAlarmTime@i& (0+255),f,b
  5122   00158C  2BC9               	incf	(displayAlarmTime@i+1)& (0+255),f,b
  5123   00158E                     
  5124                           ; BSR set to: 0
  5125   00158E  BFC9               	btfsc	(displayAlarmTime@i+1)& (0+255),7,b
  5126   001590  EFD3  F00A         	goto	u4771
  5127   001594  51C9               	movf	(displayAlarmTime@i+1)& (0+255),w,b
  5128   001596  E109               	bnz	u4770
  5129   001598  0E05               	movlw	5
  5130   00159A  5DC8               	subwf	displayAlarmTime@i& (0+255),w,b
  5131   00159C  A0D8               	btfss	status,0,c
  5132   00159E  EFD3  F00A         	goto	u4771
  5133   0015A2  EFD5  F00A         	goto	u4770
  5134   0015A6                     u4771:
  5135   0015A6  EFBB  F00A         	goto	l4642
  5136   0015AA                     u4770:
  5137   0015AA                     
  5138                           ; BSR set to: 0
  5139                           ;main.c: 161:     printString(displayString);
  5140   0015AA  0EBE               	movlw	low displayAlarmTime@displayString
  5141   0015AC  6E46               	movwf	printString@str^0,c
  5142   0015AE  6A47               	clrf	(printString@str+1)^0,c
  5143   0015B0  EC6D  F005         	call	_printString	;wreg free
  5144   0015B4  0012               	return		;funcret
  5145   0015B6                     __end_of_displayAlarmTime:
  5146                           	callstack 0
  5147                           
  5148 ;; *************** function _printString *****************
  5149 ;; Defined at:
  5150 ;;		line 161 in file "MAX7219.c"
  5151 ;; Parameters:    Size  Location     Type
  5152 ;;  str             2   69[COMRAM] PTR unsigned char 
  5153 ;;		 -> STR_1(6), displayAlarmTime@displayString(5), displayTime@displayString(5), 
  5154 ;; Auto vars:     Size  Location     Type
  5155 ;;  j               2    9[BANK0 ] int 
  5156 ;;  data            1    2[BANK0 ] unsigned char 
  5157 ;;  i               2    5[BANK0 ] int 
  5158 ;;  indx            2    0[BANK0 ] int 
  5159 ;;  k               2    7[BANK0 ] int 
  5160 ;;  strindx         2    3[BANK0 ] int 
  5161 ;; Return value:  Size  Location     Type
  5162 ;;                  1    wreg      void 
  5163 ;; Registers used:
  5164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5165 ;; Tracked objects:
  5166 ;;		On entry : 0/0
  5167 ;;		On exit  : 0/0
  5168 ;;		Unchanged: 0/0
  5169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5171 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Totals:        10      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;Total ram usage:       21 bytes
  5175 ;; Hardware stack levels used: 1
  5176 ;; Hardware stack levels required when called: 7
  5177 ;; This function calls:
  5178 ;;		_flushBuffer
  5179 ;; This function is called by:
  5180 ;;		_displayTime
  5181 ;;		_displayAlarmTime
  5182 ;;		_triggerAlarm
  5183 ;; This function uses a non-reentrant model
  5184 ;;
  5185                           
  5186                           	psect	text18
  5187   000ADA                     __ptext18:
  5188                           	callstack 0
  5189   000ADA                     _printString:
  5190                           	callstack 21
  5191   000ADA                     
  5192                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  5193   000ADA  0E00               	movlw	0
  5194   000ADC  0100               	movlb	0	; () banked
  5195   000ADE  6FB7               	movwf	(printString@strindx+1)& (0+255),b
  5196   000AE0  0E00               	movlw	0
  5197   000AE2  6FB6               	movwf	printString@strindx& (0+255),b
  5198                           
  5199                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  5200   000AE4  0E00               	movlw	0
  5201   000AE6  6FBB               	movwf	(printString@k+1)& (0+255),b
  5202   000AE8  0E1F               	movlw	31
  5203   000AEA  6FBA               	movwf	printString@k& (0+255),b
  5204                           
  5205                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5206   000AEC  EF15  F006         	goto	l4456
  5207   000AF0                     l4416:
  5208                           
  5209                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  5210   000AF0  0E00               	movlw	0
  5211   000AF2  0100               	movlb	0	; () banked
  5212   000AF4  6FB4               	movwf	(printString@indx+1)& (0+255),b
  5213   000AF6  0E00               	movlw	0
  5214   000AF8  6FB3               	movwf	printString@indx& (0+255),b
  5215                           
  5216                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  5217   000AFA  0E00               	movlw	0
  5218   000AFC  6FB9               	movwf	(printString@i+1)& (0+255),b
  5219   000AFE  0E00               	movlw	0
  5220   000B00  6FB8               	movwf	printString@i& (0+255),b
  5221   000B02                     l4422:
  5222                           
  5223                           ; BSR set to: 0
  5224                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  5225   000B02  0E00               	movlw	0
  5226   000B04  6FB5               	movwf	printString@data& (0+255),b
  5227                           
  5228                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  5229   000B06  0E00               	movlw	0
  5230   000B08  6FBD               	movwf	(printString@j+1)& (0+255),b
  5231   000B0A  0E07               	movlw	7
  5232   000B0C  6FBC               	movwf	printString@j& (0+255),b
  5233   000B0E                     l4428:
  5234                           
  5235                           ; BSR set to: 0
  5236                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  5237   000B0E  51B6               	movf	printString@strindx& (0+255),w,b
  5238   000B10  2446               	addwf	printString@str^0,w,c
  5239   000B12  6E48               	movwf	??_printString^0,c
  5240   000B14  51B7               	movf	(printString@strindx+1)& (0+255),w,b
  5241   000B16  2047               	addwfc	(printString@str+1)^0,w,c
  5242   000B18  6E49               	movwf	(??_printString+1)^0,c
  5243   000B1A  C048  FFF6         	movff	??_printString,tblptrl
  5244   000B1E  C049  FFF7         	movff	??_printString+1,tblptrh
  5245   000B22  0E00               	movlw	low (__mediumconst shr (0+16))
  5246   000B24  6EF8               	movwf	tblptru,c
  5247   000B26  0E0F               	movlw	(high __ramtop+-1)
  5248   000B28  64F7               	cpfsgt	tblptrh,c
  5249   000B2A  D003               	bra	u4527
  5250   000B2C  0008               	tblrd		*
  5251   000B2E  50F5               	movf	tablat,w,c
  5252   000B30  D005               	bra	u4520
  5253   000B32                     u4527:
  5254   000B32  CFF6 FFE1          	movff	tblptrl,fsr1l
  5255   000B36  CFF7 FFE2          	movff	tblptrh,fsr1h
  5256   000B3A  50E7               	movf	indf1,w,c
  5257   000B3C                     u4520:
  5258   000B3C  6E4A               	movwf	(??_printString+2)^0,c
  5259   000B3E  504A               	movf	(??_printString+2)^0,w,c
  5260   000B40  0D08               	mullw	8
  5261   000B42  0EF5               	movlw	low _MAX7219_Dot_Matrix_font
  5262   000B44  24F3               	addwf	243,w,c
  5263   000B46  6E4B               	movwf	(??_printString+3)^0,c
  5264   000B48  0EF7               	movlw	high _MAX7219_Dot_Matrix_font
  5265   000B4A  20F4               	addwfc	prodh,w,c
  5266   000B4C  6E4C               	movwf	(??_printString+4)^0,c
  5267   000B4E  0100               	movlb	0	; () banked
  5268   000B50  51B3               	movf	printString@indx& (0+255),w,b
  5269   000B52  264B               	addwf	(??_printString+3)^0,f,c
  5270   000B54  51B4               	movf	(printString@indx+1)& (0+255),w,b
  5271   000B56  224C               	addwfc	(??_printString+4)^0,f,c
  5272   000B58  C04B  FFF6         	movff	??_printString+3,tblptrl
  5273   000B5C  C04C  FFF7         	movff	??_printString+4,tblptrh
  5274   000B60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5275   000B60  6AF8               	clrf	tblptru,c
  5276   000B62                     	endif
  5277   000B62                     	if	0	;tblptru may be non-zero
  5278   000B62                     	endif
  5279   000B62  0008               	tblrd		*
  5280   000B64  CFF5 F04D          	movff	tablat,??_printString+5
  5281   000B68  C0BC  F04E         	movff	printString@j,??_printString+6
  5282   000B6C  0E01               	movlw	1
  5283   000B6E  6E4F               	movwf	(??_printString+7)^0,c
  5284   000B70  2A4E               	incf	(??_printString+6)^0,f,c
  5285   000B72  EFBD  F005         	goto	u4534
  5286   000B76                     u4535:
  5287   000B76  90D8               	bcf	status,0,c
  5288   000B78  364F               	rlcf	(??_printString+7)^0,f,c
  5289   000B7A                     u4534:
  5290   000B7A  2E4E               	decfsz	(??_printString+6)^0,f,c
  5291   000B7C  EFBB  F005         	goto	u4535
  5292   000B80  504F               	movf	(??_printString+7)^0,w,c
  5293   000B82  144D               	andwf	(??_printString+5)^0,w,c
  5294   000B84  0900               	iorlw	0
  5295   000B86  B4D8               	btfsc	status,2,c
  5296   000B88  EFC8  F005         	goto	u4541
  5297   000B8C  EFCA  F005         	goto	u4540
  5298   000B90                     u4541:
  5299   000B90  EFDB  F005         	goto	l4432
  5300   000B94                     u4540:
  5301   000B94                     
  5302                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  5303   000B94  0100               	movlb	0	; () banked
  5304   000B96  51BC               	movf	printString@j& (0+255),w,b
  5305   000B98  0807               	sublw	7
  5306   000B9A  6E48               	movwf	??_printString^0,c
  5307   000B9C  0E01               	movlw	1
  5308   000B9E  6E49               	movwf	(??_printString+1)^0,c
  5309   000BA0  2A48               	incf	??_printString^0,f,c
  5310   000BA2  EFD5  F005         	goto	u4554
  5311   000BA6                     u4555:
  5312   000BA6  90D8               	bcf	status,0,c
  5313   000BA8  3649               	rlcf	(??_printString+1)^0,f,c
  5314   000BAA                     u4554:
  5315   000BAA  2E48               	decfsz	??_printString^0,f,c
  5316   000BAC  EFD3  F005         	goto	u4555
  5317   000BB0  5049               	movf	(??_printString+1)^0,w,c
  5318   000BB2  0100               	movlb	0	; () banked
  5319   000BB4  13B5               	iorwf	printString@data& (0+255),f,b
  5320   000BB6                     l4432:
  5321                           
  5322                           ;MAX7219.c: 179:             }
  5323   000BB6  0100               	movlb	0	; () banked
  5324   000BB8  07BC               	decf	printString@j& (0+255),f,b
  5325   000BBA  A0D8               	btfss	status,0,c
  5326   000BBC  07BD               	decf	(printString@j+1)& (0+255),f,b
  5327   000BBE                     
  5328                           ; BSR set to: 0
  5329   000BBE  BFBD               	btfsc	(printString@j+1)& (0+255),7,b
  5330   000BC0  EFE6  F005         	goto	u4560
  5331   000BC4  EFE4  F005         	goto	u4561
  5332   000BC8                     u4561:
  5333   000BC8  EF87  F005         	goto	l4428
  5334   000BCC                     u4560:
  5335   000BCC                     
  5336                           ; BSR set to: 0
  5337                           ;MAX7219.c: 180:             if (k < 0) break;
  5338   000BCC  BFBB               	btfsc	(printString@k+1)& (0+255),7,b
  5339   000BCE  EFED  F005         	goto	u4570
  5340   000BD2  EFEB  F005         	goto	u4571
  5341   000BD6                     u4571:
  5342   000BD6  EFEF  F005         	goto	l4440
  5343   000BDA                     u4570:
  5344   000BDA  EF0A  F006         	goto	l4450
  5345   000BDE                     l4440:
  5346                           
  5347                           ; BSR set to: 0
  5348                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  5349   000BDE  51BA               	movf	printString@k& (0+255),w,b
  5350   000BE0  0F60               	addlw	low _bufferCol
  5351   000BE2  6ED9               	movwf	fsr2l,c
  5352   000BE4  6ADA               	clrf	fsr2h,c
  5353   000BE6  C0B5  FFDF         	movff	printString@data,indf2
  5354   000BEA                     
  5355                           ; BSR set to: 0
  5356   000BEA  07BA               	decf	printString@k& (0+255),f,b
  5357   000BEC  A0D8               	btfss	status,0,c
  5358   000BEE  07BB               	decf	(printString@k+1)& (0+255),f,b
  5359   000BF0                     
  5360                           ; BSR set to: 0
  5361                           ;MAX7219.c: 182:             indx++;
  5362   000BF0  4BB3               	infsnz	printString@indx& (0+255),f,b
  5363   000BF2  2BB4               	incf	(printString@indx+1)& (0+255),f,b
  5364   000BF4                     
  5365                           ; BSR set to: 0
  5366                           ;MAX7219.c: 183:         }
  5367   000BF4  4BB8               	infsnz	printString@i& (0+255),f,b
  5368   000BF6  2BB9               	incf	(printString@i+1)& (0+255),f,b
  5369   000BF8                     
  5370                           ; BSR set to: 0
  5371   000BF8  BFB9               	btfsc	(printString@i+1)& (0+255),7,b
  5372   000BFA  EF08  F006         	goto	u4581
  5373   000BFE  51B9               	movf	(printString@i+1)& (0+255),w,b
  5374   000C00  E109               	bnz	u4580
  5375   000C02  0E08               	movlw	8
  5376   000C04  5DB8               	subwf	printString@i& (0+255),w,b
  5377   000C06  A0D8               	btfss	status,0,c
  5378   000C08  EF08  F006         	goto	u4581
  5379   000C0C  EF0A  F006         	goto	u4580
  5380   000C10                     u4581:
  5381   000C10  EF81  F005         	goto	l4422
  5382   000C14                     u4580:
  5383   000C14                     l4450:
  5384                           
  5385                           ; BSR set to: 0
  5386                           ;MAX7219.c: 184:         strindx++;
  5387   000C14  4BB6               	infsnz	printString@strindx& (0+255),f,b
  5388   000C16  2BB7               	incf	(printString@strindx+1)& (0+255),f,b
  5389   000C18                     
  5390                           ; BSR set to: 0
  5391                           ;MAX7219.c: 185:         if (k < 0) break;
  5392   000C18  BFBB               	btfsc	(printString@k+1)& (0+255),7,b
  5393   000C1A  EF13  F006         	goto	u4590
  5394   000C1E  EF11  F006         	goto	u4591
  5395   000C22                     u4591:
  5396   000C22  EF15  F006         	goto	l4456
  5397   000C26                     u4590:
  5398   000C26  EF34  F006         	goto	l4458
  5399   000C2A                     l4456:
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5403   000C2A  51B6               	movf	printString@strindx& (0+255),w,b
  5404   000C2C  2446               	addwf	printString@str^0,w,c
  5405   000C2E  6E48               	movwf	??_printString^0,c
  5406   000C30  51B7               	movf	(printString@strindx+1)& (0+255),w,b
  5407   000C32  2047               	addwfc	(printString@str+1)^0,w,c
  5408   000C34  6E49               	movwf	(??_printString+1)^0,c
  5409   000C36  C048  FFF6         	movff	??_printString,tblptrl
  5410   000C3A  C049  FFF7         	movff	??_printString+1,tblptrh
  5411   000C3E  0E00               	movlw	low (__mediumconst shr (0+16))
  5412   000C40  6EF8               	movwf	tblptru,c
  5413   000C42  0E0F               	movlw	(high __ramtop+-1)
  5414   000C44  64F7               	cpfsgt	tblptrh,c
  5415   000C46  D003               	bra	u4607
  5416   000C48  0008               	tblrd		*
  5417   000C4A  50F5               	movf	tablat,w,c
  5418   000C4C  D005               	bra	u4600
  5419   000C4E                     u4607:
  5420   000C4E  CFF6 FFE1          	movff	tblptrl,fsr1l
  5421   000C52  CFF7 FFE2          	movff	tblptrh,fsr1h
  5422   000C56  50E7               	movf	indf1,w,c
  5423   000C58                     u4600:
  5424   000C58  0900               	iorlw	0
  5425   000C5A  A4D8               	btfss	status,2,c
  5426   000C5C  EF32  F006         	goto	u4611
  5427   000C60  EF34  F006         	goto	u4610
  5428   000C64                     u4611:
  5429   000C64  EF78  F005         	goto	l4416
  5430   000C68                     u4610:
  5431   000C68                     l4458:
  5432                           
  5433                           ;MAX7219.c: 188:     flushBuffer();
  5434   000C68  EC37  F006         	call	_flushBuffer	;wreg free
  5435   000C6C  0012               	return		;funcret
  5436   000C6E                     __end_of_printString:
  5437                           	callstack 0
  5438                           
  5439 ;; *************** function _flushBuffer *****************
  5440 ;; Defined at:
  5441 ;;		line 52 in file "MAX7219.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;		None
  5444 ;; Auto vars:     Size  Location     Type
  5445 ;;  j               2   63[COMRAM] int 
  5446 ;;  dev             2   61[COMRAM] int 
  5447 ;;  row             2   65[COMRAM] int 
  5448 ;;  i               2   67[COMRAM] int 
  5449 ;;  bufferRow      32   29[COMRAM] unsigned char [32]
  5450 ;; Return value:  Size  Location     Type
  5451 ;;                  1    wreg      void 
  5452 ;; Registers used:
  5453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5454 ;; Tracked objects:
  5455 ;;		On entry : 0/0
  5456 ;;		On exit  : 0/0
  5457 ;;		Unchanged: 0/0
  5458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5460 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;Total ram usage:       43 bytes
  5464 ;; Hardware stack levels used: 1
  5465 ;; Hardware stack levels required when called: 6
  5466 ;; This function calls:
  5467 ;;		___awdiv
  5468 ;;		_max_write
  5469 ;; This function is called by:
  5470 ;;		_clearDisplay
  5471 ;;		_printString
  5472 ;;		_shiftLeft
  5473 ;;		_shiftchar
  5474 ;; This function uses a non-reentrant model
  5475 ;;
  5476                           
  5477                           	psect	text19
  5478   000C6E                     __ptext19:
  5479                           	callstack 0
  5480   000C6E                     _flushBuffer:
  5481                           	callstack 21
  5482   000C6E                     
  5483                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  5484   000C6E  EE20  F01E         	lfsr	2,flushBuffer@bufferRow
  5485   000C72  0E1F               	movlw	31
  5486   000C74                     u4201:
  5487   000C74  6ADE               	clrf	postinc2,c
  5488   000C76  06E8               	decf	wreg,f,c
  5489   000C78  E2FD               	bc	u4201
  5490   000C7A                     
  5491                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  5492   000C7A  0E00               	movlw	0
  5493   000C7C  6E45               	movwf	(flushBuffer@i+1)^0,c
  5494   000C7E  0E00               	movlw	0
  5495   000C80  6E44               	movwf	flushBuffer@i^0,c
  5496   000C82                     l4190:
  5497                           
  5498                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  5499   000C82  C044  F006         	movff	flushBuffer@i,___awdiv@dividend
  5500   000C86  C045  F007         	movff	flushBuffer@i+1,___awdiv@dividend+1
  5501   000C8A  0E00               	movlw	0
  5502   000C8C  6E09               	movwf	(___awdiv@divisor+1)^0,c
  5503   000C8E  0E08               	movlw	8
  5504   000C90  6E08               	movwf	___awdiv@divisor^0,c
  5505   000C92  ECAB  F008         	call	___awdiv	;wreg free
  5506   000C96  C006  F03E         	movff	?___awdiv,flushBuffer@dev
  5507   000C9A  C007  F03F         	movff	?___awdiv+1,flushBuffer@dev+1
  5508   000C9E                     
  5509                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  5510   000C9E  0E00               	movlw	0
  5511   000CA0  6E41               	movwf	(flushBuffer@j+1)^0,c
  5512   000CA2  0E00               	movlw	0
  5513   000CA4  6E40               	movwf	flushBuffer@j^0,c
  5514   000CA6                     l4198:
  5515                           
  5516                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  5517   000CA6  5044               	movf	flushBuffer@i^0,w,c
  5518   000CA8  0F60               	addlw	low _bufferCol
  5519   000CAA  6ED9               	movwf	fsr2l,c
  5520   000CAC  6ADA               	clrf	fsr2h,c
  5521   000CAE  50DF               	movf	indf2,w,c
  5522   000CB0  6E1B               	movwf	??_flushBuffer^0,c
  5523   000CB2  C040  F01C         	movff	flushBuffer@j,??_flushBuffer+1
  5524   000CB6  0E01               	movlw	1
  5525   000CB8  6E1D               	movwf	(??_flushBuffer+2)^0,c
  5526   000CBA  2A1C               	incf	(??_flushBuffer+1)^0,f,c
  5527   000CBC  EF62  F006         	goto	u4214
  5528   000CC0                     u4215:
  5529   000CC0  90D8               	bcf	status,0,c
  5530   000CC2  361D               	rlcf	(??_flushBuffer+2)^0,f,c
  5531   000CC4                     u4214:
  5532   000CC4  2E1C               	decfsz	(??_flushBuffer+1)^0,f,c
  5533   000CC6  EF60  F006         	goto	u4215
  5534   000CCA  501D               	movf	(??_flushBuffer+2)^0,w,c
  5535   000CCC  141B               	andwf	??_flushBuffer^0,w,c
  5536   000CCE  0900               	iorlw	0
  5537   000CD0  B4D8               	btfsc	status,2,c
  5538   000CD2  EF6D  F006         	goto	u4221
  5539   000CD6  EF6F  F006         	goto	u4220
  5540   000CDA                     u4221:
  5541   000CDA  EF89  F006         	goto	l4202
  5542   000CDE                     u4220:
  5543   000CDE                     
  5544                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  5545   000CDE  503E               	movf	flushBuffer@dev^0,w,c
  5546   000CE0  0D08               	mullw	8
  5547   000CE2  5044               	movf	flushBuffer@i^0,w,c
  5548   000CE4  5CF3               	subwf	243,w,c
  5549   000CE6  6E1B               	movwf	??_flushBuffer^0,c
  5550   000CE8  0E07               	movlw	7
  5551   000CEA  261B               	addwf	??_flushBuffer^0,f,c
  5552   000CEC  0E01               	movlw	1
  5553   000CEE  6E1C               	movwf	(??_flushBuffer+1)^0,c
  5554   000CF0  2A1B               	incf	??_flushBuffer^0,f,c
  5555   000CF2  EF7D  F006         	goto	u4234
  5556   000CF6                     u4235:
  5557   000CF6  90D8               	bcf	status,0,c
  5558   000CF8  361C               	rlcf	(??_flushBuffer+1)^0,f,c
  5559   000CFA                     u4234:
  5560   000CFA  2E1B               	decfsz	??_flushBuffer^0,f,c
  5561   000CFC  EF7B  F006         	goto	u4235
  5562   000D00  503E               	movf	flushBuffer@dev^0,w,c
  5563   000D02  0D08               	mullw	8
  5564   000D04  50F3               	movf	243,w,c
  5565   000D06  0F1E               	addlw	low flushBuffer@bufferRow
  5566   000D08  2440               	addwf	flushBuffer@j^0,w,c
  5567   000D0A  6ED9               	movwf	fsr2l,c
  5568   000D0C  6ADA               	clrf	fsr2h,c
  5569   000D0E  501C               	movf	(??_flushBuffer+1)^0,w,c
  5570   000D10  12DF               	iorwf	indf2,f,c
  5571   000D12                     l4202:
  5572                           
  5573                           ;MAX7219.c: 66:   }
  5574   000D12  4A40               	infsnz	flushBuffer@j^0,f,c
  5575   000D14  2A41               	incf	(flushBuffer@j+1)^0,f,c
  5576   000D16  BE41               	btfsc	(flushBuffer@j+1)^0,7,c
  5577   000D18  EF97  F006         	goto	u4241
  5578   000D1C  5041               	movf	(flushBuffer@j+1)^0,w,c
  5579   000D1E  E109               	bnz	u4240
  5580   000D20  0E08               	movlw	8
  5581   000D22  5C40               	subwf	flushBuffer@j^0,w,c
  5582   000D24  A0D8               	btfss	status,0,c
  5583   000D26  EF97  F006         	goto	u4241
  5584   000D2A  EF99  F006         	goto	u4240
  5585   000D2E                     u4241:
  5586   000D2E  EF53  F006         	goto	l4198
  5587   000D32                     u4240:
  5588   000D32                     
  5589                           ;MAX7219.c: 67:  }
  5590   000D32  4A44               	infsnz	flushBuffer@i^0,f,c
  5591   000D34  2A45               	incf	(flushBuffer@i+1)^0,f,c
  5592   000D36  BE45               	btfsc	(flushBuffer@i+1)^0,7,c
  5593   000D38  EFA7  F006         	goto	u4251
  5594   000D3C  5045               	movf	(flushBuffer@i+1)^0,w,c
  5595   000D3E  E109               	bnz	u4250
  5596   000D40  0E20               	movlw	32
  5597   000D42  5C44               	subwf	flushBuffer@i^0,w,c
  5598   000D44  A0D8               	btfss	status,0,c
  5599   000D46  EFA7  F006         	goto	u4251
  5600   000D4A  EFA9  F006         	goto	u4250
  5601   000D4E                     u4251:
  5602   000D4E  EF41  F006         	goto	l4190
  5603   000D52                     u4250:
  5604   000D52                     
  5605                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  5606   000D52  0E00               	movlw	0
  5607   000D54  6E43               	movwf	(flushBuffer@row+1)^0,c
  5608   000D56  0E01               	movlw	1
  5609   000D58  6E42               	movwf	flushBuffer@row^0,c
  5610   000D5A                     l4216:
  5611                           
  5612                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  5613   000D5A  C042  F00E         	movff	flushBuffer@row,max_write@row
  5614   000D5E  C043  F00F         	movff	flushBuffer@row+1,max_write@row+1
  5615   000D62  C042  F01B         	movff	flushBuffer@row,??_flushBuffer
  5616   000D66  0EFF               	movlw	255
  5617   000D68  261B               	addwf	??_flushBuffer^0,f,c
  5618   000D6A  501B               	movf	??_flushBuffer^0,w,c
  5619   000D6C  0F1E               	addlw	low flushBuffer@bufferRow
  5620   000D6E  6ED9               	movwf	fsr2l,c
  5621   000D70  6ADA               	clrf	fsr2h,c
  5622   000D72  50DF               	movf	indf2,w,c
  5623   000D74  6E10               	movwf	max_write@data^0,c
  5624   000D76  EC0D  F009         	call	_max_write	;wreg free
  5625   000D7A                     
  5626                           ;MAX7219.c: 73:  }
  5627   000D7A  4A42               	infsnz	flushBuffer@row^0,f,c
  5628   000D7C  2A43               	incf	(flushBuffer@row+1)^0,f,c
  5629   000D7E  BE43               	btfsc	(flushBuffer@row+1)^0,7,c
  5630   000D80  EFCB  F006         	goto	u4261
  5631   000D84  5043               	movf	(flushBuffer@row+1)^0,w,c
  5632   000D86  E109               	bnz	u4260
  5633   000D88  0E21               	movlw	33
  5634   000D8A  5C42               	subwf	flushBuffer@row^0,w,c
  5635   000D8C  A0D8               	btfss	status,0,c
  5636   000D8E  EFCB  F006         	goto	u4261
  5637   000D92  EFCD  F006         	goto	u4260
  5638   000D96                     u4261:
  5639   000D96  EFAD  F006         	goto	l4216
  5640   000D9A                     u4260:
  5641   000D9A  0012               	return		;funcret
  5642   000D9C                     __end_of_flushBuffer:
  5643                           	callstack 0
  5644                           
  5645 ;; *************** function _max_write *****************
  5646 ;; Defined at:
  5647 ;;		line 10 in file "MAX7219.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  row             2   13[COMRAM] int 
  5650 ;;  data            1   15[COMRAM] unsigned char 
  5651 ;; Auto vars:     Size  Location     Type
  5652 ;;  dev             2   22[COMRAM] int 
  5653 ;;  writeData       2   24[COMRAM] unsigned short 
  5654 ;;  devTarget       2   20[COMRAM] int 
  5655 ;;  offset          2   18[COMRAM] int 
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      void 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2, status,0, cstack
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5665 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;Total ram usage:       13 bytes
  5670 ;; Hardware stack levels used: 1
  5671 ;; Hardware stack levels required when called: 5
  5672 ;; This function calls:
  5673 ;;		_SPI_Exchange8bit
  5674 ;;		___awdiv
  5675 ;; This function is called by:
  5676 ;;		_flushBuffer
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text20
  5681   00121A                     __ptext20:
  5682                           	callstack 0
  5683   00121A                     _max_write:
  5684                           	callstack 21
  5685   00121A                     
  5686                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  5687   00121A  0EFF               	movlw	255
  5688   00121C  240E               	addwf	max_write@row^0,w,c
  5689   00121E  6E06               	movwf	___awdiv@dividend^0,c
  5690   001220  0EFF               	movlw	255
  5691   001222  200F               	addwfc	(max_write@row+1)^0,w,c
  5692   001224  6E07               	movwf	(___awdiv@dividend+1)^0,c
  5693   001226  0E00               	movlw	0
  5694   001228  6E09               	movwf	(___awdiv@divisor+1)^0,c
  5695   00122A  0E08               	movlw	8
  5696   00122C  6E08               	movwf	___awdiv@divisor^0,c
  5697   00122E  ECAB  F008         	call	___awdiv	;wreg free
  5698   001232  C006  F015         	movff	?___awdiv,max_write@devTarget
  5699   001236  C007  F016         	movff	?___awdiv+1,max_write@devTarget+1
  5700   00123A                     
  5701                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  5702   00123A  C015  F011         	movff	max_write@devTarget,??_max_write
  5703   00123E  C016  F012         	movff	max_write@devTarget+1,??_max_write+1
  5704   001242  90D8               	bcf	status,0,c
  5705   001244  3611               	rlcf	??_max_write^0,f,c
  5706   001246  3612               	rlcf	(??_max_write+1)^0,f,c
  5707   001248  90D8               	bcf	status,0,c
  5708   00124A  3611               	rlcf	??_max_write^0,f,c
  5709   00124C  3612               	rlcf	(??_max_write+1)^0,f,c
  5710   00124E  90D8               	bcf	status,0,c
  5711   001250  3611               	rlcf	??_max_write^0,f,c
  5712   001252  3612               	rlcf	(??_max_write+1)^0,f,c
  5713   001254  C011  F013         	movff	??_max_write,max_write@offset
  5714   001258  C012  F014         	movff	??_max_write+1,max_write@offset+1
  5715   00125C  948B               	bcf	139,2,c	;volatile
  5716   00125E                     
  5717                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  5718   00125E  0E00               	movlw	0
  5719   001260  6E18               	movwf	(max_write@dev+1)^0,c
  5720   001262  0E00               	movlw	0
  5721   001264  6E17               	movwf	max_write@dev^0,c
  5722   001266                     l3930:
  5723                           
  5724                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  5725   001266  5015               	movf	max_write@devTarget^0,w,c
  5726   001268  1817               	xorwf	max_write@dev^0,w,c
  5727   00126A  E107               	bnz	u3771
  5728   00126C  5016               	movf	(max_write@devTarget+1)^0,w,c
  5729   00126E  1818               	xorwf	(max_write@dev+1)^0,w,c
  5730   001270  A4D8               	btfss	status,2,c
  5731   001272  EF3D  F009         	goto	u3771
  5732   001276  EF3F  F009         	goto	u3770
  5733   00127A                     u3771:
  5734   00127A  EF55  F009         	goto	l3938
  5735   00127E                     u3770:
  5736   00127E                     
  5737                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  5738   00127E  5013               	movf	max_write@offset^0,w,c
  5739   001280  5C0E               	subwf	max_write@row^0,w,c
  5740   001282  6E11               	movwf	??_max_write^0,c
  5741   001284  5014               	movf	(max_write@offset+1)^0,w,c
  5742   001286  580F               	subwfb	(max_write@row+1)^0,w,c
  5743   001288  6E12               	movwf	(??_max_write+1)^0,c
  5744   00128A  C011  F012         	movff	??_max_write,??_max_write+1
  5745   00128E  6A11               	clrf	??_max_write^0,c
  5746   001290  5010               	movf	max_write@data^0,w,c
  5747   001292  1011               	iorwf	??_max_write^0,w,c
  5748   001294  6E19               	movwf	max_write@writeData^0,c
  5749   001296  5012               	movf	(??_max_write+1)^0,w,c
  5750   001298  6E1A               	movwf	(max_write@writeData+1)^0,c
  5751   00129A                     
  5752                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5753   00129A  501A               	movf	(max_write@writeData+1)^0,w,c
  5754   00129C  EC00  F00E         	call	_SPI_Exchange8bit
  5755   0012A0                     
  5756                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  5757   0012A0  5019               	movf	max_write@writeData^0,w,c
  5758   0012A2  EC00  F00E         	call	_SPI_Exchange8bit
  5759                           
  5760                           ;MAX7219.c: 31:   }
  5761   0012A6  EF5B  F009         	goto	l3944
  5762   0012AA                     l3938:
  5763   0012AA                     
  5764                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5765   0012AA  0E00               	movlw	0
  5766   0012AC  EC00  F00E         	call	_SPI_Exchange8bit
  5767   0012B0                     
  5768                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  5769   0012B0  0E00               	movlw	0
  5770   0012B2  EC00  F00E         	call	_SPI_Exchange8bit
  5771   0012B6                     l3944:
  5772                           
  5773                           ;MAX7219.c: 46:  }
  5774   0012B6  4A17               	infsnz	max_write@dev^0,f,c
  5775   0012B8  2A18               	incf	(max_write@dev+1)^0,f,c
  5776   0012BA  BE18               	btfsc	(max_write@dev+1)^0,7,c
  5777   0012BC  EF69  F009         	goto	u3781
  5778   0012C0  5018               	movf	(max_write@dev+1)^0,w,c
  5779   0012C2  E109               	bnz	u3780
  5780   0012C4  0E04               	movlw	4
  5781   0012C6  5C17               	subwf	max_write@dev^0,w,c
  5782   0012C8  A0D8               	btfss	status,0,c
  5783   0012CA  EF69  F009         	goto	u3781
  5784   0012CE  EF6B  F009         	goto	u3780
  5785   0012D2                     u3781:
  5786   0012D2  EF33  F009         	goto	l3930
  5787   0012D6                     u3780:
  5788   0012D6  848B               	bsf	139,2,c	;volatile
  5789   0012D8  0012               	return		;funcret
  5790   0012DA                     __end_of_max_write:
  5791                           	callstack 0
  5792                           
  5793 ;; *************** function ___awdiv *****************
  5794 ;; Defined at:
  5795 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5796 ;; Parameters:    Size  Location     Type
  5797 ;;  dividend        2    5[COMRAM] int 
  5798 ;;  divisor         2    7[COMRAM] int 
  5799 ;; Auto vars:     Size  Location     Type
  5800 ;;  quotient        2   11[COMRAM] int 
  5801 ;;  sign            1   10[COMRAM] unsigned char 
  5802 ;;  counter         1    9[COMRAM] unsigned char 
  5803 ;; Return value:  Size  Location     Type
  5804 ;;                  2    5[COMRAM] int 
  5805 ;; Registers used:
  5806 ;;		wreg, status,2, status,0
  5807 ;; Tracked objects:
  5808 ;;		On entry : 0/0
  5809 ;;		On exit  : 0/0
  5810 ;;		Unchanged: 0/0
  5811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5812 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5813 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5815 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5816 ;;Total ram usage:        8 bytes
  5817 ;; Hardware stack levels used: 1
  5818 ;; Hardware stack levels required when called: 4
  5819 ;; This function calls:
  5820 ;;		Nothing
  5821 ;; This function is called by:
  5822 ;;		_displayTime
  5823 ;;		_displayAlarmTime
  5824 ;;		_max_write
  5825 ;;		_flushBuffer
  5826 ;; This function uses a non-reentrant model
  5827 ;;
  5828                           
  5829                           	psect	text21
  5830   001156                     __ptext21:
  5831                           	callstack 0
  5832   001156                     ___awdiv:
  5833                           	callstack 21
  5834   001156  0E00               	movlw	0
  5835   001158  6E0B               	movwf	___awdiv@sign^0,c
  5836   00115A  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  5837   00115C  EFB4  F008         	goto	u3710
  5838   001160  EFB2  F008         	goto	u3711
  5839   001164                     u3711:
  5840   001164  EFBA  F008         	goto	l3880
  5841   001168                     u3710:
  5842   001168  6C08               	negf	___awdiv@divisor^0,c
  5843   00116A  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  5844   00116C  B0D8               	btfsc	status,0,c
  5845   00116E  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  5846   001170  0E01               	movlw	1
  5847   001172  6E0B               	movwf	___awdiv@sign^0,c
  5848   001174                     l3880:
  5849   001174  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  5850   001176  EFC1  F008         	goto	u3720
  5851   00117A  EFBF  F008         	goto	u3721
  5852   00117E                     u3721:
  5853   00117E  EFC7  F008         	goto	l3886
  5854   001182                     u3720:
  5855   001182  6C06               	negf	___awdiv@dividend^0,c
  5856   001184  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  5857   001186  B0D8               	btfsc	status,0,c
  5858   001188  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  5859   00118A  0E01               	movlw	1
  5860   00118C  1A0B               	xorwf	___awdiv@sign^0,f,c
  5861   00118E                     l3886:
  5862   00118E  0E00               	movlw	0
  5863   001190  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  5864   001192  0E00               	movlw	0
  5865   001194  6E0C               	movwf	___awdiv@quotient^0,c
  5866   001196  5008               	movf	___awdiv@divisor^0,w,c
  5867   001198  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  5868   00119A  B4D8               	btfsc	status,2,c
  5869   00119C  EFD2  F008         	goto	u3731
  5870   0011A0  EFD4  F008         	goto	u3730
  5871   0011A4                     u3731:
  5872   0011A4  EFFC  F008         	goto	l3908
  5873   0011A8                     u3730:
  5874   0011A8  0E01               	movlw	1
  5875   0011AA  6E0A               	movwf	___awdiv@counter^0,c
  5876   0011AC  EFDC  F008         	goto	l3894
  5877   0011B0                     l3892:
  5878   0011B0  90D8               	bcf	status,0,c
  5879   0011B2  3608               	rlcf	___awdiv@divisor^0,f,c
  5880   0011B4  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  5881   0011B6  2A0A               	incf	___awdiv@counter^0,f,c
  5882   0011B8                     l3894:
  5883   0011B8  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  5884   0011BA  EFE1  F008         	goto	u3741
  5885   0011BE  EFE3  F008         	goto	u3740
  5886   0011C2                     u3741:
  5887   0011C2  EFD8  F008         	goto	l3892
  5888   0011C6                     u3740:
  5889   0011C6                     l3896:
  5890   0011C6  90D8               	bcf	status,0,c
  5891   0011C8  360C               	rlcf	___awdiv@quotient^0,f,c
  5892   0011CA  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  5893   0011CC  5008               	movf	___awdiv@divisor^0,w,c
  5894   0011CE  5C06               	subwf	___awdiv@dividend^0,w,c
  5895   0011D0  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5896   0011D2  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  5897   0011D4  A0D8               	btfss	status,0,c
  5898   0011D6  EFEF  F008         	goto	u3751
  5899   0011DA  EFF1  F008         	goto	u3750
  5900   0011DE                     u3751:
  5901   0011DE  EFF6  F008         	goto	l3904
  5902   0011E2                     u3750:
  5903   0011E2  5008               	movf	___awdiv@divisor^0,w,c
  5904   0011E4  5E06               	subwf	___awdiv@dividend^0,f,c
  5905   0011E6  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5906   0011E8  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  5907   0011EA  800C               	bsf	___awdiv@quotient^0,0,c
  5908   0011EC                     l3904:
  5909   0011EC  90D8               	bcf	status,0,c
  5910   0011EE  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  5911   0011F0  3208               	rrcf	___awdiv@divisor^0,f,c
  5912   0011F2  2E0A               	decfsz	___awdiv@counter^0,f,c
  5913   0011F4  EFE3  F008         	goto	l3896
  5914   0011F8                     l3908:
  5915   0011F8  500B               	movf	___awdiv@sign^0,w,c
  5916   0011FA  B4D8               	btfsc	status,2,c
  5917   0011FC  EF02  F009         	goto	u3761
  5918   001200  EF04  F009         	goto	u3760
  5919   001204                     u3761:
  5920   001204  EF08  F009         	goto	l3912
  5921   001208                     u3760:
  5922   001208  6C0C               	negf	___awdiv@quotient^0,c
  5923   00120A  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  5924   00120C  B0D8               	btfsc	status,0,c
  5925   00120E  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  5926   001210                     l3912:
  5927   001210  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5928   001214  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5929   001218  0012               	return		;funcret
  5930   00121A                     __end_of___awdiv:
  5931                           	callstack 0
  5932                           
  5933 ;; *************** function _SPI_Exchange8bit *****************
  5934 ;; Defined at:
  5935 ;;		line 77 in file "mcc_generated_files/spi.c"
  5936 ;; Parameters:    Size  Location     Type
  5937 ;;  data            1    wreg     unsigned char 
  5938 ;; Auto vars:     Size  Location     Type
  5939 ;;  data            1    5[COMRAM] unsigned char 
  5940 ;; Return value:  Size  Location     Type
  5941 ;;                  1    wreg      unsigned char 
  5942 ;; Registers used:
  5943 ;;		wreg, status,2
  5944 ;; Tracked objects:
  5945 ;;		On entry : 0/0
  5946 ;;		On exit  : 0/0
  5947 ;;		Unchanged: 0/0
  5948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5953 ;;Total ram usage:        1 bytes
  5954 ;; Hardware stack levels used: 1
  5955 ;; Hardware stack levels required when called: 4
  5956 ;; This function calls:
  5957 ;;		Nothing
  5958 ;; This function is called by:
  5959 ;;		_max_write
  5960 ;;		_max7219_cmd
  5961 ;;		_SPI_Exchange8bitBuffer
  5962 ;; This function uses a non-reentrant model
  5963 ;;
  5964                           
  5965                           	psect	text22
  5966   001C00                     __ptext22:
  5967                           	callstack 0
  5968   001C00                     _SPI_Exchange8bit:
  5969                           	callstack 21
  5970                           
  5971                           ;incstack = 0
  5972                           ;SPI_Exchange8bit@data stored from wreg
  5973   001C00  6E06               	movwf	SPI_Exchange8bit@data^0,c
  5974   001C02                     
  5975                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  5976   001C02  9EC6               	bcf	198,7,c	;volatile
  5977   001C04                     
  5978                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  5979   001C04  C006  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  5980   001C08                     l18:
  5981                           
  5982                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  5983   001C08  A0C7               	btfss	199,0,c	;volatile
  5984   001C0A  EF09  F00E         	goto	u3701
  5985   001C0E  EF0B  F00E         	goto	u3700
  5986   001C12                     u3701:
  5987   001C12  EF04  F00E         	goto	l18
  5988   001C16                     u3700:
  5989   001C16                     
  5990                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  5991   001C16  50C9               	movf	201,w,c	;volatile
  5992   001C18  0012               	return		;funcret
  5993   001C1A                     __end_of_SPI_Exchange8bit:
  5994                           	callstack 0
  5995                           
  5996 ;; *************** function ___awmod *****************
  5997 ;; Defined at:
  5998 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5999 ;; Parameters:    Size  Location     Type
  6000 ;;  dividend        2    5[COMRAM] int 
  6001 ;;  divisor         2    7[COMRAM] int 
  6002 ;; Auto vars:     Size  Location     Type
  6003 ;;  sign            1   10[COMRAM] unsigned char 
  6004 ;;  counter         1    9[COMRAM] unsigned char 
  6005 ;; Return value:  Size  Location     Type
  6006 ;;                  2    5[COMRAM] int 
  6007 ;; Registers used:
  6008 ;;		wreg, status,2, status,0
  6009 ;; Tracked objects:
  6010 ;;		On entry : 0/0
  6011 ;;		On exit  : 0/0
  6012 ;;		Unchanged: 0/0
  6013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6014 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6015 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6016 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6017 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6018 ;;Total ram usage:        6 bytes
  6019 ;; Hardware stack levels used: 1
  6020 ;; Hardware stack levels required when called: 4
  6021 ;; This function calls:
  6022 ;;		Nothing
  6023 ;; This function is called by:
  6024 ;;		_displayTime
  6025 ;;		_displayAlarmTime
  6026 ;;		_checkButtons
  6027 ;; This function uses a non-reentrant model
  6028 ;;
  6029                           
  6030                           	psect	text23
  6031   0015B6                     __ptext23:
  6032                           	callstack 0
  6033   0015B6                     ___awmod:
  6034                           	callstack 25
  6035   0015B6  0E00               	movlw	0
  6036   0015B8  6E0B               	movwf	___awmod@sign^0,c
  6037   0015BA  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  6038   0015BC  EFE4  F00A         	goto	u4620
  6039   0015C0  EFE2  F00A         	goto	u4621
  6040   0015C4                     u4621:
  6041   0015C4  EFEA  F00A         	goto	l4470
  6042   0015C8                     u4620:
  6043   0015C8  6C06               	negf	___awmod@dividend^0,c
  6044   0015CA  1E07               	comf	(___awmod@dividend+1)^0,f,c
  6045   0015CC  B0D8               	btfsc	status,0,c
  6046   0015CE  2A07               	incf	(___awmod@dividend+1)^0,f,c
  6047   0015D0  0E01               	movlw	1
  6048   0015D2  6E0B               	movwf	___awmod@sign^0,c
  6049   0015D4                     l4470:
  6050   0015D4  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  6051   0015D6  EFF1  F00A         	goto	u4630
  6052   0015DA  EFEF  F00A         	goto	u4631
  6053   0015DE                     u4631:
  6054   0015DE  EFF5  F00A         	goto	l4474
  6055   0015E2                     u4630:
  6056   0015E2  6C08               	negf	___awmod@divisor^0,c
  6057   0015E4  1E09               	comf	(___awmod@divisor+1)^0,f,c
  6058   0015E6  B0D8               	btfsc	status,0,c
  6059   0015E8  2A09               	incf	(___awmod@divisor+1)^0,f,c
  6060   0015EA                     l4474:
  6061   0015EA  5008               	movf	___awmod@divisor^0,w,c
  6062   0015EC  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  6063   0015EE  B4D8               	btfsc	status,2,c
  6064   0015F0  EFFC  F00A         	goto	u4641
  6065   0015F4  EFFE  F00A         	goto	u4640
  6066   0015F8                     u4641:
  6067   0015F8  EF22  F00B         	goto	l4490
  6068   0015FC                     u4640:
  6069   0015FC  0E01               	movlw	1
  6070   0015FE  6E0A               	movwf	___awmod@counter^0,c
  6071   001600  EF06  F00B         	goto	l4480
  6072   001604                     l4478:
  6073   001604  90D8               	bcf	status,0,c
  6074   001606  3608               	rlcf	___awmod@divisor^0,f,c
  6075   001608  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  6076   00160A  2A0A               	incf	___awmod@counter^0,f,c
  6077   00160C                     l4480:
  6078   00160C  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  6079   00160E  EF0B  F00B         	goto	u4651
  6080   001612  EF0D  F00B         	goto	u4650
  6081   001616                     u4651:
  6082   001616  EF02  F00B         	goto	l4478
  6083   00161A                     u4650:
  6084   00161A                     l4482:
  6085   00161A  5008               	movf	___awmod@divisor^0,w,c
  6086   00161C  5C06               	subwf	___awmod@dividend^0,w,c
  6087   00161E  5009               	movf	(___awmod@divisor+1)^0,w,c
  6088   001620  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  6089   001622  A0D8               	btfss	status,0,c
  6090   001624  EF16  F00B         	goto	u4661
  6091   001628  EF18  F00B         	goto	u4660
  6092   00162C                     u4661:
  6093   00162C  EF1C  F00B         	goto	l4486
  6094   001630                     u4660:
  6095   001630  5008               	movf	___awmod@divisor^0,w,c
  6096   001632  5E06               	subwf	___awmod@dividend^0,f,c
  6097   001634  5009               	movf	(___awmod@divisor+1)^0,w,c
  6098   001636  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  6099   001638                     l4486:
  6100   001638  90D8               	bcf	status,0,c
  6101   00163A  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  6102   00163C  3208               	rrcf	___awmod@divisor^0,f,c
  6103   00163E  2E0A               	decfsz	___awmod@counter^0,f,c
  6104   001640  EF0D  F00B         	goto	l4482
  6105   001644                     l4490:
  6106   001644  500B               	movf	___awmod@sign^0,w,c
  6107   001646  B4D8               	btfsc	status,2,c
  6108   001648  EF28  F00B         	goto	u4671
  6109   00164C  EF2A  F00B         	goto	u4670
  6110   001650                     u4671:
  6111   001650  EF2E  F00B         	goto	l4494
  6112   001654                     u4670:
  6113   001654  6C06               	negf	___awmod@dividend^0,c
  6114   001656  1E07               	comf	(___awmod@dividend+1)^0,f,c
  6115   001658  B0D8               	btfsc	status,0,c
  6116   00165A  2A07               	incf	(___awmod@dividend+1)^0,f,c
  6117   00165C                     l4494:
  6118   00165C  C006  F006         	movff	___awmod@dividend,?___awmod
  6119   001660  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  6120   001664  0012               	return		;funcret
  6121   001666                     __end_of___awmod:
  6122                           	callstack 0
  6123                           
  6124 ;; *************** function _clearAlarm *****************
  6125 ;; Defined at:
  6126 ;;		line 216 in file "main.c"
  6127 ;; Parameters:    Size  Location     Type
  6128 ;;		None
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;		None
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  1    wreg      void 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6144 ;;Total ram usage:        0 bytes
  6145 ;; Hardware stack levels used: 1
  6146 ;; Hardware stack levels required when called: 4
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_triggerAlarm
  6151 ;;		_checkButtons
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text24
  6156   001C54                     __ptext24:
  6157                           	callstack 0
  6158   001C54                     _clearAlarm:
  6159                           	callstack 24
  6160   001C54                     
  6161                           ;main.c: 218:     alarmTriggered = 0;
  6162   001C54  0E00               	movlw	0
  6163   001C56  0100               	movlb	0	; () banked
  6164   001C58  6FA9               	movwf	_alarmTriggered& (0+255),b
  6165                           
  6166                           ;main.c: 219:     alarmSet = 0;
  6167   001C5A  0E00               	movlw	0
  6168   001C5C  6FAB               	movwf	_alarmSet& (0+255),b
  6169   001C5E                     
  6170                           ; BSR set to: 0
  6171   001C5E  0012               	return		;funcret
  6172   001C60                     __end_of_clearAlarm:
  6173                           	callstack 0
  6174                           
  6175 ;; *************** function _TMR1_StartTimer *****************
  6176 ;; Defined at:
  6177 ;;		line 96 in file "mcc_generated_files/tmr1.c"
  6178 ;; Parameters:    Size  Location     Type
  6179 ;;		None
  6180 ;; Auto vars:     Size  Location     Type
  6181 ;;		None
  6182 ;; Return value:  Size  Location     Type
  6183 ;;                  1    wreg      void 
  6184 ;; Registers used:
  6185 ;;		None
  6186 ;; Tracked objects:
  6187 ;;		On entry : 0/0
  6188 ;;		On exit  : 0/0
  6189 ;;		Unchanged: 0/0
  6190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6195 ;;Total ram usage:        0 bytes
  6196 ;; Hardware stack levels used: 1
  6197 ;; Hardware stack levels required when called: 4
  6198 ;; This function calls:
  6199 ;;		Nothing
  6200 ;; This function is called by:
  6201 ;;		_main
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205                           	psect	text25
  6206   001C8E                     __ptext25:
  6207                           	callstack 0
  6208   001C8E                     _TMR1_StartTimer:
  6209                           	callstack 26
  6210   001C8E                     
  6211                           ;mcc_generated_files/tmr1.c: 99:     T1CONbits.TMR1ON = 1;
  6212   001C8E  80CD               	bsf	205,0,c	;volatile
  6213   001C90  0012               	return		;funcret
  6214   001C92                     __end_of_TMR1_StartTimer:
  6215                           	callstack 0
  6216                           
  6217 ;; *************** function _SYSTEM_Initialize *****************
  6218 ;; Defined at:
  6219 ;;		line 108 in file "mcc_generated_files/mcc.c"
  6220 ;; Parameters:    Size  Location     Type
  6221 ;;		None
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0, cstack
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;Total ram usage:        0 bytes
  6238 ;; Hardware stack levels used: 1
  6239 ;; Hardware stack levels required when called: 8
  6240 ;; This function calls:
  6241 ;;		_EUSART_Initialize
  6242 ;;		_INTERRUPT_Initialize
  6243 ;;		_OSCILLATOR_Initialize
  6244 ;;		_PIN_MANAGER_Initialize
  6245 ;;		_SPI_Initialize
  6246 ;;		_TMR1_Initialize
  6247 ;; This function is called by:
  6248 ;;		_main
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text26
  6253   001C1A                     __ptext26:
  6254                           	callstack 0
  6255   001C1A                     _SYSTEM_Initialize:
  6256                           	callstack 22
  6257   001C1A                     
  6258                           ;mcc_generated_files/mcc.c: 110:     INTERRUPT_Initialize();
  6259   001C1A  EC49  F00E         	call	_INTERRUPT_Initialize	;wreg free
  6260   001C1E                     
  6261                           ;mcc_generated_files/mcc.c: 111:     PIN_MANAGER_Initialize();
  6262   001C1E  ECEF  F00D         	call	_PIN_MANAGER_Initialize	;wreg free
  6263   001C22                     
  6264                           ;mcc_generated_files/mcc.c: 112:     OSCILLATOR_Initialize();
  6265   001C22  EC35  F00E         	call	_OSCILLATOR_Initialize	;wreg free
  6266   001C26                     
  6267                           ;mcc_generated_files/mcc.c: 113:     SPI_Initialize();
  6268   001C26  EC23  F00E         	call	_SPI_Initialize	;wreg free
  6269   001C2A                     
  6270                           ;mcc_generated_files/mcc.c: 114:     TMR1_Initialize();
  6271   001C2A  EC35  F00C         	call	_TMR1_Initialize	;wreg free
  6272   001C2E                     
  6273                           ;mcc_generated_files/mcc.c: 115:     EUSART_Initialize();
  6274   001C2E  ECBB  F00C         	call	_EUSART_Initialize	;wreg free
  6275   001C32  0012               	return		;funcret
  6276   001C34                     __end_of_SYSTEM_Initialize:
  6277                           	callstack 0
  6278                           
  6279 ;; *************** function _TMR1_Initialize *****************
  6280 ;; Defined at:
  6281 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6282 ;; Parameters:    Size  Location     Type
  6283 ;;		None
  6284 ;; Auto vars:     Size  Location     Type
  6285 ;;  tmr1Offset      1   72[COMRAM] unsigned char 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  1    wreg      void 
  6288 ;; Registers used:
  6289 ;;		wreg, status,2, status,0, cstack
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;Total ram usage:        3 bytes
  6300 ;; Hardware stack levels used: 1
  6301 ;; Hardware stack levels required when called: 7
  6302 ;; This function calls:
  6303 ;;		_TMR1_SetInterruptHandler
  6304 ;;		___fltol
  6305 ;;		_roundf
  6306 ;; This function is called by:
  6307 ;;		_SYSTEM_Initialize
  6308 ;; This function uses a non-reentrant model
  6309 ;;
  6310                           
  6311                           	psect	text27
  6312   00186A                     __ptext27:
  6313                           	callstack 0
  6314   00186A                     _TMR1_Initialize:
  6315                           	callstack 22
  6316   00186A                     
  6317                           ;mcc_generated_files/tmr1.c: 70:   TMR1H = 0x80;
  6318   00186A  0E80               	movlw	128
  6319   00186C  6ECF               	movwf	207,c	;volatile
  6320                           
  6321                           ;mcc_generated_files/tmr1.c: 73:   TMR1L = 0x00;
  6322   00186E  0E00               	movlw	0
  6323   001870  6ECE               	movwf	206,c	;volatile
  6324   001872                     
  6325                           ;mcc_generated_files/tmr1.c: 76:     timer1ReloadVal=(TMR1H << 8) | TMR1L;
  6326   001872  50CE               	movf	206,w,c	;volatile
  6327   001874  CFCF F047          	movff	4047,??_TMR1_Initialize	;volatile
  6328   001878  6A48               	clrf	(??_TMR1_Initialize+1)^0,c
  6329   00187A  C047  F048         	movff	??_TMR1_Initialize,??_TMR1_Initialize+1
  6330   00187E  6A47               	clrf	??_TMR1_Initialize^0,c
  6331   001880  1047               	iorwf	??_TMR1_Initialize^0,w,c
  6332   001882  6E52               	movwf	_timer1ReloadVal^0,c	;volatile
  6333   001884  5048               	movf	(??_TMR1_Initialize+1)^0,w,c
  6334   001886  6E53               	movwf	(_timer1ReloadVal+1)^0,c	;volatile
  6335   001888                     
  6336                           ;mcc_generated_files/tmr1.c: 79:     uint8_t tmr1Offset = roundf((0.000008+(20.0/(800000
      +                          0/4)))*32768);
  6337   001888  0EB5               	movlw	181
  6338   00188A  6E1E               	movwf	roundf@x^0,c
  6339   00188C  0EFE               	movlw	254
  6340   00188E  6E1F               	movwf	(roundf@x+1)^0,c
  6341   001890  0E16               	movlw	22
  6342   001892  6E20               	movwf	(roundf@x+2)^0,c
  6343   001894  0E3F               	movlw	63
  6344   001896  6E21               	movwf	(roundf@x+3)^0,c
  6345   001898  ECB7  F002         	call	_roundf	;wreg free
  6346   00189C  C01E  F03D         	movff	?_roundf,___fltol@f1
  6347   0018A0  C01F  F03E         	movff	?_roundf+1,___fltol@f1+1
  6348   0018A4  C020  F03F         	movff	?_roundf+2,___fltol@f1+2
  6349   0018A8  C021  F040         	movff	?_roundf+3,___fltol@f1+3
  6350   0018AC  ECCE  F006         	call	___fltol	;wreg free
  6351   0018B0  503D               	movf	?___fltol^0,w,c
  6352   0018B2  6E49               	movwf	TMR1_Initialize@tmr1Offset^0,c
  6353   0018B4                     
  6354                           ;mcc_generated_files/tmr1.c: 80:     timer1ReloadVal += tmr1Offset;
  6355   0018B4  5049               	movf	TMR1_Initialize@tmr1Offset^0,w,c
  6356   0018B6  2652               	addwf	_timer1ReloadVal^0,f,c	;volatile
  6357   0018B8  0E00               	movlw	0
  6358   0018BA  2253               	addwfc	(_timer1ReloadVal+1)^0,f,c	;volatile
  6359   0018BC                     
  6360                           ;mcc_generated_files/tmr1.c: 84:     PIR1bits.TMR1IF = 0;
  6361   0018BC  909E               	bcf	158,0,c	;volatile
  6362   0018BE                     
  6363                           ;mcc_generated_files/tmr1.c: 87:     PIE1bits.TMR1IE = 1;
  6364   0018BE  809D               	bsf	157,0,c	;volatile
  6365   0018C0                     
  6366                           ;mcc_generated_files/tmr1.c: 90:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6367   0018C0  0E88               	movlw	low _TMR1_DefaultInterruptHandler
  6368   0018C2  6E06               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  6369   0018C4  0E1C               	movlw	high _TMR1_DefaultInterruptHandler
  6370   0018C6  6E07               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  6371   0018C8  EC30  F00E         	call	_TMR1_SetInterruptHandler	;wreg free
  6372                           
  6373                           ;mcc_generated_files/tmr1.c: 93:     T1CON = 0x0E;
  6374   0018CC  0E0E               	movlw	14
  6375   0018CE  6ECD               	movwf	205,c	;volatile
  6376   0018D0  0012               	return		;funcret
  6377   0018D2                     __end_of_TMR1_Initialize:
  6378                           	callstack 0
  6379                           
  6380 ;; *************** function _roundf *****************
  6381 ;; Defined at:
  6382 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\roundf.c"
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;  x               4   29[COMRAM] float 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  y               4   56[COMRAM] float 
  6387 ;;  u               4   47[COMRAM] struct .
  6388 ;;  z               4   41[COMRAM] float 
  6389 ;;  e               2   45[COMRAM] int 
  6390 ;;  sign            1   55[COMRAM] _Bool 
  6391 ;; Return value:  Size  Location     Type
  6392 ;;                  4   29[COMRAM] float 
  6393 ;; Registers used:
  6394 ;;		wreg, status,2, status,0, cstack
  6395 ;; Tracked objects:
  6396 ;;		On entry : 0/0
  6397 ;;		On exit  : 0/0
  6398 ;;		Unchanged: 0/0
  6399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6400 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Totals:        31       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;Total ram usage:       31 bytes
  6405 ;; Hardware stack levels used: 1
  6406 ;; Hardware stack levels required when called: 6
  6407 ;; This function calls:
  6408 ;;		___fladd
  6409 ;;		___flge
  6410 ;;		___flneg
  6411 ;;		___flsub
  6412 ;; This function is called by:
  6413 ;;		_TMR1_Initialize
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text28
  6418   00056E                     __ptext28:
  6419                           	callstack 0
  6420   00056E                     _roundf:
  6421                           	callstack 22
  6422   00056E  C09A  F030         	movff	roundf@F522,roundf@u
  6423   000572  C09B  F031         	movff	roundf@F522+1,roundf@u+1
  6424   000576  C09C  F032         	movff	roundf@F522+2,roundf@u+2
  6425   00057A  C09D  F033         	movff	roundf@F522+3,roundf@u+3
  6426   00057E  C01E  F030         	movff	roundf@x,roundf@u
  6427   000582  C01F  F031         	movff	roundf@x+1,roundf@u+1
  6428   000586  C020  F032         	movff	roundf@x+2,roundf@u+2
  6429   00058A  C021  F033         	movff	roundf@x+3,roundf@u+3
  6430   00058E  C030  F022         	movff	roundf@u,??_roundf
  6431   000592  C031  F023         	movff	roundf@u+1,??_roundf+1
  6432   000596  C032  F024         	movff	roundf@u+2,??_roundf+2
  6433   00059A  C033  F025         	movff	roundf@u+3,??_roundf+3
  6434   00059E  0E18               	movlw	24
  6435   0005A0  EFD7  F002         	goto	u4410
  6436   0005A4                     u4415:
  6437   0005A4  90D8               	bcf	status,0,c
  6438   0005A6  3225               	rrcf	(??_roundf+3)^0,f,c
  6439   0005A8  3224               	rrcf	(??_roundf+2)^0,f,c
  6440   0005AA  3223               	rrcf	(??_roundf+1)^0,f,c
  6441   0005AC  3222               	rrcf	??_roundf^0,f,c
  6442   0005AE                     u4410:
  6443   0005AE  2EE8               	decfsz	wreg,f,c
  6444   0005B0  EFD2  F002         	goto	u4415
  6445   0005B4  5022               	movf	??_roundf^0,w,c
  6446   0005B6  6E2E               	movwf	roundf@e^0,c
  6447   0005B8  6A2F               	clrf	(roundf@e+1)^0,c
  6448   0005BA  BE2F               	btfsc	(roundf@e+1)^0,7,c
  6449   0005BC  EFE9  F002         	goto	u4421
  6450   0005C0  502F               	movf	(roundf@e+1)^0,w,c
  6451   0005C2  E109               	bnz	u4420
  6452   0005C4  0E96               	movlw	150
  6453   0005C6  5C2E               	subwf	roundf@e^0,w,c
  6454   0005C8  A0D8               	btfss	status,0,c
  6455   0005CA  EFE9  F002         	goto	u4421
  6456   0005CE  EFEB  F002         	goto	u4420
  6457   0005D2                     u4421:
  6458   0005D2  EFF5  F002         	goto	l4354
  6459   0005D6                     u4420:
  6460   0005D6  C01E  F01E         	movff	roundf@x,?_roundf
  6461   0005DA  C01F  F01F         	movff	roundf@x+1,?_roundf+1
  6462   0005DE  C020  F020         	movff	roundf@x+2,?_roundf+2
  6463   0005E2  C021  F021         	movff	roundf@x+3,?_roundf+3
  6464   0005E6  EF21  F004         	goto	l1298
  6465   0005EA                     l4354:
  6466   0005EA  BE33               	btfsc	(roundf@u+3)^0,7,c
  6467   0005EC  EFFA  F002         	goto	u4431
  6468   0005F0  EFFD  F002         	goto	u4430
  6469   0005F4                     u4431:
  6470   0005F4  0E01               	movlw	1
  6471   0005F6  EFFE  F002         	goto	u4440
  6472   0005FA                     u4430:
  6473   0005FA  0E00               	movlw	0
  6474   0005FC                     u4440:
  6475   0005FC  6E38               	movwf	roundf@sign^0,c
  6476   0005FE  5038               	movf	roundf@sign^0,w,c
  6477   000600  B4D8               	btfsc	status,2,c
  6478   000602  EF05  F003         	goto	u4451
  6479   000606  EF07  F003         	goto	u4450
  6480   00060A                     u4451:
  6481   00060A  EF19  F003         	goto	l4358
  6482   00060E                     u4450:
  6483   00060E  C01E  F006         	movff	roundf@x,___flneg@f1
  6484   000612  C01F  F007         	movff	roundf@x+1,___flneg@f1+1
  6485   000616  C020  F008         	movff	roundf@x+2,___flneg@f1+2
  6486   00061A  C021  F009         	movff	roundf@x+3,___flneg@f1+3
  6487   00061E  EC44  F00D         	call	___flneg	;wreg free
  6488   000622  C006  F01E         	movff	?___flneg,roundf@x
  6489   000626  C007  F01F         	movff	?___flneg+1,roundf@x+1
  6490   00062A  C008  F020         	movff	?___flneg+2,roundf@x+2
  6491   00062E  C009  F021         	movff	?___flneg+3,roundf@x+3
  6492   000632                     l4358:
  6493   000632  BE2F               	btfsc	(roundf@e+1)^0,7,c
  6494   000634  EF27  F003         	goto	u4460
  6495   000638  502F               	movf	(roundf@e+1)^0,w,c
  6496   00063A  E107               	bnz	u4461
  6497   00063C  0E7E               	movlw	126
  6498   00063E  5C2E               	subwf	roundf@e^0,w,c
  6499   000640  B0D8               	btfsc	status,0,c
  6500   000642  EF25  F003         	goto	u4461
  6501   000646  EF27  F003         	goto	u4460
  6502   00064A                     u4461:
  6503   00064A  EF31  F003         	goto	l4364
  6504   00064E                     u4460:
  6505   00064E  0E00               	movlw	0
  6506   000650  6E1E               	movwf	?_roundf^0,c
  6507   000652  0E00               	movlw	0
  6508   000654  6E1F               	movwf	(?_roundf+1)^0,c
  6509   000656  0E00               	movlw	0
  6510   000658  6E20               	movwf	(?_roundf+2)^0,c
  6511   00065A  0E00               	movlw	0
  6512   00065C  6E21               	movwf	(?_roundf+3)^0,c
  6513   00065E  EF21  F004         	goto	l1298
  6514   000662                     l4364:
  6515   000662  0E00               	movlw	0
  6516   000664  6E0A               	movwf	___fladd@a^0,c
  6517   000666  0E00               	movlw	0
  6518   000668  6E0B               	movwf	(___fladd@a+1)^0,c
  6519   00066A  0E00               	movlw	0
  6520   00066C  6E0C               	movwf	(___fladd@a+2)^0,c
  6521   00066E  0E4B               	movlw	75
  6522   000670  6E0D               	movwf	(___fladd@a+3)^0,c
  6523   000672  C01E  F006         	movff	roundf@x,___fladd@b
  6524   000676  C01F  F007         	movff	roundf@x+1,___fladd@b+1
  6525   00067A  C020  F008         	movff	roundf@x+2,___fladd@b+2
  6526   00067E  C021  F009         	movff	roundf@x+3,___fladd@b+3
  6527   000682  EC57  F000         	call	___fladd	;wreg free
  6528   000686  C006  F034         	movff	?___fladd,_roundf$2190
  6529   00068A  C007  F035         	movff	?___fladd+1,_roundf$2190+1
  6530   00068E  C008  F036         	movff	?___fladd+2,_roundf$2190+2
  6531   000692  C009  F037         	movff	?___fladd+3,_roundf$2190+3
  6532   000696  0E00               	movlw	0
  6533   000698  6E0A               	movwf	___fladd@a^0,c
  6534   00069A  0E00               	movlw	0
  6535   00069C  6E0B               	movwf	(___fladd@a+1)^0,c
  6536   00069E  0E00               	movlw	0
  6537   0006A0  6E0C               	movwf	(___fladd@a+2)^0,c
  6538   0006A2  0ECB               	movlw	203
  6539   0006A4  6E0D               	movwf	(___fladd@a+3)^0,c
  6540   0006A6  C034  F006         	movff	_roundf$2190,___fladd@b
  6541   0006AA  C035  F007         	movff	_roundf$2190+1,___fladd@b+1
  6542   0006AE  C036  F008         	movff	_roundf$2190+2,___fladd@b+2
  6543   0006B2  C037  F009         	movff	_roundf$2190+3,___fladd@b+3
  6544   0006B6  EC57  F000         	call	___fladd	;wreg free
  6545   0006BA  C006  F026         	movff	?___fladd,_roundf$2191
  6546   0006BE  C007  F027         	movff	?___fladd+1,_roundf$2191+1
  6547   0006C2  C008  F028         	movff	?___fladd+2,_roundf$2191+2
  6548   0006C6  C009  F029         	movff	?___fladd+3,_roundf$2191+3
  6549   0006CA  C026  F016         	movff	_roundf$2191,___flsub@b
  6550   0006CE  C027  F017         	movff	_roundf$2191+1,___flsub@b+1
  6551   0006D2  C028  F018         	movff	_roundf$2191+2,___flsub@b+2
  6552   0006D6  C029  F019         	movff	_roundf$2191+3,___flsub@b+3
  6553   0006DA  C01E  F01A         	movff	roundf@x,___flsub@a
  6554   0006DE  C01F  F01B         	movff	roundf@x+1,___flsub@a+1
  6555   0006E2  C020  F01C         	movff	roundf@x+2,___flsub@a+2
  6556   0006E6  C021  F01D         	movff	roundf@x+3,___flsub@a+3
  6557   0006EA  ECE2  F00C         	call	___flsub	;wreg free
  6558   0006EE  C016  F039         	movff	?___flsub,roundf@y
  6559   0006F2  C017  F03A         	movff	?___flsub+1,roundf@y+1
  6560   0006F6  C018  F03B         	movff	?___flsub+2,roundf@y+2
  6561   0006FA  C019  F03C         	movff	?___flsub+3,roundf@y+3
  6562   0006FE  0E00               	movlw	0
  6563   000700  6E2A               	movwf	roundf@z^0,c
  6564   000702  0E00               	movlw	0
  6565   000704  6E2B               	movwf	(roundf@z+1)^0,c
  6566   000706  0E00               	movlw	0
  6567   000708  6E2C               	movwf	(roundf@z+2)^0,c
  6568   00070A  0E00               	movlw	0
  6569   00070C  6E2D               	movwf	(roundf@z+3)^0,c
  6570   00070E  0E00               	movlw	0
  6571   000710  6E06               	movwf	___flge@ff1^0,c
  6572   000712  0E00               	movlw	0
  6573   000714  6E07               	movwf	(___flge@ff1+1)^0,c
  6574   000716  0E00               	movlw	0
  6575   000718  6E08               	movwf	(___flge@ff1+2)^0,c
  6576   00071A  0E3F               	movlw	63
  6577   00071C  6E09               	movwf	(___flge@ff1+3)^0,c
  6578   00071E  C039  F00A         	movff	roundf@y,___flge@ff2
  6579   000722  C03A  F00B         	movff	roundf@y+1,___flge@ff2+1
  6580   000726  C03B  F00C         	movff	roundf@y+2,___flge@ff2+2
  6581   00072A  C03C  F00D         	movff	roundf@y+3,___flge@ff2+3
  6582   00072E  EC51  F007         	call	___flge	;wreg free
  6583   000732  B0D8               	btfsc	status,0,c
  6584   000734  EF9E  F003         	goto	u4471
  6585   000738  EFA0  F003         	goto	u4470
  6586   00073C                     u4471:
  6587   00073C  EFAA  F003         	goto	l4372
  6588   000740                     u4470:
  6589   000740  0E00               	movlw	0
  6590   000742  6E2A               	movwf	roundf@z^0,c
  6591   000744  0E00               	movlw	0
  6592   000746  6E2B               	movwf	(roundf@z+1)^0,c
  6593   000748  0E80               	movlw	128
  6594   00074A  6E2C               	movwf	(roundf@z+2)^0,c
  6595   00074C  0EBF               	movlw	191
  6596   00074E  6E2D               	movwf	(roundf@z+3)^0,c
  6597   000750  EFCB  F003         	goto	l4376
  6598   000754                     l4372:
  6599   000754  0E00               	movlw	0
  6600   000756  6E06               	movwf	___flge@ff1^0,c
  6601   000758  0E00               	movlw	0
  6602   00075A  6E07               	movwf	(___flge@ff1+1)^0,c
  6603   00075C  0E00               	movlw	0
  6604   00075E  6E08               	movwf	(___flge@ff1+2)^0,c
  6605   000760  0EBF               	movlw	191
  6606   000762  6E09               	movwf	(___flge@ff1+3)^0,c
  6607   000764  C039  F00A         	movff	roundf@y,___flge@ff2
  6608   000768  C03A  F00B         	movff	roundf@y+1,___flge@ff2+1
  6609   00076C  C03B  F00C         	movff	roundf@y+2,___flge@ff2+2
  6610   000770  C03C  F00D         	movff	roundf@y+3,___flge@ff2+3
  6611   000774  EC51  F007         	call	___flge	;wreg free
  6612   000778  A0D8               	btfss	status,0,c
  6613   00077A  EFC1  F003         	goto	u4481
  6614   00077E  EFC3  F003         	goto	u4480
  6615   000782                     u4481:
  6616   000782  EFCB  F003         	goto	l4376
  6617   000786                     u4480:
  6618   000786  0E00               	movlw	0
  6619   000788  6E2A               	movwf	roundf@z^0,c
  6620   00078A  0E00               	movlw	0
  6621   00078C  6E2B               	movwf	(roundf@z+1)^0,c
  6622   00078E  0E80               	movlw	128
  6623   000790  6E2C               	movwf	(roundf@z+2)^0,c
  6624   000792  0E3F               	movlw	63
  6625   000794  6E2D               	movwf	(roundf@z+3)^0,c
  6626   000796                     l4376:
  6627   000796  C01E  F00A         	movff	roundf@x,___fladd@a
  6628   00079A  C01F  F00B         	movff	roundf@x+1,___fladd@a+1
  6629   00079E  C020  F00C         	movff	roundf@x+2,___fladd@a+2
  6630   0007A2  C021  F00D         	movff	roundf@x+3,___fladd@a+3
  6631   0007A6  C039  F006         	movff	roundf@y,___fladd@b
  6632   0007AA  C03A  F007         	movff	roundf@y+1,___fladd@b+1
  6633   0007AE  C03B  F008         	movff	roundf@y+2,___fladd@b+2
  6634   0007B2  C03C  F009         	movff	roundf@y+3,___fladd@b+3
  6635   0007B6  EC57  F000         	call	___fladd	;wreg free
  6636   0007BA  C006  F034         	movff	?___fladd,_roundf$2190
  6637   0007BE  C007  F035         	movff	?___fladd+1,_roundf$2190+1
  6638   0007C2  C008  F036         	movff	?___fladd+2,_roundf$2190+2
  6639   0007C6  C009  F037         	movff	?___fladd+3,_roundf$2190+3
  6640   0007CA  C034  F006         	movff	_roundf$2190,___fladd@b
  6641   0007CE  C035  F007         	movff	_roundf$2190+1,___fladd@b+1
  6642   0007D2  C036  F008         	movff	_roundf$2190+2,___fladd@b+2
  6643   0007D6  C037  F009         	movff	_roundf$2190+3,___fladd@b+3
  6644   0007DA  C02A  F00A         	movff	roundf@z,___fladd@a
  6645   0007DE  C02B  F00B         	movff	roundf@z+1,___fladd@a+1
  6646   0007E2  C02C  F00C         	movff	roundf@z+2,___fladd@a+2
  6647   0007E6  C02D  F00D         	movff	roundf@z+3,___fladd@a+3
  6648   0007EA  EC57  F000         	call	___fladd	;wreg free
  6649   0007EE  C006  F039         	movff	?___fladd,roundf@y
  6650   0007F2  C007  F03A         	movff	?___fladd+1,roundf@y+1
  6651   0007F6  C008  F03B         	movff	?___fladd+2,roundf@y+2
  6652   0007FA  C009  F03C         	movff	?___fladd+3,roundf@y+3
  6653   0007FE  5038               	movf	roundf@sign^0,w,c
  6654   000800  B4D8               	btfsc	status,2,c
  6655   000802  EF05  F004         	goto	u4491
  6656   000806  EF07  F004         	goto	u4490
  6657   00080A                     u4491:
  6658   00080A  EF19  F004         	goto	l4382
  6659   00080E                     u4490:
  6660   00080E  C039  F006         	movff	roundf@y,___flneg@f1
  6661   000812  C03A  F007         	movff	roundf@y+1,___flneg@f1+1
  6662   000816  C03B  F008         	movff	roundf@y+2,___flneg@f1+2
  6663   00081A  C03C  F009         	movff	roundf@y+3,___flneg@f1+3
  6664   00081E  EC44  F00D         	call	___flneg	;wreg free
  6665   000822  C006  F039         	movff	?___flneg,roundf@y
  6666   000826  C007  F03A         	movff	?___flneg+1,roundf@y+1
  6667   00082A  C008  F03B         	movff	?___flneg+2,roundf@y+2
  6668   00082E  C009  F03C         	movff	?___flneg+3,roundf@y+3
  6669   000832                     l4382:
  6670   000832  C039  F01E         	movff	roundf@y,?_roundf
  6671   000836  C03A  F01F         	movff	roundf@y+1,?_roundf+1
  6672   00083A  C03B  F020         	movff	roundf@y+2,?_roundf+2
  6673   00083E  C03C  F021         	movff	roundf@y+3,?_roundf+3
  6674   000842                     l1298:
  6675   000842  0012               	return		;funcret
  6676   000844                     __end_of_roundf:
  6677                           	callstack 0
  6678                           
  6679 ;; *************** function ___flsub *****************
  6680 ;; Defined at:
  6681 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  6682 ;; Parameters:    Size  Location     Type
  6683 ;;  b               4   21[COMRAM] float 
  6684 ;;  a               4   25[COMRAM] float 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;		None
  6687 ;; Return value:  Size  Location     Type
  6688 ;;                  4   21[COMRAM] float 
  6689 ;; Registers used:
  6690 ;;		wreg, status,2, status,0, cstack
  6691 ;; Tracked objects:
  6692 ;;		On entry : 0/0
  6693 ;;		On exit  : 0/0
  6694 ;;		Unchanged: 0/0
  6695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6696 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6697 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6699 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6700 ;;Total ram usage:        8 bytes
  6701 ;; Hardware stack levels used: 1
  6702 ;; Hardware stack levels required when called: 5
  6703 ;; This function calls:
  6704 ;;		___fladd
  6705 ;; This function is called by:
  6706 ;;		_roundf
  6707 ;; This function uses a non-reentrant model
  6708 ;;
  6709                           
  6710                           	psect	text29
  6711   0019C4                     __ptext29:
  6712                           	callstack 0
  6713   0019C4                     ___flsub:
  6714                           	callstack 22
  6715   0019C4  0E00               	movlw	0
  6716   0019C6  1A1A               	xorwf	___flsub@a^0,f,c
  6717   0019C8  0E00               	movlw	0
  6718   0019CA  1A1B               	xorwf	(___flsub@a+1)^0,f,c
  6719   0019CC  0E00               	movlw	0
  6720   0019CE  1A1C               	xorwf	(___flsub@a+2)^0,f,c
  6721   0019D0  0E80               	movlw	128
  6722   0019D2  1A1D               	xorwf	(___flsub@a+3)^0,f,c
  6723   0019D4  C016  F006         	movff	___flsub@b,___fladd@b
  6724   0019D8  C017  F007         	movff	___flsub@b+1,___fladd@b+1
  6725   0019DC  C018  F008         	movff	___flsub@b+2,___fladd@b+2
  6726   0019E0  C019  F009         	movff	___flsub@b+3,___fladd@b+3
  6727   0019E4  C01A  F00A         	movff	___flsub@a,___fladd@a
  6728   0019E8  C01B  F00B         	movff	___flsub@a+1,___fladd@a+1
  6729   0019EC  C01C  F00C         	movff	___flsub@a+2,___fladd@a+2
  6730   0019F0  C01D  F00D         	movff	___flsub@a+3,___fladd@a+3
  6731   0019F4  EC57  F000         	call	___fladd	;wreg free
  6732   0019F8  C006  F016         	movff	?___fladd,?___flsub
  6733   0019FC  C007  F017         	movff	?___fladd+1,?___flsub+1
  6734   001A00  C008  F018         	movff	?___fladd+2,?___flsub+2
  6735   001A04  C009  F019         	movff	?___fladd+3,?___flsub+3
  6736   001A08  0012               	return		;funcret
  6737   001A0A                     __end_of___flsub:
  6738                           	callstack 0
  6739                           
  6740 ;; *************** function ___fladd *****************
  6741 ;; Defined at:
  6742 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;  b               4    5[COMRAM] float 
  6745 ;;  a               4    9[COMRAM] float 
  6746 ;; Auto vars:     Size  Location     Type
  6747 ;;  grs             1   20[COMRAM] unsigned char 
  6748 ;;  bexp            1   19[COMRAM] unsigned char 
  6749 ;;  aexp            1   18[COMRAM] unsigned char 
  6750 ;;  signs           1   17[COMRAM] unsigned char 
  6751 ;; Return value:  Size  Location     Type
  6752 ;;                  4    5[COMRAM] unsigned char 
  6753 ;; Registers used:
  6754 ;;		wreg, status,2, status,0
  6755 ;; Tracked objects:
  6756 ;;		On entry : 0/0
  6757 ;;		On exit  : 0/0
  6758 ;;		Unchanged: 0/0
  6759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6760 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6761 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6762 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6763 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6764 ;;Total ram usage:       16 bytes
  6765 ;; Hardware stack levels used: 1
  6766 ;; Hardware stack levels required when called: 4
  6767 ;; This function calls:
  6768 ;;		Nothing
  6769 ;; This function is called by:
  6770 ;;		___flsub
  6771 ;;		_roundf
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           	psect	text30
  6776   0000AE                     __ptext30:
  6777                           	callstack 0
  6778   0000AE                     ___fladd:
  6779                           	callstack 22
  6780   0000AE  5009               	movf	(___fladd@b+3)^0,w,c
  6781   0000B0  0B80               	andlw	128
  6782   0000B2  6E12               	movwf	___fladd@signs^0,c
  6783   0000B4  5009               	movf	(___fladd@b+3)^0,w,c
  6784   0000B6  2409               	addwf	(___fladd@b+3)^0,w,c
  6785   0000B8  6E14               	movwf	___fladd@bexp^0,c
  6786   0000BA  AE08               	btfss	(___fladd@b+2)^0,7,c
  6787   0000BC  EF62  F000         	goto	u3791
  6788   0000C0  EF64  F000         	goto	u3790
  6789   0000C4                     u3791:
  6790   0000C4  EF65  F000         	goto	l3954
  6791   0000C8                     u3790:
  6792   0000C8  8014               	bsf	___fladd@bexp^0,0,c
  6793   0000CA                     l3954:
  6794   0000CA  5014               	movf	___fladd@bexp^0,w,c
  6795   0000CC  B4D8               	btfsc	status,2,c
  6796   0000CE  EF6B  F000         	goto	u3801
  6797   0000D2  EF6D  F000         	goto	u3800
  6798   0000D6                     u3801:
  6799   0000D6  EF82  F000         	goto	l3964
  6800   0000DA                     u3800:
  6801   0000DA  2814               	incf	___fladd@bexp^0,w,c
  6802   0000DC  A4D8               	btfss	status,2,c
  6803   0000DE  EF73  F000         	goto	u3811
  6804   0000E2  EF75  F000         	goto	u3810
  6805   0000E6                     u3811:
  6806   0000E6  EF7D  F000         	goto	l3960
  6807   0000EA                     u3810:
  6808   0000EA  0E00               	movlw	0
  6809   0000EC  6E06               	movwf	___fladd@b^0,c
  6810   0000EE  0E00               	movlw	0
  6811   0000F0  6E07               	movwf	(___fladd@b+1)^0,c
  6812   0000F2  0E00               	movlw	0
  6813   0000F4  6E08               	movwf	(___fladd@b+2)^0,c
  6814   0000F6  0E00               	movlw	0
  6815   0000F8  6E09               	movwf	(___fladd@b+3)^0,c
  6816   0000FA                     l3960:
  6817   0000FA  8E08               	bsf	(___fladd@b+2)^0,7,c
  6818   0000FC  0E00               	movlw	0
  6819   0000FE  6E09               	movwf	(___fladd@b+3)^0,c
  6820   000100  EF8A  F000         	goto	l3966
  6821   000104                     l3964:
  6822   000104  0E00               	movlw	0
  6823   000106  6E06               	movwf	___fladd@b^0,c
  6824   000108  0E00               	movlw	0
  6825   00010A  6E07               	movwf	(___fladd@b+1)^0,c
  6826   00010C  0E00               	movlw	0
  6827   00010E  6E08               	movwf	(___fladd@b+2)^0,c
  6828   000110  0E00               	movlw	0
  6829   000112  6E09               	movwf	(___fladd@b+3)^0,c
  6830   000114                     l3966:
  6831   000114  500D               	movf	(___fladd@a+3)^0,w,c
  6832   000116  0B80               	andlw	128
  6833   000118  6E13               	movwf	___fladd@aexp^0,c
  6834   00011A  5012               	movf	___fladd@signs^0,w,c
  6835   00011C  1813               	xorwf	___fladd@aexp^0,w,c
  6836   00011E  B4D8               	btfsc	status,2,c
  6837   000120  EF94  F000         	goto	u3821
  6838   000124  EF96  F000         	goto	u3820
  6839   000128                     u3821:
  6840   000128  EF97  F000         	goto	l3972
  6841   00012C                     u3820:
  6842   00012C  8C12               	bsf	___fladd@signs^0,6,c
  6843   00012E                     l3972:
  6844   00012E  500D               	movf	(___fladd@a+3)^0,w,c
  6845   000130  240D               	addwf	(___fladd@a+3)^0,w,c
  6846   000132  6E13               	movwf	___fladd@aexp^0,c
  6847   000134  AE0C               	btfss	(___fladd@a+2)^0,7,c
  6848   000136  EF9F  F000         	goto	u3831
  6849   00013A  EFA1  F000         	goto	u3830
  6850   00013E                     u3831:
  6851   00013E  EFA2  F000         	goto	l3978
  6852   000142                     u3830:
  6853   000142  8013               	bsf	___fladd@aexp^0,0,c
  6854   000144                     l3978:
  6855   000144  5013               	movf	___fladd@aexp^0,w,c
  6856   000146  B4D8               	btfsc	status,2,c
  6857   000148  EFA8  F000         	goto	u3841
  6858   00014C  EFAA  F000         	goto	u3840
  6859   000150                     u3841:
  6860   000150  EFBF  F000         	goto	l3988
  6861   000154                     u3840:
  6862   000154  2813               	incf	___fladd@aexp^0,w,c
  6863   000156  A4D8               	btfss	status,2,c
  6864   000158  EFB0  F000         	goto	u3851
  6865   00015C  EFB2  F000         	goto	u3850
  6866   000160                     u3851:
  6867   000160  EFBA  F000         	goto	l3984
  6868   000164                     u3850:
  6869   000164  0E00               	movlw	0
  6870   000166  6E0A               	movwf	___fladd@a^0,c
  6871   000168  0E00               	movlw	0
  6872   00016A  6E0B               	movwf	(___fladd@a+1)^0,c
  6873   00016C  0E00               	movlw	0
  6874   00016E  6E0C               	movwf	(___fladd@a+2)^0,c
  6875   000170  0E00               	movlw	0
  6876   000172  6E0D               	movwf	(___fladd@a+3)^0,c
  6877   000174                     l3984:
  6878   000174  8E0C               	bsf	(___fladd@a+2)^0,7,c
  6879   000176  0E00               	movlw	0
  6880   000178  6E0D               	movwf	(___fladd@a+3)^0,c
  6881   00017A  EFC7  F000         	goto	l3990
  6882   00017E                     l3988:
  6883   00017E  0E00               	movlw	0
  6884   000180  6E0A               	movwf	___fladd@a^0,c
  6885   000182  0E00               	movlw	0
  6886   000184  6E0B               	movwf	(___fladd@a+1)^0,c
  6887   000186  0E00               	movlw	0
  6888   000188  6E0C               	movwf	(___fladd@a+2)^0,c
  6889   00018A  0E00               	movlw	0
  6890   00018C  6E0D               	movwf	(___fladd@a+3)^0,c
  6891   00018E                     l3990:
  6892   00018E  5014               	movf	___fladd@bexp^0,w,c
  6893   000190  5C13               	subwf	___fladd@aexp^0,w,c
  6894   000192  B0D8               	btfsc	status,0,c
  6895   000194  EFCE  F000         	goto	u3861
  6896   000198  EFD0  F000         	goto	u3860
  6897   00019C                     u3861:
  6898   00019C  EFF7  F000         	goto	l4026
  6899   0001A0                     u3860:
  6900   0001A0  AC12               	btfss	___fladd@signs^0,6,c
  6901   0001A2  EFD5  F000         	goto	u3871
  6902   0001A6  EFD7  F000         	goto	u3870
  6903   0001AA                     u3871:
  6904   0001AA  EFD9  F000         	goto	l3996
  6905   0001AE                     u3870:
  6906   0001AE  0E80               	movlw	128
  6907   0001B0  1A12               	xorwf	___fladd@signs^0,f,c
  6908   0001B2                     l3996:
  6909   0001B2  C014  F015         	movff	___fladd@bexp,___fladd@grs
  6910   0001B6  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  6911   0001BA  C015  F013         	movff	___fladd@grs,___fladd@aexp
  6912   0001BE  C006  F015         	movff	___fladd@b,___fladd@grs
  6913   0001C2  C00A  F006         	movff	___fladd@a,___fladd@b
  6914   0001C6  C015  F00A         	movff	___fladd@grs,___fladd@a
  6915   0001CA  C007  F015         	movff	___fladd@b+1,___fladd@grs
  6916   0001CE  C00B  F007         	movff	___fladd@a+1,___fladd@b+1
  6917   0001D2  C015  F00B         	movff	___fladd@grs,___fladd@a+1
  6918   0001D6  C008  F015         	movff	___fladd@b+2,___fladd@grs
  6919   0001DA  C00C  F008         	movff	___fladd@a+2,___fladd@b+2
  6920   0001DE  C015  F00C         	movff	___fladd@grs,___fladd@a+2
  6921   0001E2  C009  F015         	movff	___fladd@b+3,___fladd@grs
  6922   0001E6  C00D  F009         	movff	___fladd@a+3,___fladd@b+3
  6923   0001EA  C015  F00D         	movff	___fladd@grs,___fladd@a+3
  6924   0001EE                     l4026:
  6925   0001EE  0E00               	movlw	0
  6926   0001F0  6E15               	movwf	___fladd@grs^0,c
  6927   0001F2  5014               	movf	___fladd@bexp^0,w,c
  6928   0001F4  C013  F00E         	movff	___fladd@aexp,??___fladd
  6929   0001F8  6A0F               	clrf	(??___fladd+1)^0,c
  6930   0001FA  5E0E               	subwf	??___fladd^0,f,c
  6931   0001FC  0E00               	movlw	0
  6932   0001FE  5A0F               	subwfb	(??___fladd+1)^0,f,c
  6933   000200  BE0F               	btfsc	(??___fladd+1)^0,7,c
  6934   000202  EF0C  F001         	goto	u3881
  6935   000206  500F               	movf	(??___fladd+1)^0,w,c
  6936   000208  E109               	bnz	u3880
  6937   00020A  0E1A               	movlw	26
  6938   00020C  5C0E               	subwf	??___fladd^0,w,c
  6939   00020E  A0D8               	btfss	status,0,c
  6940   000210  EF0C  F001         	goto	u3881
  6941   000214  EF0E  F001         	goto	u3880
  6942   000218                     u3881:
  6943   000218  EF45  F001         	goto	l1148
  6944   00021C                     u3880:
  6945   00021C  5006               	movf	___fladd@b^0,w,c
  6946   00021E  1007               	iorwf	(___fladd@b+1)^0,w,c
  6947   000220  1008               	iorwf	(___fladd@b+2)^0,w,c
  6948   000222  1009               	iorwf	(___fladd@b+3)^0,w,c
  6949   000224  A4D8               	btfss	status,2,c
  6950   000226  EF17  F001         	goto	u3891
  6951   00022A  EF1A  F001         	goto	u3890
  6952   00022E                     u3891:
  6953   00022E  0E01               	movlw	1
  6954   000230  EF1B  F001         	goto	u3900
  6955   000234                     u3890:
  6956   000234  0E00               	movlw	0
  6957   000236                     u3900:
  6958   000236  6E15               	movwf	___fladd@grs^0,c
  6959   000238  0E00               	movlw	0
  6960   00023A  6E06               	movwf	___fladd@b^0,c
  6961   00023C  0E00               	movlw	0
  6962   00023E  6E07               	movwf	(___fladd@b+1)^0,c
  6963   000240  0E00               	movlw	0
  6964   000242  6E08               	movwf	(___fladd@b+2)^0,c
  6965   000244  0E00               	movlw	0
  6966   000246  6E09               	movwf	(___fladd@b+3)^0,c
  6967   000248  C013  F014         	movff	___fladd@aexp,___fladd@bexp
  6968   00024C  EF4E  F001         	goto	l1147
  6969   000250                     l1149:
  6970   000250  A015               	btfss	___fladd@grs^0,0,c
  6971   000252  EF2D  F001         	goto	u3911
  6972   000256  EF2F  F001         	goto	u3910
  6973   00025A                     u3911:
  6974   00025A  EF35  F001         	goto	l4038
  6975   00025E                     u3910:
  6976   00025E  90D8               	bcf	status,0,c
  6977   000260  3015               	rrcf	___fladd@grs^0,w,c
  6978   000262  0901               	iorlw	1
  6979   000264  6E15               	movwf	___fladd@grs^0,c
  6980   000266  EF37  F001         	goto	l4040
  6981   00026A                     l4038:
  6982   00026A  90D8               	bcf	status,0,c
  6983   00026C  3215               	rrcf	___fladd@grs^0,f,c
  6984   00026E                     l4040:
  6985   00026E  A006               	btfss	___fladd@b^0,0,c
  6986   000270  EF3C  F001         	goto	u3921
  6987   000274  EF3E  F001         	goto	u3920
  6988   000278                     u3921:
  6989   000278  EF3F  F001         	goto	l4044
  6990   00027C                     u3920:
  6991   00027C  8E15               	bsf	___fladd@grs^0,7,c
  6992   00027E                     l4044:
  6993   00027E  3409               	rlcf	(___fladd@b+3)^0,w,c
  6994   000280  3209               	rrcf	(___fladd@b+3)^0,f,c
  6995   000282  3208               	rrcf	(___fladd@b+2)^0,f,c
  6996   000284  3207               	rrcf	(___fladd@b+1)^0,f,c
  6997   000286  3206               	rrcf	___fladd@b^0,f,c
  6998   000288  2A14               	incf	___fladd@bexp^0,f,c
  6999   00028A                     l1148:
  7000   00028A  5013               	movf	___fladd@aexp^0,w,c
  7001   00028C  5C14               	subwf	___fladd@bexp^0,w,c
  7002   00028E  A0D8               	btfss	status,0,c
  7003   000290  EF4C  F001         	goto	u3931
  7004   000294  EF4E  F001         	goto	u3930
  7005   000298                     u3931:
  7006   000298  EF28  F001         	goto	l1149
  7007   00029C                     u3930:
  7008   00029C                     l1147:
  7009   00029C  BC12               	btfsc	___fladd@signs^0,6,c
  7010   00029E  EF53  F001         	goto	u3941
  7011   0002A2  EF55  F001         	goto	u3940
  7012   0002A6                     u3941:
  7013   0002A6  EF95  F001         	goto	l4072
  7014   0002AA                     u3940:
  7015   0002AA  5014               	movf	___fladd@bexp^0,w,c
  7016   0002AC  A4D8               	btfss	status,2,c
  7017   0002AE  EF5B  F001         	goto	u3951
  7018   0002B2  EF5D  F001         	goto	u3950
  7019   0002B6                     u3951:
  7020   0002B6  EF67  F001         	goto	l4054
  7021   0002BA                     u3950:
  7022   0002BA  0E00               	movlw	0
  7023   0002BC  6E06               	movwf	?___fladd^0,c
  7024   0002BE  0E00               	movlw	0
  7025   0002C0  6E07               	movwf	(?___fladd+1)^0,c
  7026   0002C2  0E00               	movlw	0
  7027   0002C4  6E08               	movwf	(?___fladd+2)^0,c
  7028   0002C6  0E00               	movlw	0
  7029   0002C8  6E09               	movwf	(?___fladd+3)^0,c
  7030   0002CA  EFB6  F002         	goto	l1156
  7031   0002CE                     l4054:
  7032   0002CE  500A               	movf	___fladd@a^0,w,c
  7033   0002D0  2606               	addwf	___fladd@b^0,f,c
  7034   0002D2  500B               	movf	(___fladd@a+1)^0,w,c
  7035   0002D4  2207               	addwfc	(___fladd@b+1)^0,f,c
  7036   0002D6  500C               	movf	(___fladd@a+2)^0,w,c
  7037   0002D8  2208               	addwfc	(___fladd@b+2)^0,f,c
  7038   0002DA  500D               	movf	(___fladd@a+3)^0,w,c
  7039   0002DC  2209               	addwfc	(___fladd@b+3)^0,f,c
  7040   0002DE  A009               	btfss	(___fladd@b+3)^0,0,c
  7041   0002E0  EF74  F001         	goto	u3961
  7042   0002E4  EF76  F001         	goto	u3960
  7043   0002E8                     u3961:
  7044   0002E8  EF22  F002         	goto	l4108
  7045   0002EC                     u3960:
  7046   0002EC  A015               	btfss	___fladd@grs^0,0,c
  7047   0002EE  EF7B  F001         	goto	u3971
  7048   0002F2  EF7D  F001         	goto	u3970
  7049   0002F6                     u3971:
  7050   0002F6  EF83  F001         	goto	l4062
  7051   0002FA                     u3970:
  7052   0002FA  90D8               	bcf	status,0,c
  7053   0002FC  3015               	rrcf	___fladd@grs^0,w,c
  7054   0002FE  0901               	iorlw	1
  7055   000300  6E15               	movwf	___fladd@grs^0,c
  7056   000302  EF85  F001         	goto	l4064
  7057   000306                     l4062:
  7058   000306  90D8               	bcf	status,0,c
  7059   000308  3215               	rrcf	___fladd@grs^0,f,c
  7060   00030A                     l4064:
  7061   00030A  A006               	btfss	___fladd@b^0,0,c
  7062   00030C  EF8A  F001         	goto	u3981
  7063   000310  EF8C  F001         	goto	u3980
  7064   000314                     u3981:
  7065   000314  EF8D  F001         	goto	l4068
  7066   000318                     u3980:
  7067   000318  8E15               	bsf	___fladd@grs^0,7,c
  7068   00031A                     l4068:
  7069   00031A  3409               	rlcf	(___fladd@b+3)^0,w,c
  7070   00031C  3209               	rrcf	(___fladd@b+3)^0,f,c
  7071   00031E  3208               	rrcf	(___fladd@b+2)^0,f,c
  7072   000320  3207               	rrcf	(___fladd@b+1)^0,f,c
  7073   000322  3206               	rrcf	___fladd@b^0,f,c
  7074   000324  2A14               	incf	___fladd@bexp^0,f,c
  7075   000326  EF22  F002         	goto	l4108
  7076   00032A                     l4072:
  7077   00032A  500A               	movf	___fladd@a^0,w,c
  7078   00032C  5C06               	subwf	___fladd@b^0,w,c
  7079   00032E  500B               	movf	(___fladd@a+1)^0,w,c
  7080   000330  5807               	subwfb	(___fladd@b+1)^0,w,c
  7081   000332  500C               	movf	(___fladd@a+2)^0,w,c
  7082   000334  5808               	subwfb	(___fladd@b+2)^0,w,c
  7083   000336  5009               	movf	(___fladd@b+3)^0,w,c
  7084   000338  0A80               	xorlw	128
  7085   00033A  6E0E               	movwf	??___fladd^0,c
  7086   00033C  500D               	movf	(___fladd@a+3)^0,w,c
  7087   00033E  0A80               	xorlw	128
  7088   000340  580E               	subwfb	??___fladd^0,w,c
  7089   000342  B0D8               	btfsc	status,0,c
  7090   000344  EFA6  F001         	goto	u3991
  7091   000348  EFA8  F001         	goto	u3990
  7092   00034C                     u3991:
  7093   00034C  EFD3  F001         	goto	l4082
  7094   000350                     u3990:
  7095   000350  5006               	movf	___fladd@b^0,w,c
  7096   000352  5C0A               	subwf	___fladd@a^0,w,c
  7097   000354  6E0E               	movwf	??___fladd^0,c
  7098   000356  5007               	movf	(___fladd@b+1)^0,w,c
  7099   000358  580B               	subwfb	(___fladd@a+1)^0,w,c
  7100   00035A  6E0F               	movwf	(??___fladd+1)^0,c
  7101   00035C  5008               	movf	(___fladd@b+2)^0,w,c
  7102   00035E  580C               	subwfb	(___fladd@a+2)^0,w,c
  7103   000360  6E10               	movwf	(??___fladd+2)^0,c
  7104   000362  5009               	movf	(___fladd@b+3)^0,w,c
  7105   000364  580D               	subwfb	(___fladd@a+3)^0,w,c
  7106   000366  6E11               	movwf	(??___fladd+3)^0,c
  7107   000368  0EFF               	movlw	255
  7108   00036A  240E               	addwf	??___fladd^0,w,c
  7109   00036C  6E06               	movwf	___fladd@b^0,c
  7110   00036E  0EFF               	movlw	255
  7111   000370  200F               	addwfc	(??___fladd+1)^0,w,c
  7112   000372  6E07               	movwf	(___fladd@b+1)^0,c
  7113   000374  0EFF               	movlw	255
  7114   000376  2010               	addwfc	(??___fladd+2)^0,w,c
  7115   000378  6E08               	movwf	(___fladd@b+2)^0,c
  7116   00037A  0EFF               	movlw	255
  7117   00037C  2011               	addwfc	(??___fladd+3)^0,w,c
  7118   00037E  6E09               	movwf	(___fladd@b+3)^0,c
  7119   000380  0E80               	movlw	128
  7120   000382  1A12               	xorwf	___fladd@signs^0,f,c
  7121   000384  6C15               	negf	___fladd@grs^0,c
  7122   000386  5015               	movf	___fladd@grs^0,w,c
  7123   000388  A4D8               	btfss	status,2,c
  7124   00038A  EFC9  F001         	goto	u4001
  7125   00038E  EFCB  F001         	goto	u4000
  7126   000392                     u4001:
  7127   000392  EFDB  F001         	goto	l1164
  7128   000396                     u4000:
  7129   000396  0E01               	movlw	1
  7130   000398  2606               	addwf	___fladd@b^0,f,c
  7131   00039A  0E00               	movlw	0
  7132   00039C  2207               	addwfc	(___fladd@b+1)^0,f,c
  7133   00039E  2208               	addwfc	(___fladd@b+2)^0,f,c
  7134   0003A0  2209               	addwfc	(___fladd@b+3)^0,f,c
  7135   0003A2  EFDB  F001         	goto	l1164
  7136   0003A6                     l4082:
  7137   0003A6  500A               	movf	___fladd@a^0,w,c
  7138   0003A8  5E06               	subwf	___fladd@b^0,f,c
  7139   0003AA  500B               	movf	(___fladd@a+1)^0,w,c
  7140   0003AC  5A07               	subwfb	(___fladd@b+1)^0,f,c
  7141   0003AE  500C               	movf	(___fladd@a+2)^0,w,c
  7142   0003B0  5A08               	subwfb	(___fladd@b+2)^0,f,c
  7143   0003B2  500D               	movf	(___fladd@a+3)^0,w,c
  7144   0003B4  5A09               	subwfb	(___fladd@b+3)^0,f,c
  7145   0003B6                     l1164:
  7146   0003B6  5006               	movf	___fladd@b^0,w,c
  7147   0003B8  1007               	iorwf	(___fladd@b+1)^0,w,c
  7148   0003BA  1008               	iorwf	(___fladd@b+2)^0,w,c
  7149   0003BC  1009               	iorwf	(___fladd@b+3)^0,w,c
  7150   0003BE  A4D8               	btfss	status,2,c
  7151   0003C0  EFE4  F001         	goto	u4011
  7152   0003C4  EFE6  F001         	goto	u4010
  7153   0003C8                     u4011:
  7154   0003C8  EF1B  F002         	goto	l4106
  7155   0003CC                     u4010:
  7156   0003CC  5015               	movf	___fladd@grs^0,w,c
  7157   0003CE  A4D8               	btfss	status,2,c
  7158   0003D0  EFEC  F001         	goto	u4021
  7159   0003D4  EFEE  F001         	goto	u4020
  7160   0003D8                     u4021:
  7161   0003D8  EF1B  F002         	goto	l4106
  7162   0003DC                     u4020:
  7163   0003DC  0E00               	movlw	0
  7164   0003DE  6E06               	movwf	?___fladd^0,c
  7165   0003E0  0E00               	movlw	0
  7166   0003E2  6E07               	movwf	(?___fladd+1)^0,c
  7167   0003E4  0E00               	movlw	0
  7168   0003E6  6E08               	movwf	(?___fladd+2)^0,c
  7169   0003E8  0E00               	movlw	0
  7170   0003EA  6E09               	movwf	(?___fladd+3)^0,c
  7171   0003EC  EFB6  F002         	goto	l1156
  7172   0003F0                     l4090:
  7173   0003F0  90D8               	bcf	status,0,c
  7174   0003F2  3606               	rlcf	___fladd@b^0,f,c
  7175   0003F4  3607               	rlcf	(___fladd@b+1)^0,f,c
  7176   0003F6  3608               	rlcf	(___fladd@b+2)^0,f,c
  7177   0003F8  3609               	rlcf	(___fladd@b+3)^0,f,c
  7178   0003FA  AE15               	btfss	___fladd@grs^0,7,c
  7179   0003FC  EF02  F002         	goto	u4031
  7180   000400  EF04  F002         	goto	u4030
  7181   000404                     u4031:
  7182   000404  EF05  F002         	goto	l4096
  7183   000408                     u4030:
  7184   000408  8006               	bsf	___fladd@b^0,0,c
  7185   00040A                     l4096:
  7186   00040A  A015               	btfss	___fladd@grs^0,0,c
  7187   00040C  EF0A  F002         	goto	u4041
  7188   000410  EF0C  F002         	goto	u4040
  7189   000414                     u4041:
  7190   000414  EF10  F002         	goto	l4100
  7191   000418                     u4040:
  7192   000418  80D8               	bsf	status,0,c
  7193   00041A  3615               	rlcf	___fladd@grs^0,f,c
  7194   00041C  EF12  F002         	goto	l4102
  7195   000420                     l4100:
  7196   000420  90D8               	bcf	status,0,c
  7197   000422  3615               	rlcf	___fladd@grs^0,f,c
  7198   000424                     l4102:
  7199   000424  5014               	movf	___fladd@bexp^0,w,c
  7200   000426  B4D8               	btfsc	status,2,c
  7201   000428  EF18  F002         	goto	u4051
  7202   00042C  EF1A  F002         	goto	u4050
  7203   000430                     u4051:
  7204   000430  EF1B  F002         	goto	l4106
  7205   000434                     u4050:
  7206   000434  0614               	decf	___fladd@bexp^0,f,c
  7207   000436                     l4106:
  7208   000436  AE08               	btfss	(___fladd@b+2)^0,7,c
  7209   000438  EF20  F002         	goto	u4061
  7210   00043C  EF22  F002         	goto	u4060
  7211   000440                     u4061:
  7212   000440  EFF8  F001         	goto	l4090
  7213   000444                     u4060:
  7214   000444                     l4108:
  7215   000444  0E00               	movlw	0
  7216   000446  6E13               	movwf	___fladd@aexp^0,c
  7217   000448  AE15               	btfss	___fladd@grs^0,7,c
  7218   00044A  EF29  F002         	goto	u4071
  7219   00044E  EF2B  F002         	goto	u4070
  7220   000452                     u4071:
  7221   000452  EF43  F002         	goto	l1173
  7222   000456                     u4070:
  7223   000456  C015  F00E         	movff	___fladd@grs,??___fladd
  7224   00045A  0E7F               	movlw	127
  7225   00045C  160E               	andwf	??___fladd^0,f,c
  7226   00045E  B4D8               	btfsc	status,2,c
  7227   000460  EF34  F002         	goto	u4081
  7228   000464  EF36  F002         	goto	u4080
  7229   000468                     u4081:
  7230   000468  EF3A  F002         	goto	l1174
  7231   00046C                     u4080:
  7232   00046C                     l4114:
  7233   00046C  0E01               	movlw	1
  7234   00046E  6E13               	movwf	___fladd@aexp^0,c
  7235   000470  EF43  F002         	goto	l1173
  7236   000474                     l1174:
  7237   000474  A006               	btfss	___fladd@b^0,0,c
  7238   000476  EF3F  F002         	goto	u4091
  7239   00047A  EF41  F002         	goto	u4090
  7240   00047E                     u4091:
  7241   00047E  EF43  F002         	goto	l1173
  7242   000482                     u4090:
  7243   000482  EF36  F002         	goto	l4114
  7244   000486                     l1173:
  7245   000486  5013               	movf	___fladd@aexp^0,w,c
  7246   000488  B4D8               	btfsc	status,2,c
  7247   00048A  EF49  F002         	goto	u4101
  7248   00048E  EF4B  F002         	goto	u4100
  7249   000492                     u4101:
  7250   000492  EF76  F002         	goto	l4126
  7251   000496                     u4100:
  7252   000496  0E01               	movlw	1
  7253   000498  2606               	addwf	___fladd@b^0,f,c
  7254   00049A  0E00               	movlw	0
  7255   00049C  2207               	addwfc	(___fladd@b+1)^0,f,c
  7256   00049E  2208               	addwfc	(___fladd@b+2)^0,f,c
  7257   0004A0  2209               	addwfc	(___fladd@b+3)^0,f,c
  7258   0004A2  A009               	btfss	(___fladd@b+3)^0,0,c
  7259   0004A4  EF56  F002         	goto	u4111
  7260   0004A8  EF58  F002         	goto	u4110
  7261   0004AC                     u4111:
  7262   0004AC  EF76  F002         	goto	l4126
  7263   0004B0                     u4110:
  7264   0004B0  C006  F00E         	movff	___fladd@b,??___fladd
  7265   0004B4  C007  F00F         	movff	___fladd@b+1,??___fladd+1
  7266   0004B8  C008  F010         	movff	___fladd@b+2,??___fladd+2
  7267   0004BC  C009  F011         	movff	___fladd@b+3,??___fladd+3
  7268   0004C0  3411               	rlcf	(??___fladd+3)^0,w,c
  7269   0004C2  3211               	rrcf	(??___fladd+3)^0,f,c
  7270   0004C4  3210               	rrcf	(??___fladd+2)^0,f,c
  7271   0004C6  320F               	rrcf	(??___fladd+1)^0,f,c
  7272   0004C8  320E               	rrcf	??___fladd^0,f,c
  7273   0004CA  C00E  F006         	movff	??___fladd,___fladd@b
  7274   0004CE  C00F  F007         	movff	??___fladd+1,___fladd@b+1
  7275   0004D2  C010  F008         	movff	??___fladd+2,___fladd@b+2
  7276   0004D6  C011  F009         	movff	??___fladd+3,___fladd@b+3
  7277   0004DA  2814               	incf	___fladd@bexp^0,w,c
  7278   0004DC  B4D8               	btfsc	status,2,c
  7279   0004DE  EF73  F002         	goto	u4121
  7280   0004E2  EF75  F002         	goto	u4120
  7281   0004E6                     u4121:
  7282   0004E6  EF76  F002         	goto	l4126
  7283   0004EA                     u4120:
  7284   0004EA  2A14               	incf	___fladd@bexp^0,f,c
  7285   0004EC                     l4126:
  7286   0004EC  2814               	incf	___fladd@bexp^0,w,c
  7287   0004EE  B4D8               	btfsc	status,2,c
  7288   0004F0  EF7C  F002         	goto	u4131
  7289   0004F4  EF7E  F002         	goto	u4130
  7290   0004F8                     u4131:
  7291   0004F8  EF86  F002         	goto	l4130
  7292   0004FC                     u4130:
  7293   0004FC  5014               	movf	___fladd@bexp^0,w,c
  7294   0004FE  A4D8               	btfss	status,2,c
  7295   000500  EF84  F002         	goto	u4141
  7296   000504  EF86  F002         	goto	u4140
  7297   000508                     u4141:
  7298   000508  EF98  F002         	goto	l4134
  7299   00050C                     u4140:
  7300   00050C                     l4130:
  7301   00050C  0E00               	movlw	0
  7302   00050E  6E06               	movwf	___fladd@b^0,c
  7303   000510  0E00               	movlw	0
  7304   000512  6E07               	movwf	(___fladd@b+1)^0,c
  7305   000514  0E00               	movlw	0
  7306   000516  6E08               	movwf	(___fladd@b+2)^0,c
  7307   000518  0E00               	movlw	0
  7308   00051A  6E09               	movwf	(___fladd@b+3)^0,c
  7309   00051C  5014               	movf	___fladd@bexp^0,w,c
  7310   00051E  A4D8               	btfss	status,2,c
  7311   000520  EF94  F002         	goto	u4151
  7312   000524  EF96  F002         	goto	u4150
  7313   000528                     u4151:
  7314   000528  EF98  F002         	goto	l4134
  7315   00052C                     u4150:
  7316   00052C  0E00               	movlw	0
  7317   00052E  6E12               	movwf	___fladd@signs^0,c
  7318   000530                     l4134:
  7319   000530  A014               	btfss	___fladd@bexp^0,0,c
  7320   000532  EF9D  F002         	goto	u4161
  7321   000536  EF9F  F002         	goto	u4160
  7322   00053A                     u4161:
  7323   00053A  EFA2  F002         	goto	l4138
  7324   00053E                     u4160:
  7325   00053E  8E08               	bsf	(___fladd@b+2)^0,7,c
  7326   000540  EFA3  F002         	goto	l4140
  7327   000544                     l4138:
  7328   000544  9E08               	bcf	(___fladd@b+2)^0,7,c
  7329   000546                     l4140:
  7330   000546  90D8               	bcf	status,0,c
  7331   000548  3014               	rrcf	___fladd@bexp^0,w,c
  7332   00054A  6E09               	movwf	(___fladd@b+3)^0,c
  7333   00054C  AE12               	btfss	___fladd@signs^0,7,c
  7334   00054E  EFAB  F002         	goto	u4171
  7335   000552  EFAD  F002         	goto	u4170
  7336   000556                     u4171:
  7337   000556  EFAE  F002         	goto	l4146
  7338   00055A                     u4170:
  7339   00055A  8E09               	bsf	(___fladd@b+3)^0,7,c
  7340   00055C                     l4146:
  7341   00055C  C006  F006         	movff	___fladd@b,?___fladd
  7342   000560  C007  F007         	movff	___fladd@b+1,?___fladd+1
  7343   000564  C008  F008         	movff	___fladd@b+2,?___fladd+2
  7344   000568  C009  F009         	movff	___fladd@b+3,?___fladd+3
  7345   00056C                     l1156:
  7346   00056C  0012               	return		;funcret
  7347   00056E                     __end_of___fladd:
  7348                           	callstack 0
  7349                           
  7350 ;; *************** function ___flneg *****************
  7351 ;; Defined at:
  7352 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  7353 ;; Parameters:    Size  Location     Type
  7354 ;;  f1              4    5[COMRAM] unsigned char 
  7355 ;; Auto vars:     Size  Location     Type
  7356 ;;		None
  7357 ;; Return value:  Size  Location     Type
  7358 ;;                  4    5[COMRAM] unsigned char 
  7359 ;; Registers used:
  7360 ;;		wreg, status,2, status,0
  7361 ;; Tracked objects:
  7362 ;;		On entry : 0/0
  7363 ;;		On exit  : 0/0
  7364 ;;		Unchanged: 0/0
  7365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7369 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7370 ;;Total ram usage:        4 bytes
  7371 ;; Hardware stack levels used: 1
  7372 ;; Hardware stack levels required when called: 4
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_roundf
  7377 ;; This function uses a non-reentrant model
  7378 ;;
  7379                           
  7380                           	psect	text31
  7381   001A88                     __ptext31:
  7382                           	callstack 0
  7383   001A88                     ___flneg:
  7384                           	callstack 23
  7385   001A88  5006               	movf	___flneg@f1^0,w,c
  7386   001A8A  1007               	iorwf	(___flneg@f1+1)^0,w,c
  7387   001A8C  1008               	iorwf	(___flneg@f1+2)^0,w,c
  7388   001A8E  1009               	iorwf	(___flneg@f1+3)^0,w,c
  7389   001A90  B4D8               	btfsc	status,2,c
  7390   001A92  EF4D  F00D         	goto	u4321
  7391   001A96  EF4F  F00D         	goto	u4320
  7392   001A9A                     u4321:
  7393   001A9A  EF57  F00D         	goto	l4260
  7394   001A9E                     u4320:
  7395   001A9E  0E00               	movlw	0
  7396   001AA0  1A06               	xorwf	___flneg@f1^0,f,c
  7397   001AA2  0E00               	movlw	0
  7398   001AA4  1A07               	xorwf	(___flneg@f1+1)^0,f,c
  7399   001AA6  0E00               	movlw	0
  7400   001AA8  1A08               	xorwf	(___flneg@f1+2)^0,f,c
  7401   001AAA  0E80               	movlw	128
  7402   001AAC  1A09               	xorwf	(___flneg@f1+3)^0,f,c
  7403   001AAE                     l4260:
  7404   001AAE  C006  F006         	movff	___flneg@f1,?___flneg
  7405   001AB2  C007  F007         	movff	___flneg@f1+1,?___flneg+1
  7406   001AB6  C008  F008         	movff	___flneg@f1+2,?___flneg+2
  7407   001ABA  C009  F009         	movff	___flneg@f1+3,?___flneg+3
  7408   001ABE  0012               	return		;funcret
  7409   001AC0                     __end_of___flneg:
  7410                           	callstack 0
  7411                           
  7412 ;; *************** function ___flge *****************
  7413 ;; Defined at:
  7414 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  7415 ;; Parameters:    Size  Location     Type
  7416 ;;  ff1             4    5[COMRAM] unsigned char 
  7417 ;;  ff2             4    9[COMRAM] unsigned char 
  7418 ;; Auto vars:     Size  Location     Type
  7419 ;;		None
  7420 ;; Return value:  Size  Location     Type
  7421 ;;		None               void
  7422 ;; Registers used:
  7423 ;;		wreg, status,2, status,0
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7429 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;Total ram usage:       12 bytes
  7434 ;; Hardware stack levels used: 1
  7435 ;; Hardware stack levels required when called: 4
  7436 ;; This function calls:
  7437 ;;		Nothing
  7438 ;; This function is called by:
  7439 ;;		_roundf
  7440 ;; This function uses a non-reentrant model
  7441 ;;
  7442                           
  7443                           	psect	text32
  7444   000EA2                     __ptext32:
  7445                           	callstack 0
  7446   000EA2                     ___flge:
  7447                           	callstack 23
  7448   000EA2  0E00               	movlw	0
  7449   000EA4  1406               	andwf	___flge@ff1^0,w,c
  7450   000EA6  6E0E               	movwf	??___flge^0,c
  7451   000EA8  0E00               	movlw	0
  7452   000EAA  1407               	andwf	(___flge@ff1+1)^0,w,c
  7453   000EAC  6E0F               	movwf	(??___flge+1)^0,c
  7454   000EAE  0E80               	movlw	128
  7455   000EB0  1408               	andwf	(___flge@ff1+2)^0,w,c
  7456   000EB2  6E10               	movwf	(??___flge+2)^0,c
  7457   000EB4  0E7F               	movlw	127
  7458   000EB6  1409               	andwf	(___flge@ff1+3)^0,w,c
  7459   000EB8  6E11               	movwf	(??___flge+3)^0,c
  7460   000EBA  500E               	movf	??___flge^0,w,c
  7461   000EBC  100F               	iorwf	(??___flge+1)^0,w,c
  7462   000EBE  1010               	iorwf	(??___flge+2)^0,w,c
  7463   000EC0  1011               	iorwf	(??___flge+3)^0,w,c
  7464   000EC2  A4D8               	btfss	status,2,c
  7465   000EC4  EF66  F007         	goto	u4271
  7466   000EC8  EF68  F007         	goto	u4270
  7467   000ECC                     u4271:
  7468   000ECC  EF70  F007         	goto	l4238
  7469   000ED0                     u4270:
  7470   000ED0  0E00               	movlw	0
  7471   000ED2  6E06               	movwf	___flge@ff1^0,c
  7472   000ED4  0E00               	movlw	0
  7473   000ED6  6E07               	movwf	(___flge@ff1+1)^0,c
  7474   000ED8  0E00               	movlw	0
  7475   000EDA  6E08               	movwf	(___flge@ff1+2)^0,c
  7476   000EDC  0E00               	movlw	0
  7477   000EDE  6E09               	movwf	(___flge@ff1+3)^0,c
  7478   000EE0                     l4238:
  7479   000EE0  0E00               	movlw	0
  7480   000EE2  140A               	andwf	___flge@ff2^0,w,c
  7481   000EE4  6E0E               	movwf	??___flge^0,c
  7482   000EE6  0E00               	movlw	0
  7483   000EE8  140B               	andwf	(___flge@ff2+1)^0,w,c
  7484   000EEA  6E0F               	movwf	(??___flge+1)^0,c
  7485   000EEC  0E80               	movlw	128
  7486   000EEE  140C               	andwf	(___flge@ff2+2)^0,w,c
  7487   000EF0  6E10               	movwf	(??___flge+2)^0,c
  7488   000EF2  0E7F               	movlw	127
  7489   000EF4  140D               	andwf	(___flge@ff2+3)^0,w,c
  7490   000EF6  6E11               	movwf	(??___flge+3)^0,c
  7491   000EF8  500E               	movf	??___flge^0,w,c
  7492   000EFA  100F               	iorwf	(??___flge+1)^0,w,c
  7493   000EFC  1010               	iorwf	(??___flge+2)^0,w,c
  7494   000EFE  1011               	iorwf	(??___flge+3)^0,w,c
  7495   000F00  A4D8               	btfss	status,2,c
  7496   000F02  EF85  F007         	goto	u4281
  7497   000F06  EF87  F007         	goto	u4280
  7498   000F0A                     u4281:
  7499   000F0A  EF8F  F007         	goto	l4242
  7500   000F0E                     u4280:
  7501   000F0E  0E00               	movlw	0
  7502   000F10  6E0A               	movwf	___flge@ff2^0,c
  7503   000F12  0E00               	movlw	0
  7504   000F14  6E0B               	movwf	(___flge@ff2+1)^0,c
  7505   000F16  0E00               	movlw	0
  7506   000F18  6E0C               	movwf	(___flge@ff2+2)^0,c
  7507   000F1A  0E00               	movlw	0
  7508   000F1C  6E0D               	movwf	(___flge@ff2+3)^0,c
  7509   000F1E                     l4242:
  7510   000F1E  AE09               	btfss	(___flge@ff1+3)^0,7,c
  7511   000F20  EF94  F007         	goto	u4291
  7512   000F24  EF96  F007         	goto	u4290
  7513   000F28                     u4291:
  7514   000F28  EF9F  F007         	goto	l4246
  7515   000F2C                     u4290:
  7516   000F2C  6C06               	negf	___flge@ff1^0,c
  7517   000F2E  1E07               	comf	(___flge@ff1+1)^0,f,c
  7518   000F30  B0D8               	btfsc	status,0,c
  7519   000F32  2A07               	incf	(___flge@ff1+1)^0,f,c
  7520   000F34  1E08               	comf	(___flge@ff1+2)^0,f,c
  7521   000F36  B0D8               	btfsc	status,0,c
  7522   000F38  2A08               	incf	(___flge@ff1+2)^0,f,c
  7523   000F3A  0E80               	movlw	128
  7524   000F3C  5609               	subfwb	(___flge@ff1+3)^0,f,c
  7525   000F3E                     l4246:
  7526   000F3E  AE0D               	btfss	(___flge@ff2+3)^0,7,c
  7527   000F40  EFA4  F007         	goto	u4301
  7528   000F44  EFA6  F007         	goto	u4300
  7529   000F48                     u4301:
  7530   000F48  EFAF  F007         	goto	l884
  7531   000F4C                     u4300:
  7532   000F4C  6C0A               	negf	___flge@ff2^0,c
  7533   000F4E  1E0B               	comf	(___flge@ff2+1)^0,f,c
  7534   000F50  B0D8               	btfsc	status,0,c
  7535   000F52  2A0B               	incf	(___flge@ff2+1)^0,f,c
  7536   000F54  1E0C               	comf	(___flge@ff2+2)^0,f,c
  7537   000F56  B0D8               	btfsc	status,0,c
  7538   000F58  2A0C               	incf	(___flge@ff2+2)^0,f,c
  7539   000F5A  0E80               	movlw	128
  7540   000F5C  560D               	subfwb	(___flge@ff2+3)^0,f,c
  7541   000F5E                     l884:
  7542   000F5E  0E00               	movlw	0
  7543   000F60  1A06               	xorwf	___flge@ff1^0,f,c
  7544   000F62  0E00               	movlw	0
  7545   000F64  1A07               	xorwf	(___flge@ff1+1)^0,f,c
  7546   000F66  0E00               	movlw	0
  7547   000F68  1A08               	xorwf	(___flge@ff1+2)^0,f,c
  7548   000F6A  0E80               	movlw	128
  7549   000F6C  1A09               	xorwf	(___flge@ff1+3)^0,f,c
  7550   000F6E  0E00               	movlw	0
  7551   000F70  1A0A               	xorwf	___flge@ff2^0,f,c
  7552   000F72  0E00               	movlw	0
  7553   000F74  1A0B               	xorwf	(___flge@ff2+1)^0,f,c
  7554   000F76  0E00               	movlw	0
  7555   000F78  1A0C               	xorwf	(___flge@ff2+2)^0,f,c
  7556   000F7A  0E80               	movlw	128
  7557   000F7C  1A0D               	xorwf	(___flge@ff2+3)^0,f,c
  7558   000F7E  500A               	movf	___flge@ff2^0,w,c
  7559   000F80  5C06               	subwf	___flge@ff1^0,w,c
  7560   000F82  500B               	movf	(___flge@ff2+1)^0,w,c
  7561   000F84  5807               	subwfb	(___flge@ff1+1)^0,w,c
  7562   000F86  500C               	movf	(___flge@ff2+2)^0,w,c
  7563   000F88  5808               	subwfb	(___flge@ff1+2)^0,w,c
  7564   000F8A  500D               	movf	(___flge@ff2+3)^0,w,c
  7565   000F8C  5809               	subwfb	(___flge@ff1+3)^0,w,c
  7566   000F8E  B0D8               	btfsc	status,0,c
  7567   000F90  EFCC  F007         	goto	u4311
  7568   000F94  EFCE  F007         	goto	u4310
  7569   000F98                     u4311:
  7570   000F98  EFD1  F007         	goto	l4252
  7571   000F9C                     u4310:
  7572   000F9C  90D8               	bcf	status,0,c
  7573   000F9E  EFD2  F007         	goto	l889
  7574   000FA2                     l4252:
  7575   000FA2  80D8               	bsf	status,0,c
  7576   000FA4                     l889:
  7577   000FA4  0012               	return		;funcret
  7578   000FA6                     __end_of___flge:
  7579                           	callstack 0
  7580                           
  7581 ;; *************** function ___fltol *****************
  7582 ;; Defined at:
  7583 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  7584 ;; Parameters:    Size  Location     Type
  7585 ;;  f1              4   60[COMRAM] unsigned char 
  7586 ;; Auto vars:     Size  Location     Type
  7587 ;;  exp1            1   69[COMRAM] unsigned char 
  7588 ;;  sign1           1   68[COMRAM] unsigned char 
  7589 ;; Return value:  Size  Location     Type
  7590 ;;                  4   60[COMRAM] long 
  7591 ;; Registers used:
  7592 ;;		wreg, status,2, status,0
  7593 ;; Tracked objects:
  7594 ;;		On entry : 0/0
  7595 ;;		On exit  : 0/0
  7596 ;;		Unchanged: 0/0
  7597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7599 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7600 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7601 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7602 ;;Total ram usage:       10 bytes
  7603 ;; Hardware stack levels used: 1
  7604 ;; Hardware stack levels required when called: 4
  7605 ;; This function calls:
  7606 ;;		Nothing
  7607 ;; This function is called by:
  7608 ;;		_TMR1_Initialize
  7609 ;; This function uses a non-reentrant model
  7610 ;;
  7611                           
  7612                           	psect	text33
  7613   000D9C                     __ptext33:
  7614                           	callstack 0
  7615   000D9C                     ___fltol:
  7616                           	callstack 24
  7617   000D9C  343F               	rlcf	(___fltol@f1+2)^0,w,c
  7618   000D9E  3440               	rlcf	(___fltol@f1+3)^0,w,c
  7619   000DA0  6E46               	movwf	___fltol@exp1^0,c
  7620   000DA2  5046               	movf	___fltol@exp1^0,w,c
  7621   000DA4  A4D8               	btfss	status,2,c
  7622   000DA6  EFD7  F006         	goto	u4681
  7623   000DAA  EFD9  F006         	goto	u4680
  7624   000DAE                     u4681:
  7625   000DAE  EFE3  F006         	goto	l4504
  7626   000DB2                     u4680:
  7627   000DB2                     l4500:
  7628   000DB2  0E00               	movlw	0
  7629   000DB4  6E3D               	movwf	?___fltol^0,c
  7630   000DB6  0E00               	movlw	0
  7631   000DB8  6E3E               	movwf	(?___fltol+1)^0,c
  7632   000DBA  0E00               	movlw	0
  7633   000DBC  6E3F               	movwf	(?___fltol+2)^0,c
  7634   000DBE  0E00               	movlw	0
  7635   000DC0  6E40               	movwf	(?___fltol+3)^0,c
  7636   000DC2  EF50  F007         	goto	l916
  7637   000DC6                     l4504:
  7638   000DC6  C03D  F041         	movff	___fltol@f1,??___fltol
  7639   000DCA  C03E  F042         	movff	___fltol@f1+1,??___fltol+1
  7640   000DCE  C03F  F043         	movff	___fltol@f1+2,??___fltol+2
  7641   000DD2  C040  F044         	movff	___fltol@f1+3,??___fltol+3
  7642   000DD6  0E20               	movlw	32
  7643   000DD8  EFF3  F006         	goto	u4690
  7644   000DDC                     u4695:
  7645   000DDC  90D8               	bcf	status,0,c
  7646   000DDE  3244               	rrcf	(??___fltol+3)^0,f,c
  7647   000DE0  3243               	rrcf	(??___fltol+2)^0,f,c
  7648   000DE2  3242               	rrcf	(??___fltol+1)^0,f,c
  7649   000DE4  3241               	rrcf	??___fltol^0,f,c
  7650   000DE6                     u4690:
  7651   000DE6  2EE8               	decfsz	wreg,f,c
  7652   000DE8  EFEE  F006         	goto	u4695
  7653   000DEC  5041               	movf	??___fltol^0,w,c
  7654   000DEE  6E45               	movwf	___fltol@sign1^0,c
  7655   000DF0  8E3F               	bsf	(___fltol@f1+2)^0,7,c
  7656   000DF2  0EFF               	movlw	255
  7657   000DF4  163D               	andwf	___fltol@f1^0,f,c
  7658   000DF6  0EFF               	movlw	255
  7659   000DF8  163E               	andwf	(___fltol@f1+1)^0,f,c
  7660   000DFA  0EFF               	movlw	255
  7661   000DFC  163F               	andwf	(___fltol@f1+2)^0,f,c
  7662   000DFE  0E00               	movlw	0
  7663   000E00  1640               	andwf	(___fltol@f1+3)^0,f,c
  7664   000E02  0E96               	movlw	150
  7665   000E04  5E46               	subwf	___fltol@exp1^0,f,c
  7666   000E06  BE46               	btfsc	___fltol@exp1^0,7,c
  7667   000E08  EF0A  F007         	goto	u4700
  7668   000E0C  EF08  F007         	goto	u4701
  7669   000E10                     u4701:
  7670   000E10  EF20  F007         	goto	l4524
  7671   000E14                     u4700:
  7672   000E14  5046               	movf	___fltol@exp1^0,w,c
  7673   000E16  0A80               	xorlw	128
  7674   000E18  0F97               	addlw	151
  7675   000E1A  B0D8               	btfsc	status,0,c
  7676   000E1C  EF12  F007         	goto	u4711
  7677   000E20  EF14  F007         	goto	u4710
  7678   000E24                     u4711:
  7679   000E24  EF16  F007         	goto	l4520
  7680   000E28                     u4710:
  7681   000E28  EFD9  F006         	goto	l4500
  7682   000E2C                     l4520:
  7683   000E2C  90D8               	bcf	status,0,c
  7684   000E2E  3240               	rrcf	(___fltol@f1+3)^0,f,c
  7685   000E30  323F               	rrcf	(___fltol@f1+2)^0,f,c
  7686   000E32  323E               	rrcf	(___fltol@f1+1)^0,f,c
  7687   000E34  323D               	rrcf	___fltol@f1^0,f,c
  7688   000E36  3E46               	incfsz	___fltol@exp1^0,f,c
  7689   000E38  EF16  F007         	goto	l4520
  7690   000E3C  EF38  F007         	goto	l4534
  7691   000E40                     l4524:
  7692   000E40  0E1F               	movlw	31
  7693   000E42  6446               	cpfsgt	___fltol@exp1^0,c
  7694   000E44  EF26  F007         	goto	u4721
  7695   000E48  EF28  F007         	goto	u4720
  7696   000E4C                     u4721:
  7697   000E4C  EF30  F007         	goto	l4532
  7698   000E50                     u4720:
  7699   000E50  EFD9  F006         	goto	l4500
  7700   000E54                     l4530:
  7701   000E54  90D8               	bcf	status,0,c
  7702   000E56  363D               	rlcf	___fltol@f1^0,f,c
  7703   000E58  363E               	rlcf	(___fltol@f1+1)^0,f,c
  7704   000E5A  363F               	rlcf	(___fltol@f1+2)^0,f,c
  7705   000E5C  3640               	rlcf	(___fltol@f1+3)^0,f,c
  7706   000E5E  0646               	decf	___fltol@exp1^0,f,c
  7707   000E60                     l4532:
  7708   000E60  5046               	movf	___fltol@exp1^0,w,c
  7709   000E62  A4D8               	btfss	status,2,c
  7710   000E64  EF36  F007         	goto	u4731
  7711   000E68  EF38  F007         	goto	u4730
  7712   000E6C                     u4731:
  7713   000E6C  EF2A  F007         	goto	l4530
  7714   000E70                     u4730:
  7715   000E70                     l4534:
  7716   000E70  5045               	movf	___fltol@sign1^0,w,c
  7717   000E72  B4D8               	btfsc	status,2,c
  7718   000E74  EF3E  F007         	goto	u4741
  7719   000E78  EF40  F007         	goto	u4740
  7720   000E7C                     u4741:
  7721   000E7C  EF48  F007         	goto	l4538
  7722   000E80                     u4740:
  7723   000E80  1E40               	comf	(___fltol@f1+3)^0,f,c
  7724   000E82  1E3F               	comf	(___fltol@f1+2)^0,f,c
  7725   000E84  1E3E               	comf	(___fltol@f1+1)^0,f,c
  7726   000E86  6C3D               	negf	___fltol@f1^0,c
  7727   000E88  0E00               	movlw	0
  7728   000E8A  223E               	addwfc	(___fltol@f1+1)^0,f,c
  7729   000E8C  223F               	addwfc	(___fltol@f1+2)^0,f,c
  7730   000E8E  2240               	addwfc	(___fltol@f1+3)^0,f,c
  7731   000E90                     l4538:
  7732   000E90  C03D  F03D         	movff	___fltol@f1,?___fltol
  7733   000E94  C03E  F03E         	movff	___fltol@f1+1,?___fltol+1
  7734   000E98  C03F  F03F         	movff	___fltol@f1+2,?___fltol+2
  7735   000E9C  C040  F040         	movff	___fltol@f1+3,?___fltol+3
  7736   000EA0                     l916:
  7737   000EA0  0012               	return		;funcret
  7738   000EA2                     __end_of___fltol:
  7739                           	callstack 0
  7740                           
  7741 ;; *************** function _TMR1_SetInterruptHandler *****************
  7742 ;; Defined at:
  7743 ;;		line 168 in file "mcc_generated_files/tmr1.c"
  7744 ;; Parameters:    Size  Location     Type
  7745 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  7746 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;		None
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      void 
  7751 ;; Registers used:
  7752 ;;		wreg, status,2, status,0
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7758 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7761 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7762 ;;Total ram usage:        2 bytes
  7763 ;; Hardware stack levels used: 1
  7764 ;; Hardware stack levels required when called: 4
  7765 ;; This function calls:
  7766 ;;		Nothing
  7767 ;; This function is called by:
  7768 ;;		_TMR1_Initialize
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text34
  7773   001C60                     __ptext34:
  7774                           	callstack 0
  7775   001C60                     _TMR1_SetInterruptHandler:
  7776                           	callstack 24
  7777   001C60                     
  7778                           ;mcc_generated_files/tmr1.c: 169:     TMR1_InterruptHandler = InterruptHandler;
  7779   001C60  C006  F0FA         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  7780   001C64  C007  F0FB         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  7781   001C68  0012               	return		;funcret
  7782   001C6A                     __end_of_TMR1_SetInterruptHandler:
  7783                           	callstack 0
  7784                           
  7785 ;; *************** function _SPI_Initialize *****************
  7786 ;; Defined at:
  7787 ;;		line 63 in file "mcc_generated_files/spi.c"
  7788 ;; Parameters:    Size  Location     Type
  7789 ;;		None
  7790 ;; Auto vars:     Size  Location     Type
  7791 ;;		None
  7792 ;; Return value:  Size  Location     Type
  7793 ;;                  1    wreg      void 
  7794 ;; Registers used:
  7795 ;;		wreg, status,2
  7796 ;; Tracked objects:
  7797 ;;		On entry : 0/0
  7798 ;;		On exit  : 0/0
  7799 ;;		Unchanged: 0/0
  7800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7801 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7803 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7804 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7805 ;;Total ram usage:        0 bytes
  7806 ;; Hardware stack levels used: 1
  7807 ;; Hardware stack levels required when called: 4
  7808 ;; This function calls:
  7809 ;;		Nothing
  7810 ;; This function is called by:
  7811 ;;		_SYSTEM_Initialize
  7812 ;; This function uses a non-reentrant model
  7813 ;;
  7814                           
  7815                           	psect	text35
  7816   001C46                     __ptext35:
  7817                           	callstack 0
  7818   001C46                     _SPI_Initialize:
  7819                           	callstack 25
  7820   001C46                     
  7821                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  7822   001C46  0EC0               	movlw	192
  7823   001C48  6EC7               	movwf	199,c	;volatile
  7824                           
  7825                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  7826   001C4A  0E30               	movlw	48
  7827   001C4C  6EC6               	movwf	198,c	;volatile
  7828                           
  7829                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  7830   001C4E  0E00               	movlw	0
  7831   001C50  6EC8               	movwf	200,c	;volatile
  7832   001C52  0012               	return		;funcret
  7833   001C54                     __end_of_SPI_Initialize:
  7834                           	callstack 0
  7835                           
  7836 ;; *************** function _PIN_MANAGER_Initialize *****************
  7837 ;; Defined at:
  7838 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  7839 ;; Parameters:    Size  Location     Type
  7840 ;;		None
  7841 ;; Auto vars:     Size  Location     Type
  7842 ;;		None
  7843 ;; Return value:  Size  Location     Type
  7844 ;;                  1    wreg      void 
  7845 ;; Registers used:
  7846 ;;		wreg, status,2
  7847 ;; Tracked objects:
  7848 ;;		On entry : 0/0
  7849 ;;		On exit  : 0/0
  7850 ;;		Unchanged: 0/0
  7851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7856 ;;Total ram usage:        0 bytes
  7857 ;; Hardware stack levels used: 1
  7858 ;; Hardware stack levels required when called: 4
  7859 ;; This function calls:
  7860 ;;		Nothing
  7861 ;; This function is called by:
  7862 ;;		_SYSTEM_Initialize
  7863 ;; This function uses a non-reentrant model
  7864 ;;
  7865                           
  7866                           	psect	text36
  7867   001BDE                     __ptext36:
  7868                           	callstack 0
  7869   001BDE                     _PIN_MANAGER_Initialize:
  7870                           	callstack 25
  7871   001BDE                     
  7872                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  7873   001BDE  0E00               	movlw	0
  7874   001BE0  6E89               	movwf	137,c	;volatile
  7875                           
  7876                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  7877   001BE2  0E00               	movlw	0
  7878   001BE4  6E8A               	movwf	138,c	;volatile
  7879                           
  7880                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  7881   001BE6  0E2C               	movlw	44
  7882   001BE8  6E8B               	movwf	139,c	;volatile
  7883   001BEA                     
  7884                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  7885   001BEA  6892               	setf	146,c	;volatile
  7886   001BEC                     
  7887                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  7888   001BEC  6893               	setf	147,c	;volatile
  7889                           
  7890                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x92;
  7891   001BEE  0E92               	movlw	146
  7892   001BF0  6E94               	movwf	148,c	;volatile
  7893                           
  7894                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  7895   001BF2  0E0A               	movlw	10
  7896   001BF4  6E7F               	movwf	127,c	;volatile
  7897                           
  7898                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  7899   001BF6  0E1F               	movlw	31
  7900   001BF8  6E7E               	movwf	126,c	;volatile
  7901   001BFA                     
  7902                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  7903   001BFA  687C               	setf	124,c	;volatile
  7904   001BFC                     
  7905                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  7906   001BFC  9EF1               	bcf	241,7,c	;volatile
  7907   001BFE  0012               	return		;funcret
  7908   001C00                     __end_of_PIN_MANAGER_Initialize:
  7909                           	callstack 0
  7910                           
  7911 ;; *************** function _OSCILLATOR_Initialize *****************
  7912 ;; Defined at:
  7913 ;;		line 118 in file "mcc_generated_files/mcc.c"
  7914 ;; Parameters:    Size  Location     Type
  7915 ;;		None
  7916 ;; Auto vars:     Size  Location     Type
  7917 ;;		None
  7918 ;; Return value:  Size  Location     Type
  7919 ;;                  1    wreg      void 
  7920 ;; Registers used:
  7921 ;;		wreg, status,2
  7922 ;; Tracked objects:
  7923 ;;		On entry : 0/0
  7924 ;;		On exit  : 0/0
  7925 ;;		Unchanged: 0/0
  7926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7931 ;;Total ram usage:        0 bytes
  7932 ;; Hardware stack levels used: 1
  7933 ;; Hardware stack levels required when called: 4
  7934 ;; This function calls:
  7935 ;;		Nothing
  7936 ;; This function is called by:
  7937 ;;		_SYSTEM_Initialize
  7938 ;; This function uses a non-reentrant model
  7939 ;;
  7940                           
  7941                           	psect	text37
  7942   001C6A                     __ptext37:
  7943                           	callstack 0
  7944   001C6A                     _OSCILLATOR_Initialize:
  7945                           	callstack 25
  7946   001C6A                     
  7947                           ;mcc_generated_files/mcc.c: 121:     OSCCON = 0x6A;
  7948   001C6A  0E6A               	movlw	106
  7949   001C6C  6ED3               	movwf	211,c	;volatile
  7950                           
  7951                           ;mcc_generated_files/mcc.c: 123:     OSCTUNE = 0x00;
  7952   001C6E  0E00               	movlw	0
  7953   001C70  6E9B               	movwf	155,c	;volatile
  7954   001C72  0012               	return		;funcret
  7955   001C74                     __end_of_OSCILLATOR_Initialize:
  7956                           	callstack 0
  7957                           
  7958 ;; *************** function _INTERRUPT_Initialize *****************
  7959 ;; Defined at:
  7960 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  7961 ;; Parameters:    Size  Location     Type
  7962 ;;		None
  7963 ;; Auto vars:     Size  Location     Type
  7964 ;;		None
  7965 ;; Return value:  Size  Location     Type
  7966 ;;                  1    wreg      void 
  7967 ;; Registers used:
  7968 ;;		None
  7969 ;; Tracked objects:
  7970 ;;		On entry : 0/0
  7971 ;;		On exit  : 0/0
  7972 ;;		Unchanged: 0/0
  7973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7974 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7975 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7976 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7977 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7978 ;;Total ram usage:        0 bytes
  7979 ;; Hardware stack levels used: 1
  7980 ;; Hardware stack levels required when called: 4
  7981 ;; This function calls:
  7982 ;;		Nothing
  7983 ;; This function is called by:
  7984 ;;		_SYSTEM_Initialize
  7985 ;; This function uses a non-reentrant model
  7986 ;;
  7987                           
  7988                           	psect	text38
  7989   001C92                     __ptext38:
  7990                           	callstack 0
  7991   001C92                     _INTERRUPT_Initialize:
  7992                           	callstack 25
  7993   001C92                     
  7994                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  7995   001C92  9ED0               	bcf	208,7,c	;volatile
  7996   001C94  0012               	return		;funcret
  7997   001C96                     __end_of_INTERRUPT_Initialize:
  7998                           	callstack 0
  7999                           
  8000 ;; *************** function _EUSART_Initialize *****************
  8001 ;; Defined at:
  8002 ;;		line 75 in file "mcc_generated_files/eusart.c"
  8003 ;; Parameters:    Size  Location     Type
  8004 ;;		None
  8005 ;; Auto vars:     Size  Location     Type
  8006 ;;		None
  8007 ;; Return value:  Size  Location     Type
  8008 ;;                  1    wreg      void 
  8009 ;; Registers used:
  8010 ;;		wreg, status,2, status,0, cstack
  8011 ;; Tracked objects:
  8012 ;;		On entry : 0/0
  8013 ;;		On exit  : 0/0
  8014 ;;		Unchanged: 0/0
  8015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8017 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8019 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8020 ;;Total ram usage:        0 bytes
  8021 ;; Hardware stack levels used: 1
  8022 ;; Hardware stack levels required when called: 5
  8023 ;; This function calls:
  8024 ;;		_EUSART_SetRxInterruptHandler
  8025 ;;		_EUSART_SetTxInterruptHandler
  8026 ;; This function is called by:
  8027 ;;		_SYSTEM_Initialize
  8028 ;; This function uses a non-reentrant model
  8029 ;;
  8030                           
  8031                           	psect	text39
  8032   001976                     __ptext39:
  8033                           	callstack 0
  8034   001976                     _EUSART_Initialize:
  8035                           	callstack 24
  8036   001976                     
  8037                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RC1IE = 0;
  8038   001976  9A9D               	bcf	157,5,c	;volatile
  8039                           
  8040                           ;mcc_generated_files/eusart.c: 79:     PIE1bits.TX1IE = 0;
  8041   001978  989D               	bcf	157,4,c	;volatile
  8042   00197A                     
  8043                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  8044   00197A  0E00               	movlw	0
  8045   00197C  6E06               	movwf	EUSART_SetTxInterruptHandler@handler^0,c
  8046   00197E  0E00               	movlw	0
  8047   001980  6E07               	movwf	(EUSART_SetTxInterruptHandler@handler+1)^0,c
  8048   001982  EC3A  F00E         	call	_EUSART_SetTxInterruptHandler	;wreg free
  8049                           
  8050                           ;mcc_generated_files/eusart.c: 82:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  8051   001986  0E00               	movlw	0
  8052   001988  6E06               	movwf	EUSART_SetRxInterruptHandler@handler^0,c
  8053   00198A  0E00               	movlw	0
  8054   00198C  6E07               	movwf	(EUSART_SetRxInterruptHandler@handler+1)^0,c
  8055   00198E  EC3F  F00E         	call	_EUSART_SetRxInterruptHandler	;wreg free
  8056   001992                     
  8057                           ;mcc_generated_files/eusart.c: 87:     BAUDCON = 0x08;
  8058   001992  0E08               	movlw	8
  8059   001994  6EB8               	movwf	184,c	;volatile
  8060   001996                     
  8061                           ;mcc_generated_files/eusart.c: 90:     RCSTA = 0x90;
  8062   001996  0E90               	movlw	144
  8063   001998  6EAB               	movwf	171,c	;volatile
  8064   00199A                     
  8065                           ;mcc_generated_files/eusart.c: 93:     TXSTA = 0x24;
  8066   00199A  0E24               	movlw	36
  8067   00199C  6EAC               	movwf	172,c	;volatile
  8068   00199E                     
  8069                           ;mcc_generated_files/eusart.c: 96:     SPBRG = 0xCF;
  8070   00199E  0ECF               	movlw	207
  8071   0019A0  6EAF               	movwf	175,c	;volatile
  8072   0019A2                     
  8073                           ;mcc_generated_files/eusart.c: 99:     SPBRGH = 0x00;
  8074   0019A2  0E00               	movlw	0
  8075   0019A4  6EB0               	movwf	176,c	;volatile
  8076   0019A6                     
  8077                           ;mcc_generated_files/eusart.c: 103:     eusartTxHead = 0;
  8078   0019A6  0E00               	movlw	0
  8079   0019A8  6E58               	movwf	_eusartTxHead^0,c	;volatile
  8080   0019AA                     
  8081                           ;mcc_generated_files/eusart.c: 104:     eusartTxTail = 0;
  8082   0019AA  0E00               	movlw	0
  8083   0019AC  6E57               	movwf	_eusartTxTail^0,c	;volatile
  8084   0019AE                     
  8085                           ;mcc_generated_files/eusart.c: 105:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  8086   0019AE  0E08               	movlw	8
  8087   0019B0  6E56               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  8088   0019B2                     
  8089                           ;mcc_generated_files/eusart.c: 107:     eusartRxHead = 0;
  8090   0019B2  0E00               	movlw	0
  8091   0019B4  6E55               	movwf	_eusartRxHead^0,c	;volatile
  8092   0019B6                     
  8093                           ;mcc_generated_files/eusart.c: 108:     eusartRxTail = 0;
  8094   0019B6  0E00               	movlw	0
  8095   0019B8  0100               	movlb	0	; () banked
  8096   0019BA  6FB2               	movwf	_eusartRxTail& (0+255),b	;volatile
  8097   0019BC                     
  8098                           ; BSR set to: 0
  8099                           ;mcc_generated_files/eusart.c: 109:     eusartRxCount = 0;
  8100   0019BC  0E00               	movlw	0
  8101   0019BE  6FB1               	movwf	_eusartRxCount& (0+255),b	;volatile
  8102   0019C0                     
  8103                           ; BSR set to: 0
  8104                           ;mcc_generated_files/eusart.c: 112:     PIE1bits.RC1IE = 1;
  8105   0019C0  8A9D               	bsf	157,5,c	;volatile
  8106   0019C2                     
  8107                           ; BSR set to: 0
  8108   0019C2  0012               	return		;funcret
  8109   0019C4                     __end_of_EUSART_Initialize:
  8110                           	callstack 0
  8111                           
  8112 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  8113 ;; Defined at:
  8114 ;;		line 212 in file "mcc_generated_files/eusart.c"
  8115 ;; Parameters:    Size  Location     Type
  8116 ;;  handler         2    5[COMRAM] PTR void 
  8117 ;; Auto vars:     Size  Location     Type
  8118 ;;		None
  8119 ;; Return value:  Size  Location     Type
  8120 ;;                  1    wreg      void 
  8121 ;; Registers used:
  8122 ;;		wreg, status,2, status,0
  8123 ;; Tracked objects:
  8124 ;;		On entry : 0/0
  8125 ;;		On exit  : 0/0
  8126 ;;		Unchanged: 0/0
  8127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8131 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8132 ;;Total ram usage:        2 bytes
  8133 ;; Hardware stack levels used: 1
  8134 ;; Hardware stack levels required when called: 4
  8135 ;; This function calls:
  8136 ;;		Nothing
  8137 ;; This function is called by:
  8138 ;;		_EUSART_Initialize
  8139 ;; This function uses a non-reentrant model
  8140 ;;
  8141                           
  8142                           	psect	text40
  8143   001C74                     __ptext40:
  8144                           	callstack 0
  8145   001C74                     _EUSART_SetTxInterruptHandler:
  8146                           	callstack 24
  8147   001C74                     
  8148                           ;mcc_generated_files/eusart.c: 213:     EUSART_TxDefaultInterruptHandler = handler;
  8149   001C74  C006  F0FE         	movff	EUSART_SetTxInterruptHandler@handler,_EUSART_TxDefaultInterruptHandler
  8150   001C78  C007  F0FF         	movff	EUSART_SetTxInterruptHandler@handler+1,_EUSART_TxDefaultInterruptHandler+1
  8151   001C7C  0012               	return		;funcret
  8152   001C7E                     __end_of_EUSART_SetTxInterruptHandler:
  8153                           	callstack 0
  8154                           
  8155 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  8156 ;; Defined at:
  8157 ;;		line 216 in file "mcc_generated_files/eusart.c"
  8158 ;; Parameters:    Size  Location     Type
  8159 ;;  handler         2    5[COMRAM] PTR void 
  8160 ;; Auto vars:     Size  Location     Type
  8161 ;;		None
  8162 ;; Return value:  Size  Location     Type
  8163 ;;                  1    wreg      void 
  8164 ;; Registers used:
  8165 ;;		wreg, status,2, status,0
  8166 ;; Tracked objects:
  8167 ;;		On entry : 0/0
  8168 ;;		On exit  : 0/0
  8169 ;;		Unchanged: 0/0
  8170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8171 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8172 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8174 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8175 ;;Total ram usage:        2 bytes
  8176 ;; Hardware stack levels used: 1
  8177 ;; Hardware stack levels required when called: 4
  8178 ;; This function calls:
  8179 ;;		Nothing
  8180 ;; This function is called by:
  8181 ;;		_EUSART_Initialize
  8182 ;; This function uses a non-reentrant model
  8183 ;;
  8184                           
  8185                           	psect	text41
  8186   001C7E                     __ptext41:
  8187                           	callstack 0
  8188   001C7E                     _EUSART_SetRxInterruptHandler:
  8189                           	callstack 24
  8190   001C7E                     
  8191                           ;mcc_generated_files/eusart.c: 217:     EUSART_RxDefaultInterruptHandler = handler;
  8192   001C7E  C006  F0FC         	movff	EUSART_SetRxInterruptHandler@handler,_EUSART_RxDefaultInterruptHandler
  8193   001C82  C007  F0FD         	movff	EUSART_SetRxInterruptHandler@handler+1,_EUSART_RxDefaultInterruptHandler+1
  8194   001C86  0012               	return		;funcret
  8195   001C88                     __end_of_EUSART_SetRxInterruptHandler:
  8196                           	callstack 0
  8197                           
  8198 ;; *************** function _INTERRUPT_InterruptManager *****************
  8199 ;; Defined at:
  8200 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  8201 ;; Parameters:    Size  Location     Type
  8202 ;;		None
  8203 ;; Auto vars:     Size  Location     Type
  8204 ;;		None
  8205 ;; Return value:  Size  Location     Type
  8206 ;;                  1    wreg      void 
  8207 ;; Registers used:
  8208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8209 ;; Tracked objects:
  8210 ;;		On entry : 0/0
  8211 ;;		On exit  : 0/0
  8212 ;;		Unchanged: 0/0
  8213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8216 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8217 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8218 ;;Total ram usage:        4 bytes
  8219 ;; Hardware stack levels used: 1
  8220 ;; Hardware stack levels required when called: 3
  8221 ;; This function calls:
  8222 ;;		_TMR1_ISR
  8223 ;;		_btGetData
  8224 ;; This function is called by:
  8225 ;;		Interrupt level 2
  8226 ;; This function uses a non-reentrant model
  8227 ;;
  8228                           
  8229                           	psect	intcode
  8230   000008                     __pintcode:
  8231                           	callstack 0
  8232   000008                     _INTERRUPT_InterruptManager:
  8233                           	callstack 21
  8234                           
  8235                           ;incstack = 0
  8236   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8237   00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
  8238   00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  8239   000012  CFD9 F004          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  8240   000016  CFDA F005          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  8241   00001A                     
  8242                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  8243   00001A  ACF2               	btfss	242,6,c	;volatile
  8244   00001C  EF12  F000         	goto	i2u356_41
  8245   000020  EF14  F000         	goto	i2u356_40
  8246   000024                     i2u356_41:
  8247   000024  EF4B  F000         	goto	i2l288
  8248   000028                     i2u356_40:
  8249   000028                     
  8250                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  8251   000028  A09D               	btfss	157,0,c	;volatile
  8252   00002A  EF19  F000         	goto	i2u357_41
  8253   00002E  EF1B  F000         	goto	i2u357_40
  8254   000032                     i2u357_41:
  8255   000032  EF26  F000         	goto	i2l282
  8256   000036                     i2u357_40:
  8257   000036  A09E               	btfss	158,0,c	;volatile
  8258   000038  EF20  F000         	goto	i2u358_41
  8259   00003C  EF22  F000         	goto	i2u358_40
  8260   000040                     i2u358_41:
  8261   000040  EF26  F000         	goto	i2l282
  8262   000044                     i2u358_40:
  8263   000044                     
  8264                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  8265   000044  EC60  F00D         	call	_TMR1_ISR	;wreg free
  8266                           
  8267                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  8268   000048  EF4B  F000         	goto	i2l288
  8269   00004C                     i2l282:
  8270   00004C  A89D               	btfss	157,4,c	;volatile
  8271   00004E  EF2B  F000         	goto	i2u359_41
  8272   000052  EF2D  F000         	goto	i2u359_40
  8273   000056                     i2u359_41:
  8274   000056  EF37  F000         	goto	i2l284
  8275   00005A                     i2u359_40:
  8276   00005A                     
  8277                           ;mcc_generated_files/interrupt_manager.c: 69:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_TxDefaultInterruptHandler();
  8278   00005A  A89E               	btfss	158,4,c	;volatile
  8279   00005C  EF32  F000         	goto	i2u360_41
  8280   000060  EF34  F000         	goto	i2u360_40
  8281   000064                     i2u360_41:
  8282   000064  EF37  F000         	goto	i2l284
  8283   000068                     i2u360_40:
  8284   000068                     
  8285                           ;mcc_generated_files/interrupt_manager.c: 74:             PIR1bits.TX1IF = 0;
  8286   000068  989E               	bcf	158,4,c	;volatile
  8287                           
  8288                           ;mcc_generated_files/interrupt_manager.c: 75:         }
  8289   00006A  EF4B  F000         	goto	i2l288
  8290   00006E                     i2l284:
  8291   00006E  AA9D               	btfss	157,5,c	;volatile
  8292   000070  EF3C  F000         	goto	i2u361_41
  8293   000074  EF3E  F000         	goto	i2u361_40
  8294   000078                     i2u361_41:
  8295   000078  EF4B  F000         	goto	i2l283
  8296   00007C                     i2u361_40:
  8297   00007C  AA9E               	btfss	158,5,c	;volatile
  8298   00007E  EF43  F000         	goto	i2u362_41
  8299   000082  EF45  F000         	goto	i2u362_40
  8300   000086                     i2u362_41:
  8301   000086  EF4B  F000         	goto	i2l283
  8302   00008A                     i2u362_40:
  8303   00008A                     
  8304                           ;mcc_generated_files/interrupt_manager.c: 79:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             btGetData(RCREG);
  8305   00008A  50AE               	movf	174,w,c	;volatile
  8306   00008C  EC33  F00B         	call	_btGetData
  8307   000090                     
  8308                           ;mcc_generated_files/interrupt_manager.c: 84:             PIR1bits.RC1IF = 0;
  8309   000090  9A9E               	bcf	158,5,c	;volatile
  8310   000092  EF4B  F000         	goto	i2l288
  8311   000096                     i2l283:
  8312   000096                     i2l288:
  8313   000096  C005  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  8314   00009A  C004  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  8315   00009E  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  8316   0000A2  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  8317   0000A6  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8318   0000A8  0011               	retfie		f
  8319   0000AA                     __end_of_INTERRUPT_InterruptManager:
  8320                           	callstack 0
  8321                           
  8322 ;; *************** function _btGetData *****************
  8323 ;; Defined at:
  8324 ;;		line 363 in file "main.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;  rcv             1    wreg     unsigned char 
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;  rcv             1    0[COMRAM] unsigned char 
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  1    wreg      void 
  8331 ;; Registers used:
  8332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;Total ram usage:        1 bytes
  8343 ;; Hardware stack levels used: 1
  8344 ;; This function calls:
  8345 ;;		Nothing
  8346 ;; This function is called by:
  8347 ;;		_INTERRUPT_InterruptManager
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text43
  8352   001666                     __ptext43:
  8353                           	callstack 0
  8354   001666                     _btGetData:
  8355                           	callstack 23
  8356                           
  8357                           ;incstack = 0
  8358                           ;btGetData@rcv stored from wreg
  8359   001666  6E01               	movwf	btGetData@rcv^0,c
  8360   001668                     
  8361                           ;main.c: 364:     if(rcv == 'H' && uartBufferIndex == 0) {
  8362   001668  0E48               	movlw	72
  8363   00166A  1801               	xorwf	btGetData@rcv^0,w,c
  8364   00166C  A4D8               	btfss	status,2,c
  8365   00166E  EF3B  F00B         	goto	i2u306_41
  8366   001672  EF3D  F00B         	goto	i2u306_40
  8367   001676                     i2u306_41:
  8368   001676  EF4E  F00B         	goto	i2l3520
  8369   00167A                     i2u306_40:
  8370   00167A  5054               	movf	_uartBufferIndex^0,w,c
  8371   00167C  A4D8               	btfss	status,2,c
  8372   00167E  EF43  F00B         	goto	i2u307_41
  8373   001682  EF45  F00B         	goto	i2u307_40
  8374   001686                     i2u307_41:
  8375   001686  EF4E  F00B         	goto	i2l3520
  8376   00168A                     i2u307_40:
  8377   00168A                     
  8378                           ;main.c: 365:         uartBuffer[uartBufferIndex] = 'H';
  8379   00168A  5054               	movf	_uartBufferIndex^0,w,c
  8380   00168C  0F80               	addlw	low _uartBuffer
  8381   00168E  6ED9               	movwf	fsr2l,c
  8382   001690  6ADA               	clrf	fsr2h,c
  8383   001692  0E48               	movlw	72
  8384   001694  6EDF               	movwf	indf2,c
  8385   001696                     i2l3518:
  8386                           
  8387                           ;main.c: 366:         uartBufferIndex++;
  8388   001696  2A54               	incf	_uartBufferIndex^0,f,c
  8389                           
  8390                           ;main.c: 367:     }
  8391   001698  EF81  F00B         	goto	i2l524
  8392   00169C                     i2l3520:
  8393   00169C  5054               	movf	_uartBufferIndex^0,w,c
  8394   00169E  B4D8               	btfsc	status,2,c
  8395   0016A0  EF54  F00B         	goto	i2u308_41
  8396   0016A4  EF56  F00B         	goto	i2u308_40
  8397   0016A8                     i2u308_41:
  8398   0016A8  EF66  F00B         	goto	i2l3528
  8399   0016AC                     i2u308_40:
  8400   0016AC  0E07               	movlw	7
  8401   0016AE  6054               	cpfslt	_uartBufferIndex^0,c
  8402   0016B0  EF5C  F00B         	goto	i2u309_41
  8403   0016B4  EF5E  F00B         	goto	i2u309_40
  8404   0016B8                     i2u309_41:
  8405   0016B8  EF66  F00B         	goto	i2l3528
  8406   0016BC                     i2u309_40:
  8407   0016BC                     
  8408                           ;main.c: 369:         uartBuffer[uartBufferIndex++] = rcv;
  8409   0016BC  5054               	movf	_uartBufferIndex^0,w,c
  8410   0016BE  0F80               	addlw	low _uartBuffer
  8411   0016C0  6ED9               	movwf	fsr2l,c
  8412   0016C2  6ADA               	clrf	fsr2h,c
  8413   0016C4  C001  FFDF         	movff	btGetData@rcv,indf2
  8414   0016C8  EF4B  F00B         	goto	i2l3518
  8415   0016CC                     i2l3528:
  8416   0016CC  0E07               	movlw	7
  8417   0016CE  1854               	xorwf	_uartBufferIndex^0,w,c
  8418   0016D0  A4D8               	btfss	status,2,c
  8419   0016D2  EF6D  F00B         	goto	i2u310_41
  8420   0016D6  EF6F  F00B         	goto	i2u310_40
  8421   0016DA                     i2u310_41:
  8422   0016DA  EF81  F00B         	goto	i2l524
  8423   0016DE                     i2u310_40:
  8424   0016DE                     
  8425                           ;main.c: 372:         if(rcv == ';') {
  8426   0016DE  0E3B               	movlw	59
  8427   0016E0  1801               	xorwf	btGetData@rcv^0,w,c
  8428   0016E2  A4D8               	btfss	status,2,c
  8429   0016E4  EF76  F00B         	goto	i2u311_41
  8430   0016E8  EF78  F00B         	goto	i2u311_40
  8431   0016EC                     i2u311_41:
  8432   0016EC  EF81  F00B         	goto	i2l521
  8433   0016F0                     i2u311_40:
  8434   0016F0                     
  8435                           ;main.c: 373:             uartBuffer[6] = ';';
  8436   0016F0  0E3B               	movlw	59
  8437   0016F2  0100               	movlb	0	; () banked
  8438   0016F4  6F86               	movwf	(_uartBuffer+6)& (0+255),b
  8439                           
  8440                           ;main.c: 374:             uartBufferIndex = 0;
  8441   0016F6  0E00               	movlw	0
  8442   0016F8  6E54               	movwf	_uartBufferIndex^0,c
  8443                           
  8444                           ;main.c: 375:             btTimeSet = 1;
  8445   0016FA  0E01               	movlw	1
  8446   0016FC  6FA6               	movwf	_btTimeSet& (0+255),b
  8447   0016FE  EF81  F00B         	goto	i2l524
  8448   001702                     i2l521:
  8449   001702                     i2l524:
  8450   001702  0012               	return		;funcret
  8451   001704                     __end_of_btGetData:
  8452                           	callstack 0
  8453                           
  8454 ;; *************** function _TMR1_ISR *****************
  8455 ;; Defined at:
  8456 ;;		line 151 in file "mcc_generated_files/tmr1.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;		None
  8459 ;; Auto vars:     Size  Location     Type
  8460 ;;		None
  8461 ;; Return value:  Size  Location     Type
  8462 ;;                  1    wreg      void 
  8463 ;; Registers used:
  8464 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  8465 ;; Tracked objects:
  8466 ;;		On entry : 0/0
  8467 ;;		On exit  : 0/0
  8468 ;;		Unchanged: 0/0
  8469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8472 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8473 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8474 ;;Total ram usage:        0 bytes
  8475 ;; Hardware stack levels used: 1
  8476 ;; Hardware stack levels required when called: 2
  8477 ;; This function calls:
  8478 ;;		NULL
  8479 ;;		_TMR1_DefaultInterruptHandler
  8480 ;; This function is called by:
  8481 ;;		_INTERRUPT_InterruptManager
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	text44
  8486   001AC0                     __ptext44:
  8487                           	callstack 0
  8488   001AC0                     _TMR1_ISR:
  8489                           	callstack 21
  8490   001AC0                     
  8491                           ;mcc_generated_files/tmr1.c: 155:     PIR1bits.TMR1IF = 0;
  8492   001AC0  909E               	bcf	158,0,c	;volatile
  8493   001AC2                     
  8494                           ;mcc_generated_files/tmr1.c: 158:      TMR1H = (timer1ReloadVal >> 8);
  8495   001AC2  5053               	movf	(_timer1ReloadVal+1)^0,w,c	;volatile
  8496   001AC4  6ECF               	movwf	207,c	;volatile
  8497   001AC6                     
  8498                           ;mcc_generated_files/tmr1.c: 159:      TMR1L = (uint8_t) timer1ReloadVal;
  8499   001AC6  C052  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  8500   001ACA                     
  8501                           ;mcc_generated_files/tmr1.c: 161:     if(TMR1_InterruptHandler)
  8502   001ACA  0100               	movlb	0	; () banked
  8503   001ACC  51FA               	movf	_TMR1_InterruptHandler& (0+255),w,b
  8504   001ACE  11FB               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  8505   001AD0  B4D8               	btfsc	status,2,c
  8506   001AD2  EF6D  F00D         	goto	i2u304_41
  8507   001AD6  EF6F  F00D         	goto	i2u304_40
  8508   001ADA                     i2u304_41:
  8509   001ADA  EF7B  F00D         	goto	i2l340
  8510   001ADE                     i2u304_40:
  8511   001ADE                     
  8512                           ; BSR set to: 0
  8513                           ;mcc_generated_files/tmr1.c: 162:     {;mcc_generated_files/tmr1.c: 163:         TMR1_In
      +                          terruptHandler();
  8514   001ADE  D802               	call	i2u305_48
  8515   001AE0  EF7B  F00D         	goto	i2u305_49
  8516   001AE4                     i2u305_48:
  8517   001AE4  0005               	push	
  8518   001AE6  6EFA               	movwf	pclath,c
  8519   001AE8  51FA               	movf	_TMR1_InterruptHandler& (0+255),w,b
  8520   001AEA  6EFD               	movwf	tosl,c
  8521   001AEC  51FB               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  8522   001AEE  6EFE               	movwf	tosh,c
  8523   001AF0  6AFF               	clrf	tosu,c
  8524   001AF2  50FA               	movf	pclath,w,c
  8525   001AF4  0012               	return		;indir
  8526   001AF6                     i2u305_49:
  8527   001AF6                     i2l340:
  8528   001AF6  0012               	return		;funcret
  8529   001AF8                     __end_of_TMR1_ISR:
  8530                           	callstack 0
  8531                           
  8532 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  8533 ;; Defined at:
  8534 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  8535 ;; Parameters:    Size  Location     Type
  8536 ;;		None
  8537 ;; Auto vars:     Size  Location     Type
  8538 ;;		None
  8539 ;; Return value:  Size  Location     Type
  8540 ;;                  1    wreg      void 
  8541 ;; Registers used:
  8542 ;;		wreg, status,2, status,0, cstack
  8543 ;; Tracked objects:
  8544 ;;		On entry : 0/0
  8545 ;;		On exit  : 0/0
  8546 ;;		Unchanged: 0/0
  8547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8552 ;;Total ram usage:        0 bytes
  8553 ;; Hardware stack levels used: 1
  8554 ;; Hardware stack levels required when called: 1
  8555 ;; This function calls:
  8556 ;;		_calculateTime
  8557 ;; This function is called by:
  8558 ;;		_TMR1_Initialize
  8559 ;;		_TMR1_ISR
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           	psect	text45
  8564   001C88                     __ptext45:
  8565                           	callstack 0
  8566   001C88                     _TMR1_DefaultInterruptHandler:
  8567                           	callstack 21
  8568   001C88                     
  8569                           ;mcc_generated_files/tmr1.c: 175:     calculateTime();
  8570   001C88  EC05  F00D         	call	_calculateTime	;wreg free
  8571   001C8C  0012               	return		;funcret
  8572   001C8E                     __end_of_TMR1_DefaultInterruptHandler:
  8573                           	callstack 0
  8574                           
  8575 ;; *************** function _calculateTime *****************
  8576 ;; Defined at:
  8577 ;;		line 130 in file "main.c"
  8578 ;; Parameters:    Size  Location     Type
  8579 ;;		None
  8580 ;; Auto vars:     Size  Location     Type
  8581 ;;		None
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg, status,2, status,0
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8592 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8594 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8595 ;;Total ram usage:        0 bytes
  8596 ;; Hardware stack levels used: 1
  8597 ;; This function calls:
  8598 ;;		Nothing
  8599 ;; This function is called by:
  8600 ;;		_TMR1_DefaultInterruptHandler
  8601 ;; This function uses a non-reentrant model
  8602 ;;
  8603                           
  8604                           	psect	text46
  8605   001A0A                     __ptext46:
  8606                           	callstack 0
  8607   001A0A                     _calculateTime:
  8608                           	callstack 21
  8609   001A0A                     
  8610                           ;main.c: 132:     if (++seconds >= 60) {
  8611   001A0A  0100               	movlb	0	; () banked
  8612   001A0C  2BAE               	incf	_seconds& (0+255),f,b
  8613   001A0E  0E3B               	movlw	59
  8614   001A10  65AE               	cpfsgt	_seconds& (0+255),b
  8615   001A12  EF0D  F00D         	goto	i2u267_41
  8616   001A16  EF0F  F00D         	goto	i2u267_40
  8617   001A1A                     i2u267_41:
  8618   001A1A  EF27  F00D         	goto	i2l454
  8619   001A1E                     i2u267_40:
  8620   001A1E                     
  8621                           ; BSR set to: 0
  8622                           ;main.c: 133:         seconds = 0;
  8623   001A1E  0E00               	movlw	0
  8624   001A20  6FAE               	movwf	_seconds& (0+255),b
  8625   001A22                     
  8626                           ; BSR set to: 0
  8627                           ;main.c: 135:         if (++minutes >= 60) {
  8628   001A22  2BAF               	incf	_minutes& (0+255),f,b
  8629   001A24  0E3B               	movlw	59
  8630   001A26  65AF               	cpfsgt	_minutes& (0+255),b
  8631   001A28  EF18  F00D         	goto	i2u268_41
  8632   001A2C  EF1A  F00D         	goto	i2u268_40
  8633   001A30                     i2u268_41:
  8634   001A30  EF27  F00D         	goto	i2l454
  8635   001A34                     i2u268_40:
  8636   001A34                     
  8637                           ; BSR set to: 0
  8638                           ;main.c: 136:             minutes = 0;
  8639   001A34  0E00               	movlw	0
  8640   001A36  6FAF               	movwf	_minutes& (0+255),b
  8641   001A38                     
  8642                           ; BSR set to: 0
  8643                           ;main.c: 138:             if (++hours >= 24) {
  8644   001A38  2BB0               	incf	_hours& (0+255),f,b
  8645   001A3A  0E17               	movlw	23
  8646   001A3C  65B0               	cpfsgt	_hours& (0+255),b
  8647   001A3E  EF23  F00D         	goto	i2u269_41
  8648   001A42  EF25  F00D         	goto	i2u269_40
  8649   001A46                     i2u269_41:
  8650   001A46  EF27  F00D         	goto	i2l454
  8651   001A4A                     i2u269_40:
  8652   001A4A                     
  8653                           ; BSR set to: 0
  8654                           ;main.c: 139:                 hours = 0;
  8655   001A4A  0E00               	movlw	0
  8656   001A4C  6FB0               	movwf	_hours& (0+255),b
  8657   001A4E                     i2l454:
  8658                           
  8659                           ; BSR set to: 0
  8660   001A4E  0012               	return		;funcret
  8661   001A50                     __end_of_calculateTime:
  8662                           	callstack 0
  8663                           
  8664                           	psect	rparam
  8665   000000                     
  8666                           	psect	temp
  8667   000059                     btemp:
  8668                           	callstack 0
  8669   000059                     	ds	1
  8670   000000                     int$flags	set	btemp
  8671   000000                     wtemp8	set	btemp+1
  8672   000000                     ttemp5	set	btemp+1
  8673   000000                     ttemp6	set	btemp+4
  8674   000000                     ttemp7	set	btemp+8
  8675                           
  8676                           	psect	idloc
  8677                           
  8678                           ;Config register IDLOC0 @ 0x200000
  8679                           ;	unspecified, using default values
  8680   200000                     	org	2097152
  8681   200000  FF                 	db	255
  8682                           
  8683                           ;Config register IDLOC1 @ 0x200001
  8684                           ;	unspecified, using default values
  8685   200001                     	org	2097153
  8686   200001  FF                 	db	255
  8687                           
  8688                           ;Config register IDLOC2 @ 0x200002
  8689                           ;	unspecified, using default values
  8690   200002                     	org	2097154
  8691   200002  FF                 	db	255
  8692                           
  8693                           ;Config register IDLOC3 @ 0x200003
  8694                           ;	unspecified, using default values
  8695   200003                     	org	2097155
  8696   200003  FF                 	db	255
  8697                           
  8698                           ;Config register IDLOC4 @ 0x200004
  8699                           ;	unspecified, using default values
  8700   200004                     	org	2097156
  8701   200004  FF                 	db	255
  8702                           
  8703                           ;Config register IDLOC5 @ 0x200005
  8704                           ;	unspecified, using default values
  8705   200005                     	org	2097157
  8706   200005  FF                 	db	255
  8707                           
  8708                           ;Config register IDLOC6 @ 0x200006
  8709                           ;	unspecified, using default values
  8710   200006                     	org	2097158
  8711   200006  FF                 	db	255
  8712                           
  8713                           ;Config register IDLOC7 @ 0x200007
  8714                           ;	unspecified, using default values
  8715   200007                     	org	2097159
  8716   200007  FF                 	db	255
  8717                           
  8718                           	psect	config
  8719                           
  8720                           ; Padding undefined space
  8721   300000                     	org	3145728
  8722   300000  FF                 	db	255
  8723                           
  8724                           ;Config register CONFIG1H @ 0x300001
  8725                           ;	Oscillator Selection bits
  8726                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  8727                           ;	Fail-Safe Clock Monitor Enable bit
  8728                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8729                           ;	Internal/External Oscillator Switchover bit
  8730                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8731   300001                     	org	3145729
  8732   300001  08                 	db	8
  8733                           
  8734                           ;Config register CONFIG2L @ 0x300002
  8735                           ;	Power-up Timer Enable bit
  8736                           ;	PWRTEN = OFF, PWRT disabled
  8737                           ;	Brown-out Reset Enable bits
  8738                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  8739                           ;	Brown Out Reset Voltage bits
  8740                           ;	BORV = 18, VBOR set to 1.8 V nominal
  8741   300002                     	org	3145730
  8742   300002  1F                 	db	31
  8743                           
  8744                           ;Config register CONFIG2H @ 0x300003
  8745                           ;	Watchdog Timer Enable bit
  8746                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  8747                           ;	Watchdog Timer Postscale Select bits
  8748                           ;	WDTPS = 32768, 1:32768
  8749   300003                     	org	3145731
  8750   300003  1E                 	db	30
  8751                           
  8752                           ; Padding undefined space
  8753   300004                     	org	3145732
  8754   300004  FF                 	db	255
  8755                           
  8756                           ;Config register CONFIG3H @ 0x300005
  8757                           ;	CCP2 MUX bit
  8758                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  8759                           ;	PORTB A/D Enable bit
  8760                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8761                           ;	Low-Power Timer1 Oscillator Enable bit
  8762                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8763                           ;	HFINTOSC Fast Start-up
  8764                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  8765                           ;	MCLR Pin Enable bit
  8766                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  8767   300005                     	org	3145733
  8768   300005  09                 	db	9
  8769                           
  8770                           ;Config register CONFIG4L @ 0x300006
  8771                           ;	Stack Full/Underflow Reset Enable bit
  8772                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8773                           ;	Single-Supply ICSP Enable bit
  8774                           ;	LVP = OFF, Single-Supply ICSP disabled
  8775                           ;	Extended Instruction Set Enable bit
  8776                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8777                           ;	Background Debugger Enable bit
  8778                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  8779   300006                     	org	3145734
  8780   300006  81                 	db	129
  8781                           
  8782                           ; Padding undefined space
  8783   300007                     	org	3145735
  8784   300007  FF                 	db	255
  8785                           
  8786                           ;Config register CONFIG5L @ 0x300008
  8787                           ;	Code Protection Block 0
  8788                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  8789                           ;	Code Protection Block 1
  8790                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  8791                           ;	Code Protection Block 2
  8792                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  8793                           ;	Code Protection Block 3
  8794                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  8795   300008                     	org	3145736
  8796   300008  0F                 	db	15
  8797                           
  8798                           ;Config register CONFIG5H @ 0x300009
  8799                           ;	Boot Block Code Protection bit
  8800                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  8801                           ;	Data EEPROM Code Protection bit
  8802                           ;	CPD = OFF, Data EEPROM not code-protected
  8803   300009                     	org	3145737
  8804   300009  C0                 	db	192
  8805                           
  8806                           ;Config register CONFIG6L @ 0x30000A
  8807                           ;	Write Protection Block 0
  8808                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  8809                           ;	Write Protection Block 1
  8810                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  8811                           ;	Write Protection Block 2
  8812                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  8813                           ;	Write Protection Block 3
  8814                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  8815   30000A                     	org	3145738
  8816   30000A  0F                 	db	15
  8817                           
  8818                           ;Config register CONFIG6H @ 0x30000B
  8819                           ;	Configuration Register Write Protection bit
  8820                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  8821                           ;	Boot Block Write Protection bit
  8822                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  8823                           ;	Data EEPROM Write Protection bit
  8824                           ;	WRTD = OFF, Data EEPROM not write-protected
  8825   30000B                     	org	3145739
  8826   30000B  E0                 	db	224
  8827                           
  8828                           ;Config register CONFIG7L @ 0x30000C
  8829                           ;	Table Read Protection Block 0
  8830                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  8831                           ;	Table Read Protection Block 1
  8832                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  8833                           ;	Table Read Protection Block 2
  8834                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  8835                           ;	Table Read Protection Block 3
  8836                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  8837   30000C                     	org	3145740
  8838   30000C  0F                 	db	15
  8839                           
  8840                           ;Config register CONFIG7H @ 0x30000D
  8841                           ;	Boot Block Table Read Protection bit
  8842                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  8843   30000D                     	org	3145741
  8844   30000D  40                 	db	64
  8845                           tosu	equ	0xFFF
  8846                           tosh	equ	0xFFE
  8847                           tosl	equ	0xFFD
  8848                           stkptr	equ	0xFFC
  8849                           pclatu	equ	0xFFB
  8850                           pclath	equ	0xFFA
  8851                           pcl	equ	0xFF9
  8852                           tblptru	equ	0xFF8
  8853                           tblptrh	equ	0xFF7
  8854                           tblptrl	equ	0xFF6
  8855                           tablat	equ	0xFF5
  8856                           prodh	equ	0xFF4
  8857                           prodl	equ	0xFF3
  8858                           indf0	equ	0xFEF
  8859                           postinc0	equ	0xFEE
  8860                           postdec0	equ	0xFED
  8861                           preinc0	equ	0xFEC
  8862                           plusw0	equ	0xFEB
  8863                           fsr0h	equ	0xFEA
  8864                           fsr0l	equ	0xFE9
  8865                           wreg	equ	0xFE8
  8866                           indf1	equ	0xFE7
  8867                           postinc1	equ	0xFE6
  8868                           postdec1	equ	0xFE5
  8869                           preinc1	equ	0xFE4
  8870                           plusw1	equ	0xFE3
  8871                           fsr1h	equ	0xFE2
  8872                           fsr1l	equ	0xFE1
  8873                           bsr	equ	0xFE0
  8874                           indf2	equ	0xFDF
  8875                           postinc2	equ	0xFDE
  8876                           postdec2	equ	0xFDD
  8877                           preinc2	equ	0xFDC
  8878                           plusw2	equ	0xFDB
  8879                           fsr2h	equ	0xFDA
  8880                           fsr2l	equ	0xFD9
  8881                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    2052
    Data        0
    BSS         122
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      88
    BANK0           160     71     160
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(1) Largest target is 64
		 -> saveTimeToFlash@flashBuffer(BANK0[64]), 

    printString@str	PTR unsigned char  size(2) Largest target is 6
		 -> displayAlarmTime@displayString(BANK0[5]), displayTime@displayString(BANK0[5]), STR_1(CODE[6]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_checkButtons
    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _generateBeep->___lwdiv
    ___lwdiv->___wmul
    _clearDisplay->_flushBuffer
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _saveTimeToFlash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _displayTime->_printString
    _displayAlarmTime->_printString
    _printString->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _SYSTEM_Initialize->_TMR1_Initialize
    _TMR1_Initialize->___fltol
    _roundf->___flsub
    ___flsub->___fladd
    ___fltol->_roundf
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_btGetData

Critical Paths under _main in BANK0

    _main->_saveTimeToFlash
    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _checkButtons->_saveTimeToFlash
    _displayTime->_printString
    _displayAlarmTime->_printString

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   62248
                                             69 BANK0      2     2      0
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
                       _processAlarm
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _processAlarm                                         0     0      0   10704
                       _triggerAlarm
 ---------------------------------------------------------------------------------
 (2) _triggerAlarm                                         6     6      0   10704
                                             79 COMRAM     2     2      0
                                             11 BANK0      4     4      0
                         _clearAlarm
                       _clearDisplay
                       _generateBeep
                        _printString
 ---------------------------------------------------------------------------------
 (3) _generateBeep                                         6     4      2    1273
                                             18 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
                  _delayMicroseconds
 ---------------------------------------------------------------------------------
 (4) _delayMicroseconds                                    4     2      2     248
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                             11 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         2     2      0    4344
                                             69 COMRAM     2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     676
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     676
                                              6 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0    1061
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   22951
                                             79 COMRAM     2     2      0
                            ___awmod
                         _clearAlarm
                   _displayAlarmTime
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _saveTimeToFlash                                     69    69      0    2392
                                              0 BANK0     69    69      0
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    14     9      5    1072
                                             10 COMRAM    14     9      5
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     5     1      4     217
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     903
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    9163
                                             11 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _displayAlarmTime                                    12    12      0    9163
                                             11 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (3) _printString                                         21    19      2    5016
                                             69 COMRAM    10     8      2
                                              0 BANK0     11    11      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (4) _flushBuffer                                         43    43      0    4245
                                             26 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (5) _max_write                                           13    10      3    2160
                                             13 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1525
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2233
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _clearAlarm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0   10827
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      3     3      0   10585
                                             70 COMRAM     3     3      0
           _TMR1_SetInterruptHandler
                            ___fltol
                             _roundf
 ---------------------------------------------------------------------------------
 (3) _roundf                                              31    27      4   10003
                                             29 COMRAM    31    27      4
                            ___fladd
                             ___flge
                            ___flneg
                            ___flsub
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    4367
                                             21 COMRAM     8     0      8
                            ___fladd
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3982
                                              5 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     245
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     626
                                              5 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___fltol                                             10     6      4     427
                                             60 COMRAM    10     6      4
                             _roundf (ARG)
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     242
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           4     4      0      66
                                              1 COMRAM     4     4      0
                           _TMR1_ISR
                          _btGetData
 ---------------------------------------------------------------------------------
 (8) _btGetData                                            1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0       0
                      _calculateTime
 ---------------------------------------------------------------------------------
 (10) _calculateTime                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
       ___fltol
         _roundf (ARG)
           ___fladd
           ___flge
           ___flneg
           ___flsub
             ___fladd
       _roundf
   _TMR1_StartTimer
   _checkButtons
     ___awmod
     _clearAlarm
     _displayAlarmTime
       ___awdiv
       ___awmod
       _printString
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
     _displayTime
       ___awdiv
       ___awmod
       _printString
     _saveTimeToFlash
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _clearDisplay
     _flushBuffer
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit
   _processAlarm
     _triggerAlarm
       _clearAlarm
       _clearDisplay
       _generateBeep
         ___lwdiv
           ___wmul (ARG)
         ___wmul
         _delayMicroseconds
       _printString
   _saveTimeToFlash

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
       _calculateTime
   _btGetData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      A0       5      100.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      58       1       93.6%
BITBIGSFRhhl        1D      0       0      38        0.0%
BITBIGSFRlllll      1C      0       0      51        0.0%
BITBIGSFRlhhh        D      0       0      41        0.0%
BITBIGSFRlllhh       7      0       0      48        0.0%
BITBIGSFRhhhh        7      0       0      36        0.0%
BITBIGSFRlhhlhh      7      0       0      42        0.0%
BITBIGSFRllhh        6      0       0      46        0.0%
BITBIGSFRllhl        6      0       0      47        0.0%
BITBIGSFRlhhlll      4      0       0      43        0.0%
BITBIGSFRhll         3      0       0      40        0.0%
BITBIGSFRhlh         2      0       0      39        0.0%
BITBIGSFRlhhlll      2      0       0      44        0.0%
BITBIGSFRhhhl        2      0       0      37        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRlhl         1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     118      52        0.0%
DATA                 0      0     118       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 12 17:15:18 2024

                    __end_of_checkButtons 0ADA             ?_EUSART_SetRxInterruptHandler 0006  
                          _SPI_Initialize 1C46                              ?_displayTime 0001  
                             _SSPSTATbits 0FC7                                        l20 1C16  
                                      l21 1C18                                        l15 1C52  
                                      l18 1C08                                        l71 1C72  
                                      l68 1C32                                        l94 1BFE  
                            ___awdiv@sign 000B                       ___wmul@multiplicand 0008  
                                     l221 1C44                                       l233 108E  
                                     l322 1C90                                       l243 1B5E  
                                     l148 19C2                                       l237 105C  
                                     l190 1C86                                       l238 1046  
                                     l510 1780                                       l343 1C68  
                                     l319 18D0                                       l239 104A  
                                     l505 0AD8                                       l441 17BE  
                                     l426 114E                                       l187 1C7C  
                                     l515 144C                                       l435 1B9A  
                                     l443 17F4                                       l276 1C94  
                                     l509 1754                                       l437 1BB6  
                                     l471 1396                                       l616 0C6C  
                                     l448 1500                                       l464 1922  
                                     l561 0D9A                                       l570 1974  
                                     l475 1C5E                                       l547 12D6  
                                     l459 15B4                                       l619 1BDC  
                                     l468 12F0                                       l549 12D8  
                                     l573 1B2A                                       l496 09CA  
                                     l568 1972                                       l850 1218  
                                     l578 1A86                                       l916 0EA0  
                                     l863 1664                                       l884 0F5E  
                                     l893 1ABE                                       l889 0FA4  
     EUSART_SetRxInterruptHandler@handler 0006                           _timer1ReloadVal 0052  
                            ___awmod@sign 000B                                       prod 0FF3  
                                     tosl 0FFD                                       wreg 0FE8  
                          ??_generateBeep 0015                             generateBeep@i 0017  
                            ___fltol@exp1 0046                                      l1110 1860  
                                    l1117 1868                                      l1147 029C  
                                    l1164 03B6                                      l1156 056C  
                                    l1148 028A                                      l1173 0486  
                                    l1149 0250                                      l1174 0474  
                                    l4000 01BA                                      l4010 01CE  
                                    l4002 01BE                                      l4100 0420  
                                    l4020 01E2                                      l4012 01D2  
                                    l4004 01C2                                      l1189 1A08  
                                    l4110 0448                                      l4102 0424  
                                    l4030 021C                                      l4022 01E6  
                                    l4014 01D6                                      l4006 01C6  
                                    l4120 04A2                                      l4112 0456  
                                    l4104 0434                                      l4040 026E  
                                    l4032 0238                                      l4024 01EA  
                                    l4016 01DA                                      l4008 01CA  
                                    l4200 0CDE                                      l4130 050C  
                                    l4122 04B0                                      l4114 046C  
                                    l4106 0436                                      l4050 02BA  
                                    l4042 027C                                      l4034 0248  
                                    l4018 01DE                                      l4026 01EE  
                                    l1298 0842                                      l4210 0D52  
                                    l4202 0D12                                      l4140 0546  
                                    l4132 052C                                      l4124 04EA  
                                    l4060 02FA                                      l4108 0444  
                                    l4044 027E                                      l4036 025E  
                                    l4028 01F2                                      l4220 0D7E  
                                    l4204 0D16                                      l4300 0FC6  
                                    l4142 054C                                      l4134 0530  
                                    l4118 0496                                      l4126 04EC  
                                    l4070 0324                                      l4062 0306  
                                    l4054 02CE                                      l4046 0288  
                                    l4038 026A                                      l4230 19D4  
                                    l4206 0D32                                      l4150 1B2C  
                                    l4310 0FF6                                      l4302 0FC6  
                                    l4222 1BB8                                      l4240 0F0E  
                                    l4144 055A                                      l4136 053E  
                                    l4128 04FC                                      l4080 0396  
                                    l4064 030A                                      l4056 02DE  
                                    l4048 02AA                                      l4072 032A  
                                    l4216 0D5A                                      l4208 0D36  
                                    l4160 1B42                                      l4152 1B34  
                                    l4320 101E                                      l4312 100A  
                                    l4304 0FCA                                      l4400 1A82  
                                    l4224 1BD4                                      l4250 0F9C  
                                    l4242 0F1E                                      l4234 0EA2  
                                    l4146 055C                                      l4138 0544  
                                    l4090 03F0                                      l4074 0350  
                                    l4082 03A6                                      l4066 0318  
                                    l4058 02EC                                      l4218 0D7A  
                                    l4170 1B4E                                      l4162 1B44  
                                    l4154 1B38                                      l4330 1040  
                                    l4314 100E                                      l4306 0FCE  
                                    l4410 17DA                                      l4402 1782  
                                    l4500 0DB2                                      l4252 0FA2  
                                    l4244 0F2C                                      l4236 0ED0  
                                    l4260 1AAE                                      l4092 03FA  
                                    l4084 03CC                                      l4076 0384  
                                    l4068 031A                                      l4228 19C4  
                                    l4172 1B52                                      l4164 1B46  
                                    l4156 1B3C                                      l4340 106E  
                                    l4332 1048                                      l4316 1012  
                                    l4180 1BA0                                      l4412 17DE  
                                    l4404 17B2                                      l4510 0E02  
                                    l4246 0F3E                                      l4238 0EE0  
                                    l4094 0408                                      l4086 03DC  
                                    l4078 0386                                      l4350 058E  
                                    l4190 0C82                                      l4182 0C6E  
                                    l4430 0B94                                      l4422 0B02  
                                    l4414 0ADA                                      l4174 1B54  
                                    l4166 1B48                                      l4158 1B40  
                                    l4342 1070                                      l4334 104C  
                                    l4326 1022                                      l4318 1016  
                                    l4270 1818                                      l4406 17C0  
                                    l4520 0E2C                                      l4512 0E06  
                                    l4504 0DC6                                      l4248 0F4C  
                                    l4256 1A88                                      l4096 040A  
                                    l4360 064E                                      l4352 05D6  
                                    l4192 0C9E                                      l4184 0C7A  
                                    l4440 0BDE                                      l4432 0BB6  
                                    l4416 0AF0                                      l4600 144E  
                                    l4168 1B4A                                      l4344 107A  
                                    l4336 1064                                      l4328 102E  
                                    l4280 1852                                      l4272 1820  
                                    l4264 17F6                                      l4176 1B8E  
                                    l4408 17CC                                      l4530 0E54  
                                    l4522 0E36                                      l4514 0E14  
                                    l4506 0DF0                                      l4258 1A9E  
                                    l4098 0418                                      l4370 0740  
                                    l4354 05EA                                      l4442 0BEA  
                                    l4450 0C14                                      l4434 0BBE  
                                    l4610 14C2                                      l4602 14B6  
                                    l4290 1C34                                      l4338 106C  
                                    l4346 107C                                      l4282 1854  
                                    l4274 182E                                      l4266 17FE  
                                    l4178 1B9C                                      l4532 0E60  
                                    l4524 0E40                                      l4508 0DF2  
                                    l4380 080E                                      l4372 0754  
                                    l4364 0662                                      l4356 060E  
                                    l4348 056E                                      l4460 1C54  
                                    l3900 11E2                                      l4452 0C18  
                                    l4444 0BF0                                      l4436 0BCC  
                                    l4428 0B0E                                      l4612 14D6  
                                    l4604 14BA                                      l4292 1C42  
                                    l4284 185A                                      l4276 1834  
                                    l4268 1810                                      l4286 1C74  
                                    l4550 1BEC                                      l4542 1C46  
                                    l4534 0E70                                      l4382 0832  
                                    l4374 0786                                      l4366 06FE  
                                    l4358 0632                                      l4710 1C1E  
                                    l4470 15D4                                      l4462 15B6  
                                    l3910 1208                                      l3902 11EA  
                                    l4198 0CA6                                      l4446 0BF4  
                                    l4614 14DA                                      l4630 1768  
                                    l4278 184A                                      l4288 1C7E  
                                    l4544 1C92                                      l4552 1BFA  
                                    l4536 0E80                                      l4376 0796  
                                    l4368 070E                                      l4560 1872  
                                    l4712 1C22                                      l4720 1C8E  
                                    l4480 160C                                      l4472 15E2  
                                    l4464 15BA                                      l3912 1210  
                                    l3904 11EC                                      l3920 125C  
                                    l4448 0BF8                                      l4456 0C2A  
                                    l4632 1502                                      l4616 14F6  
                                    l4296 0FA6                                      l4624 171A  
                                    l4800 0A3E                                      l4554 1BFC  
                                    l4546 1BDE                                      l4386 1C60  
                                    l4538 0E90                                      l4378 07CA  
                                    l4570 18C0                                      l4562 1888  
                                    l4714 1C26                                      l4482 161A  
                                    l4490 1644                                      l4474 15EA  
                                    l4466 15C8                                      l3906 11F2  
                                    l3930 1266                                      l3922 125C  
                                    l4458 0C68                                      l4642 1576  
                                    l4634 156A                                      l4298 0FBE  
                                    l4626 1740                                      l4618 1704  
                                    l4810 0A82                                      l4730 13C8  
                                    l4722 1AF8                                      l4394 1A58  
                                    l4650 12DA                                      l4580 199A  
                                    l4572 1976                                      l4556 1C6A  
                                    l4548 1BEA                                      l4564 18B4  
                                    l4716 1C2A                                      l4708 1C1A  
                                    l4492 1654                                      l4484 1630  
                                    l4476 15FC                                      l4468 15D0  
                                    l3908 11F8                                      l3940 12AA  
                                    l3932 127E                                      l3924 125E  
                                    l3916 121A                                      l4644 158A  
                                    l4636 156E                                      l4628 1744  
                                    l4820 0AC6                                      l4812 0A92  
                                    l4804 0A62                                      l4740 1438  
                                    l4732 13E0                                      l4724 1398  
                                    l4396 1A62                                      l4388 1A50  
                                    l4652 12FE                                      l4590 19AE  
                                    l4582 199E                                      l4574 197A  
                                    l3950 00BA                                      l4566 18BC  
                                    l4558 186A                                      l4718 1C2E  
                                    l4494 165C                                      l4486 1638  
                                    l4478 1604                                      l3870 1C04  
                                    l3942 12B0                                      l3934 129A  
                                    l3918 123A                                      l4646 158E  
                                    l4822 0ACA                                      l4806 0A70  
                                    l4814 0A9A                                      l4750 087A  
                                    l4742 1448                                      l4734 13F8  
                                    l4726 1398                                      l4398 1A66  
                                    l4670 1364                                      l4654 1318  
                                    l4662 1332                                      l4830 18F4  
                                    l4592 19B2                                      l4584 19A2  
                                    l4576 1992                                      l3960 00FA  
                                    l3952 00C8                                      l4568 18BE  
                                    l4488 163E                                      l3880 1174  
                                    l3872 1156                                      l3944 12B6  
                                    l3936 12A0                                      l4648 15AA  
                                    l4816 0AB2                                      l4824 0AD0  
                                    l4808 0A7A                                      l4752 088C  
                                    l4760 08D4                                      l4744 0844  
                                    l4736 1424                                      l4728 13B0  
                                    l4680 193E                                      l4672 137A  
                                    l4664 133E                                      l4656 1326  
                                    l4832 1906                                      l4920 1090  
                                    l4594 19B6                                      l4586 19A6  
                                    l4578 1996                                      l4498 0D9C  
                                    l3970 012C                                      l3962 00FC  
                                    l3954 00CA                                      l3890 11A8  
                                    l3882 1182                                      l3874 115A  
                                    l3946 12BA                                      l3938 12AA  
                                    l4818 0AB4                                      l4770 093A  
                                    l4762 08E2                                      l4754 08AA  
                                    l4746 0852                                      l4738 1434  
                                    l4690 1956                                      l4666 134A  
                                    l4658 132A                                      l4674 1380  
                                    l4834 1918                                      l4826 18D2  
                                    l4930 10A4                                      l4922 1098  
                                    l4596 19BC                                      l4588 19AA  
                                    l3980 0154                                      l3972 012E  
                                    l3956 00DA                                      l3964 0104  
                                    l3948 00AE                                      l3868 1C02  
                                    l3892 11B0                                      l3884 118A  
                                    l3876 1168                                      l4780 097C  
                                    l4772 0942                                      l4764 08FC  
                                    l4756 08B2                                      l4748 086C  
                                    l4676 1926                                      l4668 1360  
                                    l4836 191C                                      l4828 18E4  
                                    l4940 10B6                                      l4932 10A6  
                                    l4924 109C                                      l4598 19C0  
                                    l3990 018E                                      l3982 0164  
                                    l3974 0134                                      l3966 0114  
                                    l3958 00EA                                      l3894 11B8  
                                    l3886 118E                                      l3878 1170  
                                    l4790 09D8                                      l4782 0996  
                                    l4774 0960                                      l4766 090A  
                                    l4758 08D0                                      l4686 1946  
                                    l4678 193C                                      l4950 1116  
                                    l4942 10C8                                      l4934 10AA  
                                    l4926 10A0                                      l3992 01A0  
                                    l3984 0174                                      l3976 0142  
                                    l3968 011A                                      l3896 11C6  
                                    l3888 1196                                      l4792 09F2  
                                    l4784 09AE                                      l4768 091C  
                                    l4776 0964                                      l4688 1952  
                                    l4960 1142                                      l4952 1126  
                                    l4944 10DA                                      l4936 10AE  
                                    l4928 10A2                                      l3994 01AE  
                                    l3986 0176                                      l3978 0144  
                                    l3898 11CC                                      l4794 0A12  
                                    l4786 09BE                                      l4778 0972  
                                    l4962 1146                                      l4954 1136  
                                    l4946 10EC                                      l4938 10B2  
                                    l3996 01B2                                      l3988 017E  
                                    l4796 0A16                                      l4788 09C2  
                                    l4956 113A                                      l4948 10FE  
                                    l3998 01B6                                      l4798 0A24  
                                    l4958 113E                                      STR_1 FFF9  
                            _triggerAlarm 12DA                                      _LATA 0F89  
                                    _LATB 0F8A                                      _LATC 0F8B  
                                    u4000 0396                                      u4001 0392  
                                    u4010 03CC                                      u4011 03C8  
                                    u4100 0496                                      u4020 03DC  
                                    u4101 0492                                      u4021 03D8  
                                    u4110 04B0                                      u4030 0408  
                                    u4111 04AC                                      u4031 0404  
                                    u4120 04EA                                      u4040 0418  
                                    u5000 0AB2                                      u4121 04E6  
                                    u4041 0414                                      u4201 0C74  
                                    u5001 0AAE                                      u4130 04FC  
                                    u4050 0434                                      u5010 0AC6  
                                    u4131 04F8                                      u4051 0430  
                                    u5011 0AC2                                      u4300 0F4C  
                                    u4140 050C                                      u4060 0444  
                                    u4220 0CDE                                      u5020 18E4  
                                    u4301 0F48                                      u4141 0508  
                                    u4061 0440                                      u4221 0CDA  
                                    u5021 18E0                                      u4310 0F9C  
                                    u4150 052C                                      u4070 0456  
                                    u4214 0CC4                                      u5030 18F4  
                                    u4311 0F98                                      u4151 0528  
                                    u4071 0452                                      u4215 0CC0  
                                    u5031 18F0                                      u4320 1A9E  
                                    u4160 053E                                      u4080 046C  
                                    u4240 0D32                                      u4400 108E  
                                    u5040 1906                                      u5200 10EC  
                                    u4321 1A9A                                      u4161 053A  
                                    u4081 0468                                      u4241 0D2E  
                                    u4401 108A                                      u5041 1902  
                                    u5201 10E8                                      u4170 055A  
                                    u4090 0482                                      u4410 05AE  
                                    u4250 0D52                                      u4234 0CFA  
                                    u4330 1810                                      u5050 1918  
                                    u5210 10FE                                      u4171 0556  
                                    u4091 047E                                      u4251 0D4E  
                                    u4235 0CF6                                      u4331 180C  
                                    u5051 1914                                      u5211 10FA  
                                    u4420 05D6                                      u3700 1C16  
                                    u4260 0D9A                                      u4500 1A82  
                                    u4340 182E                                      u5220 1126  
                                    u4421 05D2                                      u3701 1C12  
                                    u4261 0D96                                      u4501 1A7E  
                                    u4341 182A                                      u5221 1122  
                                    u4270 0ED0                                      u4430 05FA  
                                    u3710 1168                                      u4350 184A  
                                    u4190 1BB6                                      u4510 17F4  
                                    u5230 1136                                      u4271 0ECC  
                                    u4431 05F4                                      u4415 05A4  
                                    u3711 1164                                      u4351 1846  
                                    u4191 1BB2                                      u4511 17F0  
                                    u5231 1132                                      u4280 0F0E  
                                    u3800 00DA                                      u4440 05FC  
                                    u3720 1182                                      u4600 0C58  
                                    u4520 0B3C                                      u4360 0FF2  
                                    u4281 0F0A                                      u3801 00D6  
                                    u3721 117E                                      u4185 1B5C  
                                    u4361 0FEE                                      u4290 0F2C  
                                    u3810 00EA                                      u4450 060E  
                                    u3730 11A8                                      u4610 0C68  
                                    u4186 1B5E                                      u4370 1040  
                                    u4291 0F28                                      u3811 00E6  
                                    u4451 060A                                      u3731 11A4  
                                    u4611 0C64                                      u4371 103C  
                                    u5307 0986                                      u4700 0E14  
                                    u3900 0236                                      u3820 012C  
                                    u4460 064E                                      u4620 15C8  
                                    u3740 11C6                                      u4540 0B94  
                                    u4380 105C                                      u5180 10C8  
                                    u4701 0E10                                      u3821 0128  
                                    u4461 064A                                      u4621 15C4  
                                    u3741 11C2                                      u4541 0B90  
                                    u4381 1058                                      u5317 09E2  
                                    u5181 10C4                                      u4710 0E28  
                                    u3910 025E                                      u3830 0142  
                                    u4470 0740                                      u4630 15E2  
                                    u3750 11E2                                      u4534 0B7A  
                                    u5190 10DA                                      u4711 0E24  
                                    u3911 025A                                      u3831 013E  
                                    u4471 073C                                      u4631 15DE  
                                    u3751 11DE                                      u4607 0C4E  
                                    u4535 0B76                                      u4527 0B32  
                                    u5327 0A2E                                      u5191 10D6  
                                    u4720 0E50                                      u3920 027C  
                                    u3840 0154                                      u4480 0786  
                                    u4640 15FC                                      u3760 1208  
                                    u4560 0BCC                                      u4800 1396  
                                    u4721 0E4C                                      u3921 0278  
                                    u3841 0150                                      u4481 0782  
                                    u4641 15F8                                      u3761 1204  
                                    u4561 0BC8                                      u4801 1392  
                                    u5257 1308                                      u4730 0E70  
                                    u3930 029C                                      u3850 0164  
                                    u4490 080E                                      u4650 161A  
                                    u3770 127E                                      u4570 0BDA  
                                    u4554 0BAA                                      u4810 1972  
                                    u4731 0E6C                                      u3931 0298  
                                    u3851 0160                                      u4491 080A  
                                    u4651 1616                                      u3771 127A  
                                    u4571 0BD6                                      u4555 0BA6  
                                    u4395 1078                                      u4811 196E  
                                    u5267 1354                                      u4740 0E80  
                                    u3940 02AA                                      u3860 01A0  
                                    u4660 1630                                      u3780 12D6  
                                    u4580 0C14                                      u4396 107A  
                                    u4900 08E2                                      u4741 0E7C  
                                    u3941 02A6                                      u3861 019C  
                                    u4661 162C                                      u3781 12D2  
                                    u4581 0C10                                      u4901 08DE  
                                    u5277 136E                                      u3950 02BA  
                                    u3870 01AE                                      u3790 00C8  
                                    u4670 1654                                      u4590 0C26  
                                    u4750 14F6                                      u4910 090A  
                                    u4830 141E                                      u3951 02B6  
                                    u3871 01AA                                      u3791 00C4  
                                    u4671 1650                                      u4591 0C22  
                                    u4751 14F2                                      u4911 0906  
                                    u5287 085C                                      u4831 1418  
                                    u4680 0DB2                                      u3960 02EC  
                                    u3880 021C                                      u4760 1754  
                                    u4920 091C                                      u4840 1420  
                                    u4681 0DAE                                      u3961 02E8  
                                    u3881 0218                                      u4761 1750  
                                    u4921 0918                                      u5297 08EC  
                                    u4690 0DE6                                      u3970 02FA  
                                    u3890 0234                                      u4770 15AA  
                                    u4930 0972                                      u4850 1434  
                                    u3971 02F6                                      u3891 022E  
                                    u4771 15A6                                      u4931 096E  
                                    u4851 1430                                      u3980 0318  
                                    u4940 09AE                                      u4860 1448  
                                    u4780 12FE                                      u3981 0314  
                                    u4941 09AA                                      u4861 1444  
                                    u4781 12FA                                      u3990 0350  
                                    u4950 09BE                                      u4870 0852  
                                    u4790 1326                                      u4695 0DDC  
                                    u3991 034C                                      u4951 09BA  
                                    u4871 084E                                      u4791 1322  
                                    u4960 09D8                                      u4880 087A  
                                    u4961 09D4                                      u4881 0876  
                                    u4970 0A24                                      u4890 088C  
                                    u4971 0A20                                      u4891 0888  
                                    u4980 0A70                                      u4981 0A6C  
                                    u4990 0A92                                      u4991 0A8E  
                                    _WPUB 0F7C                                      _main 1090  
                                    fsr1h 0FE2                                      fsr2h 0FDA  
                                    indf1 0FE7                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    btemp 0059                              printString@i 00B8  
                            printString@j 00BC                              printString@k 00BA  
                       ?_FLASH_WriteBlock 000B                                      prodh 0FF4  
                                    prodl 0FF3                                      start 00AA  
                  __end_of_SPI_Initialize 1C54                              ?_flushBuffer 0001  
                      ??_FLASH_WriteBlock 0010                ??_TMR1_SetInterruptHandler 0008  
                            ___param_bank 0000               saveTimeToFlash@flashAddress 00F3  
                    __end_of_clearDisplay 1A88               checkButtons@button3HoldTime 009E  
           __end_of_OSCILLATOR_Initialize 1C74                             ___fltol@sign1 0045  
                         __end_of___fladd 056E                                     ?_main 0001  
                         __end_of___awdiv 121A                         ??_saveTimeToFlash 0019  
                         __end_of___flneg 1AC0                                     _EEADR 0FA9  
                         __end_of___awmod 1666                           __end_of___flsub 1A0A  
                         __end_of___fltol 0EA2                           _TMR1_StartTimer 1C8E  
                                   _ANSEL 0F7E                           ___awdiv@divisor 0008  
                                   _T1CON 0FCD                           __end_of___lwdiv 186A  
                                   i2l340 1AF6                                     i2l521 1702  
                                   i2l346 1C8C                                     i2l282 004C  
                                   i2l283 0096                                     i2l524 1702  
                                   i2l284 006E                                     i2l454 1A4E  
                                   i2l288 0096                           ___awdiv@counter 000A  
                                   _RCREG 0FAE                                     _RCSTA 0FAB  
                                   _TMR1H 0FCF                                     _TMR1L 0FCE  
                                   _SPBRG 0FAF                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TXREG 0FAD                                     _TXSTA 0FAC  
                        __end_of_TMR1_ISR 1AF8                                     _hours 00B0  
                            displayTime@i 00C8                                     _toint FFF5  
                        _button3PressTime 00A0                   __end_of_TMR1_Initialize 18D2  
                         max7219_cmd@Addr 000A                                     pclath 0FFA  
                                   pclatu 0FFB                                     tablat 0FF5  
                         max7219_cmd@data 0007                                     ttemp5 005A  
                                   ttemp6 005D                                     ttemp7 0061  
                                   status 0FD8                                     wtemp8 005A  
                         ?_SPI_Initialize 0001                            _alarmTriggered 00A9  
                         __initialization 1B60                              __end_of_main 1156  
                 FLASH_ReadByte@flashAddr 0006               ?_INTERRUPT_InterruptManager 0001  
          ??_EUSART_SetRxInterruptHandler 0008                                    ??_main 0052  
                           __activetblptr 0003                        generateBeep@cycles 0015  
                __end_of_SPI_Exchange8bit 1C1A                 FLASH_WriteBlock@writeAddr 000B  
                                  _EEADRH 0FAA                                    _EEDATA 0FA8  
                                  _EECON2 0FA7                          ___awdiv@dividend 0006  
                                  _ANSELH 0F7F                                    i2l3150 1A0A  
                                  i2l3160 1A4A                                    i2l3152 1A1E  
                                  i2l3154 1A22                                    i2l3156 1A34  
                                  i2l3158 1A38                                    i2l3510 1ADE  
                                  i2l3502 1AC0                                    i2l3504 1AC2  
                                  i2l3520 169C                                    i2l3512 1668  
                                  i2l3506 1AC6                                    i2l3530 16DE  
                                  i2l3522 16AC                                    i2l3514 167A  
                                  i2l3508 1ACA                                    i2l3532 16F0  
                                  i2l3524 16BC                                    i2l3516 168A  
                                  i2l3374 1C88                                    i2l3518 1696  
                                  i2l3528 16CC                                    i2l3800 0028  
                                  i2l3810 007C                                    i2l3802 0036  
                                  i2l3812 008A                                    i2l3804 0044  
                                  i2l3814 0090                                    i2l3806 005A  
                                  i2l3808 0068                                    i2l3798 001A  
                                  _TABLAT 0FF5                        delayMicroseconds@i 0008  
                                  _OSCCON 0FD3                                    _SPBRGH 0FB0  
                                  _SSPADD 0FC8                                    _SSPBUF 0FC9  
                   triggerAlarm@numCycles 00BE      __end_of_TMR1_DefaultInterruptHandler 1C8E  
            _TMR1_DefaultInterruptHandler 1C88                                    ___flge 0EA2  
                           main@hours_pom 00F8                   __end_of_TMR1_StartTimer 1C92  
                               ??___fladd 000E                                    ___wmul 1BB8  
                    __end_of_generateBeep 17F6                                 ??___awdiv 000A  
                               ??___flneg 000A                                 ??___awmod 000A  
                               ??___flsub 001E                                 ??___fltol 0041  
                               ??___lwdiv 0010                       _EUSART_Transmit_ISR 0000  
                                  clear_0 1B66                                    clear_1 1B72  
                                  clear_2 1B7E                          ___awdiv@quotient 000C  
                         ___awmod@divisor 0008                                    isa$std 0001  
                         ___awmod@counter 000A                                    _roundf 056E  
                        flushBuffer@F2568 0100                     displayTime@timeString 00C3  
                          printString@str 0046                         displayAlarmTime@i 00C8  
             FLASH_WriteBlock@dataCounter 0017                         ?_displayAlarmTime 0001  
                            __mediumconst F7F4                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                            _checkButtons 0844                        ??_displayAlarmTime 0050  
TMR1_SetInterruptHandler@InterruptHandler 0006                              ?_printString 0046  
                              ___flge@ff1 0006                                ___flge@ff2 000A  
                        ?_TMR1_Initialize 0001                         _SYSTEM_Initialize 1C1A  
                              __accesstop 0060                   __end_of__initialization 1B84  
                              ___flneg@f1 0006                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 0001                                ___fltol@f1 003D  
    __end_of_EUSART_SetTxInterruptHandler 1C7E              _EUSART_SetTxInterruptHandler 1C74  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 004A  
                               ?_TMR1_ISR 0001             ?_TMR1_DefaultInterruptHandler 0001  
                            _alarmMinutes 00AC                             __end_of_toint FFF9  
         __end_of_MAX7219_Dot_Matrix_font FFF5               FLASH_WriteBlock@GIEBitValue 0014  
                            _clearDisplay 1A50                 __end_of_SYSTEM_Initialize 1C34  
                          flushBuffer@dev 003E                            flushBuffer@row 0042  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              _alarmHours 00AD             delayMicroseconds@microseconds 0006  
                              _clearAlarm 1C54             displayAlarmTime@displayString 00BE  
                            flushBuffer@i 0044                              flushBuffer@j 0040  
                         _saveTimeToFlash 1704                                   ?___flge 0006  
           ?_EUSART_SetTxInterruptHandler 0006          _EUSART_TxDefaultInterruptHandler 00FE  
                                 ?___wmul 0006                          ?_TMR1_StartTimer 0001  
                              _blinkTimer 00A2                                ??_TMR1_ISR 0001  
                                 _BAUDCON 0FB8                                   ?_roundf 001E  
                          _FLASH_ReadByte 1C34                             _eusartRxCount 00B1  
                       __end_of_btGetData 1704                                   _TBLPTRH 0FF7  
                                 _TBLPTRL 0FF6                                   _TBLPTRU 0FF8  
                                 _OSCTUNE 0F9B                                   _SSPCON1 0FC6  
                                 _SSPSTAT 0FC7                          _FLASH_EraseBlock 1B2C  
                        ??_SPI_Initialize 0006       EUSART_SetTxInterruptHandler@handler 0006  
                 generateBeep@duration_ms 0013                                   __Hparam 0000  
                                 __Lparam 0000                                   ___fladd 00AE  
                                 ___awdiv 1156                                   ___flneg 1A88  
                                 ___awmod 15B6                          _isButton3Pressed 00A7  
                                 ___flsub 19C4                                   ___fltol 0D9C  
                                 ___lwdiv 17F6                    __end_of_FLASH_ReadByte 1C46  
                                 __pcinit 1B60                                   __ramtop 1000  
                              _matrixInit 1AF8                                   __ptext0 1090  
                                 __ptext1 18D2                                   __ptext2 12DA  
                                 __ptext3 1782                                   __ptext4 1B8E  
                                 __ptext5 1BB8                                   __ptext6 17F6  
                                 __ptext7 1A50                                   __ptext8 1AF8  
                                 __ptext9 1924            ??_TMR1_DefaultInterruptHandler 0001  
                           ??_max7219_cmd 0008                                 _T1CONbits 0FCD  
                   _OSCILLATOR_Initialize 1C6A                          ___awmod@dividend 0006  
                       __end_of_max_write 12DA                                   _minutes 00AF  
                ??_PIN_MANAGER_Initialize 0006                                   _seconds 00AE  
               ?_TMR1_SetInterruptHandler 0006                         ?_SPI_Exchange8bit 0001  
                            _generateBeep 1782                      end_of_initialization 1B84  
                         printString@data 00B5                             triggerAlarm@i 00C0  
                      ??_SPI_Exchange8bit 0006                           printString@indx 00B3  
                    SPI_Exchange8bit@data 0006                   __end_of_saveTimeToFlash 1782  
                           _calculateTime 1A0A                               ?_clearAlarm 0001  
                       _EUSART_Initialize 1976                              max_write@dev 0017  
                              _uartBuffer 0080                              btGetData@rcv 0001  
                      ?_EUSART_Initialize 0001                              max_write@row 000E  
                               _RCSTAbits 0FAB                                   postinc0 0FEE  
                                 postinc2 0FDE                                   roundf@e 002E  
                                 roundf@u 0030                                   roundf@x 001E  
                                 roundf@y 0039                                   roundf@z 002A  
                         ?_FLASH_ReadByte 0006                       ??_EUSART_Initialize 0008  
                        saveTimeToFlash@i 00F7            ??_EUSART_SetTxInterruptHandler 0008  
                       _loadTimeFromFlash 1398                             ?_processAlarm 0001  
                               _PORTBbits 0F81                             clearDisplay@i 0046  
                      ?_loadTimeFromFlash 0001                               ___fladd@grs 0015  
                               _TRISBbits 0F93             FLASH_WriteBlock@flashWrBufPtr 000F  
                     ??_loadTimeFromFlash 000A                       __end_of_max7219_cmd 1976  
                FLASH_EraseBlock@baseAddr 0006                 __end_of_EUSART_Initialize 19C4  
                          ?_calculateTime 0001                                 _TXSTAbits 0FAC  
                       FLASH_WriteBlock@i 0018                         FLASH_WriteBlock@j 0015  
              saveTimeToFlash@flashBuffer 00B3              __end_of_INTERRUPT_Initialize 1C96  
                           ??_displayTime 0050                 __end_of_loadTimeFromFlash 144E  
                          __end_of___flge 0FA6                            __end_of___wmul 1BDE  
                          ??_processAlarm 0052                               ?_matrixInit 0001  
            checkButtons@alarmSettingMode 00A4                          _FLASH_WriteBlock 0FA6  
                  ?_OSCILLATOR_Initialize 0001                 TMR1_Initialize@tmr1Offset 0049  
                          __end_of_roundf 0844                       start_initialization 1B60  
                           ?_triggerAlarm 0001                          ?_saveTimeToFlash 0001  
                      printString@strindx 00B6                             ??_flushBuffer 001B  
                                ??___flge 000E                                  ??___wmul 000A  
         displayAlarmTime@alarmTimeString 00C3               FLASH_EraseBlock@GIEBitValue 000A  
                __end_of_FLASH_EraseBlock 1B60                                  ??_roundf 0022  
                               ___fladd@a 000A                                 ___fladd@b 0006  
                     __end_of_displayTime 1502                               _max7219_cmd 1924  
                             __pbssCOMRAM 0052                               _alarmActive 00AA  
                               ___flsub@a 001A                                 ___flsub@b 0016  
                           __pcstackBANK0 00B3                         _delayMicroseconds 1B8E  
                          ??_triggerAlarm 0050                              max7219_cmd@i 000D  
                      ?_delayMicroseconds 0006                                 _btGetData 1666  
                         ??_calculateTime 0001          _EUSART_RxDefaultInterruptHandler 00FC  
                 _MAX7219_Dot_Matrix_font F7F5                                 __pnvBANK0 00FA  
                     ??_delayMicroseconds 0008                                 _btTimeSet 00A6  
                        ___lwdiv@dividend 000C                    _PIN_MANAGER_Initialize 1BDE  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 1C6A  
                           __pmediumconst F7F4                                  ?___fladd 0006  
                                ?___awdiv 0006                                  ?___flneg 0006  
                                ?___awmod 0006                                  ?___flsub 0016  
                                ?___fltol 003D                                  ?___lwdiv 000C  
                            _eusartRxHead 0055                              _eusartTxHead 0058  
                            _eusartRxTail 00B2                       __end_of_flushBuffer 0D9C  
                            _eusartTxTail 0057                                 _bufferCol 0060  
            ??_INTERRUPT_InterruptManager 0002                   _eusartTxBufferRemaining 0056  
               __end_of_delayMicroseconds 1BB8                          ___lwdiv@quotient 0011  
                               _max_write 121A                      _INTERRUPT_Initialize 1C92  
                              ?_btGetData 0001            FLASH_WriteBlock@blockStartAddr 0010  
                          _eusartRxBuffer 008A                            _eusartTxBuffer 0092  
                    __end_of_processAlarm 1924                            ___wmul@product 000A  
                                _LATBbits 0F8A                                  _LATCbits 0F8B  
                            ??_clearAlarm 0006                                  _PIE1bits 0F9D  
                        _displayAlarmTime 1502                                  i2u310_40 16DE  
                                i2u310_41 16DA                                  i2u311_40 16F0  
                                i2u311_41 16EC                                  i2u304_40 1ADE  
                                i2u304_41 1ADA                           max_write@offset 0013  
                                i2u305_48 1AE4                                  i2u306_40 167A  
                                i2u305_49 1AF6                                  i2u306_41 1676  
                                i2u307_40 168A                                  i2u307_41 1686  
                                i2u308_40 16AC                                  i2u308_41 16A8  
                                i2u309_40 16BC                                  i2u309_41 16B8  
                                i2u360_40 0068                                  i2u360_41 0064  
                                i2u361_40 007C                                  i2u361_41 0078  
                                _PIR1bits 0F9E                                  i2u362_40 008A  
                                i2u362_41 0086                          ??_FLASH_ReadByte 000A  
                                i2u267_40 1A1E                                  i2u267_41 1A1A  
                                _PIR2bits 0FA1                                  i2u268_40 1A34  
                                i2u356_40 0028                                  i2u268_41 1A30  
                                i2u356_41 0024                                  i2u269_40 1A4A  
                                i2u357_40 0036                                  i2u269_41 1A46  
                                i2u357_41 0032                                  i2u358_40 0044  
                                i2u358_41 0040                                  i2u359_40 005A  
                                i2u359_41 0056                                  _RCONbits 0FD0  
                                _TMR1_ISR 1AC0                               _displayTime 144E  
                       ??_TMR1_Initialize 0047                         ___wmul@multiplier 0006  
                      __end_of_clearAlarm 1C60                             ?_checkButtons 0001  
                             _INTCON2bits 0FF1                                ?_max_write 000E  
                   ?_INTERRUPT_Initialize 0001                             ??_printString 0048  
                __end_of_FLASH_WriteBlock 1090                                roundf@F522 009A  
                              _EECON1bits 0FA6                                  __Hrparam 0000  
                             _flushBuffer 0C6E                                  __Lrparam 0000  
                      max_write@devTarget 0015                                roundf@sign 0038  
                 ??_OSCILLATOR_Initialize 0006                      __end_of_triggerAlarm 1398  
                            ??_matrixInit 000F                  _TMR1_SetInterruptHandler 1C60  
                   _TMR1_InterruptHandler 00FA                           main@minutes_pom 00F9  
                                _alarmSet 00AB                            ??_checkButtons 0050  
                         ___lwdiv@divisor 000E                           ___lwdiv@counter 0010  
                           ?_clearDisplay 0001                                  __ptext10 1398  
                                __ptext11 0844                                  __ptext20 121A  
                                __ptext12 1704                                  __ptext21 1156  
                                __ptext13 0FA6                                  __ptext30 00AE  
                                __ptext22 1C00                                  __ptext14 1B2C  
                                __ptext31 1A88                                  __ptext23 15B6  
                                __ptext15 1C34                                  __ptext40 1C74  
                                __ptext32 0EA2                                  __ptext24 1C54  
                                __ptext16 144E                                  __ptext41 1C7E  
                                __ptext33 0D9C                                  __ptext25 1C8E  
                                __ptext17 1502                                  __ptext34 1C60  
                                __ptext26 1C1A                                  __ptext18 0ADA  
                                __ptext43 1666                                  __ptext35 1C46  
                                __ptext27 186A                                  __ptext19 0C6E  
                                __ptext44 1AC0                                  __ptext36 1BDE  
                                __ptext28 056E                                  __ptext45 1C88  
                                __ptext37 1C6A                                  __ptext29 19C4  
                                __ptext46 1A0A                                  __ptext38 1C92  
                                __ptext39 1976                         ??_TMR1_StartTimer 0006  
                             ??_btGetData 0001                        __end_of_matrixInit 1B2C  
                     __end_of_printString 0C6E                      flushBuffer@bufferRow 001E  
                         _displayBlinking 00A8                                  isa$xinst 0000  
                    max7219_cmd@writeData 000B                                  int$flags 0059  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                       ?_FLASH_EraseBlock 0006       FLASH_WriteBlock@numberOfWriteBlocks 0016  
                            ?_max7219_cmd 0007                        ??_FLASH_EraseBlock 000A  
                              _INTCONbits 0FF2                           _uartBufferIndex 0054  
                          ??_clearDisplay 0046                    ??_INTERRUPT_Initialize 0006  
                      max_write@writeData 0019                               ??_max_write 0011  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
    __end_of_EUSART_SetRxInterruptHandler 1C88              _EUSART_SetRxInterruptHandler 1C7E  
                           max_write@data 0010                          _SPI_Exchange8bit 1C00  
                      _EUSART_Receive_ISR 0000                  displayTime@displayString 00BE  
                            _processAlarm 18D2                  __end_of_displayAlarmTime 15B6  
           checkButtons@button3PressCount 00A5                               _SSPCON1bits 0FC6  
                           ?_generateBeep 0013                             ___fladd@signs 0012  
          __end_of_PIN_MANAGER_Initialize 1C00                               _printString 0ADA  
                            ___fladd@aexp 0013                              ___fladd@bexp 0014  
                   __end_of_calculateTime 1A50                           _TMR1_Initialize 186A  
                             _roundf$2190 0034                               _roundf$2191 0026  
