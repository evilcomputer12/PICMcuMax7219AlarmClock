

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 11 01:23:15 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 05/01/2024 GMT
    57                           ; 
    58                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F26K20 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     
    91 ;; Function _EUSART_Transmit_ISR is unused but had its address taken
    92   000000                     
    93 ;; Function _EUSART_Receive_ISR is unused but had its address taken
    94   000000                     
    95                           	psect	mediumconst
    96   00F7F8                     __pmediumconst:
    97                           	callstack 0
    98   00F7F8  00                 	db	0
    99   00F7F9                     _MAX7219_Dot_Matrix_font:
   100                           	callstack 0
   101   00F7F9  00                 	db	0
   102   00F7FA  00                 	db	0
   103   00F7FB  00                 	db	0
   104   00F7FC  00                 	db	0
   105   00F7FD  00                 	db	0
   106   00F7FE  00                 	db	0
   107   00F7FF  00                 	db	0
   108   00F800  00                 	db	0
   109   00F801  7E                 	db	126
   110   00F802  81                 	db	129
   111   00F803  95                 	db	149
   112   00F804  B1                 	db	177
   113   00F805  B1                 	db	177
   114   00F806  95                 	db	149
   115   00F807  81                 	db	129
   116   00F808  7E                 	db	126
   117   00F809  7E                 	db	126
   118   00F80A  FF                 	db	255
   119   00F80B  EB                 	db	235
   120   00F80C  CF                 	db	207
   121   00F80D  CF                 	db	207
   122   00F80E  EB                 	db	235
   123   00F80F  FF                 	db	255
   124   00F810  7E                 	db	126
   125   00F811  0E                 	db	14
   126   00F812  1F                 	db	31
   127   00F813  3F                 	db	63
   128   00F814  7E                 	db	126
   129   00F815  3F                 	db	63
   130   00F816  1F                 	db	31
   131   00F817  0E                 	db	14
   132   00F818  00                 	db	0
   133   00F819  08                 	db	8
   134   00F81A  1C                 	db	28
   135   00F81B  3E                 	db	62
   136   00F81C  7F                 	db	127
   137   00F81D  3E                 	db	62
   138   00F81E  1C                 	db	28
   139   00F81F  08                 	db	8
   140   00F820  00                 	db	0
   141   00F821  18                 	db	24
   142   00F822  BA                 	db	186
   143   00F823  FF                 	db	255
   144   00F824  FF                 	db	255
   145   00F825  FF                 	db	255
   146   00F826  BA                 	db	186
   147   00F827  18                 	db	24
   148   00F828  00                 	db	0
   149   00F829  10                 	db	16
   150   00F82A  B8                 	db	184
   151   00F82B  FC                 	db	252
   152   00F82C  FF                 	db	255
   153   00F82D  FC                 	db	252
   154   00F82E  B8                 	db	184
   155   00F82F  10                 	db	16
   156   00F830  00                 	db	0
   157   00F831  00                 	db	0
   158   00F832  00                 	db	0
   159   00F833  18                 	db	24
   160   00F834  3C                 	db	60
   161   00F835  3C                 	db	60
   162   00F836  18                 	db	24
   163   00F837  00                 	db	0
   164   00F838  00                 	db	0
   165   00F839  FF                 	db	255
   166   00F83A  FF                 	db	255
   167   00F83B  E7                 	db	231
   168   00F83C  C3                 	db	195
   169   00F83D  C3                 	db	195
   170   00F83E  E7                 	db	231
   171   00F83F  FF                 	db	255
   172   00F840  FF                 	db	255
   173   00F841  00                 	db	0
   174   00F842  3C                 	db	60
   175   00F843  66                 	db	102
   176   00F844  42                 	db	66
   177   00F845  42                 	db	66
   178   00F846  66                 	db	102
   179   00F847  3C                 	db	60
   180   00F848  00                 	db	0
   181   00F849  FF                 	db	255
   182   00F84A  C3                 	db	195
   183   00F84B  99                 	db	153
   184   00F84C  BD                 	db	189
   185   00F84D  BD                 	db	189
   186   00F84E  99                 	db	153
   187   00F84F  C3                 	db	195
   188   00F850  FF                 	db	255
   189   00F851  70                 	db	112
   190   00F852  F8                 	db	248
   191   00F853  88                 	db	136
   192   00F854  88                 	db	136
   193   00F855  FD                 	db	253
   194   00F856  7F                 	db	127
   195   00F857  07                 	db	7
   196   00F858  0F                 	db	15
   197   00F859  00                 	db	0
   198   00F85A  4E                 	db	78
   199   00F85B  5F                 	db	95
   200   00F85C  F1                 	db	241
   201   00F85D  F1                 	db	241
   202   00F85E  5F                 	db	95
   203   00F85F  4E                 	db	78
   204   00F860  00                 	db	0
   205   00F861  C0                 	db	192
   206   00F862  E0                 	db	224
   207   00F863  FF                 	db	255
   208   00F864  7F                 	db	127
   209   00F865  05                 	db	5
   210   00F866  05                 	db	5
   211   00F867  07                 	db	7
   212   00F868  07                 	db	7
   213   00F869  C0                 	db	192
   214   00F86A  FF                 	db	255
   215   00F86B  7F                 	db	127
   216   00F86C  05                 	db	5
   217   00F86D  05                 	db	5
   218   00F86E  65                 	db	101
   219   00F86F  7F                 	db	127
   220   00F870  3F                 	db	63
   221   00F871  99                 	db	153
   222   00F872  5A                 	db	90
   223   00F873  3C                 	db	60
   224   00F874  E7                 	db	231
   225   00F875  E7                 	db	231
   226   00F876  3C                 	db	60
   227   00F877  5A                 	db	90
   228   00F878  99                 	db	153
   229   00F879  7F                 	db	127
   230   00F87A  3E                 	db	62
   231   00F87B  3E                 	db	62
   232   00F87C  1C                 	db	28
   233   00F87D  1C                 	db	28
   234   00F87E  08                 	db	8
   235   00F87F  08                 	db	8
   236   00F880  00                 	db	0
   237   00F881  08                 	db	8
   238   00F882  08                 	db	8
   239   00F883  1C                 	db	28
   240   00F884  1C                 	db	28
   241   00F885  3E                 	db	62
   242   00F886  3E                 	db	62
   243   00F887  7F                 	db	127
   244   00F888  00                 	db	0
   245   00F889  00                 	db	0
   246   00F88A  24                 	db	36
   247   00F88B  66                 	db	102
   248   00F88C  FF                 	db	255
   249   00F88D  FF                 	db	255
   250   00F88E  66                 	db	102
   251   00F88F  24                 	db	36
   252   00F890  00                 	db	0
   253   00F891  00                 	db	0
   254   00F892  5F                 	db	95
   255   00F893  5F                 	db	95
   256   00F894  00                 	db	0
   257   00F895  00                 	db	0
   258   00F896  5F                 	db	95
   259   00F897  5F                 	db	95
   260   00F898  00                 	db	0
   261   00F899  06                 	db	6
   262   00F89A  0F                 	db	15
   263   00F89B  09                 	db	9
   264   00F89C  7F                 	db	127
   265   00F89D  7F                 	db	127
   266   00F89E  01                 	db	1
   267   00F89F  7F                 	db	127
   268   00F8A0  7F                 	db	127
   269   00F8A1  40                 	db	64
   270   00F8A2  DA                 	db	218
   271   00F8A3  BF                 	db	191
   272   00F8A4  A5                 	db	165
   273   00F8A5  FD                 	db	253
   274   00F8A6  59                 	db	89
   275   00F8A7  03                 	db	3
   276   00F8A8  02                 	db	2
   277   00F8A9  00                 	db	0
   278   00F8AA  70                 	db	112
   279   00F8AB  70                 	db	112
   280   00F8AC  70                 	db	112
   281   00F8AD  70                 	db	112
   282   00F8AE  70                 	db	112
   283   00F8AF  70                 	db	112
   284   00F8B0  00                 	db	0
   285   00F8B1  80                 	db	128
   286   00F8B2  94                 	db	148
   287   00F8B3  B6                 	db	182
   288   00F8B4  FF                 	db	255
   289   00F8B5  FF                 	db	255
   290   00F8B6  B6                 	db	182
   291   00F8B7  94                 	db	148
   292   00F8B8  80                 	db	128
   293   00F8B9  00                 	db	0
   294   00F8BA  04                 	db	4
   295   00F8BB  06                 	db	6
   296   00F8BC  7F                 	db	127
   297   00F8BD  7F                 	db	127
   298   00F8BE  06                 	db	6
   299   00F8BF  04                 	db	4
   300   00F8C0  00                 	db	0
   301   00F8C1  00                 	db	0
   302   00F8C2  10                 	db	16
   303   00F8C3  30                 	db	48
   304   00F8C4  7F                 	db	127
   305   00F8C5  7F                 	db	127
   306   00F8C6  30                 	db	48
   307   00F8C7  10                 	db	16
   308   00F8C8  00                 	db	0
   309   00F8C9  08                 	db	8
   310   00F8CA  08                 	db	8
   311   00F8CB  08                 	db	8
   312   00F8CC  2A                 	db	42
   313   00F8CD  3E                 	db	62
   314   00F8CE  1C                 	db	28
   315   00F8CF  08                 	db	8
   316   00F8D0  00                 	db	0
   317   00F8D1  08                 	db	8
   318   00F8D2  1C                 	db	28
   319   00F8D3  3E                 	db	62
   320   00F8D4  2A                 	db	42
   321   00F8D5  08                 	db	8
   322   00F8D6  08                 	db	8
   323   00F8D7  08                 	db	8
   324   00F8D8  00                 	db	0
   325   00F8D9  3C                 	db	60
   326   00F8DA  3C                 	db	60
   327   00F8DB  20                 	db	32
   328   00F8DC  20                 	db	32
   329   00F8DD  20                 	db	32
   330   00F8DE  20                 	db	32
   331   00F8DF  20                 	db	32
   332   00F8E0  00                 	db	0
   333   00F8E1  08                 	db	8
   334   00F8E2  1C                 	db	28
   335   00F8E3  3E                 	db	62
   336   00F8E4  08                 	db	8
   337   00F8E5  08                 	db	8
   338   00F8E6  3E                 	db	62
   339   00F8E7  1C                 	db	28
   340   00F8E8  08                 	db	8
   341   00F8E9  30                 	db	48
   342   00F8EA  38                 	db	56
   343   00F8EB  3C                 	db	60
   344   00F8EC  3E                 	db	62
   345   00F8ED  3E                 	db	62
   346   00F8EE  3C                 	db	60
   347   00F8EF  38                 	db	56
   348   00F8F0  30                 	db	48
   349   00F8F1  06                 	db	6
   350   00F8F2  0E                 	db	14
   351   00F8F3  1E                 	db	30
   352   00F8F4  3E                 	db	62
   353   00F8F5  3E                 	db	62
   354   00F8F6  1E                 	db	30
   355   00F8F7  0E                 	db	14
   356   00F8F8  06                 	db	6
   357   00F8F9  00                 	db	0
   358   00F8FA  00                 	db	0
   359   00F8FB  00                 	db	0
   360   00F8FC  00                 	db	0
   361   00F8FD  00                 	db	0
   362   00F8FE  00                 	db	0
   363   00F8FF  00                 	db	0
   364   00F900  00                 	db	0
   365   00F901  00                 	db	0
   366   00F902  06                 	db	6
   367   00F903  5F                 	db	95
   368   00F904  5F                 	db	95
   369   00F905  06                 	db	6
   370   00F906  00                 	db	0
   371   00F907  00                 	db	0
   372   00F908  00                 	db	0
   373   00F909  00                 	db	0
   374   00F90A  07                 	db	7
   375   00F90B  07                 	db	7
   376   00F90C  00                 	db	0
   377   00F90D  07                 	db	7
   378   00F90E  07                 	db	7
   379   00F90F  00                 	db	0
   380   00F910  00                 	db	0
   381   00F911  14                 	db	20
   382   00F912  7F                 	db	127
   383   00F913  7F                 	db	127
   384   00F914  14                 	db	20
   385   00F915  7F                 	db	127
   386   00F916  7F                 	db	127
   387   00F917  14                 	db	20
   388   00F918  00                 	db	0
   389   00F919  24                 	db	36
   390   00F91A  2E                 	db	46
   391   00F91B  6B                 	db	107
   392   00F91C  6B                 	db	107
   393   00F91D  3A                 	db	58
   394   00F91E  12                 	db	18
   395   00F91F  00                 	db	0
   396   00F920  00                 	db	0
   397   00F921  46                 	db	70
   398   00F922  66                 	db	102
   399   00F923  30                 	db	48
   400   00F924  18                 	db	24
   401   00F925  0C                 	db	12
   402   00F926  66                 	db	102
   403   00F927  62                 	db	98
   404   00F928  00                 	db	0
   405   00F929  30                 	db	48
   406   00F92A  7A                 	db	122
   407   00F92B  4F                 	db	79
   408   00F92C  5D                 	db	93
   409   00F92D  37                 	db	55
   410   00F92E  7A                 	db	122
   411   00F92F  48                 	db	72
   412   00F930  00                 	db	0
   413   00F931  04                 	db	4
   414   00F932  07                 	db	7
   415   00F933  03                 	db	3
   416   00F934  00                 	db	0
   417   00F935  00                 	db	0
   418   00F936  00                 	db	0
   419   00F937  00                 	db	0
   420   00F938  00                 	db	0
   421   00F939  00                 	db	0
   422   00F93A  1C                 	db	28
   423   00F93B  3E                 	db	62
   424   00F93C  63                 	db	99
   425   00F93D  41                 	db	65
   426   00F93E  00                 	db	0
   427   00F93F  00                 	db	0
   428   00F940  00                 	db	0
   429   00F941  00                 	db	0
   430   00F942  41                 	db	65
   431   00F943  63                 	db	99
   432   00F944  3E                 	db	62
   433   00F945  1C                 	db	28
   434   00F946  00                 	db	0
   435   00F947  00                 	db	0
   436   00F948  00                 	db	0
   437   00F949  08                 	db	8
   438   00F94A  2A                 	db	42
   439   00F94B  3E                 	db	62
   440   00F94C  1C                 	db	28
   441   00F94D  1C                 	db	28
   442   00F94E  3E                 	db	62
   443   00F94F  2A                 	db	42
   444   00F950  08                 	db	8
   445   00F951  08                 	db	8
   446   00F952  08                 	db	8
   447   00F953  3E                 	db	62
   448   00F954  3E                 	db	62
   449   00F955  08                 	db	8
   450   00F956  08                 	db	8
   451   00F957  00                 	db	0
   452   00F958  00                 	db	0
   453   00F959  00                 	db	0
   454   00F95A  80                 	db	128
   455   00F95B  E0                 	db	224
   456   00F95C  60                 	db	96
   457   00F95D  00                 	db	0
   458   00F95E  00                 	db	0
   459   00F95F  00                 	db	0
   460   00F960  00                 	db	0
   461   00F961  08                 	db	8
   462   00F962  08                 	db	8
   463   00F963  08                 	db	8
   464   00F964  08                 	db	8
   465   00F965  08                 	db	8
   466   00F966  08                 	db	8
   467   00F967  00                 	db	0
   468   00F968  00                 	db	0
   469   00F969  00                 	db	0
   470   00F96A  00                 	db	0
   471   00F96B  60                 	db	96
   472   00F96C  60                 	db	96
   473   00F96D  00                 	db	0
   474   00F96E  00                 	db	0
   475   00F96F  00                 	db	0
   476   00F970  00                 	db	0
   477   00F971  60                 	db	96
   478   00F972  30                 	db	48
   479   00F973  18                 	db	24
   480   00F974  0C                 	db	12
   481   00F975  06                 	db	6
   482   00F976  03                 	db	3
   483   00F977  01                 	db	1
   484   00F978  00                 	db	0
   485   00F979  3E                 	db	62
   486   00F97A  7F                 	db	127
   487   00F97B  71                 	db	113
   488   00F97C  59                 	db	89
   489   00F97D  4D                 	db	77
   490   00F97E  7F                 	db	127
   491   00F97F  3E                 	db	62
   492   00F980  00                 	db	0
   493   00F981  40                 	db	64
   494   00F982  42                 	db	66
   495   00F983  7F                 	db	127
   496   00F984  7F                 	db	127
   497   00F985  40                 	db	64
   498   00F986  40                 	db	64
   499   00F987  00                 	db	0
   500   00F988  00                 	db	0
   501   00F989  62                 	db	98
   502   00F98A  73                 	db	115
   503   00F98B  59                 	db	89
   504   00F98C  49                 	db	73
   505   00F98D  6F                 	db	111
   506   00F98E  66                 	db	102
   507   00F98F  00                 	db	0
   508   00F990  00                 	db	0
   509   00F991  22                 	db	34
   510   00F992  63                 	db	99
   511   00F993  49                 	db	73
   512   00F994  49                 	db	73
   513   00F995  7F                 	db	127
   514   00F996  36                 	db	54
   515   00F997  00                 	db	0
   516   00F998  00                 	db	0
   517   00F999  18                 	db	24
   518   00F99A  1C                 	db	28
   519   00F99B  16                 	db	22
   520   00F99C  53                 	db	83
   521   00F99D  7F                 	db	127
   522   00F99E  7F                 	db	127
   523   00F99F  50                 	db	80
   524   00F9A0  00                 	db	0
   525   00F9A1  27                 	db	39
   526   00F9A2  67                 	db	103
   527   00F9A3  45                 	db	69
   528   00F9A4  45                 	db	69
   529   00F9A5  7D                 	db	125
   530   00F9A6  39                 	db	57
   531   00F9A7  00                 	db	0
   532   00F9A8  00                 	db	0
   533   00F9A9  3C                 	db	60
   534   00F9AA  7E                 	db	126
   535   00F9AB  4B                 	db	75
   536   00F9AC  49                 	db	73
   537   00F9AD  79                 	db	121
   538   00F9AE  30                 	db	48
   539   00F9AF  00                 	db	0
   540   00F9B0  00                 	db	0
   541   00F9B1  03                 	db	3
   542   00F9B2  03                 	db	3
   543   00F9B3  71                 	db	113
   544   00F9B4  79                 	db	121
   545   00F9B5  0F                 	db	15
   546   00F9B6  07                 	db	7
   547   00F9B7  00                 	db	0
   548   00F9B8  00                 	db	0
   549   00F9B9  36                 	db	54
   550   00F9BA  7F                 	db	127
   551   00F9BB  49                 	db	73
   552   00F9BC  49                 	db	73
   553   00F9BD  7F                 	db	127
   554   00F9BE  36                 	db	54
   555   00F9BF  00                 	db	0
   556   00F9C0  00                 	db	0
   557   00F9C1  06                 	db	6
   558   00F9C2  4F                 	db	79
   559   00F9C3  49                 	db	73
   560   00F9C4  69                 	db	105
   561   00F9C5  3F                 	db	63
   562   00F9C6  1E                 	db	30
   563   00F9C7  00                 	db	0
   564   00F9C8  00                 	db	0
   565   00F9C9  00                 	db	0
   566   00F9CA  00                 	db	0
   567   00F9CB  66                 	db	102
   568   00F9CC  66                 	db	102
   569   00F9CD  00                 	db	0
   570   00F9CE  00                 	db	0
   571   00F9CF  00                 	db	0
   572   00F9D0  00                 	db	0
   573   00F9D1  00                 	db	0
   574   00F9D2  80                 	db	128
   575   00F9D3  E6                 	db	230
   576   00F9D4  66                 	db	102
   577   00F9D5  00                 	db	0
   578   00F9D6  00                 	db	0
   579   00F9D7  00                 	db	0
   580   00F9D8  00                 	db	0
   581   00F9D9  08                 	db	8
   582   00F9DA  1C                 	db	28
   583   00F9DB  36                 	db	54
   584   00F9DC  63                 	db	99
   585   00F9DD  41                 	db	65
   586   00F9DE  00                 	db	0
   587   00F9DF  00                 	db	0
   588   00F9E0  00                 	db	0
   589   00F9E1  24                 	db	36
   590   00F9E2  24                 	db	36
   591   00F9E3  24                 	db	36
   592   00F9E4  24                 	db	36
   593   00F9E5  24                 	db	36
   594   00F9E6  24                 	db	36
   595   00F9E7  00                 	db	0
   596   00F9E8  00                 	db	0
   597   00F9E9  00                 	db	0
   598   00F9EA  41                 	db	65
   599   00F9EB  63                 	db	99
   600   00F9EC  36                 	db	54
   601   00F9ED  1C                 	db	28
   602   00F9EE  08                 	db	8
   603   00F9EF  00                 	db	0
   604   00F9F0  00                 	db	0
   605   00F9F1  02                 	db	2
   606   00F9F2  03                 	db	3
   607   00F9F3  51                 	db	81
   608   00F9F4  59                 	db	89
   609   00F9F5  0F                 	db	15
   610   00F9F6  06                 	db	6
   611   00F9F7  00                 	db	0
   612   00F9F8  00                 	db	0
   613   00F9F9  3E                 	db	62
   614   00F9FA  7F                 	db	127
   615   00F9FB  41                 	db	65
   616   00F9FC  5D                 	db	93
   617   00F9FD  5D                 	db	93
   618   00F9FE  1F                 	db	31
   619   00F9FF  1E                 	db	30
   620   00FA00  00                 	db	0
   621   00FA01  7C                 	db	124
   622   00FA02  7E                 	db	126
   623   00FA03  13                 	db	19
   624   00FA04  13                 	db	19
   625   00FA05  7E                 	db	126
   626   00FA06  7C                 	db	124
   627   00FA07  00                 	db	0
   628   00FA08  00                 	db	0
   629   00FA09  41                 	db	65
   630   00FA0A  7F                 	db	127
   631   00FA0B  7F                 	db	127
   632   00FA0C  49                 	db	73
   633   00FA0D  49                 	db	73
   634   00FA0E  7F                 	db	127
   635   00FA0F  36                 	db	54
   636   00FA10  00                 	db	0
   637   00FA11  1C                 	db	28
   638   00FA12  3E                 	db	62
   639   00FA13  63                 	db	99
   640   00FA14  41                 	db	65
   641   00FA15  41                 	db	65
   642   00FA16  63                 	db	99
   643   00FA17  22                 	db	34
   644   00FA18  00                 	db	0
   645   00FA19  41                 	db	65
   646   00FA1A  7F                 	db	127
   647   00FA1B  7F                 	db	127
   648   00FA1C  41                 	db	65
   649   00FA1D  63                 	db	99
   650   00FA1E  3E                 	db	62
   651   00FA1F  1C                 	db	28
   652   00FA20  00                 	db	0
   653   00FA21  41                 	db	65
   654   00FA22  7F                 	db	127
   655   00FA23  7F                 	db	127
   656   00FA24  49                 	db	73
   657   00FA25  5D                 	db	93
   658   00FA26  41                 	db	65
   659   00FA27  63                 	db	99
   660   00FA28  00                 	db	0
   661   00FA29  41                 	db	65
   662   00FA2A  7F                 	db	127
   663   00FA2B  7F                 	db	127
   664   00FA2C  49                 	db	73
   665   00FA2D  1D                 	db	29
   666   00FA2E  01                 	db	1
   667   00FA2F  03                 	db	3
   668   00FA30  00                 	db	0
   669   00FA31  1C                 	db	28
   670   00FA32  3E                 	db	62
   671   00FA33  63                 	db	99
   672   00FA34  41                 	db	65
   673   00FA35  51                 	db	81
   674   00FA36  73                 	db	115
   675   00FA37  72                 	db	114
   676   00FA38  00                 	db	0
   677   00FA39  7F                 	db	127
   678   00FA3A  7F                 	db	127
   679   00FA3B  08                 	db	8
   680   00FA3C  08                 	db	8
   681   00FA3D  7F                 	db	127
   682   00FA3E  7F                 	db	127
   683   00FA3F  00                 	db	0
   684   00FA40  00                 	db	0
   685   00FA41  00                 	db	0
   686   00FA42  41                 	db	65
   687   00FA43  7F                 	db	127
   688   00FA44  7F                 	db	127
   689   00FA45  41                 	db	65
   690   00FA46  00                 	db	0
   691   00FA47  00                 	db	0
   692   00FA48  00                 	db	0
   693   00FA49  30                 	db	48
   694   00FA4A  70                 	db	112
   695   00FA4B  40                 	db	64
   696   00FA4C  41                 	db	65
   697   00FA4D  7F                 	db	127
   698   00FA4E  3F                 	db	63
   699   00FA4F  01                 	db	1
   700   00FA50  00                 	db	0
   701   00FA51  41                 	db	65
   702   00FA52  7F                 	db	127
   703   00FA53  7F                 	db	127
   704   00FA54  08                 	db	8
   705   00FA55  1C                 	db	28
   706   00FA56  77                 	db	119
   707   00FA57  63                 	db	99
   708   00FA58  00                 	db	0
   709   00FA59  41                 	db	65
   710   00FA5A  7F                 	db	127
   711   00FA5B  7F                 	db	127
   712   00FA5C  41                 	db	65
   713   00FA5D  40                 	db	64
   714   00FA5E  60                 	db	96
   715   00FA5F  70                 	db	112
   716   00FA60  00                 	db	0
   717   00FA61  00                 	db	0
   718   00FA62  7F                 	db	127
   719   00FA63  0E                 	db	14
   720   00FA64  1C                 	db	28
   721   00FA65  0E                 	db	14
   722   00FA66  7F                 	db	127
   723   00FA67  00                 	db	0
   724   00FA68  00                 	db	0
   725   00FA69  7F                 	db	127
   726   00FA6A  7F                 	db	127
   727   00FA6B  06                 	db	6
   728   00FA6C  0C                 	db	12
   729   00FA6D  18                 	db	24
   730   00FA6E  7F                 	db	127
   731   00FA6F  7F                 	db	127
   732   00FA70  00                 	db	0
   733   00FA71  1C                 	db	28
   734   00FA72  3E                 	db	62
   735   00FA73  63                 	db	99
   736   00FA74  41                 	db	65
   737   00FA75  63                 	db	99
   738   00FA76  3E                 	db	62
   739   00FA77  1C                 	db	28
   740   00FA78  00                 	db	0
   741   00FA79  41                 	db	65
   742   00FA7A  7F                 	db	127
   743   00FA7B  7F                 	db	127
   744   00FA7C  49                 	db	73
   745   00FA7D  09                 	db	9
   746   00FA7E  0F                 	db	15
   747   00FA7F  06                 	db	6
   748   00FA80  00                 	db	0
   749   00FA81  1E                 	db	30
   750   00FA82  3F                 	db	63
   751   00FA83  21                 	db	33
   752   00FA84  71                 	db	113
   753   00FA85  7F                 	db	127
   754   00FA86  5E                 	db	94
   755   00FA87  00                 	db	0
   756   00FA88  00                 	db	0
   757   00FA89  41                 	db	65
   758   00FA8A  7F                 	db	127
   759   00FA8B  7F                 	db	127
   760   00FA8C  09                 	db	9
   761   00FA8D  19                 	db	25
   762   00FA8E  7F                 	db	127
   763   00FA8F  66                 	db	102
   764   00FA90  00                 	db	0
   765   00FA91  26                 	db	38
   766   00FA92  6F                 	db	111
   767   00FA93  4D                 	db	77
   768   00FA94  59                 	db	89
   769   00FA95  73                 	db	115
   770   00FA96  32                 	db	50
   771   00FA97  00                 	db	0
   772   00FA98  00                 	db	0
   773   00FA99  03                 	db	3
   774   00FA9A  41                 	db	65
   775   00FA9B  7F                 	db	127
   776   00FA9C  7F                 	db	127
   777   00FA9D  41                 	db	65
   778   00FA9E  03                 	db	3
   779   00FA9F  00                 	db	0
   780   00FAA0  00                 	db	0
   781   00FAA1  7F                 	db	127
   782   00FAA2  7F                 	db	127
   783   00FAA3  40                 	db	64
   784   00FAA4  40                 	db	64
   785   00FAA5  7F                 	db	127
   786   00FAA6  7F                 	db	127
   787   00FAA7  00                 	db	0
   788   00FAA8  00                 	db	0
   789   00FAA9  1F                 	db	31
   790   00FAAA  3F                 	db	63
   791   00FAAB  60                 	db	96
   792   00FAAC  60                 	db	96
   793   00FAAD  3F                 	db	63
   794   00FAAE  1F                 	db	31
   795   00FAAF  00                 	db	0
   796   00FAB0  00                 	db	0
   797   00FAB1  7F                 	db	127
   798   00FAB2  7F                 	db	127
   799   00FAB3  30                 	db	48
   800   00FAB4  18                 	db	24
   801   00FAB5  30                 	db	48
   802   00FAB6  7F                 	db	127
   803   00FAB7  7F                 	db	127
   804   00FAB8  00                 	db	0
   805   00FAB9  43                 	db	67
   806   00FABA  67                 	db	103
   807   00FABB  3C                 	db	60
   808   00FABC  18                 	db	24
   809   00FABD  3C                 	db	60
   810   00FABE  67                 	db	103
   811   00FABF  43                 	db	67
   812   00FAC0  00                 	db	0
   813   00FAC1  07                 	db	7
   814   00FAC2  4F                 	db	79
   815   00FAC3  78                 	db	120
   816   00FAC4  78                 	db	120
   817   00FAC5  4F                 	db	79
   818   00FAC6  07                 	db	7
   819   00FAC7  00                 	db	0
   820   00FAC8  00                 	db	0
   821   00FAC9  47                 	db	71
   822   00FACA  63                 	db	99
   823   00FACB  71                 	db	113
   824   00FACC  59                 	db	89
   825   00FACD  4D                 	db	77
   826   00FACE  67                 	db	103
   827   00FACF  73                 	db	115
   828   00FAD0  00                 	db	0
   829   00FAD1  00                 	db	0
   830   00FAD2  7F                 	db	127
   831   00FAD3  7F                 	db	127
   832   00FAD4  41                 	db	65
   833   00FAD5  41                 	db	65
   834   00FAD6  00                 	db	0
   835   00FAD7  00                 	db	0
   836   00FAD8  00                 	db	0
   837   00FAD9  01                 	db	1
   838   00FADA  03                 	db	3
   839   00FADB  06                 	db	6
   840   00FADC  0C                 	db	12
   841   00FADD  18                 	db	24
   842   00FADE  30                 	db	48
   843   00FADF  60                 	db	96
   844   00FAE0  00                 	db	0
   845   00FAE1  00                 	db	0
   846   00FAE2  41                 	db	65
   847   00FAE3  41                 	db	65
   848   00FAE4  7F                 	db	127
   849   00FAE5  7F                 	db	127
   850   00FAE6  00                 	db	0
   851   00FAE7  00                 	db	0
   852   00FAE8  00                 	db	0
   853   00FAE9  08                 	db	8
   854   00FAEA  0C                 	db	12
   855   00FAEB  06                 	db	6
   856   00FAEC  03                 	db	3
   857   00FAED  06                 	db	6
   858   00FAEE  0C                 	db	12
   859   00FAEF  08                 	db	8
   860   00FAF0  00                 	db	0
   861   00FAF1  80                 	db	128
   862   00FAF2  80                 	db	128
   863   00FAF3  80                 	db	128
   864   00FAF4  80                 	db	128
   865   00FAF5  80                 	db	128
   866   00FAF6  80                 	db	128
   867   00FAF7  80                 	db	128
   868   00FAF8  80                 	db	128
   869   00FAF9  00                 	db	0
   870   00FAFA  00                 	db	0
   871   00FAFB  03                 	db	3
   872   00FAFC  07                 	db	7
   873   00FAFD  04                 	db	4
   874   00FAFE  00                 	db	0
   875   00FAFF  00                 	db	0
   876   00FB00  00                 	db	0
   877   00FB01  20                 	db	32
   878   00FB02  74                 	db	116
   879   00FB03  54                 	db	84
   880   00FB04  54                 	db	84
   881   00FB05  3C                 	db	60
   882   00FB06  78                 	db	120
   883   00FB07  40                 	db	64
   884   00FB08  00                 	db	0
   885   00FB09  41                 	db	65
   886   00FB0A  7F                 	db	127
   887   00FB0B  3F                 	db	63
   888   00FB0C  48                 	db	72
   889   00FB0D  48                 	db	72
   890   00FB0E  78                 	db	120
   891   00FB0F  30                 	db	48
   892   00FB10  00                 	db	0
   893   00FB11  38                 	db	56
   894   00FB12  7C                 	db	124
   895   00FB13  44                 	db	68
   896   00FB14  44                 	db	68
   897   00FB15  6C                 	db	108
   898   00FB16  28                 	db	40
   899   00FB17  00                 	db	0
   900   00FB18  00                 	db	0
   901   00FB19  30                 	db	48
   902   00FB1A  78                 	db	120
   903   00FB1B  48                 	db	72
   904   00FB1C  49                 	db	73
   905   00FB1D  3F                 	db	63
   906   00FB1E  7F                 	db	127
   907   00FB1F  40                 	db	64
   908   00FB20  00                 	db	0
   909   00FB21  38                 	db	56
   910   00FB22  7C                 	db	124
   911   00FB23  54                 	db	84
   912   00FB24  54                 	db	84
   913   00FB25  5C                 	db	92
   914   00FB26  18                 	db	24
   915   00FB27  00                 	db	0
   916   00FB28  00                 	db	0
   917   00FB29  48                 	db	72
   918   00FB2A  7E                 	db	126
   919   00FB2B  7F                 	db	127
   920   00FB2C  49                 	db	73
   921   00FB2D  03                 	db	3
   922   00FB2E  02                 	db	2
   923   00FB2F  00                 	db	0
   924   00FB30  00                 	db	0
   925   00FB31  98                 	db	152
   926   00FB32  BC                 	db	188
   927   00FB33  A4                 	db	164
   928   00FB34  A4                 	db	164
   929   00FB35  F8                 	db	248
   930   00FB36  7C                 	db	124
   931   00FB37  04                 	db	4
   932   00FB38  00                 	db	0
   933   00FB39  41                 	db	65
   934   00FB3A  7F                 	db	127
   935   00FB3B  7F                 	db	127
   936   00FB3C  08                 	db	8
   937   00FB3D  04                 	db	4
   938   00FB3E  7C                 	db	124
   939   00FB3F  78                 	db	120
   940   00FB40  00                 	db	0
   941   00FB41  00                 	db	0
   942   00FB42  44                 	db	68
   943   00FB43  7D                 	db	125
   944   00FB44  7D                 	db	125
   945   00FB45  40                 	db	64
   946   00FB46  00                 	db	0
   947   00FB47  00                 	db	0
   948   00FB48  00                 	db	0
   949   00FB49  60                 	db	96
   950   00FB4A  E0                 	db	224
   951   00FB4B  80                 	db	128
   952   00FB4C  80                 	db	128
   953   00FB4D  FD                 	db	253
   954   00FB4E  7D                 	db	125
   955   00FB4F  00                 	db	0
   956   00FB50  00                 	db	0
   957   00FB51  41                 	db	65
   958   00FB52  7F                 	db	127
   959   00FB53  7F                 	db	127
   960   00FB54  10                 	db	16
   961   00FB55  38                 	db	56
   962   00FB56  6C                 	db	108
   963   00FB57  44                 	db	68
   964   00FB58  00                 	db	0
   965   00FB59  00                 	db	0
   966   00FB5A  41                 	db	65
   967   00FB5B  7F                 	db	127
   968   00FB5C  7F                 	db	127
   969   00FB5D  40                 	db	64
   970   00FB5E  00                 	db	0
   971   00FB5F  00                 	db	0
   972   00FB60  00                 	db	0
   973   00FB61  7C                 	db	124
   974   00FB62  7C                 	db	124
   975   00FB63  18                 	db	24
   976   00FB64  38                 	db	56
   977   00FB65  1C                 	db	28
   978   00FB66  7C                 	db	124
   979   00FB67  78                 	db	120
   980   00FB68  00                 	db	0
   981   00FB69  7C                 	db	124
   982   00FB6A  7C                 	db	124
   983   00FB6B  04                 	db	4
   984   00FB6C  04                 	db	4
   985   00FB6D  7C                 	db	124
   986   00FB6E  78                 	db	120
   987   00FB6F  00                 	db	0
   988   00FB70  00                 	db	0
   989   00FB71  38                 	db	56
   990   00FB72  7C                 	db	124
   991   00FB73  44                 	db	68
   992   00FB74  44                 	db	68
   993   00FB75  7C                 	db	124
   994   00FB76  38                 	db	56
   995   00FB77  00                 	db	0
   996   00FB78  00                 	db	0
   997   00FB79  84                 	db	132
   998   00FB7A  FC                 	db	252
   999   00FB7B  F8                 	db	248
  1000   00FB7C  A4                 	db	164
  1001   00FB7D  24                 	db	36
  1002   00FB7E  3C                 	db	60
  1003   00FB7F  18                 	db	24
  1004   00FB80  00                 	db	0
  1005   00FB81  18                 	db	24
  1006   00FB82  3C                 	db	60
  1007   00FB83  24                 	db	36
  1008   00FB84  A4                 	db	164
  1009   00FB85  F8                 	db	248
  1010   00FB86  FC                 	db	252
  1011   00FB87  84                 	db	132
  1012   00FB88  00                 	db	0
  1013   00FB89  44                 	db	68
  1014   00FB8A  7C                 	db	124
  1015   00FB8B  78                 	db	120
  1016   00FB8C  4C                 	db	76
  1017   00FB8D  04                 	db	4
  1018   00FB8E  1C                 	db	28
  1019   00FB8F  18                 	db	24
  1020   00FB90  00                 	db	0
  1021   00FB91  48                 	db	72
  1022   00FB92  5C                 	db	92
  1023   00FB93  54                 	db	84
  1024   00FB94  54                 	db	84
  1025   00FB95  74                 	db	116
  1026   00FB96  24                 	db	36
  1027   00FB97  00                 	db	0
  1028   00FB98  00                 	db	0
  1029   00FB99  00                 	db	0
  1030   00FB9A  04                 	db	4
  1031   00FB9B  3E                 	db	62
  1032   00FB9C  7F                 	db	127
  1033   00FB9D  44                 	db	68
  1034   00FB9E  24                 	db	36
  1035   00FB9F  00                 	db	0
  1036   00FBA0  00                 	db	0
  1037   00FBA1  3C                 	db	60
  1038   00FBA2  7C                 	db	124
  1039   00FBA3  40                 	db	64
  1040   00FBA4  40                 	db	64
  1041   00FBA5  3C                 	db	60
  1042   00FBA6  7C                 	db	124
  1043   00FBA7  40                 	db	64
  1044   00FBA8  00                 	db	0
  1045   00FBA9  1C                 	db	28
  1046   00FBAA  3C                 	db	60
  1047   00FBAB  60                 	db	96
  1048   00FBAC  60                 	db	96
  1049   00FBAD  3C                 	db	60
  1050   00FBAE  1C                 	db	28
  1051   00FBAF  00                 	db	0
  1052   00FBB0  00                 	db	0
  1053   00FBB1  3C                 	db	60
  1054   00FBB2  7C                 	db	124
  1055   00FBB3  70                 	db	112
  1056   00FBB4  38                 	db	56
  1057   00FBB5  70                 	db	112
  1058   00FBB6  7C                 	db	124
  1059   00FBB7  3C                 	db	60
  1060   00FBB8  00                 	db	0
  1061   00FBB9  44                 	db	68
  1062   00FBBA  6C                 	db	108
  1063   00FBBB  38                 	db	56
  1064   00FBBC  10                 	db	16
  1065   00FBBD  38                 	db	56
  1066   00FBBE  6C                 	db	108
  1067   00FBBF  44                 	db	68
  1068   00FBC0  00                 	db	0
  1069   00FBC1  9C                 	db	156
  1070   00FBC2  BC                 	db	188
  1071   00FBC3  A0                 	db	160
  1072   00FBC4  A0                 	db	160
  1073   00FBC5  FC                 	db	252
  1074   00FBC6  7C                 	db	124
  1075   00FBC7  00                 	db	0
  1076   00FBC8  00                 	db	0
  1077   00FBC9  4C                 	db	76
  1078   00FBCA  64                 	db	100
  1079   00FBCB  74                 	db	116
  1080   00FBCC  5C                 	db	92
  1081   00FBCD  4C                 	db	76
  1082   00FBCE  64                 	db	100
  1083   00FBCF  00                 	db	0
  1084   00FBD0  00                 	db	0
  1085   00FBD1  08                 	db	8
  1086   00FBD2  08                 	db	8
  1087   00FBD3  3E                 	db	62
  1088   00FBD4  77                 	db	119
  1089   00FBD5  41                 	db	65
  1090   00FBD6  41                 	db	65
  1091   00FBD7  00                 	db	0
  1092   00FBD8  00                 	db	0
  1093   00FBD9  00                 	db	0
  1094   00FBDA  00                 	db	0
  1095   00FBDB  00                 	db	0
  1096   00FBDC  77                 	db	119
  1097   00FBDD  77                 	db	119
  1098   00FBDE  00                 	db	0
  1099   00FBDF  00                 	db	0
  1100   00FBE0  00                 	db	0
  1101   00FBE1  41                 	db	65
  1102   00FBE2  41                 	db	65
  1103   00FBE3  77                 	db	119
  1104   00FBE4  3E                 	db	62
  1105   00FBE5  08                 	db	8
  1106   00FBE6  08                 	db	8
  1107   00FBE7  00                 	db	0
  1108   00FBE8  00                 	db	0
  1109   00FBE9  02                 	db	2
  1110   00FBEA  03                 	db	3
  1111   00FBEB  01                 	db	1
  1112   00FBEC  03                 	db	3
  1113   00FBED  02                 	db	2
  1114   00FBEE  03                 	db	3
  1115   00FBEF  01                 	db	1
  1116   00FBF0  00                 	db	0
  1117   00FBF1  70                 	db	112
  1118   00FBF2  78                 	db	120
  1119   00FBF3  4C                 	db	76
  1120   00FBF4  46                 	db	70
  1121   00FBF5  4C                 	db	76
  1122   00FBF6  78                 	db	120
  1123   00FBF7  70                 	db	112
  1124   00FBF8  00                 	db	0
  1125   00FBF9  0E                 	db	14
  1126   00FBFA  9F                 	db	159
  1127   00FBFB  91                 	db	145
  1128   00FBFC  B1                 	db	177
  1129   00FBFD  FB                 	db	251
  1130   00FBFE  4A                 	db	74
  1131   00FBFF  00                 	db	0
  1132   00FC00  00                 	db	0
  1133   00FC01  3A                 	db	58
  1134   00FC02  7A                 	db	122
  1135   00FC03  40                 	db	64
  1136   00FC04  40                 	db	64
  1137   00FC05  7A                 	db	122
  1138   00FC06  7A                 	db	122
  1139   00FC07  40                 	db	64
  1140   00FC08  00                 	db	0
  1141   00FC09  38                 	db	56
  1142   00FC0A  7C                 	db	124
  1143   00FC0B  54                 	db	84
  1144   00FC0C  55                 	db	85
  1145   00FC0D  5D                 	db	93
  1146   00FC0E  19                 	db	25
  1147   00FC0F  00                 	db	0
  1148   00FC10  00                 	db	0
  1149   00FC11  02                 	db	2
  1150   00FC12  23                 	db	35
  1151   00FC13  75                 	db	117
  1152   00FC14  55                 	db	85
  1153   00FC15  55                 	db	85
  1154   00FC16  7D                 	db	125
  1155   00FC17  7B                 	db	123
  1156   00FC18  42                 	db	66
  1157   00FC19  21                 	db	33
  1158   00FC1A  75                 	db	117
  1159   00FC1B  54                 	db	84
  1160   00FC1C  54                 	db	84
  1161   00FC1D  7D                 	db	125
  1162   00FC1E  79                 	db	121
  1163   00FC1F  40                 	db	64
  1164   00FC20  00                 	db	0
  1165   00FC21  21                 	db	33
  1166   00FC22  75                 	db	117
  1167   00FC23  55                 	db	85
  1168   00FC24  54                 	db	84
  1169   00FC25  7C                 	db	124
  1170   00FC26  78                 	db	120
  1171   00FC27  40                 	db	64
  1172   00FC28  00                 	db	0
  1173   00FC29  20                 	db	32
  1174   00FC2A  74                 	db	116
  1175   00FC2B  57                 	db	87
  1176   00FC2C  57                 	db	87
  1177   00FC2D  7C                 	db	124
  1178   00FC2E  78                 	db	120
  1179   00FC2F  40                 	db	64
  1180   00FC30  00                 	db	0
  1181   00FC31  18                 	db	24
  1182   00FC32  3C                 	db	60
  1183   00FC33  A4                 	db	164
  1184   00FC34  A4                 	db	164
  1185   00FC35  E4                 	db	228
  1186   00FC36  40                 	db	64
  1187   00FC37  00                 	db	0
  1188   00FC38  00                 	db	0
  1189   00FC39  02                 	db	2
  1190   00FC3A  3B                 	db	59
  1191   00FC3B  7D                 	db	125
  1192   00FC3C  55                 	db	85
  1193   00FC3D  55                 	db	85
  1194   00FC3E  5D                 	db	93
  1195   00FC3F  1B                 	db	27
  1196   00FC40  02                 	db	2
  1197   00FC41  39                 	db	57
  1198   00FC42  7D                 	db	125
  1199   00FC43  54                 	db	84
  1200   00FC44  54                 	db	84
  1201   00FC45  5D                 	db	93
  1202   00FC46  19                 	db	25
  1203   00FC47  00                 	db	0
  1204   00FC48  00                 	db	0
  1205   00FC49  39                 	db	57
  1206   00FC4A  7D                 	db	125
  1207   00FC4B  55                 	db	85
  1208   00FC4C  54                 	db	84
  1209   00FC4D  5C                 	db	92
  1210   00FC4E  18                 	db	24
  1211   00FC4F  00                 	db	0
  1212   00FC50  00                 	db	0
  1213   00FC51  01                 	db	1
  1214   00FC52  45                 	db	69
  1215   00FC53  7C                 	db	124
  1216   00FC54  7C                 	db	124
  1217   00FC55  41                 	db	65
  1218   00FC56  01                 	db	1
  1219   00FC57  00                 	db	0
  1220   00FC58  00                 	db	0
  1221   00FC59  02                 	db	2
  1222   00FC5A  03                 	db	3
  1223   00FC5B  45                 	db	69
  1224   00FC5C  7D                 	db	125
  1225   00FC5D  7D                 	db	125
  1226   00FC5E  43                 	db	67
  1227   00FC5F  02                 	db	2
  1228   00FC60  00                 	db	0
  1229   00FC61  01                 	db	1
  1230   00FC62  45                 	db	69
  1231   00FC63  7D                 	db	125
  1232   00FC64  7C                 	db	124
  1233   00FC65  40                 	db	64
  1234   00FC66  00                 	db	0
  1235   00FC67  00                 	db	0
  1236   00FC68  00                 	db	0
  1237   00FC69  79                 	db	121
  1238   00FC6A  7D                 	db	125
  1239   00FC6B  16                 	db	22
  1240   00FC6C  12                 	db	18
  1241   00FC6D  16                 	db	22
  1242   00FC6E  7D                 	db	125
  1243   00FC6F  79                 	db	121
  1244   00FC70  00                 	db	0
  1245   00FC71  70                 	db	112
  1246   00FC72  78                 	db	120
  1247   00FC73  2B                 	db	43
  1248   00FC74  2B                 	db	43
  1249   00FC75  78                 	db	120
  1250   00FC76  70                 	db	112
  1251   00FC77  00                 	db	0
  1252   00FC78  00                 	db	0
  1253   00FC79  44                 	db	68
  1254   00FC7A  7C                 	db	124
  1255   00FC7B  7C                 	db	124
  1256   00FC7C  55                 	db	85
  1257   00FC7D  55                 	db	85
  1258   00FC7E  45                 	db	69
  1259   00FC7F  00                 	db	0
  1260   00FC80  00                 	db	0
  1261   00FC81  20                 	db	32
  1262   00FC82  74                 	db	116
  1263   00FC83  54                 	db	84
  1264   00FC84  54                 	db	84
  1265   00FC85  7C                 	db	124
  1266   00FC86  7C                 	db	124
  1267   00FC87  54                 	db	84
  1268   00FC88  54                 	db	84
  1269   00FC89  7C                 	db	124
  1270   00FC8A  7E                 	db	126
  1271   00FC8B  0B                 	db	11
  1272   00FC8C  09                 	db	9
  1273   00FC8D  7F                 	db	127
  1274   00FC8E  7F                 	db	127
  1275   00FC8F  49                 	db	73
  1276   00FC90  00                 	db	0
  1277   00FC91  32                 	db	50
  1278   00FC92  7B                 	db	123
  1279   00FC93  49                 	db	73
  1280   00FC94  49                 	db	73
  1281   00FC95  7B                 	db	123
  1282   00FC96  32                 	db	50
  1283   00FC97  00                 	db	0
  1284   00FC98  00                 	db	0
  1285   00FC99  32                 	db	50
  1286   00FC9A  7A                 	db	122
  1287   00FC9B  48                 	db	72
  1288   00FC9C  48                 	db	72
  1289   00FC9D  7A                 	db	122
  1290   00FC9E  32                 	db	50
  1291   00FC9F  00                 	db	0
  1292   00FCA0  00                 	db	0
  1293   00FCA1  32                 	db	50
  1294   00FCA2  7A                 	db	122
  1295   00FCA3  4A                 	db	74
  1296   00FCA4  48                 	db	72
  1297   00FCA5  78                 	db	120
  1298   00FCA6  30                 	db	48
  1299   00FCA7  00                 	db	0
  1300   00FCA8  00                 	db	0
  1301   00FCA9  3A                 	db	58
  1302   00FCAA  7B                 	db	123
  1303   00FCAB  41                 	db	65
  1304   00FCAC  41                 	db	65
  1305   00FCAD  7B                 	db	123
  1306   00FCAE  7A                 	db	122
  1307   00FCAF  40                 	db	64
  1308   00FCB0  00                 	db	0
  1309   00FCB1  3A                 	db	58
  1310   00FCB2  7A                 	db	122
  1311   00FCB3  42                 	db	66
  1312   00FCB4  40                 	db	64
  1313   00FCB5  78                 	db	120
  1314   00FCB6  78                 	db	120
  1315   00FCB7  40                 	db	64
  1316   00FCB8  00                 	db	0
  1317   00FCB9  9A                 	db	154
  1318   00FCBA  BA                 	db	186
  1319   00FCBB  A0                 	db	160
  1320   00FCBC  A0                 	db	160
  1321   00FCBD  FA                 	db	250
  1322   00FCBE  7A                 	db	122
  1323   00FCBF  00                 	db	0
  1324   00FCC0  00                 	db	0
  1325   00FCC1  01                 	db	1
  1326   00FCC2  19                 	db	25
  1327   00FCC3  3C                 	db	60
  1328   00FCC4  66                 	db	102
  1329   00FCC5  66                 	db	102
  1330   00FCC6  3C                 	db	60
  1331   00FCC7  19                 	db	25
  1332   00FCC8  01                 	db	1
  1333   00FCC9  3D                 	db	61
  1334   00FCCA  7D                 	db	125
  1335   00FCCB  40                 	db	64
  1336   00FCCC  40                 	db	64
  1337   00FCCD  7D                 	db	125
  1338   00FCCE  3D                 	db	61
  1339   00FCCF  00                 	db	0
  1340   00FCD0  00                 	db	0
  1341   00FCD1  18                 	db	24
  1342   00FCD2  3C                 	db	60
  1343   00FCD3  24                 	db	36
  1344   00FCD4  E7                 	db	231
  1345   00FCD5  E7                 	db	231
  1346   00FCD6  24                 	db	36
  1347   00FCD7  24                 	db	36
  1348   00FCD8  00                 	db	0
  1349   00FCD9  68                 	db	104
  1350   00FCDA  7E                 	db	126
  1351   00FCDB  7F                 	db	127
  1352   00FCDC  49                 	db	73
  1353   00FCDD  43                 	db	67
  1354   00FCDE  66                 	db	102
  1355   00FCDF  20                 	db	32
  1356   00FCE0  00                 	db	0
  1357   00FCE1  2B                 	db	43
  1358   00FCE2  2F                 	db	47
  1359   00FCE3  FC                 	db	252
  1360   00FCE4  FC                 	db	252
  1361   00FCE5  2F                 	db	47
  1362   00FCE6  2B                 	db	43
  1363   00FCE7  00                 	db	0
  1364   00FCE8  00                 	db	0
  1365   00FCE9  FF                 	db	255
  1366   00FCEA  FF                 	db	255
  1367   00FCEB  09                 	db	9
  1368   00FCEC  09                 	db	9
  1369   00FCED  2F                 	db	47
  1370   00FCEE  F6                 	db	246
  1371   00FCEF  F8                 	db	248
  1372   00FCF0  A0                 	db	160
  1373   00FCF1  40                 	db	64
  1374   00FCF2  C0                 	db	192
  1375   00FCF3  88                 	db	136
  1376   00FCF4  FE                 	db	254
  1377   00FCF5  7F                 	db	127
  1378   00FCF6  09                 	db	9
  1379   00FCF7  03                 	db	3
  1380   00FCF8  02                 	db	2
  1381   00FCF9  20                 	db	32
  1382   00FCFA  74                 	db	116
  1383   00FCFB  54                 	db	84
  1384   00FCFC  55                 	db	85
  1385   00FCFD  7D                 	db	125
  1386   00FCFE  79                 	db	121
  1387   00FCFF  40                 	db	64
  1388   00FD00  00                 	db	0
  1389   00FD01  00                 	db	0
  1390   00FD02  44                 	db	68
  1391   00FD03  7D                 	db	125
  1392   00FD04  7D                 	db	125
  1393   00FD05  41                 	db	65
  1394   00FD06  00                 	db	0
  1395   00FD07  00                 	db	0
  1396   00FD08  00                 	db	0
  1397   00FD09  30                 	db	48
  1398   00FD0A  78                 	db	120
  1399   00FD0B  48                 	db	72
  1400   00FD0C  4A                 	db	74
  1401   00FD0D  7A                 	db	122
  1402   00FD0E  32                 	db	50
  1403   00FD0F  00                 	db	0
  1404   00FD10  00                 	db	0
  1405   00FD11  38                 	db	56
  1406   00FD12  78                 	db	120
  1407   00FD13  40                 	db	64
  1408   00FD14  42                 	db	66
  1409   00FD15  7A                 	db	122
  1410   00FD16  7A                 	db	122
  1411   00FD17  40                 	db	64
  1412   00FD18  00                 	db	0
  1413   00FD19  7A                 	db	122
  1414   00FD1A  7A                 	db	122
  1415   00FD1B  0A                 	db	10
  1416   00FD1C  0A                 	db	10
  1417   00FD1D  7A                 	db	122
  1418   00FD1E  70                 	db	112
  1419   00FD1F  00                 	db	0
  1420   00FD20  00                 	db	0
  1421   00FD21  7D                 	db	125
  1422   00FD22  7D                 	db	125
  1423   00FD23  19                 	db	25
  1424   00FD24  31                 	db	49
  1425   00FD25  7D                 	db	125
  1426   00FD26  7D                 	db	125
  1427   00FD27  00                 	db	0
  1428   00FD28  00                 	db	0
  1429   00FD29  00                 	db	0
  1430   00FD2A  26                 	db	38
  1431   00FD2B  2F                 	db	47
  1432   00FD2C  29                 	db	41
  1433   00FD2D  2F                 	db	47
  1434   00FD2E  2F                 	db	47
  1435   00FD2F  28                 	db	40
  1436   00FD30  00                 	db	0
  1437   00FD31  00                 	db	0
  1438   00FD32  26                 	db	38
  1439   00FD33  2F                 	db	47
  1440   00FD34  29                 	db	41
  1441   00FD35  2F                 	db	47
  1442   00FD36  26                 	db	38
  1443   00FD37  00                 	db	0
  1444   00FD38  00                 	db	0
  1445   00FD39  30                 	db	48
  1446   00FD3A  78                 	db	120
  1447   00FD3B  4D                 	db	77
  1448   00FD3C  45                 	db	69
  1449   00FD3D  60                 	db	96
  1450   00FD3E  20                 	db	32
  1451   00FD3F  00                 	db	0
  1452   00FD40  00                 	db	0
  1453   00FD41  38                 	db	56
  1454   00FD42  38                 	db	56
  1455   00FD43  08                 	db	8
  1456   00FD44  08                 	db	8
  1457   00FD45  08                 	db	8
  1458   00FD46  08                 	db	8
  1459   00FD47  00                 	db	0
  1460   00FD48  00                 	db	0
  1461   00FD49  08                 	db	8
  1462   00FD4A  08                 	db	8
  1463   00FD4B  08                 	db	8
  1464   00FD4C  08                 	db	8
  1465   00FD4D  38                 	db	56
  1466   00FD4E  38                 	db	56
  1467   00FD4F  00                 	db	0
  1468   00FD50  00                 	db	0
  1469   00FD51  4F                 	db	79
  1470   00FD52  6F                 	db	111
  1471   00FD53  30                 	db	48
  1472   00FD54  18                 	db	24
  1473   00FD55  CC                 	db	204
  1474   00FD56  EE                 	db	238
  1475   00FD57  BB                 	db	187
  1476   00FD58  91                 	db	145
  1477   00FD59  4F                 	db	79
  1478   00FD5A  6F                 	db	111
  1479   00FD5B  30                 	db	48
  1480   00FD5C  18                 	db	24
  1481   00FD5D  6C                 	db	108
  1482   00FD5E  76                 	db	118
  1483   00FD5F  FB                 	db	251
  1484   00FD60  F9                 	db	249
  1485   00FD61  00                 	db	0
  1486   00FD62  00                 	db	0
  1487   00FD63  00                 	db	0
  1488   00FD64  7B                 	db	123
  1489   00FD65  7B                 	db	123
  1490   00FD66  00                 	db	0
  1491   00FD67  00                 	db	0
  1492   00FD68  00                 	db	0
  1493   00FD69  08                 	db	8
  1494   00FD6A  1C                 	db	28
  1495   00FD6B  36                 	db	54
  1496   00FD6C  22                 	db	34
  1497   00FD6D  08                 	db	8
  1498   00FD6E  1C                 	db	28
  1499   00FD6F  36                 	db	54
  1500   00FD70  22                 	db	34
  1501   00FD71  22                 	db	34
  1502   00FD72  36                 	db	54
  1503   00FD73  1C                 	db	28
  1504   00FD74  08                 	db	8
  1505   00FD75  22                 	db	34
  1506   00FD76  36                 	db	54
  1507   00FD77  1C                 	db	28
  1508   00FD78  08                 	db	8
  1509   00FD79  AA                 	db	170
  1510   00FD7A  00                 	db	0
  1511   00FD7B  55                 	db	85
  1512   00FD7C  00                 	db	0
  1513   00FD7D  AA                 	db	170
  1514   00FD7E  00                 	db	0
  1515   00FD7F  55                 	db	85
  1516   00FD80  00                 	db	0
  1517   00FD81  AA                 	db	170
  1518   00FD82  55                 	db	85
  1519   00FD83  AA                 	db	170
  1520   00FD84  55                 	db	85
  1521   00FD85  AA                 	db	170
  1522   00FD86  55                 	db	85
  1523   00FD87  AA                 	db	170
  1524   00FD88  55                 	db	85
  1525   00FD89  DD                 	db	221
  1526   00FD8A  FF                 	db	255
  1527   00FD8B  AA                 	db	170
  1528   00FD8C  77                 	db	119
  1529   00FD8D  DD                 	db	221
  1530   00FD8E  AA                 	db	170
  1531   00FD8F  FF                 	db	255
  1532   00FD90  77                 	db	119
  1533   00FD91  00                 	db	0
  1534   00FD92  00                 	db	0
  1535   00FD93  00                 	db	0
  1536   00FD94  FF                 	db	255
  1537   00FD95  FF                 	db	255
  1538   00FD96  00                 	db	0
  1539   00FD97  00                 	db	0
  1540   00FD98  00                 	db	0
  1541   00FD99  10                 	db	16
  1542   00FD9A  10                 	db	16
  1543   00FD9B  10                 	db	16
  1544   00FD9C  FF                 	db	255
  1545   00FD9D  FF                 	db	255
  1546   00FD9E  00                 	db	0
  1547   00FD9F  00                 	db	0
  1548   00FDA0  00                 	db	0
  1549   00FDA1  14                 	db	20
  1550   00FDA2  14                 	db	20
  1551   00FDA3  14                 	db	20
  1552   00FDA4  FF                 	db	255
  1553   00FDA5  FF                 	db	255
  1554   00FDA6  00                 	db	0
  1555   00FDA7  00                 	db	0
  1556   00FDA8  00                 	db	0
  1557   00FDA9  10                 	db	16
  1558   00FDAA  10                 	db	16
  1559   00FDAB  FF                 	db	255
  1560   00FDAC  FF                 	db	255
  1561   00FDAD  00                 	db	0
  1562   00FDAE  FF                 	db	255
  1563   00FDAF  FF                 	db	255
  1564   00FDB0  00                 	db	0
  1565   00FDB1  10                 	db	16
  1566   00FDB2  10                 	db	16
  1567   00FDB3  F0                 	db	240
  1568   00FDB4  F0                 	db	240
  1569   00FDB5  10                 	db	16
  1570   00FDB6  F0                 	db	240
  1571   00FDB7  F0                 	db	240
  1572   00FDB8  00                 	db	0
  1573   00FDB9  14                 	db	20
  1574   00FDBA  14                 	db	20
  1575   00FDBB  14                 	db	20
  1576   00FDBC  FC                 	db	252
  1577   00FDBD  FC                 	db	252
  1578   00FDBE  00                 	db	0
  1579   00FDBF  00                 	db	0
  1580   00FDC0  00                 	db	0
  1581   00FDC1  14                 	db	20
  1582   00FDC2  14                 	db	20
  1583   00FDC3  F7                 	db	247
  1584   00FDC4  F7                 	db	247
  1585   00FDC5  00                 	db	0
  1586   00FDC6  FF                 	db	255
  1587   00FDC7  FF                 	db	255
  1588   00FDC8  00                 	db	0
  1589   00FDC9  00                 	db	0
  1590   00FDCA  00                 	db	0
  1591   00FDCB  FF                 	db	255
  1592   00FDCC  FF                 	db	255
  1593   00FDCD  00                 	db	0
  1594   00FDCE  FF                 	db	255
  1595   00FDCF  FF                 	db	255
  1596   00FDD0  00                 	db	0
  1597   00FDD1  14                 	db	20
  1598   00FDD2  14                 	db	20
  1599   00FDD3  F4                 	db	244
  1600   00FDD4  F4                 	db	244
  1601   00FDD5  04                 	db	4
  1602   00FDD6  FC                 	db	252
  1603   00FDD7  FC                 	db	252
  1604   00FDD8  00                 	db	0
  1605   00FDD9  14                 	db	20
  1606   00FDDA  14                 	db	20
  1607   00FDDB  17                 	db	23
  1608   00FDDC  17                 	db	23
  1609   00FDDD  10                 	db	16
  1610   00FDDE  1F                 	db	31
  1611   00FDDF  1F                 	db	31
  1612   00FDE0  00                 	db	0
  1613   00FDE1  10                 	db	16
  1614   00FDE2  10                 	db	16
  1615   00FDE3  1F                 	db	31
  1616   00FDE4  1F                 	db	31
  1617   00FDE5  10                 	db	16
  1618   00FDE6  1F                 	db	31
  1619   00FDE7  1F                 	db	31
  1620   00FDE8  00                 	db	0
  1621   00FDE9  14                 	db	20
  1622   00FDEA  14                 	db	20
  1623   00FDEB  14                 	db	20
  1624   00FDEC  1F                 	db	31
  1625   00FDED  1F                 	db	31
  1626   00FDEE  00                 	db	0
  1627   00FDEF  00                 	db	0
  1628   00FDF0  00                 	db	0
  1629   00FDF1  10                 	db	16
  1630   00FDF2  10                 	db	16
  1631   00FDF3  10                 	db	16
  1632   00FDF4  F0                 	db	240
  1633   00FDF5  F0                 	db	240
  1634   00FDF6  00                 	db	0
  1635   00FDF7  00                 	db	0
  1636   00FDF8  00                 	db	0
  1637   00FDF9  00                 	db	0
  1638   00FDFA  00                 	db	0
  1639   00FDFB  00                 	db	0
  1640   00FDFC  1F                 	db	31
  1641   00FDFD  1F                 	db	31
  1642   00FDFE  10                 	db	16
  1643   00FDFF  10                 	db	16
  1644   00FE00  10                 	db	16
  1645   00FE01  10                 	db	16
  1646   00FE02  10                 	db	16
  1647   00FE03  10                 	db	16
  1648   00FE04  1F                 	db	31
  1649   00FE05  1F                 	db	31
  1650   00FE06  10                 	db	16
  1651   00FE07  10                 	db	16
  1652   00FE08  10                 	db	16
  1653   00FE09  10                 	db	16
  1654   00FE0A  10                 	db	16
  1655   00FE0B  10                 	db	16
  1656   00FE0C  F0                 	db	240
  1657   00FE0D  F0                 	db	240
  1658   00FE0E  10                 	db	16
  1659   00FE0F  10                 	db	16
  1660   00FE10  10                 	db	16
  1661   00FE11  00                 	db	0
  1662   00FE12  00                 	db	0
  1663   00FE13  00                 	db	0
  1664   00FE14  FF                 	db	255
  1665   00FE15  FF                 	db	255
  1666   00FE16  10                 	db	16
  1667   00FE17  10                 	db	16
  1668   00FE18  10                 	db	16
  1669   00FE19  10                 	db	16
  1670   00FE1A  10                 	db	16
  1671   00FE1B  10                 	db	16
  1672   00FE1C  10                 	db	16
  1673   00FE1D  10                 	db	16
  1674   00FE1E  10                 	db	16
  1675   00FE1F  10                 	db	16
  1676   00FE20  10                 	db	16
  1677   00FE21  10                 	db	16
  1678   00FE22  10                 	db	16
  1679   00FE23  10                 	db	16
  1680   00FE24  FF                 	db	255
  1681   00FE25  FF                 	db	255
  1682   00FE26  10                 	db	16
  1683   00FE27  10                 	db	16
  1684   00FE28  10                 	db	16
  1685   00FE29  00                 	db	0
  1686   00FE2A  00                 	db	0
  1687   00FE2B  00                 	db	0
  1688   00FE2C  FF                 	db	255
  1689   00FE2D  FF                 	db	255
  1690   00FE2E  14                 	db	20
  1691   00FE2F  14                 	db	20
  1692   00FE30  14                 	db	20
  1693   00FE31  00                 	db	0
  1694   00FE32  00                 	db	0
  1695   00FE33  FF                 	db	255
  1696   00FE34  FF                 	db	255
  1697   00FE35  00                 	db	0
  1698   00FE36  FF                 	db	255
  1699   00FE37  FF                 	db	255
  1700   00FE38  10                 	db	16
  1701   00FE39  00                 	db	0
  1702   00FE3A  00                 	db	0
  1703   00FE3B  1F                 	db	31
  1704   00FE3C  1F                 	db	31
  1705   00FE3D  10                 	db	16
  1706   00FE3E  17                 	db	23
  1707   00FE3F  17                 	db	23
  1708   00FE40  14                 	db	20
  1709   00FE41  00                 	db	0
  1710   00FE42  00                 	db	0
  1711   00FE43  FC                 	db	252
  1712   00FE44  FC                 	db	252
  1713   00FE45  04                 	db	4
  1714   00FE46  F4                 	db	244
  1715   00FE47  F4                 	db	244
  1716   00FE48  14                 	db	20
  1717   00FE49  14                 	db	20
  1718   00FE4A  14                 	db	20
  1719   00FE4B  17                 	db	23
  1720   00FE4C  17                 	db	23
  1721   00FE4D  10                 	db	16
  1722   00FE4E  17                 	db	23
  1723   00FE4F  17                 	db	23
  1724   00FE50  14                 	db	20
  1725   00FE51  14                 	db	20
  1726   00FE52  14                 	db	20
  1727   00FE53  F4                 	db	244
  1728   00FE54  F4                 	db	244
  1729   00FE55  04                 	db	4
  1730   00FE56  F4                 	db	244
  1731   00FE57  F4                 	db	244
  1732   00FE58  14                 	db	20
  1733   00FE59  00                 	db	0
  1734   00FE5A  00                 	db	0
  1735   00FE5B  FF                 	db	255
  1736   00FE5C  FF                 	db	255
  1737   00FE5D  00                 	db	0
  1738   00FE5E  F7                 	db	247
  1739   00FE5F  F7                 	db	247
  1740   00FE60  14                 	db	20
  1741   00FE61  14                 	db	20
  1742   00FE62  14                 	db	20
  1743   00FE63  14                 	db	20
  1744   00FE64  14                 	db	20
  1745   00FE65  14                 	db	20
  1746   00FE66  14                 	db	20
  1747   00FE67  14                 	db	20
  1748   00FE68  14                 	db	20
  1749   00FE69  14                 	db	20
  1750   00FE6A  14                 	db	20
  1751   00FE6B  F7                 	db	247
  1752   00FE6C  F7                 	db	247
  1753   00FE6D  00                 	db	0
  1754   00FE6E  F7                 	db	247
  1755   00FE6F  F7                 	db	247
  1756   00FE70  14                 	db	20
  1757   00FE71  14                 	db	20
  1758   00FE72  14                 	db	20
  1759   00FE73  14                 	db	20
  1760   00FE74  17                 	db	23
  1761   00FE75  17                 	db	23
  1762   00FE76  14                 	db	20
  1763   00FE77  14                 	db	20
  1764   00FE78  14                 	db	20
  1765   00FE79  10                 	db	16
  1766   00FE7A  10                 	db	16
  1767   00FE7B  1F                 	db	31
  1768   00FE7C  1F                 	db	31
  1769   00FE7D  10                 	db	16
  1770   00FE7E  1F                 	db	31
  1771   00FE7F  1F                 	db	31
  1772   00FE80  10                 	db	16
  1773   00FE81  14                 	db	20
  1774   00FE82  14                 	db	20
  1775   00FE83  14                 	db	20
  1776   00FE84  F4                 	db	244
  1777   00FE85  F4                 	db	244
  1778   00FE86  14                 	db	20
  1779   00FE87  14                 	db	20
  1780   00FE88  14                 	db	20
  1781   00FE89  10                 	db	16
  1782   00FE8A  10                 	db	16
  1783   00FE8B  F0                 	db	240
  1784   00FE8C  F0                 	db	240
  1785   00FE8D  10                 	db	16
  1786   00FE8E  F0                 	db	240
  1787   00FE8F  F0                 	db	240
  1788   00FE90  10                 	db	16
  1789   00FE91  00                 	db	0
  1790   00FE92  00                 	db	0
  1791   00FE93  1F                 	db	31
  1792   00FE94  1F                 	db	31
  1793   00FE95  10                 	db	16
  1794   00FE96  1F                 	db	31
  1795   00FE97  1F                 	db	31
  1796   00FE98  10                 	db	16
  1797   00FE99  00                 	db	0
  1798   00FE9A  00                 	db	0
  1799   00FE9B  00                 	db	0
  1800   00FE9C  1F                 	db	31
  1801   00FE9D  1F                 	db	31
  1802   00FE9E  14                 	db	20
  1803   00FE9F  14                 	db	20
  1804   00FEA0  14                 	db	20
  1805   00FEA1  00                 	db	0
  1806   00FEA2  00                 	db	0
  1807   00FEA3  00                 	db	0
  1808   00FEA4  FC                 	db	252
  1809   00FEA5  FC                 	db	252
  1810   00FEA6  14                 	db	20
  1811   00FEA7  14                 	db	20
  1812   00FEA8  14                 	db	20
  1813   00FEA9  00                 	db	0
  1814   00FEAA  00                 	db	0
  1815   00FEAB  F0                 	db	240
  1816   00FEAC  F0                 	db	240
  1817   00FEAD  10                 	db	16
  1818   00FEAE  F0                 	db	240
  1819   00FEAF  F0                 	db	240
  1820   00FEB0  10                 	db	16
  1821   00FEB1  10                 	db	16
  1822   00FEB2  10                 	db	16
  1823   00FEB3  FF                 	db	255
  1824   00FEB4  FF                 	db	255
  1825   00FEB5  10                 	db	16
  1826   00FEB6  FF                 	db	255
  1827   00FEB7  FF                 	db	255
  1828   00FEB8  10                 	db	16
  1829   00FEB9  14                 	db	20
  1830   00FEBA  14                 	db	20
  1831   00FEBB  14                 	db	20
  1832   00FEBC  FF                 	db	255
  1833   00FEBD  FF                 	db	255
  1834   00FEBE  14                 	db	20
  1835   00FEBF  14                 	db	20
  1836   00FEC0  14                 	db	20
  1837   00FEC1  10                 	db	16
  1838   00FEC2  10                 	db	16
  1839   00FEC3  10                 	db	16
  1840   00FEC4  1F                 	db	31
  1841   00FEC5  1F                 	db	31
  1842   00FEC6  00                 	db	0
  1843   00FEC7  00                 	db	0
  1844   00FEC8  00                 	db	0
  1845   00FEC9  00                 	db	0
  1846   00FECA  00                 	db	0
  1847   00FECB  00                 	db	0
  1848   00FECC  F0                 	db	240
  1849   00FECD  F0                 	db	240
  1850   00FECE  10                 	db	16
  1851   00FECF  10                 	db	16
  1852   00FED0  10                 	db	16
  1853   00FED1  FF                 	db	255
  1854   00FED2  FF                 	db	255
  1855   00FED3  FF                 	db	255
  1856   00FED4  FF                 	db	255
  1857   00FED5  FF                 	db	255
  1858   00FED6  FF                 	db	255
  1859   00FED7  FF                 	db	255
  1860   00FED8  FF                 	db	255
  1861   00FED9  F0                 	db	240
  1862   00FEDA  F0                 	db	240
  1863   00FEDB  F0                 	db	240
  1864   00FEDC  F0                 	db	240
  1865   00FEDD  F0                 	db	240
  1866   00FEDE  F0                 	db	240
  1867   00FEDF  F0                 	db	240
  1868   00FEE0  F0                 	db	240
  1869   00FEE1  FF                 	db	255
  1870   00FEE2  FF                 	db	255
  1871   00FEE3  FF                 	db	255
  1872   00FEE4  FF                 	db	255
  1873   00FEE5  00                 	db	0
  1874   00FEE6  00                 	db	0
  1875   00FEE7  00                 	db	0
  1876   00FEE8  00                 	db	0
  1877   00FEE9  00                 	db	0
  1878   00FEEA  00                 	db	0
  1879   00FEEB  00                 	db	0
  1880   00FEEC  00                 	db	0
  1881   00FEED  FF                 	db	255
  1882   00FEEE  FF                 	db	255
  1883   00FEEF  FF                 	db	255
  1884   00FEF0  FF                 	db	255
  1885   00FEF1  0F                 	db	15
  1886   00FEF2  0F                 	db	15
  1887   00FEF3  0F                 	db	15
  1888   00FEF4  0F                 	db	15
  1889   00FEF5  0F                 	db	15
  1890   00FEF6  0F                 	db	15
  1891   00FEF7  0F                 	db	15
  1892   00FEF8  0F                 	db	15
  1893   00FEF9  38                 	db	56
  1894   00FEFA  7C                 	db	124
  1895   00FEFB  44                 	db	68
  1896   00FEFC  6C                 	db	108
  1897   00FEFD  38                 	db	56
  1898   00FEFE  6C                 	db	108
  1899   00FEFF  44                 	db	68
  1900   00FF00  00                 	db	0
  1901   00FF01  FC                 	db	252
  1902   00FF02  FE                 	db	254
  1903   00FF03  2A                 	db	42
  1904   00FF04  2A                 	db	42
  1905   00FF05  3E                 	db	62
  1906   00FF06  14                 	db	20
  1907   00FF07  00                 	db	0
  1908   00FF08  00                 	db	0
  1909   00FF09  7E                 	db	126
  1910   00FF0A  7E                 	db	126
  1911   00FF0B  02                 	db	2
  1912   00FF0C  02                 	db	2
  1913   00FF0D  06                 	db	6
  1914   00FF0E  06                 	db	6
  1915   00FF0F  00                 	db	0
  1916   00FF10  00                 	db	0
  1917   00FF11  02                 	db	2
  1918   00FF12  7E                 	db	126
  1919   00FF13  7E                 	db	126
  1920   00FF14  02                 	db	2
  1921   00FF15  7E                 	db	126
  1922   00FF16  7E                 	db	126
  1923   00FF17  02                 	db	2
  1924   00FF18  00                 	db	0
  1925   00FF19  63                 	db	99
  1926   00FF1A  77                 	db	119
  1927   00FF1B  5D                 	db	93
  1928   00FF1C  49                 	db	73
  1929   00FF1D  63                 	db	99
  1930   00FF1E  63                 	db	99
  1931   00FF1F  00                 	db	0
  1932   00FF20  00                 	db	0
  1933   00FF21  38                 	db	56
  1934   00FF22  7C                 	db	124
  1935   00FF23  44                 	db	68
  1936   00FF24  7C                 	db	124
  1937   00FF25  3C                 	db	60
  1938   00FF26  04                 	db	4
  1939   00FF27  04                 	db	4
  1940   00FF28  00                 	db	0
  1941   00FF29  80                 	db	128
  1942   00FF2A  FE                 	db	254
  1943   00FF2B  7E                 	db	126
  1944   00FF2C  20                 	db	32
  1945   00FF2D  20                 	db	32
  1946   00FF2E  3E                 	db	62
  1947   00FF2F  1E                 	db	30
  1948   00FF30  00                 	db	0
  1949   00FF31  04                 	db	4
  1950   00FF32  06                 	db	6
  1951   00FF33  02                 	db	2
  1952   00FF34  7E                 	db	126
  1953   00FF35  7C                 	db	124
  1954   00FF36  06                 	db	6
  1955   00FF37  02                 	db	2
  1956   00FF38  00                 	db	0
  1957   00FF39  99                 	db	153
  1958   00FF3A  BD                 	db	189
  1959   00FF3B  E7                 	db	231
  1960   00FF3C  E7                 	db	231
  1961   00FF3D  BD                 	db	189
  1962   00FF3E  99                 	db	153
  1963   00FF3F  00                 	db	0
  1964   00FF40  00                 	db	0
  1965   00FF41  1C                 	db	28
  1966   00FF42  3E                 	db	62
  1967   00FF43  6B                 	db	107
  1968   00FF44  49                 	db	73
  1969   00FF45  6B                 	db	107
  1970   00FF46  3E                 	db	62
  1971   00FF47  1C                 	db	28
  1972   00FF48  00                 	db	0
  1973   00FF49  4C                 	db	76
  1974   00FF4A  7E                 	db	126
  1975   00FF4B  73                 	db	115
  1976   00FF4C  01                 	db	1
  1977   00FF4D  73                 	db	115
  1978   00FF4E  7E                 	db	126
  1979   00FF4F  4C                 	db	76
  1980   00FF50  00                 	db	0
  1981   00FF51  30                 	db	48
  1982   00FF52  78                 	db	120
  1983   00FF53  4A                 	db	74
  1984   00FF54  4F                 	db	79
  1985   00FF55  7D                 	db	125
  1986   00FF56  39                 	db	57
  1987   00FF57  00                 	db	0
  1988   00FF58  00                 	db	0
  1989   00FF59  18                 	db	24
  1990   00FF5A  3C                 	db	60
  1991   00FF5B  24                 	db	36
  1992   00FF5C  3C                 	db	60
  1993   00FF5D  3C                 	db	60
  1994   00FF5E  24                 	db	36
  1995   00FF5F  3C                 	db	60
  1996   00FF60  18                 	db	24
  1997   00FF61  98                 	db	152
  1998   00FF62  FC                 	db	252
  1999   00FF63  64                 	db	100
  2000   00FF64  3C                 	db	60
  2001   00FF65  3E                 	db	62
  2002   00FF66  27                 	db	39
  2003   00FF67  3D                 	db	61
  2004   00FF68  18                 	db	24
  2005   00FF69  1C                 	db	28
  2006   00FF6A  3E                 	db	62
  2007   00FF6B  6B                 	db	107
  2008   00FF6C  49                 	db	73
  2009   00FF6D  49                 	db	73
  2010   00FF6E  00                 	db	0
  2011   00FF6F  00                 	db	0
  2012   00FF70  00                 	db	0
  2013   00FF71  7E                 	db	126
  2014   00FF72  7F                 	db	127
  2015   00FF73  01                 	db	1
  2016   00FF74  01                 	db	1
  2017   00FF75  7F                 	db	127
  2018   00FF76  7E                 	db	126
  2019   00FF77  00                 	db	0
  2020   00FF78  00                 	db	0
  2021   00FF79  2A                 	db	42
  2022   00FF7A  2A                 	db	42
  2023   00FF7B  2A                 	db	42
  2024   00FF7C  2A                 	db	42
  2025   00FF7D  2A                 	db	42
  2026   00FF7E  2A                 	db	42
  2027   00FF7F  00                 	db	0
  2028   00FF80  00                 	db	0
  2029   00FF81  44                 	db	68
  2030   00FF82  44                 	db	68
  2031   00FF83  5F                 	db	95
  2032   00FF84  5F                 	db	95
  2033   00FF85  44                 	db	68
  2034   00FF86  44                 	db	68
  2035   00FF87  00                 	db	0
  2036   00FF88  00                 	db	0
  2037   00FF89  40                 	db	64
  2038   00FF8A  51                 	db	81
  2039   00FF8B  5B                 	db	91
  2040   00FF8C  4E                 	db	78
  2041   00FF8D  44                 	db	68
  2042   00FF8E  40                 	db	64
  2043   00FF8F  00                 	db	0
  2044   00FF90  00                 	db	0
  2045   00FF91  40                 	db	64
  2046   00FF92  44                 	db	68
  2047   00FF93  4E                 	db	78
  2048   00FF94  5B                 	db	91
  2049   00FF95  51                 	db	81
  2050   00FF96  40                 	db	64
  2051   00FF97  00                 	db	0
  2052   00FF98  00                 	db	0
  2053   00FF99  00                 	db	0
  2054   00FF9A  00                 	db	0
  2055   00FF9B  00                 	db	0
  2056   00FF9C  FE                 	db	254
  2057   00FF9D  FF                 	db	255
  2058   00FF9E  01                 	db	1
  2059   00FF9F  07                 	db	7
  2060   00FFA0  06                 	db	6
  2061   00FFA1  60                 	db	96
  2062   00FFA2  E0                 	db	224
  2063   00FFA3  80                 	db	128
  2064   00FFA4  FF                 	db	255
  2065   00FFA5  7F                 	db	127
  2066   00FFA6  00                 	db	0
  2067   00FFA7  00                 	db	0
  2068   00FFA8  00                 	db	0
  2069   00FFA9  08                 	db	8
  2070   00FFAA  08                 	db	8
  2071   00FFAB  6B                 	db	107
  2072   00FFAC  6B                 	db	107
  2073   00FFAD  08                 	db	8
  2074   00FFAE  08                 	db	8
  2075   00FFAF  00                 	db	0
  2076   00FFB0  00                 	db	0
  2077   00FFB1  24                 	db	36
  2078   00FFB2  36                 	db	54
  2079   00FFB3  12                 	db	18
  2080   00FFB4  36                 	db	54
  2081   00FFB5  24                 	db	36
  2082   00FFB6  36                 	db	54
  2083   00FFB7  12                 	db	18
  2084   00FFB8  00                 	db	0
  2085   00FFB9  00                 	db	0
  2086   00FFBA  06                 	db	6
  2087   00FFBB  0F                 	db	15
  2088   00FFBC  09                 	db	9
  2089   00FFBD  0F                 	db	15
  2090   00FFBE  06                 	db	6
  2091   00FFBF  00                 	db	0
  2092   00FFC0  00                 	db	0
  2093   00FFC1  00                 	db	0
  2094   00FFC2  00                 	db	0
  2095   00FFC3  00                 	db	0
  2096   00FFC4  18                 	db	24
  2097   00FFC5  18                 	db	24
  2098   00FFC6  00                 	db	0
  2099   00FFC7  00                 	db	0
  2100   00FFC8  00                 	db	0
  2101   00FFC9  00                 	db	0
  2102   00FFCA  00                 	db	0
  2103   00FFCB  00                 	db	0
  2104   00FFCC  10                 	db	16
  2105   00FFCD  10                 	db	16
  2106   00FFCE  00                 	db	0
  2107   00FFCF  00                 	db	0
  2108   00FFD0  00                 	db	0
  2109   00FFD1  10                 	db	16
  2110   00FFD2  30                 	db	48
  2111   00FFD3  70                 	db	112
  2112   00FFD4  C0                 	db	192
  2113   00FFD5  FF                 	db	255
  2114   00FFD6  FF                 	db	255
  2115   00FFD7  01                 	db	1
  2116   00FFD8  01                 	db	1
  2117   00FFD9  00                 	db	0
  2118   00FFDA  1F                 	db	31
  2119   00FFDB  1F                 	db	31
  2120   00FFDC  01                 	db	1
  2121   00FFDD  1F                 	db	31
  2122   00FFDE  1E                 	db	30
  2123   00FFDF  00                 	db	0
  2124   00FFE0  00                 	db	0
  2125   00FFE1  00                 	db	0
  2126   00FFE2  19                 	db	25
  2127   00FFE3  1D                 	db	29
  2128   00FFE4  17                 	db	23
  2129   00FFE5  12                 	db	18
  2130   00FFE6  00                 	db	0
  2131   00FFE7  00                 	db	0
  2132   00FFE8  00                 	db	0
  2133   00FFE9  00                 	db	0
  2134   00FFEA  00                 	db	0
  2135   00FFEB  3C                 	db	60
  2136   00FFEC  3C                 	db	60
  2137   00FFED  3C                 	db	60
  2138   00FFEE  3C                 	db	60
  2139   00FFEF  00                 	db	0
  2140   00FFF0  00                 	db	0
  2141   00FFF1  00                 	db	0
  2142   00FFF2  00                 	db	0
  2143   00FFF3  00                 	db	0
  2144   00FFF4  00                 	db	0
  2145   00FFF5  00                 	db	0
  2146   00FFF6  00                 	db	0
  2147   00FFF7  00                 	db	0
  2148   00FFF8  00                 	db	0
  2149   00FFF9                     __end_of_MAX7219_Dot_Matrix_font:
  2150                           	callstack 0
  2151   000000                     _EEDATA	set	4008
  2152   000000                     _EEADR	set	4009
  2153   000000                     _EEADRH	set	4010
  2154   000000                     _EECON2	set	4007
  2155   000000                     _T2CON	set	4042
  2156   000000                     _PR2	set	4043
  2157   000000                     _RCREG	set	4014
  2158   000000                     _TXREG	set	4013
  2159   000000                     _SPBRG	set	4015
  2160   000000                     _TXSTA	set	4012
  2161   000000                     _OSCCON	set	4051
  2162   000000                     _SSPBUF	set	4041
  2163   000000                     _SSPADD	set	4040
  2164   00FFF9                     STR_1:
  2165   00FFF9  41                 	db	65	;'A'
  2166   00FFFA  4C                 	db	76	;'L'
  2167   00FFFB  41                 	db	65	;'A'
  2168   00FFFC  52                 	db	82	;'R'
  2169   00FFFD  4D                 	db	77	;'M'
  2170   00FFFE  00                 	db	0
  2171   00FFFF  00                 	db	0	; dummy byte at the end
  2172   000000                     
  2173                           	psect	nvBANK0
  2174   0000E3                     __pnvBANK0:
  2175                           	callstack 0
  2176   0000E3                     _EUSART_RxDefaultInterruptHandler:
  2177                           	callstack 0
  2178   0000E3                     	ds	2
  2179   0000E5                     _EUSART_TxDefaultInterruptHandler:
  2180                           	callstack 0
  2181   0000E5                     	ds	2
  2182   000000                     _LATCbits	set	3979
  2183   000000                     _T2CONbits	set	4042
  2184   000000                     _T0CONbits	set	4053
  2185   000000                     _RCSTAbits	set	4011
  2186   000000                     _TXSTAbits	set	4012
  2187   000000                     _SSPSTATbits	set	4039
  2188   000000                     _SSPCON1bits	set	4038
  2189   000000                     _WPUB	set	3964
  2190   000000                     _ANSEL	set	3966
  2191   000000                     _ANSELH	set	3967
  2192   000000                     _LATA	set	3977
  2193   000000                     _OSCTUNE	set	3995
  2194   000000                     _SSPCON1	set	4038
  2195   000000                     _SSPSTAT	set	4039
  2196   000000                     _T0CON	set	4053
  2197   000000                     _TMR0L	set	4054
  2198   000000                     _TMR0H	set	4055
  2199   000000                     _INTCON2bits	set	4081
  2200   000000                     _PIE1bits	set	3997
  2201   000000                     _TRISA	set	3986
  2202   000000                     _LATC	set	3979
  2203   000000                     _LATB	set	3978
  2204   000000                     _TRISC	set	3988
  2205   000000                     _TRISB	set	3987
  2206   000000                     _PORTBbits	set	3969
  2207   000000                     _TABLAT	set	4085
  2208   000000                     _TBLPTRL	set	4086
  2209   000000                     _TBLPTRH	set	4087
  2210   000000                     _TBLPTRU	set	4088
  2211   000000                     _INTCONbits	set	4082
  2212   000000                     _PIR2bits	set	4001
  2213   000000                     _EECON1bits	set	4006
  2214   000000                     _PIR1bits	set	3998
  2215   000000                     _RCSTA	set	4011
  2216   000000                     _BAUDCON	set	4024
  2217   000000                     _CCP2CON	set	4026
  2218   000000                     _SPBRGH	set	4016
  2219   000000                     _RCONbits	set	4048
  2220   000000                     _TMR2	set	4044
  2221   000000                     _CCPR2H	set	4028
  2222   000000                     _CCPR2L	set	4027
  2223                           
  2224                           ; #config settings
  2225                           
  2226                           	psect	cinit
  2227   000F8E                     __pcinit:
  2228                           	callstack 0
  2229   000F8E                     start_initialization:
  2230                           	callstack 0
  2231   000F8E                     __initialization:
  2232                           	callstack 0
  2233                           
  2234                           ; Clear objects allocated to BANK0 (115 bytes)
  2235   000F8E  EE00  F060         	lfsr	0,__pbssBANK0
  2236   000F92  0E73               	movlw	115
  2237   000F94                     clear_0:
  2238   000F94  6AEE               	clrf	postinc0,c
  2239   000F96  06E8               	decf	wreg,f,c
  2240   000F98  E1FD               	bnz	clear_0
  2241                           
  2242                           ; Clear objects allocated to COMRAM (3 bytes)
  2243   000F9A  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2244   000F9C  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2245   000F9E  6A59               	clrf	__pbssCOMRAM& (0+255),c
  2246   000FA0                     end_of_initialization:
  2247                           	callstack 0
  2248   000FA0                     __end_of__initialization:
  2249                           	callstack 0
  2250   000FA0  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2251   000FA2  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2252   000FA4  0100               	movlb	0
  2253   000FA6  EFDA  F002         	goto	_main	;jump to C main() function
  2254                           
  2255                           	psect	bssCOMRAM
  2256   000059                     __pbssCOMRAM:
  2257                           	callstack 0
  2258   000059                     _uartBufferIndex:
  2259                           	callstack 0
  2260   000059                     	ds	1
  2261   00005A                     _eusartTxTail:
  2262                           	callstack 0
  2263   00005A                     	ds	1
  2264   00005B                     _eusartTxHead:
  2265                           	callstack 0
  2266   00005B                     	ds	1
  2267                           
  2268                           	psect	bssBANK0
  2269   000060                     __pbssBANK0:
  2270                           	callstack 0
  2271   000060                     	ds	32
  2272   000080                     _bufferCol:
  2273                           	callstack 0
  2274   000080                     	ds	32
  2275   0000A0                     _uartBuffer:
  2276                           	callstack 0
  2277   0000A0                     	ds	10
  2278   0000AA                     _eusartRxBuffer:
  2279                           	callstack 0
  2280   0000AA                     	ds	8
  2281   0000B2                     _eusartTxBuffer:
  2282                           	callstack 0
  2283   0000B2                     	ds	8
  2284   0000BA                     checkButtons@button3HoldTime:
  2285                           	callstack 0
  2286   0000BA                     	ds	2
  2287   0000BC                     _button3PressTime:
  2288                           	callstack 0
  2289   0000BC                     	ds	2
  2290   0000BE                     _blinkTimer:
  2291                           	callstack 0
  2292   0000BE                     	ds	2
  2293   0000C0                     _timer0ReloadVal:
  2294                           	callstack 0
  2295   0000C0                     	ds	2
  2296   0000C2                     checkButtons@alarmSettingMode:
  2297                           	callstack 0
  2298   0000C2                     	ds	1
  2299   0000C3                     checkButtons@button3PressCount:
  2300                           	callstack 0
  2301   0000C3                     	ds	1
  2302   0000C4                     _btTimeSet:
  2303                           	callstack 0
  2304   0000C4                     	ds	1
  2305   0000C5                     _isButton3Pressed:
  2306                           	callstack 0
  2307   0000C5                     	ds	1
  2308   0000C6                     _displayBlinking:
  2309                           	callstack 0
  2310   0000C6                     	ds	1
  2311   0000C7                     _alarmTriggered:
  2312                           	callstack 0
  2313   0000C7                     	ds	1
  2314   0000C8                     _alarmActive:
  2315                           	callstack 0
  2316   0000C8                     	ds	1
  2317   0000C9                     _alarmSet:
  2318                           	callstack 0
  2319   0000C9                     	ds	1
  2320   0000CA                     _alarmMinutes:
  2321                           	callstack 0
  2322   0000CA                     	ds	1
  2323   0000CB                     _alarmHours:
  2324                           	callstack 0
  2325   0000CB                     	ds	1
  2326   0000CC                     _seconds:
  2327                           	callstack 0
  2328   0000CC                     	ds	1
  2329   0000CD                     _minutes:
  2330                           	callstack 0
  2331   0000CD                     	ds	1
  2332   0000CE                     _hours:
  2333                           	callstack 0
  2334   0000CE                     	ds	1
  2335   0000CF                     _eusartRxCount:
  2336                           	callstack 0
  2337   0000CF                     	ds	1
  2338   0000D0                     _eusartRxTail:
  2339                           	callstack 0
  2340   0000D0                     	ds	1
  2341   0000D1                     _eusartRxHead:
  2342                           	callstack 0
  2343   0000D1                     	ds	1
  2344   0000D2                     _eusartTxBufferRemaining:
  2345                           	callstack 0
  2346   0000D2                     	ds	1
  2347                           
  2348                           	psect	cstackBANK1
  2349   000100                     __pcstackBANK1:
  2350                           	callstack 0
  2351   000100                     saveTimeToFlash@flashBuffer:
  2352                           	callstack 0
  2353                           
  2354                           ; 64 bytes @ 0x0
  2355   000100                     	ds	64
  2356   000140                     saveTimeToFlash@flashAddress:
  2357                           	callstack 0
  2358                           
  2359                           ; 4 bytes @ 0x40
  2360   000140                     	ds	4
  2361   000144                     saveTimeToFlash@i:
  2362                           	callstack 0
  2363                           
  2364                           ; 1 bytes @ 0x44
  2365   000144                     	ds	1
  2366                           
  2367                           	psect	cstackBANK0
  2368   0000D3                     __pcstackBANK0:
  2369                           	callstack 0
  2370   0000D3                     ??_triggerAlarm:
  2371   0000D3                     displayTime@displayString:
  2372                           	callstack 0
  2373   0000D3                     displayAlarmTime@displayString:
  2374                           	callstack 0
  2375                           
  2376                           ; 5 bytes @ 0x0
  2377   0000D3                     	ds	2
  2378   0000D5                     triggerAlarm@numCycles:
  2379                           	callstack 0
  2380                           
  2381                           ; 2 bytes @ 0x2
  2382   0000D5                     	ds	2
  2383   0000D7                     triggerAlarm@i:
  2384                           	callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x4
  2387   0000D7                     	ds	1
  2388   0000D8                     displayTime@timeString:
  2389                           	callstack 0
  2390   0000D8                     displayAlarmTime@alarmTimeString:
  2391                           	callstack 0
  2392                           
  2393                           ; 5 bytes @ 0x5
  2394   0000D8                     	ds	5
  2395   0000DD                     displayTime@i:
  2396                           	callstack 0
  2397   0000DD                     displayAlarmTime@i:
  2398                           	callstack 0
  2399                           
  2400                           ; 2 bytes @ 0xA
  2401   0000DD                     	ds	2
  2402   0000DF                     ??_checkButtons:
  2403                           
  2404                           ; 1 bytes @ 0xC
  2405   0000DF                     	ds	2
  2406   0000E1                     main@hours_pom:
  2407                           	callstack 0
  2408                           
  2409                           ; 1 bytes @ 0xE
  2410   0000E1                     	ds	1
  2411   0000E2                     main@minutes_pom:
  2412                           	callstack 0
  2413                           
  2414                           ; 1 bytes @ 0xF
  2415   0000E2                     	ds	1
  2416                           
  2417                           	psect	cstackCOMRAM
  2418   000001                     __pcstackCOMRAM:
  2419                           	callstack 0
  2420   000001                     btGetData@rcv:
  2421                           	callstack 0
  2422                           
  2423                           ; 1 bytes @ 0x0
  2424   000001                     	ds	1
  2425   000002                     ??_INTERRUPT_InterruptManager:
  2426                           
  2427                           ; 1 bytes @ 0x1
  2428   000002                     	ds	2
  2429   000004                     ??_TMR0_Initialize:
  2430   000004                     ?___awdiv:
  2431                           	callstack 0
  2432   000004                     ?___awmod:
  2433                           	callstack 0
  2434   000004                     SPI_Exchange8bit@data:
  2435                           	callstack 0
  2436   000004                     EUSART_SetTxInterruptHandler@handler:
  2437                           	callstack 0
  2438   000004                     EUSART_SetRxInterruptHandler@handler:
  2439                           	callstack 0
  2440   000004                     ___awdiv@dividend:
  2441                           	callstack 0
  2442   000004                     ___awmod@dividend:
  2443                           	callstack 0
  2444   000004                     FLASH_ReadByte@flashAddr:
  2445                           	callstack 0
  2446   000004                     FLASH_EraseBlock@baseAddr:
  2447                           	callstack 0
  2448                           
  2449                           ; 4 bytes @ 0x3
  2450   000004                     	ds	1
  2451   000005                     max7219_cmd@data:
  2452                           	callstack 0
  2453                           
  2454                           ; 1 bytes @ 0x4
  2455   000005                     	ds	1
  2456   000006                     ??_max7219_cmd:
  2457   000006                     ___awdiv@divisor:
  2458                           	callstack 0
  2459   000006                     ___awmod@divisor:
  2460                           	callstack 0
  2461                           
  2462                           ; 2 bytes @ 0x5
  2463   000006                     	ds	2
  2464   000008                     FLASH_EraseBlock@GIEBitValue:
  2465                           	callstack 0
  2466   000008                     max7219_cmd@Addr:
  2467                           	callstack 0
  2468   000008                     ___awdiv@counter:
  2469                           	callstack 0
  2470   000008                     ___awmod@counter:
  2471                           	callstack 0
  2472                           
  2473                           ; 1 bytes @ 0x7
  2474   000008                     	ds	1
  2475   000009                     ___awdiv@sign:
  2476                           	callstack 0
  2477   000009                     ___awmod@sign:
  2478                           	callstack 0
  2479   000009                     max7219_cmd@writeData:
  2480                           	callstack 0
  2481   000009                     FLASH_WriteBlock@writeAddr:
  2482                           	callstack 0
  2483                           
  2484                           ; 4 bytes @ 0x8
  2485   000009                     	ds	1
  2486   00000A                     ___awdiv@quotient:
  2487                           	callstack 0
  2488                           
  2489                           ; 2 bytes @ 0x9
  2490   00000A                     	ds	1
  2491   00000B                     max7219_cmd@i:
  2492                           	callstack 0
  2493                           
  2494                           ; 2 bytes @ 0xA
  2495   00000B                     	ds	1
  2496   00000C                     max_write@row:
  2497                           	callstack 0
  2498                           
  2499                           ; 2 bytes @ 0xB
  2500   00000C                     	ds	1
  2501   00000D                     FLASH_WriteBlock@flashWrBufPtr:
  2502                           	callstack 0
  2503                           
  2504                           ; 2 bytes @ 0xC
  2505   00000D                     	ds	1
  2506   00000E                     max_write@data:
  2507                           	callstack 0
  2508                           
  2509                           ; 1 bytes @ 0xD
  2510   00000E                     	ds	1
  2511   00000F                     ??_max_write:
  2512   00000F                     FLASH_WriteBlock@blockStartAddr:
  2513                           	callstack 0
  2514                           
  2515                           ; 4 bytes @ 0xE
  2516   00000F                     	ds	2
  2517   000011                     max_write@offset:
  2518                           	callstack 0
  2519                           
  2520                           ; 2 bytes @ 0x10
  2521   000011                     	ds	2
  2522   000013                     FLASH_WriteBlock@GIEBitValue:
  2523                           	callstack 0
  2524   000013                     max_write@devTarget:
  2525                           	callstack 0
  2526                           
  2527                           ; 2 bytes @ 0x12
  2528   000013                     	ds	1
  2529   000014                     FLASH_WriteBlock@j:
  2530                           	callstack 0
  2531                           
  2532                           ; 1 bytes @ 0x13
  2533   000014                     	ds	1
  2534   000015                     FLASH_WriteBlock@numberOfWriteBlocks:
  2535                           	callstack 0
  2536   000015                     max_write@dev:
  2537                           	callstack 0
  2538                           
  2539                           ; 2 bytes @ 0x14
  2540   000015                     	ds	1
  2541   000016                     FLASH_WriteBlock@dataCounter:
  2542                           	callstack 0
  2543                           
  2544                           ; 1 bytes @ 0x15
  2545   000016                     	ds	1
  2546   000017                     FLASH_WriteBlock@i:
  2547                           	callstack 0
  2548   000017                     max_write@writeData:
  2549                           	callstack 0
  2550                           
  2551                           ; 2 bytes @ 0x16
  2552   000017                     	ds	1
  2553   000018                     
  2554                           ; 1 bytes @ 0x17
  2555   000018                     	ds	1
  2556   000019                     ??_flushBuffer:
  2557                           
  2558                           ; 1 bytes @ 0x18
  2559   000019                     	ds	3
  2560   00001C                     flushBuffer@bufferRow:
  2561                           	callstack 0
  2562                           
  2563                           ; 32 bytes @ 0x1B
  2564   00001C                     	ds	32
  2565   00003C                     flushBuffer@dev:
  2566                           	callstack 0
  2567                           
  2568                           ; 2 bytes @ 0x3B
  2569   00003C                     	ds	2
  2570   00003E                     flushBuffer@j:
  2571                           	callstack 0
  2572                           
  2573                           ; 2 bytes @ 0x3D
  2574   00003E                     	ds	2
  2575   000040                     flushBuffer@row:
  2576                           	callstack 0
  2577                           
  2578                           ; 2 bytes @ 0x3F
  2579   000040                     	ds	2
  2580   000042                     flushBuffer@i:
  2581                           	callstack 0
  2582                           
  2583                           ; 2 bytes @ 0x41
  2584   000042                     	ds	2
  2585   000044                     clearDisplay@i:
  2586                           	callstack 0
  2587   000044                     printString@str:
  2588                           	callstack 0
  2589                           
  2590                           ; 2 bytes @ 0x43
  2591   000044                     	ds	2
  2592   000046                     ??_printString:
  2593                           
  2594                           ; 1 bytes @ 0x45
  2595   000046                     	ds	8
  2596   00004E                     printString@indx:
  2597                           	callstack 0
  2598                           
  2599                           ; 2 bytes @ 0x4D
  2600   00004E                     	ds	2
  2601   000050                     printString@data:
  2602                           	callstack 0
  2603                           
  2604                           ; 1 bytes @ 0x4F
  2605   000050                     	ds	1
  2606   000051                     printString@strindx:
  2607                           	callstack 0
  2608                           
  2609                           ; 2 bytes @ 0x50
  2610   000051                     	ds	2
  2611   000053                     printString@i:
  2612                           	callstack 0
  2613                           
  2614                           ; 2 bytes @ 0x52
  2615   000053                     	ds	2
  2616   000055                     printString@k:
  2617                           	callstack 0
  2618                           
  2619                           ; 2 bytes @ 0x54
  2620   000055                     	ds	2
  2621   000057                     printString@j:
  2622                           	callstack 0
  2623                           
  2624                           ; 2 bytes @ 0x56
  2625   000057                     	ds	2
  2626   000059                     
  2627                           ; 1 bytes @ 0x58
  2628 ;;
  2629 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2630 ;;
  2631 ;; *************** function _main *****************
  2632 ;; Defined at:
  2633 ;;		line 46 in file "main.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  minutes_pom     1   15[BANK0 ] unsigned char 
  2638 ;;  hours_pom       1   14[BANK0 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        2 bytes
  2653 ;; Hardware stack levels required when called: 8
  2654 ;; This function calls:
  2655 ;;		_SYSTEM_Initialize
  2656 ;;		_TMR0_HasOverflowOccured
  2657 ;;		_TMR0_Reload
  2658 ;;		_TMR0_StartTimer
  2659 ;;		_checkButtons
  2660 ;;		_clearDisplay
  2661 ;;		_displayTime
  2662 ;;		_loadTimeFromFlash
  2663 ;;		_matrixInit
  2664 ;;		_processAlarm
  2665 ;;		_saveTimeToFlash
  2666 ;; This function is called by:
  2667 ;;		Startup code after reset
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text0
  2672   0005B4                     __ptext0:
  2673                           	callstack 0
  2674   0005B4                     _main:
  2675                           	callstack 23
  2676   0005B4                     
  2677                           ;main.c: 48:     SYSTEM_Initialize();
  2678   0005B4  ECA5  F007         	call	_SYSTEM_Initialize	;wreg free
  2679                           
  2680                           ;main.c: 49:     matrixInit();
  2681   0005B8  EC5D  F007         	call	_matrixInit	;wreg free
  2682   0005BC                     
  2683                           ;main.c: 50:     clearDisplay();
  2684   0005BC  EC41  F007         	call	_clearDisplay	;wreg free
  2685   0005C0                     
  2686                           ;main.c: 51:     loadTimeFromFlash();
  2687   0005C0  EC9B  F006         	call	_loadTimeFromFlash	;wreg free
  2688   0005C4                     
  2689                           ;main.c: 53:     TMR0_StartTimer();
  2690   0005C4  EC27  F008         	call	_TMR0_StartTimer	;wreg free
  2691   0005C8                     
  2692                           ;main.c: 55:     INTCONbits.GIE = 1;
  2693   0005C8  8EF2               	bsf	242,7,c	;volatile
  2694   0005CA                     
  2695                           ;main.c: 56:     INTCONbits.PEIE = 1;
  2696   0005CA  8CF2               	bsf	242,6,c	;volatile
  2697   0005CC                     l3595:
  2698                           
  2699                           ;main.c: 60:     {;main.c: 61:         if(TMR0_HasOverflowOccured())
  2700   0005CC  ECE2  F007         	call	_TMR0_HasOverflowOccured	;wreg free
  2701   0005D0  0900               	iorlw	0
  2702   0005D2  B4D8               	btfsc	status,2,c
  2703   0005D4  EFEE  F002         	goto	u2931
  2704   0005D8  EFF0  F002         	goto	u2930
  2705   0005DC                     u2931:
  2706   0005DC  EF19  F003         	goto	l3621
  2707   0005E0                     u2930:
  2708   0005E0                     
  2709                           ;main.c: 62:         {;main.c: 63:             displayTime();
  2710   0005E0  EC03  F005         	call	_displayTime	;wreg free
  2711   0005E4                     
  2712                           ;main.c: 65:             seconds++;
  2713   0005E4  0100               	movlb	0	; () banked
  2714   0005E6  2BCC               	incf	_seconds& (0+255),f,b
  2715   0005E8                     
  2716                           ; BSR set to: 0
  2717                           ;main.c: 66:             if (seconds >= 60) {
  2718   0005E8  0E3B               	movlw	59
  2719   0005EA  65CC               	cpfsgt	_seconds& (0+255),b
  2720   0005EC  EFFA  F002         	goto	u2941
  2721   0005F0  EFFC  F002         	goto	u2940
  2722   0005F4                     u2941:
  2723   0005F4  EF14  F003         	goto	l3617
  2724   0005F8                     u2940:
  2725   0005F8                     
  2726                           ; BSR set to: 0
  2727                           ;main.c: 67:                 seconds = 0;
  2728   0005F8  0E00               	movlw	0
  2729   0005FA  6FCC               	movwf	_seconds& (0+255),b
  2730   0005FC                     
  2731                           ; BSR set to: 0
  2732                           ;main.c: 68:                 minutes++;
  2733   0005FC  2BCD               	incf	_minutes& (0+255),f,b
  2734   0005FE                     
  2735                           ; BSR set to: 0
  2736                           ;main.c: 69:                 if (minutes >= 60) {
  2737   0005FE  0E3B               	movlw	59
  2738   000600  65CD               	cpfsgt	_minutes& (0+255),b
  2739   000602  EF05  F003         	goto	u2951
  2740   000606  EF07  F003         	goto	u2950
  2741   00060A                     u2951:
  2742   00060A  EF14  F003         	goto	l3617
  2743   00060E                     u2950:
  2744   00060E                     
  2745                           ; BSR set to: 0
  2746                           ;main.c: 70:                     minutes = 0;
  2747   00060E  0E00               	movlw	0
  2748   000610  6FCD               	movwf	_minutes& (0+255),b
  2749   000612                     
  2750                           ; BSR set to: 0
  2751                           ;main.c: 71:                     hours++;
  2752   000612  2BCE               	incf	_hours& (0+255),f,b
  2753   000614                     
  2754                           ; BSR set to: 0
  2755                           ;main.c: 72:                     if (hours >= 24) {
  2756   000614  0E17               	movlw	23
  2757   000616  65CE               	cpfsgt	_hours& (0+255),b
  2758   000618  EF10  F003         	goto	u2961
  2759   00061C  EF12  F003         	goto	u2960
  2760   000620                     u2961:
  2761   000620  EF14  F003         	goto	l3617
  2762   000624                     u2960:
  2763   000624                     
  2764                           ; BSR set to: 0
  2765                           ;main.c: 73:                         hours = 0;
  2766   000624  0E00               	movlw	0
  2767   000626  6FCE               	movwf	_hours& (0+255),b
  2768   000628                     l3617:
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;main.c: 77:             TMR0_Reload();
  2772   000628  EC12  F008         	call	_TMR0_Reload	;wreg free
  2773   00062C                     
  2774                           ;main.c: 78:             INTCONbits.TMR0IF = 0;
  2775   00062C  94F2               	bcf	242,2,c	;volatile
  2776                           
  2777                           ;main.c: 79:             TMR0_StartTimer();
  2778   00062E  EC27  F008         	call	_TMR0_StartTimer	;wreg free
  2779   000632                     l3621:
  2780                           
  2781                           ;main.c: 81:         displayTime();
  2782   000632  EC03  F005         	call	_displayTime	;wreg free
  2783   000636                     
  2784                           ;main.c: 82:         checkButtons();
  2785   000636  EC34  F000         	call	_checkButtons	;wreg free
  2786   00063A                     
  2787                           ;main.c: 83:         processAlarm();
  2788   00063A  ECC8  F006         	call	_processAlarm	;wreg free
  2789   00063E                     
  2790                           ;main.c: 84:         if(btTimeSet) {
  2791   00063E  0100               	movlb	0	; () banked
  2792   000640  51C4               	movf	_btTimeSet& (0+255),w,b
  2793   000642  B4D8               	btfsc	status,2,c
  2794   000644  EF26  F003         	goto	u2971
  2795   000648  EF28  F003         	goto	u2970
  2796   00064C                     u2971:
  2797   00064C  EFE6  F002         	goto	l3595
  2798   000650                     u2970:
  2799   000650                     
  2800                           ; BSR set to: 0
  2801                           ;main.c: 86:             if (uartBuffer[0] == 'H' && uartBuffer[3] == 'M' && uartBuffer[
      +                          6] == ';')
  2802   000650  0E48               	movlw	72
  2803   000652  19A0               	xorwf	_uartBuffer& (0+255),w,b
  2804   000654  A4D8               	btfss	status,2,c
  2805   000656  EF2F  F003         	goto	u2981
  2806   00065A  EF31  F003         	goto	u2980
  2807   00065E                     u2981:
  2808   00065E  EFE6  F002         	goto	l3595
  2809   000662                     u2980:
  2810   000662                     
  2811                           ; BSR set to: 0
  2812   000662  0E4D               	movlw	77
  2813   000664  19A3               	xorwf	(_uartBuffer+3)& (0+255),w,b
  2814   000666  A4D8               	btfss	status,2,c
  2815   000668  EF38  F003         	goto	u2991
  2816   00066C  EF3A  F003         	goto	u2990
  2817   000670                     u2991:
  2818   000670  EFE6  F002         	goto	l3595
  2819   000674                     u2990:
  2820   000674                     
  2821                           ; BSR set to: 0
  2822   000674  0E3B               	movlw	59
  2823   000676  19A6               	xorwf	(_uartBuffer+6)& (0+255),w,b
  2824   000678  A4D8               	btfss	status,2,c
  2825   00067A  EF41  F003         	goto	u3001
  2826   00067E  EF43  F003         	goto	u3000
  2827   000682                     u3001:
  2828   000682  EFE6  F002         	goto	l3595
  2829   000686                     u3000:
  2830   000686                     
  2831                           ; BSR set to: 0
  2832                           ;main.c: 87:             {;main.c: 89:                 uint8_t hours_pom = (uartBuffer[1
      +                          ] - '0') * 10 + (uartBuffer[2] - '0');
  2833   000686  51A1               	movf	(_uartBuffer+1)& (0+255),w,b
  2834   000688  0D0A               	mullw	10
  2835   00068A  50F3               	movf	243,w,c
  2836   00068C  25A2               	addwf	(_uartBuffer+2)& (0+255),w,b
  2837   00068E  0FF0               	addlw	240
  2838   000690  6FE1               	movwf	main@hours_pom& (0+255),b
  2839                           
  2840                           ;main.c: 92:                 uint8_t minutes_pom = (uartBuffer[4] - '0') * 10 + (uartBuf
      +                          fer[5] - '0');
  2841   000692  51A4               	movf	(_uartBuffer+4)& (0+255),w,b
  2842   000694  0D0A               	mullw	10
  2843   000696  50F3               	movf	243,w,c
  2844   000698  25A5               	addwf	(_uartBuffer+5)& (0+255),w,b
  2845   00069A  0FF0               	addlw	240
  2846   00069C  6FE2               	movwf	main@minutes_pom& (0+255),b
  2847   00069E                     
  2848                           ; BSR set to: 0
  2849                           ;main.c: 95:                 if (hours_pom < 24 && minutes_pom < 60)
  2850   00069E  0E18               	movlw	24
  2851   0006A0  61E1               	cpfslt	main@hours_pom& (0+255),b
  2852   0006A2  EF55  F003         	goto	u3011
  2853   0006A6  EF57  F003         	goto	u3010
  2854   0006AA                     u3011:
  2855   0006AA  EF69  F003         	goto	l443
  2856   0006AE                     u3010:
  2857   0006AE                     
  2858                           ; BSR set to: 0
  2859   0006AE  0E3C               	movlw	60
  2860   0006B0  61E2               	cpfslt	main@minutes_pom& (0+255),b
  2861   0006B2  EF5D  F003         	goto	u3021
  2862   0006B6  EF5F  F003         	goto	u3020
  2863   0006BA                     u3021:
  2864   0006BA  EF69  F003         	goto	l443
  2865   0006BE                     u3020:
  2866   0006BE                     
  2867                           ; BSR set to: 0
  2868                           ;main.c: 96:                 {;main.c: 98:                     hours = hours_pom;
  2869   0006BE  C0E1  F0CE         	movff	main@hours_pom,_hours
  2870                           
  2871                           ;main.c: 99:                     minutes = minutes_pom;
  2872   0006C2  C0E2  F0CD         	movff	main@minutes_pom,_minutes
  2873   0006C6                     
  2874                           ; BSR set to: 0
  2875                           ;main.c: 100:                     displayTime();
  2876   0006C6  EC03  F005         	call	_displayTime	;wreg free
  2877   0006CA                     
  2878                           ;main.c: 101:                     saveTimeToFlash();
  2879   0006CA  EC5E  F006         	call	_saveTimeToFlash	;wreg free
  2880   0006CE  EFE6  F002         	goto	l3595
  2881   0006D2                     l443:
  2882                           
  2883                           ; BSR set to: 0
  2884   0006D2  EFE6  F002         	goto	l3595
  2885   0006D6  EF32  F000         	goto	start
  2886   0006DA                     __end_of_main:
  2887                           	callstack 0
  2888                           
  2889 ;; *************** function _processAlarm *****************
  2890 ;; Defined at:
  2891 ;;		line 149 in file "main.c"
  2892 ;; Parameters:    Size  Location     Type
  2893 ;;		None
  2894 ;; Auto vars:     Size  Location     Type
  2895 ;;		None
  2896 ;; Return value:  Size  Location     Type
  2897 ;;                  1    wreg      void 
  2898 ;; Registers used:
  2899 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2900 ;; Tracked objects:
  2901 ;;		On entry : 0/0
  2902 ;;		On exit  : 0/0
  2903 ;;		Unchanged: 0/0
  2904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2905 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2906 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2908 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2909 ;;Total ram usage:        0 bytes
  2910 ;; Hardware stack levels used: 1
  2911 ;; Hardware stack levels required when called: 7
  2912 ;; This function calls:
  2913 ;;		_triggerAlarm
  2914 ;; This function is called by:
  2915 ;;		_main
  2916 ;; This function uses a non-reentrant model
  2917 ;;
  2918                           
  2919                           	psect	text1
  2920   000D90                     __ptext1:
  2921                           	callstack 0
  2922   000D90                     _processAlarm:
  2923                           	callstack 23
  2924   000D90                     
  2925                           ;main.c: 152:     if (alarmSet && !alarmTriggered)
  2926   000D90  0100               	movlb	0	; () banked
  2927   000D92  51C9               	movf	_alarmSet& (0+255),w,b
  2928   000D94  B4D8               	btfsc	status,2,c
  2929   000D96  EFCF  F006         	goto	u2561
  2930   000D9A  EFD1  F006         	goto	u2560
  2931   000D9E                     u2561:
  2932   000D9E  EFF0  F006         	goto	l463
  2933   000DA2                     u2560:
  2934   000DA2                     
  2935                           ; BSR set to: 0
  2936   000DA2  51C7               	movf	_alarmTriggered& (0+255),w,b
  2937   000DA4  A4D8               	btfss	status,2,c
  2938   000DA6  EFD7  F006         	goto	u2571
  2939   000DAA  EFD9  F006         	goto	u2570
  2940   000DAE                     u2571:
  2941   000DAE  EFF0  F006         	goto	l463
  2942   000DB2                     u2570:
  2943   000DB2                     
  2944                           ; BSR set to: 0
  2945                           ;main.c: 153:     {;main.c: 155:         if (hours == alarmHours && minutes == alarmMinu
      +                          tes)
  2946   000DB2  51CB               	movf	_alarmHours& (0+255),w,b
  2947   000DB4  19CE               	xorwf	_hours& (0+255),w,b
  2948   000DB6  A4D8               	btfss	status,2,c
  2949   000DB8  EFE0  F006         	goto	u2581
  2950   000DBC  EFE2  F006         	goto	u2580
  2951   000DC0                     u2581:
  2952   000DC0  EFF0  F006         	goto	l463
  2953   000DC4                     u2580:
  2954   000DC4                     
  2955                           ; BSR set to: 0
  2956   000DC4  51CA               	movf	_alarmMinutes& (0+255),w,b
  2957   000DC6  19CD               	xorwf	_minutes& (0+255),w,b
  2958   000DC8  A4D8               	btfss	status,2,c
  2959   000DCA  EFE9  F006         	goto	u2591
  2960   000DCE  EFEB  F006         	goto	u2590
  2961   000DD2                     u2591:
  2962   000DD2  EFF0  F006         	goto	l463
  2963   000DD6                     u2590:
  2964   000DD6                     
  2965                           ; BSR set to: 0
  2966                           ;main.c: 156:         {;main.c: 157:             triggerAlarm();
  2967   000DD6  ECA6  F004         	call	_triggerAlarm	;wreg free
  2968   000DDA                     
  2969                           ;main.c: 158:             alarmTriggered = 1;
  2970   000DDA  0E01               	movlw	1
  2971   000DDC  0100               	movlb	0	; () banked
  2972   000DDE  6FC7               	movwf	_alarmTriggered& (0+255),b
  2973   000DE0                     l463:
  2974                           
  2975                           ; BSR set to: 0
  2976   000DE0  0012               	return		;funcret
  2977   000DE2                     __end_of_processAlarm:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _triggerAlarm *****************
  2981 ;; Defined at:
  2982 ;;		line 164 in file "main.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;		None
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  i               2    4[BANK0 ] unsigned int 
  2987 ;;  numCycles       2    2[BANK0 ] unsigned int 
  2988 ;; Return value:  Size  Location     Type
  2989 ;;                  1    wreg      void 
  2990 ;; Registers used:
  2991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2992 ;; Tracked objects:
  2993 ;;		On entry : 0/0
  2994 ;;		On exit  : 0/0
  2995 ;;		Unchanged: 0/0
  2996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2998 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2999 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3000 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3001 ;;Total ram usage:        6 bytes
  3002 ;; Hardware stack levels used: 1
  3003 ;; Hardware stack levels required when called: 6
  3004 ;; This function calls:
  3005 ;;		_clearDisplay
  3006 ;;		_printString
  3007 ;; This function is called by:
  3008 ;;		_processAlarm
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           	psect	text2
  3013   00094C                     __ptext2:
  3014                           	callstack 0
  3015   00094C                     _triggerAlarm:
  3016                           	callstack 23
  3017   00094C                     
  3018                           ;main.c: 171:     unsigned int numCycles = 60000 / (2 * 500);
  3019   00094C  0E00               	movlw	0
  3020   00094E  0100               	movlb	0	; () banked
  3021   000950  6FD6               	movwf	(triggerAlarm@numCycles+1)& (0+255),b
  3022   000952  0E3C               	movlw	60
  3023   000954  6FD5               	movwf	triggerAlarm@numCycles& (0+255),b
  3024                           
  3025                           ;main.c: 173:     for (unsigned int i = 0; i < numCycles; i++)
  3026   000956  0E00               	movlw	0
  3027   000958  6FD8               	movwf	(triggerAlarm@i+1)& (0+255),b
  3028   00095A  0E00               	movlw	0
  3029   00095C  6FD7               	movwf	triggerAlarm@i& (0+255),b
  3030   00095E  EFF7  F004         	goto	l3221
  3031   000962                     l467:
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;main.c: 174:     {;main.c: 176:         if (!PORTBbits.RB2)
  3035   000962  B481               	btfsc	129,2,c	;volatile
  3036   000964  EFB6  F004         	goto	u2361
  3037   000968  EFB8  F004         	goto	u2360
  3038   00096C                     u2361:
  3039   00096C  EFD0  F004         	goto	l3211
  3040   000970                     u2360:
  3041   000970                     
  3042                           ; BSR set to: 0
  3043                           ;main.c: 177:         {;main.c: 178:             _delay((unsigned long)((100)*(8000000/4
      +                          000.0)));
  3044   000970  0E02               	movlw	2
  3045   000972  0100               	movlb	0	; () banked
  3046   000974  6FD4               	movwf	(??_triggerAlarm+1)& (0+255),b
  3047   000976  0E04               	movlw	4
  3048   000978  6FD3               	movwf	??_triggerAlarm& (0+255),b
  3049   00097A  0EBA               	movlw	186
  3050   00097C                     u3037:
  3051   00097C  2EE8               	decfsz	wreg,f,c
  3052   00097E  D7FE               	bra	u3037
  3053   000980  2FD3               	decfsz	??_triggerAlarm& (0+255),f,b
  3054   000982  D7FC               	bra	u3037
  3055   000984  2FD4               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3056   000986  D7FA               	bra	u3037
  3057   000988  0000               	nop	
  3058   00098A                     
  3059                           ;main.c: 179:             if (!PORTBbits.RB2)
  3060   00098A  B481               	btfsc	129,2,c	;volatile
  3061   00098C  EFCA  F004         	goto	u2371
  3062   000990  EFCC  F004         	goto	u2370
  3063   000994                     u2371:
  3064   000994  EFD0  F004         	goto	l3211
  3065   000998                     u2370:
  3066   000998                     
  3067                           ;main.c: 180:             {;main.c: 181:                 clearDisplay();
  3068   000998  EC41  F007         	call	_clearDisplay	;wreg free
  3069   00099C  EF02  F005         	goto	l470
  3070   0009A0                     l3211:
  3071                           
  3072                           ;main.c: 187:         printString("ALARM");
  3073   0009A0  0EF9               	movlw	low STR_1
  3074   0009A2  6E44               	movwf	printString@str^0,c
  3075   0009A4  0EFF               	movlw	high STR_1
  3076   0009A6  6E45               	movwf	(printString@str+1)^0,c
  3077   0009A8  EC7F  F001         	call	_printString	;wreg free
  3078   0009AC                     
  3079                           ;main.c: 188:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3080   0009AC  0E06               	movlw	6
  3081   0009AE  0100               	movlb	0	; () banked
  3082   0009B0  6FD4               	movwf	(??_triggerAlarm+1)& (0+255),b
  3083   0009B2  0E13               	movlw	19
  3084   0009B4  6FD3               	movwf	??_triggerAlarm& (0+255),b
  3085   0009B6  0EAD               	movlw	173
  3086   0009B8                     u3047:
  3087   0009B8  2EE8               	decfsz	wreg,f,c
  3088   0009BA  D7FE               	bra	u3047
  3089   0009BC  2FD3               	decfsz	??_triggerAlarm& (0+255),f,b
  3090   0009BE  D7FC               	bra	u3047
  3091   0009C0  2FD4               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3092   0009C2  D7FA               	bra	u3047
  3093   0009C4  F000 F000          	nop2	
  3094   0009C8                     
  3095                           ;main.c: 189:         clearDisplay();
  3096   0009C8  EC41  F007         	call	_clearDisplay	;wreg free
  3097   0009CC                     
  3098                           ;main.c: 190:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3099   0009CC  0E06               	movlw	6
  3100   0009CE  0100               	movlb	0	; () banked
  3101   0009D0  6FD4               	movwf	(??_triggerAlarm+1)& (0+255),b
  3102   0009D2  0E13               	movlw	19
  3103   0009D4  6FD3               	movwf	??_triggerAlarm& (0+255),b
  3104   0009D6  0EAD               	movlw	173
  3105   0009D8                     u3057:
  3106   0009D8  2EE8               	decfsz	wreg,f,c
  3107   0009DA  D7FE               	bra	u3057
  3108   0009DC  2FD3               	decfsz	??_triggerAlarm& (0+255),f,b
  3109   0009DE  D7FC               	bra	u3057
  3110   0009E0  2FD4               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3111   0009E2  D7FA               	bra	u3057
  3112   0009E4  F000 F000          	nop2	
  3113   0009E8                     
  3114                           ;main.c: 191:     }
  3115   0009E8  0100               	movlb	0	; () banked
  3116   0009EA  4BD7               	infsnz	triggerAlarm@i& (0+255),f,b
  3117   0009EC  2BD8               	incf	(triggerAlarm@i+1)& (0+255),f,b
  3118   0009EE                     l3221:
  3119                           
  3120                           ; BSR set to: 0
  3121   0009EE  51D5               	movf	triggerAlarm@numCycles& (0+255),w,b
  3122   0009F0  5DD7               	subwf	triggerAlarm@i& (0+255),w,b
  3123   0009F2  51D6               	movf	(triggerAlarm@numCycles+1)& (0+255),w,b
  3124   0009F4  59D8               	subwfb	(triggerAlarm@i+1)& (0+255),w,b
  3125   0009F6  A0D8               	btfss	status,0,c
  3126   0009F8  EF00  F005         	goto	u2381
  3127   0009FC  EF02  F005         	goto	u2380
  3128   000A00                     u2381:
  3129   000A00  EFB1  F004         	goto	l467
  3130   000A04                     u2380:
  3131   000A04                     l470:
  3132   000A04  0012               	return		;funcret
  3133   000A06                     __end_of_triggerAlarm:
  3134                           	callstack 0
  3135                           
  3136 ;; *************** function _clearDisplay *****************
  3137 ;; Defined at:
  3138 ;;		line 105 in file "MAX7219.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;		None
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  i               2   67[COMRAM] int 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      void 
  3145 ;; Registers used:
  3146 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3152 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3155 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3156 ;;Total ram usage:        2 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 5
  3159 ;; This function calls:
  3160 ;;		_flushBuffer
  3161 ;; This function is called by:
  3162 ;;		_main
  3163 ;;		_triggerAlarm
  3164 ;; This function uses a non-reentrant model
  3165 ;;
  3166                           
  3167                           	psect	text3
  3168   000E82                     __ptext3:
  3169                           	callstack 0
  3170   000E82                     _clearDisplay:
  3171                           	callstack 23
  3172   000E82                     
  3173                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  3174   000E82  0E00               	movlw	0
  3175   000E84  6E45               	movwf	(clearDisplay@i+1)^0,c
  3176   000E86  0E00               	movlw	0
  3177   000E88  6E44               	movwf	clearDisplay@i^0,c
  3178   000E8A                     l2455:
  3179                           
  3180                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  3181   000E8A  5044               	movf	clearDisplay@i^0,w,c
  3182   000E8C  0F80               	addlw	low _bufferCol
  3183   000E8E  6ED9               	movwf	fsr2l,c
  3184   000E90  6ADA               	clrf	fsr2h,c
  3185   000E92  6ADF               	clrf	indf2,c
  3186   000E94                     
  3187                           ;MAX7219.c: 110:  }
  3188   000E94  4A44               	infsnz	clearDisplay@i^0,f,c
  3189   000E96  2A45               	incf	(clearDisplay@i+1)^0,f,c
  3190   000E98  BE45               	btfsc	(clearDisplay@i+1)^0,7,c
  3191   000E9A  EF58  F007         	goto	u1391
  3192   000E9E  5045               	movf	(clearDisplay@i+1)^0,w,c
  3193   000EA0  E109               	bnz	u1390
  3194   000EA2  0E1F               	movlw	31
  3195   000EA4  5C44               	subwf	clearDisplay@i^0,w,c
  3196   000EA6  A0D8               	btfss	status,0,c
  3197   000EA8  EF58  F007         	goto	u1391
  3198   000EAC  EF5A  F007         	goto	u1390
  3199   000EB0                     u1391:
  3200   000EB0  EF45  F007         	goto	l2455
  3201   000EB4                     u1390:
  3202   000EB4                     
  3203                           ;MAX7219.c: 111:  flushBuffer();
  3204   000EB4  EC43  F002         	call	_flushBuffer	;wreg free
  3205   000EB8  0012               	return		;funcret
  3206   000EBA                     __end_of_clearDisplay:
  3207                           	callstack 0
  3208                           
  3209 ;; *************** function _matrixInit *****************
  3210 ;; Defined at:
  3211 ;;		line 96 in file "MAX7219.c"
  3212 ;; Parameters:    Size  Location     Type
  3213 ;;		None
  3214 ;; Auto vars:     Size  Location     Type
  3215 ;;		None
  3216 ;; Return value:  Size  Location     Type
  3217 ;;                  1    wreg      void 
  3218 ;; Registers used:
  3219 ;;		wreg, status,2, status,0, cstack
  3220 ;; Tracked objects:
  3221 ;;		On entry : 0/0
  3222 ;;		On exit  : 0/0
  3223 ;;		Unchanged: 0/0
  3224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3228 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3229 ;;Total ram usage:        0 bytes
  3230 ;; Hardware stack levels used: 1
  3231 ;; Hardware stack levels required when called: 4
  3232 ;; This function calls:
  3233 ;;		_max7219_cmd
  3234 ;; This function is called by:
  3235 ;;		_main
  3236 ;; This function uses a non-reentrant model
  3237 ;;
  3238                           
  3239                           	psect	text4
  3240   000EBA                     __ptext4:
  3241                           	callstack 0
  3242   000EBA                     _matrixInit:
  3243                           	callstack 26
  3244   000EBA                     
  3245                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  3246   000EBA  0E00               	movlw	0
  3247   000EBC  6E05               	movwf	max7219_cmd@data^0,c
  3248   000EBE  0E09               	movlw	9
  3249   000EC0  ECF1  F006         	call	_max7219_cmd
  3250                           
  3251                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  3252   000EC4  0E01               	movlw	1
  3253   000EC6  6E05               	movwf	max7219_cmd@data^0,c
  3254   000EC8  0E0A               	movlw	10
  3255   000ECA  ECF1  F006         	call	_max7219_cmd
  3256                           
  3257                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  3258   000ECE  0E07               	movlw	7
  3259   000ED0  6E05               	movwf	max7219_cmd@data^0,c
  3260   000ED2  0E0B               	movlw	11
  3261   000ED4  ECF1  F006         	call	_max7219_cmd
  3262                           
  3263                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  3264   000ED8  0E01               	movlw	1
  3265   000EDA  6E05               	movwf	max7219_cmd@data^0,c
  3266   000EDC  0E0C               	movlw	12
  3267   000EDE  ECF1  F006         	call	_max7219_cmd
  3268                           
  3269                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  3270   000EE2  0E00               	movlw	0
  3271   000EE4  6E05               	movwf	max7219_cmd@data^0,c
  3272   000EE6  0E0F               	movlw	15
  3273   000EE8  ECF1  F006         	call	_max7219_cmd
  3274   000EEC  0012               	return		;funcret
  3275   000EEE                     __end_of_matrixInit:
  3276                           	callstack 0
  3277                           
  3278 ;; *************** function _max7219_cmd *****************
  3279 ;; Defined at:
  3280 ;;		line 76 in file "MAX7219.c"
  3281 ;; Parameters:    Size  Location     Type
  3282 ;;  Addr            1    wreg     unsigned char 
  3283 ;;  data            1    4[COMRAM] unsigned char 
  3284 ;; Auto vars:     Size  Location     Type
  3285 ;;  Addr            1    7[COMRAM] unsigned char 
  3286 ;;  i               2   10[COMRAM] int 
  3287 ;;  writeData       2    8[COMRAM] unsigned short 
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3297 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3300 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3301 ;;Total ram usage:        8 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 3
  3304 ;; This function calls:
  3305 ;;		_SPI_Exchange8bit
  3306 ;; This function is called by:
  3307 ;;		_matrixInit
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text5
  3312   000DE2                     __ptext5:
  3313                           	callstack 0
  3314   000DE2                     _max7219_cmd:
  3315                           	callstack 26
  3316                           
  3317                           ;incstack = 0
  3318                           ;max7219_cmd@Addr stored from wreg
  3319   000DE2  6E08               	movwf	max7219_cmd@Addr^0,c
  3320   000DE4                     
  3321                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  3322   000DE4  5005               	movf	max7219_cmd@data^0,w,c
  3323   000DE6  C008  F006         	movff	max7219_cmd@Addr,??_max7219_cmd
  3324   000DEA  6A07               	clrf	(??_max7219_cmd+1)^0,c
  3325   000DEC  C006  F007         	movff	??_max7219_cmd,??_max7219_cmd+1
  3326   000DF0  6A06               	clrf	??_max7219_cmd^0,c
  3327   000DF2  1006               	iorwf	??_max7219_cmd^0,w,c
  3328   000DF4  6E09               	movwf	max7219_cmd@writeData^0,c
  3329   000DF6  5007               	movf	(??_max7219_cmd+1)^0,w,c
  3330   000DF8  6E0A               	movwf	(max7219_cmd@writeData+1)^0,c
  3331   000DFA  948B               	bcf	139,2,c	;volatile
  3332   000DFC                     
  3333                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  3334   000DFC  0E00               	movlw	0
  3335   000DFE  6E0C               	movwf	(max7219_cmd@i+1)^0,c
  3336   000E00  0E00               	movlw	0
  3337   000E02  6E0B               	movwf	max7219_cmd@i^0,c
  3338   000E04                     l2689:
  3339                           
  3340                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  3341   000E04  500A               	movf	(max7219_cmd@writeData+1)^0,w,c
  3342   000E06  ECD5  F007         	call	_SPI_Exchange8bit
  3343                           
  3344                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  3345   000E0A  5009               	movf	max7219_cmd@writeData^0,w,c
  3346   000E0C  ECD5  F007         	call	_SPI_Exchange8bit
  3347   000E10                     
  3348                           ;MAX7219.c: 90:  }
  3349   000E10  4A0B               	infsnz	max7219_cmd@i^0,f,c
  3350   000E12  2A0C               	incf	(max7219_cmd@i+1)^0,f,c
  3351   000E14  BE0C               	btfsc	(max7219_cmd@i+1)^0,7,c
  3352   000E16  EF16  F007         	goto	u1621
  3353   000E1A  500C               	movf	(max7219_cmd@i+1)^0,w,c
  3354   000E1C  E109               	bnz	u1620
  3355   000E1E  0E04               	movlw	4
  3356   000E20  5C0B               	subwf	max7219_cmd@i^0,w,c
  3357   000E22  A0D8               	btfss	status,0,c
  3358   000E24  EF16  F007         	goto	u1621
  3359   000E28  EF18  F007         	goto	u1620
  3360   000E2C                     u1621:
  3361   000E2C  EF02  F007         	goto	l2689
  3362   000E30                     u1620:
  3363   000E30  848B               	bsf	139,2,c	;volatile
  3364   000E32  0012               	return		;funcret
  3365   000E34                     __end_of_max7219_cmd:
  3366                           	callstack 0
  3367                           
  3368 ;; *************** function _loadTimeFromFlash *****************
  3369 ;; Defined at:
  3370 ;;		line 330 in file "main.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;		None
  3373 ;; Auto vars:     Size  Location     Type
  3374 ;;  flashAddress    4    0        unsigned long 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;Total ram usage:        0 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 3
  3391 ;; This function calls:
  3392 ;;		_FLASH_ReadByte
  3393 ;; This function is called by:
  3394 ;;		_main
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text6
  3399   000D36                     __ptext6:
  3400                           	callstack 0
  3401   000D36                     _loadTimeFromFlash:
  3402                           	callstack 27
  3403   000D36                     
  3404                           ;main.c: 333:     hours = FLASH_ReadByte(flashAddress);
  3405   000D36  0E80               	movlw	128
  3406   000D38  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  3407   000D3A  0E1F               	movlw	31
  3408   000D3C  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3409   000D3E  0E00               	movlw	0
  3410   000D40  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3411   000D42  0E00               	movlw	0
  3412   000D44  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3413   000D46  ECEC  F007         	call	_FLASH_ReadByte	;wreg free
  3414   000D4A  0100               	movlb	0	; () banked
  3415   000D4C  6FCE               	movwf	_hours& (0+255),b
  3416   000D4E                     
  3417                           ; BSR set to: 0
  3418                           ;main.c: 334:     minutes = FLASH_ReadByte(flashAddress + 1);
  3419   000D4E  0E81               	movlw	129
  3420   000D50  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  3421   000D52  0E1F               	movlw	31
  3422   000D54  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3423   000D56  0E00               	movlw	0
  3424   000D58  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3425   000D5A  0E00               	movlw	0
  3426   000D5C  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3427   000D5E  ECEC  F007         	call	_FLASH_ReadByte	;wreg free
  3428   000D62  0100               	movlb	0	; () banked
  3429   000D64  6FCD               	movwf	_minutes& (0+255),b
  3430                           
  3431                           ;main.c: 337:     if (hours >= 24) hours = 0;
  3432   000D66  0E17               	movlw	23
  3433   000D68  65CE               	cpfsgt	_hours& (0+255),b
  3434   000D6A  EFB9  F006         	goto	u2391
  3435   000D6E  EFBB  F006         	goto	u2390
  3436   000D72                     u2391:
  3437   000D72  EFBD  F006         	goto	l3231
  3438   000D76                     u2390:
  3439   000D76                     
  3440                           ; BSR set to: 0
  3441   000D76  0E00               	movlw	0
  3442   000D78  6FCE               	movwf	_hours& (0+255),b
  3443   000D7A                     l3231:
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;main.c: 338:     if (minutes >= 60) minutes = 0;
  3447   000D7A  0E3B               	movlw	59
  3448   000D7C  65CD               	cpfsgt	_minutes& (0+255),b
  3449   000D7E  EFC3  F006         	goto	u2401
  3450   000D82  EFC5  F006         	goto	u2400
  3451   000D86                     u2401:
  3452   000D86  EFC7  F006         	goto	l514
  3453   000D8A                     u2400:
  3454   000D8A                     
  3455                           ; BSR set to: 0
  3456   000D8A  0E00               	movlw	0
  3457   000D8C  6FCD               	movwf	_minutes& (0+255),b
  3458   000D8E                     l514:
  3459                           
  3460                           ; BSR set to: 0
  3461   000D8E  0012               	return		;funcret
  3462   000D90                     __end_of_loadTimeFromFlash:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function _checkButtons *****************
  3466 ;; Defined at:
  3467 ;;		line 208 in file "main.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;		None
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;		None
  3472 ;; Return value:  Size  Location     Type
  3473 ;;                  1    wreg      void 
  3474 ;; Registers used:
  3475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3476 ;; Tracked objects:
  3477 ;;		On entry : 0/0
  3478 ;;		On exit  : 0/0
  3479 ;;		Unchanged: 0/0
  3480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3481 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3482 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3483 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3484 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3485 ;;Total ram usage:        2 bytes
  3486 ;; Hardware stack levels used: 1
  3487 ;; Hardware stack levels required when called: 7
  3488 ;; This function calls:
  3489 ;;		___awmod
  3490 ;;		_clearAlarm
  3491 ;;		_displayAlarmTime
  3492 ;;		_displayTime
  3493 ;;		_saveTimeToFlash
  3494 ;; This function is called by:
  3495 ;;		_main
  3496 ;; This function uses a non-reentrant model
  3497 ;;
  3498                           
  3499                           	psect	text7
  3500   000068                     __ptext7:
  3501                           	callstack 0
  3502   000068                     _checkButtons:
  3503                           	callstack 23
  3504   000068                     
  3505                           ;main.c: 210:     static uint8_t button3PressCount = 0;;main.c: 211:     static uint16_t
      +                           button3HoldTime = 0;;main.c: 212:     static _Bool alarmSettingMode = 0;;main.c: 215:  
      +                             if (!PORTBbits.RB0)
  3506   000068  B081               	btfsc	129,0,c	;volatile
  3507   00006A  EF39  F000         	goto	u2771
  3508   00006E  EF3B  F000         	goto	u2770
  3509   000072                     u2771:
  3510   000072  EF7C  F000         	goto	l3499
  3511   000076                     u2770:
  3512   000076                     
  3513                           ;main.c: 216:     {;main.c: 217:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3514   000076  0E02               	movlw	2
  3515   000078  0100               	movlb	0	; () banked
  3516   00007A  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3517   00007C  0E04               	movlw	4
  3518   00007E  6FDF               	movwf	??_checkButtons& (0+255),b
  3519   000080  0EBA               	movlw	186
  3520   000082                     u3067:
  3521   000082  2EE8               	decfsz	wreg,f,c
  3522   000084  D7FE               	bra	u3067
  3523   000086  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3524   000088  D7FC               	bra	u3067
  3525   00008A  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3526   00008C  D7FA               	bra	u3067
  3527   00008E  0000               	nop	
  3528   000090                     
  3529                           ;main.c: 218:         if (!PORTBbits.RB0)
  3530   000090  B081               	btfsc	129,0,c	;volatile
  3531   000092  EF4D  F000         	goto	u2781
  3532   000096  EF4F  F000         	goto	u2780
  3533   00009A                     u2781:
  3534   00009A  EF7C  F000         	goto	l3499
  3535   00009E                     u2780:
  3536   00009E                     
  3537                           ;main.c: 219:         {;main.c: 220:             if (alarmSettingMode)
  3538   00009E  0100               	movlb	0	; () banked
  3539   0000A0  51C2               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3540   0000A2  B4D8               	btfsc	status,2,c
  3541   0000A4  EF56  F000         	goto	u2791
  3542   0000A8  EF58  F000         	goto	u2790
  3543   0000AC                     u2791:
  3544   0000AC  EF6B  F000         	goto	l3495
  3545   0000B0                     u2790:
  3546   0000B0                     
  3547                           ; BSR set to: 0
  3548                           ;main.c: 221:             {;main.c: 222:                 alarmHours = (alarmHours + 1) %
      +                           24;
  3549   0000B0  0E01               	movlw	1
  3550   0000B2  25CB               	addwf	_alarmHours& (0+255),w,b
  3551   0000B4  6E04               	movwf	___awmod@dividend^0,c
  3552   0000B6  6A05               	clrf	(___awmod@dividend+1)^0,c
  3553   0000B8  0E00               	movlw	0
  3554   0000BA  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3555   0000BC  0E00               	movlw	0
  3556   0000BE  6E07               	movwf	(___awmod@divisor+1)^0,c
  3557   0000C0  0E18               	movlw	24
  3558   0000C2  6E06               	movwf	___awmod@divisor^0,c
  3559   0000C4  ECB7  F005         	call	___awmod	;wreg free
  3560   0000C8  5004               	movf	?___awmod^0,w,c
  3561   0000CA  0100               	movlb	0	; () banked
  3562   0000CC  6FCB               	movwf	_alarmHours& (0+255),b
  3563   0000CE                     
  3564                           ; BSR set to: 0
  3565                           ;main.c: 223:                 displayAlarmTime();
  3566   0000CE  EC5D  F005         	call	_displayAlarmTime	;wreg free
  3567                           
  3568                           ;main.c: 224:             }
  3569   0000D2  EF7C  F000         	goto	l3499
  3570   0000D6                     l3495:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;main.c: 226:             {;main.c: 227:                 hours = (hours + 1) % 24;
  3574   0000D6  0E01               	movlw	1
  3575   0000D8  25CE               	addwf	_hours& (0+255),w,b
  3576   0000DA  6E04               	movwf	___awmod@dividend^0,c
  3577   0000DC  6A05               	clrf	(___awmod@dividend+1)^0,c
  3578   0000DE  0E00               	movlw	0
  3579   0000E0  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3580   0000E2  0E00               	movlw	0
  3581   0000E4  6E07               	movwf	(___awmod@divisor+1)^0,c
  3582   0000E6  0E18               	movlw	24
  3583   0000E8  6E06               	movwf	___awmod@divisor^0,c
  3584   0000EA  ECB7  F005         	call	___awmod	;wreg free
  3585   0000EE  5004               	movf	?___awmod^0,w,c
  3586   0000F0  0100               	movlb	0	; () banked
  3587   0000F2  6FCE               	movwf	_hours& (0+255),b
  3588   0000F4                     
  3589                           ; BSR set to: 0
  3590                           ;main.c: 228:                 displayTime();
  3591   0000F4  EC03  F005         	call	_displayTime	;wreg free
  3592   0000F8                     l3499:
  3593                           
  3594                           ;main.c: 234:     if (!PORTBbits.RB1)
  3595   0000F8  B281               	btfsc	129,1,c	;volatile
  3596   0000FA  EF81  F000         	goto	u2801
  3597   0000FE  EF83  F000         	goto	u2800
  3598   000102                     u2801:
  3599   000102  EFC4  F000         	goto	l3515
  3600   000106                     u2800:
  3601   000106                     
  3602                           ;main.c: 235:     {;main.c: 236:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3603   000106  0E02               	movlw	2
  3604   000108  0100               	movlb	0	; () banked
  3605   00010A  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3606   00010C  0E04               	movlw	4
  3607   00010E  6FDF               	movwf	??_checkButtons& (0+255),b
  3608   000110  0EBA               	movlw	186
  3609   000112                     u3077:
  3610   000112  2EE8               	decfsz	wreg,f,c
  3611   000114  D7FE               	bra	u3077
  3612   000116  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3613   000118  D7FC               	bra	u3077
  3614   00011A  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3615   00011C  D7FA               	bra	u3077
  3616   00011E  0000               	nop	
  3617   000120                     
  3618                           ;main.c: 237:         if (!PORTBbits.RB1)
  3619   000120  B281               	btfsc	129,1,c	;volatile
  3620   000122  EF95  F000         	goto	u2811
  3621   000126  EF97  F000         	goto	u2810
  3622   00012A                     u2811:
  3623   00012A  EFC4  F000         	goto	l3515
  3624   00012E                     u2810:
  3625   00012E                     
  3626                           ;main.c: 238:         {;main.c: 239:             if (alarmSettingMode)
  3627   00012E  0100               	movlb	0	; () banked
  3628   000130  51C2               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3629   000132  B4D8               	btfsc	status,2,c
  3630   000134  EF9E  F000         	goto	u2821
  3631   000138  EFA0  F000         	goto	u2820
  3632   00013C                     u2821:
  3633   00013C  EFB3  F000         	goto	l3511
  3634   000140                     u2820:
  3635   000140                     
  3636                           ; BSR set to: 0
  3637                           ;main.c: 240:             {;main.c: 241:                 alarmMinutes = (alarmMinutes + 
      +                          1) % 60;
  3638   000140  0E01               	movlw	1
  3639   000142  25CA               	addwf	_alarmMinutes& (0+255),w,b
  3640   000144  6E04               	movwf	___awmod@dividend^0,c
  3641   000146  6A05               	clrf	(___awmod@dividend+1)^0,c
  3642   000148  0E00               	movlw	0
  3643   00014A  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3644   00014C  0E00               	movlw	0
  3645   00014E  6E07               	movwf	(___awmod@divisor+1)^0,c
  3646   000150  0E3C               	movlw	60
  3647   000152  6E06               	movwf	___awmod@divisor^0,c
  3648   000154  ECB7  F005         	call	___awmod	;wreg free
  3649   000158  5004               	movf	?___awmod^0,w,c
  3650   00015A  0100               	movlb	0	; () banked
  3651   00015C  6FCA               	movwf	_alarmMinutes& (0+255),b
  3652   00015E                     
  3653                           ; BSR set to: 0
  3654                           ;main.c: 242:                 displayAlarmTime();
  3655   00015E  EC5D  F005         	call	_displayAlarmTime	;wreg free
  3656                           
  3657                           ;main.c: 243:             }
  3658   000162  EFC4  F000         	goto	l3515
  3659   000166                     l3511:
  3660                           
  3661                           ; BSR set to: 0
  3662                           ;main.c: 245:             {;main.c: 246:                 minutes = (minutes + 1) % 60;
  3663   000166  0E01               	movlw	1
  3664   000168  25CD               	addwf	_minutes& (0+255),w,b
  3665   00016A  6E04               	movwf	___awmod@dividend^0,c
  3666   00016C  6A05               	clrf	(___awmod@dividend+1)^0,c
  3667   00016E  0E00               	movlw	0
  3668   000170  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3669   000172  0E00               	movlw	0
  3670   000174  6E07               	movwf	(___awmod@divisor+1)^0,c
  3671   000176  0E3C               	movlw	60
  3672   000178  6E06               	movwf	___awmod@divisor^0,c
  3673   00017A  ECB7  F005         	call	___awmod	;wreg free
  3674   00017E  5004               	movf	?___awmod^0,w,c
  3675   000180  0100               	movlb	0	; () banked
  3676   000182  6FCD               	movwf	_minutes& (0+255),b
  3677   000184                     
  3678                           ; BSR set to: 0
  3679                           ;main.c: 247:                 displayTime();
  3680   000184  EC03  F005         	call	_displayTime	;wreg free
  3681   000188                     l3515:
  3682                           
  3683                           ;main.c: 253:     if (!PORTBbits.RB2)
  3684   000188  B481               	btfsc	129,2,c	;volatile
  3685   00018A  EFC9  F000         	goto	u2831
  3686   00018E  EFCB  F000         	goto	u2830
  3687   000192                     u2831:
  3688   000192  EF5F  F001         	goto	l3553
  3689   000196                     u2830:
  3690   000196                     
  3691                           ;main.c: 254:     {;main.c: 255:         button3HoldTime += 100;
  3692   000196  0E64               	movlw	100
  3693   000198  0100               	movlb	0	; () banked
  3694   00019A  27BA               	addwf	checkButtons@button3HoldTime& (0+255),f,b
  3695   00019C  0E00               	movlw	0
  3696   00019E  23BB               	addwfc	(checkButtons@button3HoldTime+1)& (0+255),f,b
  3697   0001A0                     
  3698                           ; BSR set to: 0
  3699                           ;main.c: 256:         _delay((unsigned long)((100)*(8000000/4000.0)));
  3700   0001A0  0E02               	movlw	2
  3701   0001A2  0100               	movlb	0	; () banked
  3702   0001A4  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3703   0001A6  0E04               	movlw	4
  3704   0001A8  6FDF               	movwf	??_checkButtons& (0+255),b
  3705   0001AA  0EBA               	movlw	186
  3706   0001AC                     u3087:
  3707   0001AC  2EE8               	decfsz	wreg,f,c
  3708   0001AE  D7FE               	bra	u3087
  3709   0001B0  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3710   0001B2  D7FC               	bra	u3087
  3711   0001B4  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3712   0001B6  D7FA               	bra	u3087
  3713   0001B8  0000               	nop	
  3714   0001BA                     
  3715                           ;main.c: 258:         if (button3HoldTime >= 3000)
  3716   0001BA  0EB8               	movlw	184
  3717   0001BC  0100               	movlb	0	; () banked
  3718   0001BE  5DBA               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3719   0001C0  0E0B               	movlw	11
  3720   0001C2  59BB               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3721   0001C4  A0D8               	btfss	status,0,c
  3722   0001C6  EFE7  F000         	goto	u2841
  3723   0001CA  EFE9  F000         	goto	u2840
  3724   0001CE                     u2841:
  3725   0001CE  EF53  F001         	goto	l3549
  3726   0001D2                     u2840:
  3727   0001D2                     
  3728                           ; BSR set to: 0
  3729                           ;main.c: 259:         {;main.c: 260:             if (!alarmTriggered)
  3730   0001D2  51C7               	movf	_alarmTriggered& (0+255),w,b
  3731   0001D4  A4D8               	btfss	status,2,c
  3732   0001D6  EFEF  F000         	goto	u2851
  3733   0001DA  EFF1  F000         	goto	u2850
  3734   0001DE                     u2851:
  3735   0001DE  EF7E  F001         	goto	l504
  3736   0001E2                     u2850:
  3737   0001E2                     
  3738                           ; BSR set to: 0
  3739                           ;main.c: 261:             {;main.c: 262:                 alarmSettingMode = 1;
  3740   0001E2  0E01               	movlw	1
  3741   0001E4  6FC2               	movwf	checkButtons@alarmSettingMode& (0+255),b
  3742   0001E6                     l3527:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;main.c: 263:                 displayAlarmTime();
  3746   0001E6  EC5D  F005         	call	_displayAlarmTime	;wreg free
  3747                           
  3748                           ;main.c: 265:                 while (!PORTBbits.RB2)
  3749   0001EA  EF43  F001         	goto	l3543
  3750   0001EE                     l495:
  3751                           
  3752                           ;main.c: 266:                 {;main.c: 267:                     if (!PORTBbits.RB0)
  3753   0001EE  B081               	btfsc	129,0,c	;volatile
  3754   0001F0  EFFC  F000         	goto	u2861
  3755   0001F4  EFFE  F000         	goto	u2860
  3756   0001F8                     u2861:
  3757   0001F8  EF1D  F001         	goto	l3535
  3758   0001FC                     u2860:
  3759   0001FC                     
  3760                           ;main.c: 268:                     {;main.c: 269:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3761   0001FC  0E02               	movlw	2
  3762   0001FE  0100               	movlb	0	; () banked
  3763   000200  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3764   000202  0E04               	movlw	4
  3765   000204  6FDF               	movwf	??_checkButtons& (0+255),b
  3766   000206  0EBA               	movlw	186
  3767   000208                     u3097:
  3768   000208  2EE8               	decfsz	wreg,f,c
  3769   00020A  D7FE               	bra	u3097
  3770   00020C  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3771   00020E  D7FC               	bra	u3097
  3772   000210  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3773   000212  D7FA               	bra	u3097
  3774   000214  0000               	nop	
  3775   000216                     
  3776                           ;main.c: 270:                         alarmHours = (alarmHours + 1) % 24;
  3777   000216  0E01               	movlw	1
  3778   000218  0100               	movlb	0	; () banked
  3779   00021A  25CB               	addwf	_alarmHours& (0+255),w,b
  3780   00021C  6E04               	movwf	___awmod@dividend^0,c
  3781   00021E  6A05               	clrf	(___awmod@dividend+1)^0,c
  3782   000220  0E00               	movlw	0
  3783   000222  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3784   000224  0E00               	movlw	0
  3785   000226  6E07               	movwf	(___awmod@divisor+1)^0,c
  3786   000228  0E18               	movlw	24
  3787   00022A  6E06               	movwf	___awmod@divisor^0,c
  3788   00022C  ECB7  F005         	call	___awmod	;wreg free
  3789   000230  5004               	movf	?___awmod^0,w,c
  3790   000232  0100               	movlb	0	; () banked
  3791   000234  6FCB               	movwf	_alarmHours& (0+255),b
  3792   000236                     
  3793                           ; BSR set to: 0
  3794                           ;main.c: 271:                         displayAlarmTime();
  3795   000236  EC5D  F005         	call	_displayAlarmTime	;wreg free
  3796   00023A                     l3535:
  3797                           
  3798                           ;main.c: 273:                     if (!PORTBbits.RB1)
  3799   00023A  B281               	btfsc	129,1,c	;volatile
  3800   00023C  EF22  F001         	goto	u2871
  3801   000240  EF24  F001         	goto	u2870
  3802   000244                     u2871:
  3803   000244  EF43  F001         	goto	l3543
  3804   000248                     u2870:
  3805   000248                     
  3806                           ;main.c: 274:                     {;main.c: 275:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3807   000248  0E02               	movlw	2
  3808   00024A  0100               	movlb	0	; () banked
  3809   00024C  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3810   00024E  0E04               	movlw	4
  3811   000250  6FDF               	movwf	??_checkButtons& (0+255),b
  3812   000252  0EBA               	movlw	186
  3813   000254                     u3107:
  3814   000254  2EE8               	decfsz	wreg,f,c
  3815   000256  D7FE               	bra	u3107
  3816   000258  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3817   00025A  D7FC               	bra	u3107
  3818   00025C  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3819   00025E  D7FA               	bra	u3107
  3820   000260  0000               	nop	
  3821   000262                     
  3822                           ;main.c: 276:                         alarmMinutes = (alarmMinutes + 1) % 60;
  3823   000262  0E01               	movlw	1
  3824   000264  0100               	movlb	0	; () banked
  3825   000266  25CA               	addwf	_alarmMinutes& (0+255),w,b
  3826   000268  6E04               	movwf	___awmod@dividend^0,c
  3827   00026A  6A05               	clrf	(___awmod@dividend+1)^0,c
  3828   00026C  0E00               	movlw	0
  3829   00026E  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3830   000270  0E00               	movlw	0
  3831   000272  6E07               	movwf	(___awmod@divisor+1)^0,c
  3832   000274  0E3C               	movlw	60
  3833   000276  6E06               	movwf	___awmod@divisor^0,c
  3834   000278  ECB7  F005         	call	___awmod	;wreg free
  3835   00027C  5004               	movf	?___awmod^0,w,c
  3836   00027E  0100               	movlb	0	; () banked
  3837   000280  6FCA               	movwf	_alarmMinutes& (0+255),b
  3838   000282  EFF3  F000         	goto	l3527
  3839   000286                     l3543:
  3840                           
  3841                           ;main.c: 265:                 while (!PORTBbits.RB2)
  3842   000286  A481               	btfss	129,2,c	;volatile
  3843   000288  EF48  F001         	goto	u2881
  3844   00028C  EF4A  F001         	goto	u2880
  3845   000290                     u2881:
  3846   000290  EFF7  F000         	goto	l495
  3847   000294                     u2880:
  3848   000294                     
  3849                           ;main.c: 281:                 alarmSettingMode = 0;
  3850   000294  0E00               	movlw	0
  3851   000296  0100               	movlb	0	; () banked
  3852   000298  6FC2               	movwf	checkButtons@alarmSettingMode& (0+255),b
  3853                           
  3854                           ;main.c: 282:                 alarmSet = 1;
  3855   00029A  0E01               	movlw	1
  3856   00029C  6FC9               	movwf	_alarmSet& (0+255),b
  3857   00029E                     
  3858                           ; BSR set to: 0
  3859                           ;main.c: 283:                 displayTime();
  3860   00029E  EC03  F005         	call	_displayTime	;wreg free
  3861   0002A2  EF7E  F001         	goto	l504
  3862   0002A6                     l3549:
  3863                           
  3864                           ; BSR set to: 0
  3865                           ;main.c: 287:         {;main.c: 288:             if (alarmTriggered)
  3866   0002A6  51C7               	movf	_alarmTriggered& (0+255),w,b
  3867   0002A8  B4D8               	btfsc	status,2,c
  3868   0002AA  EF59  F001         	goto	u2891
  3869   0002AE  EF5B  F001         	goto	u2890
  3870   0002B2                     u2891:
  3871   0002B2  EF7E  F001         	goto	l504
  3872   0002B6                     u2890:
  3873   0002B6                     
  3874                           ; BSR set to: 0
  3875                           ;main.c: 289:             {;main.c: 290:                 clearAlarm();
  3876   0002B6  EC0C  F008         	call	_clearAlarm	;wreg free
  3877   0002BA  EF7E  F001         	goto	l504
  3878   0002BE                     l3553:
  3879                           
  3880                           ;main.c: 295:     {;main.c: 296:         if (button3HoldTime < 3000)
  3881   0002BE  0EB8               	movlw	184
  3882   0002C0  0100               	movlb	0	; () banked
  3883   0002C2  5DBA               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3884   0002C4  0E0B               	movlw	11
  3885   0002C6  59BB               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3886   0002C8  B0D8               	btfsc	status,0,c
  3887   0002CA  EF69  F001         	goto	u2901
  3888   0002CE  EF6B  F001         	goto	u2900
  3889   0002D2                     u2901:
  3890   0002D2  EF7A  F001         	goto	l3563
  3891   0002D6                     u2900:
  3892   0002D6                     
  3893                           ; BSR set to: 0
  3894                           ;main.c: 297:         {;main.c: 298:             button3PressCount++;
  3895   0002D6  2BC3               	incf	checkButtons@button3PressCount& (0+255),f,b
  3896   0002D8                     
  3897                           ; BSR set to: 0
  3898                           ;main.c: 299:             if (button3PressCount == 5)
  3899   0002D8  0E05               	movlw	5
  3900   0002DA  19C3               	xorwf	checkButtons@button3PressCount& (0+255),w,b
  3901   0002DC  A4D8               	btfss	status,2,c
  3902   0002DE  EF73  F001         	goto	u2911
  3903   0002E2  EF75  F001         	goto	u2910
  3904   0002E6                     u2911:
  3905   0002E6  EF7A  F001         	goto	l3563
  3906   0002EA                     u2910:
  3907   0002EA                     
  3908                           ; BSR set to: 0
  3909                           ;main.c: 300:             {;main.c: 301:                 saveTimeToFlash();
  3910   0002EA  EC5E  F006         	call	_saveTimeToFlash	;wreg free
  3911   0002EE                     
  3912                           ;main.c: 302:                 button3PressCount = 0;
  3913   0002EE  0E00               	movlw	0
  3914   0002F0  0100               	movlb	0	; () banked
  3915   0002F2  6FC3               	movwf	checkButtons@button3PressCount& (0+255),b
  3916   0002F4                     l3563:
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;main.c: 305:         button3HoldTime = 0;
  3920   0002F4  0E00               	movlw	0
  3921   0002F6  6FBB               	movwf	(checkButtons@button3HoldTime+1)& (0+255),b
  3922   0002F8  0E00               	movlw	0
  3923   0002FA  6FBA               	movwf	checkButtons@button3HoldTime& (0+255),b
  3924   0002FC                     l504:
  3925   0002FC  0012               	return		;funcret
  3926   0002FE                     __end_of_checkButtons:
  3927                           	callstack 0
  3928                           
  3929 ;; *************** function _saveTimeToFlash *****************
  3930 ;; Defined at:
  3931 ;;		line 311 in file "main.c"
  3932 ;; Parameters:    Size  Location     Type
  3933 ;;		None
  3934 ;; Auto vars:     Size  Location     Type
  3935 ;;  i               1   68[BANK1 ] unsigned char 
  3936 ;;  flashBuffer    64    0[BANK1 ] unsigned char [64]
  3937 ;;  flashAddress    4   64[BANK1 ] unsigned long 
  3938 ;; Return value:  Size  Location     Type
  3939 ;;                  1    wreg      void 
  3940 ;; Registers used:
  3941 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3942 ;; Tracked objects:
  3943 ;;		On entry : 0/0
  3944 ;;		On exit  : 0/0
  3945 ;;		Unchanged: 0/0
  3946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3948 ;;      Locals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3950 ;;      Totals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3951 ;;Total ram usage:       69 bytes
  3952 ;; Hardware stack levels used: 1
  3953 ;; Hardware stack levels required when called: 4
  3954 ;; This function calls:
  3955 ;;		_FLASH_ReadByte
  3956 ;;		_FLASH_WriteBlock
  3957 ;; This function is called by:
  3958 ;;		_main
  3959 ;;		_checkButtons
  3960 ;; This function uses a non-reentrant model
  3961 ;;
  3962                           
  3963                           	psect	text8
  3964   000CBC                     __ptext8:
  3965                           	callstack 0
  3966   000CBC                     _saveTimeToFlash:
  3967                           	callstack 26
  3968   000CBC                     
  3969                           ;main.c: 313:     uint32_t flashAddress = 0x1F80;
  3970   000CBC  0E80               	movlw	128
  3971   000CBE  0101               	movlb	1	; () banked
  3972   000CC0  6F40               	movwf	saveTimeToFlash@flashAddress& (0+255),b
  3973   000CC2  0E1F               	movlw	31
  3974   000CC4  6F41               	movwf	(saveTimeToFlash@flashAddress+1)& (0+255),b
  3975   000CC6  0E00               	movlw	0
  3976   000CC8  6F42               	movwf	(saveTimeToFlash@flashAddress+2)& (0+255),b
  3977   000CCA  0E00               	movlw	0
  3978   000CCC  6F43               	movwf	(saveTimeToFlash@flashAddress+3)& (0+255),b
  3979                           
  3980                           ;main.c: 314:     uint8_t flashBuffer[64];;main.c: 317:     for (uint8_t i = 0; i < 64; 
      +                          i++) {
  3981   000CCE  0E00               	movlw	0
  3982   000CD0  6F44               	movwf	saveTimeToFlash@i& (0+255),b
  3983   000CD2                     l3475:
  3984                           
  3985                           ; BSR set to: 1
  3986                           ;main.c: 318:         flashBuffer[i] = FLASH_ReadByte(flashAddress + i);
  3987   000CD2  0E00               	movlw	low saveTimeToFlash@flashBuffer
  3988   000CD4  2544               	addwf	saveTimeToFlash@i& (0+255),w,b
  3989   000CD6  6ED9               	movwf	fsr2l,c
  3990   000CD8  6ADA               	clrf	fsr2h,c
  3991   000CDA  0E01               	movlw	high saveTimeToFlash@flashBuffer
  3992   000CDC  22DA               	addwfc	fsr2h,f,c
  3993   000CDE  5144               	movf	saveTimeToFlash@i& (0+255),w,b
  3994   000CE0  2540               	addwf	saveTimeToFlash@flashAddress& (0+255),w,b
  3995   000CE2  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  3996   000CE4  0E00               	movlw	0
  3997   000CE6  2141               	addwfc	(saveTimeToFlash@flashAddress+1)& (0+255),w,b
  3998   000CE8  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3999   000CEA  0E00               	movlw	0
  4000   000CEC  2142               	addwfc	(saveTimeToFlash@flashAddress+2)& (0+255),w,b
  4001   000CEE  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  4002   000CF0  0E00               	movlw	0
  4003   000CF2  2143               	addwfc	(saveTimeToFlash@flashAddress+3)& (0+255),w,b
  4004   000CF4  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  4005   000CF6  ECEC  F007         	call	_FLASH_ReadByte	;wreg free
  4006   000CFA  6EDF               	movwf	indf2,c
  4007   000CFC                     
  4008                           ;main.c: 319:     }
  4009   000CFC  0101               	movlb	1	; () banked
  4010   000CFE  2B44               	incf	saveTimeToFlash@i& (0+255),f,b
  4011   000D00                     
  4012                           ; BSR set to: 1
  4013   000D00  0E3F               	movlw	63
  4014   000D02  6544               	cpfsgt	saveTimeToFlash@i& (0+255),b
  4015   000D04  EF86  F006         	goto	u2761
  4016   000D08  EF88  F006         	goto	u2760
  4017   000D0C                     u2761:
  4018   000D0C  EF69  F006         	goto	l3475
  4019   000D10                     u2760:
  4020   000D10                     
  4021                           ; BSR set to: 1
  4022                           ;main.c: 322:     flashBuffer[0] = hours;
  4023   000D10  C0CE  F100         	movff	_hours,saveTimeToFlash@flashBuffer
  4024                           
  4025                           ;main.c: 323:     flashBuffer[1] = minutes;
  4026   000D14  C0CD  F101         	movff	_minutes,saveTimeToFlash@flashBuffer+1
  4027   000D18                     
  4028                           ; BSR set to: 1
  4029                           ;main.c: 326:     FLASH_WriteBlock(flashAddress, flashBuffer);
  4030   000D18  C140  F009         	movff	saveTimeToFlash@flashAddress,FLASH_WriteBlock@writeAddr
  4031   000D1C  C141  F00A         	movff	saveTimeToFlash@flashAddress+1,FLASH_WriteBlock@writeAddr+1
  4032   000D20  C142  F00B         	movff	saveTimeToFlash@flashAddress+2,FLASH_WriteBlock@writeAddr+2
  4033   000D24  C143  F00C         	movff	saveTimeToFlash@flashAddress+3,FLASH_WriteBlock@writeAddr+3
  4034   000D28  0E00               	movlw	low saveTimeToFlash@flashBuffer
  4035   000D2A  6E0D               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  4036   000D2C  0E01               	movlw	high saveTimeToFlash@flashBuffer
  4037   000D2E  6E0E               	movwf	(FLASH_WriteBlock@flashWrBufPtr+1)^0,c
  4038   000D30  EC6D  F003         	call	_FLASH_WriteBlock	;wreg free
  4039   000D34  0012               	return		;funcret
  4040   000D36                     __end_of_saveTimeToFlash:
  4041                           	callstack 0
  4042                           
  4043 ;; *************** function _FLASH_WriteBlock *****************
  4044 ;; Defined at:
  4045 ;;		line 93 in file "mcc_generated_files/memory.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  writeAddr       4    8[COMRAM] unsigned long 
  4048 ;;  flashWrBufPt    2   12[COMRAM] PTR unsigned char 
  4049 ;;		 -> saveTimeToFlash@flashBuffer(64), 
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;  blockStartAd    4   14[COMRAM] unsigned long 
  4052 ;;  i               1   22[COMRAM] unsigned char 
  4053 ;;  dataCounter     1   21[COMRAM] unsigned char 
  4054 ;;  numberOfWrit    1   20[COMRAM] unsigned char 
  4055 ;;  j               1   19[COMRAM] unsigned char 
  4056 ;;  GIEBitValue     1   18[COMRAM] unsigned char 
  4057 ;; Return value:  Size  Location     Type
  4058 ;;                  1    wreg      char 
  4059 ;; Registers used:
  4060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4061 ;; Tracked objects:
  4062 ;;		On entry : 0/0
  4063 ;;		On exit  : 0/0
  4064 ;;		Unchanged: 0/0
  4065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4066 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4067 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;Total ram usage:       15 bytes
  4071 ;; Hardware stack levels used: 1
  4072 ;; Hardware stack levels required when called: 3
  4073 ;; This function calls:
  4074 ;;		_FLASH_EraseBlock
  4075 ;; This function is called by:
  4076 ;;		_saveTimeToFlash
  4077 ;;		_FLASH_WriteByte
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text9
  4082   0006DA                     __ptext9:
  4083                           	callstack 0
  4084   0006DA                     _FLASH_WriteBlock:
  4085                           	callstack 26
  4086   0006DA                     
  4087                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  4088   0006DA  0EC0               	movlw	192
  4089   0006DC  1409               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  4090   0006DE  6E0F               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  4091   0006E0  0EFF               	movlw	255
  4092   0006E2  140A               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4093   0006E4  6E10               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  4094   0006E6  0E00               	movlw	0
  4095   0006E8  140B               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4096   0006EA  6E11               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  4097   0006EC  0E00               	movlw	0
  4098   0006EE  140C               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4099   0006F0  6E12               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  4100   0006F2                     
  4101                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  4102   0006F2  0E00               	movlw	0
  4103   0006F4  BEF2               	btfsc	242,7,c	;volatile
  4104   0006F6  0E01               	movlw	1
  4105   0006F8  6E13               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  4106   0006FA  0E00               	movlw	0
  4107   0006FC  6E16               	movwf	FLASH_WriteBlock@dataCounter^0,c
  4108   0006FE                     
  4109                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  4110   0006FE  0E01               	movlw	1
  4111   000700  6E15               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  4112   000702                     
  4113                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  4114   000702  500F               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  4115   000704  1809               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  4116   000706  E10F               	bnz	u2710
  4117   000708  5010               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  4118   00070A  180A               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4119   00070C  E10C               	bnz	u2710
  4120   00070E  5011               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  4121   000710  180B               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4122   000712  E109               	bnz	u2710
  4123   000714  5012               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  4124   000716  180C               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4125   000718  B4D8               	btfsc	status,2,c
  4126   00071A  EF91  F003         	goto	u2711
  4127   00071E  EF93  F003         	goto	u2710
  4128   000722                     u2711:
  4129   000722  EF95  F003         	goto	l3431
  4130   000726                     u2710:
  4131   000726  EFE3  F003         	goto	l314
  4132   00072A                     l3431:
  4133                           
  4134                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  4135   00072A  C009  F004         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  4136   00072E  C00A  F005         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  4137   000732  C00B  F006         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  4138   000736  C00C  F007         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  4139   00073A  EC77  F007         	call	_FLASH_EraseBlock	;wreg free
  4140   00073E                     
  4141                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  4142   00073E  C00B  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  4143   000742                     
  4144                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  4145   000742  C00A  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  4146   000746                     
  4147                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  4148   000746  C009  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  4149   00074A                     
  4150                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  4151   00074A  0E00               	movlw	0
  4152   00074C  6E14               	movwf	FLASH_WriteBlock@j^0,c
  4153   00074E  EFDA  F003         	goto	l3467
  4154   000752                     l3441:
  4155                           
  4156                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  4157   000752  0E00               	movlw	0
  4158   000754  6E17               	movwf	FLASH_WriteBlock@i^0,c
  4159   000756                     l3447:
  4160                           
  4161                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  4162   000756  5016               	movf	FLASH_WriteBlock@dataCounter^0,w,c
  4163   000758  240D               	addwf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  4164   00075A  6ED9               	movwf	fsr2l,c
  4165   00075C  0E00               	movlw	0
  4166   00075E  200E               	addwfc	(FLASH_WriteBlock@flashWrBufPtr+1)^0,w,c
  4167   000760  6EDA               	movwf	fsr2h,c
  4168   000762  50DF               	movf	indf2,w,c
  4169   000764  6EF5               	movwf	245,c	;volatile
  4170   000766                     
  4171                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  4172   000766  0E3F               	movlw	63
  4173   000768  1817               	xorwf	FLASH_WriteBlock@i^0,w,c
  4174   00076A  A4D8               	btfss	status,2,c
  4175   00076C  EFBA  F003         	goto	u2721
  4176   000770  EFBC  F003         	goto	u2720
  4177   000774                     u2721:
  4178   000774  EFBF  F003         	goto	l319
  4179   000778                     u2720:
  4180   000778  000C               	tblwt		*	;# 
  4181                           
  4182                           ;mcc_generated_files/memory.c: 124:    }
  4183   00077A  EFC1  F003         	goto	l320
  4184   00077E                     l319:
  4185   00077E  000D               	tblwt		*+	;# 
  4186   000780                     
  4187                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  4188   000780  2A16               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  4189   000782                     l320:
  4190                           
  4191                           ;mcc_generated_files/memory.c: 130:   }
  4192   000782  2A17               	incf	FLASH_WriteBlock@i^0,f,c
  4193   000784  0E3F               	movlw	63
  4194   000786  6417               	cpfsgt	FLASH_WriteBlock@i^0,c
  4195   000788  EFC8  F003         	goto	u2731
  4196   00078C  EFCA  F003         	goto	u2730
  4197   000790                     u2731:
  4198   000790  EFAB  F003         	goto	l3447
  4199   000794                     u2730:
  4200   000794                     
  4201                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  4202   000794  8EA6               	bsf	166,7,c	;volsfr
  4203                           
  4204                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  4205   000796  9CA6               	bcf	166,6,c	;volsfr
  4206                           
  4207                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  4208   000798  84A6               	bsf	166,2,c	;volsfr
  4209                           
  4210                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  4211   00079A  9EF2               	bcf	242,7,c	;volatile
  4212   00079C                     
  4213                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  4214   00079C  0E55               	movlw	85
  4215   00079E  6EA7               	movwf	167,c	;volsfr
  4216                           
  4217                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  4218   0007A0  0EAA               	movlw	170
  4219   0007A2  6EA7               	movwf	167,c	;volsfr
  4220   0007A4                     
  4221                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  4222   0007A4  82A6               	bsf	166,1,c	;volsfr
  4223   0007A6                     
  4224                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  4225   0007A6  94A6               	bcf	166,2,c	;volsfr
  4226   0007A8                     
  4227                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  4228   0007A8  B013               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  4229   0007AA  D002               	bra	u2745
  4230   0007AC  9EF2               	bcf	242,7,c	;volatile
  4231   0007AE  D001               	bra	u2746
  4232   0007B0                     u2745:
  4233   0007B0  8EF2               	bsf	242,7,c	;volatile
  4234   0007B2                     u2746:
  4235   0007B2                     
  4236                           ;mcc_generated_files/memory.c: 142:  }
  4237   0007B2  2A14               	incf	FLASH_WriteBlock@j^0,f,c
  4238   0007B4                     l3467:
  4239   0007B4  5015               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  4240   0007B6  5C14               	subwf	FLASH_WriteBlock@j^0,w,c
  4241   0007B8  A0D8               	btfss	status,0,c
  4242   0007BA  EFE1  F003         	goto	u2751
  4243   0007BE  EFE3  F003         	goto	u2750
  4244   0007C2                     u2751:
  4245   0007C2  EFA9  F003         	goto	l3441
  4246   0007C6                     u2750:
  4247   0007C6                     l314:
  4248   0007C6  0012               	return		;funcret
  4249   0007C8                     __end_of_FLASH_WriteBlock:
  4250                           	callstack 0
  4251                           
  4252 ;; *************** function _FLASH_EraseBlock *****************
  4253 ;; Defined at:
  4254 ;;		line 147 in file "mcc_generated_files/memory.c"
  4255 ;; Parameters:    Size  Location     Type
  4256 ;;  baseAddr        4    3[COMRAM] unsigned long 
  4257 ;; Auto vars:     Size  Location     Type
  4258 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  4259 ;; Return value:  Size  Location     Type
  4260 ;;                  1    wreg      void 
  4261 ;; Registers used:
  4262 ;;		wreg, status,2
  4263 ;; Tracked objects:
  4264 ;;		On entry : 0/0
  4265 ;;		On exit  : 0/0
  4266 ;;		Unchanged: 0/0
  4267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4268 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4269 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;Total ram usage:        5 bytes
  4273 ;; Hardware stack levels used: 1
  4274 ;; Hardware stack levels required when called: 2
  4275 ;; This function calls:
  4276 ;;		Nothing
  4277 ;; This function is called by:
  4278 ;;		_FLASH_WriteBlock
  4279 ;; This function uses a non-reentrant model
  4280 ;;
  4281                           
  4282                           	psect	text10
  4283   000EEE                     __ptext10:
  4284                           	callstack 0
  4285   000EEE                     _FLASH_EraseBlock:
  4286                           	callstack 26
  4287   000EEE                     
  4288                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  4289   000EEE  0E00               	movlw	0
  4290   000EF0  BEF2               	btfsc	242,7,c	;volatile
  4291   000EF2  0E01               	movlw	1
  4292   000EF4  6E08               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  4293   000EF6                     
  4294                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  4295   000EF6  C006  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  4296   000EFA                     
  4297                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  4298   000EFA  C005  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  4299   000EFE                     
  4300                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  4301   000EFE  C004  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  4302   000F02                     
  4303                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  4304   000F02  8EA6               	bsf	166,7,c	;volsfr
  4305   000F04                     
  4306                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  4307   000F04  9CA6               	bcf	166,6,c	;volsfr
  4308   000F06                     
  4309                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  4310   000F06  84A6               	bsf	166,2,c	;volsfr
  4311   000F08                     
  4312                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  4313   000F08  88A6               	bsf	166,4,c	;volsfr
  4314   000F0A                     
  4315                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  4316   000F0A  9EF2               	bcf	242,7,c	;volatile
  4317   000F0C                     
  4318                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  4319   000F0C  0E55               	movlw	85
  4320   000F0E  6EA7               	movwf	167,c	;volsfr
  4321   000F10                     
  4322                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  4323   000F10  0EAA               	movlw	170
  4324   000F12  6EA7               	movwf	167,c	;volsfr
  4325   000F14                     
  4326                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  4327   000F14  82A6               	bsf	166,1,c	;volsfr
  4328   000F16                     
  4329                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  4330   000F16  B008               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  4331   000F18  D002               	bra	u2295
  4332   000F1A  9EF2               	bcf	242,7,c	;volatile
  4333   000F1C  D001               	bra	u2296
  4334   000F1E                     u2295:
  4335   000F1E  8EF2               	bsf	242,7,c	;volatile
  4336   000F20                     u2296:
  4337   000F20  0012               	return		;funcret
  4338   000F22                     __end_of_FLASH_EraseBlock:
  4339                           	callstack 0
  4340                           
  4341 ;; *************** function _FLASH_ReadByte *****************
  4342 ;; Defined at:
  4343 ;;		line 58 in file "mcc_generated_files/memory.c"
  4344 ;; Parameters:    Size  Location     Type
  4345 ;;  flashAddr       4    3[COMRAM] unsigned long 
  4346 ;; Auto vars:     Size  Location     Type
  4347 ;;		None
  4348 ;; Return value:  Size  Location     Type
  4349 ;;                  1    wreg      unsigned char 
  4350 ;; Registers used:
  4351 ;;		wreg, status,2
  4352 ;; Tracked objects:
  4353 ;;		On entry : 0/0
  4354 ;;		On exit  : 0/0
  4355 ;;		Unchanged: 0/0
  4356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4360 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4361 ;;Total ram usage:        4 bytes
  4362 ;; Hardware stack levels used: 1
  4363 ;; Hardware stack levels required when called: 2
  4364 ;; This function calls:
  4365 ;;		Nothing
  4366 ;; This function is called by:
  4367 ;;		_saveTimeToFlash
  4368 ;;		_loadTimeFromFlash
  4369 ;;		_FLASH_ReadWord
  4370 ;;		_FLASH_WriteByte
  4371 ;; This function uses a non-reentrant model
  4372 ;;
  4373                           
  4374                           	psect	text11
  4375   000FD8                     __ptext11:
  4376                           	callstack 0
  4377   000FD8                     _FLASH_ReadByte:
  4378                           	callstack 27
  4379   000FD8                     
  4380                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  4381   000FD8  C006  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  4382                           
  4383                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  4384   000FDC  C005  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  4385                           
  4386                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  4387   000FE0  C004  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  4388   000FE4  0008               	tblrd		*	;# 
  4389   000FE6                     
  4390                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  4391   000FE6  50F5               	movf	245,w,c	;volatile
  4392   000FE8  0012               	return		;funcret
  4393   000FEA                     __end_of_FLASH_ReadByte:
  4394                           	callstack 0
  4395                           
  4396 ;; *************** function _displayTime *****************
  4397 ;; Defined at:
  4398 ;;		line 109 in file "main.c"
  4399 ;; Parameters:    Size  Location     Type
  4400 ;;		None
  4401 ;; Auto vars:     Size  Location     Type
  4402 ;;  i               2   10[BANK0 ] int 
  4403 ;;  timeString      5    5[BANK0 ] unsigned char [5]
  4404 ;;  displayStrin    5    0[BANK0 ] unsigned char [5]
  4405 ;; Return value:  Size  Location     Type
  4406 ;;                  1    wreg      void 
  4407 ;; Registers used:
  4408 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4409 ;; Tracked objects:
  4410 ;;		On entry : 0/0
  4411 ;;		On exit  : 0/0
  4412 ;;		Unchanged: 0/0
  4413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4414 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4415 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4416 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4417 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4418 ;;Total ram usage:       12 bytes
  4419 ;; Hardware stack levels used: 1
  4420 ;; Hardware stack levels required when called: 6
  4421 ;; This function calls:
  4422 ;;		___awdiv
  4423 ;;		___awmod
  4424 ;;		_printString
  4425 ;; This function is called by:
  4426 ;;		_main
  4427 ;;		_checkButtons
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text12
  4432   000A06                     __ptext12:
  4433                           	callstack 0
  4434   000A06                     _displayTime:
  4435                           	callstack 24
  4436   000A06                     
  4437                           ;main.c: 111:     char timeString[5];;main.c: 114:     timeString[0] = (hours / 10) + '0
      +                          ';
  4438   000A06  C0CE  F004         	movff	_hours,___awdiv@dividend
  4439   000A0A  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4440   000A0C  0E00               	movlw	0
  4441   000A0E  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4442   000A10  0E0A               	movlw	10
  4443   000A12  6E06               	movwf	___awdiv@divisor^0,c
  4444   000A14  ECE4  F003         	call	___awdiv	;wreg free
  4445   000A18  5004               	movf	?___awdiv^0,w,c
  4446   000A1A  0F30               	addlw	48
  4447   000A1C  0100               	movlb	0	; () banked
  4448   000A1E  6FD8               	movwf	displayTime@timeString& (0+255),b
  4449                           
  4450                           ;main.c: 115:     timeString[1] = (hours % 10) + '0';
  4451   000A20  C0CE  F004         	movff	_hours,___awmod@dividend
  4452   000A24  6A05               	clrf	(___awmod@dividend+1)^0,c
  4453   000A26  0E00               	movlw	0
  4454   000A28  6E07               	movwf	(___awmod@divisor+1)^0,c
  4455   000A2A  0E0A               	movlw	10
  4456   000A2C  6E06               	movwf	___awmod@divisor^0,c
  4457   000A2E  ECB7  F005         	call	___awmod	;wreg free
  4458   000A32  5004               	movf	?___awmod^0,w,c
  4459   000A34  0F30               	addlw	48
  4460   000A36  0100               	movlb	0	; () banked
  4461   000A38  6FD9               	movwf	(displayTime@timeString+1)& (0+255),b
  4462                           
  4463                           ;main.c: 116:     timeString[2] = (minutes / 10) + '0';
  4464   000A3A  C0CD  F004         	movff	_minutes,___awdiv@dividend
  4465   000A3E  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4466   000A40  0E00               	movlw	0
  4467   000A42  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4468   000A44  0E0A               	movlw	10
  4469   000A46  6E06               	movwf	___awdiv@divisor^0,c
  4470   000A48  ECE4  F003         	call	___awdiv	;wreg free
  4471   000A4C  5004               	movf	?___awdiv^0,w,c
  4472   000A4E  0F30               	addlw	48
  4473   000A50  0100               	movlb	0	; () banked
  4474   000A52  6FDA               	movwf	(displayTime@timeString+2)& (0+255),b
  4475                           
  4476                           ;main.c: 117:     timeString[3] = (minutes % 10) + '0';
  4477   000A54  C0CD  F004         	movff	_minutes,___awmod@dividend
  4478   000A58  6A05               	clrf	(___awmod@dividend+1)^0,c
  4479   000A5A  0E00               	movlw	0
  4480   000A5C  6E07               	movwf	(___awmod@divisor+1)^0,c
  4481   000A5E  0E0A               	movlw	10
  4482   000A60  6E06               	movwf	___awmod@divisor^0,c
  4483   000A62  ECB7  F005         	call	___awmod	;wreg free
  4484   000A66  5004               	movf	?___awmod^0,w,c
  4485   000A68  0F30               	addlw	48
  4486   000A6A  0100               	movlb	0	; () banked
  4487   000A6C  6FDB               	movwf	(displayTime@timeString+3)& (0+255),b
  4488   000A6E                     
  4489                           ; BSR set to: 0
  4490                           ;main.c: 118:     timeString[4] = '\0';
  4491   000A6E  0E00               	movlw	0
  4492   000A70  6FDC               	movwf	(displayTime@timeString+4)& (0+255),b
  4493   000A72                     
  4494                           ; BSR set to: 0
  4495                           ;main.c: 121:     uint8_t displayString[5];;main.c: 122:     for (int i = 0; i < 5; i++)
      +                           {
  4496   000A72  0E00               	movlw	0
  4497   000A74  6FDE               	movwf	(displayTime@i+1)& (0+255),b
  4498   000A76  0E00               	movlw	0
  4499   000A78  6FDD               	movwf	displayTime@i& (0+255),b
  4500   000A7A                     l2615:
  4501                           
  4502                           ; BSR set to: 0
  4503                           ;main.c: 123:         displayString[i] = (uint8_t)timeString[i];
  4504   000A7A  51DD               	movf	displayTime@i& (0+255),w,b
  4505   000A7C  0FD8               	addlw	low displayTime@timeString
  4506   000A7E  6ED9               	movwf	fsr2l,c
  4507   000A80  6ADA               	clrf	fsr2h,c
  4508   000A82  51DD               	movf	displayTime@i& (0+255),w,b
  4509   000A84  0FD3               	addlw	low displayTime@displayString
  4510   000A86  6EE1               	movwf	fsr1l,c
  4511   000A88  6AE2               	clrf	fsr1h,c
  4512   000A8A  CFDF FFE7          	movff	indf2,indf1
  4513   000A8E                     
  4514                           ; BSR set to: 0
  4515                           ;main.c: 124:     }
  4516   000A8E  4BDD               	infsnz	displayTime@i& (0+255),f,b
  4517   000A90  2BDE               	incf	(displayTime@i+1)& (0+255),f,b
  4518   000A92                     
  4519                           ; BSR set to: 0
  4520   000A92  BFDE               	btfsc	(displayTime@i+1)& (0+255),7,b
  4521   000A94  EF55  F005         	goto	u1561
  4522   000A98  51DE               	movf	(displayTime@i+1)& (0+255),w,b
  4523   000A9A  E109               	bnz	u1560
  4524   000A9C  0E05               	movlw	5
  4525   000A9E  5DDD               	subwf	displayTime@i& (0+255),w,b
  4526   000AA0  A0D8               	btfss	status,0,c
  4527   000AA2  EF55  F005         	goto	u1561
  4528   000AA6  EF57  F005         	goto	u1560
  4529   000AAA                     u1561:
  4530   000AAA  EF3D  F005         	goto	l2615
  4531   000AAE                     u1560:
  4532   000AAE                     
  4533                           ; BSR set to: 0
  4534                           ;main.c: 126:     printString(displayString);
  4535   000AAE  0ED3               	movlw	low displayTime@displayString
  4536   000AB0  6E44               	movwf	printString@str^0,c
  4537   000AB2  6A45               	clrf	(printString@str+1)^0,c
  4538   000AB4  EC7F  F001         	call	_printString	;wreg free
  4539   000AB8  0012               	return		;funcret
  4540   000ABA                     __end_of_displayTime:
  4541                           	callstack 0
  4542                           
  4543 ;; *************** function _displayAlarmTime *****************
  4544 ;; Defined at:
  4545 ;;		line 129 in file "main.c"
  4546 ;; Parameters:    Size  Location     Type
  4547 ;;		None
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  i               2   10[BANK0 ] int 
  4550 ;;  alarmTimeStr    5    5[BANK0 ] unsigned char [5]
  4551 ;;  displayStrin    5    0[BANK0 ] unsigned char [5]
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4562 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4564 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4565 ;;Total ram usage:       12 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 6
  4568 ;; This function calls:
  4569 ;;		___awdiv
  4570 ;;		___awmod
  4571 ;;		_printString
  4572 ;; This function is called by:
  4573 ;;		_checkButtons
  4574 ;; This function uses a non-reentrant model
  4575 ;;
  4576                           
  4577                           	psect	text13
  4578   000ABA                     __ptext13:
  4579                           	callstack 0
  4580   000ABA                     _displayAlarmTime:
  4581                           	callstack 23
  4582   000ABA                     
  4583                           ;main.c: 131:     char alarmTimeString[5];;main.c: 134:     alarmTimeString[0] = (alarmH
      +                          ours / 10) + '0';
  4584   000ABA  C0CB  F004         	movff	_alarmHours,___awdiv@dividend
  4585   000ABE  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4586   000AC0  0E00               	movlw	0
  4587   000AC2  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4588   000AC4  0E0A               	movlw	10
  4589   000AC6  6E06               	movwf	___awdiv@divisor^0,c
  4590   000AC8  ECE4  F003         	call	___awdiv	;wreg free
  4591   000ACC  5004               	movf	?___awdiv^0,w,c
  4592   000ACE  0F30               	addlw	48
  4593   000AD0  0100               	movlb	0	; () banked
  4594   000AD2  6FD8               	movwf	displayAlarmTime@alarmTimeString& (0+255),b
  4595                           
  4596                           ;main.c: 135:     alarmTimeString[1] = (alarmHours % 10) + '0';
  4597   000AD4  C0CB  F004         	movff	_alarmHours,___awmod@dividend
  4598   000AD8  6A05               	clrf	(___awmod@dividend+1)^0,c
  4599   000ADA  0E00               	movlw	0
  4600   000ADC  6E07               	movwf	(___awmod@divisor+1)^0,c
  4601   000ADE  0E0A               	movlw	10
  4602   000AE0  6E06               	movwf	___awmod@divisor^0,c
  4603   000AE2  ECB7  F005         	call	___awmod	;wreg free
  4604   000AE6  5004               	movf	?___awmod^0,w,c
  4605   000AE8  0F30               	addlw	48
  4606   000AEA  0100               	movlb	0	; () banked
  4607   000AEC  6FD9               	movwf	(displayAlarmTime@alarmTimeString+1)& (0+255),b
  4608                           
  4609                           ;main.c: 136:     alarmTimeString[2] = (alarmMinutes / 10) + '0';
  4610   000AEE  C0CA  F004         	movff	_alarmMinutes,___awdiv@dividend
  4611   000AF2  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4612   000AF4  0E00               	movlw	0
  4613   000AF6  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4614   000AF8  0E0A               	movlw	10
  4615   000AFA  6E06               	movwf	___awdiv@divisor^0,c
  4616   000AFC  ECE4  F003         	call	___awdiv	;wreg free
  4617   000B00  5004               	movf	?___awdiv^0,w,c
  4618   000B02  0F30               	addlw	48
  4619   000B04  0100               	movlb	0	; () banked
  4620   000B06  6FDA               	movwf	(displayAlarmTime@alarmTimeString+2)& (0+255),b
  4621                           
  4622                           ;main.c: 137:     alarmTimeString[3] = (alarmMinutes % 10) + '0';
  4623   000B08  C0CA  F004         	movff	_alarmMinutes,___awmod@dividend
  4624   000B0C  6A05               	clrf	(___awmod@dividend+1)^0,c
  4625   000B0E  0E00               	movlw	0
  4626   000B10  6E07               	movwf	(___awmod@divisor+1)^0,c
  4627   000B12  0E0A               	movlw	10
  4628   000B14  6E06               	movwf	___awmod@divisor^0,c
  4629   000B16  ECB7  F005         	call	___awmod	;wreg free
  4630   000B1A  5004               	movf	?___awmod^0,w,c
  4631   000B1C  0F30               	addlw	48
  4632   000B1E  0100               	movlb	0	; () banked
  4633   000B20  6FDB               	movwf	(displayAlarmTime@alarmTimeString+3)& (0+255),b
  4634   000B22                     
  4635                           ; BSR set to: 0
  4636                           ;main.c: 138:     alarmTimeString[4] = '\0';
  4637   000B22  0E00               	movlw	0
  4638   000B24  6FDC               	movwf	(displayAlarmTime@alarmTimeString+4)& (0+255),b
  4639   000B26                     
  4640                           ; BSR set to: 0
  4641                           ;main.c: 141:     uint8_t displayString[5];;main.c: 142:     for (int i = 0; i < 5; i++)
      +                           {
  4642   000B26  0E00               	movlw	0
  4643   000B28  6FDE               	movwf	(displayAlarmTime@i+1)& (0+255),b
  4644   000B2A  0E00               	movlw	0
  4645   000B2C  6FDD               	movwf	displayAlarmTime@i& (0+255),b
  4646   000B2E                     l2647:
  4647                           
  4648                           ; BSR set to: 0
  4649                           ;main.c: 143:         displayString[i] = (uint8_t)alarmTimeString[i];
  4650   000B2E  51DD               	movf	displayAlarmTime@i& (0+255),w,b
  4651   000B30  0FD8               	addlw	low displayAlarmTime@alarmTimeString
  4652   000B32  6ED9               	movwf	fsr2l,c
  4653   000B34  6ADA               	clrf	fsr2h,c
  4654   000B36  51DD               	movf	displayAlarmTime@i& (0+255),w,b
  4655   000B38  0FD3               	addlw	low displayAlarmTime@displayString
  4656   000B3A  6EE1               	movwf	fsr1l,c
  4657   000B3C  6AE2               	clrf	fsr1h,c
  4658   000B3E  CFDF FFE7          	movff	indf2,indf1
  4659   000B42                     
  4660                           ; BSR set to: 0
  4661                           ;main.c: 144:     }
  4662   000B42  4BDD               	infsnz	displayAlarmTime@i& (0+255),f,b
  4663   000B44  2BDE               	incf	(displayAlarmTime@i+1)& (0+255),f,b
  4664   000B46                     
  4665                           ; BSR set to: 0
  4666   000B46  BFDE               	btfsc	(displayAlarmTime@i+1)& (0+255),7,b
  4667   000B48  EFAF  F005         	goto	u1581
  4668   000B4C  51DE               	movf	(displayAlarmTime@i+1)& (0+255),w,b
  4669   000B4E  E109               	bnz	u1580
  4670   000B50  0E05               	movlw	5
  4671   000B52  5DDD               	subwf	displayAlarmTime@i& (0+255),w,b
  4672   000B54  A0D8               	btfss	status,0,c
  4673   000B56  EFAF  F005         	goto	u1581
  4674   000B5A  EFB1  F005         	goto	u1580
  4675   000B5E                     u1581:
  4676   000B5E  EF97  F005         	goto	l2647
  4677   000B62                     u1580:
  4678   000B62                     
  4679                           ; BSR set to: 0
  4680                           ;main.c: 146:     printString(displayString);
  4681   000B62  0ED3               	movlw	low displayAlarmTime@displayString
  4682   000B64  6E44               	movwf	printString@str^0,c
  4683   000B66  6A45               	clrf	(printString@str+1)^0,c
  4684   000B68  EC7F  F001         	call	_printString	;wreg free
  4685   000B6C  0012               	return		;funcret
  4686   000B6E                     __end_of_displayAlarmTime:
  4687                           	callstack 0
  4688                           
  4689 ;; *************** function _printString *****************
  4690 ;; Defined at:
  4691 ;;		line 161 in file "MAX7219.c"
  4692 ;; Parameters:    Size  Location     Type
  4693 ;;  str             2   67[COMRAM] PTR unsigned char 
  4694 ;;		 -> STR_1(6), displayAlarmTime@displayString(5), displayTime@displayString(5), 
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;  j               2   86[COMRAM] int 
  4697 ;;  data            1   79[COMRAM] unsigned char 
  4698 ;;  i               2   82[COMRAM] int 
  4699 ;;  indx            2   77[COMRAM] int 
  4700 ;;  k               2   84[COMRAM] int 
  4701 ;;  strindx         2   80[COMRAM] int 
  4702 ;; Return value:  Size  Location     Type
  4703 ;;                  1    wreg      void 
  4704 ;; Registers used:
  4705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4706 ;; Tracked objects:
  4707 ;;		On entry : 0/0
  4708 ;;		On exit  : 0/0
  4709 ;;		Unchanged: 0/0
  4710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4712 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4713 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4714 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4715 ;;Total ram usage:       21 bytes
  4716 ;; Hardware stack levels used: 1
  4717 ;; Hardware stack levels required when called: 5
  4718 ;; This function calls:
  4719 ;;		_flushBuffer
  4720 ;; This function is called by:
  4721 ;;		_displayTime
  4722 ;;		_displayAlarmTime
  4723 ;;		_triggerAlarm
  4724 ;; This function uses a non-reentrant model
  4725 ;;
  4726                           
  4727                           	psect	text14
  4728   0002FE                     __ptext14:
  4729                           	callstack 0
  4730   0002FE                     _printString:
  4731                           	callstack 23
  4732   0002FE                     
  4733                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  4734   0002FE  0E00               	movlw	0
  4735   000300  6E52               	movwf	(printString@strindx+1)^0,c
  4736   000302  0E00               	movlw	0
  4737   000304  6E51               	movwf	printString@strindx^0,c
  4738                           
  4739                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  4740   000306  0E00               	movlw	0
  4741   000308  6E56               	movwf	(printString@k+1)^0,c
  4742   00030A  0E1F               	movlw	31
  4743   00030C  6E55               	movwf	printString@k^0,c
  4744                           
  4745                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  4746   00030E  EF21  F002         	goto	l2505
  4747   000312                     l2465:
  4748                           
  4749                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  4750   000312  0E00               	movlw	0
  4751   000314  6E4F               	movwf	(printString@indx+1)^0,c
  4752   000316  0E00               	movlw	0
  4753   000318  6E4E               	movwf	printString@indx^0,c
  4754                           
  4755                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  4756   00031A  0E00               	movlw	0
  4757   00031C  6E54               	movwf	(printString@i+1)^0,c
  4758   00031E  0E00               	movlw	0
  4759   000320  6E53               	movwf	printString@i^0,c
  4760   000322                     l2471:
  4761                           
  4762                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  4763   000322  0E00               	movlw	0
  4764   000324  6E50               	movwf	printString@data^0,c
  4765                           
  4766                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  4767   000326  0E00               	movlw	0
  4768   000328  6E58               	movwf	(printString@j+1)^0,c
  4769   00032A  0E07               	movlw	7
  4770   00032C  6E57               	movwf	printString@j^0,c
  4771   00032E                     l2477:
  4772                           
  4773                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  4774   00032E  5051               	movf	printString@strindx^0,w,c
  4775   000330  2444               	addwf	printString@str^0,w,c
  4776   000332  6E46               	movwf	??_printString^0,c
  4777   000334  5052               	movf	(printString@strindx+1)^0,w,c
  4778   000336  2045               	addwfc	(printString@str+1)^0,w,c
  4779   000338  6E47               	movwf	(??_printString+1)^0,c
  4780   00033A  C046  FFF6         	movff	??_printString,tblptrl
  4781   00033E  C047  FFF7         	movff	??_printString+1,tblptrh
  4782   000342  0E00               	movlw	low (__mediumconst shr (0+16))
  4783   000344  6EF8               	movwf	tblptru,c
  4784   000346  0E0F               	movlw	(high __ramtop+-1)
  4785   000348  64F7               	cpfsgt	tblptrh,c
  4786   00034A  D003               	bra	u1407
  4787   00034C  0008               	tblrd		*
  4788   00034E  50F5               	movf	tablat,w,c
  4789   000350  D005               	bra	u1400
  4790   000352                     u1407:
  4791   000352  CFF6 FFE1          	movff	tblptrl,fsr1l
  4792   000356  CFF7 FFE2          	movff	tblptrh,fsr1h
  4793   00035A  50E7               	movf	indf1,w,c
  4794   00035C                     u1400:
  4795   00035C  6E48               	movwf	(??_printString+2)^0,c
  4796   00035E  5048               	movf	(??_printString+2)^0,w,c
  4797   000360  0D08               	mullw	8
  4798   000362  0EF9               	movlw	low _MAX7219_Dot_Matrix_font
  4799   000364  24F3               	addwf	243,w,c
  4800   000366  6E49               	movwf	(??_printString+3)^0,c
  4801   000368  0EF7               	movlw	high _MAX7219_Dot_Matrix_font
  4802   00036A  20F4               	addwfc	prodh,w,c
  4803   00036C  6E4A               	movwf	(??_printString+4)^0,c
  4804   00036E  504E               	movf	printString@indx^0,w,c
  4805   000370  2649               	addwf	(??_printString+3)^0,f,c
  4806   000372  504F               	movf	(printString@indx+1)^0,w,c
  4807   000374  224A               	addwfc	(??_printString+4)^0,f,c
  4808   000376  C049  FFF6         	movff	??_printString+3,tblptrl
  4809   00037A  C04A  FFF7         	movff	??_printString+4,tblptrh
  4810   00037E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4811   00037E  6AF8               	clrf	tblptru,c
  4812   000380                     	endif
  4813   000380                     	if	0	;tblptru may be non-zero
  4814   000380                     	endif
  4815   000380  0008               	tblrd		*
  4816   000382  CFF5 F04B          	movff	tablat,??_printString+5
  4817   000386  C057  F04C         	movff	printString@j,??_printString+6
  4818   00038A  0E01               	movlw	1
  4819   00038C  6E4D               	movwf	(??_printString+7)^0,c
  4820   00038E  2A4C               	incf	(??_printString+6)^0,f,c
  4821   000390  EFCC  F001         	goto	u1414
  4822   000394                     u1415:
  4823   000394  90D8               	bcf	status,0,c
  4824   000396  364D               	rlcf	(??_printString+7)^0,f,c
  4825   000398                     u1414:
  4826   000398  2E4C               	decfsz	(??_printString+6)^0,f,c
  4827   00039A  EFCA  F001         	goto	u1415
  4828   00039E  504D               	movf	(??_printString+7)^0,w,c
  4829   0003A0  144B               	andwf	(??_printString+5)^0,w,c
  4830   0003A2  0900               	iorlw	0
  4831   0003A4  B4D8               	btfsc	status,2,c
  4832   0003A6  EFD7  F001         	goto	u1421
  4833   0003AA  EFD9  F001         	goto	u1420
  4834   0003AE                     u1421:
  4835   0003AE  EFE8  F001         	goto	l2481
  4836   0003B2                     u1420:
  4837   0003B2                     
  4838                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  4839   0003B2  5057               	movf	printString@j^0,w,c
  4840   0003B4  0807               	sublw	7
  4841   0003B6  6E46               	movwf	??_printString^0,c
  4842   0003B8  0E01               	movlw	1
  4843   0003BA  6E47               	movwf	(??_printString+1)^0,c
  4844   0003BC  2A46               	incf	??_printString^0,f,c
  4845   0003BE  EFE3  F001         	goto	u1434
  4846   0003C2                     u1435:
  4847   0003C2  90D8               	bcf	status,0,c
  4848   0003C4  3647               	rlcf	(??_printString+1)^0,f,c
  4849   0003C6                     u1434:
  4850   0003C6  2E46               	decfsz	??_printString^0,f,c
  4851   0003C8  EFE1  F001         	goto	u1435
  4852   0003CC  5047               	movf	(??_printString+1)^0,w,c
  4853   0003CE  1250               	iorwf	printString@data^0,f,c
  4854   0003D0                     l2481:
  4855                           
  4856                           ;MAX7219.c: 179:             }
  4857   0003D0  0657               	decf	printString@j^0,f,c
  4858   0003D2  A0D8               	btfss	status,0,c
  4859   0003D4  0658               	decf	(printString@j+1)^0,f,c
  4860   0003D6  BE58               	btfsc	(printString@j+1)^0,7,c
  4861   0003D8  EFF2  F001         	goto	u1440
  4862   0003DC  EFF0  F001         	goto	u1441
  4863   0003E0                     u1441:
  4864   0003E0  EF97  F001         	goto	l2477
  4865   0003E4                     u1440:
  4866   0003E4                     
  4867                           ;MAX7219.c: 180:             if (k < 0) break;
  4868   0003E4  BE56               	btfsc	(printString@k+1)^0,7,c
  4869   0003E6  EFF9  F001         	goto	u1450
  4870   0003EA  EFF7  F001         	goto	u1451
  4871   0003EE                     u1451:
  4872   0003EE  EFFB  F001         	goto	l2489
  4873   0003F2                     u1450:
  4874   0003F2  EF16  F002         	goto	l2499
  4875   0003F6                     l2489:
  4876                           
  4877                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  4878   0003F6  5055               	movf	printString@k^0,w,c
  4879   0003F8  0F80               	addlw	low _bufferCol
  4880   0003FA  6ED9               	movwf	fsr2l,c
  4881   0003FC  6ADA               	clrf	fsr2h,c
  4882   0003FE  C050  FFDF         	movff	printString@data,indf2
  4883   000402  0655               	decf	printString@k^0,f,c
  4884   000404  A0D8               	btfss	status,0,c
  4885   000406  0656               	decf	(printString@k+1)^0,f,c
  4886   000408                     
  4887                           ;MAX7219.c: 182:             indx++;
  4888   000408  4A4E               	infsnz	printString@indx^0,f,c
  4889   00040A  2A4F               	incf	(printString@indx+1)^0,f,c
  4890   00040C                     
  4891                           ;MAX7219.c: 183:         }
  4892   00040C  4A53               	infsnz	printString@i^0,f,c
  4893   00040E  2A54               	incf	(printString@i+1)^0,f,c
  4894   000410  BE54               	btfsc	(printString@i+1)^0,7,c
  4895   000412  EF14  F002         	goto	u1461
  4896   000416  5054               	movf	(printString@i+1)^0,w,c
  4897   000418  E109               	bnz	u1460
  4898   00041A  0E08               	movlw	8
  4899   00041C  5C53               	subwf	printString@i^0,w,c
  4900   00041E  A0D8               	btfss	status,0,c
  4901   000420  EF14  F002         	goto	u1461
  4902   000424  EF16  F002         	goto	u1460
  4903   000428                     u1461:
  4904   000428  EF91  F001         	goto	l2471
  4905   00042C                     u1460:
  4906   00042C                     l2499:
  4907                           
  4908                           ;MAX7219.c: 184:         strindx++;
  4909   00042C  4A51               	infsnz	printString@strindx^0,f,c
  4910   00042E  2A52               	incf	(printString@strindx+1)^0,f,c
  4911   000430                     
  4912                           ;MAX7219.c: 185:         if (k < 0) break;
  4913   000430  BE56               	btfsc	(printString@k+1)^0,7,c
  4914   000432  EF1F  F002         	goto	u1470
  4915   000436  EF1D  F002         	goto	u1471
  4916   00043A                     u1471:
  4917   00043A  EF21  F002         	goto	l2505
  4918   00043E                     u1470:
  4919   00043E  EF40  F002         	goto	l2507
  4920   000442                     l2505:
  4921                           
  4922                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  4923   000442  5051               	movf	printString@strindx^0,w,c
  4924   000444  2444               	addwf	printString@str^0,w,c
  4925   000446  6E46               	movwf	??_printString^0,c
  4926   000448  5052               	movf	(printString@strindx+1)^0,w,c
  4927   00044A  2045               	addwfc	(printString@str+1)^0,w,c
  4928   00044C  6E47               	movwf	(??_printString+1)^0,c
  4929   00044E  C046  FFF6         	movff	??_printString,tblptrl
  4930   000452  C047  FFF7         	movff	??_printString+1,tblptrh
  4931   000456  0E00               	movlw	low (__mediumconst shr (0+16))
  4932   000458  6EF8               	movwf	tblptru,c
  4933   00045A  0E0F               	movlw	(high __ramtop+-1)
  4934   00045C  64F7               	cpfsgt	tblptrh,c
  4935   00045E  D003               	bra	u1487
  4936   000460  0008               	tblrd		*
  4937   000462  50F5               	movf	tablat,w,c
  4938   000464  D005               	bra	u1480
  4939   000466                     u1487:
  4940   000466  CFF6 FFE1          	movff	tblptrl,fsr1l
  4941   00046A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4942   00046E  50E7               	movf	indf1,w,c
  4943   000470                     u1480:
  4944   000470  0900               	iorlw	0
  4945   000472  A4D8               	btfss	status,2,c
  4946   000474  EF3E  F002         	goto	u1491
  4947   000478  EF40  F002         	goto	u1490
  4948   00047C                     u1491:
  4949   00047C  EF89  F001         	goto	l2465
  4950   000480                     u1490:
  4951   000480                     l2507:
  4952                           
  4953                           ;MAX7219.c: 188:     flushBuffer();
  4954   000480  EC43  F002         	call	_flushBuffer	;wreg free
  4955   000484  0012               	return		;funcret
  4956   000486                     __end_of_printString:
  4957                           	callstack 0
  4958                           
  4959 ;; *************** function _flushBuffer *****************
  4960 ;; Defined at:
  4961 ;;		line 52 in file "MAX7219.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;  j               2   61[COMRAM] int 
  4966 ;;  dev             2   59[COMRAM] int 
  4967 ;;  row             2   63[COMRAM] int 
  4968 ;;  i               2   65[COMRAM] int 
  4969 ;;  bufferRow      32   27[COMRAM] unsigned char [32]
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4980 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;Total ram usage:       43 bytes
  4984 ;; Hardware stack levels used: 1
  4985 ;; Hardware stack levels required when called: 4
  4986 ;; This function calls:
  4987 ;;		___awdiv
  4988 ;;		_max_write
  4989 ;; This function is called by:
  4990 ;;		_clearDisplay
  4991 ;;		_printString
  4992 ;;		_shiftLeft
  4993 ;;		_shiftchar
  4994 ;; This function uses a non-reentrant model
  4995 ;;
  4996                           
  4997                           	psect	text15
  4998   000486                     __ptext15:
  4999                           	callstack 0
  5000   000486                     _flushBuffer:
  5001                           	callstack 23
  5002   000486                     
  5003                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  5004   000486  EE20  F01C         	lfsr	2,flushBuffer@bufferRow
  5005   00048A  0E1F               	movlw	31
  5006   00048C                     u1271:
  5007   00048C  6ADE               	clrf	postinc2,c
  5008   00048E  06E8               	decf	wreg,f,c
  5009   000490  E2FD               	bc	u1271
  5010   000492                     
  5011                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  5012   000492  0E00               	movlw	0
  5013   000494  6E43               	movwf	(flushBuffer@i+1)^0,c
  5014   000496  0E00               	movlw	0
  5015   000498  6E42               	movwf	flushBuffer@i^0,c
  5016   00049A                     l2355:
  5017                           
  5018                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  5019   00049A  C042  F004         	movff	flushBuffer@i,___awdiv@dividend
  5020   00049E  C043  F005         	movff	flushBuffer@i+1,___awdiv@dividend+1
  5021   0004A2  0E00               	movlw	0
  5022   0004A4  6E07               	movwf	(___awdiv@divisor+1)^0,c
  5023   0004A6  0E08               	movlw	8
  5024   0004A8  6E06               	movwf	___awdiv@divisor^0,c
  5025   0004AA  ECE4  F003         	call	___awdiv	;wreg free
  5026   0004AE  C004  F03C         	movff	?___awdiv,flushBuffer@dev
  5027   0004B2  C005  F03D         	movff	?___awdiv+1,flushBuffer@dev+1
  5028   0004B6                     
  5029                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  5030   0004B6  0E00               	movlw	0
  5031   0004B8  6E3F               	movwf	(flushBuffer@j+1)^0,c
  5032   0004BA  0E00               	movlw	0
  5033   0004BC  6E3E               	movwf	flushBuffer@j^0,c
  5034   0004BE                     l2363:
  5035                           
  5036                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  5037   0004BE  5042               	movf	flushBuffer@i^0,w,c
  5038   0004C0  0F80               	addlw	low _bufferCol
  5039   0004C2  6ED9               	movwf	fsr2l,c
  5040   0004C4  6ADA               	clrf	fsr2h,c
  5041   0004C6  50DF               	movf	indf2,w,c
  5042   0004C8  6E19               	movwf	??_flushBuffer^0,c
  5043   0004CA  C03E  F01A         	movff	flushBuffer@j,??_flushBuffer+1
  5044   0004CE  0E01               	movlw	1
  5045   0004D0  6E1B               	movwf	(??_flushBuffer+2)^0,c
  5046   0004D2  2A1A               	incf	(??_flushBuffer+1)^0,f,c
  5047   0004D4  EF6E  F002         	goto	u1284
  5048   0004D8                     u1285:
  5049   0004D8  90D8               	bcf	status,0,c
  5050   0004DA  361B               	rlcf	(??_flushBuffer+2)^0,f,c
  5051   0004DC                     u1284:
  5052   0004DC  2E1A               	decfsz	(??_flushBuffer+1)^0,f,c
  5053   0004DE  EF6C  F002         	goto	u1285
  5054   0004E2  501B               	movf	(??_flushBuffer+2)^0,w,c
  5055   0004E4  1419               	andwf	??_flushBuffer^0,w,c
  5056   0004E6  0900               	iorlw	0
  5057   0004E8  B4D8               	btfsc	status,2,c
  5058   0004EA  EF79  F002         	goto	u1291
  5059   0004EE  EF7B  F002         	goto	u1290
  5060   0004F2                     u1291:
  5061   0004F2  EF95  F002         	goto	l2367
  5062   0004F6                     u1290:
  5063   0004F6                     
  5064                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  5065   0004F6  503C               	movf	flushBuffer@dev^0,w,c
  5066   0004F8  0D08               	mullw	8
  5067   0004FA  5042               	movf	flushBuffer@i^0,w,c
  5068   0004FC  5CF3               	subwf	243,w,c
  5069   0004FE  6E19               	movwf	??_flushBuffer^0,c
  5070   000500  0E07               	movlw	7
  5071   000502  2619               	addwf	??_flushBuffer^0,f,c
  5072   000504  0E01               	movlw	1
  5073   000506  6E1A               	movwf	(??_flushBuffer+1)^0,c
  5074   000508  2A19               	incf	??_flushBuffer^0,f,c
  5075   00050A  EF89  F002         	goto	u1304
  5076   00050E                     u1305:
  5077   00050E  90D8               	bcf	status,0,c
  5078   000510  361A               	rlcf	(??_flushBuffer+1)^0,f,c
  5079   000512                     u1304:
  5080   000512  2E19               	decfsz	??_flushBuffer^0,f,c
  5081   000514  EF87  F002         	goto	u1305
  5082   000518  503C               	movf	flushBuffer@dev^0,w,c
  5083   00051A  0D08               	mullw	8
  5084   00051C  50F3               	movf	243,w,c
  5085   00051E  0F1C               	addlw	low flushBuffer@bufferRow
  5086   000520  243E               	addwf	flushBuffer@j^0,w,c
  5087   000522  6ED9               	movwf	fsr2l,c
  5088   000524  6ADA               	clrf	fsr2h,c
  5089   000526  501A               	movf	(??_flushBuffer+1)^0,w,c
  5090   000528  12DF               	iorwf	indf2,f,c
  5091   00052A                     l2367:
  5092                           
  5093                           ;MAX7219.c: 66:   }
  5094   00052A  4A3E               	infsnz	flushBuffer@j^0,f,c
  5095   00052C  2A3F               	incf	(flushBuffer@j+1)^0,f,c
  5096   00052E  BE3F               	btfsc	(flushBuffer@j+1)^0,7,c
  5097   000530  EFA3  F002         	goto	u1311
  5098   000534  503F               	movf	(flushBuffer@j+1)^0,w,c
  5099   000536  E109               	bnz	u1310
  5100   000538  0E08               	movlw	8
  5101   00053A  5C3E               	subwf	flushBuffer@j^0,w,c
  5102   00053C  A0D8               	btfss	status,0,c
  5103   00053E  EFA3  F002         	goto	u1311
  5104   000542  EFA5  F002         	goto	u1310
  5105   000546                     u1311:
  5106   000546  EF5F  F002         	goto	l2363
  5107   00054A                     u1310:
  5108   00054A                     
  5109                           ;MAX7219.c: 67:  }
  5110   00054A  4A42               	infsnz	flushBuffer@i^0,f,c
  5111   00054C  2A43               	incf	(flushBuffer@i+1)^0,f,c
  5112   00054E  BE43               	btfsc	(flushBuffer@i+1)^0,7,c
  5113   000550  EFB3  F002         	goto	u1321
  5114   000554  5043               	movf	(flushBuffer@i+1)^0,w,c
  5115   000556  E109               	bnz	u1320
  5116   000558  0E20               	movlw	32
  5117   00055A  5C42               	subwf	flushBuffer@i^0,w,c
  5118   00055C  A0D8               	btfss	status,0,c
  5119   00055E  EFB3  F002         	goto	u1321
  5120   000562  EFB5  F002         	goto	u1320
  5121   000566                     u1321:
  5122   000566  EF4D  F002         	goto	l2355
  5123   00056A                     u1320:
  5124   00056A                     
  5125                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  5126   00056A  0E00               	movlw	0
  5127   00056C  6E41               	movwf	(flushBuffer@row+1)^0,c
  5128   00056E  0E01               	movlw	1
  5129   000570  6E40               	movwf	flushBuffer@row^0,c
  5130   000572                     l2381:
  5131                           
  5132                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  5133   000572  C040  F00C         	movff	flushBuffer@row,max_write@row
  5134   000576  C041  F00D         	movff	flushBuffer@row+1,max_write@row+1
  5135   00057A  C040  F019         	movff	flushBuffer@row,??_flushBuffer
  5136   00057E  0EFF               	movlw	255
  5137   000580  2619               	addwf	??_flushBuffer^0,f,c
  5138   000582  5019               	movf	??_flushBuffer^0,w,c
  5139   000584  0F1C               	addlw	low flushBuffer@bufferRow
  5140   000586  6ED9               	movwf	fsr2l,c
  5141   000588  6ADA               	clrf	fsr2h,c
  5142   00058A  50DF               	movf	indf2,w,c
  5143   00058C  6E0E               	movwf	max_write@data^0,c
  5144   00058E  EC46  F004         	call	_max_write	;wreg free
  5145   000592                     
  5146                           ;MAX7219.c: 73:  }
  5147   000592  4A40               	infsnz	flushBuffer@row^0,f,c
  5148   000594  2A41               	incf	(flushBuffer@row+1)^0,f,c
  5149   000596  BE41               	btfsc	(flushBuffer@row+1)^0,7,c
  5150   000598  EFD7  F002         	goto	u1331
  5151   00059C  5041               	movf	(flushBuffer@row+1)^0,w,c
  5152   00059E  E109               	bnz	u1330
  5153   0005A0  0E21               	movlw	33
  5154   0005A2  5C40               	subwf	flushBuffer@row^0,w,c
  5155   0005A4  A0D8               	btfss	status,0,c
  5156   0005A6  EFD7  F002         	goto	u1331
  5157   0005AA  EFD9  F002         	goto	u1330
  5158   0005AE                     u1331:
  5159   0005AE  EFB9  F002         	goto	l2381
  5160   0005B2                     u1330:
  5161   0005B2  0012               	return		;funcret
  5162   0005B4                     __end_of_flushBuffer:
  5163                           	callstack 0
  5164                           
  5165 ;; *************** function _max_write *****************
  5166 ;; Defined at:
  5167 ;;		line 10 in file "MAX7219.c"
  5168 ;; Parameters:    Size  Location     Type
  5169 ;;  row             2   11[COMRAM] int 
  5170 ;;  data            1   13[COMRAM] unsigned char 
  5171 ;; Auto vars:     Size  Location     Type
  5172 ;;  dev             2   20[COMRAM] int 
  5173 ;;  writeData       2   22[COMRAM] unsigned short 
  5174 ;;  devTarget       2   18[COMRAM] int 
  5175 ;;  offset          2   16[COMRAM] int 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;                  1    wreg      void 
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0, cstack
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5185 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5186 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5187 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5188 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5189 ;;Total ram usage:       13 bytes
  5190 ;; Hardware stack levels used: 1
  5191 ;; Hardware stack levels required when called: 3
  5192 ;; This function calls:
  5193 ;;		_SPI_Exchange8bit
  5194 ;;		___awdiv
  5195 ;; This function is called by:
  5196 ;;		_flushBuffer
  5197 ;; This function uses a non-reentrant model
  5198 ;;
  5199                           
  5200                           	psect	text16
  5201   00088C                     __ptext16:
  5202                           	callstack 0
  5203   00088C                     _max_write:
  5204                           	callstack 23
  5205   00088C                     
  5206                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  5207   00088C  0EFF               	movlw	255
  5208   00088E  240C               	addwf	max_write@row^0,w,c
  5209   000890  6E04               	movwf	___awdiv@dividend^0,c
  5210   000892  0EFF               	movlw	255
  5211   000894  200D               	addwfc	(max_write@row+1)^0,w,c
  5212   000896  6E05               	movwf	(___awdiv@dividend+1)^0,c
  5213   000898  0E00               	movlw	0
  5214   00089A  6E07               	movwf	(___awdiv@divisor+1)^0,c
  5215   00089C  0E08               	movlw	8
  5216   00089E  6E06               	movwf	___awdiv@divisor^0,c
  5217   0008A0  ECE4  F003         	call	___awdiv	;wreg free
  5218   0008A4  C004  F013         	movff	?___awdiv,max_write@devTarget
  5219   0008A8  C005  F014         	movff	?___awdiv+1,max_write@devTarget+1
  5220   0008AC                     
  5221                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  5222   0008AC  C013  F00F         	movff	max_write@devTarget,??_max_write
  5223   0008B0  C014  F010         	movff	max_write@devTarget+1,??_max_write+1
  5224   0008B4  90D8               	bcf	status,0,c
  5225   0008B6  360F               	rlcf	??_max_write^0,f,c
  5226   0008B8  3610               	rlcf	(??_max_write+1)^0,f,c
  5227   0008BA  90D8               	bcf	status,0,c
  5228   0008BC  360F               	rlcf	??_max_write^0,f,c
  5229   0008BE  3610               	rlcf	(??_max_write+1)^0,f,c
  5230   0008C0  90D8               	bcf	status,0,c
  5231   0008C2  360F               	rlcf	??_max_write^0,f,c
  5232   0008C4  3610               	rlcf	(??_max_write+1)^0,f,c
  5233   0008C6  C00F  F011         	movff	??_max_write,max_write@offset
  5234   0008CA  C010  F012         	movff	??_max_write+1,max_write@offset+1
  5235   0008CE  948B               	bcf	139,2,c	;volatile
  5236   0008D0                     
  5237                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  5238   0008D0  0E00               	movlw	0
  5239   0008D2  6E16               	movwf	(max_write@dev+1)^0,c
  5240   0008D4  0E00               	movlw	0
  5241   0008D6  6E15               	movwf	max_write@dev^0,c
  5242   0008D8                     l2303:
  5243                           
  5244                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  5245   0008D8  5013               	movf	max_write@devTarget^0,w,c
  5246   0008DA  1815               	xorwf	max_write@dev^0,w,c
  5247   0008DC  E107               	bnz	u1241
  5248   0008DE  5014               	movf	(max_write@devTarget+1)^0,w,c
  5249   0008E0  1816               	xorwf	(max_write@dev+1)^0,w,c
  5250   0008E2  A4D8               	btfss	status,2,c
  5251   0008E4  EF76  F004         	goto	u1241
  5252   0008E8  EF78  F004         	goto	u1240
  5253   0008EC                     u1241:
  5254   0008EC  EF8E  F004         	goto	l2311
  5255   0008F0                     u1240:
  5256   0008F0                     
  5257                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  5258   0008F0  5011               	movf	max_write@offset^0,w,c
  5259   0008F2  5C0C               	subwf	max_write@row^0,w,c
  5260   0008F4  6E0F               	movwf	??_max_write^0,c
  5261   0008F6  5012               	movf	(max_write@offset+1)^0,w,c
  5262   0008F8  580D               	subwfb	(max_write@row+1)^0,w,c
  5263   0008FA  6E10               	movwf	(??_max_write+1)^0,c
  5264   0008FC  C00F  F010         	movff	??_max_write,??_max_write+1
  5265   000900  6A0F               	clrf	??_max_write^0,c
  5266   000902  500E               	movf	max_write@data^0,w,c
  5267   000904  100F               	iorwf	??_max_write^0,w,c
  5268   000906  6E17               	movwf	max_write@writeData^0,c
  5269   000908  5010               	movf	(??_max_write+1)^0,w,c
  5270   00090A  6E18               	movwf	(max_write@writeData+1)^0,c
  5271   00090C                     
  5272                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5273   00090C  5018               	movf	(max_write@writeData+1)^0,w,c
  5274   00090E  ECD5  F007         	call	_SPI_Exchange8bit
  5275   000912                     
  5276                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  5277   000912  5017               	movf	max_write@writeData^0,w,c
  5278   000914  ECD5  F007         	call	_SPI_Exchange8bit
  5279                           
  5280                           ;MAX7219.c: 31:   }
  5281   000918  EF94  F004         	goto	l2317
  5282   00091C                     l2311:
  5283   00091C                     
  5284                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5285   00091C  0E00               	movlw	0
  5286   00091E  ECD5  F007         	call	_SPI_Exchange8bit
  5287   000922                     
  5288                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  5289   000922  0E00               	movlw	0
  5290   000924  ECD5  F007         	call	_SPI_Exchange8bit
  5291   000928                     l2317:
  5292                           
  5293                           ;MAX7219.c: 46:  }
  5294   000928  4A15               	infsnz	max_write@dev^0,f,c
  5295   00092A  2A16               	incf	(max_write@dev+1)^0,f,c
  5296   00092C  BE16               	btfsc	(max_write@dev+1)^0,7,c
  5297   00092E  EFA2  F004         	goto	u1251
  5298   000932  5016               	movf	(max_write@dev+1)^0,w,c
  5299   000934  E109               	bnz	u1250
  5300   000936  0E04               	movlw	4
  5301   000938  5C15               	subwf	max_write@dev^0,w,c
  5302   00093A  A0D8               	btfss	status,0,c
  5303   00093C  EFA2  F004         	goto	u1251
  5304   000940  EFA4  F004         	goto	u1250
  5305   000944                     u1251:
  5306   000944  EF6C  F004         	goto	l2303
  5307   000948                     u1250:
  5308   000948  848B               	bsf	139,2,c	;volatile
  5309   00094A  0012               	return		;funcret
  5310   00094C                     __end_of_max_write:
  5311                           	callstack 0
  5312                           
  5313 ;; *************** function ___awdiv *****************
  5314 ;; Defined at:
  5315 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5316 ;; Parameters:    Size  Location     Type
  5317 ;;  dividend        2    3[COMRAM] int 
  5318 ;;  divisor         2    5[COMRAM] int 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  quotient        2    9[COMRAM] int 
  5321 ;;  sign            1    8[COMRAM] unsigned char 
  5322 ;;  counter         1    7[COMRAM] unsigned char 
  5323 ;; Return value:  Size  Location     Type
  5324 ;;                  2    3[COMRAM] int 
  5325 ;; Registers used:
  5326 ;;		wreg, status,2, status,0
  5327 ;; Tracked objects:
  5328 ;;		On entry : 0/0
  5329 ;;		On exit  : 0/0
  5330 ;;		Unchanged: 0/0
  5331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5332 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5333 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5335 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5336 ;;Total ram usage:        8 bytes
  5337 ;; Hardware stack levels used: 1
  5338 ;; Hardware stack levels required when called: 2
  5339 ;; This function calls:
  5340 ;;		Nothing
  5341 ;; This function is called by:
  5342 ;;		_displayTime
  5343 ;;		_displayAlarmTime
  5344 ;;		_max_write
  5345 ;;		_flushBuffer
  5346 ;; This function uses a non-reentrant model
  5347 ;;
  5348                           
  5349                           	psect	text17
  5350   0007C8                     __ptext17:
  5351                           	callstack 0
  5352   0007C8                     ___awdiv:
  5353                           	callstack 23
  5354   0007C8  0E00               	movlw	0
  5355   0007CA  6E09               	movwf	___awdiv@sign^0,c
  5356   0007CC  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  5357   0007CE  EFED  F003         	goto	u1180
  5358   0007D2  EFEB  F003         	goto	u1181
  5359   0007D6                     u1181:
  5360   0007D6  EFF3  F003         	goto	l2253
  5361   0007DA                     u1180:
  5362   0007DA  6C06               	negf	___awdiv@divisor^0,c
  5363   0007DC  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  5364   0007DE  B0D8               	btfsc	status,0,c
  5365   0007E0  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  5366   0007E2  0E01               	movlw	1
  5367   0007E4  6E09               	movwf	___awdiv@sign^0,c
  5368   0007E6                     l2253:
  5369   0007E6  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  5370   0007E8  EFFA  F003         	goto	u1190
  5371   0007EC  EFF8  F003         	goto	u1191
  5372   0007F0                     u1191:
  5373   0007F0  EF00  F004         	goto	l2259
  5374   0007F4                     u1190:
  5375   0007F4  6C04               	negf	___awdiv@dividend^0,c
  5376   0007F6  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  5377   0007F8  B0D8               	btfsc	status,0,c
  5378   0007FA  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  5379   0007FC  0E01               	movlw	1
  5380   0007FE  1A09               	xorwf	___awdiv@sign^0,f,c
  5381   000800                     l2259:
  5382   000800  0E00               	movlw	0
  5383   000802  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  5384   000804  0E00               	movlw	0
  5385   000806  6E0A               	movwf	___awdiv@quotient^0,c
  5386   000808  5006               	movf	___awdiv@divisor^0,w,c
  5387   00080A  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  5388   00080C  B4D8               	btfsc	status,2,c
  5389   00080E  EF0B  F004         	goto	u1201
  5390   000812  EF0D  F004         	goto	u1200
  5391   000816                     u1201:
  5392   000816  EF35  F004         	goto	l2281
  5393   00081A                     u1200:
  5394   00081A  0E01               	movlw	1
  5395   00081C  6E08               	movwf	___awdiv@counter^0,c
  5396   00081E  EF15  F004         	goto	l2267
  5397   000822                     l2265:
  5398   000822  90D8               	bcf	status,0,c
  5399   000824  3606               	rlcf	___awdiv@divisor^0,f,c
  5400   000826  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  5401   000828  2A08               	incf	___awdiv@counter^0,f,c
  5402   00082A                     l2267:
  5403   00082A  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  5404   00082C  EF1A  F004         	goto	u1211
  5405   000830  EF1C  F004         	goto	u1210
  5406   000834                     u1211:
  5407   000834  EF11  F004         	goto	l2265
  5408   000838                     u1210:
  5409   000838                     l2269:
  5410   000838  90D8               	bcf	status,0,c
  5411   00083A  360A               	rlcf	___awdiv@quotient^0,f,c
  5412   00083C  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  5413   00083E  5006               	movf	___awdiv@divisor^0,w,c
  5414   000840  5C04               	subwf	___awdiv@dividend^0,w,c
  5415   000842  5007               	movf	(___awdiv@divisor+1)^0,w,c
  5416   000844  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  5417   000846  A0D8               	btfss	status,0,c
  5418   000848  EF28  F004         	goto	u1221
  5419   00084C  EF2A  F004         	goto	u1220
  5420   000850                     u1221:
  5421   000850  EF2F  F004         	goto	l2277
  5422   000854                     u1220:
  5423   000854  5006               	movf	___awdiv@divisor^0,w,c
  5424   000856  5E04               	subwf	___awdiv@dividend^0,f,c
  5425   000858  5007               	movf	(___awdiv@divisor+1)^0,w,c
  5426   00085A  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  5427   00085C  800A               	bsf	___awdiv@quotient^0,0,c
  5428   00085E                     l2277:
  5429   00085E  90D8               	bcf	status,0,c
  5430   000860  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  5431   000862  3206               	rrcf	___awdiv@divisor^0,f,c
  5432   000864  2E08               	decfsz	___awdiv@counter^0,f,c
  5433   000866  EF1C  F004         	goto	l2269
  5434   00086A                     l2281:
  5435   00086A  5009               	movf	___awdiv@sign^0,w,c
  5436   00086C  B4D8               	btfsc	status,2,c
  5437   00086E  EF3B  F004         	goto	u1231
  5438   000872  EF3D  F004         	goto	u1230
  5439   000876                     u1231:
  5440   000876  EF41  F004         	goto	l2285
  5441   00087A                     u1230:
  5442   00087A  6C0A               	negf	___awdiv@quotient^0,c
  5443   00087C  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  5444   00087E  B0D8               	btfsc	status,0,c
  5445   000880  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  5446   000882                     l2285:
  5447   000882  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  5448   000886  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  5449   00088A  0012               	return		;funcret
  5450   00088C                     __end_of___awdiv:
  5451                           	callstack 0
  5452                           
  5453 ;; *************** function _SPI_Exchange8bit *****************
  5454 ;; Defined at:
  5455 ;;		line 77 in file "mcc_generated_files/spi.c"
  5456 ;; Parameters:    Size  Location     Type
  5457 ;;  data            1    wreg     unsigned char 
  5458 ;; Auto vars:     Size  Location     Type
  5459 ;;  data            1    3[COMRAM] unsigned char 
  5460 ;; Return value:  Size  Location     Type
  5461 ;;                  1    wreg      unsigned char 
  5462 ;; Registers used:
  5463 ;;		wreg, status,2
  5464 ;; Tracked objects:
  5465 ;;		On entry : 0/0
  5466 ;;		On exit  : 0/0
  5467 ;;		Unchanged: 0/0
  5468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5469 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5470 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5471 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5472 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5473 ;;Total ram usage:        1 bytes
  5474 ;; Hardware stack levels used: 1
  5475 ;; Hardware stack levels required when called: 2
  5476 ;; This function calls:
  5477 ;;		Nothing
  5478 ;; This function is called by:
  5479 ;;		_max_write
  5480 ;;		_max7219_cmd
  5481 ;;		_SPI_Exchange8bitBuffer
  5482 ;; This function uses a non-reentrant model
  5483 ;;
  5484                           
  5485                           	psect	text18
  5486   000FAA                     __ptext18:
  5487                           	callstack 0
  5488   000FAA                     _SPI_Exchange8bit:
  5489                           	callstack 23
  5490                           
  5491                           ;incstack = 0
  5492                           ;SPI_Exchange8bit@data stored from wreg
  5493   000FAA  6E04               	movwf	SPI_Exchange8bit@data^0,c
  5494   000FAC                     
  5495                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  5496   000FAC  9EC6               	bcf	198,7,c	;volatile
  5497   000FAE                     
  5498                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  5499   000FAE  C004  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  5500   000FB2                     l18:
  5501                           
  5502                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  5503   000FB2  A0C7               	btfss	199,0,c	;volatile
  5504   000FB4  EFDE  F007         	goto	u1171
  5505   000FB8  EFE0  F007         	goto	u1170
  5506   000FBC                     u1171:
  5507   000FBC  EFD9  F007         	goto	l18
  5508   000FC0                     u1170:
  5509   000FC0                     
  5510                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  5511   000FC0  50C9               	movf	201,w,c	;volatile
  5512   000FC2  0012               	return		;funcret
  5513   000FC4                     __end_of_SPI_Exchange8bit:
  5514                           	callstack 0
  5515                           
  5516 ;; *************** function ___awmod *****************
  5517 ;; Defined at:
  5518 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5519 ;; Parameters:    Size  Location     Type
  5520 ;;  dividend        2    3[COMRAM] int 
  5521 ;;  divisor         2    5[COMRAM] int 
  5522 ;; Auto vars:     Size  Location     Type
  5523 ;;  sign            1    8[COMRAM] unsigned char 
  5524 ;;  counter         1    7[COMRAM] unsigned char 
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  2    3[COMRAM] int 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5534 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5536 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5537 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5538 ;;Total ram usage:        6 bytes
  5539 ;; Hardware stack levels used: 1
  5540 ;; Hardware stack levels required when called: 2
  5541 ;; This function calls:
  5542 ;;		Nothing
  5543 ;; This function is called by:
  5544 ;;		_displayTime
  5545 ;;		_displayAlarmTime
  5546 ;;		_checkButtons
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text19
  5551   000B6E                     __ptext19:
  5552                           	callstack 0
  5553   000B6E                     ___awmod:
  5554                           	callstack 27
  5555   000B6E  0E00               	movlw	0
  5556   000B70  6E09               	movwf	___awmod@sign^0,c
  5557   000B72  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  5558   000B74  EFC0  F005         	goto	u1500
  5559   000B78  EFBE  F005         	goto	u1501
  5560   000B7C                     u1501:
  5561   000B7C  EFC6  F005         	goto	l2517
  5562   000B80                     u1500:
  5563   000B80  6C04               	negf	___awmod@dividend^0,c
  5564   000B82  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5565   000B84  B0D8               	btfsc	status,0,c
  5566   000B86  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5567   000B88  0E01               	movlw	1
  5568   000B8A  6E09               	movwf	___awmod@sign^0,c
  5569   000B8C                     l2517:
  5570   000B8C  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  5571   000B8E  EFCD  F005         	goto	u1510
  5572   000B92  EFCB  F005         	goto	u1511
  5573   000B96                     u1511:
  5574   000B96  EFD1  F005         	goto	l2521
  5575   000B9A                     u1510:
  5576   000B9A  6C06               	negf	___awmod@divisor^0,c
  5577   000B9C  1E07               	comf	(___awmod@divisor+1)^0,f,c
  5578   000B9E  B0D8               	btfsc	status,0,c
  5579   000BA0  2A07               	incf	(___awmod@divisor+1)^0,f,c
  5580   000BA2                     l2521:
  5581   000BA2  5006               	movf	___awmod@divisor^0,w,c
  5582   000BA4  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  5583   000BA6  B4D8               	btfsc	status,2,c
  5584   000BA8  EFD8  F005         	goto	u1521
  5585   000BAC  EFDA  F005         	goto	u1520
  5586   000BB0                     u1521:
  5587   000BB0  EFFE  F005         	goto	l2537
  5588   000BB4                     u1520:
  5589   000BB4  0E01               	movlw	1
  5590   000BB6  6E08               	movwf	___awmod@counter^0,c
  5591   000BB8  EFE2  F005         	goto	l2527
  5592   000BBC                     l2525:
  5593   000BBC  90D8               	bcf	status,0,c
  5594   000BBE  3606               	rlcf	___awmod@divisor^0,f,c
  5595   000BC0  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  5596   000BC2  2A08               	incf	___awmod@counter^0,f,c
  5597   000BC4                     l2527:
  5598   000BC4  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  5599   000BC6  EFE7  F005         	goto	u1531
  5600   000BCA  EFE9  F005         	goto	u1530
  5601   000BCE                     u1531:
  5602   000BCE  EFDE  F005         	goto	l2525
  5603   000BD2                     u1530:
  5604   000BD2                     l2529:
  5605   000BD2  5006               	movf	___awmod@divisor^0,w,c
  5606   000BD4  5C04               	subwf	___awmod@dividend^0,w,c
  5607   000BD6  5007               	movf	(___awmod@divisor+1)^0,w,c
  5608   000BD8  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  5609   000BDA  A0D8               	btfss	status,0,c
  5610   000BDC  EFF2  F005         	goto	u1541
  5611   000BE0  EFF4  F005         	goto	u1540
  5612   000BE4                     u1541:
  5613   000BE4  EFF8  F005         	goto	l2533
  5614   000BE8                     u1540:
  5615   000BE8  5006               	movf	___awmod@divisor^0,w,c
  5616   000BEA  5E04               	subwf	___awmod@dividend^0,f,c
  5617   000BEC  5007               	movf	(___awmod@divisor+1)^0,w,c
  5618   000BEE  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  5619   000BF0                     l2533:
  5620   000BF0  90D8               	bcf	status,0,c
  5621   000BF2  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  5622   000BF4  3206               	rrcf	___awmod@divisor^0,f,c
  5623   000BF6  2E08               	decfsz	___awmod@counter^0,f,c
  5624   000BF8  EFE9  F005         	goto	l2529
  5625   000BFC                     l2537:
  5626   000BFC  5009               	movf	___awmod@sign^0,w,c
  5627   000BFE  B4D8               	btfsc	status,2,c
  5628   000C00  EF04  F006         	goto	u1551
  5629   000C04  EF06  F006         	goto	u1550
  5630   000C08                     u1551:
  5631   000C08  EF0A  F006         	goto	l2541
  5632   000C0C                     u1550:
  5633   000C0C  6C04               	negf	___awmod@dividend^0,c
  5634   000C0E  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5635   000C10  B0D8               	btfsc	status,0,c
  5636   000C12  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5637   000C14                     l2541:
  5638   000C14  C004  F004         	movff	___awmod@dividend,?___awmod
  5639   000C18  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  5640   000C1C  0012               	return		;funcret
  5641   000C1E                     __end_of___awmod:
  5642                           	callstack 0
  5643                           
  5644 ;; *************** function _clearAlarm *****************
  5645 ;; Defined at:
  5646 ;;		line 197 in file "main.c"
  5647 ;; Parameters:    Size  Location     Type
  5648 ;;		None
  5649 ;; Auto vars:     Size  Location     Type
  5650 ;;		None
  5651 ;; Return value:  Size  Location     Type
  5652 ;;                  1    wreg      void 
  5653 ;; Registers used:
  5654 ;;		wreg, status,2
  5655 ;; Tracked objects:
  5656 ;;		On entry : 0/0
  5657 ;;		On exit  : 0/0
  5658 ;;		Unchanged: 0/0
  5659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5660 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5661 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5663 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5664 ;;Total ram usage:        0 bytes
  5665 ;; Hardware stack levels used: 1
  5666 ;; Hardware stack levels required when called: 2
  5667 ;; This function calls:
  5668 ;;		Nothing
  5669 ;; This function is called by:
  5670 ;;		_checkButtons
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text20
  5675   001018                     __ptext20:
  5676                           	callstack 0
  5677   001018                     _clearAlarm:
  5678                           	callstack 27
  5679   001018                     
  5680                           ;main.c: 199:     alarmTriggered = 0;
  5681   001018  0E00               	movlw	0
  5682   00101A  0100               	movlb	0	; () banked
  5683   00101C  6FC7               	movwf	_alarmTriggered& (0+255),b
  5684                           
  5685                           ;main.c: 200:     alarmSet = 0;
  5686   00101E  0E00               	movlw	0
  5687   001020  6FC9               	movwf	_alarmSet& (0+255),b
  5688   001022                     
  5689                           ; BSR set to: 0
  5690   001022  0012               	return		;funcret
  5691   001024                     __end_of_clearAlarm:
  5692                           	callstack 0
  5693                           
  5694 ;; *************** function _TMR0_StartTimer *****************
  5695 ;; Defined at:
  5696 ;;		line 86 in file "mcc_generated_files/tmr0.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;		None
  5699 ;; Auto vars:     Size  Location     Type
  5700 ;;		None
  5701 ;; Return value:  Size  Location     Type
  5702 ;;                  1    wreg      void 
  5703 ;; Registers used:
  5704 ;;		None
  5705 ;; Tracked objects:
  5706 ;;		On entry : 0/0
  5707 ;;		On exit  : 0/0
  5708 ;;		Unchanged: 0/0
  5709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5714 ;;Total ram usage:        0 bytes
  5715 ;; Hardware stack levels used: 1
  5716 ;; Hardware stack levels required when called: 2
  5717 ;; This function calls:
  5718 ;;		Nothing
  5719 ;; This function is called by:
  5720 ;;		_main
  5721 ;; This function uses a non-reentrant model
  5722 ;;
  5723                           
  5724                           	psect	text21
  5725   00104E                     __ptext21:
  5726                           	callstack 0
  5727   00104E                     _TMR0_StartTimer:
  5728                           	callstack 28
  5729   00104E                     
  5730                           ;mcc_generated_files/tmr0.c: 89:     T0CONbits.TMR0ON = 1;
  5731   00104E  8ED5               	bsf	213,7,c	;volatile
  5732   001050  0012               	return		;funcret
  5733   001052                     __end_of_TMR0_StartTimer:
  5734                           	callstack 0
  5735                           
  5736 ;; *************** function _TMR0_Reload *****************
  5737 ;; Defined at:
  5738 ;;		line 118 in file "mcc_generated_files/tmr0.c"
  5739 ;; Parameters:    Size  Location     Type
  5740 ;;		None
  5741 ;; Auto vars:     Size  Location     Type
  5742 ;;		None
  5743 ;; Return value:  Size  Location     Type
  5744 ;;                  1    wreg      void 
  5745 ;; Registers used:
  5746 ;;		wreg, status,2
  5747 ;; Tracked objects:
  5748 ;;		On entry : 0/0
  5749 ;;		On exit  : 0/0
  5750 ;;		Unchanged: 0/0
  5751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;Total ram usage:        0 bytes
  5757 ;; Hardware stack levels used: 1
  5758 ;; Hardware stack levels required when called: 2
  5759 ;; This function calls:
  5760 ;;		Nothing
  5761 ;; This function is called by:
  5762 ;;		_main
  5763 ;; This function uses a non-reentrant model
  5764 ;;
  5765                           
  5766                           	psect	text22
  5767   001024                     __ptext22:
  5768                           	callstack 0
  5769   001024                     _TMR0_Reload:
  5770                           	callstack 28
  5771   001024                     
  5772                           ;mcc_generated_files/tmr0.c: 121:     TMR0H = timer0ReloadVal >> 8;
  5773   001024  0100               	movlb	0	; () banked
  5774   001026  51C1               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  5775   001028  6ED7               	movwf	215,c	;volatile
  5776   00102A                     
  5777                           ; BSR set to: 0
  5778                           ;mcc_generated_files/tmr0.c: 122:     TMR0L = (uint8_t) timer0ReloadVal;
  5779   00102A  C0C0  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5780   00102E                     
  5781                           ; BSR set to: 0
  5782   00102E  0012               	return		;funcret
  5783   001030                     __end_of_TMR0_Reload:
  5784                           	callstack 0
  5785                           
  5786 ;; *************** function _TMR0_HasOverflowOccured *****************
  5787 ;; Defined at:
  5788 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;		None
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;		None
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      _Bool 
  5795 ;; Registers used:
  5796 ;;		wreg
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5805 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5806 ;;Total ram usage:        0 bytes
  5807 ;; Hardware stack levels used: 1
  5808 ;; Hardware stack levels required when called: 2
  5809 ;; This function calls:
  5810 ;;		Nothing
  5811 ;; This function is called by:
  5812 ;;		_main
  5813 ;; This function uses a non-reentrant model
  5814 ;;
  5815                           
  5816                           	psect	text23
  5817   000FC4                     __ptext23:
  5818                           	callstack 0
  5819   000FC4                     _TMR0_HasOverflowOccured:
  5820                           	callstack 28
  5821   000FC4                     
  5822                           ;mcc_generated_files/tmr0.c: 128:     return(INTCONbits.TMR0IF);
  5823   000FC4  B4F2               	btfsc	242,2,c	;volatile
  5824   000FC6  EFE7  F007         	goto	u1651
  5825   000FCA  EFEA  F007         	goto	u1650
  5826   000FCE                     u1651:
  5827   000FCE  0E01               	movlw	1
  5828   000FD0  EFEB  F007         	goto	u1656
  5829   000FD4                     u1650:
  5830   000FD4  0E00               	movlw	0
  5831   000FD6                     u1656:
  5832   000FD6  0012               	return		;funcret
  5833   000FD8                     __end_of_TMR0_HasOverflowOccured:
  5834                           	callstack 0
  5835                           
  5836 ;; *************** function _SYSTEM_Initialize *****************
  5837 ;; Defined at:
  5838 ;;		line 108 in file "mcc_generated_files/mcc.c"
  5839 ;; Parameters:    Size  Location     Type
  5840 ;;		None
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;		None
  5843 ;; Return value:  Size  Location     Type
  5844 ;;                  1    wreg      void 
  5845 ;; Registers used:
  5846 ;;		wreg, status,2, status,0, cstack
  5847 ;; Tracked objects:
  5848 ;;		On entry : 0/0
  5849 ;;		On exit  : 0/0
  5850 ;;		Unchanged: 0/0
  5851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5856 ;;Total ram usage:        0 bytes
  5857 ;; Hardware stack levels used: 1
  5858 ;; Hardware stack levels required when called: 4
  5859 ;; This function calls:
  5860 ;;		_EUSART_Initialize
  5861 ;;		_INTERRUPT_Initialize
  5862 ;;		_OSCILLATOR_Initialize
  5863 ;;		_PIN_MANAGER_Initialize
  5864 ;;		_PWM2_Initialize
  5865 ;;		_SPI_Initialize
  5866 ;;		_TMR0_Initialize
  5867 ;;		_TMR2_Initialize
  5868 ;; This function is called by:
  5869 ;;		_main
  5870 ;; This function uses a non-reentrant model
  5871 ;;
  5872                           
  5873                           	psect	text24
  5874   000F4A                     __ptext24:
  5875                           	callstack 0
  5876   000F4A                     _SYSTEM_Initialize:
  5877                           	callstack 26
  5878   000F4A                     
  5879                           ;mcc_generated_files/mcc.c: 110:     INTERRUPT_Initialize();
  5880   000F4A  EC29  F008         	call	_INTERRUPT_Initialize	;wreg free
  5881   000F4E                     
  5882                           ;mcc_generated_files/mcc.c: 111:     PIN_MANAGER_Initialize();
  5883   000F4E  ECB6  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  5884   000F52                     
  5885                           ;mcc_generated_files/mcc.c: 112:     OSCILLATOR_Initialize();
  5886   000F52  EC18  F008         	call	_OSCILLATOR_Initialize	;wreg free
  5887   000F56                     
  5888                           ;mcc_generated_files/mcc.c: 113:     SPI_Initialize();
  5889   000F56  ECFE  F007         	call	_SPI_Initialize	;wreg free
  5890   000F5A                     
  5891                           ;mcc_generated_files/mcc.c: 114:     PWM2_Initialize();
  5892   000F5A  EC05  F008         	call	_PWM2_Initialize	;wreg free
  5893   000F5E                     
  5894                           ;mcc_generated_files/mcc.c: 115:     TMR2_Initialize();
  5895   000F5E  ECF5  F007         	call	_TMR2_Initialize	;wreg free
  5896   000F62                     
  5897                           ;mcc_generated_files/mcc.c: 116:     TMR0_Initialize();
  5898   000F62  EC91  F007         	call	_TMR0_Initialize	;wreg free
  5899   000F66                     
  5900                           ;mcc_generated_files/mcc.c: 117:     EUSART_Initialize();
  5901   000F66  EC1A  F007         	call	_EUSART_Initialize	;wreg free
  5902   000F6A  0012               	return		;funcret
  5903   000F6C                     __end_of_SYSTEM_Initialize:
  5904                           	callstack 0
  5905                           
  5906 ;; *************** function _TMR2_Initialize *****************
  5907 ;; Defined at:
  5908 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;		None
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;		None
  5913 ;; Return value:  Size  Location     Type
  5914 ;;                  1    wreg      void 
  5915 ;; Registers used:
  5916 ;;		wreg, status,2
  5917 ;; Tracked objects:
  5918 ;;		On entry : 0/0
  5919 ;;		On exit  : 0/0
  5920 ;;		Unchanged: 0/0
  5921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5922 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5923 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5924 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5925 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5926 ;;Total ram usage:        0 bytes
  5927 ;; Hardware stack levels used: 1
  5928 ;; Hardware stack levels required when called: 2
  5929 ;; This function calls:
  5930 ;;		Nothing
  5931 ;; This function is called by:
  5932 ;;		_SYSTEM_Initialize
  5933 ;; This function uses a non-reentrant model
  5934 ;;
  5935                           
  5936                           	psect	text25
  5937   000FEA                     __ptext25:
  5938                           	callstack 0
  5939   000FEA                     _TMR2_Initialize:
  5940                           	callstack 27
  5941   000FEA                     
  5942                           ;mcc_generated_files/tmr2.c: 66:     PR2 = 0x7C;
  5943   000FEA  0E7C               	movlw	124
  5944   000FEC  6ECB               	movwf	203,c	;volatile
  5945                           
  5946                           ;mcc_generated_files/tmr2.c: 69:     TMR2 = 0x00;
  5947   000FEE  0E00               	movlw	0
  5948   000FF0  6ECC               	movwf	204,c	;volatile
  5949   000FF2                     
  5950                           ;mcc_generated_files/tmr2.c: 72:     PIR1bits.TMR2IF = 0;
  5951   000FF2  929E               	bcf	158,1,c	;volatile
  5952                           
  5953                           ;mcc_generated_files/tmr2.c: 75:     T2CON = 0x1D;
  5954   000FF4  0E1D               	movlw	29
  5955   000FF6  6ECA               	movwf	202,c	;volatile
  5956   000FF8                     
  5957                           ;mcc_generated_files/tmr2.c: 77:     T2CONbits.TMR2ON = 1;
  5958   000FF8  84CA               	bsf	202,2,c	;volatile
  5959   000FFA  0012               	return		;funcret
  5960   000FFC                     __end_of_TMR2_Initialize:
  5961                           	callstack 0
  5962                           
  5963 ;; *************** function _TMR0_Initialize *****************
  5964 ;; Defined at:
  5965 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  5966 ;; Parameters:    Size  Location     Type
  5967 ;;		None
  5968 ;; Auto vars:     Size  Location     Type
  5969 ;;		None
  5970 ;; Return value:  Size  Location     Type
  5971 ;;                  1    wreg      void 
  5972 ;; Registers used:
  5973 ;;		wreg, status,2, status,0
  5974 ;; Tracked objects:
  5975 ;;		On entry : 0/0
  5976 ;;		On exit  : 0/0
  5977 ;;		Unchanged: 0/0
  5978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5979 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5981 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5982 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5983 ;;Total ram usage:        2 bytes
  5984 ;; Hardware stack levels used: 1
  5985 ;; Hardware stack levels required when called: 2
  5986 ;; This function calls:
  5987 ;;		Nothing
  5988 ;; This function is called by:
  5989 ;;		_SYSTEM_Initialize
  5990 ;; This function uses a non-reentrant model
  5991 ;;
  5992                           
  5993                           	psect	text26
  5994   000F22                     __ptext26:
  5995                           	callstack 0
  5996   000F22                     _TMR0_Initialize:
  5997                           	callstack 27
  5998   000F22                     
  5999                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0x0B;
  6000   000F22  0E0B               	movlw	11
  6001   000F24  6ED7               	movwf	215,c	;volatile
  6002                           
  6003                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0xDB;
  6004   000F26  0EDB               	movlw	219
  6005   000F28  6ED6               	movwf	214,c	;volatile
  6006   000F2A                     
  6007                           ;mcc_generated_files/tmr0.c: 77:     timer0ReloadVal = (TMR0H << 8) | TMR0L;
  6008   000F2A  50D6               	movf	214,w,c	;volatile
  6009   000F2C  CFD7 F004          	movff	4055,??_TMR0_Initialize	;volatile
  6010   000F30  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
  6011   000F32  C004  F005         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  6012   000F36  6A04               	clrf	??_TMR0_Initialize^0,c
  6013   000F38  1004               	iorwf	??_TMR0_Initialize^0,w,c
  6014   000F3A  0100               	movlb	0	; () banked
  6015   000F3C  6FC0               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  6016   000F3E  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
  6017   000F40  6FC1               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  6018   000F42                     
  6019                           ; BSR set to: 0
  6020                           ;mcc_generated_files/tmr0.c: 80:     INTCONbits.TMR0IF = 0;
  6021   000F42  94F2               	bcf	242,2,c	;volatile
  6022   000F44                     
  6023                           ; BSR set to: 0
  6024                           ;mcc_generated_files/tmr0.c: 83:     T0CON = 0x94;
  6025   000F44  0E94               	movlw	148
  6026   000F46  6ED5               	movwf	213,c	;volatile
  6027   000F48                     
  6028                           ; BSR set to: 0
  6029   000F48  0012               	return		;funcret
  6030   000F4A                     __end_of_TMR0_Initialize:
  6031                           	callstack 0
  6032                           
  6033 ;; *************** function _SPI_Initialize *****************
  6034 ;; Defined at:
  6035 ;;		line 63 in file "mcc_generated_files/spi.c"
  6036 ;; Parameters:    Size  Location     Type
  6037 ;;		None
  6038 ;; Auto vars:     Size  Location     Type
  6039 ;;		None
  6040 ;; Return value:  Size  Location     Type
  6041 ;;                  1    wreg      void 
  6042 ;; Registers used:
  6043 ;;		wreg, status,2
  6044 ;; Tracked objects:
  6045 ;;		On entry : 0/0
  6046 ;;		On exit  : 0/0
  6047 ;;		Unchanged: 0/0
  6048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6050 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6052 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6053 ;;Total ram usage:        0 bytes
  6054 ;; Hardware stack levels used: 1
  6055 ;; Hardware stack levels required when called: 2
  6056 ;; This function calls:
  6057 ;;		Nothing
  6058 ;; This function is called by:
  6059 ;;		_SYSTEM_Initialize
  6060 ;; This function uses a non-reentrant model
  6061 ;;
  6062                           
  6063                           	psect	text27
  6064   000FFC                     __ptext27:
  6065                           	callstack 0
  6066   000FFC                     _SPI_Initialize:
  6067                           	callstack 27
  6068   000FFC                     
  6069                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  6070   000FFC  0EC0               	movlw	192
  6071   000FFE  6EC7               	movwf	199,c	;volatile
  6072                           
  6073                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  6074   001000  0E30               	movlw	48
  6075   001002  6EC6               	movwf	198,c	;volatile
  6076                           
  6077                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  6078   001004  0E00               	movlw	0
  6079   001006  6EC8               	movwf	200,c	;volatile
  6080   001008  0012               	return		;funcret
  6081   00100A                     __end_of_SPI_Initialize:
  6082                           	callstack 0
  6083                           
  6084 ;; *************** function _PWM2_Initialize *****************
  6085 ;; Defined at:
  6086 ;;		line 63 in file "mcc_generated_files/pwm2.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;		None
  6089 ;; Auto vars:     Size  Location     Type
  6090 ;;		None
  6091 ;; Return value:  Size  Location     Type
  6092 ;;                  1    wreg      void 
  6093 ;; Registers used:
  6094 ;;		wreg, status,2
  6095 ;; Tracked objects:
  6096 ;;		On entry : 0/0
  6097 ;;		On exit  : 0/0
  6098 ;;		Unchanged: 0/0
  6099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6100 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6101 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6102 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;Total ram usage:        0 bytes
  6105 ;; Hardware stack levels used: 1
  6106 ;; Hardware stack levels required when called: 2
  6107 ;; This function calls:
  6108 ;;		Nothing
  6109 ;; This function is called by:
  6110 ;;		_SYSTEM_Initialize
  6111 ;; This function uses a non-reentrant model
  6112 ;;
  6113                           
  6114                           	psect	text28
  6115   00100A                     __ptext28:
  6116                           	callstack 0
  6117   00100A                     _PWM2_Initialize:
  6118                           	callstack 27
  6119   00100A                     
  6120                           ;mcc_generated_files/pwm2.c: 68:     CCP2CON = 0x1C;
  6121   00100A  0E1C               	movlw	28
  6122   00100C  6EBA               	movwf	186,c	;volatile
  6123                           
  6124                           ;mcc_generated_files/pwm2.c: 71:     CCPR2L = 0x3E;
  6125   00100E  0E3E               	movlw	62
  6126   001010  6EBB               	movwf	187,c	;volatile
  6127                           
  6128                           ;mcc_generated_files/pwm2.c: 74:     CCPR2H = 0x00;
  6129   001012  0E00               	movlw	0
  6130   001014  6EBC               	movwf	188,c	;volatile
  6131   001016  0012               	return		;funcret
  6132   001018                     __end_of_PWM2_Initialize:
  6133                           	callstack 0
  6134                           
  6135 ;; *************** function _PIN_MANAGER_Initialize *****************
  6136 ;; Defined at:
  6137 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6138 ;; Parameters:    Size  Location     Type
  6139 ;;		None
  6140 ;; Auto vars:     Size  Location     Type
  6141 ;;		None
  6142 ;; Return value:  Size  Location     Type
  6143 ;;                  1    wreg      void 
  6144 ;; Registers used:
  6145 ;;		wreg, status,2
  6146 ;; Tracked objects:
  6147 ;;		On entry : 0/0
  6148 ;;		On exit  : 0/0
  6149 ;;		Unchanged: 0/0
  6150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6151 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6152 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6153 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6154 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6155 ;;Total ram usage:        0 bytes
  6156 ;; Hardware stack levels used: 1
  6157 ;; Hardware stack levels required when called: 2
  6158 ;; This function calls:
  6159 ;;		Nothing
  6160 ;; This function is called by:
  6161 ;;		_SYSTEM_Initialize
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text29
  6166   000F6C                     __ptext29:
  6167                           	callstack 0
  6168   000F6C                     _PIN_MANAGER_Initialize:
  6169                           	callstack 27
  6170   000F6C                     
  6171                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  6172   000F6C  0E00               	movlw	0
  6173   000F6E  6E89               	movwf	137,c	;volatile
  6174                           
  6175                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  6176   000F70  0E00               	movlw	0
  6177   000F72  6E8A               	movwf	138,c	;volatile
  6178                           
  6179                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  6180   000F74  0E2C               	movlw	44
  6181   000F76  6E8B               	movwf	139,c	;volatile
  6182   000F78                     
  6183                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  6184   000F78  6892               	setf	146,c	;volatile
  6185   000F7A                     
  6186                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  6187   000F7A  6893               	setf	147,c	;volatile
  6188                           
  6189                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x91;
  6190   000F7C  0E91               	movlw	145
  6191   000F7E  6E94               	movwf	148,c	;volatile
  6192                           
  6193                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  6194   000F80  0E0A               	movlw	10
  6195   000F82  6E7F               	movwf	127,c	;volatile
  6196                           
  6197                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  6198   000F84  0E1F               	movlw	31
  6199   000F86  6E7E               	movwf	126,c	;volatile
  6200   000F88                     
  6201                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  6202   000F88  687C               	setf	124,c	;volatile
  6203   000F8A                     
  6204                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  6205   000F8A  9EF1               	bcf	241,7,c	;volatile
  6206   000F8C  0012               	return		;funcret
  6207   000F8E                     __end_of_PIN_MANAGER_Initialize:
  6208                           	callstack 0
  6209                           
  6210 ;; *************** function _OSCILLATOR_Initialize *****************
  6211 ;; Defined at:
  6212 ;;		line 120 in file "mcc_generated_files/mcc.c"
  6213 ;; Parameters:    Size  Location     Type
  6214 ;;		None
  6215 ;; Auto vars:     Size  Location     Type
  6216 ;;		None
  6217 ;; Return value:  Size  Location     Type
  6218 ;;                  1    wreg      void 
  6219 ;; Registers used:
  6220 ;;		wreg, status,2
  6221 ;; Tracked objects:
  6222 ;;		On entry : 0/0
  6223 ;;		On exit  : 0/0
  6224 ;;		Unchanged: 0/0
  6225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6230 ;;Total ram usage:        0 bytes
  6231 ;; Hardware stack levels used: 1
  6232 ;; Hardware stack levels required when called: 2
  6233 ;; This function calls:
  6234 ;;		Nothing
  6235 ;; This function is called by:
  6236 ;;		_SYSTEM_Initialize
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text30
  6241   001030                     __ptext30:
  6242                           	callstack 0
  6243   001030                     _OSCILLATOR_Initialize:
  6244                           	callstack 27
  6245   001030                     
  6246                           ;mcc_generated_files/mcc.c: 123:     OSCCON = 0x62;
  6247   001030  0E62               	movlw	98
  6248   001032  6ED3               	movwf	211,c	;volatile
  6249                           
  6250                           ;mcc_generated_files/mcc.c: 125:     OSCTUNE = 0x00;
  6251   001034  0E00               	movlw	0
  6252   001036  6E9B               	movwf	155,c	;volatile
  6253   001038  0012               	return		;funcret
  6254   00103A                     __end_of_OSCILLATOR_Initialize:
  6255                           	callstack 0
  6256                           
  6257 ;; *************** function _INTERRUPT_Initialize *****************
  6258 ;; Defined at:
  6259 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6260 ;; Parameters:    Size  Location     Type
  6261 ;;		None
  6262 ;; Auto vars:     Size  Location     Type
  6263 ;;		None
  6264 ;; Return value:  Size  Location     Type
  6265 ;;                  1    wreg      void 
  6266 ;; Registers used:
  6267 ;;		None
  6268 ;; Tracked objects:
  6269 ;;		On entry : 0/0
  6270 ;;		On exit  : 0/0
  6271 ;;		Unchanged: 0/0
  6272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6273 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6274 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6275 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6276 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;Total ram usage:        0 bytes
  6278 ;; Hardware stack levels used: 1
  6279 ;; Hardware stack levels required when called: 2
  6280 ;; This function calls:
  6281 ;;		Nothing
  6282 ;; This function is called by:
  6283 ;;		_SYSTEM_Initialize
  6284 ;; This function uses a non-reentrant model
  6285 ;;
  6286                           
  6287                           	psect	text31
  6288   001052                     __ptext31:
  6289                           	callstack 0
  6290   001052                     _INTERRUPT_Initialize:
  6291                           	callstack 27
  6292   001052                     
  6293                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6294   001052  9ED0               	bcf	208,7,c	;volatile
  6295   001054  0012               	return		;funcret
  6296   001056                     __end_of_INTERRUPT_Initialize:
  6297                           	callstack 0
  6298                           
  6299 ;; *************** function _EUSART_Initialize *****************
  6300 ;; Defined at:
  6301 ;;		line 75 in file "mcc_generated_files/eusart.c"
  6302 ;; Parameters:    Size  Location     Type
  6303 ;;		None
  6304 ;; Auto vars:     Size  Location     Type
  6305 ;;		None
  6306 ;; Return value:  Size  Location     Type
  6307 ;;                  1    wreg      void 
  6308 ;; Registers used:
  6309 ;;		wreg, status,2, status,0, cstack
  6310 ;; Tracked objects:
  6311 ;;		On entry : 0/0
  6312 ;;		On exit  : 0/0
  6313 ;;		Unchanged: 0/0
  6314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6318 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6319 ;;Total ram usage:        0 bytes
  6320 ;; Hardware stack levels used: 1
  6321 ;; Hardware stack levels required when called: 3
  6322 ;; This function calls:
  6323 ;;		_EUSART_SetRxInterruptHandler
  6324 ;;		_EUSART_SetTxInterruptHandler
  6325 ;; This function is called by:
  6326 ;;		_SYSTEM_Initialize
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text32
  6331   000E34                     __ptext32:
  6332                           	callstack 0
  6333   000E34                     _EUSART_Initialize:
  6334                           	callstack 26
  6335   000E34                     
  6336                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RC1IE = 0;
  6337   000E34  9A9D               	bcf	157,5,c	;volatile
  6338                           
  6339                           ;mcc_generated_files/eusart.c: 79:     PIE1bits.TX1IE = 0;
  6340   000E36  989D               	bcf	157,4,c	;volatile
  6341   000E38                     
  6342                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6343   000E38  0E00               	movlw	0
  6344   000E3A  6E04               	movwf	EUSART_SetTxInterruptHandler@handler^0,c
  6345   000E3C  0E00               	movlw	0
  6346   000E3E  6E05               	movwf	(EUSART_SetTxInterruptHandler@handler+1)^0,c
  6347   000E40  EC1D  F008         	call	_EUSART_SetTxInterruptHandler	;wreg free
  6348                           
  6349                           ;mcc_generated_files/eusart.c: 82:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6350   000E44  0E00               	movlw	0
  6351   000E46  6E04               	movwf	EUSART_SetRxInterruptHandler@handler^0,c
  6352   000E48  0E00               	movlw	0
  6353   000E4A  6E05               	movwf	(EUSART_SetRxInterruptHandler@handler+1)^0,c
  6354   000E4C  EC22  F008         	call	_EUSART_SetRxInterruptHandler	;wreg free
  6355   000E50                     
  6356                           ;mcc_generated_files/eusart.c: 87:     BAUDCON = 0x08;
  6357   000E50  0E08               	movlw	8
  6358   000E52  6EB8               	movwf	184,c	;volatile
  6359   000E54                     
  6360                           ;mcc_generated_files/eusart.c: 90:     RCSTA = 0x90;
  6361   000E54  0E90               	movlw	144
  6362   000E56  6EAB               	movwf	171,c	;volatile
  6363   000E58                     
  6364                           ;mcc_generated_files/eusart.c: 93:     TXSTA = 0x24;
  6365   000E58  0E24               	movlw	36
  6366   000E5A  6EAC               	movwf	172,c	;volatile
  6367   000E5C                     
  6368                           ;mcc_generated_files/eusart.c: 96:     SPBRG = 0xCF;
  6369   000E5C  0ECF               	movlw	207
  6370   000E5E  6EAF               	movwf	175,c	;volatile
  6371   000E60                     
  6372                           ;mcc_generated_files/eusart.c: 99:     SPBRGH = 0x00;
  6373   000E60  0E00               	movlw	0
  6374   000E62  6EB0               	movwf	176,c	;volatile
  6375   000E64                     
  6376                           ;mcc_generated_files/eusart.c: 103:     eusartTxHead = 0;
  6377   000E64  0E00               	movlw	0
  6378   000E66  6E5B               	movwf	_eusartTxHead^0,c	;volatile
  6379   000E68                     
  6380                           ;mcc_generated_files/eusart.c: 104:     eusartTxTail = 0;
  6381   000E68  0E00               	movlw	0
  6382   000E6A  6E5A               	movwf	_eusartTxTail^0,c	;volatile
  6383   000E6C                     
  6384                           ;mcc_generated_files/eusart.c: 105:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6385   000E6C  0E08               	movlw	8
  6386   000E6E  0100               	movlb	0	; () banked
  6387   000E70  6FD2               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  6388   000E72                     
  6389                           ; BSR set to: 0
  6390                           ;mcc_generated_files/eusart.c: 107:     eusartRxHead = 0;
  6391   000E72  0E00               	movlw	0
  6392   000E74  6FD1               	movwf	_eusartRxHead& (0+255),b	;volatile
  6393   000E76                     
  6394                           ; BSR set to: 0
  6395                           ;mcc_generated_files/eusart.c: 108:     eusartRxTail = 0;
  6396   000E76  0E00               	movlw	0
  6397   000E78  6FD0               	movwf	_eusartRxTail& (0+255),b	;volatile
  6398   000E7A                     
  6399                           ; BSR set to: 0
  6400                           ;mcc_generated_files/eusart.c: 109:     eusartRxCount = 0;
  6401   000E7A  0E00               	movlw	0
  6402   000E7C  6FCF               	movwf	_eusartRxCount& (0+255),b	;volatile
  6403   000E7E                     
  6404                           ; BSR set to: 0
  6405                           ;mcc_generated_files/eusart.c: 112:     PIE1bits.RC1IE = 1;
  6406   000E7E  8A9D               	bsf	157,5,c	;volatile
  6407   000E80                     
  6408                           ; BSR set to: 0
  6409   000E80  0012               	return		;funcret
  6410   000E82                     __end_of_EUSART_Initialize:
  6411                           	callstack 0
  6412                           
  6413 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6414 ;; Defined at:
  6415 ;;		line 212 in file "mcc_generated_files/eusart.c"
  6416 ;; Parameters:    Size  Location     Type
  6417 ;;  handler         2    3[COMRAM] PTR void 
  6418 ;; Auto vars:     Size  Location     Type
  6419 ;;		None
  6420 ;; Return value:  Size  Location     Type
  6421 ;;                  1    wreg      void 
  6422 ;; Registers used:
  6423 ;;		wreg, status,2, status,0
  6424 ;; Tracked objects:
  6425 ;;		On entry : 0/0
  6426 ;;		On exit  : 0/0
  6427 ;;		Unchanged: 0/0
  6428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6429 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6430 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6431 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6432 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6433 ;;Total ram usage:        2 bytes
  6434 ;; Hardware stack levels used: 1
  6435 ;; Hardware stack levels required when called: 2
  6436 ;; This function calls:
  6437 ;;		Nothing
  6438 ;; This function is called by:
  6439 ;;		_EUSART_Initialize
  6440 ;; This function uses a non-reentrant model
  6441 ;;
  6442                           
  6443                           	psect	text33
  6444   00103A                     __ptext33:
  6445                           	callstack 0
  6446   00103A                     _EUSART_SetTxInterruptHandler:
  6447                           	callstack 26
  6448   00103A                     
  6449                           ;mcc_generated_files/eusart.c: 213:     EUSART_TxDefaultInterruptHandler = handler;
  6450   00103A  C004  F0E5         	movff	EUSART_SetTxInterruptHandler@handler,_EUSART_TxDefaultInterruptHandler
  6451   00103E  C005  F0E6         	movff	EUSART_SetTxInterruptHandler@handler+1,_EUSART_TxDefaultInterruptHandler+1
  6452   001042  0012               	return		;funcret
  6453   001044                     __end_of_EUSART_SetTxInterruptHandler:
  6454                           	callstack 0
  6455                           
  6456 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6457 ;; Defined at:
  6458 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6459 ;; Parameters:    Size  Location     Type
  6460 ;;  handler         2    3[COMRAM] PTR void 
  6461 ;; Auto vars:     Size  Location     Type
  6462 ;;		None
  6463 ;; Return value:  Size  Location     Type
  6464 ;;                  1    wreg      void 
  6465 ;; Registers used:
  6466 ;;		wreg, status,2, status,0
  6467 ;; Tracked objects:
  6468 ;;		On entry : 0/0
  6469 ;;		On exit  : 0/0
  6470 ;;		Unchanged: 0/0
  6471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6472 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;Total ram usage:        2 bytes
  6477 ;; Hardware stack levels used: 1
  6478 ;; Hardware stack levels required when called: 2
  6479 ;; This function calls:
  6480 ;;		Nothing
  6481 ;; This function is called by:
  6482 ;;		_EUSART_Initialize
  6483 ;; This function uses a non-reentrant model
  6484 ;;
  6485                           
  6486                           	psect	text34
  6487   001044                     __ptext34:
  6488                           	callstack 0
  6489   001044                     _EUSART_SetRxInterruptHandler:
  6490                           	callstack 26
  6491   001044                     
  6492                           ;mcc_generated_files/eusart.c: 217:     EUSART_RxDefaultInterruptHandler = handler;
  6493   001044  C004  F0E3         	movff	EUSART_SetRxInterruptHandler@handler,_EUSART_RxDefaultInterruptHandler
  6494   001048  C005  F0E4         	movff	EUSART_SetRxInterruptHandler@handler+1,_EUSART_RxDefaultInterruptHandler+1
  6495   00104C  0012               	return		;funcret
  6496   00104E                     __end_of_EUSART_SetRxInterruptHandler:
  6497                           	callstack 0
  6498                           
  6499 ;; *************** function _INTERRUPT_InterruptManager *****************
  6500 ;; Defined at:
  6501 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;		None
  6504 ;; Auto vars:     Size  Location     Type
  6505 ;;		None
  6506 ;; Return value:  Size  Location     Type
  6507 ;;                  1    wreg      void 
  6508 ;; Registers used:
  6509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6510 ;; Tracked objects:
  6511 ;;		On entry : 0/0
  6512 ;;		On exit  : 0/0
  6513 ;;		Unchanged: 0/0
  6514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;Total ram usage:        2 bytes
  6520 ;; Hardware stack levels used: 1
  6521 ;; Hardware stack levels required when called: 1
  6522 ;; This function calls:
  6523 ;;		_btGetData
  6524 ;; This function is called by:
  6525 ;;		Interrupt level 2
  6526 ;; This function uses a non-reentrant model
  6527 ;;
  6528                           
  6529                           	psect	intcode
  6530   000008                     __pintcode:
  6531                           	callstack 0
  6532   000008                     _INTERRUPT_InterruptManager:
  6533                           	callstack 23
  6534                           
  6535                           ;incstack = 0
  6536   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6537   00000A  CFD9 F002          	movff	fsr2l,??_INTERRUPT_InterruptManager
  6538   00000E  CFDA F003          	movff	fsr2h,??_INTERRUPT_InterruptManager+1
  6539   000012                     
  6540                           ;mcc_generated_files/interrupt_manager.c: 75:     if (PIE1bits.TX1IE && PIR1bits.TX1IF)
  6541   000012  A89D               	btfss	157,4,c	;volatile
  6542   000014  EF0E  F000         	goto	i2u214_41
  6543   000018  EF10  F000         	goto	i2u214_40
  6544   00001C                     i2u214_41:
  6545   00001C  EF1A  F000         	goto	i2l358
  6546   000020                     i2u214_40:
  6547   000020                     
  6548                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:         EUSART_TxDefaultInterruptHandler();
  6549   000020  A89E               	btfss	158,4,c	;volatile
  6550   000022  EF15  F000         	goto	i2u215_41
  6551   000026  EF17  F000         	goto	i2u215_40
  6552   00002A                     i2u215_41:
  6553   00002A  EF1A  F000         	goto	i2l358
  6554   00002E                     i2u215_40:
  6555   00002E                     
  6556                           ;mcc_generated_files/interrupt_manager.c: 81:         PIR1bits.TX1IF = 0;
  6557   00002E  989E               	bcf	158,4,c	;volatile
  6558                           
  6559                           ;mcc_generated_files/interrupt_manager.c: 82:     }
  6560   000030  EF2C  F000         	goto	i2l361
  6561   000034                     i2l358:
  6562   000034  AA9D               	btfss	157,5,c	;volatile
  6563   000036  EF1F  F000         	goto	i2u216_41
  6564   00003A  EF21  F000         	goto	i2u216_40
  6565   00003E                     i2u216_41:
  6566   00003E  EF2C  F000         	goto	i2l361
  6567   000042                     i2u216_40:
  6568   000042  AA9E               	btfss	158,5,c	;volatile
  6569   000044  EF26  F000         	goto	i2u217_41
  6570   000048  EF28  F000         	goto	i2u217_40
  6571   00004C                     i2u217_41:
  6572   00004C  EF2C  F000         	goto	i2l361
  6573   000050                     i2u217_40:
  6574   000050                     
  6575                           ;mcc_generated_files/interrupt_manager.c: 86:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 88:         btGetData(RCREG);
  6576   000050  50AE               	movf	174,w,c	;volatile
  6577   000052  EC0F  F006         	call	_btGetData
  6578   000056                     
  6579                           ;mcc_generated_files/interrupt_manager.c: 91:         PIR1bits.RC1IF = 0;
  6580   000056  9A9E               	bcf	158,5,c	;volatile
  6581   000058                     i2l361:
  6582   000058  C003  FFDA         	movff	??_INTERRUPT_InterruptManager+1,fsr2h
  6583   00005C  C002  FFD9         	movff	??_INTERRUPT_InterruptManager,fsr2l
  6584   000060  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6585   000062  0011               	retfie		f
  6586   000064                     __end_of_INTERRUPT_InterruptManager:
  6587                           	callstack 0
  6588                           
  6589 ;; *************** function _btGetData *****************
  6590 ;; Defined at:
  6591 ;;		line 341 in file "main.c"
  6592 ;; Parameters:    Size  Location     Type
  6593 ;;  rcv             1    wreg     unsigned char 
  6594 ;; Auto vars:     Size  Location     Type
  6595 ;;  rcv             1    0[COMRAM] unsigned char 
  6596 ;; Return value:  Size  Location     Type
  6597 ;;                  1    wreg      void 
  6598 ;; Registers used:
  6599 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6600 ;; Tracked objects:
  6601 ;;		On entry : 0/0
  6602 ;;		On exit  : 0/0
  6603 ;;		Unchanged: 0/0
  6604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6605 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6607 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6608 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6609 ;;Total ram usage:        1 bytes
  6610 ;; Hardware stack levels used: 1
  6611 ;; This function calls:
  6612 ;;		Nothing
  6613 ;; This function is called by:
  6614 ;;		_INTERRUPT_InterruptManager
  6615 ;; This function uses a non-reentrant model
  6616 ;;
  6617                           
  6618                           	psect	text36
  6619   000C1E                     __ptext36:
  6620                           	callstack 0
  6621   000C1E                     _btGetData:
  6622                           	callstack 23
  6623                           
  6624                           ;incstack = 0
  6625                           ;btGetData@rcv stored from wreg
  6626   000C1E  6E01               	movwf	btGetData@rcv^0,c
  6627   000C20                     
  6628                           ;main.c: 342:     if(rcv == 'H' && uartBufferIndex == 0) {
  6629   000C20  0E48               	movlw	72
  6630   000C22  1801               	xorwf	btGetData@rcv^0,w,c
  6631   000C24  A4D8               	btfss	status,2,c
  6632   000C26  EF17  F006         	goto	i2u166_41
  6633   000C2A  EF19  F006         	goto	i2u166_40
  6634   000C2E                     i2u166_41:
  6635   000C2E  EF2A  F006         	goto	i2l2751
  6636   000C32                     i2u166_40:
  6637   000C32  5059               	movf	_uartBufferIndex^0,w,c
  6638   000C34  A4D8               	btfss	status,2,c
  6639   000C36  EF1F  F006         	goto	i2u167_41
  6640   000C3A  EF21  F006         	goto	i2u167_40
  6641   000C3E                     i2u167_41:
  6642   000C3E  EF2A  F006         	goto	i2l2751
  6643   000C42                     i2u167_40:
  6644   000C42                     
  6645                           ;main.c: 343:         uartBuffer[uartBufferIndex] = 'H';
  6646   000C42  5059               	movf	_uartBufferIndex^0,w,c
  6647   000C44  0FA0               	addlw	low _uartBuffer
  6648   000C46  6ED9               	movwf	fsr2l,c
  6649   000C48  6ADA               	clrf	fsr2h,c
  6650   000C4A  0E48               	movlw	72
  6651   000C4C  6EDF               	movwf	indf2,c
  6652   000C4E                     i2l2749:
  6653                           
  6654                           ;main.c: 344:         uartBufferIndex++;
  6655   000C4E  2A59               	incf	_uartBufferIndex^0,f,c
  6656                           
  6657                           ;main.c: 345:     }
  6658   000C50  EF5D  F006         	goto	i2l523
  6659   000C54                     i2l2751:
  6660   000C54  5059               	movf	_uartBufferIndex^0,w,c
  6661   000C56  B4D8               	btfsc	status,2,c
  6662   000C58  EF30  F006         	goto	i2u168_41
  6663   000C5C  EF32  F006         	goto	i2u168_40
  6664   000C60                     i2u168_41:
  6665   000C60  EF42  F006         	goto	i2l2759
  6666   000C64                     i2u168_40:
  6667   000C64  0E07               	movlw	7
  6668   000C66  6059               	cpfslt	_uartBufferIndex^0,c
  6669   000C68  EF38  F006         	goto	i2u169_41
  6670   000C6C  EF3A  F006         	goto	i2u169_40
  6671   000C70                     i2u169_41:
  6672   000C70  EF42  F006         	goto	i2l2759
  6673   000C74                     i2u169_40:
  6674   000C74                     
  6675                           ;main.c: 347:         uartBuffer[uartBufferIndex++] = rcv;
  6676   000C74  5059               	movf	_uartBufferIndex^0,w,c
  6677   000C76  0FA0               	addlw	low _uartBuffer
  6678   000C78  6ED9               	movwf	fsr2l,c
  6679   000C7A  6ADA               	clrf	fsr2h,c
  6680   000C7C  C001  FFDF         	movff	btGetData@rcv,indf2
  6681   000C80  EF27  F006         	goto	i2l2749
  6682   000C84                     i2l2759:
  6683   000C84  0E07               	movlw	7
  6684   000C86  1859               	xorwf	_uartBufferIndex^0,w,c
  6685   000C88  A4D8               	btfss	status,2,c
  6686   000C8A  EF49  F006         	goto	i2u170_41
  6687   000C8E  EF4B  F006         	goto	i2u170_40
  6688   000C92                     i2u170_41:
  6689   000C92  EF5D  F006         	goto	i2l523
  6690   000C96                     i2u170_40:
  6691   000C96                     
  6692                           ;main.c: 350:         if(rcv == ';') {
  6693   000C96  0E3B               	movlw	59
  6694   000C98  1801               	xorwf	btGetData@rcv^0,w,c
  6695   000C9A  A4D8               	btfss	status,2,c
  6696   000C9C  EF52  F006         	goto	i2u171_41
  6697   000CA0  EF54  F006         	goto	i2u171_40
  6698   000CA4                     i2u171_41:
  6699   000CA4  EF5D  F006         	goto	i2l520
  6700   000CA8                     i2u171_40:
  6701   000CA8                     
  6702                           ;main.c: 351:             uartBuffer[6] = ';';
  6703   000CA8  0E3B               	movlw	59
  6704   000CAA  0100               	movlb	0	; () banked
  6705   000CAC  6FA6               	movwf	(_uartBuffer+6)& (0+255),b
  6706                           
  6707                           ;main.c: 352:             uartBufferIndex = 0;
  6708   000CAE  0E00               	movlw	0
  6709   000CB0  6E59               	movwf	_uartBufferIndex^0,c
  6710                           
  6711                           ;main.c: 353:             btTimeSet = 1;
  6712   000CB2  0E01               	movlw	1
  6713   000CB4  6FC4               	movwf	_btTimeSet& (0+255),b
  6714   000CB6  EF5D  F006         	goto	i2l523
  6715   000CBA                     i2l520:
  6716   000CBA                     i2l523:
  6717   000CBA  0012               	return		;funcret
  6718   000CBC                     __end_of_btGetData:
  6719                           	callstack 0
  6720                           
  6721                           	psect	rparam
  6722   000000                     
  6723                           	psect	temp
  6724   00005C                     btemp:
  6725                           	callstack 0
  6726   00005C                     	ds	1
  6727   000000                     int$flags	set	btemp
  6728   000000                     wtemp8	set	btemp+1
  6729   000000                     ttemp5	set	btemp+1
  6730   000000                     ttemp6	set	btemp+4
  6731   000000                     ttemp7	set	btemp+8
  6732                           
  6733                           	psect	idloc
  6734                           
  6735                           ;Config register IDLOC0 @ 0x200000
  6736                           ;	unspecified, using default values
  6737   200000                     	org	2097152
  6738   200000  FF                 	db	255
  6739                           
  6740                           ;Config register IDLOC1 @ 0x200001
  6741                           ;	unspecified, using default values
  6742   200001                     	org	2097153
  6743   200001  FF                 	db	255
  6744                           
  6745                           ;Config register IDLOC2 @ 0x200002
  6746                           ;	unspecified, using default values
  6747   200002                     	org	2097154
  6748   200002  FF                 	db	255
  6749                           
  6750                           ;Config register IDLOC3 @ 0x200003
  6751                           ;	unspecified, using default values
  6752   200003                     	org	2097155
  6753   200003  FF                 	db	255
  6754                           
  6755                           ;Config register IDLOC4 @ 0x200004
  6756                           ;	unspecified, using default values
  6757   200004                     	org	2097156
  6758   200004  FF                 	db	255
  6759                           
  6760                           ;Config register IDLOC5 @ 0x200005
  6761                           ;	unspecified, using default values
  6762   200005                     	org	2097157
  6763   200005  FF                 	db	255
  6764                           
  6765                           ;Config register IDLOC6 @ 0x200006
  6766                           ;	unspecified, using default values
  6767   200006                     	org	2097158
  6768   200006  FF                 	db	255
  6769                           
  6770                           ;Config register IDLOC7 @ 0x200007
  6771                           ;	unspecified, using default values
  6772   200007                     	org	2097159
  6773   200007  FF                 	db	255
  6774                           
  6775                           	psect	config
  6776                           
  6777                           ; Padding undefined space
  6778   300000                     	org	3145728
  6779   300000  FF                 	db	255
  6780                           
  6781                           ;Config register CONFIG1H @ 0x300001
  6782                           ;	Oscillator Selection bits
  6783                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  6784                           ;	Fail-Safe Clock Monitor Enable bit
  6785                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6786                           ;	Internal/External Oscillator Switchover bit
  6787                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6788   300001                     	org	3145729
  6789   300001  08                 	db	8
  6790                           
  6791                           ;Config register CONFIG2L @ 0x300002
  6792                           ;	Power-up Timer Enable bit
  6793                           ;	PWRTEN = OFF, PWRT disabled
  6794                           ;	Brown-out Reset Enable bits
  6795                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6796                           ;	Brown Out Reset Voltage bits
  6797                           ;	BORV = 18, VBOR set to 1.8 V nominal
  6798   300002                     	org	3145730
  6799   300002  1F                 	db	31
  6800                           
  6801                           ;Config register CONFIG2H @ 0x300003
  6802                           ;	Watchdog Timer Enable bit
  6803                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  6804                           ;	Watchdog Timer Postscale Select bits
  6805                           ;	WDTPS = 32768, 1:32768
  6806   300003                     	org	3145731
  6807   300003  1E                 	db	30
  6808                           
  6809                           ; Padding undefined space
  6810   300004                     	org	3145732
  6811   300004  FF                 	db	255
  6812                           
  6813                           ;Config register CONFIG3H @ 0x300005
  6814                           ;	CCP2 MUX bit
  6815                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6816                           ;	PORTB A/D Enable bit
  6817                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6818                           ;	Low-Power Timer1 Oscillator Enable bit
  6819                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6820                           ;	HFINTOSC Fast Start-up
  6821                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  6822                           ;	MCLR Pin Enable bit
  6823                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  6824   300005                     	org	3145733
  6825   300005  09                 	db	9
  6826                           
  6827                           ;Config register CONFIG4L @ 0x300006
  6828                           ;	Stack Full/Underflow Reset Enable bit
  6829                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6830                           ;	Single-Supply ICSP Enable bit
  6831                           ;	LVP = OFF, Single-Supply ICSP disabled
  6832                           ;	Extended Instruction Set Enable bit
  6833                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6834                           ;	Background Debugger Enable bit
  6835                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6836   300006                     	org	3145734
  6837   300006  81                 	db	129
  6838                           
  6839                           ; Padding undefined space
  6840   300007                     	org	3145735
  6841   300007  FF                 	db	255
  6842                           
  6843                           ;Config register CONFIG5L @ 0x300008
  6844                           ;	Code Protection Block 0
  6845                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6846                           ;	Code Protection Block 1
  6847                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6848                           ;	Code Protection Block 2
  6849                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6850                           ;	Code Protection Block 3
  6851                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6852   300008                     	org	3145736
  6853   300008  0F                 	db	15
  6854                           
  6855                           ;Config register CONFIG5H @ 0x300009
  6856                           ;	Boot Block Code Protection bit
  6857                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6858                           ;	Data EEPROM Code Protection bit
  6859                           ;	CPD = OFF, Data EEPROM not code-protected
  6860   300009                     	org	3145737
  6861   300009  C0                 	db	192
  6862                           
  6863                           ;Config register CONFIG6L @ 0x30000A
  6864                           ;	Write Protection Block 0
  6865                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6866                           ;	Write Protection Block 1
  6867                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6868                           ;	Write Protection Block 2
  6869                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6870                           ;	Write Protection Block 3
  6871                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  6872   30000A                     	org	3145738
  6873   30000A  0F                 	db	15
  6874                           
  6875                           ;Config register CONFIG6H @ 0x30000B
  6876                           ;	Configuration Register Write Protection bit
  6877                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6878                           ;	Boot Block Write Protection bit
  6879                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6880                           ;	Data EEPROM Write Protection bit
  6881                           ;	WRTD = OFF, Data EEPROM not write-protected
  6882   30000B                     	org	3145739
  6883   30000B  E0                 	db	224
  6884                           
  6885                           ;Config register CONFIG7L @ 0x30000C
  6886                           ;	Table Read Protection Block 0
  6887                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6888                           ;	Table Read Protection Block 1
  6889                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6890                           ;	Table Read Protection Block 2
  6891                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6892                           ;	Table Read Protection Block 3
  6893                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6894   30000C                     	org	3145740
  6895   30000C  0F                 	db	15
  6896                           
  6897                           ;Config register CONFIG7H @ 0x30000D
  6898                           ;	Boot Block Table Read Protection bit
  6899                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6900   30000D                     	org	3145741
  6901   30000D  40                 	db	64
  6902                           tosu	equ	0xFFF
  6903                           tosh	equ	0xFFE
  6904                           tosl	equ	0xFFD
  6905                           stkptr	equ	0xFFC
  6906                           pclatu	equ	0xFFB
  6907                           pclath	equ	0xFFA
  6908                           pcl	equ	0xFF9
  6909                           tblptru	equ	0xFF8
  6910                           tblptrh	equ	0xFF7
  6911                           tblptrl	equ	0xFF6
  6912                           tablat	equ	0xFF5
  6913                           prodh	equ	0xFF4
  6914                           prodl	equ	0xFF3
  6915                           indf0	equ	0xFEF
  6916                           postinc0	equ	0xFEE
  6917                           postdec0	equ	0xFED
  6918                           preinc0	equ	0xFEC
  6919                           plusw0	equ	0xFEB
  6920                           fsr0h	equ	0xFEA
  6921                           fsr0l	equ	0xFE9
  6922                           wreg	equ	0xFE8
  6923                           indf1	equ	0xFE7
  6924                           postinc1	equ	0xFE6
  6925                           postdec1	equ	0xFE5
  6926                           preinc1	equ	0xFE4
  6927                           plusw1	equ	0xFE3
  6928                           fsr1h	equ	0xFE2
  6929                           fsr1l	equ	0xFE1
  6930                           bsr	equ	0xFE0
  6931                           indf2	equ	0xFDF
  6932                           postinc2	equ	0xFDE
  6933                           postdec2	equ	0xFDD
  6934                           preinc2	equ	0xFDC
  6935                           plusw2	equ	0xFDB
  6936                           fsr2h	equ	0xFDA
  6937                           fsr2l	equ	0xFD9
  6938                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    2048
    Data        0
    BSS         118
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      91
    BANK0           160     16     135
    BANK1           256     69      69
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(2) Largest target is 64
		 -> saveTimeToFlash@flashBuffer(BANK1[64]), 

    printString@str	PTR unsigned char  size(2) Largest target is 6
		 -> displayAlarmTime@displayString(BANK0[5]), displayTime@displayString(BANK0[5]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _triggerAlarm->_printString
    _clearDisplay->_flushBuffer
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _saveTimeToFlash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _displayTime->_printString
    _displayAlarmTime->_printString
    _printString->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_btGetData

Critical Paths under _main in BANK0

    _main->_checkButtons
    _processAlarm->_triggerAlarm
    _checkButtons->_displayAlarmTime
    _checkButtons->_displayTime

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_saveTimeToFlash
    _checkButtons->_saveTimeToFlash

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   40220
                                             14 BANK0      2     2      0
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                        _TMR0_Reload
                    _TMR0_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
                       _processAlarm
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _processAlarm                                         0     0      0    7261
                       _triggerAlarm
 ---------------------------------------------------------------------------------
 (2) _triggerAlarm                                         6     6      0    7261
                                              0 BANK0      6     6      0
                       _clearDisplay
                        _printString
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         2     2      0    3344
                                             67 COMRAM     2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     537
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     537
                                              4 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0     698
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   18476
                                             12 BANK0      2     2      0
                            ___awmod
                         _clearAlarm
                   _displayAlarmTime
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _saveTimeToFlash                                     69    69      0    2396
                                              0 BANK1     69    69      0
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    15     9      6    1331
                                              8 COMRAM    15     9      6
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     5     1      4     217
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     633
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    7132
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _displayAlarmTime                                    12    12      0    7132
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (3) _printString                                         21    19      2    3846
                                             67 COMRAM    21    19      2
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (4) _flushBuffer                                         43    43      0    3276
                                             24 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (5) _max_write                                           13    10      3    1679
                                             11 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1212
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1816
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _clearAlarm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     196
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           2     2      0      66
                                              1 COMRAM     2     2      0
                          _btGetData
 ---------------------------------------------------------------------------------
 (8) _btGetData                                            1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _SPI_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Reload
   _TMR0_StartTimer
   _checkButtons
     ___awmod
     _clearAlarm
     _displayAlarmTime
       ___awdiv
       ___awmod
       _printString
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
     _displayTime
       ___awdiv
       ___awmod
       _printString
     _saveTimeToFlash
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _clearDisplay
     _flushBuffer
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit
   _processAlarm
     _triggerAlarm
       _clearDisplay
       _printString
   _saveTimeToFlash

 _INTERRUPT_InterruptManager (ROOT)
   _btGetData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      45       7       27.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      87       5       84.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5B       1       96.8%
BITBIGSFRlllll      1C      0       0      54        0.0%
BITBIGSFRhhlh       19      0       0      39        0.0%
BITBIGSFRlhhhh       9      0       0      43        0.0%
BITBIGSFRlllhh       7      0       0      51        0.0%
BITBIGSFRhhhh        7      0       0      37        0.0%
BITBIGSFRlhhlhh      7      0       0      45        0.0%
BITBIGSFRllhh        6      0       0      49        0.0%
BITBIGSFRllhl        6      0       0      50        0.0%
BITBIGSFRlhhlll      4      0       0      46        0.0%
BITBIGSFRhlhl        3      0       0      42        0.0%
BITBIGSFRhlhh        2      0       0      41        0.0%
BITBIGSFRlhhlll      2      0       0      47        0.0%
BITBIGSFRhhhl        2      0       0      38        0.0%
BITBIGSFRlhhhl       1      0       0      44        0.0%
BITBIGSFRllllh       1      0       0      53        0.0%
BITBIGSFRlllhl       1      0       0      52        0.0%
BITBIGSFRlhl         1      0       0      48        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127      14        0.0%
DATA                 0      0     127       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 11 01:23:15 2024

                __end_of_checkButtons 02FE         ?_EUSART_SetRxInterruptHandler 0004  
                      _SPI_Initialize 0FFC                          ?_displayTime 0001  
     __end_of_TMR0_HasOverflowOccured 0FD8                           _SSPSTATbits 0FC7  
                                  l20 0FC0                                    l21 0FC2  
                                  l15 1008                                    l18 0FB2  
                                  l72 0F6A                                    l75 1038  
                                  l98 0F8C                          ___awdiv@sign 0009  
                     _timer0ReloadVal 00C0                                   l212 1050  
                                 l302 0FE8                                   l152 0E80  
                                 l240 0FFA                                   l224 102E  
                                 l320 0782                                   l209 0F48  
                                 l314 07C6                                   l227 0FD6  
                                 l324 0F20                                   l318 0794  
                                 l191 1042                                   l319 077E  
                                 l504 02FC                                   l353 1054  
                                 l194 104C                                   l514 0D8E  
                                 l443 06D2                                   l268 1016  
                                 l508 0D10                                   l453 0AB8  
                                 l509 0D34                                   l470 0A04  
                                 l615 0484                                   l463 0DE0  
                                 l560 05B2                                   l474 1022  
                                 l546 0948                                   l458 0B6C  
                                 l467 0962                                   l548 094A  
                                 l572 0EEC                                   l495 01EE  
                                 l567 0E30                                   l569 0E32  
                                 l577 0EB8                                   l862 0C1C  
                                 l849 088A                                   _PR2 0FCB  
 EUSART_SetRxInterruptHandler@handler 0004                          ___awmod@sign 0009  
                     _TMR2_Initialize 0FEA                                   prod 0FF3  
                                 wreg 0FE8                                  l2311 091C  
                                l2303 08D8                                  l3111 0F02  
                                l3103 0EEE                                  l2241 0FAC  
                                l2313 091C                                  l2305 08F0  
                                l3121 0F0C                                  l3113 0F04  
                                l3105 0EF6                                  l3201 094C  
                                l2243 0FAE                                  l2251 07E2  
                                l2315 0922                                  l2307 090C  
                                l3131 0FE6                                  l3123 0F10  
                                l3115 0F06                                  l3107 0EFA  
                                l3203 0970                                  l3211 09A0  
                                l2261 0808                                  l2253 07E6  
                                l2245 07C8                                  l2317 0928  
                                l2309 0912                                  l2501 0430  
                                l3125 0F14                                  l3117 0F08  
                                l3109 0EFE                                  l3213 09AC  
                                l3205 098A                                  l3221 09EE  
                                l2511 0B72                                  l2271 083E  
                                l2263 081A                                  l2255 07F4  
                                l2247 07CC                                  l2319 092C  
                                l3127 0F16                                  l3119 0F0A  
                                l3231 0D7A                                  l3223 0D36  
                                l3215 09C8                                  l3207 0998  
                                l2601 0E7A                                  l2521 0BA2  
                                l2513 0B80                                  l2273 0854  
                                l2265 0822                                  l2281 086A  
                                l2257 07FC                                  l2249 07DA  
                                l2505 0442                                  l3129 0FD8  
                                l3233 0D8A                                  l3225 0D36  
                                l3217 09CC                                  l3321 0DB2  
                                l2603 0E7E                                  l2531 0BE8  
                                l2523 0BB4                                  l2515 0B88  
                                l2283 087A                                  l2275 085C  
                                l2267 082A                                  l2259 0800  
                                l2291 08AC                                  l2371 054A  
                                l2363 04BE                                  l2355 049A  
                                l2347 0486                                  l2507 0480  
                                l3227 0D4E                                  l3219 09E8  
                                l3323 0DC4                                  l2541 0C14  
                                l2533 0BF0                                  l2525 0BBC  
                                l2517 0B8C                                  l2509 0B6E  
                                l2285 0882                                  l2277 085E  
                                l2269 0838                                  l2293 08CE  
                                l2381 0572                                  l2373 054E  
                                l2365 04F6                                  l2357 04B6  
                                l2349 0492                                  l2621 0AAE  
                                l2605 0A06                                  l3421 06FA  
                                l3501 0106                                  l3229 0D76  
                                l2461 0EB4                                  l3325 0DD6  
                                l3317 0D90                                  l2551 0F78  
                                l2535 0BF6                                  l2527 0BC4  
                                l2519 0B9A                                  l2279 0864  
                                l2295 08CE                                  l2383 0592  
                                l2375 056A                                  l2367 052A  
                                l2471 0322                                  l2463 02FE  
                                l2615 0A7A                                  l2607 0A6E  
                                l3431 072A                                  l3423 06FA  
                                l3511 0166                                  l3503 0120  
                                l2455 0E8A                                  l3327 0DDA  
                                l3319 0DA2                                  l2553 0F7A  
                                l2561 100A                                  l2545 0FFC  
                                l2721 0F52                                  l2529 0BD2  
                                l2537 0BFC                                  l2297 08D0  
                                l2289 088C                                  l2385 0596  
                                l2369 052E                                  l2481 03D0  
                                l2465 0312                                  l2641 0B26  
                                l2617 0A8E                                  l2609 0A72  
                                l3441 0752                                  l3433 073E  
                                l3425 06FE                                  l3417 06DA  
                                l3521 01BA                                  l3513 0184  
                                l3505 012E                                  l2457 0E94  
                                l2449 0E82                                  l3601 05E8  
                                l2387 103A                                  l2547 1052  
                                l2555 0F88                                  l2571 0F2A  
                                l2563 0FEA                                  l2731 0F66  
                                l2723 0F56                                  l2539 0C0C  
                                l2491 0402                                  l2483 03D6  
                                l2651 0B46                                  l2619 0A92  
                                l3451 0778                                  l3435 0742  
                                l3427 0702                                  l3419 06F2  
                                l3531 0216                                  l3523 01D2  
                                l3507 0140                                  l3515 0188  
                                l2459 0E98                                  l3611 0612  
                                l3603 05F8                                  l2389 1044  
                                l2581 0E50                                  l2557 0F8A  
                                l2549 0F6C                                  l2573 0F42  
                                l2565 0FF2                                  l2725 0F5A  
                                l2717 0F4A                                  l2733 104E  
                                l2493 0408                                  l2485 03E4  
                                l2477 032E                                  l2653 0B62  
                                l2637 0ABA                                  l3461 07A6  
                                l3453 0780                                  l3437 0746  
                                l3533 0236                                  l3525 01E2  
                                l3517 0196                                  l3509 015E  
                                l3613 0614                                  l3605 05FC  
                                l3621 0632                                  l2591 0E64  
                                l2583 0E54                                  l2559 1030  
                                l2575 0F44                                  l2567 0FF8  
                                l2727 0F5E                                  l2719 0F4E  
                                l2735 1024                                  l2495 040C  
                                l2479 03B2                                  l2647 0B2E  
                                l2639 0B22                                  l3463 07A8  
                                l3455 0784                                  l3447 0756  
                                l3439 074A                                  l3551 02B6  
                                l3535 023A                                  l3543 0286  
                                l3527 01E6                                  l3519 01A0  
                                l3631 0662                                  l3623 0636  
                                l3615 0624                                  l3607 05FE  
                                l2593 0E68                                  l2585 0E58  
                                l2577 0E34                                  l2569 0F22  
                                l2729 0F62                                  l2737 102A  
                                l2497 0410                                  l2489 03F6  
                                l2649 0B42                                  l3465 07B2  
                                l3457 079C                                  l3449 0766  
                                l3481 0D18                                  l3561 02EE  
                                l3545 0294                                  l3537 0248  
                                l3529 01FC                                  l3553 02BE  
                                l2681 0DFA                                  l3641 06BE  
                                l3633 0674                                  l3625 063A  
                                l3609 060E                                  l3617 0628  
                                l2595 0E6C                                  l2587 0E5C  
                                l2579 0E38                                  l2739 0FC4  
                                l2499 042C                                  l3459 07A4  
                                l3467 07B4                                  l3475 0CD2  
                                l3555 02D6                                  l3563 02F4  
                                l3547 029E                                  l3539 0262  
                                l3491 00B0                                  l3483 0068  
                                l2691 0E10                                  l2683 0DFC  
                                l3643 06C6                                  l3635 0686  
                                l3627 063E                                  l3619 062C  
                                l2597 0E72                                  l2589 0E60  
                                l2677 1018                                  l3477 0CFC  
                                l3469 0CBC                                  l3557 02D8  
                                l3549 02A6                                  l3493 00CE  
                                l3485 0076                                  l2693 0E14  
                                l2765 0EBA                                  l3645 06CA  
                                l3637 069E                                  l3629 0650  
                                l2599 0E76                                  l3479 0D00  
                                l3559 02EA                                  l3495 00D6  
                                l3487 0090                                  l2679 0DE4  
                                l3639 06AE                                  l3591 05C8  
                                l3583 05B4                                  l3497 00F4  
                                l3489 009E                                  l2689 0E04  
                                l3593 05CA                                  l3585 05BC  
                                l3499 00F8                                  l3595 05CC  
                                l3587 05C0                                  l3597 05E0  
                                l3589 05C4                                  l3599 05E4  
                                STR_1 FFF9                          _triggerAlarm 094C  
                                u1200 081A                                  u1201 0816  
                                u1210 0838                                  u1211 0834  
                                u1220 0854                                  u1221 0850  
                                u1230 087A                                  u1310 054A  
                                u1231 0876                                  u1311 0546  
                                u1240 08F0                                  u1320 056A  
                                u1304 0512                                  u1400 035C  
                                u3000 0686                                  u1241 08EC  
                                u1321 0566                                  u1305 050E  
                                u3001 0682                                  u1170 0FC0  
                                u1250 0948                                  u1330 05B2  
                                u3010 06AE                                  u1171 0FBC  
                                u1251 0944                                  u1331 05AE  
                                u3011 06AA                                  u1500 0B80  
                                u1180 07DA                                  u1420 03B2  
                                u3020 06BE                                  u1501 0B7C  
                                u1181 07D6                                  u1421 03AE  
                                u3021 06BA                                  _LATA 0F89  
                                u1510 0B9A                                  u1190 07F4  
                                u1414 0398                                  _LATB 0F8A  
                                u1511 0B96                                  u1191 07F0  
                                u1271 048C                                  u1415 0394  
                                u1407 0352                                  _LATC 0F8B  
                                u1520 0BB4                                  u1440 03E4  
                                u2400 0D8A                                  u1521 0BB0  
                                u1441 03E0                                  u2401 0D86  
                                u1530 0BD2                                  u1290 04F6  
                                u1450 03F2                                  u1434 03C6  
                                u1531 0BCE                                  u1291 04F2  
                                u1451 03EE                                  u1435 03C2  
                                u3107 0254                                  u1540 0BE8  
                                u1284 04DC                                  u1460 042C  
                                u1620 0E30                                  u1541 0BE4  
                                u1285 04D8                                  u1461 0428  
                                u1621 0E2C                                  u3037 097C  
                                u1550 0C0C                                  u1470 043E  
                                u1390 0EB4                                  u1551 0C08  
                                u1471 043A                                  u1391 0EB0  
                                u3047 09B8                                  u1480 0470  
                                u1560 0AAE                                  u2360 0970  
                                u1561 0AAA                                  u3057 09D8  
                                u2361 096C                                  u1650 0FD4  
                                u1490 0480                                  u2370 0998  
                                u1651 0FCE                                  u1491 047C  
                                u3067 0082                                  u2371 0994  
                                u1580 0B62                                  u2380 0A04  
                                u1581 0B5E                                  u3077 0112  
                                u2381 0A00                                  u2710 0726  
                                u2390 0D76                                  u1487 0466  
                                u2295 0F1E                                  u2711 0722  
                                u3087 01AC                                  u2391 0D72  
                                u1656 0FD6                                  u2296 0F20  
                                u2720 0778                                  u2800 0106  
                                u2560 0DA2                                  u2721 0774  
                                u3097 0208                                  u2801 0102  
                                u2561 0D9E                                  u2730 0794  
                                u2810 012E                                  u2570 0DB2  
                                u2731 0790                                  u2811 012A  
                                u2571 0DAE                                  u2900 02D6  
                                u2820 0140                                  u2580 0DC4  
                                u2901 02D2                                  u2821 013C  
                                u2581 0DC0                                  u2750 07C6  
                                u2910 02EA                                  u2830 0196  
                                u2590 0DD6                                  u2751 07C2  
                                u2911 02E6                                  u2831 0192  
                                u2591 0DD2                                  u2760 0D10  
                                u2840 01D2                                  u2745 07B0  
                                u2761 0D0C                                  u2841 01CE  
                                u2746 07B2                                  u2850 01E2  
                                u2770 0076                                  u2930 05E0  
                                u2851 01DE                                  u2771 0072  
                                u2931 05DC                                  u2860 01FC  
                                u2780 009E                                  u2940 05F8  
                                u2861 01F8                                  u2781 009A  
                                u2941 05F4                                  u2870 0248  
                                u2790 00B0                                  u2950 060E  
                                u2871 0244                                  u2791 00AC  
                                u2951 060A                                  u2880 0294  
                                u2960 0624                                  u2881 0290  
                                u2961 0620                                  u2890 02B6  
                                u2970 0650                                  u2891 02B2  
                                u2971 064C                                  u2980 0662  
                                u2981 065E                                  u2990 0674  
                                u2991 0670                                  _TMR2 0FCC  
                                _WPUB 0F7C                                  _main 05B4  
                     _TMR0_StartTimer 104E                                  fsr1h 0FE2  
                                fsr2h 0FDA                                  indf1 0FE7  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9                                  btemp 005C  
                        printString@i 0053                          printString@j 0057  
                        printString@k 0055                     ?_FLASH_WriteBlock 0009  
                                prodl 0FF3                                  start 0064  
              __end_of_SPI_Initialize 100A                          ?_flushBuffer 0001  
                  ??_FLASH_WriteBlock 000F                          ___param_bank 0000  
         saveTimeToFlash@flashAddress 0140                  __end_of_clearDisplay 0EBA  
         checkButtons@button3HoldTime 00BA               __end_of_PWM2_Initialize 1018  
             __end_of_TMR0_Initialize 0F4A         __end_of_OSCILLATOR_Initialize 103A  
                               ?_main 0001                       __end_of___awdiv 088C  
                   ??_saveTimeToFlash 0018                                 _EEADR 0FA9  
                     __end_of___awmod 0C1E                                 _ANSEL 0F7E  
                               _T0CON 0FD5                       ___awdiv@divisor 0006  
                               _T2CON 0FCA                                 i2l520 0CBA  
                               i2l361 0058                                 i2l523 0CBA  
                               i2l358 0034                       ___awdiv@counter 0008  
                               _RCREG 0FAE                                 _RCSTA 0FAB  
                               _TMR0H 0FD7                                 _TMR0L 0FD6  
                               _SPBRG 0FAF                                 _TRISA 0F92  
                               _TRISB 0F93                                 _TRISC 0F94  
                               _TXREG 0FAD                                 _TXSTA 0FAC  
                               _hours 00CE                          displayTime@i 00DD  
                    _button3PressTime 00BC                       max7219_cmd@Addr 0008  
                               tablat 0FF5                       max7219_cmd@data 0005  
                               ttemp5 005D                                 ttemp6 0060  
                               ttemp7 0064                                 status 0FD8  
                               wtemp8 005D                       ?_SPI_Initialize 0001  
                      _alarmTriggered 00C7                       __initialization 0F8E  
                        __end_of_main 06DA               FLASH_ReadByte@flashAddr 0004  
             __end_of_TMR2_Initialize 0FFC           ?_INTERRUPT_InterruptManager 0001  
      ??_EUSART_SetRxInterruptHandler 0006                                ??_main 0059  
                       __activetblptr 0003              __end_of_SPI_Exchange8bit 0FC4  
             __end_of_TMR0_StartTimer 1052             FLASH_WriteBlock@writeAddr 0009  
                              _EEADRH 0FAA                                _EEDATA 0FA8  
                              _CCPR2H 0FBC                                _CCPR2L 0FBB  
                              _EECON2 0FA7                      ___awdiv@dividend 0004  
                              _ANSELH 0F7F                                i2l3021 0020  
                              i2l3023 002E                                i2l3025 0042  
                              i2l3027 0050                                i2l3019 0012  
                              i2l3029 0056                                i2l2751 0C54  
                              i2l2743 0C20                                i2l2761 0C96  
                              i2l2753 0C64                                i2l2745 0C32  
                              i2l2763 0CA8                                i2l2755 0C74  
                              i2l2747 0C42                                i2l2749 0C4E  
                              i2l2759 0C84                                _TABLAT 0FF5  
                              _OSCCON 0FD3                                _SPBRGH 0FB0  
                              _SSPADD 0FC8                                _SSPBUF 0FC9  
               triggerAlarm@numCycles 00D5                          ?_TMR0_Reload 0001  
                       main@hours_pom 00E1                             ??___awdiv 0008  
                           ??___awmod 0008                   _EUSART_Transmit_ISR 0000  
                    ?_TMR0_Initialize 0001                      ?_PWM2_Initialize 0001  
                              clear_0 0F94                      ___awdiv@quotient 000A  
                     ___awmod@divisor 0006                                isa$std 0001  
                     ___awmod@counter 0008                      flushBuffer@F2573 0060  
               displayTime@timeString 00D8                        printString@str 0044  
                   displayAlarmTime@i 00DD           FLASH_WriteBlock@dataCounter 0016  
                   ?_displayAlarmTime 0001                          __mediumconst F7F8  
                              tblptrh 0FF7                                tblptrl 0FF6  
                              tblptru 0FF8                          _checkButtons 0068  
                  ??_displayAlarmTime 0059                          ?_printString 0044  
                   _SYSTEM_Initialize 0F4A                            __accesstop 0060  
             __end_of__initialization 0FA0                    ?_SYSTEM_Initialize 0001  
                       ___rparam_used 0001  __end_of_EUSART_SetTxInterruptHandler 1044  
        _EUSART_SetTxInterruptHandler 103A                        __pcstackCOMRAM 0001  
                 ??_SYSTEM_Initialize 0006                          _alarmMinutes 00CA  
                    ?_TMR2_Initialize 0001       __end_of_MAX7219_Dot_Matrix_font FFF9  
         FLASH_WriteBlock@GIEBitValue 0013                          _clearDisplay 0E82  
                    ?_TMR0_StartTimer 0001             __end_of_SYSTEM_Initialize 0F6C  
                      flushBuffer@dev 003C                        flushBuffer@row 0040  
                          __pbssBANK0 0060                            _alarmHours 00CB  
                          _clearAlarm 1018         displayAlarmTime@displayString 00D3  
                        flushBuffer@i 0042                          flushBuffer@j 003E  
                     _saveTimeToFlash 0CBC         ?_EUSART_SetTxInterruptHandler 0004  
    _EUSART_TxDefaultInterruptHandler 00E5                            _blinkTimer 00BE  
                             _CCP2CON 0FBA                               _BAUDCON 0FB8  
                      _FLASH_ReadByte 0FD8                         _eusartRxCount 00CF  
                   __end_of_btGetData 0CBC                               _TBLPTRH 0FF7  
                             _TBLPTRL 0FF6                               _TBLPTRU 0FF8  
                             _OSCTUNE 0F9B                               _SSPCON1 0FC6  
                             _SSPSTAT 0FC7               _TMR0_HasOverflowOccured 0FC4  
                    _FLASH_EraseBlock 0EEE                      ??_SPI_Initialize 0004  
 EUSART_SetTxInterruptHandler@handler 0004                               __Hparam 0000  
                             __Lparam 0000                               ___awdiv 07C8  
                             ___awmod 0B6E                      _isButton3Pressed 00C5  
              __end_of_FLASH_ReadByte 0FEA                               __pcinit 0F8E  
                             __ramtop 1000                            _matrixInit 0EBA  
                             __ptext0 05B4                               __ptext1 0D90  
                             __ptext2 094C                               __ptext3 0E82  
                             __ptext4 0EBA                               __ptext5 0DE2  
                             __ptext6 0D36                               __ptext7 0068  
                             __ptext8 0CBC                               __ptext9 06DA  
                           _T0CONbits 0FD5                         ??_max7219_cmd 0006  
               _OSCILLATOR_Initialize 1030                             _T2CONbits 0FCA  
                    ___awmod@dividend 0004                     __end_of_max_write 094C  
                             _minutes 00CD              ??_PIN_MANAGER_Initialize 0004  
                             _seconds 00CC                     ?_SPI_Exchange8bit 0001  
                end_of_initialization 0FA0                       printString@data 0050  
                       triggerAlarm@i 00D7                    ??_SPI_Exchange8bit 0004  
                     printString@indx 004E                  SPI_Exchange8bit@data 0004  
             __end_of_saveTimeToFlash 0D36                           ?_clearAlarm 0001  
                   _EUSART_Initialize 0E34                          max_write@dev 0015  
                          _uartBuffer 00A0                          btGetData@rcv 0001  
                  ?_EUSART_Initialize 0001                          max_write@row 000C  
                           _RCSTAbits 0FAB                               postinc0 0FEE  
                             postinc2 0FDE                       ?_FLASH_ReadByte 0004  
                 ??_EUSART_Initialize 0006                      saveTimeToFlash@i 0144  
      ??_EUSART_SetTxInterruptHandler 0006                     _loadTimeFromFlash 0D36  
                       ?_processAlarm 0001                             _PORTBbits 0F81  
                       clearDisplay@i 0044                    ?_loadTimeFromFlash 0001  
           ??_TMR0_HasOverflowOccured 0004         FLASH_WriteBlock@flashWrBufPtr 000D  
                 ??_loadTimeFromFlash 0008                   __end_of_max7219_cmd 0E34  
            FLASH_EraseBlock@baseAddr 0004             __end_of_EUSART_Initialize 0E82  
                           _TXSTAbits 0FAC                     FLASH_WriteBlock@i 0017  
                   FLASH_WriteBlock@j 0014            saveTimeToFlash@flashBuffer 0100  
        __end_of_INTERRUPT_Initialize 1056                         ??_displayTime 0059  
           __end_of_loadTimeFromFlash 0D90                        ??_processAlarm 0059  
                         ?_matrixInit 0001          checkButtons@alarmSettingMode 00C2  
                    _FLASH_WriteBlock 06DA                ?_OSCILLATOR_Initialize 0001  
                 start_initialization 0F8E                         ?_triggerAlarm 0001  
                    ?_saveTimeToFlash 0001                    printString@strindx 0051  
                       ??_flushBuffer 0019       displayAlarmTime@alarmTimeString 00D8  
         FLASH_EraseBlock@GIEBitValue 0008              __end_of_FLASH_EraseBlock 0F22  
                 __end_of_displayTime 0ABA                           _max7219_cmd 0DE2  
                         __pbssCOMRAM 0059                           _alarmActive 00C8  
                       __pcstackBANK0 00D3                         __pcstackBANK1 0100  
                      ??_triggerAlarm 00D3                          max7219_cmd@i 000B  
                           _btGetData 0C1E      _EUSART_RxDefaultInterruptHandler 00E3  
             _MAX7219_Dot_Matrix_font F7F9                             __pnvBANK0 00E3  
                           _btTimeSet 00C4                _PIN_MANAGER_Initialize 0F6C  
                           __pintcode 0008                         __pmediumconst F7F8  
                            ?___awdiv 0004                              ?___awmod 0004  
                        _eusartRxHead 00D1                          _eusartTxHead 005B  
                        _eusartRxTail 00D0                   __end_of_flushBuffer 05B4  
                        _eusartTxTail 005A                             _bufferCol 0080  
        ??_INTERRUPT_InterruptManager 0002               _eusartTxBufferRemaining 00D2  
                           _max_write 088C                  _INTERRUPT_Initialize 1052  
                          ?_btGetData 0001        FLASH_WriteBlock@blockStartAddr 000F  
                      _eusartRxBuffer 00AA                     ??_TMR0_Initialize 0004  
                   ??_PWM2_Initialize 0004                        _eusartTxBuffer 00B2  
                __end_of_processAlarm 0DE2                              _LATCbits 0F8B  
                        ??_clearAlarm 0004                              _PIE1bits 0F9D  
                    _displayAlarmTime 0ABA                              i2u214_40 0020  
                            i2u214_41 001C                              i2u215_40 002E  
                            i2u215_41 002A                              i2u216_40 0042  
                            i2u216_41 003E                              i2u217_40 0050  
                            i2u217_41 004C                       max_write@offset 0011  
                            i2u170_40 0C96                              i2u170_41 0C92  
                            i2u171_40 0CA8                              i2u171_41 0CA4  
                            i2u166_40 0C32                              i2u166_41 0C2E  
                            i2u167_40 0C42                              i2u167_41 0C3E  
                            i2u168_40 0C64                              i2u168_41 0C60  
                            i2u169_40 0C74                              i2u169_41 0C70  
                            _PIR1bits 0F9E                      ??_FLASH_ReadByte 0008  
                            _PIR2bits 0FA1                         ??_TMR0_Reload 0004  
                            _RCONbits 0FD0                           _displayTime 0A06  
                  __end_of_clearAlarm 1024                         ?_checkButtons 0001  
                         _INTCON2bits 0FF1                            ?_max_write 000C  
               ?_INTERRUPT_Initialize 0001                         ??_printString 0046  
                   ??_TMR2_Initialize 0004              __end_of_FLASH_WriteBlock 07C8  
                          _EECON1bits 0FA6                              __Hrparam 0000  
                         _flushBuffer 0486                              __Lrparam 0000  
                  max_write@devTarget 0013               ??_OSCILLATOR_Initialize 0004  
                __end_of_triggerAlarm 0A06                     ??_TMR0_StartTimer 0004  
                        ??_matrixInit 000D                   __end_of_TMR0_Reload 1030  
                     main@minutes_pom 00E2                              _alarmSet 00C9  
                      ??_checkButtons 00DF                         ?_clearDisplay 0001  
                            __ptext10 0EEE                              __ptext11 0FD8  
                            __ptext20 1018                              __ptext12 0A06  
                            __ptext21 104E                              __ptext13 0ABA  
                            __ptext30 1030                              __ptext22 1024  
                            __ptext14 02FE                              __ptext31 1052  
                            __ptext23 0FC4                              __ptext15 0486  
                            __ptext32 0E34                              __ptext24 0F4A  
                            __ptext16 088C                              __ptext33 103A  
                            __ptext25 0FEA                              __ptext17 07C8  
                            __ptext34 1044                              __ptext26 0F22  
                            __ptext18 0FAA                              __ptext27 0FFC  
                            __ptext19 0B6E                              __ptext36 0C1E  
                            __ptext28 100A                              __ptext29 0F6C  
                         ??_btGetData 0001                    __end_of_matrixInit 0EEE  
                 __end_of_printString 0486                  flushBuffer@bufferRow 001C  
                     _displayBlinking 00C6                              isa$xinst 0000  
                max7219_cmd@writeData 0009                              int$flags 005C  
  __end_of_INTERRUPT_InterruptManager 0064            _INTERRUPT_InterruptManager 0008  
                   ?_FLASH_EraseBlock 0004   FLASH_WriteBlock@numberOfWriteBlocks 0015  
            ?_TMR0_HasOverflowOccured 0001                          ?_max7219_cmd 0005  
                  ??_FLASH_EraseBlock 0008                            _INTCONbits 0FF2  
                     _uartBufferIndex 0059                        ??_clearDisplay 0044  
              ??_INTERRUPT_Initialize 0004                    max_write@writeData 0017  
                         ??_max_write 000F                              intlevel2 0000  
             ?_PIN_MANAGER_Initialize 0001  __end_of_EUSART_SetRxInterruptHandler 104E  
        _EUSART_SetRxInterruptHandler 1044                         max_write@data 000E  
                    _SPI_Exchange8bit 0FAA                           _TMR0_Reload 1024  
                  _EUSART_Receive_ISR 0000              displayTime@displayString 00D3  
                        _processAlarm 0D90              __end_of_displayAlarmTime 0B6E  
                     _TMR0_Initialize 0F22                       _PWM2_Initialize 100A  
       checkButtons@button3PressCount 00C3                           _SSPCON1bits 0FC6  
      __end_of_PIN_MANAGER_Initialize 0F8E                           _printString 02FE  
