

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 11 20:06:34 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Generated 05/01/2024 GMT
    61                           ; 
    62                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F26K20 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000000                     
    95 ;; Function _EUSART_Transmit_ISR is unused but had its address taken
    96   000000                     
    97 ;; Function _EUSART_Receive_ISR is unused but had its address taken
    98   000000                     
    99                           	psect	mediumconst
   100   00F7F8                     __pmediumconst:
   101                           	callstack 0
   102   00F7F8  00                 	db	0
   103   00F7F9                     _MAX7219_Dot_Matrix_font:
   104                           	callstack 0
   105   00F7F9  00                 	db	0
   106   00F7FA  00                 	db	0
   107   00F7FB  00                 	db	0
   108   00F7FC  00                 	db	0
   109   00F7FD  00                 	db	0
   110   00F7FE  00                 	db	0
   111   00F7FF  00                 	db	0
   112   00F800  00                 	db	0
   113   00F801  7E                 	db	126
   114   00F802  81                 	db	129
   115   00F803  95                 	db	149
   116   00F804  B1                 	db	177
   117   00F805  B1                 	db	177
   118   00F806  95                 	db	149
   119   00F807  81                 	db	129
   120   00F808  7E                 	db	126
   121   00F809  7E                 	db	126
   122   00F80A  FF                 	db	255
   123   00F80B  EB                 	db	235
   124   00F80C  CF                 	db	207
   125   00F80D  CF                 	db	207
   126   00F80E  EB                 	db	235
   127   00F80F  FF                 	db	255
   128   00F810  7E                 	db	126
   129   00F811  0E                 	db	14
   130   00F812  1F                 	db	31
   131   00F813  3F                 	db	63
   132   00F814  7E                 	db	126
   133   00F815  3F                 	db	63
   134   00F816  1F                 	db	31
   135   00F817  0E                 	db	14
   136   00F818  00                 	db	0
   137   00F819  08                 	db	8
   138   00F81A  1C                 	db	28
   139   00F81B  3E                 	db	62
   140   00F81C  7F                 	db	127
   141   00F81D  3E                 	db	62
   142   00F81E  1C                 	db	28
   143   00F81F  08                 	db	8
   144   00F820  00                 	db	0
   145   00F821  18                 	db	24
   146   00F822  BA                 	db	186
   147   00F823  FF                 	db	255
   148   00F824  FF                 	db	255
   149   00F825  FF                 	db	255
   150   00F826  BA                 	db	186
   151   00F827  18                 	db	24
   152   00F828  00                 	db	0
   153   00F829  10                 	db	16
   154   00F82A  B8                 	db	184
   155   00F82B  FC                 	db	252
   156   00F82C  FF                 	db	255
   157   00F82D  FC                 	db	252
   158   00F82E  B8                 	db	184
   159   00F82F  10                 	db	16
   160   00F830  00                 	db	0
   161   00F831  00                 	db	0
   162   00F832  00                 	db	0
   163   00F833  18                 	db	24
   164   00F834  3C                 	db	60
   165   00F835  3C                 	db	60
   166   00F836  18                 	db	24
   167   00F837  00                 	db	0
   168   00F838  00                 	db	0
   169   00F839  FF                 	db	255
   170   00F83A  FF                 	db	255
   171   00F83B  E7                 	db	231
   172   00F83C  C3                 	db	195
   173   00F83D  C3                 	db	195
   174   00F83E  E7                 	db	231
   175   00F83F  FF                 	db	255
   176   00F840  FF                 	db	255
   177   00F841  00                 	db	0
   178   00F842  3C                 	db	60
   179   00F843  66                 	db	102
   180   00F844  42                 	db	66
   181   00F845  42                 	db	66
   182   00F846  66                 	db	102
   183   00F847  3C                 	db	60
   184   00F848  00                 	db	0
   185   00F849  FF                 	db	255
   186   00F84A  C3                 	db	195
   187   00F84B  99                 	db	153
   188   00F84C  BD                 	db	189
   189   00F84D  BD                 	db	189
   190   00F84E  99                 	db	153
   191   00F84F  C3                 	db	195
   192   00F850  FF                 	db	255
   193   00F851  70                 	db	112
   194   00F852  F8                 	db	248
   195   00F853  88                 	db	136
   196   00F854  88                 	db	136
   197   00F855  FD                 	db	253
   198   00F856  7F                 	db	127
   199   00F857  07                 	db	7
   200   00F858  0F                 	db	15
   201   00F859  00                 	db	0
   202   00F85A  4E                 	db	78
   203   00F85B  5F                 	db	95
   204   00F85C  F1                 	db	241
   205   00F85D  F1                 	db	241
   206   00F85E  5F                 	db	95
   207   00F85F  4E                 	db	78
   208   00F860  00                 	db	0
   209   00F861  C0                 	db	192
   210   00F862  E0                 	db	224
   211   00F863  FF                 	db	255
   212   00F864  7F                 	db	127
   213   00F865  05                 	db	5
   214   00F866  05                 	db	5
   215   00F867  07                 	db	7
   216   00F868  07                 	db	7
   217   00F869  C0                 	db	192
   218   00F86A  FF                 	db	255
   219   00F86B  7F                 	db	127
   220   00F86C  05                 	db	5
   221   00F86D  05                 	db	5
   222   00F86E  65                 	db	101
   223   00F86F  7F                 	db	127
   224   00F870  3F                 	db	63
   225   00F871  99                 	db	153
   226   00F872  5A                 	db	90
   227   00F873  3C                 	db	60
   228   00F874  E7                 	db	231
   229   00F875  E7                 	db	231
   230   00F876  3C                 	db	60
   231   00F877  5A                 	db	90
   232   00F878  99                 	db	153
   233   00F879  7F                 	db	127
   234   00F87A  3E                 	db	62
   235   00F87B  3E                 	db	62
   236   00F87C  1C                 	db	28
   237   00F87D  1C                 	db	28
   238   00F87E  08                 	db	8
   239   00F87F  08                 	db	8
   240   00F880  00                 	db	0
   241   00F881  08                 	db	8
   242   00F882  08                 	db	8
   243   00F883  1C                 	db	28
   244   00F884  1C                 	db	28
   245   00F885  3E                 	db	62
   246   00F886  3E                 	db	62
   247   00F887  7F                 	db	127
   248   00F888  00                 	db	0
   249   00F889  00                 	db	0
   250   00F88A  24                 	db	36
   251   00F88B  66                 	db	102
   252   00F88C  FF                 	db	255
   253   00F88D  FF                 	db	255
   254   00F88E  66                 	db	102
   255   00F88F  24                 	db	36
   256   00F890  00                 	db	0
   257   00F891  00                 	db	0
   258   00F892  5F                 	db	95
   259   00F893  5F                 	db	95
   260   00F894  00                 	db	0
   261   00F895  00                 	db	0
   262   00F896  5F                 	db	95
   263   00F897  5F                 	db	95
   264   00F898  00                 	db	0
   265   00F899  06                 	db	6
   266   00F89A  0F                 	db	15
   267   00F89B  09                 	db	9
   268   00F89C  7F                 	db	127
   269   00F89D  7F                 	db	127
   270   00F89E  01                 	db	1
   271   00F89F  7F                 	db	127
   272   00F8A0  7F                 	db	127
   273   00F8A1  40                 	db	64
   274   00F8A2  DA                 	db	218
   275   00F8A3  BF                 	db	191
   276   00F8A4  A5                 	db	165
   277   00F8A5  FD                 	db	253
   278   00F8A6  59                 	db	89
   279   00F8A7  03                 	db	3
   280   00F8A8  02                 	db	2
   281   00F8A9  00                 	db	0
   282   00F8AA  70                 	db	112
   283   00F8AB  70                 	db	112
   284   00F8AC  70                 	db	112
   285   00F8AD  70                 	db	112
   286   00F8AE  70                 	db	112
   287   00F8AF  70                 	db	112
   288   00F8B0  00                 	db	0
   289   00F8B1  80                 	db	128
   290   00F8B2  94                 	db	148
   291   00F8B3  B6                 	db	182
   292   00F8B4  FF                 	db	255
   293   00F8B5  FF                 	db	255
   294   00F8B6  B6                 	db	182
   295   00F8B7  94                 	db	148
   296   00F8B8  80                 	db	128
   297   00F8B9  00                 	db	0
   298   00F8BA  04                 	db	4
   299   00F8BB  06                 	db	6
   300   00F8BC  7F                 	db	127
   301   00F8BD  7F                 	db	127
   302   00F8BE  06                 	db	6
   303   00F8BF  04                 	db	4
   304   00F8C0  00                 	db	0
   305   00F8C1  00                 	db	0
   306   00F8C2  10                 	db	16
   307   00F8C3  30                 	db	48
   308   00F8C4  7F                 	db	127
   309   00F8C5  7F                 	db	127
   310   00F8C6  30                 	db	48
   311   00F8C7  10                 	db	16
   312   00F8C8  00                 	db	0
   313   00F8C9  08                 	db	8
   314   00F8CA  08                 	db	8
   315   00F8CB  08                 	db	8
   316   00F8CC  2A                 	db	42
   317   00F8CD  3E                 	db	62
   318   00F8CE  1C                 	db	28
   319   00F8CF  08                 	db	8
   320   00F8D0  00                 	db	0
   321   00F8D1  08                 	db	8
   322   00F8D2  1C                 	db	28
   323   00F8D3  3E                 	db	62
   324   00F8D4  2A                 	db	42
   325   00F8D5  08                 	db	8
   326   00F8D6  08                 	db	8
   327   00F8D7  08                 	db	8
   328   00F8D8  00                 	db	0
   329   00F8D9  3C                 	db	60
   330   00F8DA  3C                 	db	60
   331   00F8DB  20                 	db	32
   332   00F8DC  20                 	db	32
   333   00F8DD  20                 	db	32
   334   00F8DE  20                 	db	32
   335   00F8DF  20                 	db	32
   336   00F8E0  00                 	db	0
   337   00F8E1  08                 	db	8
   338   00F8E2  1C                 	db	28
   339   00F8E3  3E                 	db	62
   340   00F8E4  08                 	db	8
   341   00F8E5  08                 	db	8
   342   00F8E6  3E                 	db	62
   343   00F8E7  1C                 	db	28
   344   00F8E8  08                 	db	8
   345   00F8E9  30                 	db	48
   346   00F8EA  38                 	db	56
   347   00F8EB  3C                 	db	60
   348   00F8EC  3E                 	db	62
   349   00F8ED  3E                 	db	62
   350   00F8EE  3C                 	db	60
   351   00F8EF  38                 	db	56
   352   00F8F0  30                 	db	48
   353   00F8F1  06                 	db	6
   354   00F8F2  0E                 	db	14
   355   00F8F3  1E                 	db	30
   356   00F8F4  3E                 	db	62
   357   00F8F5  3E                 	db	62
   358   00F8F6  1E                 	db	30
   359   00F8F7  0E                 	db	14
   360   00F8F8  06                 	db	6
   361   00F8F9  00                 	db	0
   362   00F8FA  00                 	db	0
   363   00F8FB  00                 	db	0
   364   00F8FC  00                 	db	0
   365   00F8FD  00                 	db	0
   366   00F8FE  00                 	db	0
   367   00F8FF  00                 	db	0
   368   00F900  00                 	db	0
   369   00F901  00                 	db	0
   370   00F902  06                 	db	6
   371   00F903  5F                 	db	95
   372   00F904  5F                 	db	95
   373   00F905  06                 	db	6
   374   00F906  00                 	db	0
   375   00F907  00                 	db	0
   376   00F908  00                 	db	0
   377   00F909  00                 	db	0
   378   00F90A  07                 	db	7
   379   00F90B  07                 	db	7
   380   00F90C  00                 	db	0
   381   00F90D  07                 	db	7
   382   00F90E  07                 	db	7
   383   00F90F  00                 	db	0
   384   00F910  00                 	db	0
   385   00F911  14                 	db	20
   386   00F912  7F                 	db	127
   387   00F913  7F                 	db	127
   388   00F914  14                 	db	20
   389   00F915  7F                 	db	127
   390   00F916  7F                 	db	127
   391   00F917  14                 	db	20
   392   00F918  00                 	db	0
   393   00F919  24                 	db	36
   394   00F91A  2E                 	db	46
   395   00F91B  6B                 	db	107
   396   00F91C  6B                 	db	107
   397   00F91D  3A                 	db	58
   398   00F91E  12                 	db	18
   399   00F91F  00                 	db	0
   400   00F920  00                 	db	0
   401   00F921  46                 	db	70
   402   00F922  66                 	db	102
   403   00F923  30                 	db	48
   404   00F924  18                 	db	24
   405   00F925  0C                 	db	12
   406   00F926  66                 	db	102
   407   00F927  62                 	db	98
   408   00F928  00                 	db	0
   409   00F929  30                 	db	48
   410   00F92A  7A                 	db	122
   411   00F92B  4F                 	db	79
   412   00F92C  5D                 	db	93
   413   00F92D  37                 	db	55
   414   00F92E  7A                 	db	122
   415   00F92F  48                 	db	72
   416   00F930  00                 	db	0
   417   00F931  04                 	db	4
   418   00F932  07                 	db	7
   419   00F933  03                 	db	3
   420   00F934  00                 	db	0
   421   00F935  00                 	db	0
   422   00F936  00                 	db	0
   423   00F937  00                 	db	0
   424   00F938  00                 	db	0
   425   00F939  00                 	db	0
   426   00F93A  1C                 	db	28
   427   00F93B  3E                 	db	62
   428   00F93C  63                 	db	99
   429   00F93D  41                 	db	65
   430   00F93E  00                 	db	0
   431   00F93F  00                 	db	0
   432   00F940  00                 	db	0
   433   00F941  00                 	db	0
   434   00F942  41                 	db	65
   435   00F943  63                 	db	99
   436   00F944  3E                 	db	62
   437   00F945  1C                 	db	28
   438   00F946  00                 	db	0
   439   00F947  00                 	db	0
   440   00F948  00                 	db	0
   441   00F949  08                 	db	8
   442   00F94A  2A                 	db	42
   443   00F94B  3E                 	db	62
   444   00F94C  1C                 	db	28
   445   00F94D  1C                 	db	28
   446   00F94E  3E                 	db	62
   447   00F94F  2A                 	db	42
   448   00F950  08                 	db	8
   449   00F951  08                 	db	8
   450   00F952  08                 	db	8
   451   00F953  3E                 	db	62
   452   00F954  3E                 	db	62
   453   00F955  08                 	db	8
   454   00F956  08                 	db	8
   455   00F957  00                 	db	0
   456   00F958  00                 	db	0
   457   00F959  00                 	db	0
   458   00F95A  80                 	db	128
   459   00F95B  E0                 	db	224
   460   00F95C  60                 	db	96
   461   00F95D  00                 	db	0
   462   00F95E  00                 	db	0
   463   00F95F  00                 	db	0
   464   00F960  00                 	db	0
   465   00F961  08                 	db	8
   466   00F962  08                 	db	8
   467   00F963  08                 	db	8
   468   00F964  08                 	db	8
   469   00F965  08                 	db	8
   470   00F966  08                 	db	8
   471   00F967  00                 	db	0
   472   00F968  00                 	db	0
   473   00F969  00                 	db	0
   474   00F96A  00                 	db	0
   475   00F96B  60                 	db	96
   476   00F96C  60                 	db	96
   477   00F96D  00                 	db	0
   478   00F96E  00                 	db	0
   479   00F96F  00                 	db	0
   480   00F970  00                 	db	0
   481   00F971  60                 	db	96
   482   00F972  30                 	db	48
   483   00F973  18                 	db	24
   484   00F974  0C                 	db	12
   485   00F975  06                 	db	6
   486   00F976  03                 	db	3
   487   00F977  01                 	db	1
   488   00F978  00                 	db	0
   489   00F979  3E                 	db	62
   490   00F97A  7F                 	db	127
   491   00F97B  71                 	db	113
   492   00F97C  59                 	db	89
   493   00F97D  4D                 	db	77
   494   00F97E  7F                 	db	127
   495   00F97F  3E                 	db	62
   496   00F980  00                 	db	0
   497   00F981  40                 	db	64
   498   00F982  42                 	db	66
   499   00F983  7F                 	db	127
   500   00F984  7F                 	db	127
   501   00F985  40                 	db	64
   502   00F986  40                 	db	64
   503   00F987  00                 	db	0
   504   00F988  00                 	db	0
   505   00F989  62                 	db	98
   506   00F98A  73                 	db	115
   507   00F98B  59                 	db	89
   508   00F98C  49                 	db	73
   509   00F98D  6F                 	db	111
   510   00F98E  66                 	db	102
   511   00F98F  00                 	db	0
   512   00F990  00                 	db	0
   513   00F991  22                 	db	34
   514   00F992  63                 	db	99
   515   00F993  49                 	db	73
   516   00F994  49                 	db	73
   517   00F995  7F                 	db	127
   518   00F996  36                 	db	54
   519   00F997  00                 	db	0
   520   00F998  00                 	db	0
   521   00F999  18                 	db	24
   522   00F99A  1C                 	db	28
   523   00F99B  16                 	db	22
   524   00F99C  53                 	db	83
   525   00F99D  7F                 	db	127
   526   00F99E  7F                 	db	127
   527   00F99F  50                 	db	80
   528   00F9A0  00                 	db	0
   529   00F9A1  27                 	db	39
   530   00F9A2  67                 	db	103
   531   00F9A3  45                 	db	69
   532   00F9A4  45                 	db	69
   533   00F9A5  7D                 	db	125
   534   00F9A6  39                 	db	57
   535   00F9A7  00                 	db	0
   536   00F9A8  00                 	db	0
   537   00F9A9  3C                 	db	60
   538   00F9AA  7E                 	db	126
   539   00F9AB  4B                 	db	75
   540   00F9AC  49                 	db	73
   541   00F9AD  79                 	db	121
   542   00F9AE  30                 	db	48
   543   00F9AF  00                 	db	0
   544   00F9B0  00                 	db	0
   545   00F9B1  03                 	db	3
   546   00F9B2  03                 	db	3
   547   00F9B3  71                 	db	113
   548   00F9B4  79                 	db	121
   549   00F9B5  0F                 	db	15
   550   00F9B6  07                 	db	7
   551   00F9B7  00                 	db	0
   552   00F9B8  00                 	db	0
   553   00F9B9  36                 	db	54
   554   00F9BA  7F                 	db	127
   555   00F9BB  49                 	db	73
   556   00F9BC  49                 	db	73
   557   00F9BD  7F                 	db	127
   558   00F9BE  36                 	db	54
   559   00F9BF  00                 	db	0
   560   00F9C0  00                 	db	0
   561   00F9C1  06                 	db	6
   562   00F9C2  4F                 	db	79
   563   00F9C3  49                 	db	73
   564   00F9C4  69                 	db	105
   565   00F9C5  3F                 	db	63
   566   00F9C6  1E                 	db	30
   567   00F9C7  00                 	db	0
   568   00F9C8  00                 	db	0
   569   00F9C9  00                 	db	0
   570   00F9CA  00                 	db	0
   571   00F9CB  66                 	db	102
   572   00F9CC  66                 	db	102
   573   00F9CD  00                 	db	0
   574   00F9CE  00                 	db	0
   575   00F9CF  00                 	db	0
   576   00F9D0  00                 	db	0
   577   00F9D1  00                 	db	0
   578   00F9D2  80                 	db	128
   579   00F9D3  E6                 	db	230
   580   00F9D4  66                 	db	102
   581   00F9D5  00                 	db	0
   582   00F9D6  00                 	db	0
   583   00F9D7  00                 	db	0
   584   00F9D8  00                 	db	0
   585   00F9D9  08                 	db	8
   586   00F9DA  1C                 	db	28
   587   00F9DB  36                 	db	54
   588   00F9DC  63                 	db	99
   589   00F9DD  41                 	db	65
   590   00F9DE  00                 	db	0
   591   00F9DF  00                 	db	0
   592   00F9E0  00                 	db	0
   593   00F9E1  24                 	db	36
   594   00F9E2  24                 	db	36
   595   00F9E3  24                 	db	36
   596   00F9E4  24                 	db	36
   597   00F9E5  24                 	db	36
   598   00F9E6  24                 	db	36
   599   00F9E7  00                 	db	0
   600   00F9E8  00                 	db	0
   601   00F9E9  00                 	db	0
   602   00F9EA  41                 	db	65
   603   00F9EB  63                 	db	99
   604   00F9EC  36                 	db	54
   605   00F9ED  1C                 	db	28
   606   00F9EE  08                 	db	8
   607   00F9EF  00                 	db	0
   608   00F9F0  00                 	db	0
   609   00F9F1  02                 	db	2
   610   00F9F2  03                 	db	3
   611   00F9F3  51                 	db	81
   612   00F9F4  59                 	db	89
   613   00F9F5  0F                 	db	15
   614   00F9F6  06                 	db	6
   615   00F9F7  00                 	db	0
   616   00F9F8  00                 	db	0
   617   00F9F9  3E                 	db	62
   618   00F9FA  7F                 	db	127
   619   00F9FB  41                 	db	65
   620   00F9FC  5D                 	db	93
   621   00F9FD  5D                 	db	93
   622   00F9FE  1F                 	db	31
   623   00F9FF  1E                 	db	30
   624   00FA00  00                 	db	0
   625   00FA01  7C                 	db	124
   626   00FA02  7E                 	db	126
   627   00FA03  13                 	db	19
   628   00FA04  13                 	db	19
   629   00FA05  7E                 	db	126
   630   00FA06  7C                 	db	124
   631   00FA07  00                 	db	0
   632   00FA08  00                 	db	0
   633   00FA09  41                 	db	65
   634   00FA0A  7F                 	db	127
   635   00FA0B  7F                 	db	127
   636   00FA0C  49                 	db	73
   637   00FA0D  49                 	db	73
   638   00FA0E  7F                 	db	127
   639   00FA0F  36                 	db	54
   640   00FA10  00                 	db	0
   641   00FA11  1C                 	db	28
   642   00FA12  3E                 	db	62
   643   00FA13  63                 	db	99
   644   00FA14  41                 	db	65
   645   00FA15  41                 	db	65
   646   00FA16  63                 	db	99
   647   00FA17  22                 	db	34
   648   00FA18  00                 	db	0
   649   00FA19  41                 	db	65
   650   00FA1A  7F                 	db	127
   651   00FA1B  7F                 	db	127
   652   00FA1C  41                 	db	65
   653   00FA1D  63                 	db	99
   654   00FA1E  3E                 	db	62
   655   00FA1F  1C                 	db	28
   656   00FA20  00                 	db	0
   657   00FA21  41                 	db	65
   658   00FA22  7F                 	db	127
   659   00FA23  7F                 	db	127
   660   00FA24  49                 	db	73
   661   00FA25  5D                 	db	93
   662   00FA26  41                 	db	65
   663   00FA27  63                 	db	99
   664   00FA28  00                 	db	0
   665   00FA29  41                 	db	65
   666   00FA2A  7F                 	db	127
   667   00FA2B  7F                 	db	127
   668   00FA2C  49                 	db	73
   669   00FA2D  1D                 	db	29
   670   00FA2E  01                 	db	1
   671   00FA2F  03                 	db	3
   672   00FA30  00                 	db	0
   673   00FA31  1C                 	db	28
   674   00FA32  3E                 	db	62
   675   00FA33  63                 	db	99
   676   00FA34  41                 	db	65
   677   00FA35  51                 	db	81
   678   00FA36  73                 	db	115
   679   00FA37  72                 	db	114
   680   00FA38  00                 	db	0
   681   00FA39  7F                 	db	127
   682   00FA3A  7F                 	db	127
   683   00FA3B  08                 	db	8
   684   00FA3C  08                 	db	8
   685   00FA3D  7F                 	db	127
   686   00FA3E  7F                 	db	127
   687   00FA3F  00                 	db	0
   688   00FA40  00                 	db	0
   689   00FA41  00                 	db	0
   690   00FA42  41                 	db	65
   691   00FA43  7F                 	db	127
   692   00FA44  7F                 	db	127
   693   00FA45  41                 	db	65
   694   00FA46  00                 	db	0
   695   00FA47  00                 	db	0
   696   00FA48  00                 	db	0
   697   00FA49  30                 	db	48
   698   00FA4A  70                 	db	112
   699   00FA4B  40                 	db	64
   700   00FA4C  41                 	db	65
   701   00FA4D  7F                 	db	127
   702   00FA4E  3F                 	db	63
   703   00FA4F  01                 	db	1
   704   00FA50  00                 	db	0
   705   00FA51  41                 	db	65
   706   00FA52  7F                 	db	127
   707   00FA53  7F                 	db	127
   708   00FA54  08                 	db	8
   709   00FA55  1C                 	db	28
   710   00FA56  77                 	db	119
   711   00FA57  63                 	db	99
   712   00FA58  00                 	db	0
   713   00FA59  41                 	db	65
   714   00FA5A  7F                 	db	127
   715   00FA5B  7F                 	db	127
   716   00FA5C  41                 	db	65
   717   00FA5D  40                 	db	64
   718   00FA5E  60                 	db	96
   719   00FA5F  70                 	db	112
   720   00FA60  00                 	db	0
   721   00FA61  00                 	db	0
   722   00FA62  7F                 	db	127
   723   00FA63  0E                 	db	14
   724   00FA64  1C                 	db	28
   725   00FA65  0E                 	db	14
   726   00FA66  7F                 	db	127
   727   00FA67  00                 	db	0
   728   00FA68  00                 	db	0
   729   00FA69  7F                 	db	127
   730   00FA6A  7F                 	db	127
   731   00FA6B  06                 	db	6
   732   00FA6C  0C                 	db	12
   733   00FA6D  18                 	db	24
   734   00FA6E  7F                 	db	127
   735   00FA6F  7F                 	db	127
   736   00FA70  00                 	db	0
   737   00FA71  1C                 	db	28
   738   00FA72  3E                 	db	62
   739   00FA73  63                 	db	99
   740   00FA74  41                 	db	65
   741   00FA75  63                 	db	99
   742   00FA76  3E                 	db	62
   743   00FA77  1C                 	db	28
   744   00FA78  00                 	db	0
   745   00FA79  41                 	db	65
   746   00FA7A  7F                 	db	127
   747   00FA7B  7F                 	db	127
   748   00FA7C  49                 	db	73
   749   00FA7D  09                 	db	9
   750   00FA7E  0F                 	db	15
   751   00FA7F  06                 	db	6
   752   00FA80  00                 	db	0
   753   00FA81  1E                 	db	30
   754   00FA82  3F                 	db	63
   755   00FA83  21                 	db	33
   756   00FA84  71                 	db	113
   757   00FA85  7F                 	db	127
   758   00FA86  5E                 	db	94
   759   00FA87  00                 	db	0
   760   00FA88  00                 	db	0
   761   00FA89  41                 	db	65
   762   00FA8A  7F                 	db	127
   763   00FA8B  7F                 	db	127
   764   00FA8C  09                 	db	9
   765   00FA8D  19                 	db	25
   766   00FA8E  7F                 	db	127
   767   00FA8F  66                 	db	102
   768   00FA90  00                 	db	0
   769   00FA91  26                 	db	38
   770   00FA92  6F                 	db	111
   771   00FA93  4D                 	db	77
   772   00FA94  59                 	db	89
   773   00FA95  73                 	db	115
   774   00FA96  32                 	db	50
   775   00FA97  00                 	db	0
   776   00FA98  00                 	db	0
   777   00FA99  03                 	db	3
   778   00FA9A  41                 	db	65
   779   00FA9B  7F                 	db	127
   780   00FA9C  7F                 	db	127
   781   00FA9D  41                 	db	65
   782   00FA9E  03                 	db	3
   783   00FA9F  00                 	db	0
   784   00FAA0  00                 	db	0
   785   00FAA1  7F                 	db	127
   786   00FAA2  7F                 	db	127
   787   00FAA3  40                 	db	64
   788   00FAA4  40                 	db	64
   789   00FAA5  7F                 	db	127
   790   00FAA6  7F                 	db	127
   791   00FAA7  00                 	db	0
   792   00FAA8  00                 	db	0
   793   00FAA9  1F                 	db	31
   794   00FAAA  3F                 	db	63
   795   00FAAB  60                 	db	96
   796   00FAAC  60                 	db	96
   797   00FAAD  3F                 	db	63
   798   00FAAE  1F                 	db	31
   799   00FAAF  00                 	db	0
   800   00FAB0  00                 	db	0
   801   00FAB1  7F                 	db	127
   802   00FAB2  7F                 	db	127
   803   00FAB3  30                 	db	48
   804   00FAB4  18                 	db	24
   805   00FAB5  30                 	db	48
   806   00FAB6  7F                 	db	127
   807   00FAB7  7F                 	db	127
   808   00FAB8  00                 	db	0
   809   00FAB9  43                 	db	67
   810   00FABA  67                 	db	103
   811   00FABB  3C                 	db	60
   812   00FABC  18                 	db	24
   813   00FABD  3C                 	db	60
   814   00FABE  67                 	db	103
   815   00FABF  43                 	db	67
   816   00FAC0  00                 	db	0
   817   00FAC1  07                 	db	7
   818   00FAC2  4F                 	db	79
   819   00FAC3  78                 	db	120
   820   00FAC4  78                 	db	120
   821   00FAC5  4F                 	db	79
   822   00FAC6  07                 	db	7
   823   00FAC7  00                 	db	0
   824   00FAC8  00                 	db	0
   825   00FAC9  47                 	db	71
   826   00FACA  63                 	db	99
   827   00FACB  71                 	db	113
   828   00FACC  59                 	db	89
   829   00FACD  4D                 	db	77
   830   00FACE  67                 	db	103
   831   00FACF  73                 	db	115
   832   00FAD0  00                 	db	0
   833   00FAD1  00                 	db	0
   834   00FAD2  7F                 	db	127
   835   00FAD3  7F                 	db	127
   836   00FAD4  41                 	db	65
   837   00FAD5  41                 	db	65
   838   00FAD6  00                 	db	0
   839   00FAD7  00                 	db	0
   840   00FAD8  00                 	db	0
   841   00FAD9  01                 	db	1
   842   00FADA  03                 	db	3
   843   00FADB  06                 	db	6
   844   00FADC  0C                 	db	12
   845   00FADD  18                 	db	24
   846   00FADE  30                 	db	48
   847   00FADF  60                 	db	96
   848   00FAE0  00                 	db	0
   849   00FAE1  00                 	db	0
   850   00FAE2  41                 	db	65
   851   00FAE3  41                 	db	65
   852   00FAE4  7F                 	db	127
   853   00FAE5  7F                 	db	127
   854   00FAE6  00                 	db	0
   855   00FAE7  00                 	db	0
   856   00FAE8  00                 	db	0
   857   00FAE9  08                 	db	8
   858   00FAEA  0C                 	db	12
   859   00FAEB  06                 	db	6
   860   00FAEC  03                 	db	3
   861   00FAED  06                 	db	6
   862   00FAEE  0C                 	db	12
   863   00FAEF  08                 	db	8
   864   00FAF0  00                 	db	0
   865   00FAF1  80                 	db	128
   866   00FAF2  80                 	db	128
   867   00FAF3  80                 	db	128
   868   00FAF4  80                 	db	128
   869   00FAF5  80                 	db	128
   870   00FAF6  80                 	db	128
   871   00FAF7  80                 	db	128
   872   00FAF8  80                 	db	128
   873   00FAF9  00                 	db	0
   874   00FAFA  00                 	db	0
   875   00FAFB  03                 	db	3
   876   00FAFC  07                 	db	7
   877   00FAFD  04                 	db	4
   878   00FAFE  00                 	db	0
   879   00FAFF  00                 	db	0
   880   00FB00  00                 	db	0
   881   00FB01  20                 	db	32
   882   00FB02  74                 	db	116
   883   00FB03  54                 	db	84
   884   00FB04  54                 	db	84
   885   00FB05  3C                 	db	60
   886   00FB06  78                 	db	120
   887   00FB07  40                 	db	64
   888   00FB08  00                 	db	0
   889   00FB09  41                 	db	65
   890   00FB0A  7F                 	db	127
   891   00FB0B  3F                 	db	63
   892   00FB0C  48                 	db	72
   893   00FB0D  48                 	db	72
   894   00FB0E  78                 	db	120
   895   00FB0F  30                 	db	48
   896   00FB10  00                 	db	0
   897   00FB11  38                 	db	56
   898   00FB12  7C                 	db	124
   899   00FB13  44                 	db	68
   900   00FB14  44                 	db	68
   901   00FB15  6C                 	db	108
   902   00FB16  28                 	db	40
   903   00FB17  00                 	db	0
   904   00FB18  00                 	db	0
   905   00FB19  30                 	db	48
   906   00FB1A  78                 	db	120
   907   00FB1B  48                 	db	72
   908   00FB1C  49                 	db	73
   909   00FB1D  3F                 	db	63
   910   00FB1E  7F                 	db	127
   911   00FB1F  40                 	db	64
   912   00FB20  00                 	db	0
   913   00FB21  38                 	db	56
   914   00FB22  7C                 	db	124
   915   00FB23  54                 	db	84
   916   00FB24  54                 	db	84
   917   00FB25  5C                 	db	92
   918   00FB26  18                 	db	24
   919   00FB27  00                 	db	0
   920   00FB28  00                 	db	0
   921   00FB29  48                 	db	72
   922   00FB2A  7E                 	db	126
   923   00FB2B  7F                 	db	127
   924   00FB2C  49                 	db	73
   925   00FB2D  03                 	db	3
   926   00FB2E  02                 	db	2
   927   00FB2F  00                 	db	0
   928   00FB30  00                 	db	0
   929   00FB31  98                 	db	152
   930   00FB32  BC                 	db	188
   931   00FB33  A4                 	db	164
   932   00FB34  A4                 	db	164
   933   00FB35  F8                 	db	248
   934   00FB36  7C                 	db	124
   935   00FB37  04                 	db	4
   936   00FB38  00                 	db	0
   937   00FB39  41                 	db	65
   938   00FB3A  7F                 	db	127
   939   00FB3B  7F                 	db	127
   940   00FB3C  08                 	db	8
   941   00FB3D  04                 	db	4
   942   00FB3E  7C                 	db	124
   943   00FB3F  78                 	db	120
   944   00FB40  00                 	db	0
   945   00FB41  00                 	db	0
   946   00FB42  44                 	db	68
   947   00FB43  7D                 	db	125
   948   00FB44  7D                 	db	125
   949   00FB45  40                 	db	64
   950   00FB46  00                 	db	0
   951   00FB47  00                 	db	0
   952   00FB48  00                 	db	0
   953   00FB49  60                 	db	96
   954   00FB4A  E0                 	db	224
   955   00FB4B  80                 	db	128
   956   00FB4C  80                 	db	128
   957   00FB4D  FD                 	db	253
   958   00FB4E  7D                 	db	125
   959   00FB4F  00                 	db	0
   960   00FB50  00                 	db	0
   961   00FB51  41                 	db	65
   962   00FB52  7F                 	db	127
   963   00FB53  7F                 	db	127
   964   00FB54  10                 	db	16
   965   00FB55  38                 	db	56
   966   00FB56  6C                 	db	108
   967   00FB57  44                 	db	68
   968   00FB58  00                 	db	0
   969   00FB59  00                 	db	0
   970   00FB5A  41                 	db	65
   971   00FB5B  7F                 	db	127
   972   00FB5C  7F                 	db	127
   973   00FB5D  40                 	db	64
   974   00FB5E  00                 	db	0
   975   00FB5F  00                 	db	0
   976   00FB60  00                 	db	0
   977   00FB61  7C                 	db	124
   978   00FB62  7C                 	db	124
   979   00FB63  18                 	db	24
   980   00FB64  38                 	db	56
   981   00FB65  1C                 	db	28
   982   00FB66  7C                 	db	124
   983   00FB67  78                 	db	120
   984   00FB68  00                 	db	0
   985   00FB69  7C                 	db	124
   986   00FB6A  7C                 	db	124
   987   00FB6B  04                 	db	4
   988   00FB6C  04                 	db	4
   989   00FB6D  7C                 	db	124
   990   00FB6E  78                 	db	120
   991   00FB6F  00                 	db	0
   992   00FB70  00                 	db	0
   993   00FB71  38                 	db	56
   994   00FB72  7C                 	db	124
   995   00FB73  44                 	db	68
   996   00FB74  44                 	db	68
   997   00FB75  7C                 	db	124
   998   00FB76  38                 	db	56
   999   00FB77  00                 	db	0
  1000   00FB78  00                 	db	0
  1001   00FB79  84                 	db	132
  1002   00FB7A  FC                 	db	252
  1003   00FB7B  F8                 	db	248
  1004   00FB7C  A4                 	db	164
  1005   00FB7D  24                 	db	36
  1006   00FB7E  3C                 	db	60
  1007   00FB7F  18                 	db	24
  1008   00FB80  00                 	db	0
  1009   00FB81  18                 	db	24
  1010   00FB82  3C                 	db	60
  1011   00FB83  24                 	db	36
  1012   00FB84  A4                 	db	164
  1013   00FB85  F8                 	db	248
  1014   00FB86  FC                 	db	252
  1015   00FB87  84                 	db	132
  1016   00FB88  00                 	db	0
  1017   00FB89  44                 	db	68
  1018   00FB8A  7C                 	db	124
  1019   00FB8B  78                 	db	120
  1020   00FB8C  4C                 	db	76
  1021   00FB8D  04                 	db	4
  1022   00FB8E  1C                 	db	28
  1023   00FB8F  18                 	db	24
  1024   00FB90  00                 	db	0
  1025   00FB91  48                 	db	72
  1026   00FB92  5C                 	db	92
  1027   00FB93  54                 	db	84
  1028   00FB94  54                 	db	84
  1029   00FB95  74                 	db	116
  1030   00FB96  24                 	db	36
  1031   00FB97  00                 	db	0
  1032   00FB98  00                 	db	0
  1033   00FB99  00                 	db	0
  1034   00FB9A  04                 	db	4
  1035   00FB9B  3E                 	db	62
  1036   00FB9C  7F                 	db	127
  1037   00FB9D  44                 	db	68
  1038   00FB9E  24                 	db	36
  1039   00FB9F  00                 	db	0
  1040   00FBA0  00                 	db	0
  1041   00FBA1  3C                 	db	60
  1042   00FBA2  7C                 	db	124
  1043   00FBA3  40                 	db	64
  1044   00FBA4  40                 	db	64
  1045   00FBA5  3C                 	db	60
  1046   00FBA6  7C                 	db	124
  1047   00FBA7  40                 	db	64
  1048   00FBA8  00                 	db	0
  1049   00FBA9  1C                 	db	28
  1050   00FBAA  3C                 	db	60
  1051   00FBAB  60                 	db	96
  1052   00FBAC  60                 	db	96
  1053   00FBAD  3C                 	db	60
  1054   00FBAE  1C                 	db	28
  1055   00FBAF  00                 	db	0
  1056   00FBB0  00                 	db	0
  1057   00FBB1  3C                 	db	60
  1058   00FBB2  7C                 	db	124
  1059   00FBB3  70                 	db	112
  1060   00FBB4  38                 	db	56
  1061   00FBB5  70                 	db	112
  1062   00FBB6  7C                 	db	124
  1063   00FBB7  3C                 	db	60
  1064   00FBB8  00                 	db	0
  1065   00FBB9  44                 	db	68
  1066   00FBBA  6C                 	db	108
  1067   00FBBB  38                 	db	56
  1068   00FBBC  10                 	db	16
  1069   00FBBD  38                 	db	56
  1070   00FBBE  6C                 	db	108
  1071   00FBBF  44                 	db	68
  1072   00FBC0  00                 	db	0
  1073   00FBC1  9C                 	db	156
  1074   00FBC2  BC                 	db	188
  1075   00FBC3  A0                 	db	160
  1076   00FBC4  A0                 	db	160
  1077   00FBC5  FC                 	db	252
  1078   00FBC6  7C                 	db	124
  1079   00FBC7  00                 	db	0
  1080   00FBC8  00                 	db	0
  1081   00FBC9  4C                 	db	76
  1082   00FBCA  64                 	db	100
  1083   00FBCB  74                 	db	116
  1084   00FBCC  5C                 	db	92
  1085   00FBCD  4C                 	db	76
  1086   00FBCE  64                 	db	100
  1087   00FBCF  00                 	db	0
  1088   00FBD0  00                 	db	0
  1089   00FBD1  08                 	db	8
  1090   00FBD2  08                 	db	8
  1091   00FBD3  3E                 	db	62
  1092   00FBD4  77                 	db	119
  1093   00FBD5  41                 	db	65
  1094   00FBD6  41                 	db	65
  1095   00FBD7  00                 	db	0
  1096   00FBD8  00                 	db	0
  1097   00FBD9  00                 	db	0
  1098   00FBDA  00                 	db	0
  1099   00FBDB  00                 	db	0
  1100   00FBDC  77                 	db	119
  1101   00FBDD  77                 	db	119
  1102   00FBDE  00                 	db	0
  1103   00FBDF  00                 	db	0
  1104   00FBE0  00                 	db	0
  1105   00FBE1  41                 	db	65
  1106   00FBE2  41                 	db	65
  1107   00FBE3  77                 	db	119
  1108   00FBE4  3E                 	db	62
  1109   00FBE5  08                 	db	8
  1110   00FBE6  08                 	db	8
  1111   00FBE7  00                 	db	0
  1112   00FBE8  00                 	db	0
  1113   00FBE9  02                 	db	2
  1114   00FBEA  03                 	db	3
  1115   00FBEB  01                 	db	1
  1116   00FBEC  03                 	db	3
  1117   00FBED  02                 	db	2
  1118   00FBEE  03                 	db	3
  1119   00FBEF  01                 	db	1
  1120   00FBF0  00                 	db	0
  1121   00FBF1  70                 	db	112
  1122   00FBF2  78                 	db	120
  1123   00FBF3  4C                 	db	76
  1124   00FBF4  46                 	db	70
  1125   00FBF5  4C                 	db	76
  1126   00FBF6  78                 	db	120
  1127   00FBF7  70                 	db	112
  1128   00FBF8  00                 	db	0
  1129   00FBF9  0E                 	db	14
  1130   00FBFA  9F                 	db	159
  1131   00FBFB  91                 	db	145
  1132   00FBFC  B1                 	db	177
  1133   00FBFD  FB                 	db	251
  1134   00FBFE  4A                 	db	74
  1135   00FBFF  00                 	db	0
  1136   00FC00  00                 	db	0
  1137   00FC01  3A                 	db	58
  1138   00FC02  7A                 	db	122
  1139   00FC03  40                 	db	64
  1140   00FC04  40                 	db	64
  1141   00FC05  7A                 	db	122
  1142   00FC06  7A                 	db	122
  1143   00FC07  40                 	db	64
  1144   00FC08  00                 	db	0
  1145   00FC09  38                 	db	56
  1146   00FC0A  7C                 	db	124
  1147   00FC0B  54                 	db	84
  1148   00FC0C  55                 	db	85
  1149   00FC0D  5D                 	db	93
  1150   00FC0E  19                 	db	25
  1151   00FC0F  00                 	db	0
  1152   00FC10  00                 	db	0
  1153   00FC11  02                 	db	2
  1154   00FC12  23                 	db	35
  1155   00FC13  75                 	db	117
  1156   00FC14  55                 	db	85
  1157   00FC15  55                 	db	85
  1158   00FC16  7D                 	db	125
  1159   00FC17  7B                 	db	123
  1160   00FC18  42                 	db	66
  1161   00FC19  21                 	db	33
  1162   00FC1A  75                 	db	117
  1163   00FC1B  54                 	db	84
  1164   00FC1C  54                 	db	84
  1165   00FC1D  7D                 	db	125
  1166   00FC1E  79                 	db	121
  1167   00FC1F  40                 	db	64
  1168   00FC20  00                 	db	0
  1169   00FC21  21                 	db	33
  1170   00FC22  75                 	db	117
  1171   00FC23  55                 	db	85
  1172   00FC24  54                 	db	84
  1173   00FC25  7C                 	db	124
  1174   00FC26  78                 	db	120
  1175   00FC27  40                 	db	64
  1176   00FC28  00                 	db	0
  1177   00FC29  20                 	db	32
  1178   00FC2A  74                 	db	116
  1179   00FC2B  57                 	db	87
  1180   00FC2C  57                 	db	87
  1181   00FC2D  7C                 	db	124
  1182   00FC2E  78                 	db	120
  1183   00FC2F  40                 	db	64
  1184   00FC30  00                 	db	0
  1185   00FC31  18                 	db	24
  1186   00FC32  3C                 	db	60
  1187   00FC33  A4                 	db	164
  1188   00FC34  A4                 	db	164
  1189   00FC35  E4                 	db	228
  1190   00FC36  40                 	db	64
  1191   00FC37  00                 	db	0
  1192   00FC38  00                 	db	0
  1193   00FC39  02                 	db	2
  1194   00FC3A  3B                 	db	59
  1195   00FC3B  7D                 	db	125
  1196   00FC3C  55                 	db	85
  1197   00FC3D  55                 	db	85
  1198   00FC3E  5D                 	db	93
  1199   00FC3F  1B                 	db	27
  1200   00FC40  02                 	db	2
  1201   00FC41  39                 	db	57
  1202   00FC42  7D                 	db	125
  1203   00FC43  54                 	db	84
  1204   00FC44  54                 	db	84
  1205   00FC45  5D                 	db	93
  1206   00FC46  19                 	db	25
  1207   00FC47  00                 	db	0
  1208   00FC48  00                 	db	0
  1209   00FC49  39                 	db	57
  1210   00FC4A  7D                 	db	125
  1211   00FC4B  55                 	db	85
  1212   00FC4C  54                 	db	84
  1213   00FC4D  5C                 	db	92
  1214   00FC4E  18                 	db	24
  1215   00FC4F  00                 	db	0
  1216   00FC50  00                 	db	0
  1217   00FC51  01                 	db	1
  1218   00FC52  45                 	db	69
  1219   00FC53  7C                 	db	124
  1220   00FC54  7C                 	db	124
  1221   00FC55  41                 	db	65
  1222   00FC56  01                 	db	1
  1223   00FC57  00                 	db	0
  1224   00FC58  00                 	db	0
  1225   00FC59  02                 	db	2
  1226   00FC5A  03                 	db	3
  1227   00FC5B  45                 	db	69
  1228   00FC5C  7D                 	db	125
  1229   00FC5D  7D                 	db	125
  1230   00FC5E  43                 	db	67
  1231   00FC5F  02                 	db	2
  1232   00FC60  00                 	db	0
  1233   00FC61  01                 	db	1
  1234   00FC62  45                 	db	69
  1235   00FC63  7D                 	db	125
  1236   00FC64  7C                 	db	124
  1237   00FC65  40                 	db	64
  1238   00FC66  00                 	db	0
  1239   00FC67  00                 	db	0
  1240   00FC68  00                 	db	0
  1241   00FC69  79                 	db	121
  1242   00FC6A  7D                 	db	125
  1243   00FC6B  16                 	db	22
  1244   00FC6C  12                 	db	18
  1245   00FC6D  16                 	db	22
  1246   00FC6E  7D                 	db	125
  1247   00FC6F  79                 	db	121
  1248   00FC70  00                 	db	0
  1249   00FC71  70                 	db	112
  1250   00FC72  78                 	db	120
  1251   00FC73  2B                 	db	43
  1252   00FC74  2B                 	db	43
  1253   00FC75  78                 	db	120
  1254   00FC76  70                 	db	112
  1255   00FC77  00                 	db	0
  1256   00FC78  00                 	db	0
  1257   00FC79  44                 	db	68
  1258   00FC7A  7C                 	db	124
  1259   00FC7B  7C                 	db	124
  1260   00FC7C  55                 	db	85
  1261   00FC7D  55                 	db	85
  1262   00FC7E  45                 	db	69
  1263   00FC7F  00                 	db	0
  1264   00FC80  00                 	db	0
  1265   00FC81  20                 	db	32
  1266   00FC82  74                 	db	116
  1267   00FC83  54                 	db	84
  1268   00FC84  54                 	db	84
  1269   00FC85  7C                 	db	124
  1270   00FC86  7C                 	db	124
  1271   00FC87  54                 	db	84
  1272   00FC88  54                 	db	84
  1273   00FC89  7C                 	db	124
  1274   00FC8A  7E                 	db	126
  1275   00FC8B  0B                 	db	11
  1276   00FC8C  09                 	db	9
  1277   00FC8D  7F                 	db	127
  1278   00FC8E  7F                 	db	127
  1279   00FC8F  49                 	db	73
  1280   00FC90  00                 	db	0
  1281   00FC91  32                 	db	50
  1282   00FC92  7B                 	db	123
  1283   00FC93  49                 	db	73
  1284   00FC94  49                 	db	73
  1285   00FC95  7B                 	db	123
  1286   00FC96  32                 	db	50
  1287   00FC97  00                 	db	0
  1288   00FC98  00                 	db	0
  1289   00FC99  32                 	db	50
  1290   00FC9A  7A                 	db	122
  1291   00FC9B  48                 	db	72
  1292   00FC9C  48                 	db	72
  1293   00FC9D  7A                 	db	122
  1294   00FC9E  32                 	db	50
  1295   00FC9F  00                 	db	0
  1296   00FCA0  00                 	db	0
  1297   00FCA1  32                 	db	50
  1298   00FCA2  7A                 	db	122
  1299   00FCA3  4A                 	db	74
  1300   00FCA4  48                 	db	72
  1301   00FCA5  78                 	db	120
  1302   00FCA6  30                 	db	48
  1303   00FCA7  00                 	db	0
  1304   00FCA8  00                 	db	0
  1305   00FCA9  3A                 	db	58
  1306   00FCAA  7B                 	db	123
  1307   00FCAB  41                 	db	65
  1308   00FCAC  41                 	db	65
  1309   00FCAD  7B                 	db	123
  1310   00FCAE  7A                 	db	122
  1311   00FCAF  40                 	db	64
  1312   00FCB0  00                 	db	0
  1313   00FCB1  3A                 	db	58
  1314   00FCB2  7A                 	db	122
  1315   00FCB3  42                 	db	66
  1316   00FCB4  40                 	db	64
  1317   00FCB5  78                 	db	120
  1318   00FCB6  78                 	db	120
  1319   00FCB7  40                 	db	64
  1320   00FCB8  00                 	db	0
  1321   00FCB9  9A                 	db	154
  1322   00FCBA  BA                 	db	186
  1323   00FCBB  A0                 	db	160
  1324   00FCBC  A0                 	db	160
  1325   00FCBD  FA                 	db	250
  1326   00FCBE  7A                 	db	122
  1327   00FCBF  00                 	db	0
  1328   00FCC0  00                 	db	0
  1329   00FCC1  01                 	db	1
  1330   00FCC2  19                 	db	25
  1331   00FCC3  3C                 	db	60
  1332   00FCC4  66                 	db	102
  1333   00FCC5  66                 	db	102
  1334   00FCC6  3C                 	db	60
  1335   00FCC7  19                 	db	25
  1336   00FCC8  01                 	db	1
  1337   00FCC9  3D                 	db	61
  1338   00FCCA  7D                 	db	125
  1339   00FCCB  40                 	db	64
  1340   00FCCC  40                 	db	64
  1341   00FCCD  7D                 	db	125
  1342   00FCCE  3D                 	db	61
  1343   00FCCF  00                 	db	0
  1344   00FCD0  00                 	db	0
  1345   00FCD1  18                 	db	24
  1346   00FCD2  3C                 	db	60
  1347   00FCD3  24                 	db	36
  1348   00FCD4  E7                 	db	231
  1349   00FCD5  E7                 	db	231
  1350   00FCD6  24                 	db	36
  1351   00FCD7  24                 	db	36
  1352   00FCD8  00                 	db	0
  1353   00FCD9  68                 	db	104
  1354   00FCDA  7E                 	db	126
  1355   00FCDB  7F                 	db	127
  1356   00FCDC  49                 	db	73
  1357   00FCDD  43                 	db	67
  1358   00FCDE  66                 	db	102
  1359   00FCDF  20                 	db	32
  1360   00FCE0  00                 	db	0
  1361   00FCE1  2B                 	db	43
  1362   00FCE2  2F                 	db	47
  1363   00FCE3  FC                 	db	252
  1364   00FCE4  FC                 	db	252
  1365   00FCE5  2F                 	db	47
  1366   00FCE6  2B                 	db	43
  1367   00FCE7  00                 	db	0
  1368   00FCE8  00                 	db	0
  1369   00FCE9  FF                 	db	255
  1370   00FCEA  FF                 	db	255
  1371   00FCEB  09                 	db	9
  1372   00FCEC  09                 	db	9
  1373   00FCED  2F                 	db	47
  1374   00FCEE  F6                 	db	246
  1375   00FCEF  F8                 	db	248
  1376   00FCF0  A0                 	db	160
  1377   00FCF1  40                 	db	64
  1378   00FCF2  C0                 	db	192
  1379   00FCF3  88                 	db	136
  1380   00FCF4  FE                 	db	254
  1381   00FCF5  7F                 	db	127
  1382   00FCF6  09                 	db	9
  1383   00FCF7  03                 	db	3
  1384   00FCF8  02                 	db	2
  1385   00FCF9  20                 	db	32
  1386   00FCFA  74                 	db	116
  1387   00FCFB  54                 	db	84
  1388   00FCFC  55                 	db	85
  1389   00FCFD  7D                 	db	125
  1390   00FCFE  79                 	db	121
  1391   00FCFF  40                 	db	64
  1392   00FD00  00                 	db	0
  1393   00FD01  00                 	db	0
  1394   00FD02  44                 	db	68
  1395   00FD03  7D                 	db	125
  1396   00FD04  7D                 	db	125
  1397   00FD05  41                 	db	65
  1398   00FD06  00                 	db	0
  1399   00FD07  00                 	db	0
  1400   00FD08  00                 	db	0
  1401   00FD09  30                 	db	48
  1402   00FD0A  78                 	db	120
  1403   00FD0B  48                 	db	72
  1404   00FD0C  4A                 	db	74
  1405   00FD0D  7A                 	db	122
  1406   00FD0E  32                 	db	50
  1407   00FD0F  00                 	db	0
  1408   00FD10  00                 	db	0
  1409   00FD11  38                 	db	56
  1410   00FD12  78                 	db	120
  1411   00FD13  40                 	db	64
  1412   00FD14  42                 	db	66
  1413   00FD15  7A                 	db	122
  1414   00FD16  7A                 	db	122
  1415   00FD17  40                 	db	64
  1416   00FD18  00                 	db	0
  1417   00FD19  7A                 	db	122
  1418   00FD1A  7A                 	db	122
  1419   00FD1B  0A                 	db	10
  1420   00FD1C  0A                 	db	10
  1421   00FD1D  7A                 	db	122
  1422   00FD1E  70                 	db	112
  1423   00FD1F  00                 	db	0
  1424   00FD20  00                 	db	0
  1425   00FD21  7D                 	db	125
  1426   00FD22  7D                 	db	125
  1427   00FD23  19                 	db	25
  1428   00FD24  31                 	db	49
  1429   00FD25  7D                 	db	125
  1430   00FD26  7D                 	db	125
  1431   00FD27  00                 	db	0
  1432   00FD28  00                 	db	0
  1433   00FD29  00                 	db	0
  1434   00FD2A  26                 	db	38
  1435   00FD2B  2F                 	db	47
  1436   00FD2C  29                 	db	41
  1437   00FD2D  2F                 	db	47
  1438   00FD2E  2F                 	db	47
  1439   00FD2F  28                 	db	40
  1440   00FD30  00                 	db	0
  1441   00FD31  00                 	db	0
  1442   00FD32  26                 	db	38
  1443   00FD33  2F                 	db	47
  1444   00FD34  29                 	db	41
  1445   00FD35  2F                 	db	47
  1446   00FD36  26                 	db	38
  1447   00FD37  00                 	db	0
  1448   00FD38  00                 	db	0
  1449   00FD39  30                 	db	48
  1450   00FD3A  78                 	db	120
  1451   00FD3B  4D                 	db	77
  1452   00FD3C  45                 	db	69
  1453   00FD3D  60                 	db	96
  1454   00FD3E  20                 	db	32
  1455   00FD3F  00                 	db	0
  1456   00FD40  00                 	db	0
  1457   00FD41  38                 	db	56
  1458   00FD42  38                 	db	56
  1459   00FD43  08                 	db	8
  1460   00FD44  08                 	db	8
  1461   00FD45  08                 	db	8
  1462   00FD46  08                 	db	8
  1463   00FD47  00                 	db	0
  1464   00FD48  00                 	db	0
  1465   00FD49  08                 	db	8
  1466   00FD4A  08                 	db	8
  1467   00FD4B  08                 	db	8
  1468   00FD4C  08                 	db	8
  1469   00FD4D  38                 	db	56
  1470   00FD4E  38                 	db	56
  1471   00FD4F  00                 	db	0
  1472   00FD50  00                 	db	0
  1473   00FD51  4F                 	db	79
  1474   00FD52  6F                 	db	111
  1475   00FD53  30                 	db	48
  1476   00FD54  18                 	db	24
  1477   00FD55  CC                 	db	204
  1478   00FD56  EE                 	db	238
  1479   00FD57  BB                 	db	187
  1480   00FD58  91                 	db	145
  1481   00FD59  4F                 	db	79
  1482   00FD5A  6F                 	db	111
  1483   00FD5B  30                 	db	48
  1484   00FD5C  18                 	db	24
  1485   00FD5D  6C                 	db	108
  1486   00FD5E  76                 	db	118
  1487   00FD5F  FB                 	db	251
  1488   00FD60  F9                 	db	249
  1489   00FD61  00                 	db	0
  1490   00FD62  00                 	db	0
  1491   00FD63  00                 	db	0
  1492   00FD64  7B                 	db	123
  1493   00FD65  7B                 	db	123
  1494   00FD66  00                 	db	0
  1495   00FD67  00                 	db	0
  1496   00FD68  00                 	db	0
  1497   00FD69  08                 	db	8
  1498   00FD6A  1C                 	db	28
  1499   00FD6B  36                 	db	54
  1500   00FD6C  22                 	db	34
  1501   00FD6D  08                 	db	8
  1502   00FD6E  1C                 	db	28
  1503   00FD6F  36                 	db	54
  1504   00FD70  22                 	db	34
  1505   00FD71  22                 	db	34
  1506   00FD72  36                 	db	54
  1507   00FD73  1C                 	db	28
  1508   00FD74  08                 	db	8
  1509   00FD75  22                 	db	34
  1510   00FD76  36                 	db	54
  1511   00FD77  1C                 	db	28
  1512   00FD78  08                 	db	8
  1513   00FD79  AA                 	db	170
  1514   00FD7A  00                 	db	0
  1515   00FD7B  55                 	db	85
  1516   00FD7C  00                 	db	0
  1517   00FD7D  AA                 	db	170
  1518   00FD7E  00                 	db	0
  1519   00FD7F  55                 	db	85
  1520   00FD80  00                 	db	0
  1521   00FD81  AA                 	db	170
  1522   00FD82  55                 	db	85
  1523   00FD83  AA                 	db	170
  1524   00FD84  55                 	db	85
  1525   00FD85  AA                 	db	170
  1526   00FD86  55                 	db	85
  1527   00FD87  AA                 	db	170
  1528   00FD88  55                 	db	85
  1529   00FD89  DD                 	db	221
  1530   00FD8A  FF                 	db	255
  1531   00FD8B  AA                 	db	170
  1532   00FD8C  77                 	db	119
  1533   00FD8D  DD                 	db	221
  1534   00FD8E  AA                 	db	170
  1535   00FD8F  FF                 	db	255
  1536   00FD90  77                 	db	119
  1537   00FD91  00                 	db	0
  1538   00FD92  00                 	db	0
  1539   00FD93  00                 	db	0
  1540   00FD94  FF                 	db	255
  1541   00FD95  FF                 	db	255
  1542   00FD96  00                 	db	0
  1543   00FD97  00                 	db	0
  1544   00FD98  00                 	db	0
  1545   00FD99  10                 	db	16
  1546   00FD9A  10                 	db	16
  1547   00FD9B  10                 	db	16
  1548   00FD9C  FF                 	db	255
  1549   00FD9D  FF                 	db	255
  1550   00FD9E  00                 	db	0
  1551   00FD9F  00                 	db	0
  1552   00FDA0  00                 	db	0
  1553   00FDA1  14                 	db	20
  1554   00FDA2  14                 	db	20
  1555   00FDA3  14                 	db	20
  1556   00FDA4  FF                 	db	255
  1557   00FDA5  FF                 	db	255
  1558   00FDA6  00                 	db	0
  1559   00FDA7  00                 	db	0
  1560   00FDA8  00                 	db	0
  1561   00FDA9  10                 	db	16
  1562   00FDAA  10                 	db	16
  1563   00FDAB  FF                 	db	255
  1564   00FDAC  FF                 	db	255
  1565   00FDAD  00                 	db	0
  1566   00FDAE  FF                 	db	255
  1567   00FDAF  FF                 	db	255
  1568   00FDB0  00                 	db	0
  1569   00FDB1  10                 	db	16
  1570   00FDB2  10                 	db	16
  1571   00FDB3  F0                 	db	240
  1572   00FDB4  F0                 	db	240
  1573   00FDB5  10                 	db	16
  1574   00FDB6  F0                 	db	240
  1575   00FDB7  F0                 	db	240
  1576   00FDB8  00                 	db	0
  1577   00FDB9  14                 	db	20
  1578   00FDBA  14                 	db	20
  1579   00FDBB  14                 	db	20
  1580   00FDBC  FC                 	db	252
  1581   00FDBD  FC                 	db	252
  1582   00FDBE  00                 	db	0
  1583   00FDBF  00                 	db	0
  1584   00FDC0  00                 	db	0
  1585   00FDC1  14                 	db	20
  1586   00FDC2  14                 	db	20
  1587   00FDC3  F7                 	db	247
  1588   00FDC4  F7                 	db	247
  1589   00FDC5  00                 	db	0
  1590   00FDC6  FF                 	db	255
  1591   00FDC7  FF                 	db	255
  1592   00FDC8  00                 	db	0
  1593   00FDC9  00                 	db	0
  1594   00FDCA  00                 	db	0
  1595   00FDCB  FF                 	db	255
  1596   00FDCC  FF                 	db	255
  1597   00FDCD  00                 	db	0
  1598   00FDCE  FF                 	db	255
  1599   00FDCF  FF                 	db	255
  1600   00FDD0  00                 	db	0
  1601   00FDD1  14                 	db	20
  1602   00FDD2  14                 	db	20
  1603   00FDD3  F4                 	db	244
  1604   00FDD4  F4                 	db	244
  1605   00FDD5  04                 	db	4
  1606   00FDD6  FC                 	db	252
  1607   00FDD7  FC                 	db	252
  1608   00FDD8  00                 	db	0
  1609   00FDD9  14                 	db	20
  1610   00FDDA  14                 	db	20
  1611   00FDDB  17                 	db	23
  1612   00FDDC  17                 	db	23
  1613   00FDDD  10                 	db	16
  1614   00FDDE  1F                 	db	31
  1615   00FDDF  1F                 	db	31
  1616   00FDE0  00                 	db	0
  1617   00FDE1  10                 	db	16
  1618   00FDE2  10                 	db	16
  1619   00FDE3  1F                 	db	31
  1620   00FDE4  1F                 	db	31
  1621   00FDE5  10                 	db	16
  1622   00FDE6  1F                 	db	31
  1623   00FDE7  1F                 	db	31
  1624   00FDE8  00                 	db	0
  1625   00FDE9  14                 	db	20
  1626   00FDEA  14                 	db	20
  1627   00FDEB  14                 	db	20
  1628   00FDEC  1F                 	db	31
  1629   00FDED  1F                 	db	31
  1630   00FDEE  00                 	db	0
  1631   00FDEF  00                 	db	0
  1632   00FDF0  00                 	db	0
  1633   00FDF1  10                 	db	16
  1634   00FDF2  10                 	db	16
  1635   00FDF3  10                 	db	16
  1636   00FDF4  F0                 	db	240
  1637   00FDF5  F0                 	db	240
  1638   00FDF6  00                 	db	0
  1639   00FDF7  00                 	db	0
  1640   00FDF8  00                 	db	0
  1641   00FDF9  00                 	db	0
  1642   00FDFA  00                 	db	0
  1643   00FDFB  00                 	db	0
  1644   00FDFC  1F                 	db	31
  1645   00FDFD  1F                 	db	31
  1646   00FDFE  10                 	db	16
  1647   00FDFF  10                 	db	16
  1648   00FE00  10                 	db	16
  1649   00FE01  10                 	db	16
  1650   00FE02  10                 	db	16
  1651   00FE03  10                 	db	16
  1652   00FE04  1F                 	db	31
  1653   00FE05  1F                 	db	31
  1654   00FE06  10                 	db	16
  1655   00FE07  10                 	db	16
  1656   00FE08  10                 	db	16
  1657   00FE09  10                 	db	16
  1658   00FE0A  10                 	db	16
  1659   00FE0B  10                 	db	16
  1660   00FE0C  F0                 	db	240
  1661   00FE0D  F0                 	db	240
  1662   00FE0E  10                 	db	16
  1663   00FE0F  10                 	db	16
  1664   00FE10  10                 	db	16
  1665   00FE11  00                 	db	0
  1666   00FE12  00                 	db	0
  1667   00FE13  00                 	db	0
  1668   00FE14  FF                 	db	255
  1669   00FE15  FF                 	db	255
  1670   00FE16  10                 	db	16
  1671   00FE17  10                 	db	16
  1672   00FE18  10                 	db	16
  1673   00FE19  10                 	db	16
  1674   00FE1A  10                 	db	16
  1675   00FE1B  10                 	db	16
  1676   00FE1C  10                 	db	16
  1677   00FE1D  10                 	db	16
  1678   00FE1E  10                 	db	16
  1679   00FE1F  10                 	db	16
  1680   00FE20  10                 	db	16
  1681   00FE21  10                 	db	16
  1682   00FE22  10                 	db	16
  1683   00FE23  10                 	db	16
  1684   00FE24  FF                 	db	255
  1685   00FE25  FF                 	db	255
  1686   00FE26  10                 	db	16
  1687   00FE27  10                 	db	16
  1688   00FE28  10                 	db	16
  1689   00FE29  00                 	db	0
  1690   00FE2A  00                 	db	0
  1691   00FE2B  00                 	db	0
  1692   00FE2C  FF                 	db	255
  1693   00FE2D  FF                 	db	255
  1694   00FE2E  14                 	db	20
  1695   00FE2F  14                 	db	20
  1696   00FE30  14                 	db	20
  1697   00FE31  00                 	db	0
  1698   00FE32  00                 	db	0
  1699   00FE33  FF                 	db	255
  1700   00FE34  FF                 	db	255
  1701   00FE35  00                 	db	0
  1702   00FE36  FF                 	db	255
  1703   00FE37  FF                 	db	255
  1704   00FE38  10                 	db	16
  1705   00FE39  00                 	db	0
  1706   00FE3A  00                 	db	0
  1707   00FE3B  1F                 	db	31
  1708   00FE3C  1F                 	db	31
  1709   00FE3D  10                 	db	16
  1710   00FE3E  17                 	db	23
  1711   00FE3F  17                 	db	23
  1712   00FE40  14                 	db	20
  1713   00FE41  00                 	db	0
  1714   00FE42  00                 	db	0
  1715   00FE43  FC                 	db	252
  1716   00FE44  FC                 	db	252
  1717   00FE45  04                 	db	4
  1718   00FE46  F4                 	db	244
  1719   00FE47  F4                 	db	244
  1720   00FE48  14                 	db	20
  1721   00FE49  14                 	db	20
  1722   00FE4A  14                 	db	20
  1723   00FE4B  17                 	db	23
  1724   00FE4C  17                 	db	23
  1725   00FE4D  10                 	db	16
  1726   00FE4E  17                 	db	23
  1727   00FE4F  17                 	db	23
  1728   00FE50  14                 	db	20
  1729   00FE51  14                 	db	20
  1730   00FE52  14                 	db	20
  1731   00FE53  F4                 	db	244
  1732   00FE54  F4                 	db	244
  1733   00FE55  04                 	db	4
  1734   00FE56  F4                 	db	244
  1735   00FE57  F4                 	db	244
  1736   00FE58  14                 	db	20
  1737   00FE59  00                 	db	0
  1738   00FE5A  00                 	db	0
  1739   00FE5B  FF                 	db	255
  1740   00FE5C  FF                 	db	255
  1741   00FE5D  00                 	db	0
  1742   00FE5E  F7                 	db	247
  1743   00FE5F  F7                 	db	247
  1744   00FE60  14                 	db	20
  1745   00FE61  14                 	db	20
  1746   00FE62  14                 	db	20
  1747   00FE63  14                 	db	20
  1748   00FE64  14                 	db	20
  1749   00FE65  14                 	db	20
  1750   00FE66  14                 	db	20
  1751   00FE67  14                 	db	20
  1752   00FE68  14                 	db	20
  1753   00FE69  14                 	db	20
  1754   00FE6A  14                 	db	20
  1755   00FE6B  F7                 	db	247
  1756   00FE6C  F7                 	db	247
  1757   00FE6D  00                 	db	0
  1758   00FE6E  F7                 	db	247
  1759   00FE6F  F7                 	db	247
  1760   00FE70  14                 	db	20
  1761   00FE71  14                 	db	20
  1762   00FE72  14                 	db	20
  1763   00FE73  14                 	db	20
  1764   00FE74  17                 	db	23
  1765   00FE75  17                 	db	23
  1766   00FE76  14                 	db	20
  1767   00FE77  14                 	db	20
  1768   00FE78  14                 	db	20
  1769   00FE79  10                 	db	16
  1770   00FE7A  10                 	db	16
  1771   00FE7B  1F                 	db	31
  1772   00FE7C  1F                 	db	31
  1773   00FE7D  10                 	db	16
  1774   00FE7E  1F                 	db	31
  1775   00FE7F  1F                 	db	31
  1776   00FE80  10                 	db	16
  1777   00FE81  14                 	db	20
  1778   00FE82  14                 	db	20
  1779   00FE83  14                 	db	20
  1780   00FE84  F4                 	db	244
  1781   00FE85  F4                 	db	244
  1782   00FE86  14                 	db	20
  1783   00FE87  14                 	db	20
  1784   00FE88  14                 	db	20
  1785   00FE89  10                 	db	16
  1786   00FE8A  10                 	db	16
  1787   00FE8B  F0                 	db	240
  1788   00FE8C  F0                 	db	240
  1789   00FE8D  10                 	db	16
  1790   00FE8E  F0                 	db	240
  1791   00FE8F  F0                 	db	240
  1792   00FE90  10                 	db	16
  1793   00FE91  00                 	db	0
  1794   00FE92  00                 	db	0
  1795   00FE93  1F                 	db	31
  1796   00FE94  1F                 	db	31
  1797   00FE95  10                 	db	16
  1798   00FE96  1F                 	db	31
  1799   00FE97  1F                 	db	31
  1800   00FE98  10                 	db	16
  1801   00FE99  00                 	db	0
  1802   00FE9A  00                 	db	0
  1803   00FE9B  00                 	db	0
  1804   00FE9C  1F                 	db	31
  1805   00FE9D  1F                 	db	31
  1806   00FE9E  14                 	db	20
  1807   00FE9F  14                 	db	20
  1808   00FEA0  14                 	db	20
  1809   00FEA1  00                 	db	0
  1810   00FEA2  00                 	db	0
  1811   00FEA3  00                 	db	0
  1812   00FEA4  FC                 	db	252
  1813   00FEA5  FC                 	db	252
  1814   00FEA6  14                 	db	20
  1815   00FEA7  14                 	db	20
  1816   00FEA8  14                 	db	20
  1817   00FEA9  00                 	db	0
  1818   00FEAA  00                 	db	0
  1819   00FEAB  F0                 	db	240
  1820   00FEAC  F0                 	db	240
  1821   00FEAD  10                 	db	16
  1822   00FEAE  F0                 	db	240
  1823   00FEAF  F0                 	db	240
  1824   00FEB0  10                 	db	16
  1825   00FEB1  10                 	db	16
  1826   00FEB2  10                 	db	16
  1827   00FEB3  FF                 	db	255
  1828   00FEB4  FF                 	db	255
  1829   00FEB5  10                 	db	16
  1830   00FEB6  FF                 	db	255
  1831   00FEB7  FF                 	db	255
  1832   00FEB8  10                 	db	16
  1833   00FEB9  14                 	db	20
  1834   00FEBA  14                 	db	20
  1835   00FEBB  14                 	db	20
  1836   00FEBC  FF                 	db	255
  1837   00FEBD  FF                 	db	255
  1838   00FEBE  14                 	db	20
  1839   00FEBF  14                 	db	20
  1840   00FEC0  14                 	db	20
  1841   00FEC1  10                 	db	16
  1842   00FEC2  10                 	db	16
  1843   00FEC3  10                 	db	16
  1844   00FEC4  1F                 	db	31
  1845   00FEC5  1F                 	db	31
  1846   00FEC6  00                 	db	0
  1847   00FEC7  00                 	db	0
  1848   00FEC8  00                 	db	0
  1849   00FEC9  00                 	db	0
  1850   00FECA  00                 	db	0
  1851   00FECB  00                 	db	0
  1852   00FECC  F0                 	db	240
  1853   00FECD  F0                 	db	240
  1854   00FECE  10                 	db	16
  1855   00FECF  10                 	db	16
  1856   00FED0  10                 	db	16
  1857   00FED1  FF                 	db	255
  1858   00FED2  FF                 	db	255
  1859   00FED3  FF                 	db	255
  1860   00FED4  FF                 	db	255
  1861   00FED5  FF                 	db	255
  1862   00FED6  FF                 	db	255
  1863   00FED7  FF                 	db	255
  1864   00FED8  FF                 	db	255
  1865   00FED9  F0                 	db	240
  1866   00FEDA  F0                 	db	240
  1867   00FEDB  F0                 	db	240
  1868   00FEDC  F0                 	db	240
  1869   00FEDD  F0                 	db	240
  1870   00FEDE  F0                 	db	240
  1871   00FEDF  F0                 	db	240
  1872   00FEE0  F0                 	db	240
  1873   00FEE1  FF                 	db	255
  1874   00FEE2  FF                 	db	255
  1875   00FEE3  FF                 	db	255
  1876   00FEE4  FF                 	db	255
  1877   00FEE5  00                 	db	0
  1878   00FEE6  00                 	db	0
  1879   00FEE7  00                 	db	0
  1880   00FEE8  00                 	db	0
  1881   00FEE9  00                 	db	0
  1882   00FEEA  00                 	db	0
  1883   00FEEB  00                 	db	0
  1884   00FEEC  00                 	db	0
  1885   00FEED  FF                 	db	255
  1886   00FEEE  FF                 	db	255
  1887   00FEEF  FF                 	db	255
  1888   00FEF0  FF                 	db	255
  1889   00FEF1  0F                 	db	15
  1890   00FEF2  0F                 	db	15
  1891   00FEF3  0F                 	db	15
  1892   00FEF4  0F                 	db	15
  1893   00FEF5  0F                 	db	15
  1894   00FEF6  0F                 	db	15
  1895   00FEF7  0F                 	db	15
  1896   00FEF8  0F                 	db	15
  1897   00FEF9  38                 	db	56
  1898   00FEFA  7C                 	db	124
  1899   00FEFB  44                 	db	68
  1900   00FEFC  6C                 	db	108
  1901   00FEFD  38                 	db	56
  1902   00FEFE  6C                 	db	108
  1903   00FEFF  44                 	db	68
  1904   00FF00  00                 	db	0
  1905   00FF01  FC                 	db	252
  1906   00FF02  FE                 	db	254
  1907   00FF03  2A                 	db	42
  1908   00FF04  2A                 	db	42
  1909   00FF05  3E                 	db	62
  1910   00FF06  14                 	db	20
  1911   00FF07  00                 	db	0
  1912   00FF08  00                 	db	0
  1913   00FF09  7E                 	db	126
  1914   00FF0A  7E                 	db	126
  1915   00FF0B  02                 	db	2
  1916   00FF0C  02                 	db	2
  1917   00FF0D  06                 	db	6
  1918   00FF0E  06                 	db	6
  1919   00FF0F  00                 	db	0
  1920   00FF10  00                 	db	0
  1921   00FF11  02                 	db	2
  1922   00FF12  7E                 	db	126
  1923   00FF13  7E                 	db	126
  1924   00FF14  02                 	db	2
  1925   00FF15  7E                 	db	126
  1926   00FF16  7E                 	db	126
  1927   00FF17  02                 	db	2
  1928   00FF18  00                 	db	0
  1929   00FF19  63                 	db	99
  1930   00FF1A  77                 	db	119
  1931   00FF1B  5D                 	db	93
  1932   00FF1C  49                 	db	73
  1933   00FF1D  63                 	db	99
  1934   00FF1E  63                 	db	99
  1935   00FF1F  00                 	db	0
  1936   00FF20  00                 	db	0
  1937   00FF21  38                 	db	56
  1938   00FF22  7C                 	db	124
  1939   00FF23  44                 	db	68
  1940   00FF24  7C                 	db	124
  1941   00FF25  3C                 	db	60
  1942   00FF26  04                 	db	4
  1943   00FF27  04                 	db	4
  1944   00FF28  00                 	db	0
  1945   00FF29  80                 	db	128
  1946   00FF2A  FE                 	db	254
  1947   00FF2B  7E                 	db	126
  1948   00FF2C  20                 	db	32
  1949   00FF2D  20                 	db	32
  1950   00FF2E  3E                 	db	62
  1951   00FF2F  1E                 	db	30
  1952   00FF30  00                 	db	0
  1953   00FF31  04                 	db	4
  1954   00FF32  06                 	db	6
  1955   00FF33  02                 	db	2
  1956   00FF34  7E                 	db	126
  1957   00FF35  7C                 	db	124
  1958   00FF36  06                 	db	6
  1959   00FF37  02                 	db	2
  1960   00FF38  00                 	db	0
  1961   00FF39  99                 	db	153
  1962   00FF3A  BD                 	db	189
  1963   00FF3B  E7                 	db	231
  1964   00FF3C  E7                 	db	231
  1965   00FF3D  BD                 	db	189
  1966   00FF3E  99                 	db	153
  1967   00FF3F  00                 	db	0
  1968   00FF40  00                 	db	0
  1969   00FF41  1C                 	db	28
  1970   00FF42  3E                 	db	62
  1971   00FF43  6B                 	db	107
  1972   00FF44  49                 	db	73
  1973   00FF45  6B                 	db	107
  1974   00FF46  3E                 	db	62
  1975   00FF47  1C                 	db	28
  1976   00FF48  00                 	db	0
  1977   00FF49  4C                 	db	76
  1978   00FF4A  7E                 	db	126
  1979   00FF4B  73                 	db	115
  1980   00FF4C  01                 	db	1
  1981   00FF4D  73                 	db	115
  1982   00FF4E  7E                 	db	126
  1983   00FF4F  4C                 	db	76
  1984   00FF50  00                 	db	0
  1985   00FF51  30                 	db	48
  1986   00FF52  78                 	db	120
  1987   00FF53  4A                 	db	74
  1988   00FF54  4F                 	db	79
  1989   00FF55  7D                 	db	125
  1990   00FF56  39                 	db	57
  1991   00FF57  00                 	db	0
  1992   00FF58  00                 	db	0
  1993   00FF59  18                 	db	24
  1994   00FF5A  3C                 	db	60
  1995   00FF5B  24                 	db	36
  1996   00FF5C  3C                 	db	60
  1997   00FF5D  3C                 	db	60
  1998   00FF5E  24                 	db	36
  1999   00FF5F  3C                 	db	60
  2000   00FF60  18                 	db	24
  2001   00FF61  98                 	db	152
  2002   00FF62  FC                 	db	252
  2003   00FF63  64                 	db	100
  2004   00FF64  3C                 	db	60
  2005   00FF65  3E                 	db	62
  2006   00FF66  27                 	db	39
  2007   00FF67  3D                 	db	61
  2008   00FF68  18                 	db	24
  2009   00FF69  1C                 	db	28
  2010   00FF6A  3E                 	db	62
  2011   00FF6B  6B                 	db	107
  2012   00FF6C  49                 	db	73
  2013   00FF6D  49                 	db	73
  2014   00FF6E  00                 	db	0
  2015   00FF6F  00                 	db	0
  2016   00FF70  00                 	db	0
  2017   00FF71  7E                 	db	126
  2018   00FF72  7F                 	db	127
  2019   00FF73  01                 	db	1
  2020   00FF74  01                 	db	1
  2021   00FF75  7F                 	db	127
  2022   00FF76  7E                 	db	126
  2023   00FF77  00                 	db	0
  2024   00FF78  00                 	db	0
  2025   00FF79  2A                 	db	42
  2026   00FF7A  2A                 	db	42
  2027   00FF7B  2A                 	db	42
  2028   00FF7C  2A                 	db	42
  2029   00FF7D  2A                 	db	42
  2030   00FF7E  2A                 	db	42
  2031   00FF7F  00                 	db	0
  2032   00FF80  00                 	db	0
  2033   00FF81  44                 	db	68
  2034   00FF82  44                 	db	68
  2035   00FF83  5F                 	db	95
  2036   00FF84  5F                 	db	95
  2037   00FF85  44                 	db	68
  2038   00FF86  44                 	db	68
  2039   00FF87  00                 	db	0
  2040   00FF88  00                 	db	0
  2041   00FF89  40                 	db	64
  2042   00FF8A  51                 	db	81
  2043   00FF8B  5B                 	db	91
  2044   00FF8C  4E                 	db	78
  2045   00FF8D  44                 	db	68
  2046   00FF8E  40                 	db	64
  2047   00FF8F  00                 	db	0
  2048   00FF90  00                 	db	0
  2049   00FF91  40                 	db	64
  2050   00FF92  44                 	db	68
  2051   00FF93  4E                 	db	78
  2052   00FF94  5B                 	db	91
  2053   00FF95  51                 	db	81
  2054   00FF96  40                 	db	64
  2055   00FF97  00                 	db	0
  2056   00FF98  00                 	db	0
  2057   00FF99  00                 	db	0
  2058   00FF9A  00                 	db	0
  2059   00FF9B  00                 	db	0
  2060   00FF9C  FE                 	db	254
  2061   00FF9D  FF                 	db	255
  2062   00FF9E  01                 	db	1
  2063   00FF9F  07                 	db	7
  2064   00FFA0  06                 	db	6
  2065   00FFA1  60                 	db	96
  2066   00FFA2  E0                 	db	224
  2067   00FFA3  80                 	db	128
  2068   00FFA4  FF                 	db	255
  2069   00FFA5  7F                 	db	127
  2070   00FFA6  00                 	db	0
  2071   00FFA7  00                 	db	0
  2072   00FFA8  00                 	db	0
  2073   00FFA9  08                 	db	8
  2074   00FFAA  08                 	db	8
  2075   00FFAB  6B                 	db	107
  2076   00FFAC  6B                 	db	107
  2077   00FFAD  08                 	db	8
  2078   00FFAE  08                 	db	8
  2079   00FFAF  00                 	db	0
  2080   00FFB0  00                 	db	0
  2081   00FFB1  24                 	db	36
  2082   00FFB2  36                 	db	54
  2083   00FFB3  12                 	db	18
  2084   00FFB4  36                 	db	54
  2085   00FFB5  24                 	db	36
  2086   00FFB6  36                 	db	54
  2087   00FFB7  12                 	db	18
  2088   00FFB8  00                 	db	0
  2089   00FFB9  00                 	db	0
  2090   00FFBA  06                 	db	6
  2091   00FFBB  0F                 	db	15
  2092   00FFBC  09                 	db	9
  2093   00FFBD  0F                 	db	15
  2094   00FFBE  06                 	db	6
  2095   00FFBF  00                 	db	0
  2096   00FFC0  00                 	db	0
  2097   00FFC1  00                 	db	0
  2098   00FFC2  00                 	db	0
  2099   00FFC3  00                 	db	0
  2100   00FFC4  18                 	db	24
  2101   00FFC5  18                 	db	24
  2102   00FFC6  00                 	db	0
  2103   00FFC7  00                 	db	0
  2104   00FFC8  00                 	db	0
  2105   00FFC9  00                 	db	0
  2106   00FFCA  00                 	db	0
  2107   00FFCB  00                 	db	0
  2108   00FFCC  10                 	db	16
  2109   00FFCD  10                 	db	16
  2110   00FFCE  00                 	db	0
  2111   00FFCF  00                 	db	0
  2112   00FFD0  00                 	db	0
  2113   00FFD1  10                 	db	16
  2114   00FFD2  30                 	db	48
  2115   00FFD3  70                 	db	112
  2116   00FFD4  C0                 	db	192
  2117   00FFD5  FF                 	db	255
  2118   00FFD6  FF                 	db	255
  2119   00FFD7  01                 	db	1
  2120   00FFD8  01                 	db	1
  2121   00FFD9  00                 	db	0
  2122   00FFDA  1F                 	db	31
  2123   00FFDB  1F                 	db	31
  2124   00FFDC  01                 	db	1
  2125   00FFDD  1F                 	db	31
  2126   00FFDE  1E                 	db	30
  2127   00FFDF  00                 	db	0
  2128   00FFE0  00                 	db	0
  2129   00FFE1  00                 	db	0
  2130   00FFE2  19                 	db	25
  2131   00FFE3  1D                 	db	29
  2132   00FFE4  17                 	db	23
  2133   00FFE5  12                 	db	18
  2134   00FFE6  00                 	db	0
  2135   00FFE7  00                 	db	0
  2136   00FFE8  00                 	db	0
  2137   00FFE9  00                 	db	0
  2138   00FFEA  00                 	db	0
  2139   00FFEB  3C                 	db	60
  2140   00FFEC  3C                 	db	60
  2141   00FFED  3C                 	db	60
  2142   00FFEE  3C                 	db	60
  2143   00FFEF  00                 	db	0
  2144   00FFF0  00                 	db	0
  2145   00FFF1  00                 	db	0
  2146   00FFF2  00                 	db	0
  2147   00FFF3  00                 	db	0
  2148   00FFF4  00                 	db	0
  2149   00FFF5  00                 	db	0
  2150   00FFF6  00                 	db	0
  2151   00FFF7  00                 	db	0
  2152   00FFF8  00                 	db	0
  2153   00FFF9                     __end_of_MAX7219_Dot_Matrix_font:
  2154                           	callstack 0
  2155   000000                     _EEDATA	set	4008
  2156   000000                     _EEADR	set	4009
  2157   000000                     _EEADRH	set	4010
  2158   000000                     _EECON2	set	4007
  2159   000000                     _T2CON	set	4042
  2160   000000                     _PR2	set	4043
  2161   000000                     _RCREG	set	4014
  2162   000000                     _TXREG	set	4013
  2163   000000                     _SPBRG	set	4015
  2164   000000                     _TXSTA	set	4012
  2165   000000                     _OSCCON	set	4051
  2166   000000                     _SSPBUF	set	4041
  2167   000000                     _SSPADD	set	4040
  2168   00FFF9                     STR_1:
  2169                           
  2170                           ; BSR set to: 0
  2171   00FFF9  41                 	db	65	;'A'
  2172   00FFFA  4C                 	db	76	;'L'
  2173   00FFFB  41                 	db	65	;'A'
  2174   00FFFC  52                 	db	82	;'R'
  2175   00FFFD  4D                 	db	77	;'M'
  2176   00FFFE  00                 	db	0
  2177   00FFFF  00                 	db	0	; dummy byte at the end
  2178   000000                     
  2179                           	psect	nvBANK0
  2180   0000F6                     __pnvBANK0:
  2181                           	callstack 0
  2182   0000F6                     _TMR0_InterruptHandler:
  2183                           	callstack 0
  2184   0000F6                     	ds	2
  2185   0000F8                     _EUSART_RxDefaultInterruptHandler:
  2186                           	callstack 0
  2187   0000F8                     	ds	2
  2188   0000FA                     _EUSART_TxDefaultInterruptHandler:
  2189                           	callstack 0
  2190   0000FA                     	ds	2
  2191   000000                     _LATCbits	set	3979
  2192   000000                     _T2CONbits	set	4042
  2193   000000                     _T0CONbits	set	4053
  2194   000000                     _RCSTAbits	set	4011
  2195   000000                     _TXSTAbits	set	4012
  2196   000000                     _SSPSTATbits	set	4039
  2197   000000                     _SSPCON1bits	set	4038
  2198   000000                     _WPUB	set	3964
  2199   000000                     _ANSEL	set	3966
  2200   000000                     _ANSELH	set	3967
  2201   000000                     _LATA	set	3977
  2202   000000                     _OSCTUNE	set	3995
  2203   000000                     _SSPCON1	set	4038
  2204   000000                     _SSPSTAT	set	4039
  2205   000000                     _T0CON	set	4053
  2206   000000                     _TMR0L	set	4054
  2207   000000                     _TMR0H	set	4055
  2208   000000                     _INTCON2bits	set	4081
  2209   000000                     _PIE1bits	set	3997
  2210   000000                     _TRISA	set	3986
  2211   000000                     _LATC	set	3979
  2212   000000                     _LATB	set	3978
  2213   000000                     _TRISC	set	3988
  2214   000000                     _TRISB	set	3987
  2215   000000                     _PORTBbits	set	3969
  2216   000000                     _TABLAT	set	4085
  2217   000000                     _TBLPTRL	set	4086
  2218   000000                     _TBLPTRH	set	4087
  2219   000000                     _TBLPTRU	set	4088
  2220   000000                     _INTCONbits	set	4082
  2221   000000                     _PIR2bits	set	4001
  2222   000000                     _EECON1bits	set	4006
  2223   000000                     _PIR1bits	set	3998
  2224   000000                     _RCSTA	set	4011
  2225   000000                     _BAUDCON	set	4024
  2226   000000                     _CCP2CON	set	4026
  2227   000000                     _SPBRGH	set	4016
  2228   000000                     _RCONbits	set	4048
  2229   000000                     _TMR2	set	4044
  2230   000000                     _CCPR2L	set	4027
  2231                           
  2232                           ; #config settings
  2233                           
  2234                           	psect	cinit
  2235   001016                     __pcinit:
  2236                           	callstack 0
  2237   001016                     start_initialization:
  2238                           	callstack 0
  2239   001016                     __initialization:
  2240                           	callstack 0
  2241                           
  2242                           ; Clear objects allocated to BANK1 (32 bytes)
  2243   001016  EE01  F000         	lfsr	0,__pbssBANK1
  2244   00101A  0E20               	movlw	32
  2245   00101C                     clear_0:
  2246   00101C  6AEE               	clrf	postinc0,c
  2247   00101E  06E8               	decf	wreg,f,c
  2248   001020  E1FD               	bnz	clear_0
  2249                           
  2250                           ; Clear objects allocated to BANK0 (79 bytes)
  2251   001022  EE00  F060         	lfsr	0,__pbssBANK0
  2252   001026  0E4F               	movlw	79
  2253   001028                     clear_1:
  2254   001028  6AEE               	clrf	postinc0,c
  2255   00102A  06E8               	decf	wreg,f,c
  2256   00102C  E1FD               	bnz	clear_1
  2257                           
  2258                           ; Clear objects allocated to COMRAM (7 bytes)
  2259   00102E  EE00  F052         	lfsr	0,__pbssCOMRAM
  2260   001032  0E07               	movlw	7
  2261   001034                     clear_2:
  2262   001034  6AEE               	clrf	postinc0,c
  2263   001036  06E8               	decf	wreg,f,c
  2264   001038  E1FD               	bnz	clear_2
  2265   00103A                     end_of_initialization:
  2266                           	callstack 0
  2267   00103A                     __end_of__initialization:
  2268                           	callstack 0
  2269   00103A  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2270   00103C  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2271   00103E  0100               	movlb	0
  2272   001040  EFD4  F003         	goto	_main	;jump to C main() function
  2273                           
  2274                           	psect	bssCOMRAM
  2275   000052                     __pbssCOMRAM:
  2276                           	callstack 0
  2277   000052                     _timer0ReloadVal:
  2278                           	callstack 0
  2279   000052                     	ds	2
  2280   000054                     _uartBufferIndex:
  2281                           	callstack 0
  2282   000054                     	ds	1
  2283   000055                     _eusartRxHead:
  2284                           	callstack 0
  2285   000055                     	ds	1
  2286   000056                     _eusartTxBufferRemaining:
  2287                           	callstack 0
  2288   000056                     	ds	1
  2289   000057                     _eusartTxTail:
  2290                           	callstack 0
  2291   000057                     	ds	1
  2292   000058                     _eusartTxHead:
  2293                           	callstack 0
  2294   000058                     	ds	1
  2295                           
  2296                           	psect	bssBANK0
  2297   000060                     __pbssBANK0:
  2298                           	callstack 0
  2299   000060                     _bufferCol:
  2300                           	callstack 0
  2301   000060                     	ds	32
  2302   000080                     _uartBuffer:
  2303                           	callstack 0
  2304   000080                     	ds	10
  2305   00008A                     _eusartRxBuffer:
  2306                           	callstack 0
  2307   00008A                     	ds	8
  2308   000092                     _eusartTxBuffer:
  2309                           	callstack 0
  2310   000092                     	ds	8
  2311   00009A                     checkButtons@button3HoldTime:
  2312                           	callstack 0
  2313   00009A                     	ds	2
  2314   00009C                     _button3PressTime:
  2315                           	callstack 0
  2316   00009C                     	ds	2
  2317   00009E                     _blinkTimer:
  2318                           	callstack 0
  2319   00009E                     	ds	2
  2320   0000A0                     checkButtons@alarmSettingMode:
  2321                           	callstack 0
  2322   0000A0                     	ds	1
  2323   0000A1                     checkButtons@button3PressCount:
  2324                           	callstack 0
  2325   0000A1                     	ds	1
  2326   0000A2                     _btTimeSet:
  2327                           	callstack 0
  2328   0000A2                     	ds	1
  2329   0000A3                     _isButton3Pressed:
  2330                           	callstack 0
  2331   0000A3                     	ds	1
  2332   0000A4                     _displayBlinking:
  2333                           	callstack 0
  2334   0000A4                     	ds	1
  2335   0000A5                     _alarmTriggered:
  2336                           	callstack 0
  2337   0000A5                     	ds	1
  2338   0000A6                     _alarmActive:
  2339                           	callstack 0
  2340   0000A6                     	ds	1
  2341   0000A7                     _alarmSet:
  2342                           	callstack 0
  2343   0000A7                     	ds	1
  2344   0000A8                     _alarmMinutes:
  2345                           	callstack 0
  2346   0000A8                     	ds	1
  2347   0000A9                     _alarmHours:
  2348                           	callstack 0
  2349   0000A9                     	ds	1
  2350   0000AA                     _seconds:
  2351                           	callstack 0
  2352   0000AA                     	ds	1
  2353   0000AB                     _minutes:
  2354                           	callstack 0
  2355   0000AB                     	ds	1
  2356   0000AC                     _hours:
  2357                           	callstack 0
  2358   0000AC                     	ds	1
  2359   0000AD                     _eusartRxCount:
  2360                           	callstack 0
  2361   0000AD                     	ds	1
  2362   0000AE                     _eusartRxTail:
  2363                           	callstack 0
  2364   0000AE                     	ds	1
  2365                           
  2366                           	psect	bssBANK1
  2367   000100                     __pbssBANK1:
  2368                           	callstack 0
  2369   000100                     	ds	32
  2370                           
  2371                           	psect	cstackBANK0
  2372   0000AF                     __pcstackBANK0:
  2373                           	callstack 0
  2374   0000AF                     printString@indx:
  2375                           	callstack 0
  2376   0000AF                     saveTimeToFlash@flashBuffer:
  2377                           	callstack 0
  2378                           
  2379                           ; 64 bytes @ 0x0
  2380   0000AF                     	ds	2
  2381   0000B1                     printString@data:
  2382                           	callstack 0
  2383                           
  2384                           ; 1 bytes @ 0x2
  2385   0000B1                     	ds	1
  2386   0000B2                     printString@strindx:
  2387                           	callstack 0
  2388                           
  2389                           ; 2 bytes @ 0x3
  2390   0000B2                     	ds	2
  2391   0000B4                     printString@i:
  2392                           	callstack 0
  2393                           
  2394                           ; 2 bytes @ 0x5
  2395   0000B4                     	ds	2
  2396   0000B6                     printString@k:
  2397                           	callstack 0
  2398                           
  2399                           ; 2 bytes @ 0x7
  2400   0000B6                     	ds	2
  2401   0000B8                     printString@j:
  2402                           	callstack 0
  2403                           
  2404                           ; 2 bytes @ 0x9
  2405   0000B8                     	ds	2
  2406   0000BA                     triggerAlarm@numCycles:
  2407                           	callstack 0
  2408   0000BA                     displayTime@displayString:
  2409                           	callstack 0
  2410   0000BA                     displayAlarmTime@displayString:
  2411                           	callstack 0
  2412                           
  2413                           ; 5 bytes @ 0xB
  2414   0000BA                     	ds	2
  2415   0000BC                     triggerAlarm@i:
  2416                           	callstack 0
  2417                           
  2418                           ; 2 bytes @ 0xD
  2419   0000BC                     	ds	3
  2420   0000BF                     displayTime@timeString:
  2421                           	callstack 0
  2422   0000BF                     displayAlarmTime@alarmTimeString:
  2423                           	callstack 0
  2424                           
  2425                           ; 5 bytes @ 0x10
  2426   0000BF                     	ds	5
  2427   0000C4                     displayTime@i:
  2428                           	callstack 0
  2429   0000C4                     displayAlarmTime@i:
  2430                           	callstack 0
  2431                           
  2432                           ; 2 bytes @ 0x15
  2433   0000C4                     	ds	43
  2434   0000EF                     saveTimeToFlash@flashAddress:
  2435                           	callstack 0
  2436                           
  2437                           ; 4 bytes @ 0x40
  2438   0000EF                     	ds	4
  2439   0000F3                     saveTimeToFlash@i:
  2440                           	callstack 0
  2441                           
  2442                           ; 1 bytes @ 0x44
  2443   0000F3                     	ds	1
  2444   0000F4                     main@hours_pom:
  2445                           	callstack 0
  2446                           
  2447                           ; 1 bytes @ 0x45
  2448   0000F4                     	ds	1
  2449   0000F5                     main@minutes_pom:
  2450                           	callstack 0
  2451                           
  2452                           ; 1 bytes @ 0x46
  2453   0000F5                     	ds	1
  2454                           
  2455                           	psect	cstackCOMRAM
  2456   000001                     __pcstackCOMRAM:
  2457                           	callstack 0
  2458   000001                     btGetData@rcv:
  2459                           	callstack 0
  2460                           
  2461                           ; 1 bytes @ 0x0
  2462   000001                     	ds	1
  2463   000002                     ??_INTERRUPT_InterruptManager:
  2464                           
  2465                           ; 1 bytes @ 0x1
  2466   000002                     	ds	4
  2467   000006                     ?___awdiv:
  2468                           	callstack 0
  2469   000006                     ?___awmod:
  2470                           	callstack 0
  2471   000006                     SPI_Exchange8bit@data:
  2472                           	callstack 0
  2473   000006                     EUSART_SetTxInterruptHandler@handler:
  2474                           	callstack 0
  2475   000006                     EUSART_SetRxInterruptHandler@handler:
  2476                           	callstack 0
  2477   000006                     TMR0_SetInterruptHandler@InterruptHandler:
  2478                           	callstack 0
  2479   000006                     PWM2_LoadDutyValue@dutyValue:
  2480                           	callstack 0
  2481   000006                     ___awdiv@dividend:
  2482                           	callstack 0
  2483   000006                     ___awmod@dividend:
  2484                           	callstack 0
  2485   000006                     FLASH_ReadByte@flashAddr:
  2486                           	callstack 0
  2487   000006                     FLASH_EraseBlock@baseAddr:
  2488                           	callstack 0
  2489                           
  2490                           ; 4 bytes @ 0x5
  2491   000006                     	ds	1
  2492   000007                     max7219_cmd@data:
  2493                           	callstack 0
  2494                           
  2495                           ; 1 bytes @ 0x6
  2496   000007                     	ds	1
  2497   000008                     ??_TMR0_Initialize:
  2498   000008                     ??_PWM2_LoadDutyValue:
  2499   000008                     ??_max7219_cmd:
  2500   000008                     ___awdiv@divisor:
  2501                           	callstack 0
  2502   000008                     ___awmod@divisor:
  2503                           	callstack 0
  2504                           
  2505                           ; 2 bytes @ 0x7
  2506   000008                     	ds	2
  2507   00000A                     FLASH_EraseBlock@GIEBitValue:
  2508                           	callstack 0
  2509   00000A                     max7219_cmd@Addr:
  2510                           	callstack 0
  2511   00000A                     ___awdiv@counter:
  2512                           	callstack 0
  2513   00000A                     ___awmod@counter:
  2514                           	callstack 0
  2515                           
  2516                           ; 1 bytes @ 0x9
  2517   00000A                     	ds	1
  2518   00000B                     ___awdiv@sign:
  2519                           	callstack 0
  2520   00000B                     ___awmod@sign:
  2521                           	callstack 0
  2522   00000B                     max7219_cmd@writeData:
  2523                           	callstack 0
  2524   00000B                     FLASH_WriteBlock@writeAddr:
  2525                           	callstack 0
  2526                           
  2527                           ; 4 bytes @ 0xA
  2528   00000B                     	ds	1
  2529   00000C                     ___awdiv@quotient:
  2530                           	callstack 0
  2531                           
  2532                           ; 2 bytes @ 0xB
  2533   00000C                     	ds	1
  2534   00000D                     max7219_cmd@i:
  2535                           	callstack 0
  2536                           
  2537                           ; 2 bytes @ 0xC
  2538   00000D                     	ds	1
  2539   00000E                     max_write@row:
  2540                           	callstack 0
  2541                           
  2542                           ; 2 bytes @ 0xD
  2543   00000E                     	ds	1
  2544   00000F                     FLASH_WriteBlock@flashWrBufPtr:
  2545                           	callstack 0
  2546                           
  2547                           ; 1 bytes @ 0xE
  2548   00000F                     	ds	1
  2549   000010                     max_write@data:
  2550                           	callstack 0
  2551   000010                     FLASH_WriteBlock@blockStartAddr:
  2552                           	callstack 0
  2553                           
  2554                           ; 4 bytes @ 0xF
  2555   000010                     	ds	1
  2556   000011                     ??_max_write:
  2557                           
  2558                           ; 1 bytes @ 0x10
  2559   000011                     	ds	2
  2560   000013                     max_write@offset:
  2561                           	callstack 0
  2562                           
  2563                           ; 2 bytes @ 0x12
  2564   000013                     	ds	1
  2565   000014                     FLASH_WriteBlock@GIEBitValue:
  2566                           	callstack 0
  2567                           
  2568                           ; 1 bytes @ 0x13
  2569   000014                     	ds	1
  2570   000015                     FLASH_WriteBlock@j:
  2571                           	callstack 0
  2572   000015                     max_write@devTarget:
  2573                           	callstack 0
  2574                           
  2575                           ; 2 bytes @ 0x14
  2576   000015                     	ds	1
  2577   000016                     FLASH_WriteBlock@numberOfWriteBlocks:
  2578                           	callstack 0
  2579                           
  2580                           ; 1 bytes @ 0x15
  2581   000016                     	ds	1
  2582   000017                     FLASH_WriteBlock@dataCounter:
  2583                           	callstack 0
  2584   000017                     max_write@dev:
  2585                           	callstack 0
  2586                           
  2587                           ; 2 bytes @ 0x16
  2588   000017                     	ds	1
  2589   000018                     FLASH_WriteBlock@i:
  2590                           	callstack 0
  2591                           
  2592                           ; 1 bytes @ 0x17
  2593   000018                     	ds	1
  2594   000019                     max_write@writeData:
  2595                           	callstack 0
  2596                           
  2597                           ; 2 bytes @ 0x18
  2598   000019                     	ds	2
  2599   00001B                     ??_flushBuffer:
  2600                           
  2601                           ; 1 bytes @ 0x1A
  2602   00001B                     	ds	3
  2603   00001E                     flushBuffer@bufferRow:
  2604                           	callstack 0
  2605                           
  2606                           ; 32 bytes @ 0x1D
  2607   00001E                     	ds	32
  2608   00003E                     flushBuffer@dev:
  2609                           	callstack 0
  2610                           
  2611                           ; 2 bytes @ 0x3D
  2612   00003E                     	ds	2
  2613   000040                     flushBuffer@j:
  2614                           	callstack 0
  2615                           
  2616                           ; 2 bytes @ 0x3F
  2617   000040                     	ds	2
  2618   000042                     flushBuffer@row:
  2619                           	callstack 0
  2620                           
  2621                           ; 2 bytes @ 0x41
  2622   000042                     	ds	2
  2623   000044                     flushBuffer@i:
  2624                           	callstack 0
  2625                           
  2626                           ; 2 bytes @ 0x43
  2627   000044                     	ds	2
  2628   000046                     clearDisplay@i:
  2629                           	callstack 0
  2630   000046                     printString@str:
  2631                           	callstack 0
  2632                           
  2633                           ; 2 bytes @ 0x45
  2634   000046                     	ds	2
  2635   000048                     ??_printString:
  2636                           
  2637                           ; 1 bytes @ 0x47
  2638   000048                     	ds	8
  2639   000050                     ??_checkButtons:
  2640   000050                     ??_triggerAlarm:
  2641   000050                     
  2642                           ; 1 bytes @ 0x4F
  2643   000050                     	ds	2
  2644   000052                     
  2645                           ; 1 bytes @ 0x51
  2646 ;;
  2647 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2648 ;;
  2649 ;; *************** function _main *****************
  2650 ;; Defined at:
  2651 ;;		line 46 in file "main.c"
  2652 ;; Parameters:    Size  Location     Type
  2653 ;;		None
  2654 ;; Auto vars:     Size  Location     Type
  2655 ;;  minutes_pom     1   70[BANK0 ] unsigned char 
  2656 ;;  hours_pom       1   69[BANK0 ] unsigned char 
  2657 ;; Return value:  Size  Location     Type
  2658 ;;                  1    wreg      void 
  2659 ;; Registers used:
  2660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2661 ;; Tracked objects:
  2662 ;;		On entry : 0/0
  2663 ;;		On exit  : 0/0
  2664 ;;		Unchanged: 0/0
  2665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2667 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2669 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2670 ;;Total ram usage:        2 bytes
  2671 ;; Hardware stack levels required when called: 11
  2672 ;; This function calls:
  2673 ;;		_SYSTEM_Initialize
  2674 ;;		_TMR0_StartTimer
  2675 ;;		_checkButtons
  2676 ;;		_clearDisplay
  2677 ;;		_displayTime
  2678 ;;		_loadTimeFromFlash
  2679 ;;		_matrixInit
  2680 ;;		_processAlarm
  2681 ;;		_saveTimeToFlash
  2682 ;; This function is called by:
  2683 ;;		Startup code after reset
  2684 ;; This function uses a non-reentrant model
  2685 ;;
  2686                           
  2687                           	psect	text0
  2688   0007A8                     __ptext0:
  2689                           	callstack 0
  2690   0007A8                     _main:
  2691                           	callstack 20
  2692   0007A8                     
  2693                           ;main.c: 48:     SYSTEM_Initialize();
  2694   0007A8  EC39  F008         	call	_SYSTEM_Initialize	;wreg free
  2695                           
  2696                           ;main.c: 49:     matrixInit();
  2697   0007AC  ECA5  F007         	call	_matrixInit	;wreg free
  2698   0007B0                     
  2699                           ;main.c: 50:     clearDisplay();
  2700   0007B0  EC89  F007         	call	_clearDisplay	;wreg free
  2701   0007B4                     
  2702                           ;main.c: 51:     loadTimeFromFlash();
  2703   0007B4  ECF8  F004         	call	_loadTimeFromFlash	;wreg free
  2704   0007B8                     
  2705                           ;main.c: 53:     TMR0_StartTimer();
  2706   0007B8  ECAD  F008         	call	_TMR0_StartTimer	;wreg free
  2707   0007BC                     
  2708                           ;main.c: 55:     INTCONbits.GIE = 1;
  2709   0007BC  8EF2               	bsf	242,7,c	;volatile
  2710   0007BE                     
  2711                           ;main.c: 56:     INTCONbits.PEIE = 1;
  2712   0007BE  8CF2               	bsf	242,6,c	;volatile
  2713   0007C0                     l3897:
  2714                           
  2715                           ;main.c: 60:     {;main.c: 61:         displayTime();
  2716   0007C0  EC53  F005         	call	_displayTime	;wreg free
  2717   0007C4                     
  2718                           ;main.c: 62:         checkButtons();
  2719   0007C4  EC4E  F000         	call	_checkButtons	;wreg free
  2720   0007C8                     
  2721                           ;main.c: 63:         processAlarm();
  2722   0007C8  ECED  F006         	call	_processAlarm	;wreg free
  2723   0007CC                     
  2724                           ;main.c: 64:         if(btTimeSet) {
  2725   0007CC  0100               	movlb	0	; () banked
  2726   0007CE  51A2               	movf	_btTimeSet& (0+255),w,b
  2727   0007D0  B4D8               	btfsc	status,2,c
  2728   0007D2  EFED  F003         	goto	u3191
  2729   0007D6  EFEF  F003         	goto	u3190
  2730   0007DA                     u3191:
  2731   0007DA  EFE0  F003         	goto	l3897
  2732   0007DE                     u3190:
  2733   0007DE                     
  2734                           ; BSR set to: 0
  2735                           ;main.c: 66:             if (uartBuffer[0] == 'H' && uartBuffer[3] == 'M' && uartBuffer[
      +                          6] == ';')
  2736   0007DE  0E48               	movlw	72
  2737   0007E0  1980               	xorwf	_uartBuffer& (0+255),w,b
  2738   0007E2  A4D8               	btfss	status,2,c
  2739   0007E4  EFF6  F003         	goto	u3201
  2740   0007E8  EFF8  F003         	goto	u3200
  2741   0007EC                     u3201:
  2742   0007EC  EFE0  F003         	goto	l3897
  2743   0007F0                     u3200:
  2744   0007F0                     
  2745                           ; BSR set to: 0
  2746   0007F0  0E4D               	movlw	77
  2747   0007F2  1983               	xorwf	(_uartBuffer+3)& (0+255),w,b
  2748   0007F4  A4D8               	btfss	status,2,c
  2749   0007F6  EFFF  F003         	goto	u3211
  2750   0007FA  EF01  F004         	goto	u3210
  2751   0007FE                     u3211:
  2752   0007FE  EFE0  F003         	goto	l3897
  2753   000802                     u3210:
  2754   000802                     
  2755                           ; BSR set to: 0
  2756   000802  0E3B               	movlw	59
  2757   000804  1986               	xorwf	(_uartBuffer+6)& (0+255),w,b
  2758   000806  A4D8               	btfss	status,2,c
  2759   000808  EF08  F004         	goto	u3221
  2760   00080C  EF0A  F004         	goto	u3220
  2761   000810                     u3221:
  2762   000810  EFE0  F003         	goto	l3897
  2763   000814                     u3220:
  2764   000814                     
  2765                           ; BSR set to: 0
  2766                           ;main.c: 67:             {;main.c: 69:                 uint8_t hours_pom = (uartBuffer[1
      +                          ] - '0') * 10 + (uartBuffer[2] - '0');
  2767   000814  5181               	movf	(_uartBuffer+1)& (0+255),w,b
  2768   000816  0D0A               	mullw	10
  2769   000818  50F3               	movf	243,w,c
  2770   00081A  2582               	addwf	(_uartBuffer+2)& (0+255),w,b
  2771   00081C  0FF0               	addlw	240
  2772   00081E  6FF4               	movwf	main@hours_pom& (0+255),b
  2773                           
  2774                           ;main.c: 72:                 uint8_t minutes_pom = (uartBuffer[4] - '0') * 10 + (uartBuf
      +                          fer[5] - '0');
  2775   000820  5184               	movf	(_uartBuffer+4)& (0+255),w,b
  2776   000822  0D0A               	mullw	10
  2777   000824  50F3               	movf	243,w,c
  2778   000826  2585               	addwf	(_uartBuffer+5)& (0+255),w,b
  2779   000828  0FF0               	addlw	240
  2780   00082A  6FF5               	movwf	main@minutes_pom& (0+255),b
  2781   00082C                     
  2782                           ; BSR set to: 0
  2783                           ;main.c: 75:                 if (hours_pom < 24 && minutes_pom < 60)
  2784   00082C  0E18               	movlw	24
  2785   00082E  61F4               	cpfslt	main@hours_pom& (0+255),b
  2786   000830  EF1C  F004         	goto	u3231
  2787   000834  EF1E  F004         	goto	u3230
  2788   000838                     u3231:
  2789   000838  EF32  F004         	goto	l467
  2790   00083C                     u3230:
  2791   00083C                     
  2792                           ; BSR set to: 0
  2793   00083C  0E3C               	movlw	60
  2794   00083E  61F5               	cpfslt	main@minutes_pom& (0+255),b
  2795   000840  EF24  F004         	goto	u3241
  2796   000844  EF26  F004         	goto	u3240
  2797   000848                     u3241:
  2798   000848  EF32  F004         	goto	l467
  2799   00084C                     u3240:
  2800   00084C                     
  2801                           ; BSR set to: 0
  2802                           ;main.c: 76:                 {;main.c: 78:                     btTimeSet = 0;
  2803   00084C  0E00               	movlw	0
  2804   00084E  6FA2               	movwf	_btTimeSet& (0+255),b
  2805   000850                     
  2806                           ; BSR set to: 0
  2807                           ;main.c: 79:                     hours = hours_pom;
  2808   000850  C0F4  F0AC         	movff	main@hours_pom,_hours
  2809   000854                     
  2810                           ; BSR set to: 0
  2811                           ;main.c: 80:                     minutes = minutes_pom;
  2812   000854  C0F5  F0AB         	movff	main@minutes_pom,_minutes
  2813   000858                     
  2814                           ; BSR set to: 0
  2815                           ;main.c: 81:                     displayTime();
  2816   000858  EC53  F005         	call	_displayTime	;wreg free
  2817   00085C                     
  2818                           ;main.c: 82:                     saveTimeToFlash();
  2819   00085C  ECAE  F006         	call	_saveTimeToFlash	;wreg free
  2820   000860  EFE0  F003         	goto	l3897
  2821   000864                     l467:
  2822                           
  2823                           ; BSR set to: 0
  2824   000864  EFE0  F003         	goto	l3897
  2825   000868  EF4C  F000         	goto	start
  2826   00086C                     __end_of_main:
  2827                           	callstack 0
  2828                           
  2829 ;; *************** function _processAlarm *****************
  2830 ;; Defined at:
  2831 ;;		line 145 in file "main.c"
  2832 ;; Parameters:    Size  Location     Type
  2833 ;;		None
  2834 ;; Auto vars:     Size  Location     Type
  2835 ;;		None
  2836 ;; Return value:  Size  Location     Type
  2837 ;;                  1    wreg      void 
  2838 ;; Registers used:
  2839 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2840 ;; Tracked objects:
  2841 ;;		On entry : 0/0
  2842 ;;		On exit  : 0/0
  2843 ;;		Unchanged: 0/0
  2844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;Total ram usage:        0 bytes
  2850 ;; Hardware stack levels used: 1
  2851 ;; Hardware stack levels required when called: 10
  2852 ;; This function calls:
  2853 ;;		_triggerAlarm
  2854 ;; This function is called by:
  2855 ;;		_main
  2856 ;; This function uses a non-reentrant model
  2857 ;;
  2858                           
  2859                           	psect	text1
  2860   000DDA                     __ptext1:
  2861                           	callstack 0
  2862   000DDA                     _processAlarm:
  2863                           	callstack 20
  2864   000DDA                     
  2865                           ;main.c: 148:     if (alarmSet && !alarmTriggered)
  2866   000DDA  0100               	movlb	0	; () banked
  2867   000DDC  51A7               	movf	_alarmSet& (0+255),w,b
  2868   000DDE  B4D8               	btfsc	status,2,c
  2869   000DE0  EFF4  F006         	goto	u3031
  2870   000DE4  EFF6  F006         	goto	u3030
  2871   000DE8                     u3031:
  2872   000DE8  EF15  F007         	goto	l493
  2873   000DEC                     u3030:
  2874   000DEC                     
  2875                           ; BSR set to: 0
  2876   000DEC  51A5               	movf	_alarmTriggered& (0+255),w,b
  2877   000DEE  A4D8               	btfss	status,2,c
  2878   000DF0  EFFC  F006         	goto	u3041
  2879   000DF4  EFFE  F006         	goto	u3040
  2880   000DF8                     u3041:
  2881   000DF8  EF15  F007         	goto	l493
  2882   000DFC                     u3040:
  2883   000DFC                     
  2884                           ; BSR set to: 0
  2885                           ;main.c: 149:     {;main.c: 151:         if (hours == alarmHours && minutes == alarmMinu
      +                          tes)
  2886   000DFC  51A9               	movf	_alarmHours& (0+255),w,b
  2887   000DFE  19AC               	xorwf	_hours& (0+255),w,b
  2888   000E00  A4D8               	btfss	status,2,c
  2889   000E02  EF05  F007         	goto	u3051
  2890   000E06  EF07  F007         	goto	u3050
  2891   000E0A                     u3051:
  2892   000E0A  EF15  F007         	goto	l493
  2893   000E0E                     u3050:
  2894   000E0E                     
  2895                           ; BSR set to: 0
  2896   000E0E  51A8               	movf	_alarmMinutes& (0+255),w,b
  2897   000E10  19AB               	xorwf	_minutes& (0+255),w,b
  2898   000E12  A4D8               	btfss	status,2,c
  2899   000E14  EF0E  F007         	goto	u3061
  2900   000E18  EF10  F007         	goto	u3060
  2901   000E1C                     u3061:
  2902   000E1C  EF15  F007         	goto	l493
  2903   000E20                     u3060:
  2904   000E20                     
  2905                           ; BSR set to: 0
  2906                           ;main.c: 152:         {;main.c: 153:             triggerAlarm();
  2907   000E20  EC6F  F003         	call	_triggerAlarm	;wreg free
  2908   000E24                     
  2909                           ;main.c: 154:             alarmTriggered = 1;
  2910   000E24  0E01               	movlw	1
  2911   000E26  0100               	movlb	0	; () banked
  2912   000E28  6FA5               	movwf	_alarmTriggered& (0+255),b
  2913   000E2A                     l493:
  2914                           
  2915                           ; BSR set to: 0
  2916   000E2A  0012               	return		;funcret
  2917   000E2C                     __end_of_processAlarm:
  2918                           	callstack 0
  2919                           
  2920 ;; *************** function _triggerAlarm *****************
  2921 ;; Defined at:
  2922 ;;		line 160 in file "main.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;  i               2   13[BANK0 ] unsigned int 
  2927 ;;  numCycles       2   11[BANK0 ] unsigned int 
  2928 ;; Return value:  Size  Location     Type
  2929 ;;                  1    wreg      void 
  2930 ;; Registers used:
  2931 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2932 ;; Tracked objects:
  2933 ;;		On entry : 0/0
  2934 ;;		On exit  : 0/0
  2935 ;;		Unchanged: 0/0
  2936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2938 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2939 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2940 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2941 ;;Total ram usage:        6 bytes
  2942 ;; Hardware stack levels used: 1
  2943 ;; Hardware stack levels required when called: 9
  2944 ;; This function calls:
  2945 ;;		_PWM2_LoadDutyValue
  2946 ;;		_clearAlarm
  2947 ;;		_clearDisplay
  2948 ;;		_printString
  2949 ;; This function is called by:
  2950 ;;		_processAlarm
  2951 ;; This function uses a non-reentrant model
  2952 ;;
  2953                           
  2954                           	psect	text2
  2955   0006DE                     __ptext2:
  2956                           	callstack 0
  2957   0006DE                     _triggerAlarm:
  2958                           	callstack 20
  2959   0006DE                     
  2960                           ;main.c: 167:     unsigned int numCycles = 60000 / (2 * 500);
  2961   0006DE  0E00               	movlw	0
  2962   0006E0  0100               	movlb	0	; () banked
  2963   0006E2  6FBB               	movwf	(triggerAlarm@numCycles+1)& (0+255),b
  2964   0006E4  0E3C               	movlw	60
  2965   0006E6  6FBA               	movwf	triggerAlarm@numCycles& (0+255),b
  2966                           
  2967                           ;main.c: 169:     for (unsigned int i = 0; i < numCycles; i++)
  2968   0006E8  0E00               	movlw	0
  2969   0006EA  6FBD               	movwf	(triggerAlarm@i+1)& (0+255),b
  2970   0006EC  0E00               	movlw	0
  2971   0006EE  6FBC               	movwf	triggerAlarm@i& (0+255),b
  2972   0006F0  EFC8  F003         	goto	l3635
  2973   0006F4                     l497:
  2974                           
  2975                           ; BSR set to: 0
  2976                           ;main.c: 170:     {;main.c: 172:         if (!PORTBbits.RB2)
  2977   0006F4  B481               	btfsc	129,2,c	;volatile
  2978   0006F6  EF7F  F003         	goto	u2791
  2979   0006FA  EF81  F003         	goto	u2790
  2980   0006FE                     u2791:
  2981   0006FE  EF9B  F003         	goto	l3621
  2982   000702                     u2790:
  2983   000702                     
  2984                           ; BSR set to: 0
  2985                           ;main.c: 173:         {;main.c: 174:             _delay((unsigned long)((100)*(8000000/4
      +                          000.0)));
  2986   000702  0E02               	movlw	2
  2987   000704  6E51               	movwf	(??_triggerAlarm+1)^0,c
  2988   000706  0E04               	movlw	4
  2989   000708  6E50               	movwf	??_triggerAlarm^0,c
  2990   00070A  0EBA               	movlw	186
  2991   00070C                     u3267:
  2992   00070C  2EE8               	decfsz	wreg,f,c
  2993   00070E  D7FE               	bra	u3267
  2994   000710  2E50               	decfsz	??_triggerAlarm^0,f,c
  2995   000712  D7FC               	bra	u3267
  2996   000714  2E51               	decfsz	(??_triggerAlarm+1)^0,f,c
  2997   000716  D7FA               	bra	u3267
  2998   000718  F000 F000          	nop2	
  2999   00071C                     
  3000                           ;main.c: 175:             if (!PORTBbits.RB2)
  3001   00071C  B481               	btfsc	129,2,c	;volatile
  3002   00071E  EF93  F003         	goto	u2801
  3003   000722  EF95  F003         	goto	u2800
  3004   000726                     u2801:
  3005   000726  EF9B  F003         	goto	l3621
  3006   00072A                     u2800:
  3007   00072A                     
  3008                           ;main.c: 176:             {;main.c: 177:                 clearDisplay();
  3009   00072A  EC89  F007         	call	_clearDisplay	;wreg free
  3010   00072E                     
  3011                           ;main.c: 178:                 clearAlarm();
  3012   00072E  EC90  F008         	call	_clearAlarm	;wreg free
  3013   000732  EFD3  F003         	goto	l500
  3014   000736                     l3621:
  3015                           
  3016                           ;main.c: 184:         printString("ALARM");
  3017   000736  0EF9               	movlw	low STR_1
  3018   000738  6E46               	movwf	printString@str^0,c
  3019   00073A  0EFF               	movlw	high STR_1
  3020   00073C  6E47               	movwf	(printString@str+1)^0,c
  3021   00073E  EC99  F001         	call	_printString	;wreg free
  3022   000742                     
  3023                           ;main.c: 185:         PWM2_LoadDutyValue(500);
  3024   000742  0E01               	movlw	1
  3025   000744  6E07               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^0,c
  3026   000746  0EF4               	movlw	244
  3027   000748  6E06               	movwf	PWM2_LoadDutyValue@dutyValue^0,c
  3028   00074A  ECF3  F007         	call	_PWM2_LoadDutyValue	;wreg free
  3029   00074E                     
  3030                           ;main.c: 186:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3031   00074E  0E06               	movlw	6
  3032   000750  6E51               	movwf	(??_triggerAlarm+1)^0,c
  3033   000752  0E13               	movlw	19
  3034   000754  6E50               	movwf	??_triggerAlarm^0,c
  3035   000756  0EAE               	movlw	174
  3036   000758                     u3277:
  3037   000758  2EE8               	decfsz	wreg,f,c
  3038   00075A  D7FE               	bra	u3277
  3039   00075C  2E50               	decfsz	??_triggerAlarm^0,f,c
  3040   00075E  D7FC               	bra	u3277
  3041   000760  2E51               	decfsz	(??_triggerAlarm+1)^0,f,c
  3042   000762  D7FA               	bra	u3277
  3043   000764                     
  3044                           ;main.c: 187:         clearDisplay();
  3045   000764  EC89  F007         	call	_clearDisplay	;wreg free
  3046   000768                     
  3047                           ;main.c: 188:         PWM2_LoadDutyValue(0);
  3048   000768  0E00               	movlw	0
  3049   00076A  6E07               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^0,c
  3050   00076C  0E00               	movlw	0
  3051   00076E  6E06               	movwf	PWM2_LoadDutyValue@dutyValue^0,c
  3052   000770  ECF3  F007         	call	_PWM2_LoadDutyValue	;wreg free
  3053   000774                     
  3054                           ;main.c: 189:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3055   000774  0E06               	movlw	6
  3056   000776  6E51               	movwf	(??_triggerAlarm+1)^0,c
  3057   000778  0E13               	movlw	19
  3058   00077A  6E50               	movwf	??_triggerAlarm^0,c
  3059   00077C  0EAE               	movlw	174
  3060   00077E                     u3287:
  3061   00077E  2EE8               	decfsz	wreg,f,c
  3062   000780  D7FE               	bra	u3287
  3063   000782  2E50               	decfsz	??_triggerAlarm^0,f,c
  3064   000784  D7FC               	bra	u3287
  3065   000786  2E51               	decfsz	(??_triggerAlarm+1)^0,f,c
  3066   000788  D7FA               	bra	u3287
  3067   00078A                     
  3068                           ;main.c: 190:     }
  3069   00078A  0100               	movlb	0	; () banked
  3070   00078C  4BBC               	infsnz	triggerAlarm@i& (0+255),f,b
  3071   00078E  2BBD               	incf	(triggerAlarm@i+1)& (0+255),f,b
  3072   000790                     l3635:
  3073                           
  3074                           ; BSR set to: 0
  3075   000790  51BA               	movf	triggerAlarm@numCycles& (0+255),w,b
  3076   000792  5DBC               	subwf	triggerAlarm@i& (0+255),w,b
  3077   000794  51BB               	movf	(triggerAlarm@numCycles+1)& (0+255),w,b
  3078   000796  59BD               	subwfb	(triggerAlarm@i+1)& (0+255),w,b
  3079   000798  A0D8               	btfss	status,0,c
  3080   00079A  EFD1  F003         	goto	u2811
  3081   00079E  EFD3  F003         	goto	u2810
  3082   0007A2                     u2811:
  3083   0007A2  EF7A  F003         	goto	l497
  3084   0007A6                     u2810:
  3085   0007A6                     l500:
  3086   0007A6  0012               	return		;funcret
  3087   0007A8                     __end_of_triggerAlarm:
  3088                           	callstack 0
  3089                           
  3090 ;; *************** function _clearDisplay *****************
  3091 ;; Defined at:
  3092 ;;		line 105 in file "MAX7219.c"
  3093 ;; Parameters:    Size  Location     Type
  3094 ;;		None
  3095 ;; Auto vars:     Size  Location     Type
  3096 ;;  i               2   69[COMRAM] int 
  3097 ;; Return value:  Size  Location     Type
  3098 ;;                  1    wreg      void 
  3099 ;; Registers used:
  3100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3101 ;; Tracked objects:
  3102 ;;		On entry : 0/0
  3103 ;;		On exit  : 0/0
  3104 ;;		Unchanged: 0/0
  3105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3107 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3109 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;Total ram usage:        2 bytes
  3111 ;; Hardware stack levels used: 1
  3112 ;; Hardware stack levels required when called: 8
  3113 ;; This function calls:
  3114 ;;		_flushBuffer
  3115 ;; This function is called by:
  3116 ;;		_main
  3117 ;;		_triggerAlarm
  3118 ;; This function uses a non-reentrant model
  3119 ;;
  3120                           
  3121                           	psect	text3
  3122   000F12                     __ptext3:
  3123                           	callstack 0
  3124   000F12                     _clearDisplay:
  3125                           	callstack 20
  3126   000F12                     
  3127                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  3128   000F12  0E00               	movlw	0
  3129   000F14  6E47               	movwf	(clearDisplay@i+1)^0,c
  3130   000F16  0E00               	movlw	0
  3131   000F18  6E46               	movwf	clearDisplay@i^0,c
  3132   000F1A                     l3401:
  3133                           
  3134                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  3135   000F1A  5046               	movf	clearDisplay@i^0,w,c
  3136   000F1C  0F60               	addlw	low _bufferCol
  3137   000F1E  6ED9               	movwf	fsr2l,c
  3138   000F20  6ADA               	clrf	fsr2h,c
  3139   000F22  6ADF               	clrf	indf2,c
  3140   000F24                     
  3141                           ;MAX7219.c: 110:  }
  3142   000F24  4A46               	infsnz	clearDisplay@i^0,f,c
  3143   000F26  2A47               	incf	(clearDisplay@i+1)^0,f,c
  3144   000F28  BE47               	btfsc	(clearDisplay@i+1)^0,7,c
  3145   000F2A  EFA0  F007         	goto	u2591
  3146   000F2E  5047               	movf	(clearDisplay@i+1)^0,w,c
  3147   000F30  E109               	bnz	u2590
  3148   000F32  0E1F               	movlw	31
  3149   000F34  5C46               	subwf	clearDisplay@i^0,w,c
  3150   000F36  A0D8               	btfss	status,0,c
  3151   000F38  EFA0  F007         	goto	u2591
  3152   000F3C  EFA2  F007         	goto	u2590
  3153   000F40                     u2591:
  3154   000F40  EF8D  F007         	goto	l3401
  3155   000F44                     u2590:
  3156   000F44                     
  3157                           ;MAX7219.c: 111:  flushBuffer();
  3158   000F44  EC63  F002         	call	_flushBuffer	;wreg free
  3159   000F48  0012               	return		;funcret
  3160   000F4A                     __end_of_clearDisplay:
  3161                           	callstack 0
  3162                           
  3163 ;; *************** function _PWM2_LoadDutyValue *****************
  3164 ;; Defined at:
  3165 ;;		line 78 in file "mcc_generated_files/pwm2.c"
  3166 ;; Parameters:    Size  Location     Type
  3167 ;;  dutyValue       2    5[COMRAM] unsigned short 
  3168 ;; Auto vars:     Size  Location     Type
  3169 ;;		None
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      void 
  3172 ;; Registers used:
  3173 ;;		wreg, status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3179 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3183 ;;Total ram usage:        4 bytes
  3184 ;; Hardware stack levels used: 1
  3185 ;; Hardware stack levels required when called: 5
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_triggerAlarm
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text4
  3194   000FE6                     __ptext4:
  3195                           	callstack 0
  3196   000FE6                     _PWM2_LoadDutyValue:
  3197                           	callstack 23
  3198   000FE6                     
  3199                           ;mcc_generated_files/pwm2.c: 78: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 79: {;mcc_generated_files/pwm2.c: 81:     CCPR2L = ((dutyValue & 0x03FC
      +                          )>>2);
  3200   000FE6  C006  F008         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  3201   000FEA  C007  F009         	movff	PWM2_LoadDutyValue@dutyValue+1,??_PWM2_LoadDutyValue+1
  3202   000FEE  90D8               	bcf	status,0,c
  3203   000FF0  3209               	rrcf	(??_PWM2_LoadDutyValue+1)^0,f,c
  3204   000FF2  3208               	rrcf	??_PWM2_LoadDutyValue^0,f,c
  3205   000FF4  90D8               	bcf	status,0,c
  3206   000FF6  3209               	rrcf	(??_PWM2_LoadDutyValue+1)^0,f,c
  3207   000FF8  3208               	rrcf	??_PWM2_LoadDutyValue^0,f,c
  3208   000FFA  5008               	movf	??_PWM2_LoadDutyValue^0,w,c
  3209   000FFC  6EBB               	movwf	187,c	;volatile
  3210                           
  3211                           ;mcc_generated_files/pwm2.c: 84:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  3212   000FFE  C006  F008         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  3213   001002  0E03               	movlw	3
  3214   001004  1608               	andwf	??_PWM2_LoadDutyValue^0,f,c
  3215   001006  3A08               	swapf	??_PWM2_LoadDutyValue^0,f,c
  3216   001008  0EF0               	movlw	240
  3217   00100A  1608               	andwf	??_PWM2_LoadDutyValue^0,f,c
  3218   00100C  50BA               	movf	186,w,c	;volatile
  3219   00100E  0BCF               	andlw	207
  3220   001010  1008               	iorwf	??_PWM2_LoadDutyValue^0,w,c
  3221   001012  6EBA               	movwf	186,c	;volatile
  3222   001014  0012               	return		;funcret
  3223   001016                     __end_of_PWM2_LoadDutyValue:
  3224                           	callstack 0
  3225                           
  3226 ;; *************** function _matrixInit *****************
  3227 ;; Defined at:
  3228 ;;		line 96 in file "MAX7219.c"
  3229 ;; Parameters:    Size  Location     Type
  3230 ;;		None
  3231 ;; Auto vars:     Size  Location     Type
  3232 ;;		None
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  1    wreg      void 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0, cstack
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3246 ;;Total ram usage:        0 bytes
  3247 ;; Hardware stack levels used: 1
  3248 ;; Hardware stack levels required when called: 7
  3249 ;; This function calls:
  3250 ;;		_max7219_cmd
  3251 ;; This function is called by:
  3252 ;;		_main
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           	psect	text5
  3257   000F4A                     __ptext5:
  3258                           	callstack 0
  3259   000F4A                     _matrixInit:
  3260                           	callstack 23
  3261   000F4A                     
  3262                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  3263   000F4A  0E00               	movlw	0
  3264   000F4C  6E07               	movwf	max7219_cmd@data^0,c
  3265   000F4E  0E09               	movlw	9
  3266   000F50  EC16  F007         	call	_max7219_cmd
  3267                           
  3268                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  3269   000F54  0E01               	movlw	1
  3270   000F56  6E07               	movwf	max7219_cmd@data^0,c
  3271   000F58  0E0A               	movlw	10
  3272   000F5A  EC16  F007         	call	_max7219_cmd
  3273                           
  3274                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  3275   000F5E  0E07               	movlw	7
  3276   000F60  6E07               	movwf	max7219_cmd@data^0,c
  3277   000F62  0E0B               	movlw	11
  3278   000F64  EC16  F007         	call	_max7219_cmd
  3279                           
  3280                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  3281   000F68  0E01               	movlw	1
  3282   000F6A  6E07               	movwf	max7219_cmd@data^0,c
  3283   000F6C  0E0C               	movlw	12
  3284   000F6E  EC16  F007         	call	_max7219_cmd
  3285                           
  3286                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  3287   000F72  0E00               	movlw	0
  3288   000F74  6E07               	movwf	max7219_cmd@data^0,c
  3289   000F76  0E0F               	movlw	15
  3290   000F78  EC16  F007         	call	_max7219_cmd
  3291   000F7C  0012               	return		;funcret
  3292   000F7E                     __end_of_matrixInit:
  3293                           	callstack 0
  3294                           
  3295 ;; *************** function _max7219_cmd *****************
  3296 ;; Defined at:
  3297 ;;		line 76 in file "MAX7219.c"
  3298 ;; Parameters:    Size  Location     Type
  3299 ;;  Addr            1    wreg     unsigned char 
  3300 ;;  data            1    6[COMRAM] unsigned char 
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;  Addr            1    9[COMRAM] unsigned char 
  3303 ;;  i               2   12[COMRAM] int 
  3304 ;;  writeData       2   10[COMRAM] unsigned short 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  1    wreg      void 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0, cstack
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3314 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3318 ;;Total ram usage:        8 bytes
  3319 ;; Hardware stack levels used: 1
  3320 ;; Hardware stack levels required when called: 6
  3321 ;; This function calls:
  3322 ;;		_SPI_Exchange8bit
  3323 ;; This function is called by:
  3324 ;;		_matrixInit
  3325 ;; This function uses a non-reentrant model
  3326 ;;
  3327                           
  3328                           	psect	text6
  3329   000E2C                     __ptext6:
  3330                           	callstack 0
  3331   000E2C                     _max7219_cmd:
  3332                           	callstack 23
  3333                           
  3334                           ;incstack = 0
  3335                           ;max7219_cmd@Addr stored from wreg
  3336   000E2C  6E0A               	movwf	max7219_cmd@Addr^0,c
  3337   000E2E                     
  3338                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  3339   000E2E  5007               	movf	max7219_cmd@data^0,w,c
  3340   000E30  C00A  F008         	movff	max7219_cmd@Addr,??_max7219_cmd
  3341   000E34  6A09               	clrf	(??_max7219_cmd+1)^0,c
  3342   000E36  C008  F009         	movff	??_max7219_cmd,??_max7219_cmd+1
  3343   000E3A  6A08               	clrf	??_max7219_cmd^0,c
  3344   000E3C  1008               	iorwf	??_max7219_cmd^0,w,c
  3345   000E3E  6E0B               	movwf	max7219_cmd@writeData^0,c
  3346   000E40  5009               	movf	(??_max7219_cmd+1)^0,w,c
  3347   000E42  6E0C               	movwf	(max7219_cmd@writeData+1)^0,c
  3348   000E44  948B               	bcf	139,2,c	;volatile
  3349   000E46                     
  3350                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  3351   000E46  0E00               	movlw	0
  3352   000E48  6E0E               	movwf	(max7219_cmd@i+1)^0,c
  3353   000E4A  0E00               	movlw	0
  3354   000E4C  6E0D               	movwf	max7219_cmd@i^0,c
  3355   000E4E                     l3647:
  3356                           
  3357                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  3358   000E4E  500C               	movf	(max7219_cmd@writeData+1)^0,w,c
  3359   000E50  EC5B  F008         	call	_SPI_Exchange8bit
  3360                           
  3361                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  3362   000E54  500B               	movf	max7219_cmd@writeData^0,w,c
  3363   000E56  EC5B  F008         	call	_SPI_Exchange8bit
  3364   000E5A                     
  3365                           ;MAX7219.c: 90:  }
  3366   000E5A  4A0D               	infsnz	max7219_cmd@i^0,f,c
  3367   000E5C  2A0E               	incf	(max7219_cmd@i+1)^0,f,c
  3368   000E5E  BE0E               	btfsc	(max7219_cmd@i+1)^0,7,c
  3369   000E60  EF3B  F007         	goto	u2821
  3370   000E64  500E               	movf	(max7219_cmd@i+1)^0,w,c
  3371   000E66  E109               	bnz	u2820
  3372   000E68  0E04               	movlw	4
  3373   000E6A  5C0D               	subwf	max7219_cmd@i^0,w,c
  3374   000E6C  A0D8               	btfss	status,0,c
  3375   000E6E  EF3B  F007         	goto	u2821
  3376   000E72  EF3D  F007         	goto	u2820
  3377   000E76                     u2821:
  3378   000E76  EF27  F007         	goto	l3647
  3379   000E7A                     u2820:
  3380   000E7A  848B               	bsf	139,2,c	;volatile
  3381   000E7C  0012               	return		;funcret
  3382   000E7E                     __end_of_max7219_cmd:
  3383                           	callstack 0
  3384                           
  3385 ;; *************** function _loadTimeFromFlash *****************
  3386 ;; Defined at:
  3387 ;;		line 330 in file "main.c"
  3388 ;; Parameters:    Size  Location     Type
  3389 ;;		None
  3390 ;; Auto vars:     Size  Location     Type
  3391 ;;  flashAddress    4    0        unsigned long 
  3392 ;; Return value:  Size  Location     Type
  3393 ;;                  1    wreg      void 
  3394 ;; Registers used:
  3395 ;;		wreg, status,2, status,0, cstack
  3396 ;; Tracked objects:
  3397 ;;		On entry : 0/0
  3398 ;;		On exit  : 0/0
  3399 ;;		Unchanged: 0/0
  3400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3405 ;;Total ram usage:        0 bytes
  3406 ;; Hardware stack levels used: 1
  3407 ;; Hardware stack levels required when called: 6
  3408 ;; This function calls:
  3409 ;;		_FLASH_ReadByte
  3410 ;; This function is called by:
  3411 ;;		_main
  3412 ;; This function uses a non-reentrant model
  3413 ;;
  3414                           
  3415                           	psect	text7
  3416   0009F0                     __ptext7:
  3417                           	callstack 0
  3418   0009F0                     _loadTimeFromFlash:
  3419                           	callstack 24
  3420   0009F0                     
  3421                           ;main.c: 333:     hours = FLASH_ReadByte(flashAddress);
  3422   0009F0  0E80               	movlw	128
  3423   0009F2  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3424   0009F4  0E1F               	movlw	31
  3425   0009F6  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3426   0009F8  0E00               	movlw	0
  3427   0009FA  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3428   0009FC  0E00               	movlw	0
  3429   0009FE  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3430   000A00  EC68  F008         	call	_FLASH_ReadByte	;wreg free
  3431   000A04  0100               	movlb	0	; () banked
  3432   000A06  6FAC               	movwf	_hours& (0+255),b
  3433   000A08                     
  3434                           ; BSR set to: 0
  3435                           ;main.c: 334:     minutes = FLASH_ReadByte(flashAddress + 1);
  3436   000A08  0E81               	movlw	129
  3437   000A0A  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3438   000A0C  0E1F               	movlw	31
  3439   000A0E  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3440   000A10  0E00               	movlw	0
  3441   000A12  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3442   000A14  0E00               	movlw	0
  3443   000A16  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3444   000A18  EC68  F008         	call	_FLASH_ReadByte	;wreg free
  3445   000A1C  0100               	movlb	0	; () banked
  3446   000A1E  6FAB               	movwf	_minutes& (0+255),b
  3447   000A20                     
  3448                           ; BSR set to: 0
  3449                           ;main.c: 335:     alarmHours = FLASH_ReadByte(flashAddress + 2);
  3450   000A20  0E82               	movlw	130
  3451   000A22  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3452   000A24  0E1F               	movlw	31
  3453   000A26  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3454   000A28  0E00               	movlw	0
  3455   000A2A  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3456   000A2C  0E00               	movlw	0
  3457   000A2E  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3458   000A30  EC68  F008         	call	_FLASH_ReadByte	;wreg free
  3459   000A34  0100               	movlb	0	; () banked
  3460   000A36  6FA9               	movwf	_alarmHours& (0+255),b
  3461   000A38                     
  3462                           ; BSR set to: 0
  3463                           ;main.c: 336:     alarmMinutes = FLASH_ReadByte(flashAddress + 3);
  3464   000A38  0E83               	movlw	131
  3465   000A3A  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3466   000A3C  0E1F               	movlw	31
  3467   000A3E  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3468   000A40  0E00               	movlw	0
  3469   000A42  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3470   000A44  0E00               	movlw	0
  3471   000A46  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3472   000A48  EC68  F008         	call	_FLASH_ReadByte	;wreg free
  3473   000A4C  0100               	movlb	0	; () banked
  3474   000A4E  6FA8               	movwf	_alarmMinutes& (0+255),b
  3475   000A50                     
  3476                           ; BSR set to: 0
  3477                           ;main.c: 337:     alarmSet = FLASH_ReadByte(flashAddress + 4);
  3478   000A50  0E84               	movlw	132
  3479   000A52  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  3480   000A54  0E1F               	movlw	31
  3481   000A56  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3482   000A58  0E00               	movlw	0
  3483   000A5A  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3484   000A5C  0E00               	movlw	0
  3485   000A5E  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3486   000A60  EC68  F008         	call	_FLASH_ReadByte	;wreg free
  3487   000A64  0900               	iorlw	0
  3488   000A66  A4D8               	btfss	status,2,c
  3489   000A68  EF38  F005         	goto	u2841
  3490   000A6C  EF3B  F005         	goto	u2840
  3491   000A70                     u2841:
  3492   000A70  0E01               	movlw	1
  3493   000A72  EF3C  F005         	goto	u2850
  3494   000A76                     u2840:
  3495   000A76  0E00               	movlw	0
  3496   000A78                     u2850:
  3497   000A78  0100               	movlb	0	; () banked
  3498   000A7A  6FA7               	movwf	_alarmSet& (0+255),b
  3499   000A7C                     
  3500                           ; BSR set to: 0
  3501                           ;main.c: 339:     if (hours >= 24) hours = 0;
  3502   000A7C  0E17               	movlw	23
  3503   000A7E  65AC               	cpfsgt	_hours& (0+255),b
  3504   000A80  EF44  F005         	goto	u2861
  3505   000A84  EF46  F005         	goto	u2860
  3506   000A88                     u2861:
  3507   000A88  EF48  F005         	goto	l3705
  3508   000A8C                     u2860:
  3509   000A8C                     
  3510                           ; BSR set to: 0
  3511   000A8C  0E00               	movlw	0
  3512   000A8E  6FAC               	movwf	_hours& (0+255),b
  3513   000A90                     l3705:
  3514                           
  3515                           ; BSR set to: 0
  3516                           ;main.c: 340:     if (minutes >= 60) minutes = 0;
  3517   000A90  0E3B               	movlw	59
  3518   000A92  65AB               	cpfsgt	_minutes& (0+255),b
  3519   000A94  EF4E  F005         	goto	u2871
  3520   000A98  EF50  F005         	goto	u2870
  3521   000A9C                     u2871:
  3522   000A9C  EF52  F005         	goto	l544
  3523   000AA0                     u2870:
  3524   000AA0                     
  3525                           ; BSR set to: 0
  3526   000AA0  0E00               	movlw	0
  3527   000AA2  6FAB               	movwf	_minutes& (0+255),b
  3528   000AA4                     l544:
  3529                           
  3530                           ; BSR set to: 0
  3531   000AA4  0012               	return		;funcret
  3532   000AA6                     __end_of_loadTimeFromFlash:
  3533                           	callstack 0
  3534                           
  3535 ;; *************** function _checkButtons *****************
  3536 ;; Defined at:
  3537 ;;		line 206 in file "main.c"
  3538 ;; Parameters:    Size  Location     Type
  3539 ;;		None
  3540 ;; Auto vars:     Size  Location     Type
  3541 ;;		None
  3542 ;; Return value:  Size  Location     Type
  3543 ;;                  1    wreg      void 
  3544 ;; Registers used:
  3545 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3546 ;; Tracked objects:
  3547 ;;		On entry : 0/0
  3548 ;;		On exit  : 0/0
  3549 ;;		Unchanged: 0/0
  3550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3551 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3552 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3553 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3554 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3555 ;;Total ram usage:        2 bytes
  3556 ;; Hardware stack levels used: 1
  3557 ;; Hardware stack levels required when called: 10
  3558 ;; This function calls:
  3559 ;;		___awmod
  3560 ;;		_clearAlarm
  3561 ;;		_displayAlarmTime
  3562 ;;		_displayTime
  3563 ;;		_saveTimeToFlash
  3564 ;; This function is called by:
  3565 ;;		_main
  3566 ;; This function uses a non-reentrant model
  3567 ;;
  3568                           
  3569                           	psect	text8
  3570   00009C                     __ptext8:
  3571                           	callstack 0
  3572   00009C                     _checkButtons:
  3573                           	callstack 20
  3574   00009C                     
  3575                           ;main.c: 208:     static uint8_t button3PressCount = 0;;main.c: 209:     static uint16_t
      +                           button3HoldTime = 0;;main.c: 210:     static _Bool alarmSettingMode = 0;;main.c: 213:  
      +                             if (!PORTBbits.RB0)
  3576   00009C  B081               	btfsc	129,0,c	;volatile
  3577   00009E  EF53  F000         	goto	u2881
  3578   0000A2  EF55  F000         	goto	u2880
  3579   0000A6                     u2881:
  3580   0000A6  EF96  F000         	goto	l3725
  3581   0000AA                     u2880:
  3582   0000AA                     
  3583                           ;main.c: 214:     {;main.c: 215:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3584   0000AA  0E02               	movlw	2
  3585   0000AC  6E51               	movwf	(??_checkButtons+1)^0,c
  3586   0000AE  0E04               	movlw	4
  3587   0000B0  6E50               	movwf	??_checkButtons^0,c
  3588   0000B2  0EBA               	movlw	186
  3589   0000B4                     u3297:
  3590   0000B4  2EE8               	decfsz	wreg,f,c
  3591   0000B6  D7FE               	bra	u3297
  3592   0000B8  2E50               	decfsz	??_checkButtons^0,f,c
  3593   0000BA  D7FC               	bra	u3297
  3594   0000BC  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  3595   0000BE  D7FA               	bra	u3297
  3596   0000C0  F000 F000          	nop2	
  3597   0000C4                     
  3598                           ;main.c: 216:         if (!PORTBbits.RB0)
  3599   0000C4  B081               	btfsc	129,0,c	;volatile
  3600   0000C6  EF67  F000         	goto	u2891
  3601   0000CA  EF69  F000         	goto	u2890
  3602   0000CE                     u2891:
  3603   0000CE  EF96  F000         	goto	l3725
  3604   0000D2                     u2890:
  3605   0000D2                     
  3606                           ;main.c: 217:         {;main.c: 218:             if (alarmSettingMode)
  3607   0000D2  0100               	movlb	0	; () banked
  3608   0000D4  51A0               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3609   0000D6  B4D8               	btfsc	status,2,c
  3610   0000D8  EF70  F000         	goto	u2901
  3611   0000DC  EF72  F000         	goto	u2900
  3612   0000E0                     u2901:
  3613   0000E0  EF85  F000         	goto	l3721
  3614   0000E4                     u2900:
  3615   0000E4                     
  3616                           ; BSR set to: 0
  3617                           ;main.c: 219:             {;main.c: 220:                 alarmHours = (alarmHours + 1) %
      +                           24;
  3618   0000E4  0E01               	movlw	1
  3619   0000E6  25A9               	addwf	_alarmHours& (0+255),w,b
  3620   0000E8  6E06               	movwf	___awmod@dividend^0,c
  3621   0000EA  6A07               	clrf	(___awmod@dividend+1)^0,c
  3622   0000EC  0E00               	movlw	0
  3623   0000EE  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  3624   0000F0  0E00               	movlw	0
  3625   0000F2  6E09               	movwf	(___awmod@divisor+1)^0,c
  3626   0000F4  0E18               	movlw	24
  3627   0000F6  6E08               	movwf	___awmod@divisor^0,c
  3628   0000F8  EC07  F006         	call	___awmod	;wreg free
  3629   0000FC  5006               	movf	?___awmod^0,w,c
  3630   0000FE  0100               	movlb	0	; () banked
  3631   000100  6FA9               	movwf	_alarmHours& (0+255),b
  3632   000102                     
  3633                           ; BSR set to: 0
  3634                           ;main.c: 221:                 displayAlarmTime();
  3635   000102  ECAD  F005         	call	_displayAlarmTime	;wreg free
  3636                           
  3637                           ;main.c: 222:             }
  3638   000106  EF96  F000         	goto	l3725
  3639   00010A                     l3721:
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;main.c: 224:             {;main.c: 225:                 hours = (hours + 1) % 24;
  3643   00010A  0E01               	movlw	1
  3644   00010C  25AC               	addwf	_hours& (0+255),w,b
  3645   00010E  6E06               	movwf	___awmod@dividend^0,c
  3646   000110  6A07               	clrf	(___awmod@dividend+1)^0,c
  3647   000112  0E00               	movlw	0
  3648   000114  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  3649   000116  0E00               	movlw	0
  3650   000118  6E09               	movwf	(___awmod@divisor+1)^0,c
  3651   00011A  0E18               	movlw	24
  3652   00011C  6E08               	movwf	___awmod@divisor^0,c
  3653   00011E  EC07  F006         	call	___awmod	;wreg free
  3654   000122  5006               	movf	?___awmod^0,w,c
  3655   000124  0100               	movlb	0	; () banked
  3656   000126  6FAC               	movwf	_hours& (0+255),b
  3657   000128                     
  3658                           ; BSR set to: 0
  3659                           ;main.c: 226:                 displayTime();
  3660   000128  EC53  F005         	call	_displayTime	;wreg free
  3661   00012C                     l3725:
  3662                           
  3663                           ;main.c: 232:     if (!PORTBbits.RB1)
  3664   00012C  B281               	btfsc	129,1,c	;volatile
  3665   00012E  EF9B  F000         	goto	u2911
  3666   000132  EF9D  F000         	goto	u2910
  3667   000136                     u2911:
  3668   000136  EFDE  F000         	goto	l3741
  3669   00013A                     u2910:
  3670   00013A                     
  3671                           ;main.c: 233:     {;main.c: 234:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3672   00013A  0E02               	movlw	2
  3673   00013C  6E51               	movwf	(??_checkButtons+1)^0,c
  3674   00013E  0E04               	movlw	4
  3675   000140  6E50               	movwf	??_checkButtons^0,c
  3676   000142  0EBA               	movlw	186
  3677   000144                     u3307:
  3678   000144  2EE8               	decfsz	wreg,f,c
  3679   000146  D7FE               	bra	u3307
  3680   000148  2E50               	decfsz	??_checkButtons^0,f,c
  3681   00014A  D7FC               	bra	u3307
  3682   00014C  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  3683   00014E  D7FA               	bra	u3307
  3684   000150  F000 F000          	nop2	
  3685   000154                     
  3686                           ;main.c: 235:         if (!PORTBbits.RB1)
  3687   000154  B281               	btfsc	129,1,c	;volatile
  3688   000156  EFAF  F000         	goto	u2921
  3689   00015A  EFB1  F000         	goto	u2920
  3690   00015E                     u2921:
  3691   00015E  EFDE  F000         	goto	l3741
  3692   000162                     u2920:
  3693   000162                     
  3694                           ;main.c: 236:         {;main.c: 237:             if (alarmSettingMode)
  3695   000162  0100               	movlb	0	; () banked
  3696   000164  51A0               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3697   000166  B4D8               	btfsc	status,2,c
  3698   000168  EFB8  F000         	goto	u2931
  3699   00016C  EFBA  F000         	goto	u2930
  3700   000170                     u2931:
  3701   000170  EFCD  F000         	goto	l3737
  3702   000174                     u2930:
  3703   000174                     
  3704                           ; BSR set to: 0
  3705                           ;main.c: 238:             {;main.c: 239:                 alarmMinutes = (alarmMinutes + 
      +                          1) % 60;
  3706   000174  0E01               	movlw	1
  3707   000176  25A8               	addwf	_alarmMinutes& (0+255),w,b
  3708   000178  6E06               	movwf	___awmod@dividend^0,c
  3709   00017A  6A07               	clrf	(___awmod@dividend+1)^0,c
  3710   00017C  0E00               	movlw	0
  3711   00017E  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  3712   000180  0E00               	movlw	0
  3713   000182  6E09               	movwf	(___awmod@divisor+1)^0,c
  3714   000184  0E3C               	movlw	60
  3715   000186  6E08               	movwf	___awmod@divisor^0,c
  3716   000188  EC07  F006         	call	___awmod	;wreg free
  3717   00018C  5006               	movf	?___awmod^0,w,c
  3718   00018E  0100               	movlb	0	; () banked
  3719   000190  6FA8               	movwf	_alarmMinutes& (0+255),b
  3720   000192                     
  3721                           ; BSR set to: 0
  3722                           ;main.c: 240:                 displayAlarmTime();
  3723   000192  ECAD  F005         	call	_displayAlarmTime	;wreg free
  3724                           
  3725                           ;main.c: 241:             }
  3726   000196  EFDE  F000         	goto	l3741
  3727   00019A                     l3737:
  3728                           
  3729                           ; BSR set to: 0
  3730                           ;main.c: 243:             {;main.c: 244:                 minutes = (minutes + 1) % 60;
  3731   00019A  0E01               	movlw	1
  3732   00019C  25AB               	addwf	_minutes& (0+255),w,b
  3733   00019E  6E06               	movwf	___awmod@dividend^0,c
  3734   0001A0  6A07               	clrf	(___awmod@dividend+1)^0,c
  3735   0001A2  0E00               	movlw	0
  3736   0001A4  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  3737   0001A6  0E00               	movlw	0
  3738   0001A8  6E09               	movwf	(___awmod@divisor+1)^0,c
  3739   0001AA  0E3C               	movlw	60
  3740   0001AC  6E08               	movwf	___awmod@divisor^0,c
  3741   0001AE  EC07  F006         	call	___awmod	;wreg free
  3742   0001B2  5006               	movf	?___awmod^0,w,c
  3743   0001B4  0100               	movlb	0	; () banked
  3744   0001B6  6FAB               	movwf	_minutes& (0+255),b
  3745   0001B8                     
  3746                           ; BSR set to: 0
  3747                           ;main.c: 245:                 displayTime();
  3748   0001B8  EC53  F005         	call	_displayTime	;wreg free
  3749   0001BC                     l3741:
  3750                           
  3751                           ;main.c: 251:     if (!PORTBbits.RB2)
  3752   0001BC  B481               	btfsc	129,2,c	;volatile
  3753   0001BE  EFE3  F000         	goto	u2941
  3754   0001C2  EFE5  F000         	goto	u2940
  3755   0001C6                     u2941:
  3756   0001C6  EF79  F001         	goto	l3779
  3757   0001CA                     u2940:
  3758   0001CA                     
  3759                           ;main.c: 252:     {;main.c: 253:         button3HoldTime += 100;
  3760   0001CA  0E64               	movlw	100
  3761   0001CC  0100               	movlb	0	; () banked
  3762   0001CE  279A               	addwf	checkButtons@button3HoldTime& (0+255),f,b
  3763   0001D0  0E00               	movlw	0
  3764   0001D2  239B               	addwfc	(checkButtons@button3HoldTime+1)& (0+255),f,b
  3765   0001D4                     
  3766                           ; BSR set to: 0
  3767                           ;main.c: 254:         _delay((unsigned long)((100)*(8000000/4000.0)));
  3768   0001D4  0E02               	movlw	2
  3769   0001D6  6E51               	movwf	(??_checkButtons+1)^0,c
  3770   0001D8  0E04               	movlw	4
  3771   0001DA  6E50               	movwf	??_checkButtons^0,c
  3772   0001DC  0EBA               	movlw	186
  3773   0001DE                     u3317:
  3774   0001DE  2EE8               	decfsz	wreg,f,c
  3775   0001E0  D7FE               	bra	u3317
  3776   0001E2  2E50               	decfsz	??_checkButtons^0,f,c
  3777   0001E4  D7FC               	bra	u3317
  3778   0001E6  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  3779   0001E8  D7FA               	bra	u3317
  3780   0001EA  F000 F000          	nop2	
  3781   0001EE                     
  3782                           ;main.c: 256:         if (button3HoldTime >= 1000)
  3783   0001EE  0EE8               	movlw	232
  3784   0001F0  0100               	movlb	0	; () banked
  3785   0001F2  5D9A               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3786   0001F4  0E03               	movlw	3
  3787   0001F6  599B               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3788   0001F8  A0D8               	btfss	status,0,c
  3789   0001FA  EF01  F001         	goto	u2951
  3790   0001FE  EF03  F001         	goto	u2950
  3791   000202                     u2951:
  3792   000202  EF6D  F001         	goto	l3775
  3793   000206                     u2950:
  3794   000206                     
  3795                           ; BSR set to: 0
  3796                           ;main.c: 257:         {;main.c: 258:             if (!alarmTriggered)
  3797   000206  51A5               	movf	_alarmTriggered& (0+255),w,b
  3798   000208  A4D8               	btfss	status,2,c
  3799   00020A  EF09  F001         	goto	u2961
  3800   00020E  EF0B  F001         	goto	u2960
  3801   000212                     u2961:
  3802   000212  EF98  F001         	goto	l534
  3803   000216                     u2960:
  3804   000216                     
  3805                           ; BSR set to: 0
  3806                           ;main.c: 259:             {;main.c: 260:                 alarmSettingMode = 1;
  3807   000216  0E01               	movlw	1
  3808   000218  6FA0               	movwf	checkButtons@alarmSettingMode& (0+255),b
  3809   00021A                     l3753:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;main.c: 261:                 displayAlarmTime();
  3813   00021A  ECAD  F005         	call	_displayAlarmTime	;wreg free
  3814                           
  3815                           ;main.c: 263:                 while (!PORTBbits.RB2)
  3816   00021E  EF5D  F001         	goto	l3769
  3817   000222                     l525:
  3818                           
  3819                           ;main.c: 264:                 {;main.c: 265:                     if (!PORTBbits.RB0)
  3820   000222  B081               	btfsc	129,0,c	;volatile
  3821   000224  EF16  F001         	goto	u2971
  3822   000228  EF18  F001         	goto	u2970
  3823   00022C                     u2971:
  3824   00022C  EF37  F001         	goto	l3761
  3825   000230                     u2970:
  3826   000230                     
  3827                           ;main.c: 266:                     {;main.c: 267:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3828   000230  0E02               	movlw	2
  3829   000232  6E51               	movwf	(??_checkButtons+1)^0,c
  3830   000234  0E04               	movlw	4
  3831   000236  6E50               	movwf	??_checkButtons^0,c
  3832   000238  0EBA               	movlw	186
  3833   00023A                     u3327:
  3834   00023A  2EE8               	decfsz	wreg,f,c
  3835   00023C  D7FE               	bra	u3327
  3836   00023E  2E50               	decfsz	??_checkButtons^0,f,c
  3837   000240  D7FC               	bra	u3327
  3838   000242  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  3839   000244  D7FA               	bra	u3327
  3840   000246  F000 F000          	nop2	
  3841   00024A                     
  3842                           ;main.c: 268:                         alarmHours = (alarmHours + 1) % 24;
  3843   00024A  0E01               	movlw	1
  3844   00024C  0100               	movlb	0	; () banked
  3845   00024E  25A9               	addwf	_alarmHours& (0+255),w,b
  3846   000250  6E06               	movwf	___awmod@dividend^0,c
  3847   000252  6A07               	clrf	(___awmod@dividend+1)^0,c
  3848   000254  0E00               	movlw	0
  3849   000256  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  3850   000258  0E00               	movlw	0
  3851   00025A  6E09               	movwf	(___awmod@divisor+1)^0,c
  3852   00025C  0E18               	movlw	24
  3853   00025E  6E08               	movwf	___awmod@divisor^0,c
  3854   000260  EC07  F006         	call	___awmod	;wreg free
  3855   000264  5006               	movf	?___awmod^0,w,c
  3856   000266  0100               	movlb	0	; () banked
  3857   000268  6FA9               	movwf	_alarmHours& (0+255),b
  3858   00026A                     
  3859                           ; BSR set to: 0
  3860                           ;main.c: 269:                         displayAlarmTime();
  3861   00026A  ECAD  F005         	call	_displayAlarmTime	;wreg free
  3862   00026E                     l3761:
  3863                           
  3864                           ;main.c: 271:                     if (!PORTBbits.RB1)
  3865   00026E  B281               	btfsc	129,1,c	;volatile
  3866   000270  EF3C  F001         	goto	u2981
  3867   000274  EF3E  F001         	goto	u2980
  3868   000278                     u2981:
  3869   000278  EF5D  F001         	goto	l3769
  3870   00027C                     u2980:
  3871   00027C                     
  3872                           ;main.c: 272:                     {;main.c: 273:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3873   00027C  0E02               	movlw	2
  3874   00027E  6E51               	movwf	(??_checkButtons+1)^0,c
  3875   000280  0E04               	movlw	4
  3876   000282  6E50               	movwf	??_checkButtons^0,c
  3877   000284  0EBA               	movlw	186
  3878   000286                     u3337:
  3879   000286  2EE8               	decfsz	wreg,f,c
  3880   000288  D7FE               	bra	u3337
  3881   00028A  2E50               	decfsz	??_checkButtons^0,f,c
  3882   00028C  D7FC               	bra	u3337
  3883   00028E  2E51               	decfsz	(??_checkButtons+1)^0,f,c
  3884   000290  D7FA               	bra	u3337
  3885   000292  F000 F000          	nop2	
  3886   000296                     
  3887                           ;main.c: 274:                         alarmMinutes = (alarmMinutes + 1) % 60;
  3888   000296  0E01               	movlw	1
  3889   000298  0100               	movlb	0	; () banked
  3890   00029A  25A8               	addwf	_alarmMinutes& (0+255),w,b
  3891   00029C  6E06               	movwf	___awmod@dividend^0,c
  3892   00029E  6A07               	clrf	(___awmod@dividend+1)^0,c
  3893   0002A0  0E00               	movlw	0
  3894   0002A2  2207               	addwfc	(___awmod@dividend+1)^0,f,c
  3895   0002A4  0E00               	movlw	0
  3896   0002A6  6E09               	movwf	(___awmod@divisor+1)^0,c
  3897   0002A8  0E3C               	movlw	60
  3898   0002AA  6E08               	movwf	___awmod@divisor^0,c
  3899   0002AC  EC07  F006         	call	___awmod	;wreg free
  3900   0002B0  5006               	movf	?___awmod^0,w,c
  3901   0002B2  0100               	movlb	0	; () banked
  3902   0002B4  6FA8               	movwf	_alarmMinutes& (0+255),b
  3903   0002B6  EF0D  F001         	goto	l3753
  3904   0002BA                     l3769:
  3905                           
  3906                           ;main.c: 263:                 while (!PORTBbits.RB2)
  3907   0002BA  A481               	btfss	129,2,c	;volatile
  3908   0002BC  EF62  F001         	goto	u2991
  3909   0002C0  EF64  F001         	goto	u2990
  3910   0002C4                     u2991:
  3911   0002C4  EF11  F001         	goto	l525
  3912   0002C8                     u2990:
  3913   0002C8                     
  3914                           ;main.c: 278:                 alarmSettingMode = 0;
  3915   0002C8  0E00               	movlw	0
  3916   0002CA  0100               	movlb	0	; () banked
  3917   0002CC  6FA0               	movwf	checkButtons@alarmSettingMode& (0+255),b
  3918                           
  3919                           ;main.c: 279:                 alarmSet = 1;
  3920   0002CE  0E01               	movlw	1
  3921   0002D0  6FA7               	movwf	_alarmSet& (0+255),b
  3922   0002D2                     
  3923                           ; BSR set to: 0
  3924                           ;main.c: 280:                 displayTime();
  3925   0002D2  EC53  F005         	call	_displayTime	;wreg free
  3926   0002D6  EF98  F001         	goto	l534
  3927   0002DA                     l3775:
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;main.c: 284:         {;main.c: 285:             if (alarmTriggered)
  3931   0002DA  51A5               	movf	_alarmTriggered& (0+255),w,b
  3932   0002DC  B4D8               	btfsc	status,2,c
  3933   0002DE  EF73  F001         	goto	u3001
  3934   0002E2  EF75  F001         	goto	u3000
  3935   0002E6                     u3001:
  3936   0002E6  EF98  F001         	goto	l534
  3937   0002EA                     u3000:
  3938   0002EA                     
  3939                           ; BSR set to: 0
  3940                           ;main.c: 286:             {;main.c: 287:                 clearAlarm();
  3941   0002EA  EC90  F008         	call	_clearAlarm	;wreg free
  3942   0002EE  EF98  F001         	goto	l534
  3943   0002F2                     l3779:
  3944                           
  3945                           ;main.c: 292:     {;main.c: 293:         if (button3HoldTime < 1000)
  3946   0002F2  0EE8               	movlw	232
  3947   0002F4  0100               	movlb	0	; () banked
  3948   0002F6  5D9A               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3949   0002F8  0E03               	movlw	3
  3950   0002FA  599B               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3951   0002FC  B0D8               	btfsc	status,0,c
  3952   0002FE  EF83  F001         	goto	u3011
  3953   000302  EF85  F001         	goto	u3010
  3954   000306                     u3011:
  3955   000306  EF94  F001         	goto	l3789
  3956   00030A                     u3010:
  3957   00030A                     
  3958                           ; BSR set to: 0
  3959                           ;main.c: 294:         {;main.c: 295:             button3PressCount++;
  3960   00030A  2BA1               	incf	checkButtons@button3PressCount& (0+255),f,b
  3961   00030C                     
  3962                           ; BSR set to: 0
  3963                           ;main.c: 296:             if (button3PressCount == 5)
  3964   00030C  0E05               	movlw	5
  3965   00030E  19A1               	xorwf	checkButtons@button3PressCount& (0+255),w,b
  3966   000310  A4D8               	btfss	status,2,c
  3967   000312  EF8D  F001         	goto	u3021
  3968   000316  EF8F  F001         	goto	u3020
  3969   00031A                     u3021:
  3970   00031A  EF94  F001         	goto	l3789
  3971   00031E                     u3020:
  3972   00031E                     
  3973                           ; BSR set to: 0
  3974                           ;main.c: 297:             {;main.c: 298:                 saveTimeToFlash();
  3975   00031E  ECAE  F006         	call	_saveTimeToFlash	;wreg free
  3976   000322                     
  3977                           ;main.c: 299:                 button3PressCount = 0;
  3978   000322  0E00               	movlw	0
  3979   000324  0100               	movlb	0	; () banked
  3980   000326  6FA1               	movwf	checkButtons@button3PressCount& (0+255),b
  3981   000328                     l3789:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;main.c: 302:         button3HoldTime = 0;
  3985   000328  0E00               	movlw	0
  3986   00032A  6F9B               	movwf	(checkButtons@button3HoldTime+1)& (0+255),b
  3987   00032C  0E00               	movlw	0
  3988   00032E  6F9A               	movwf	checkButtons@button3HoldTime& (0+255),b
  3989   000330                     l534:
  3990   000330  0012               	return		;funcret
  3991   000332                     __end_of_checkButtons:
  3992                           	callstack 0
  3993                           
  3994 ;; *************** function _saveTimeToFlash *****************
  3995 ;; Defined at:
  3996 ;;		line 308 in file "main.c"
  3997 ;; Parameters:    Size  Location     Type
  3998 ;;		None
  3999 ;; Auto vars:     Size  Location     Type
  4000 ;;  i               1   68[BANK0 ] unsigned char 
  4001 ;;  flashBuffer    64    0[BANK0 ] unsigned char [64]
  4002 ;;  flashAddress    4   64[BANK0 ] unsigned long 
  4003 ;; Return value:  Size  Location     Type
  4004 ;;                  1    wreg      void 
  4005 ;; Registers used:
  4006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4007 ;; Tracked objects:
  4008 ;;		On entry : 0/0
  4009 ;;		On exit  : 0/0
  4010 ;;		Unchanged: 0/0
  4011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4013 ;;      Locals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4015 ;;      Totals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4016 ;;Total ram usage:       69 bytes
  4017 ;; Hardware stack levels used: 1
  4018 ;; Hardware stack levels required when called: 7
  4019 ;; This function calls:
  4020 ;;		_FLASH_ReadByte
  4021 ;;		_FLASH_WriteBlock
  4022 ;; This function is called by:
  4023 ;;		_main
  4024 ;;		_checkButtons
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           	psect	text9
  4029   000D5C                     __ptext9:
  4030                           	callstack 0
  4031   000D5C                     _saveTimeToFlash:
  4032                           	callstack 23
  4033   000D5C                     
  4034                           ;main.c: 310:     uint32_t flashAddress = 0x1F80;
  4035   000D5C  0E80               	movlw	128
  4036   000D5E  0100               	movlb	0	; () banked
  4037   000D60  6FEF               	movwf	saveTimeToFlash@flashAddress& (0+255),b
  4038   000D62  0E1F               	movlw	31
  4039   000D64  6FF0               	movwf	(saveTimeToFlash@flashAddress+1)& (0+255),b
  4040   000D66  0E00               	movlw	0
  4041   000D68  6FF1               	movwf	(saveTimeToFlash@flashAddress+2)& (0+255),b
  4042   000D6A  0E00               	movlw	0
  4043   000D6C  6FF2               	movwf	(saveTimeToFlash@flashAddress+3)& (0+255),b
  4044                           
  4045                           ;main.c: 311:     uint8_t flashBuffer[64];;main.c: 314:     for (uint8_t i = 0; i < 64; 
      +                          i++) {
  4046   000D6E  0E00               	movlw	0
  4047   000D70  6FF3               	movwf	saveTimeToFlash@i& (0+255),b
  4048   000D72                     l3583:
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;main.c: 315:         flashBuffer[i] = FLASH_ReadByte(flashAddress + i);
  4052   000D72  51F3               	movf	saveTimeToFlash@i& (0+255),w,b
  4053   000D74  0FAF               	addlw	low saveTimeToFlash@flashBuffer
  4054   000D76  6ED9               	movwf	fsr2l,c
  4055   000D78  6ADA               	clrf	fsr2h,c
  4056   000D7A  51F3               	movf	saveTimeToFlash@i& (0+255),w,b
  4057   000D7C  25EF               	addwf	saveTimeToFlash@flashAddress& (0+255),w,b
  4058   000D7E  6E06               	movwf	FLASH_ReadByte@flashAddr^0,c
  4059   000D80  0E00               	movlw	0
  4060   000D82  21F0               	addwfc	(saveTimeToFlash@flashAddress+1)& (0+255),w,b
  4061   000D84  6E07               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  4062   000D86  0E00               	movlw	0
  4063   000D88  21F1               	addwfc	(saveTimeToFlash@flashAddress+2)& (0+255),w,b
  4064   000D8A  6E08               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  4065   000D8C  0E00               	movlw	0
  4066   000D8E  21F2               	addwfc	(saveTimeToFlash@flashAddress+3)& (0+255),w,b
  4067   000D90  6E09               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  4068   000D92  EC68  F008         	call	_FLASH_ReadByte	;wreg free
  4069   000D96  6EDF               	movwf	indf2,c
  4070   000D98                     
  4071                           ;main.c: 316:     }
  4072   000D98  0100               	movlb	0	; () banked
  4073   000D9A  2BF3               	incf	saveTimeToFlash@i& (0+255),f,b
  4074   000D9C                     
  4075                           ; BSR set to: 0
  4076   000D9C  0E3F               	movlw	63
  4077   000D9E  65F3               	cpfsgt	saveTimeToFlash@i& (0+255),b
  4078   000DA0  EFD4  F006         	goto	u2771
  4079   000DA4  EFD6  F006         	goto	u2770
  4080   000DA8                     u2771:
  4081   000DA8  EFB9  F006         	goto	l3583
  4082   000DAC                     u2770:
  4083   000DAC                     
  4084                           ; BSR set to: 0
  4085                           ;main.c: 319:     flashBuffer[0] = hours;
  4086   000DAC  C0AC  F0AF         	movff	_hours,saveTimeToFlash@flashBuffer
  4087                           
  4088                           ;main.c: 320:     flashBuffer[1] = minutes;
  4089   000DB0  C0AB  F0B0         	movff	_minutes,saveTimeToFlash@flashBuffer+1
  4090                           
  4091                           ;main.c: 321:     flashBuffer[2] = alarmHours;
  4092   000DB4  C0A9  F0B1         	movff	_alarmHours,saveTimeToFlash@flashBuffer+2
  4093                           
  4094                           ;main.c: 322:     flashBuffer[3] = alarmMinutes;
  4095   000DB8  C0A8  F0B2         	movff	_alarmMinutes,saveTimeToFlash@flashBuffer+3
  4096                           
  4097                           ;main.c: 323:     flashBuffer[4] = alarmSet;
  4098   000DBC  C0A7  F0B3         	movff	_alarmSet,saveTimeToFlash@flashBuffer+4
  4099   000DC0                     
  4100                           ; BSR set to: 0
  4101                           ;main.c: 326:     FLASH_WriteBlock(flashAddress, flashBuffer);
  4102   000DC0  C0EF  F00B         	movff	saveTimeToFlash@flashAddress,FLASH_WriteBlock@writeAddr
  4103   000DC4  C0F0  F00C         	movff	saveTimeToFlash@flashAddress+1,FLASH_WriteBlock@writeAddr+1
  4104   000DC8  C0F1  F00D         	movff	saveTimeToFlash@flashAddress+2,FLASH_WriteBlock@writeAddr+2
  4105   000DCC  C0F2  F00E         	movff	saveTimeToFlash@flashAddress+3,FLASH_WriteBlock@writeAddr+3
  4106   000DD0  0EAF               	movlw	low saveTimeToFlash@flashBuffer
  4107   000DD2  6E0F               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  4108   000DD4  ECFA  F002         	call	_FLASH_WriteBlock	;wreg free
  4109   000DD8  0012               	return		;funcret
  4110   000DDA                     __end_of_saveTimeToFlash:
  4111                           	callstack 0
  4112                           
  4113 ;; *************** function _FLASH_WriteBlock *****************
  4114 ;; Defined at:
  4115 ;;		line 93 in file "mcc_generated_files/memory.c"
  4116 ;; Parameters:    Size  Location     Type
  4117 ;;  writeAddr       4   10[COMRAM] unsigned long 
  4118 ;;  flashWrBufPt    1   14[COMRAM] PTR unsigned char 
  4119 ;;		 -> saveTimeToFlash@flashBuffer(64), 
  4120 ;; Auto vars:     Size  Location     Type
  4121 ;;  blockStartAd    4   15[COMRAM] unsigned long 
  4122 ;;  i               1   23[COMRAM] unsigned char 
  4123 ;;  dataCounter     1   22[COMRAM] unsigned char 
  4124 ;;  numberOfWrit    1   21[COMRAM] unsigned char 
  4125 ;;  j               1   20[COMRAM] unsigned char 
  4126 ;;  GIEBitValue     1   19[COMRAM] unsigned char 
  4127 ;; Return value:  Size  Location     Type
  4128 ;;                  1    wreg      char 
  4129 ;; Registers used:
  4130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4131 ;; Tracked objects:
  4132 ;;		On entry : 0/0
  4133 ;;		On exit  : 0/0
  4134 ;;		Unchanged: 0/0
  4135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4136 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4137 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4139 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4140 ;;Total ram usage:       14 bytes
  4141 ;; Hardware stack levels used: 1
  4142 ;; Hardware stack levels required when called: 6
  4143 ;; This function calls:
  4144 ;;		_FLASH_EraseBlock
  4145 ;; This function is called by:
  4146 ;;		_saveTimeToFlash
  4147 ;;		_FLASH_WriteByte
  4148 ;; This function uses a non-reentrant model
  4149 ;;
  4150                           
  4151                           	psect	text10
  4152   0005F4                     __ptext10:
  4153                           	callstack 0
  4154   0005F4                     _FLASH_WriteBlock:
  4155                           	callstack 23
  4156   0005F4                     
  4157                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  4158   0005F4  0EC0               	movlw	192
  4159   0005F6  140B               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  4160   0005F8  6E10               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  4161   0005FA  0EFF               	movlw	255
  4162   0005FC  140C               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4163   0005FE  6E11               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  4164   000600  0E00               	movlw	0
  4165   000602  140D               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4166   000604  6E12               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  4167   000606  0E00               	movlw	0
  4168   000608  140E               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4169   00060A  6E13               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  4170   00060C                     
  4171                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  4172   00060C  0E00               	movlw	0
  4173   00060E  BEF2               	btfsc	242,7,c	;volatile
  4174   000610  0E01               	movlw	1
  4175   000612  6E14               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  4176   000614  0E00               	movlw	0
  4177   000616  6E17               	movwf	FLASH_WriteBlock@dataCounter^0,c
  4178   000618                     
  4179                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  4180   000618  0E01               	movlw	1
  4181   00061A  6E16               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  4182   00061C                     
  4183                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  4184   00061C  5010               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  4185   00061E  180B               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  4186   000620  E10F               	bnz	u2540
  4187   000622  5011               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  4188   000624  180C               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4189   000626  E10C               	bnz	u2540
  4190   000628  5012               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  4191   00062A  180D               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4192   00062C  E109               	bnz	u2540
  4193   00062E  5013               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  4194   000630  180E               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4195   000632  B4D8               	btfsc	status,2,c
  4196   000634  EF1E  F003         	goto	u2541
  4197   000638  EF20  F003         	goto	u2540
  4198   00063C                     u2541:
  4199   00063C  EF22  F003         	goto	l3357
  4200   000640                     u2540:
  4201   000640  EF6E  F003         	goto	l336
  4202   000644                     l3357:
  4203                           
  4204                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  4205   000644  C00B  F006         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  4206   000648  C00C  F007         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  4207   00064C  C00D  F008         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  4208   000650  C00E  F009         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  4209   000654  ECBF  F007         	call	_FLASH_EraseBlock	;wreg free
  4210   000658                     
  4211                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  4212   000658  C00D  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  4213   00065C                     
  4214                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  4215   00065C  C00C  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  4216   000660                     
  4217                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  4218   000660  C00B  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  4219   000664                     
  4220                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  4221   000664  0E00               	movlw	0
  4222   000666  6E15               	movwf	FLASH_WriteBlock@j^0,c
  4223   000668  EF65  F003         	goto	l3393
  4224   00066C                     l3367:
  4225                           
  4226                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  4227   00066C  0E00               	movlw	0
  4228   00066E  6E18               	movwf	FLASH_WriteBlock@i^0,c
  4229   000670                     l3373:
  4230                           
  4231                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  4232   000670  500F               	movf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  4233   000672  2417               	addwf	FLASH_WriteBlock@dataCounter^0,w,c
  4234   000674  6ED9               	movwf	fsr2l,c
  4235   000676  6ADA               	clrf	fsr2h,c
  4236   000678  50DF               	movf	indf2,w,c
  4237   00067A  6EF5               	movwf	245,c	;volatile
  4238   00067C                     
  4239                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  4240   00067C  0E3F               	movlw	63
  4241   00067E  1818               	xorwf	FLASH_WriteBlock@i^0,w,c
  4242   000680  A4D8               	btfss	status,2,c
  4243   000682  EF45  F003         	goto	u2551
  4244   000686  EF47  F003         	goto	u2550
  4245   00068A                     u2551:
  4246   00068A  EF4A  F003         	goto	l341
  4247   00068E                     u2550:
  4248   00068E  000C               	tblwt		*	;# 
  4249                           
  4250                           ;mcc_generated_files/memory.c: 124:    }
  4251   000690  EF4C  F003         	goto	l342
  4252   000694                     l341:
  4253   000694  000D               	tblwt		*+	;# 
  4254   000696                     
  4255                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  4256   000696  2A17               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  4257   000698                     l342:
  4258                           
  4259                           ;mcc_generated_files/memory.c: 130:   }
  4260   000698  2A18               	incf	FLASH_WriteBlock@i^0,f,c
  4261   00069A  0E3F               	movlw	63
  4262   00069C  6418               	cpfsgt	FLASH_WriteBlock@i^0,c
  4263   00069E  EF53  F003         	goto	u2561
  4264   0006A2  EF55  F003         	goto	u2560
  4265   0006A6                     u2561:
  4266   0006A6  EF38  F003         	goto	l3373
  4267   0006AA                     u2560:
  4268   0006AA                     
  4269                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  4270   0006AA  8EA6               	bsf	166,7,c	;volsfr
  4271                           
  4272                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  4273   0006AC  9CA6               	bcf	166,6,c	;volsfr
  4274                           
  4275                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  4276   0006AE  84A6               	bsf	166,2,c	;volsfr
  4277                           
  4278                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  4279   0006B0  9EF2               	bcf	242,7,c	;volatile
  4280   0006B2                     
  4281                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  4282   0006B2  0E55               	movlw	85
  4283   0006B4  6EA7               	movwf	167,c	;volsfr
  4284                           
  4285                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  4286   0006B6  0EAA               	movlw	170
  4287   0006B8  6EA7               	movwf	167,c	;volsfr
  4288   0006BA                     
  4289                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  4290   0006BA  82A6               	bsf	166,1,c	;volsfr
  4291   0006BC                     
  4292                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  4293   0006BC  94A6               	bcf	166,2,c	;volsfr
  4294   0006BE                     
  4295                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  4296   0006BE  B014               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  4297   0006C0  D002               	bra	u2575
  4298   0006C2  9EF2               	bcf	242,7,c	;volatile
  4299   0006C4  D001               	bra	u2576
  4300   0006C6                     u2575:
  4301   0006C6  8EF2               	bsf	242,7,c	;volatile
  4302   0006C8                     u2576:
  4303   0006C8                     
  4304                           ;mcc_generated_files/memory.c: 142:  }
  4305   0006C8  2A15               	incf	FLASH_WriteBlock@j^0,f,c
  4306   0006CA                     l3393:
  4307   0006CA  5016               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  4308   0006CC  5C15               	subwf	FLASH_WriteBlock@j^0,w,c
  4309   0006CE  A0D8               	btfss	status,0,c
  4310   0006D0  EF6C  F003         	goto	u2581
  4311   0006D4  EF6E  F003         	goto	u2580
  4312   0006D8                     u2581:
  4313   0006D8  EF36  F003         	goto	l3367
  4314   0006DC                     u2580:
  4315   0006DC                     l336:
  4316   0006DC  0012               	return		;funcret
  4317   0006DE                     __end_of_FLASH_WriteBlock:
  4318                           	callstack 0
  4319                           
  4320 ;; *************** function _FLASH_EraseBlock *****************
  4321 ;; Defined at:
  4322 ;;		line 147 in file "mcc_generated_files/memory.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  baseAddr        4    5[COMRAM] unsigned long 
  4325 ;; Auto vars:     Size  Location     Type
  4326 ;;  GIEBitValue     1    9[COMRAM] unsigned char 
  4327 ;; Return value:  Size  Location     Type
  4328 ;;                  1    wreg      void 
  4329 ;; Registers used:
  4330 ;;		wreg, status,2
  4331 ;; Tracked objects:
  4332 ;;		On entry : 0/0
  4333 ;;		On exit  : 0/0
  4334 ;;		Unchanged: 0/0
  4335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4336 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4337 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4339 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4340 ;;Total ram usage:        5 bytes
  4341 ;; Hardware stack levels used: 1
  4342 ;; Hardware stack levels required when called: 5
  4343 ;; This function calls:
  4344 ;;		Nothing
  4345 ;; This function is called by:
  4346 ;;		_FLASH_WriteBlock
  4347 ;; This function uses a non-reentrant model
  4348 ;;
  4349                           
  4350                           	psect	text11
  4351   000F7E                     __ptext11:
  4352                           	callstack 0
  4353   000F7E                     _FLASH_EraseBlock:
  4354                           	callstack 23
  4355   000F7E                     
  4356                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  4357   000F7E  0E00               	movlw	0
  4358   000F80  BEF2               	btfsc	242,7,c	;volatile
  4359   000F82  0E01               	movlw	1
  4360   000F84  6E0A               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  4361   000F86                     
  4362                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  4363   000F86  C008  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  4364   000F8A                     
  4365                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  4366   000F8A  C007  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  4367   000F8E                     
  4368                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  4369   000F8E  C006  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  4370   000F92                     
  4371                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  4372   000F92  8EA6               	bsf	166,7,c	;volsfr
  4373   000F94                     
  4374                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  4375   000F94  9CA6               	bcf	166,6,c	;volsfr
  4376   000F96                     
  4377                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  4378   000F96  84A6               	bsf	166,2,c	;volsfr
  4379   000F98                     
  4380                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  4381   000F98  88A6               	bsf	166,4,c	;volsfr
  4382   000F9A                     
  4383                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  4384   000F9A  9EF2               	bcf	242,7,c	;volatile
  4385   000F9C                     
  4386                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  4387   000F9C  0E55               	movlw	85
  4388   000F9E  6EA7               	movwf	167,c	;volsfr
  4389   000FA0                     
  4390                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  4391   000FA0  0EAA               	movlw	170
  4392   000FA2  6EA7               	movwf	167,c	;volsfr
  4393   000FA4                     
  4394                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  4395   000FA4  82A6               	bsf	166,1,c	;volsfr
  4396   000FA6                     
  4397                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  4398   000FA6  B00A               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  4399   000FA8  D002               	bra	u2465
  4400   000FAA  9EF2               	bcf	242,7,c	;volatile
  4401   000FAC  D001               	bra	u2466
  4402   000FAE                     u2465:
  4403   000FAE  8EF2               	bsf	242,7,c	;volatile
  4404   000FB0                     u2466:
  4405   000FB0  0012               	return		;funcret
  4406   000FB2                     __end_of_FLASH_EraseBlock:
  4407                           	callstack 0
  4408                           
  4409 ;; *************** function _FLASH_ReadByte *****************
  4410 ;; Defined at:
  4411 ;;		line 58 in file "mcc_generated_files/memory.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;  flashAddr       4    5[COMRAM] unsigned long 
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;		None
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      unsigned char 
  4418 ;; Registers used:
  4419 ;;		wreg, status,2
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4425 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4426 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4428 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4429 ;;Total ram usage:        4 bytes
  4430 ;; Hardware stack levels used: 1
  4431 ;; Hardware stack levels required when called: 5
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_saveTimeToFlash
  4436 ;;		_loadTimeFromFlash
  4437 ;;		_FLASH_ReadWord
  4438 ;;		_FLASH_WriteByte
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           
  4442                           	psect	text12
  4443   0010D0                     __ptext12:
  4444                           	callstack 0
  4445   0010D0                     _FLASH_ReadByte:
  4446                           	callstack 24
  4447   0010D0                     
  4448                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  4449   0010D0  C008  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  4450                           
  4451                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  4452   0010D4  C007  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  4453                           
  4454                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  4455   0010D8  C006  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  4456   0010DC  0008               	tblrd		*	;# 
  4457   0010DE                     
  4458                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  4459   0010DE  50F5               	movf	245,w,c	;volatile
  4460   0010E0  0012               	return		;funcret
  4461   0010E2                     __end_of_FLASH_ReadByte:
  4462                           	callstack 0
  4463                           
  4464 ;; *************** function _displayTime *****************
  4465 ;; Defined at:
  4466 ;;		line 92 in file "main.c"
  4467 ;; Parameters:    Size  Location     Type
  4468 ;;		None
  4469 ;; Auto vars:     Size  Location     Type
  4470 ;;  i               2   21[BANK0 ] int 
  4471 ;;  timeString      5   16[BANK0 ] unsigned char [5]
  4472 ;;  displayStrin    5   11[BANK0 ] unsigned char [5]
  4473 ;; Return value:  Size  Location     Type
  4474 ;;                  1    wreg      void 
  4475 ;; Registers used:
  4476 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4477 ;; Tracked objects:
  4478 ;;		On entry : 0/0
  4479 ;;		On exit  : 0/0
  4480 ;;		Unchanged: 0/0
  4481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4482 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4483 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4484 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4485 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4486 ;;Total ram usage:       12 bytes
  4487 ;; Hardware stack levels used: 1
  4488 ;; Hardware stack levels required when called: 9
  4489 ;; This function calls:
  4490 ;;		___awdiv
  4491 ;;		___awmod
  4492 ;;		_printString
  4493 ;; This function is called by:
  4494 ;;		_main
  4495 ;;		_checkButtons
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           	psect	text13
  4500   000AA6                     __ptext13:
  4501                           	callstack 0
  4502   000AA6                     _displayTime:
  4503                           	callstack 21
  4504   000AA6                     
  4505                           ;main.c: 94:     char timeString[5];;main.c: 97:     timeString[0] = (hours / 10) + '0';
  4506   000AA6  C0AC  F006         	movff	_hours,___awdiv@dividend
  4507   000AAA  6A07               	clrf	(___awdiv@dividend+1)^0,c
  4508   000AAC  0E00               	movlw	0
  4509   000AAE  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4510   000AB0  0E0A               	movlw	10
  4511   000AB2  6E08               	movwf	___awdiv@divisor^0,c
  4512   000AB4  EC36  F004         	call	___awdiv	;wreg free
  4513   000AB8  5006               	movf	?___awdiv^0,w,c
  4514   000ABA  0F30               	addlw	48
  4515   000ABC  0100               	movlb	0	; () banked
  4516   000ABE  6FBF               	movwf	displayTime@timeString& (0+255),b
  4517                           
  4518                           ;main.c: 98:     timeString[1] = (hours % 10) + '0';
  4519   000AC0  C0AC  F006         	movff	_hours,___awmod@dividend
  4520   000AC4  6A07               	clrf	(___awmod@dividend+1)^0,c
  4521   000AC6  0E00               	movlw	0
  4522   000AC8  6E09               	movwf	(___awmod@divisor+1)^0,c
  4523   000ACA  0E0A               	movlw	10
  4524   000ACC  6E08               	movwf	___awmod@divisor^0,c
  4525   000ACE  EC07  F006         	call	___awmod	;wreg free
  4526   000AD2  5006               	movf	?___awmod^0,w,c
  4527   000AD4  0F30               	addlw	48
  4528   000AD6  0100               	movlb	0	; () banked
  4529   000AD8  6FC0               	movwf	(displayTime@timeString+1)& (0+255),b
  4530                           
  4531                           ;main.c: 99:     timeString[2] = (minutes / 10) + '0';
  4532   000ADA  C0AB  F006         	movff	_minutes,___awdiv@dividend
  4533   000ADE  6A07               	clrf	(___awdiv@dividend+1)^0,c
  4534   000AE0  0E00               	movlw	0
  4535   000AE2  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4536   000AE4  0E0A               	movlw	10
  4537   000AE6  6E08               	movwf	___awdiv@divisor^0,c
  4538   000AE8  EC36  F004         	call	___awdiv	;wreg free
  4539   000AEC  5006               	movf	?___awdiv^0,w,c
  4540   000AEE  0F30               	addlw	48
  4541   000AF0  0100               	movlb	0	; () banked
  4542   000AF2  6FC1               	movwf	(displayTime@timeString+2)& (0+255),b
  4543                           
  4544                           ;main.c: 100:     timeString[3] = (minutes % 10) + '0';
  4545   000AF4  C0AB  F006         	movff	_minutes,___awmod@dividend
  4546   000AF8  6A07               	clrf	(___awmod@dividend+1)^0,c
  4547   000AFA  0E00               	movlw	0
  4548   000AFC  6E09               	movwf	(___awmod@divisor+1)^0,c
  4549   000AFE  0E0A               	movlw	10
  4550   000B00  6E08               	movwf	___awmod@divisor^0,c
  4551   000B02  EC07  F006         	call	___awmod	;wreg free
  4552   000B06  5006               	movf	?___awmod^0,w,c
  4553   000B08  0F30               	addlw	48
  4554   000B0A  0100               	movlb	0	; () banked
  4555   000B0C  6FC2               	movwf	(displayTime@timeString+3)& (0+255),b
  4556   000B0E                     
  4557                           ; BSR set to: 0
  4558                           ;main.c: 101:     timeString[4] = '\0';
  4559   000B0E  0E00               	movlw	0
  4560   000B10  6FC3               	movwf	(displayTime@timeString+4)& (0+255),b
  4561   000B12                     
  4562                           ; BSR set to: 0
  4563                           ;main.c: 104:     uint8_t displayString[5];;main.c: 105:     for (int i = 0; i < 5; i++)
      +                           {
  4564   000B12  0E00               	movlw	0
  4565   000B14  6FC5               	movwf	(displayTime@i+1)& (0+255),b
  4566   000B16  0E00               	movlw	0
  4567   000B18  6FC4               	movwf	displayTime@i& (0+255),b
  4568   000B1A                     l3569:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;main.c: 106:         displayString[i] = (uint8_t)timeString[i];
  4572   000B1A  51C4               	movf	displayTime@i& (0+255),w,b
  4573   000B1C  0FBF               	addlw	low displayTime@timeString
  4574   000B1E  6ED9               	movwf	fsr2l,c
  4575   000B20  6ADA               	clrf	fsr2h,c
  4576   000B22  51C4               	movf	displayTime@i& (0+255),w,b
  4577   000B24  0FBA               	addlw	low displayTime@displayString
  4578   000B26  6EE1               	movwf	fsr1l,c
  4579   000B28  6AE2               	clrf	fsr1h,c
  4580   000B2A  CFDF FFE7          	movff	indf2,indf1
  4581   000B2E                     
  4582                           ; BSR set to: 0
  4583                           ;main.c: 107:     }
  4584   000B2E  4BC4               	infsnz	displayTime@i& (0+255),f,b
  4585   000B30  2BC5               	incf	(displayTime@i+1)& (0+255),f,b
  4586   000B32                     
  4587                           ; BSR set to: 0
  4588   000B32  BFC5               	btfsc	(displayTime@i+1)& (0+255),7,b
  4589   000B34  EFA5  F005         	goto	u2761
  4590   000B38  51C5               	movf	(displayTime@i+1)& (0+255),w,b
  4591   000B3A  E109               	bnz	u2760
  4592   000B3C  0E05               	movlw	5
  4593   000B3E  5DC4               	subwf	displayTime@i& (0+255),w,b
  4594   000B40  A0D8               	btfss	status,0,c
  4595   000B42  EFA5  F005         	goto	u2761
  4596   000B46  EFA7  F005         	goto	u2760
  4597   000B4A                     u2761:
  4598   000B4A  EF8D  F005         	goto	l3569
  4599   000B4E                     u2760:
  4600   000B4E                     
  4601                           ; BSR set to: 0
  4602                           ;main.c: 109:     printString(displayString);
  4603   000B4E  0EBA               	movlw	low displayTime@displayString
  4604   000B50  6E46               	movwf	printString@str^0,c
  4605   000B52  6A47               	clrf	(printString@str+1)^0,c
  4606   000B54  EC99  F001         	call	_printString	;wreg free
  4607   000B58  0012               	return		;funcret
  4608   000B5A                     __end_of_displayTime:
  4609                           	callstack 0
  4610                           
  4611 ;; *************** function _displayAlarmTime *****************
  4612 ;; Defined at:
  4613 ;;		line 125 in file "main.c"
  4614 ;; Parameters:    Size  Location     Type
  4615 ;;		None
  4616 ;; Auto vars:     Size  Location     Type
  4617 ;;  i               2   21[BANK0 ] int 
  4618 ;;  alarmTimeStr    5   16[BANK0 ] unsigned char [5]
  4619 ;;  displayStrin    5   11[BANK0 ] unsigned char [5]
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4630 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4632 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4633 ;;Total ram usage:       12 bytes
  4634 ;; Hardware stack levels used: 1
  4635 ;; Hardware stack levels required when called: 9
  4636 ;; This function calls:
  4637 ;;		___awdiv
  4638 ;;		___awmod
  4639 ;;		_printString
  4640 ;; This function is called by:
  4641 ;;		_checkButtons
  4642 ;; This function uses a non-reentrant model
  4643 ;;
  4644                           
  4645                           	psect	text14
  4646   000B5A                     __ptext14:
  4647                           	callstack 0
  4648   000B5A                     _displayAlarmTime:
  4649                           	callstack 20
  4650   000B5A                     
  4651                           ;main.c: 127:     char alarmTimeString[5];;main.c: 130:     alarmTimeString[0] = (alarmH
      +                          ours / 10) + '0';
  4652   000B5A  C0A9  F006         	movff	_alarmHours,___awdiv@dividend
  4653   000B5E  6A07               	clrf	(___awdiv@dividend+1)^0,c
  4654   000B60  0E00               	movlw	0
  4655   000B62  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4656   000B64  0E0A               	movlw	10
  4657   000B66  6E08               	movwf	___awdiv@divisor^0,c
  4658   000B68  EC36  F004         	call	___awdiv	;wreg free
  4659   000B6C  5006               	movf	?___awdiv^0,w,c
  4660   000B6E  0F30               	addlw	48
  4661   000B70  0100               	movlb	0	; () banked
  4662   000B72  6FBF               	movwf	displayAlarmTime@alarmTimeString& (0+255),b
  4663                           
  4664                           ;main.c: 131:     alarmTimeString[1] = (alarmHours % 10) + '0';
  4665   000B74  C0A9  F006         	movff	_alarmHours,___awmod@dividend
  4666   000B78  6A07               	clrf	(___awmod@dividend+1)^0,c
  4667   000B7A  0E00               	movlw	0
  4668   000B7C  6E09               	movwf	(___awmod@divisor+1)^0,c
  4669   000B7E  0E0A               	movlw	10
  4670   000B80  6E08               	movwf	___awmod@divisor^0,c
  4671   000B82  EC07  F006         	call	___awmod	;wreg free
  4672   000B86  5006               	movf	?___awmod^0,w,c
  4673   000B88  0F30               	addlw	48
  4674   000B8A  0100               	movlb	0	; () banked
  4675   000B8C  6FC0               	movwf	(displayAlarmTime@alarmTimeString+1)& (0+255),b
  4676                           
  4677                           ;main.c: 132:     alarmTimeString[2] = (alarmMinutes / 10) + '0';
  4678   000B8E  C0A8  F006         	movff	_alarmMinutes,___awdiv@dividend
  4679   000B92  6A07               	clrf	(___awdiv@dividend+1)^0,c
  4680   000B94  0E00               	movlw	0
  4681   000B96  6E09               	movwf	(___awdiv@divisor+1)^0,c
  4682   000B98  0E0A               	movlw	10
  4683   000B9A  6E08               	movwf	___awdiv@divisor^0,c
  4684   000B9C  EC36  F004         	call	___awdiv	;wreg free
  4685   000BA0  5006               	movf	?___awdiv^0,w,c
  4686   000BA2  0F30               	addlw	48
  4687   000BA4  0100               	movlb	0	; () banked
  4688   000BA6  6FC1               	movwf	(displayAlarmTime@alarmTimeString+2)& (0+255),b
  4689                           
  4690                           ;main.c: 133:     alarmTimeString[3] = (alarmMinutes % 10) + '0';
  4691   000BA8  C0A8  F006         	movff	_alarmMinutes,___awmod@dividend
  4692   000BAC  6A07               	clrf	(___awmod@dividend+1)^0,c
  4693   000BAE  0E00               	movlw	0
  4694   000BB0  6E09               	movwf	(___awmod@divisor+1)^0,c
  4695   000BB2  0E0A               	movlw	10
  4696   000BB4  6E08               	movwf	___awmod@divisor^0,c
  4697   000BB6  EC07  F006         	call	___awmod	;wreg free
  4698   000BBA  5006               	movf	?___awmod^0,w,c
  4699   000BBC  0F30               	addlw	48
  4700   000BBE  0100               	movlb	0	; () banked
  4701   000BC0  6FC2               	movwf	(displayAlarmTime@alarmTimeString+3)& (0+255),b
  4702   000BC2                     
  4703                           ; BSR set to: 0
  4704                           ;main.c: 134:     alarmTimeString[4] = '\0';
  4705   000BC2  0E00               	movlw	0
  4706   000BC4  6FC3               	movwf	(displayAlarmTime@alarmTimeString+4)& (0+255),b
  4707   000BC6                     
  4708                           ; BSR set to: 0
  4709                           ;main.c: 137:     uint8_t displayString[5];;main.c: 138:     for (int i = 0; i < 5; i++)
      +                           {
  4710   000BC6  0E00               	movlw	0
  4711   000BC8  6FC5               	movwf	(displayAlarmTime@i+1)& (0+255),b
  4712   000BCA  0E00               	movlw	0
  4713   000BCC  6FC4               	movwf	displayAlarmTime@i& (0+255),b
  4714   000BCE                     l3601:
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;main.c: 139:         displayString[i] = (uint8_t)alarmTimeString[i];
  4718   000BCE  51C4               	movf	displayAlarmTime@i& (0+255),w,b
  4719   000BD0  0FBF               	addlw	low displayAlarmTime@alarmTimeString
  4720   000BD2  6ED9               	movwf	fsr2l,c
  4721   000BD4  6ADA               	clrf	fsr2h,c
  4722   000BD6  51C4               	movf	displayAlarmTime@i& (0+255),w,b
  4723   000BD8  0FBA               	addlw	low displayAlarmTime@displayString
  4724   000BDA  6EE1               	movwf	fsr1l,c
  4725   000BDC  6AE2               	clrf	fsr1h,c
  4726   000BDE  CFDF FFE7          	movff	indf2,indf1
  4727   000BE2                     
  4728                           ; BSR set to: 0
  4729                           ;main.c: 140:     }
  4730   000BE2  4BC4               	infsnz	displayAlarmTime@i& (0+255),f,b
  4731   000BE4  2BC5               	incf	(displayAlarmTime@i+1)& (0+255),f,b
  4732   000BE6                     
  4733                           ; BSR set to: 0
  4734   000BE6  BFC5               	btfsc	(displayAlarmTime@i+1)& (0+255),7,b
  4735   000BE8  EFFF  F005         	goto	u2781
  4736   000BEC  51C5               	movf	(displayAlarmTime@i+1)& (0+255),w,b
  4737   000BEE  E109               	bnz	u2780
  4738   000BF0  0E05               	movlw	5
  4739   000BF2  5DC4               	subwf	displayAlarmTime@i& (0+255),w,b
  4740   000BF4  A0D8               	btfss	status,0,c
  4741   000BF6  EFFF  F005         	goto	u2781
  4742   000BFA  EF01  F006         	goto	u2780
  4743   000BFE                     u2781:
  4744   000BFE  EFE7  F005         	goto	l3601
  4745   000C02                     u2780:
  4746   000C02                     
  4747                           ; BSR set to: 0
  4748                           ;main.c: 142:     printString(displayString);
  4749   000C02  0EBA               	movlw	low displayAlarmTime@displayString
  4750   000C04  6E46               	movwf	printString@str^0,c
  4751   000C06  6A47               	clrf	(printString@str+1)^0,c
  4752   000C08  EC99  F001         	call	_printString	;wreg free
  4753   000C0C  0012               	return		;funcret
  4754   000C0E                     __end_of_displayAlarmTime:
  4755                           	callstack 0
  4756                           
  4757 ;; *************** function _printString *****************
  4758 ;; Defined at:
  4759 ;;		line 161 in file "MAX7219.c"
  4760 ;; Parameters:    Size  Location     Type
  4761 ;;  str             2   69[COMRAM] PTR unsigned char 
  4762 ;;		 -> STR_1(6), displayAlarmTime@displayString(5), displayTime@displayString(5), 
  4763 ;; Auto vars:     Size  Location     Type
  4764 ;;  j               2    9[BANK0 ] int 
  4765 ;;  data            1    2[BANK0 ] unsigned char 
  4766 ;;  i               2    5[BANK0 ] int 
  4767 ;;  indx            2    0[BANK0 ] int 
  4768 ;;  k               2    7[BANK0 ] int 
  4769 ;;  strindx         2    3[BANK0 ] int 
  4770 ;; Return value:  Size  Location     Type
  4771 ;;                  1    wreg      void 
  4772 ;; Registers used:
  4773 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4774 ;; Tracked objects:
  4775 ;;		On entry : 0/0
  4776 ;;		On exit  : 0/0
  4777 ;;		Unchanged: 0/0
  4778 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4779 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4780 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4781 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4782 ;;      Totals:        10      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4783 ;;Total ram usage:       21 bytes
  4784 ;; Hardware stack levels used: 1
  4785 ;; Hardware stack levels required when called: 8
  4786 ;; This function calls:
  4787 ;;		_flushBuffer
  4788 ;; This function is called by:
  4789 ;;		_displayTime
  4790 ;;		_displayAlarmTime
  4791 ;;		_triggerAlarm
  4792 ;; This function uses a non-reentrant model
  4793 ;;
  4794                           
  4795                           	psect	text15
  4796   000332                     __ptext15:
  4797                           	callstack 0
  4798   000332                     _printString:
  4799                           	callstack 20
  4800   000332                     
  4801                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  4802   000332  0E00               	movlw	0
  4803   000334  0100               	movlb	0	; () banked
  4804   000336  6FB3               	movwf	(printString@strindx+1)& (0+255),b
  4805   000338  0E00               	movlw	0
  4806   00033A  6FB2               	movwf	printString@strindx& (0+255),b
  4807                           
  4808                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  4809   00033C  0E00               	movlw	0
  4810   00033E  6FB7               	movwf	(printString@k+1)& (0+255),b
  4811   000340  0E1F               	movlw	31
  4812   000342  6FB6               	movwf	printString@k& (0+255),b
  4813                           
  4814                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  4815   000344  EF41  F002         	goto	l3451
  4816   000348                     l3411:
  4817                           
  4818                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  4819   000348  0E00               	movlw	0
  4820   00034A  0100               	movlb	0	; () banked
  4821   00034C  6FB0               	movwf	(printString@indx+1)& (0+255),b
  4822   00034E  0E00               	movlw	0
  4823   000350  6FAF               	movwf	printString@indx& (0+255),b
  4824                           
  4825                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  4826   000352  0E00               	movlw	0
  4827   000354  6FB5               	movwf	(printString@i+1)& (0+255),b
  4828   000356  0E00               	movlw	0
  4829   000358  6FB4               	movwf	printString@i& (0+255),b
  4830   00035A                     l3417:
  4831                           
  4832                           ; BSR set to: 0
  4833                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  4834   00035A  0E00               	movlw	0
  4835   00035C  6FB1               	movwf	printString@data& (0+255),b
  4836                           
  4837                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  4838   00035E  0E00               	movlw	0
  4839   000360  6FB9               	movwf	(printString@j+1)& (0+255),b
  4840   000362  0E07               	movlw	7
  4841   000364  6FB8               	movwf	printString@j& (0+255),b
  4842   000366                     l3423:
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  4846   000366  51B2               	movf	printString@strindx& (0+255),w,b
  4847   000368  2446               	addwf	printString@str^0,w,c
  4848   00036A  6E48               	movwf	??_printString^0,c
  4849   00036C  51B3               	movf	(printString@strindx+1)& (0+255),w,b
  4850   00036E  2047               	addwfc	(printString@str+1)^0,w,c
  4851   000370  6E49               	movwf	(??_printString+1)^0,c
  4852   000372  C048  FFF6         	movff	??_printString,tblptrl
  4853   000376  C049  FFF7         	movff	??_printString+1,tblptrh
  4854   00037A  0E00               	movlw	low (__mediumconst shr (0+16))
  4855   00037C  6EF8               	movwf	tblptru,c
  4856   00037E  0E0F               	movlw	(high __ramtop+-1)
  4857   000380  64F7               	cpfsgt	tblptrh,c
  4858   000382  D003               	bra	u2607
  4859   000384  0008               	tblrd		*
  4860   000386  50F5               	movf	tablat,w,c
  4861   000388  D005               	bra	u2600
  4862   00038A                     u2607:
  4863   00038A  CFF6 FFE1          	movff	tblptrl,fsr1l
  4864   00038E  CFF7 FFE2          	movff	tblptrh,fsr1h
  4865   000392  50E7               	movf	indf1,w,c
  4866   000394                     u2600:
  4867   000394  6E4A               	movwf	(??_printString+2)^0,c
  4868   000396  504A               	movf	(??_printString+2)^0,w,c
  4869   000398  0D08               	mullw	8
  4870   00039A  0EF9               	movlw	low _MAX7219_Dot_Matrix_font
  4871   00039C  24F3               	addwf	243,w,c
  4872   00039E  6E4B               	movwf	(??_printString+3)^0,c
  4873   0003A0  0EF7               	movlw	high _MAX7219_Dot_Matrix_font
  4874   0003A2  20F4               	addwfc	prodh,w,c
  4875   0003A4  6E4C               	movwf	(??_printString+4)^0,c
  4876   0003A6  0100               	movlb	0	; () banked
  4877   0003A8  51AF               	movf	printString@indx& (0+255),w,b
  4878   0003AA  264B               	addwf	(??_printString+3)^0,f,c
  4879   0003AC  51B0               	movf	(printString@indx+1)& (0+255),w,b
  4880   0003AE  224C               	addwfc	(??_printString+4)^0,f,c
  4881   0003B0  C04B  FFF6         	movff	??_printString+3,tblptrl
  4882   0003B4  C04C  FFF7         	movff	??_printString+4,tblptrh
  4883   0003B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4884   0003B8  6AF8               	clrf	tblptru,c
  4885   0003BA                     	endif
  4886   0003BA                     	if	0	;tblptru may be non-zero
  4887   0003BA                     	endif
  4888   0003BA  0008               	tblrd		*
  4889   0003BC  CFF5 F04D          	movff	tablat,??_printString+5
  4890   0003C0  C0B8  F04E         	movff	printString@j,??_printString+6
  4891   0003C4  0E01               	movlw	1
  4892   0003C6  6E4F               	movwf	(??_printString+7)^0,c
  4893   0003C8  2A4E               	incf	(??_printString+6)^0,f,c
  4894   0003CA  EFE9  F001         	goto	u2614
  4895   0003CE                     u2615:
  4896   0003CE  90D8               	bcf	status,0,c
  4897   0003D0  364F               	rlcf	(??_printString+7)^0,f,c
  4898   0003D2                     u2614:
  4899   0003D2  2E4E               	decfsz	(??_printString+6)^0,f,c
  4900   0003D4  EFE7  F001         	goto	u2615
  4901   0003D8  504F               	movf	(??_printString+7)^0,w,c
  4902   0003DA  144D               	andwf	(??_printString+5)^0,w,c
  4903   0003DC  0900               	iorlw	0
  4904   0003DE  B4D8               	btfsc	status,2,c
  4905   0003E0  EFF4  F001         	goto	u2621
  4906   0003E4  EFF6  F001         	goto	u2620
  4907   0003E8                     u2621:
  4908   0003E8  EF07  F002         	goto	l3427
  4909   0003EC                     u2620:
  4910   0003EC                     
  4911                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  4912   0003EC  0100               	movlb	0	; () banked
  4913   0003EE  51B8               	movf	printString@j& (0+255),w,b
  4914   0003F0  0807               	sublw	7
  4915   0003F2  6E48               	movwf	??_printString^0,c
  4916   0003F4  0E01               	movlw	1
  4917   0003F6  6E49               	movwf	(??_printString+1)^0,c
  4918   0003F8  2A48               	incf	??_printString^0,f,c
  4919   0003FA  EF01  F002         	goto	u2634
  4920   0003FE                     u2635:
  4921   0003FE  90D8               	bcf	status,0,c
  4922   000400  3649               	rlcf	(??_printString+1)^0,f,c
  4923   000402                     u2634:
  4924   000402  2E48               	decfsz	??_printString^0,f,c
  4925   000404  EFFF  F001         	goto	u2635
  4926   000408  5049               	movf	(??_printString+1)^0,w,c
  4927   00040A  0100               	movlb	0	; () banked
  4928   00040C  13B1               	iorwf	printString@data& (0+255),f,b
  4929   00040E                     l3427:
  4930                           
  4931                           ;MAX7219.c: 179:             }
  4932   00040E  0100               	movlb	0	; () banked
  4933   000410  07B8               	decf	printString@j& (0+255),f,b
  4934   000412  A0D8               	btfss	status,0,c
  4935   000414  07B9               	decf	(printString@j+1)& (0+255),f,b
  4936   000416                     
  4937                           ; BSR set to: 0
  4938   000416  BFB9               	btfsc	(printString@j+1)& (0+255),7,b
  4939   000418  EF12  F002         	goto	u2640
  4940   00041C  EF10  F002         	goto	u2641
  4941   000420                     u2641:
  4942   000420  EFB3  F001         	goto	l3423
  4943   000424                     u2640:
  4944   000424                     
  4945                           ; BSR set to: 0
  4946                           ;MAX7219.c: 180:             if (k < 0) break;
  4947   000424  BFB7               	btfsc	(printString@k+1)& (0+255),7,b
  4948   000426  EF19  F002         	goto	u2650
  4949   00042A  EF17  F002         	goto	u2651
  4950   00042E                     u2651:
  4951   00042E  EF1B  F002         	goto	l3435
  4952   000432                     u2650:
  4953   000432  EF36  F002         	goto	l3445
  4954   000436                     l3435:
  4955                           
  4956                           ; BSR set to: 0
  4957                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  4958   000436  51B6               	movf	printString@k& (0+255),w,b
  4959   000438  0F60               	addlw	low _bufferCol
  4960   00043A  6ED9               	movwf	fsr2l,c
  4961   00043C  6ADA               	clrf	fsr2h,c
  4962   00043E  C0B1  FFDF         	movff	printString@data,indf2
  4963   000442                     
  4964                           ; BSR set to: 0
  4965   000442  07B6               	decf	printString@k& (0+255),f,b
  4966   000444  A0D8               	btfss	status,0,c
  4967   000446  07B7               	decf	(printString@k+1)& (0+255),f,b
  4968   000448                     
  4969                           ; BSR set to: 0
  4970                           ;MAX7219.c: 182:             indx++;
  4971   000448  4BAF               	infsnz	printString@indx& (0+255),f,b
  4972   00044A  2BB0               	incf	(printString@indx+1)& (0+255),f,b
  4973   00044C                     
  4974                           ; BSR set to: 0
  4975                           ;MAX7219.c: 183:         }
  4976   00044C  4BB4               	infsnz	printString@i& (0+255),f,b
  4977   00044E  2BB5               	incf	(printString@i+1)& (0+255),f,b
  4978   000450                     
  4979                           ; BSR set to: 0
  4980   000450  BFB5               	btfsc	(printString@i+1)& (0+255),7,b
  4981   000452  EF34  F002         	goto	u2661
  4982   000456  51B5               	movf	(printString@i+1)& (0+255),w,b
  4983   000458  E109               	bnz	u2660
  4984   00045A  0E08               	movlw	8
  4985   00045C  5DB4               	subwf	printString@i& (0+255),w,b
  4986   00045E  A0D8               	btfss	status,0,c
  4987   000460  EF34  F002         	goto	u2661
  4988   000464  EF36  F002         	goto	u2660
  4989   000468                     u2661:
  4990   000468  EFAD  F001         	goto	l3417
  4991   00046C                     u2660:
  4992   00046C                     l3445:
  4993                           
  4994                           ; BSR set to: 0
  4995                           ;MAX7219.c: 184:         strindx++;
  4996   00046C  4BB2               	infsnz	printString@strindx& (0+255),f,b
  4997   00046E  2BB3               	incf	(printString@strindx+1)& (0+255),f,b
  4998   000470                     
  4999                           ; BSR set to: 0
  5000                           ;MAX7219.c: 185:         if (k < 0) break;
  5001   000470  BFB7               	btfsc	(printString@k+1)& (0+255),7,b
  5002   000472  EF3F  F002         	goto	u2670
  5003   000476  EF3D  F002         	goto	u2671
  5004   00047A                     u2671:
  5005   00047A  EF41  F002         	goto	l3451
  5006   00047E                     u2670:
  5007   00047E  EF60  F002         	goto	l3453
  5008   000482                     l3451:
  5009                           
  5010                           ; BSR set to: 0
  5011                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5012   000482  51B2               	movf	printString@strindx& (0+255),w,b
  5013   000484  2446               	addwf	printString@str^0,w,c
  5014   000486  6E48               	movwf	??_printString^0,c
  5015   000488  51B3               	movf	(printString@strindx+1)& (0+255),w,b
  5016   00048A  2047               	addwfc	(printString@str+1)^0,w,c
  5017   00048C  6E49               	movwf	(??_printString+1)^0,c
  5018   00048E  C048  FFF6         	movff	??_printString,tblptrl
  5019   000492  C049  FFF7         	movff	??_printString+1,tblptrh
  5020   000496  0E00               	movlw	low (__mediumconst shr (0+16))
  5021   000498  6EF8               	movwf	tblptru,c
  5022   00049A  0E0F               	movlw	(high __ramtop+-1)
  5023   00049C  64F7               	cpfsgt	tblptrh,c
  5024   00049E  D003               	bra	u2687
  5025   0004A0  0008               	tblrd		*
  5026   0004A2  50F5               	movf	tablat,w,c
  5027   0004A4  D005               	bra	u2680
  5028   0004A6                     u2687:
  5029   0004A6  CFF6 FFE1          	movff	tblptrl,fsr1l
  5030   0004AA  CFF7 FFE2          	movff	tblptrh,fsr1h
  5031   0004AE  50E7               	movf	indf1,w,c
  5032   0004B0                     u2680:
  5033   0004B0  0900               	iorlw	0
  5034   0004B2  A4D8               	btfss	status,2,c
  5035   0004B4  EF5E  F002         	goto	u2691
  5036   0004B8  EF60  F002         	goto	u2690
  5037   0004BC                     u2691:
  5038   0004BC  EFA4  F001         	goto	l3411
  5039   0004C0                     u2690:
  5040   0004C0                     l3453:
  5041                           
  5042                           ;MAX7219.c: 188:     flushBuffer();
  5043   0004C0  EC63  F002         	call	_flushBuffer	;wreg free
  5044   0004C4  0012               	return		;funcret
  5045   0004C6                     __end_of_printString:
  5046                           	callstack 0
  5047                           
  5048 ;; *************** function _flushBuffer *****************
  5049 ;; Defined at:
  5050 ;;		line 52 in file "MAX7219.c"
  5051 ;; Parameters:    Size  Location     Type
  5052 ;;		None
  5053 ;; Auto vars:     Size  Location     Type
  5054 ;;  j               2   63[COMRAM] int 
  5055 ;;  dev             2   61[COMRAM] int 
  5056 ;;  row             2   65[COMRAM] int 
  5057 ;;  i               2   67[COMRAM] int 
  5058 ;;  bufferRow      32   29[COMRAM] unsigned char [32]
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5071 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5072 ;;Total ram usage:       43 bytes
  5073 ;; Hardware stack levels used: 1
  5074 ;; Hardware stack levels required when called: 7
  5075 ;; This function calls:
  5076 ;;		___awdiv
  5077 ;;		_max_write
  5078 ;; This function is called by:
  5079 ;;		_clearDisplay
  5080 ;;		_printString
  5081 ;;		_shiftLeft
  5082 ;;		_shiftchar
  5083 ;; This function uses a non-reentrant model
  5084 ;;
  5085                           
  5086                           	psect	text16
  5087   0004C6                     __ptext16:
  5088                           	callstack 0
  5089   0004C6                     _flushBuffer:
  5090                           	callstack 20
  5091   0004C6                     
  5092                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  5093   0004C6  EE20  F01E         	lfsr	2,flushBuffer@bufferRow
  5094   0004CA  0E1F               	movlw	31
  5095   0004CC                     u2471:
  5096   0004CC  6ADE               	clrf	postinc2,c
  5097   0004CE  06E8               	decf	wreg,f,c
  5098   0004D0  E2FD               	bc	u2471
  5099   0004D2                     
  5100                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  5101   0004D2  0E00               	movlw	0
  5102   0004D4  6E45               	movwf	(flushBuffer@i+1)^0,c
  5103   0004D6  0E00               	movlw	0
  5104   0004D8  6E44               	movwf	flushBuffer@i^0,c
  5105   0004DA                     l3297:
  5106                           
  5107                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  5108   0004DA  C044  F006         	movff	flushBuffer@i,___awdiv@dividend
  5109   0004DE  C045  F007         	movff	flushBuffer@i+1,___awdiv@dividend+1
  5110   0004E2  0E00               	movlw	0
  5111   0004E4  6E09               	movwf	(___awdiv@divisor+1)^0,c
  5112   0004E6  0E08               	movlw	8
  5113   0004E8  6E08               	movwf	___awdiv@divisor^0,c
  5114   0004EA  EC36  F004         	call	___awdiv	;wreg free
  5115   0004EE  C006  F03E         	movff	?___awdiv,flushBuffer@dev
  5116   0004F2  C007  F03F         	movff	?___awdiv+1,flushBuffer@dev+1
  5117   0004F6                     
  5118                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  5119   0004F6  0E00               	movlw	0
  5120   0004F8  6E41               	movwf	(flushBuffer@j+1)^0,c
  5121   0004FA  0E00               	movlw	0
  5122   0004FC  6E40               	movwf	flushBuffer@j^0,c
  5123   0004FE                     l3305:
  5124                           
  5125                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  5126   0004FE  5044               	movf	flushBuffer@i^0,w,c
  5127   000500  0F60               	addlw	low _bufferCol
  5128   000502  6ED9               	movwf	fsr2l,c
  5129   000504  6ADA               	clrf	fsr2h,c
  5130   000506  50DF               	movf	indf2,w,c
  5131   000508  6E1B               	movwf	??_flushBuffer^0,c
  5132   00050A  C040  F01C         	movff	flushBuffer@j,??_flushBuffer+1
  5133   00050E  0E01               	movlw	1
  5134   000510  6E1D               	movwf	(??_flushBuffer+2)^0,c
  5135   000512  2A1C               	incf	(??_flushBuffer+1)^0,f,c
  5136   000514  EF8E  F002         	goto	u2484
  5137   000518                     u2485:
  5138   000518  90D8               	bcf	status,0,c
  5139   00051A  361D               	rlcf	(??_flushBuffer+2)^0,f,c
  5140   00051C                     u2484:
  5141   00051C  2E1C               	decfsz	(??_flushBuffer+1)^0,f,c
  5142   00051E  EF8C  F002         	goto	u2485
  5143   000522  501D               	movf	(??_flushBuffer+2)^0,w,c
  5144   000524  141B               	andwf	??_flushBuffer^0,w,c
  5145   000526  0900               	iorlw	0
  5146   000528  B4D8               	btfsc	status,2,c
  5147   00052A  EF99  F002         	goto	u2491
  5148   00052E  EF9B  F002         	goto	u2490
  5149   000532                     u2491:
  5150   000532  EFB5  F002         	goto	l3309
  5151   000536                     u2490:
  5152   000536                     
  5153                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  5154   000536  503E               	movf	flushBuffer@dev^0,w,c
  5155   000538  0D08               	mullw	8
  5156   00053A  5044               	movf	flushBuffer@i^0,w,c
  5157   00053C  5CF3               	subwf	243,w,c
  5158   00053E  6E1B               	movwf	??_flushBuffer^0,c
  5159   000540  0E07               	movlw	7
  5160   000542  261B               	addwf	??_flushBuffer^0,f,c
  5161   000544  0E01               	movlw	1
  5162   000546  6E1C               	movwf	(??_flushBuffer+1)^0,c
  5163   000548  2A1B               	incf	??_flushBuffer^0,f,c
  5164   00054A  EFA9  F002         	goto	u2504
  5165   00054E                     u2505:
  5166   00054E  90D8               	bcf	status,0,c
  5167   000550  361C               	rlcf	(??_flushBuffer+1)^0,f,c
  5168   000552                     u2504:
  5169   000552  2E1B               	decfsz	??_flushBuffer^0,f,c
  5170   000554  EFA7  F002         	goto	u2505
  5171   000558  503E               	movf	flushBuffer@dev^0,w,c
  5172   00055A  0D08               	mullw	8
  5173   00055C  50F3               	movf	243,w,c
  5174   00055E  0F1E               	addlw	low flushBuffer@bufferRow
  5175   000560  2440               	addwf	flushBuffer@j^0,w,c
  5176   000562  6ED9               	movwf	fsr2l,c
  5177   000564  6ADA               	clrf	fsr2h,c
  5178   000566  501C               	movf	(??_flushBuffer+1)^0,w,c
  5179   000568  12DF               	iorwf	indf2,f,c
  5180   00056A                     l3309:
  5181                           
  5182                           ;MAX7219.c: 66:   }
  5183   00056A  4A40               	infsnz	flushBuffer@j^0,f,c
  5184   00056C  2A41               	incf	(flushBuffer@j+1)^0,f,c
  5185   00056E  BE41               	btfsc	(flushBuffer@j+1)^0,7,c
  5186   000570  EFC3  F002         	goto	u2511
  5187   000574  5041               	movf	(flushBuffer@j+1)^0,w,c
  5188   000576  E109               	bnz	u2510
  5189   000578  0E08               	movlw	8
  5190   00057A  5C40               	subwf	flushBuffer@j^0,w,c
  5191   00057C  A0D8               	btfss	status,0,c
  5192   00057E  EFC3  F002         	goto	u2511
  5193   000582  EFC5  F002         	goto	u2510
  5194   000586                     u2511:
  5195   000586  EF7F  F002         	goto	l3305
  5196   00058A                     u2510:
  5197   00058A                     
  5198                           ;MAX7219.c: 67:  }
  5199   00058A  4A44               	infsnz	flushBuffer@i^0,f,c
  5200   00058C  2A45               	incf	(flushBuffer@i+1)^0,f,c
  5201   00058E  BE45               	btfsc	(flushBuffer@i+1)^0,7,c
  5202   000590  EFD3  F002         	goto	u2521
  5203   000594  5045               	movf	(flushBuffer@i+1)^0,w,c
  5204   000596  E109               	bnz	u2520
  5205   000598  0E20               	movlw	32
  5206   00059A  5C44               	subwf	flushBuffer@i^0,w,c
  5207   00059C  A0D8               	btfss	status,0,c
  5208   00059E  EFD3  F002         	goto	u2521
  5209   0005A2  EFD5  F002         	goto	u2520
  5210   0005A6                     u2521:
  5211   0005A6  EF6D  F002         	goto	l3297
  5212   0005AA                     u2520:
  5213   0005AA                     
  5214                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  5215   0005AA  0E00               	movlw	0
  5216   0005AC  6E43               	movwf	(flushBuffer@row+1)^0,c
  5217   0005AE  0E01               	movlw	1
  5218   0005B0  6E42               	movwf	flushBuffer@row^0,c
  5219   0005B2                     l3323:
  5220                           
  5221                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  5222   0005B2  C042  F00E         	movff	flushBuffer@row,max_write@row
  5223   0005B6  C043  F00F         	movff	flushBuffer@row+1,max_write@row+1
  5224   0005BA  C042  F01B         	movff	flushBuffer@row,??_flushBuffer
  5225   0005BE  0EFF               	movlw	255
  5226   0005C0  261B               	addwf	??_flushBuffer^0,f,c
  5227   0005C2  501B               	movf	??_flushBuffer^0,w,c
  5228   0005C4  0F1E               	addlw	low flushBuffer@bufferRow
  5229   0005C6  6ED9               	movwf	fsr2l,c
  5230   0005C8  6ADA               	clrf	fsr2h,c
  5231   0005CA  50DF               	movf	indf2,w,c
  5232   0005CC  6E10               	movwf	max_write@data^0,c
  5233   0005CE  EC98  F004         	call	_max_write	;wreg free
  5234   0005D2                     
  5235                           ;MAX7219.c: 73:  }
  5236   0005D2  4A42               	infsnz	flushBuffer@row^0,f,c
  5237   0005D4  2A43               	incf	(flushBuffer@row+1)^0,f,c
  5238   0005D6  BE43               	btfsc	(flushBuffer@row+1)^0,7,c
  5239   0005D8  EFF7  F002         	goto	u2531
  5240   0005DC  5043               	movf	(flushBuffer@row+1)^0,w,c
  5241   0005DE  E109               	bnz	u2530
  5242   0005E0  0E21               	movlw	33
  5243   0005E2  5C42               	subwf	flushBuffer@row^0,w,c
  5244   0005E4  A0D8               	btfss	status,0,c
  5245   0005E6  EFF7  F002         	goto	u2531
  5246   0005EA  EFF9  F002         	goto	u2530
  5247   0005EE                     u2531:
  5248   0005EE  EFD9  F002         	goto	l3323
  5249   0005F2                     u2530:
  5250   0005F2  0012               	return		;funcret
  5251   0005F4                     __end_of_flushBuffer:
  5252                           	callstack 0
  5253                           
  5254 ;; *************** function _max_write *****************
  5255 ;; Defined at:
  5256 ;;		line 10 in file "MAX7219.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  row             2   13[COMRAM] int 
  5259 ;;  data            1   15[COMRAM] unsigned char 
  5260 ;; Auto vars:     Size  Location     Type
  5261 ;;  dev             2   22[COMRAM] int 
  5262 ;;  writeData       2   24[COMRAM] unsigned short 
  5263 ;;  devTarget       2   20[COMRAM] int 
  5264 ;;  offset          2   18[COMRAM] int 
  5265 ;; Return value:  Size  Location     Type
  5266 ;;                  1    wreg      void 
  5267 ;; Registers used:
  5268 ;;		wreg, status,2, status,0, cstack
  5269 ;; Tracked objects:
  5270 ;;		On entry : 0/0
  5271 ;;		On exit  : 0/0
  5272 ;;		Unchanged: 0/0
  5273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5274 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5277 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;Total ram usage:       13 bytes
  5279 ;; Hardware stack levels used: 1
  5280 ;; Hardware stack levels required when called: 6
  5281 ;; This function calls:
  5282 ;;		_SPI_Exchange8bit
  5283 ;;		___awdiv
  5284 ;; This function is called by:
  5285 ;;		_flushBuffer
  5286 ;; This function uses a non-reentrant model
  5287 ;;
  5288                           
  5289                           	psect	text17
  5290   000930                     __ptext17:
  5291                           	callstack 0
  5292   000930                     _max_write:
  5293                           	callstack 20
  5294   000930                     
  5295                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  5296   000930  0EFF               	movlw	255
  5297   000932  240E               	addwf	max_write@row^0,w,c
  5298   000934  6E06               	movwf	___awdiv@dividend^0,c
  5299   000936  0EFF               	movlw	255
  5300   000938  200F               	addwfc	(max_write@row+1)^0,w,c
  5301   00093A  6E07               	movwf	(___awdiv@dividend+1)^0,c
  5302   00093C  0E00               	movlw	0
  5303   00093E  6E09               	movwf	(___awdiv@divisor+1)^0,c
  5304   000940  0E08               	movlw	8
  5305   000942  6E08               	movwf	___awdiv@divisor^0,c
  5306   000944  EC36  F004         	call	___awdiv	;wreg free
  5307   000948  C006  F015         	movff	?___awdiv,max_write@devTarget
  5308   00094C  C007  F016         	movff	?___awdiv+1,max_write@devTarget+1
  5309   000950                     
  5310                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  5311   000950  C015  F011         	movff	max_write@devTarget,??_max_write
  5312   000954  C016  F012         	movff	max_write@devTarget+1,??_max_write+1
  5313   000958  90D8               	bcf	status,0,c
  5314   00095A  3611               	rlcf	??_max_write^0,f,c
  5315   00095C  3612               	rlcf	(??_max_write+1)^0,f,c
  5316   00095E  90D8               	bcf	status,0,c
  5317   000960  3611               	rlcf	??_max_write^0,f,c
  5318   000962  3612               	rlcf	(??_max_write+1)^0,f,c
  5319   000964  90D8               	bcf	status,0,c
  5320   000966  3611               	rlcf	??_max_write^0,f,c
  5321   000968  3612               	rlcf	(??_max_write+1)^0,f,c
  5322   00096A  C011  F013         	movff	??_max_write,max_write@offset
  5323   00096E  C012  F014         	movff	??_max_write+1,max_write@offset+1
  5324   000972  948B               	bcf	139,2,c	;volatile
  5325   000974                     
  5326                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  5327   000974  0E00               	movlw	0
  5328   000976  6E18               	movwf	(max_write@dev+1)^0,c
  5329   000978  0E00               	movlw	0
  5330   00097A  6E17               	movwf	max_write@dev^0,c
  5331   00097C                     l3245:
  5332                           
  5333                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  5334   00097C  5015               	movf	max_write@devTarget^0,w,c
  5335   00097E  1817               	xorwf	max_write@dev^0,w,c
  5336   000980  E107               	bnz	u2441
  5337   000982  5016               	movf	(max_write@devTarget+1)^0,w,c
  5338   000984  1818               	xorwf	(max_write@dev+1)^0,w,c
  5339   000986  A4D8               	btfss	status,2,c
  5340   000988  EFC8  F004         	goto	u2441
  5341   00098C  EFCA  F004         	goto	u2440
  5342   000990                     u2441:
  5343   000990  EFE0  F004         	goto	l3253
  5344   000994                     u2440:
  5345   000994                     
  5346                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  5347   000994  5013               	movf	max_write@offset^0,w,c
  5348   000996  5C0E               	subwf	max_write@row^0,w,c
  5349   000998  6E11               	movwf	??_max_write^0,c
  5350   00099A  5014               	movf	(max_write@offset+1)^0,w,c
  5351   00099C  580F               	subwfb	(max_write@row+1)^0,w,c
  5352   00099E  6E12               	movwf	(??_max_write+1)^0,c
  5353   0009A0  C011  F012         	movff	??_max_write,??_max_write+1
  5354   0009A4  6A11               	clrf	??_max_write^0,c
  5355   0009A6  5010               	movf	max_write@data^0,w,c
  5356   0009A8  1011               	iorwf	??_max_write^0,w,c
  5357   0009AA  6E19               	movwf	max_write@writeData^0,c
  5358   0009AC  5012               	movf	(??_max_write+1)^0,w,c
  5359   0009AE  6E1A               	movwf	(max_write@writeData+1)^0,c
  5360   0009B0                     
  5361                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5362   0009B0  501A               	movf	(max_write@writeData+1)^0,w,c
  5363   0009B2  EC5B  F008         	call	_SPI_Exchange8bit
  5364   0009B6                     
  5365                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  5366   0009B6  5019               	movf	max_write@writeData^0,w,c
  5367   0009B8  EC5B  F008         	call	_SPI_Exchange8bit
  5368                           
  5369                           ;MAX7219.c: 31:   }
  5370   0009BC  EFE6  F004         	goto	l3259
  5371   0009C0                     l3253:
  5372   0009C0                     
  5373                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5374   0009C0  0E00               	movlw	0
  5375   0009C2  EC5B  F008         	call	_SPI_Exchange8bit
  5376   0009C6                     
  5377                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  5378   0009C6  0E00               	movlw	0
  5379   0009C8  EC5B  F008         	call	_SPI_Exchange8bit
  5380   0009CC                     l3259:
  5381                           
  5382                           ;MAX7219.c: 46:  }
  5383   0009CC  4A17               	infsnz	max_write@dev^0,f,c
  5384   0009CE  2A18               	incf	(max_write@dev+1)^0,f,c
  5385   0009D0  BE18               	btfsc	(max_write@dev+1)^0,7,c
  5386   0009D2  EFF4  F004         	goto	u2451
  5387   0009D6  5018               	movf	(max_write@dev+1)^0,w,c
  5388   0009D8  E109               	bnz	u2450
  5389   0009DA  0E04               	movlw	4
  5390   0009DC  5C17               	subwf	max_write@dev^0,w,c
  5391   0009DE  A0D8               	btfss	status,0,c
  5392   0009E0  EFF4  F004         	goto	u2451
  5393   0009E4  EFF6  F004         	goto	u2450
  5394   0009E8                     u2451:
  5395   0009E8  EFBE  F004         	goto	l3245
  5396   0009EC                     u2450:
  5397   0009EC  848B               	bsf	139,2,c	;volatile
  5398   0009EE  0012               	return		;funcret
  5399   0009F0                     __end_of_max_write:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function ___awdiv *****************
  5403 ;; Defined at:
  5404 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  dividend        2    5[COMRAM] int 
  5407 ;;  divisor         2    7[COMRAM] int 
  5408 ;; Auto vars:     Size  Location     Type
  5409 ;;  quotient        2   11[COMRAM] int 
  5410 ;;  sign            1   10[COMRAM] unsigned char 
  5411 ;;  counter         1    9[COMRAM] unsigned char 
  5412 ;; Return value:  Size  Location     Type
  5413 ;;                  2    5[COMRAM] int 
  5414 ;; Registers used:
  5415 ;;		wreg, status,2, status,0
  5416 ;; Tracked objects:
  5417 ;;		On entry : 0/0
  5418 ;;		On exit  : 0/0
  5419 ;;		Unchanged: 0/0
  5420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5421 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5424 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5425 ;;Total ram usage:        8 bytes
  5426 ;; Hardware stack levels used: 1
  5427 ;; Hardware stack levels required when called: 5
  5428 ;; This function calls:
  5429 ;;		Nothing
  5430 ;; This function is called by:
  5431 ;;		_displayTime
  5432 ;;		_displayAlarmTime
  5433 ;;		_max_write
  5434 ;;		_flushBuffer
  5435 ;; This function uses a non-reentrant model
  5436 ;;
  5437                           
  5438                           	psect	text18
  5439   00086C                     __ptext18:
  5440                           	callstack 0
  5441   00086C                     ___awdiv:
  5442                           	callstack 20
  5443   00086C  0E00               	movlw	0
  5444   00086E  6E0B               	movwf	___awdiv@sign^0,c
  5445   000870  BE09               	btfsc	(___awdiv@divisor+1)^0,7,c
  5446   000872  EF3F  F004         	goto	u2380
  5447   000876  EF3D  F004         	goto	u2381
  5448   00087A                     u2381:
  5449   00087A  EF45  F004         	goto	l3195
  5450   00087E                     u2380:
  5451   00087E  6C08               	negf	___awdiv@divisor^0,c
  5452   000880  1E09               	comf	(___awdiv@divisor+1)^0,f,c
  5453   000882  B0D8               	btfsc	status,0,c
  5454   000884  2A09               	incf	(___awdiv@divisor+1)^0,f,c
  5455   000886  0E01               	movlw	1
  5456   000888  6E0B               	movwf	___awdiv@sign^0,c
  5457   00088A                     l3195:
  5458   00088A  BE07               	btfsc	(___awdiv@dividend+1)^0,7,c
  5459   00088C  EF4C  F004         	goto	u2390
  5460   000890  EF4A  F004         	goto	u2391
  5461   000894                     u2391:
  5462   000894  EF52  F004         	goto	l3201
  5463   000898                     u2390:
  5464   000898  6C06               	negf	___awdiv@dividend^0,c
  5465   00089A  1E07               	comf	(___awdiv@dividend+1)^0,f,c
  5466   00089C  B0D8               	btfsc	status,0,c
  5467   00089E  2A07               	incf	(___awdiv@dividend+1)^0,f,c
  5468   0008A0  0E01               	movlw	1
  5469   0008A2  1A0B               	xorwf	___awdiv@sign^0,f,c
  5470   0008A4                     l3201:
  5471   0008A4  0E00               	movlw	0
  5472   0008A6  6E0D               	movwf	(___awdiv@quotient+1)^0,c
  5473   0008A8  0E00               	movlw	0
  5474   0008AA  6E0C               	movwf	___awdiv@quotient^0,c
  5475   0008AC  5008               	movf	___awdiv@divisor^0,w,c
  5476   0008AE  1009               	iorwf	(___awdiv@divisor+1)^0,w,c
  5477   0008B0  B4D8               	btfsc	status,2,c
  5478   0008B2  EF5D  F004         	goto	u2401
  5479   0008B6  EF5F  F004         	goto	u2400
  5480   0008BA                     u2401:
  5481   0008BA  EF87  F004         	goto	l3223
  5482   0008BE                     u2400:
  5483   0008BE  0E01               	movlw	1
  5484   0008C0  6E0A               	movwf	___awdiv@counter^0,c
  5485   0008C2  EF67  F004         	goto	l3209
  5486   0008C6                     l3207:
  5487   0008C6  90D8               	bcf	status,0,c
  5488   0008C8  3608               	rlcf	___awdiv@divisor^0,f,c
  5489   0008CA  3609               	rlcf	(___awdiv@divisor+1)^0,f,c
  5490   0008CC  2A0A               	incf	___awdiv@counter^0,f,c
  5491   0008CE                     l3209:
  5492   0008CE  AE09               	btfss	(___awdiv@divisor+1)^0,7,c
  5493   0008D0  EF6C  F004         	goto	u2411
  5494   0008D4  EF6E  F004         	goto	u2410
  5495   0008D8                     u2411:
  5496   0008D8  EF63  F004         	goto	l3207
  5497   0008DC                     u2410:
  5498   0008DC                     l3211:
  5499   0008DC  90D8               	bcf	status,0,c
  5500   0008DE  360C               	rlcf	___awdiv@quotient^0,f,c
  5501   0008E0  360D               	rlcf	(___awdiv@quotient+1)^0,f,c
  5502   0008E2  5008               	movf	___awdiv@divisor^0,w,c
  5503   0008E4  5C06               	subwf	___awdiv@dividend^0,w,c
  5504   0008E6  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5505   0008E8  5807               	subwfb	(___awdiv@dividend+1)^0,w,c
  5506   0008EA  A0D8               	btfss	status,0,c
  5507   0008EC  EF7A  F004         	goto	u2421
  5508   0008F0  EF7C  F004         	goto	u2420
  5509   0008F4                     u2421:
  5510   0008F4  EF81  F004         	goto	l3219
  5511   0008F8                     u2420:
  5512   0008F8  5008               	movf	___awdiv@divisor^0,w,c
  5513   0008FA  5E06               	subwf	___awdiv@dividend^0,f,c
  5514   0008FC  5009               	movf	(___awdiv@divisor+1)^0,w,c
  5515   0008FE  5A07               	subwfb	(___awdiv@dividend+1)^0,f,c
  5516   000900  800C               	bsf	___awdiv@quotient^0,0,c
  5517   000902                     l3219:
  5518   000902  90D8               	bcf	status,0,c
  5519   000904  3209               	rrcf	(___awdiv@divisor+1)^0,f,c
  5520   000906  3208               	rrcf	___awdiv@divisor^0,f,c
  5521   000908  2E0A               	decfsz	___awdiv@counter^0,f,c
  5522   00090A  EF6E  F004         	goto	l3211
  5523   00090E                     l3223:
  5524   00090E  500B               	movf	___awdiv@sign^0,w,c
  5525   000910  B4D8               	btfsc	status,2,c
  5526   000912  EF8D  F004         	goto	u2431
  5527   000916  EF8F  F004         	goto	u2430
  5528   00091A                     u2431:
  5529   00091A  EF93  F004         	goto	l3227
  5530   00091E                     u2430:
  5531   00091E  6C0C               	negf	___awdiv@quotient^0,c
  5532   000920  1E0D               	comf	(___awdiv@quotient+1)^0,f,c
  5533   000922  B0D8               	btfsc	status,0,c
  5534   000924  2A0D               	incf	(___awdiv@quotient+1)^0,f,c
  5535   000926                     l3227:
  5536   000926  C00C  F006         	movff	___awdiv@quotient,?___awdiv
  5537   00092A  C00D  F007         	movff	___awdiv@quotient+1,?___awdiv+1
  5538   00092E  0012               	return		;funcret
  5539   000930                     __end_of___awdiv:
  5540                           	callstack 0
  5541                           
  5542 ;; *************** function _SPI_Exchange8bit *****************
  5543 ;; Defined at:
  5544 ;;		line 77 in file "mcc_generated_files/spi.c"
  5545 ;; Parameters:    Size  Location     Type
  5546 ;;  data            1    wreg     unsigned char 
  5547 ;; Auto vars:     Size  Location     Type
  5548 ;;  data            1    5[COMRAM] unsigned char 
  5549 ;; Return value:  Size  Location     Type
  5550 ;;                  1    wreg      unsigned char 
  5551 ;; Registers used:
  5552 ;;		wreg, status,2
  5553 ;; Tracked objects:
  5554 ;;		On entry : 0/0
  5555 ;;		On exit  : 0/0
  5556 ;;		Unchanged: 0/0
  5557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5561 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5562 ;;Total ram usage:        1 bytes
  5563 ;; Hardware stack levels used: 1
  5564 ;; Hardware stack levels required when called: 5
  5565 ;; This function calls:
  5566 ;;		Nothing
  5567 ;; This function is called by:
  5568 ;;		_max_write
  5569 ;;		_max7219_cmd
  5570 ;;		_SPI_Exchange8bitBuffer
  5571 ;; This function uses a non-reentrant model
  5572 ;;
  5573                           
  5574                           	psect	text19
  5575   0010B6                     __ptext19:
  5576                           	callstack 0
  5577   0010B6                     _SPI_Exchange8bit:
  5578                           	callstack 20
  5579                           
  5580                           ;incstack = 0
  5581                           ;SPI_Exchange8bit@data stored from wreg
  5582   0010B6  6E06               	movwf	SPI_Exchange8bit@data^0,c
  5583   0010B8                     
  5584                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  5585   0010B8  9EC6               	bcf	198,7,c	;volatile
  5586   0010BA                     
  5587                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  5588   0010BA  C006  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  5589   0010BE                     l18:
  5590                           
  5591                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  5592   0010BE  A0C7               	btfss	199,0,c	;volatile
  5593   0010C0  EF64  F008         	goto	u2371
  5594   0010C4  EF66  F008         	goto	u2370
  5595   0010C8                     u2371:
  5596   0010C8  EF5F  F008         	goto	l18
  5597   0010CC                     u2370:
  5598   0010CC                     
  5599                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  5600   0010CC  50C9               	movf	201,w,c	;volatile
  5601   0010CE  0012               	return		;funcret
  5602   0010D0                     __end_of_SPI_Exchange8bit:
  5603                           	callstack 0
  5604                           
  5605 ;; *************** function ___awmod *****************
  5606 ;; Defined at:
  5607 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5608 ;; Parameters:    Size  Location     Type
  5609 ;;  dividend        2    5[COMRAM] int 
  5610 ;;  divisor         2    7[COMRAM] int 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  sign            1   10[COMRAM] unsigned char 
  5613 ;;  counter         1    9[COMRAM] unsigned char 
  5614 ;; Return value:  Size  Location     Type
  5615 ;;                  2    5[COMRAM] int 
  5616 ;; Registers used:
  5617 ;;		wreg, status,2, status,0
  5618 ;; Tracked objects:
  5619 ;;		On entry : 0/0
  5620 ;;		On exit  : 0/0
  5621 ;;		Unchanged: 0/0
  5622 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5623 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5626 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5627 ;;Total ram usage:        6 bytes
  5628 ;; Hardware stack levels used: 1
  5629 ;; Hardware stack levels required when called: 5
  5630 ;; This function calls:
  5631 ;;		Nothing
  5632 ;; This function is called by:
  5633 ;;		_displayTime
  5634 ;;		_displayAlarmTime
  5635 ;;		_checkButtons
  5636 ;; This function uses a non-reentrant model
  5637 ;;
  5638                           
  5639                           	psect	text20
  5640   000C0E                     __ptext20:
  5641                           	callstack 0
  5642   000C0E                     ___awmod:
  5643                           	callstack 24
  5644   000C0E  0E00               	movlw	0
  5645   000C10  6E0B               	movwf	___awmod@sign^0,c
  5646   000C12  BE07               	btfsc	(___awmod@dividend+1)^0,7,c
  5647   000C14  EF10  F006         	goto	u2700
  5648   000C18  EF0E  F006         	goto	u2701
  5649   000C1C                     u2701:
  5650   000C1C  EF16  F006         	goto	l3465
  5651   000C20                     u2700:
  5652   000C20  6C06               	negf	___awmod@dividend^0,c
  5653   000C22  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5654   000C24  B0D8               	btfsc	status,0,c
  5655   000C26  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5656   000C28  0E01               	movlw	1
  5657   000C2A  6E0B               	movwf	___awmod@sign^0,c
  5658   000C2C                     l3465:
  5659   000C2C  BE09               	btfsc	(___awmod@divisor+1)^0,7,c
  5660   000C2E  EF1D  F006         	goto	u2710
  5661   000C32  EF1B  F006         	goto	u2711
  5662   000C36                     u2711:
  5663   000C36  EF21  F006         	goto	l3469
  5664   000C3A                     u2710:
  5665   000C3A  6C08               	negf	___awmod@divisor^0,c
  5666   000C3C  1E09               	comf	(___awmod@divisor+1)^0,f,c
  5667   000C3E  B0D8               	btfsc	status,0,c
  5668   000C40  2A09               	incf	(___awmod@divisor+1)^0,f,c
  5669   000C42                     l3469:
  5670   000C42  5008               	movf	___awmod@divisor^0,w,c
  5671   000C44  1009               	iorwf	(___awmod@divisor+1)^0,w,c
  5672   000C46  B4D8               	btfsc	status,2,c
  5673   000C48  EF28  F006         	goto	u2721
  5674   000C4C  EF2A  F006         	goto	u2720
  5675   000C50                     u2721:
  5676   000C50  EF4E  F006         	goto	l3485
  5677   000C54                     u2720:
  5678   000C54  0E01               	movlw	1
  5679   000C56  6E0A               	movwf	___awmod@counter^0,c
  5680   000C58  EF32  F006         	goto	l3475
  5681   000C5C                     l3473:
  5682   000C5C  90D8               	bcf	status,0,c
  5683   000C5E  3608               	rlcf	___awmod@divisor^0,f,c
  5684   000C60  3609               	rlcf	(___awmod@divisor+1)^0,f,c
  5685   000C62  2A0A               	incf	___awmod@counter^0,f,c
  5686   000C64                     l3475:
  5687   000C64  AE09               	btfss	(___awmod@divisor+1)^0,7,c
  5688   000C66  EF37  F006         	goto	u2731
  5689   000C6A  EF39  F006         	goto	u2730
  5690   000C6E                     u2731:
  5691   000C6E  EF2E  F006         	goto	l3473
  5692   000C72                     u2730:
  5693   000C72                     l3477:
  5694   000C72  5008               	movf	___awmod@divisor^0,w,c
  5695   000C74  5C06               	subwf	___awmod@dividend^0,w,c
  5696   000C76  5009               	movf	(___awmod@divisor+1)^0,w,c
  5697   000C78  5807               	subwfb	(___awmod@dividend+1)^0,w,c
  5698   000C7A  A0D8               	btfss	status,0,c
  5699   000C7C  EF42  F006         	goto	u2741
  5700   000C80  EF44  F006         	goto	u2740
  5701   000C84                     u2741:
  5702   000C84  EF48  F006         	goto	l3481
  5703   000C88                     u2740:
  5704   000C88  5008               	movf	___awmod@divisor^0,w,c
  5705   000C8A  5E06               	subwf	___awmod@dividend^0,f,c
  5706   000C8C  5009               	movf	(___awmod@divisor+1)^0,w,c
  5707   000C8E  5A07               	subwfb	(___awmod@dividend+1)^0,f,c
  5708   000C90                     l3481:
  5709   000C90  90D8               	bcf	status,0,c
  5710   000C92  3209               	rrcf	(___awmod@divisor+1)^0,f,c
  5711   000C94  3208               	rrcf	___awmod@divisor^0,f,c
  5712   000C96  2E0A               	decfsz	___awmod@counter^0,f,c
  5713   000C98  EF39  F006         	goto	l3477
  5714   000C9C                     l3485:
  5715   000C9C  500B               	movf	___awmod@sign^0,w,c
  5716   000C9E  B4D8               	btfsc	status,2,c
  5717   000CA0  EF54  F006         	goto	u2751
  5718   000CA4  EF56  F006         	goto	u2750
  5719   000CA8                     u2751:
  5720   000CA8  EF5A  F006         	goto	l3489
  5721   000CAC                     u2750:
  5722   000CAC  6C06               	negf	___awmod@dividend^0,c
  5723   000CAE  1E07               	comf	(___awmod@dividend+1)^0,f,c
  5724   000CB0  B0D8               	btfsc	status,0,c
  5725   000CB2  2A07               	incf	(___awmod@dividend+1)^0,f,c
  5726   000CB4                     l3489:
  5727   000CB4  C006  F006         	movff	___awmod@dividend,?___awmod
  5728   000CB8  C007  F007         	movff	___awmod@dividend+1,?___awmod+1
  5729   000CBC  0012               	return		;funcret
  5730   000CBE                     __end_of___awmod:
  5731                           	callstack 0
  5732                           
  5733 ;; *************** function _clearAlarm *****************
  5734 ;; Defined at:
  5735 ;;		line 196 in file "main.c"
  5736 ;; Parameters:    Size  Location     Type
  5737 ;;		None
  5738 ;; Auto vars:     Size  Location     Type
  5739 ;;		None
  5740 ;; Return value:  Size  Location     Type
  5741 ;;                  1    wreg      void 
  5742 ;; Registers used:
  5743 ;;		wreg, status,2
  5744 ;; Tracked objects:
  5745 ;;		On entry : 0/0
  5746 ;;		On exit  : 0/0
  5747 ;;		Unchanged: 0/0
  5748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5753 ;;Total ram usage:        0 bytes
  5754 ;; Hardware stack levels used: 1
  5755 ;; Hardware stack levels required when called: 5
  5756 ;; This function calls:
  5757 ;;		Nothing
  5758 ;; This function is called by:
  5759 ;;		_triggerAlarm
  5760 ;;		_checkButtons
  5761 ;; This function uses a non-reentrant model
  5762 ;;
  5763                           
  5764                           	psect	text21
  5765   001120                     __ptext21:
  5766                           	callstack 0
  5767   001120                     _clearAlarm:
  5768                           	callstack 23
  5769   001120                     
  5770                           ;main.c: 198:     alarmTriggered = 0;
  5771   001120  0E00               	movlw	0
  5772   001122  0100               	movlb	0	; () banked
  5773   001124  6FA5               	movwf	_alarmTriggered& (0+255),b
  5774                           
  5775                           ;main.c: 199:     alarmSet = 0;
  5776   001126  0E00               	movlw	0
  5777   001128  6FA7               	movwf	_alarmSet& (0+255),b
  5778   00112A                     
  5779                           ; BSR set to: 0
  5780   00112A  0012               	return		;funcret
  5781   00112C                     __end_of_clearAlarm:
  5782                           	callstack 0
  5783                           
  5784 ;; *************** function _TMR0_StartTimer *****************
  5785 ;; Defined at:
  5786 ;;		line 94 in file "mcc_generated_files/tmr0.c"
  5787 ;; Parameters:    Size  Location     Type
  5788 ;;		None
  5789 ;; Auto vars:     Size  Location     Type
  5790 ;;		None
  5791 ;; Return value:  Size  Location     Type
  5792 ;;                  1    wreg      void 
  5793 ;; Registers used:
  5794 ;;		None
  5795 ;; Tracked objects:
  5796 ;;		On entry : 0/0
  5797 ;;		On exit  : 0/0
  5798 ;;		Unchanged: 0/0
  5799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5800 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5802 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5803 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5804 ;;Total ram usage:        0 bytes
  5805 ;; Hardware stack levels used: 1
  5806 ;; Hardware stack levels required when called: 5
  5807 ;; This function calls:
  5808 ;;		Nothing
  5809 ;; This function is called by:
  5810 ;;		_main
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           
  5814                           	psect	text22
  5815   00115A                     __ptext22:
  5816                           	callstack 0
  5817   00115A                     _TMR0_StartTimer:
  5818                           	callstack 25
  5819   00115A                     
  5820                           ;mcc_generated_files/tmr0.c: 97:     T0CONbits.TMR0ON = 1;
  5821   00115A  8ED5               	bsf	213,7,c	;volatile
  5822   00115C  0012               	return		;funcret
  5823   00115E                     __end_of_TMR0_StartTimer:
  5824                           	callstack 0
  5825                           
  5826 ;; *************** function _SYSTEM_Initialize *****************
  5827 ;; Defined at:
  5828 ;;		line 108 in file "mcc_generated_files/mcc.c"
  5829 ;; Parameters:    Size  Location     Type
  5830 ;;		None
  5831 ;; Auto vars:     Size  Location     Type
  5832 ;;		None
  5833 ;; Return value:  Size  Location     Type
  5834 ;;                  1    wreg      void 
  5835 ;; Registers used:
  5836 ;;		wreg, status,2, status,0, cstack
  5837 ;; Tracked objects:
  5838 ;;		On entry : 0/0
  5839 ;;		On exit  : 0/0
  5840 ;;		Unchanged: 0/0
  5841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5842 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5845 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5846 ;;Total ram usage:        0 bytes
  5847 ;; Hardware stack levels used: 1
  5848 ;; Hardware stack levels required when called: 7
  5849 ;; This function calls:
  5850 ;;		_EUSART_Initialize
  5851 ;;		_INTERRUPT_Initialize
  5852 ;;		_OSCILLATOR_Initialize
  5853 ;;		_PIN_MANAGER_Initialize
  5854 ;;		_PWM2_Initialize
  5855 ;;		_SPI_Initialize
  5856 ;;		_TMR0_Initialize
  5857 ;;		_TMR2_Initialize
  5858 ;; This function is called by:
  5859 ;;		_main
  5860 ;; This function uses a non-reentrant model
  5861 ;;
  5862                           
  5863                           	psect	text23
  5864   001072                     __ptext23:
  5865                           	callstack 0
  5866   001072                     _SYSTEM_Initialize:
  5867                           	callstack 23
  5868   001072                     
  5869                           ;mcc_generated_files/mcc.c: 110:     INTERRUPT_Initialize();
  5870   001072  ECAF  F008         	call	_INTERRUPT_Initialize	;wreg free
  5871   001076                     
  5872                           ;mcc_generated_files/mcc.c: 111:     PIN_MANAGER_Initialize();
  5873   001076  EC4A  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  5874   00107A                     
  5875                           ;mcc_generated_files/mcc.c: 112:     OSCILLATOR_Initialize();
  5876   00107A  EC9B  F008         	call	_OSCILLATOR_Initialize	;wreg free
  5877   00107E                     
  5878                           ;mcc_generated_files/mcc.c: 113:     SPI_Initialize();
  5879   00107E  EC82  F008         	call	_SPI_Initialize	;wreg free
  5880   001082                     
  5881                           ;mcc_generated_files/mcc.c: 114:     PWM2_Initialize();
  5882   001082  EC89  F008         	call	_PWM2_Initialize	;wreg free
  5883   001086                     
  5884                           ;mcc_generated_files/mcc.c: 115:     TMR2_Initialize();
  5885   001086  EC71  F008         	call	_TMR2_Initialize	;wreg free
  5886   00108A                     
  5887                           ;mcc_generated_files/mcc.c: 116:     TMR0_Initialize();
  5888   00108A  ECD9  F007         	call	_TMR0_Initialize	;wreg free
  5889   00108E                     
  5890                           ;mcc_generated_files/mcc.c: 117:     EUSART_Initialize();
  5891   00108E  EC3F  F007         	call	_EUSART_Initialize	;wreg free
  5892   001092  0012               	return		;funcret
  5893   001094                     __end_of_SYSTEM_Initialize:
  5894                           	callstack 0
  5895                           
  5896 ;; *************** function _TMR2_Initialize *****************
  5897 ;; Defined at:
  5898 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  5899 ;; Parameters:    Size  Location     Type
  5900 ;;		None
  5901 ;; Auto vars:     Size  Location     Type
  5902 ;;		None
  5903 ;; Return value:  Size  Location     Type
  5904 ;;                  1    wreg      void 
  5905 ;; Registers used:
  5906 ;;		wreg, status,2
  5907 ;; Tracked objects:
  5908 ;;		On entry : 0/0
  5909 ;;		On exit  : 0/0
  5910 ;;		Unchanged: 0/0
  5911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5913 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5915 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5916 ;;Total ram usage:        0 bytes
  5917 ;; Hardware stack levels used: 1
  5918 ;; Hardware stack levels required when called: 5
  5919 ;; This function calls:
  5920 ;;		Nothing
  5921 ;; This function is called by:
  5922 ;;		_SYSTEM_Initialize
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           	psect	text24
  5927   0010E2                     __ptext24:
  5928                           	callstack 0
  5929   0010E2                     _TMR2_Initialize:
  5930                           	callstack 24
  5931   0010E2                     
  5932                           ;mcc_generated_files/tmr2.c: 66:     PR2 = 0x7C;
  5933   0010E2  0E7C               	movlw	124
  5934   0010E4  6ECB               	movwf	203,c	;volatile
  5935                           
  5936                           ;mcc_generated_files/tmr2.c: 69:     TMR2 = 0x00;
  5937   0010E6  0E00               	movlw	0
  5938   0010E8  6ECC               	movwf	204,c	;volatile
  5939   0010EA                     
  5940                           ;mcc_generated_files/tmr2.c: 72:     PIR1bits.TMR2IF = 0;
  5941   0010EA  929E               	bcf	158,1,c	;volatile
  5942                           
  5943                           ;mcc_generated_files/tmr2.c: 75:     T2CON = 0x1D;
  5944   0010EC  0E1D               	movlw	29
  5945   0010EE  6ECA               	movwf	202,c	;volatile
  5946   0010F0                     
  5947                           ;mcc_generated_files/tmr2.c: 77:     T2CONbits.TMR2ON = 1;
  5948   0010F0  84CA               	bsf	202,2,c	;volatile
  5949   0010F2  0012               	return		;funcret
  5950   0010F4                     __end_of_TMR2_Initialize:
  5951                           	callstack 0
  5952                           
  5953 ;; *************** function _TMR0_Initialize *****************
  5954 ;; Defined at:
  5955 ;;		line 67 in file "mcc_generated_files/tmr0.c"
  5956 ;; Parameters:    Size  Location     Type
  5957 ;;		None
  5958 ;; Auto vars:     Size  Location     Type
  5959 ;;		None
  5960 ;; Return value:  Size  Location     Type
  5961 ;;                  1    wreg      void 
  5962 ;; Registers used:
  5963 ;;		wreg, status,2, status,0, cstack
  5964 ;; Tracked objects:
  5965 ;;		On entry : 0/0
  5966 ;;		On exit  : 0/0
  5967 ;;		Unchanged: 0/0
  5968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5969 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5971 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5972 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5973 ;;Total ram usage:        2 bytes
  5974 ;; Hardware stack levels used: 1
  5975 ;; Hardware stack levels required when called: 6
  5976 ;; This function calls:
  5977 ;;		_TMR0_SetInterruptHandler
  5978 ;; This function is called by:
  5979 ;;		_SYSTEM_Initialize
  5980 ;; This function uses a non-reentrant model
  5981 ;;
  5982                           
  5983                           	psect	text25
  5984   000FB2                     __ptext25:
  5985                           	callstack 0
  5986   000FB2                     _TMR0_Initialize:
  5987                           	callstack 23
  5988   000FB2                     
  5989                           ;mcc_generated_files/tmr0.c: 72:     TMR0H = 0x0B;
  5990   000FB2  0E0B               	movlw	11
  5991   000FB4  6ED7               	movwf	215,c	;volatile
  5992                           
  5993                           ;mcc_generated_files/tmr0.c: 75:     TMR0L = 0xDB;
  5994   000FB6  0EDB               	movlw	219
  5995   000FB8  6ED6               	movwf	214,c	;volatile
  5996   000FBA                     
  5997                           ;mcc_generated_files/tmr0.c: 79:     timer0ReloadVal = (TMR0H << 8) | TMR0L;
  5998   000FBA  50D6               	movf	214,w,c	;volatile
  5999   000FBC  CFD7 F008          	movff	4055,??_TMR0_Initialize	;volatile
  6000   000FC0  6A09               	clrf	(??_TMR0_Initialize+1)^0,c
  6001   000FC2  C008  F009         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  6002   000FC6  6A08               	clrf	??_TMR0_Initialize^0,c
  6003   000FC8  1008               	iorwf	??_TMR0_Initialize^0,w,c
  6004   000FCA  6E52               	movwf	_timer0ReloadVal^0,c	;volatile
  6005   000FCC  5009               	movf	(??_TMR0_Initialize+1)^0,w,c
  6006   000FCE  6E53               	movwf	(_timer0ReloadVal+1)^0,c	;volatile
  6007   000FD0                     
  6008                           ;mcc_generated_files/tmr0.c: 82:     INTCONbits.TMR0IF = 0;
  6009   000FD0  94F2               	bcf	242,2,c	;volatile
  6010   000FD2                     
  6011                           ;mcc_generated_files/tmr0.c: 85:     INTCONbits.TMR0IE = 1;
  6012   000FD2  8AF2               	bsf	242,5,c	;volatile
  6013   000FD4                     
  6014                           ;mcc_generated_files/tmr0.c: 88:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  6015   000FD4  0E54               	movlw	low _TMR0_DefaultInterruptHandler
  6016   000FD6  6E06               	movwf	TMR0_SetInterruptHandler@InterruptHandler^0,c
  6017   000FD8  0E11               	movlw	high _TMR0_DefaultInterruptHandler
  6018   000FDA  6E07               	movwf	(TMR0_SetInterruptHandler@InterruptHandler+1)^0,c
  6019   000FDC  EC96  F008         	call	_TMR0_SetInterruptHandler	;wreg free
  6020   000FE0                     
  6021                           ;mcc_generated_files/tmr0.c: 91:     T0CON = 0x94;
  6022   000FE0  0E94               	movlw	148
  6023   000FE2  6ED5               	movwf	213,c	;volatile
  6024   000FE4  0012               	return		;funcret
  6025   000FE6                     __end_of_TMR0_Initialize:
  6026                           	callstack 0
  6027                           
  6028 ;; *************** function _TMR0_SetInterruptHandler *****************
  6029 ;; Defined at:
  6030 ;;		line 161 in file "mcc_generated_files/tmr0.c"
  6031 ;; Parameters:    Size  Location     Type
  6032 ;;  InterruptHan    2    5[COMRAM] PTR FTN()void 
  6033 ;;		 -> TMR0_DefaultInterruptHandler(1), 
  6034 ;; Auto vars:     Size  Location     Type
  6035 ;;		None
  6036 ;; Return value:  Size  Location     Type
  6037 ;;                  1    wreg      void 
  6038 ;; Registers used:
  6039 ;;		wreg, status,2, status,0
  6040 ;; Tracked objects:
  6041 ;;		On entry : 0/0
  6042 ;;		On exit  : 0/0
  6043 ;;		Unchanged: 0/0
  6044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6045 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6046 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6047 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6048 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6049 ;;Total ram usage:        2 bytes
  6050 ;; Hardware stack levels used: 1
  6051 ;; Hardware stack levels required when called: 5
  6052 ;; This function calls:
  6053 ;;		Nothing
  6054 ;; This function is called by:
  6055 ;;		_TMR0_Initialize
  6056 ;; This function uses a non-reentrant model
  6057 ;;
  6058                           
  6059                           	psect	text26
  6060   00112C                     __ptext26:
  6061                           	callstack 0
  6062   00112C                     _TMR0_SetInterruptHandler:
  6063                           	callstack 23
  6064   00112C                     
  6065                           ;mcc_generated_files/tmr0.c: 162:     TMR0_InterruptHandler = InterruptHandler;
  6066   00112C  C006  F0F6         	movff	TMR0_SetInterruptHandler@InterruptHandler,_TMR0_InterruptHandler
  6067   001130  C007  F0F7         	movff	TMR0_SetInterruptHandler@InterruptHandler+1,_TMR0_InterruptHandler+1
  6068   001134  0012               	return		;funcret
  6069   001136                     __end_of_TMR0_SetInterruptHandler:
  6070                           	callstack 0
  6071                           
  6072 ;; *************** function _SPI_Initialize *****************
  6073 ;; Defined at:
  6074 ;;		line 63 in file "mcc_generated_files/spi.c"
  6075 ;; Parameters:    Size  Location     Type
  6076 ;;		None
  6077 ;; Auto vars:     Size  Location     Type
  6078 ;;		None
  6079 ;; Return value:  Size  Location     Type
  6080 ;;                  1    wreg      void 
  6081 ;; Registers used:
  6082 ;;		wreg, status,2
  6083 ;; Tracked objects:
  6084 ;;		On entry : 0/0
  6085 ;;		On exit  : 0/0
  6086 ;;		Unchanged: 0/0
  6087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6088 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6090 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6091 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6092 ;;Total ram usage:        0 bytes
  6093 ;; Hardware stack levels used: 1
  6094 ;; Hardware stack levels required when called: 5
  6095 ;; This function calls:
  6096 ;;		Nothing
  6097 ;; This function is called by:
  6098 ;;		_SYSTEM_Initialize
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text27
  6103   001104                     __ptext27:
  6104                           	callstack 0
  6105   001104                     _SPI_Initialize:
  6106                           	callstack 24
  6107   001104                     
  6108                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  6109   001104  0EC0               	movlw	192
  6110   001106  6EC7               	movwf	199,c	;volatile
  6111                           
  6112                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  6113   001108  0E30               	movlw	48
  6114   00110A  6EC6               	movwf	198,c	;volatile
  6115                           
  6116                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  6117   00110C  0E00               	movlw	0
  6118   00110E  6EC8               	movwf	200,c	;volatile
  6119   001110  0012               	return		;funcret
  6120   001112                     __end_of_SPI_Initialize:
  6121                           	callstack 0
  6122                           
  6123 ;; *************** function _PWM2_Initialize *****************
  6124 ;; Defined at:
  6125 ;;		line 65 in file "mcc_generated_files/pwm2.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;		None
  6128 ;; Auto vars:     Size  Location     Type
  6129 ;;		None
  6130 ;; Return value:  Size  Location     Type
  6131 ;;                  1    wreg      void 
  6132 ;; Registers used:
  6133 ;;		wreg, status,2, status,0
  6134 ;; Tracked objects:
  6135 ;;		On entry : 0/0
  6136 ;;		On exit  : 0/0
  6137 ;;		Unchanged: 0/0
  6138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6142 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6143 ;;Total ram usage:        0 bytes
  6144 ;; Hardware stack levels used: 1
  6145 ;; Hardware stack levels required when called: 5
  6146 ;; This function calls:
  6147 ;;		Nothing
  6148 ;; This function is called by:
  6149 ;;		_SYSTEM_Initialize
  6150 ;; This function uses a non-reentrant model
  6151 ;;
  6152                           
  6153                           	psect	text28
  6154   001112                     __ptext28:
  6155                           	callstack 0
  6156   001112                     _PWM2_Initialize:
  6157                           	callstack 24
  6158   001112                     
  6159                           ;mcc_generated_files/pwm2.c: 69:     CCP2CON = 0x1C;
  6160   001112  0E1C               	movlw	28
  6161   001114  6EBA               	movwf	186,c	;volatile
  6162                           
  6163                           ;mcc_generated_files/pwm2.c: 72:     CCPR2L = 0x00;
  6164   001116  0E00               	movlw	0
  6165   001118  6EBB               	movwf	187,c	;volatile
  6166   00111A                     
  6167                           ;mcc_generated_files/pwm2.c: 73:     CCP2CON &= 0xCF;
  6168   00111A  0ECF               	movlw	207
  6169   00111C  16BA               	andwf	186,f,c	;volatile
  6170   00111E  0012               	return		;funcret
  6171   001120                     __end_of_PWM2_Initialize:
  6172                           	callstack 0
  6173                           
  6174 ;; *************** function _PIN_MANAGER_Initialize *****************
  6175 ;; Defined at:
  6176 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;		None
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;		None
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg, status,2
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6190 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6192 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6193 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6194 ;;Total ram usage:        0 bytes
  6195 ;; Hardware stack levels used: 1
  6196 ;; Hardware stack levels required when called: 5
  6197 ;; This function calls:
  6198 ;;		Nothing
  6199 ;; This function is called by:
  6200 ;;		_SYSTEM_Initialize
  6201 ;; This function uses a non-reentrant model
  6202 ;;
  6203                           
  6204                           	psect	text29
  6205   001094                     __ptext29:
  6206                           	callstack 0
  6207   001094                     _PIN_MANAGER_Initialize:
  6208                           	callstack 24
  6209   001094                     
  6210                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  6211   001094  0E00               	movlw	0
  6212   001096  6E89               	movwf	137,c	;volatile
  6213                           
  6214                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  6215   001098  0E00               	movlw	0
  6216   00109A  6E8A               	movwf	138,c	;volatile
  6217                           
  6218                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  6219   00109C  0E2C               	movlw	44
  6220   00109E  6E8B               	movwf	139,c	;volatile
  6221   0010A0                     
  6222                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  6223   0010A0  6892               	setf	146,c	;volatile
  6224   0010A2                     
  6225                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  6226   0010A2  6893               	setf	147,c	;volatile
  6227                           
  6228                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x91;
  6229   0010A4  0E91               	movlw	145
  6230   0010A6  6E94               	movwf	148,c	;volatile
  6231                           
  6232                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  6233   0010A8  0E0A               	movlw	10
  6234   0010AA  6E7F               	movwf	127,c	;volatile
  6235                           
  6236                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  6237   0010AC  0E1F               	movlw	31
  6238   0010AE  6E7E               	movwf	126,c	;volatile
  6239   0010B0                     
  6240                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  6241   0010B0  687C               	setf	124,c	;volatile
  6242   0010B2                     
  6243                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  6244   0010B2  9EF1               	bcf	241,7,c	;volatile
  6245   0010B4  0012               	return		;funcret
  6246   0010B6                     __end_of_PIN_MANAGER_Initialize:
  6247                           	callstack 0
  6248                           
  6249 ;; *************** function _OSCILLATOR_Initialize *****************
  6250 ;; Defined at:
  6251 ;;		line 120 in file "mcc_generated_files/mcc.c"
  6252 ;; Parameters:    Size  Location     Type
  6253 ;;		None
  6254 ;; Auto vars:     Size  Location     Type
  6255 ;;		None
  6256 ;; Return value:  Size  Location     Type
  6257 ;;                  1    wreg      void 
  6258 ;; Registers used:
  6259 ;;		wreg, status,2
  6260 ;; Tracked objects:
  6261 ;;		On entry : 0/0
  6262 ;;		On exit  : 0/0
  6263 ;;		Unchanged: 0/0
  6264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6269 ;;Total ram usage:        0 bytes
  6270 ;; Hardware stack levels used: 1
  6271 ;; Hardware stack levels required when called: 5
  6272 ;; This function calls:
  6273 ;;		Nothing
  6274 ;; This function is called by:
  6275 ;;		_SYSTEM_Initialize
  6276 ;; This function uses a non-reentrant model
  6277 ;;
  6278                           
  6279                           	psect	text30
  6280   001136                     __ptext30:
  6281                           	callstack 0
  6282   001136                     _OSCILLATOR_Initialize:
  6283                           	callstack 24
  6284   001136                     
  6285                           ;mcc_generated_files/mcc.c: 123:     OSCCON = 0x62;
  6286   001136  0E62               	movlw	98
  6287   001138  6ED3               	movwf	211,c	;volatile
  6288                           
  6289                           ;mcc_generated_files/mcc.c: 125:     OSCTUNE = 0xC4;
  6290   00113A  0EC4               	movlw	196
  6291   00113C  6E9B               	movwf	155,c	;volatile
  6292   00113E  0012               	return		;funcret
  6293   001140                     __end_of_OSCILLATOR_Initialize:
  6294                           	callstack 0
  6295                           
  6296 ;; *************** function _INTERRUPT_Initialize *****************
  6297 ;; Defined at:
  6298 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;		None
  6301 ;; Auto vars:     Size  Location     Type
  6302 ;;		None
  6303 ;; Return value:  Size  Location     Type
  6304 ;;                  1    wreg      void 
  6305 ;; Registers used:
  6306 ;;		None
  6307 ;; Tracked objects:
  6308 ;;		On entry : 0/0
  6309 ;;		On exit  : 0/0
  6310 ;;		Unchanged: 0/0
  6311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;Total ram usage:        0 bytes
  6317 ;; Hardware stack levels used: 1
  6318 ;; Hardware stack levels required when called: 5
  6319 ;; This function calls:
  6320 ;;		Nothing
  6321 ;; This function is called by:
  6322 ;;		_SYSTEM_Initialize
  6323 ;; This function uses a non-reentrant model
  6324 ;;
  6325                           
  6326                           	psect	text31
  6327   00115E                     __ptext31:
  6328                           	callstack 0
  6329   00115E                     _INTERRUPT_Initialize:
  6330                           	callstack 24
  6331   00115E                     
  6332                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6333   00115E  9ED0               	bcf	208,7,c	;volatile
  6334   001160  0012               	return		;funcret
  6335   001162                     __end_of_INTERRUPT_Initialize:
  6336                           	callstack 0
  6337                           
  6338 ;; *************** function _EUSART_Initialize *****************
  6339 ;; Defined at:
  6340 ;;		line 75 in file "mcc_generated_files/eusart.c"
  6341 ;; Parameters:    Size  Location     Type
  6342 ;;		None
  6343 ;; Auto vars:     Size  Location     Type
  6344 ;;		None
  6345 ;; Return value:  Size  Location     Type
  6346 ;;                  1    wreg      void 
  6347 ;; Registers used:
  6348 ;;		wreg, status,2, status,0, cstack
  6349 ;; Tracked objects:
  6350 ;;		On entry : 0/0
  6351 ;;		On exit  : 0/0
  6352 ;;		Unchanged: 0/0
  6353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6354 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6355 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6356 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6357 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6358 ;;Total ram usage:        0 bytes
  6359 ;; Hardware stack levels used: 1
  6360 ;; Hardware stack levels required when called: 6
  6361 ;; This function calls:
  6362 ;;		_EUSART_SetRxInterruptHandler
  6363 ;;		_EUSART_SetTxInterruptHandler
  6364 ;; This function is called by:
  6365 ;;		_SYSTEM_Initialize
  6366 ;; This function uses a non-reentrant model
  6367 ;;
  6368                           
  6369                           	psect	text32
  6370   000E7E                     __ptext32:
  6371                           	callstack 0
  6372   000E7E                     _EUSART_Initialize:
  6373                           	callstack 23
  6374   000E7E                     
  6375                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RC1IE = 0;
  6376   000E7E  9A9D               	bcf	157,5,c	;volatile
  6377                           
  6378                           ;mcc_generated_files/eusart.c: 79:     PIE1bits.TX1IE = 0;
  6379   000E80  989D               	bcf	157,4,c	;volatile
  6380   000E82                     
  6381                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6382   000E82  0E00               	movlw	0
  6383   000E84  6E06               	movwf	EUSART_SetTxInterruptHandler@handler^0,c
  6384   000E86  0E00               	movlw	0
  6385   000E88  6E07               	movwf	(EUSART_SetTxInterruptHandler@handler+1)^0,c
  6386   000E8A  ECA0  F008         	call	_EUSART_SetTxInterruptHandler	;wreg free
  6387                           
  6388                           ;mcc_generated_files/eusart.c: 82:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6389   000E8E  0E00               	movlw	0
  6390   000E90  6E06               	movwf	EUSART_SetRxInterruptHandler@handler^0,c
  6391   000E92  0E00               	movlw	0
  6392   000E94  6E07               	movwf	(EUSART_SetRxInterruptHandler@handler+1)^0,c
  6393   000E96  ECA5  F008         	call	_EUSART_SetRxInterruptHandler	;wreg free
  6394   000E9A                     
  6395                           ;mcc_generated_files/eusart.c: 87:     BAUDCON = 0x08;
  6396   000E9A  0E08               	movlw	8
  6397   000E9C  6EB8               	movwf	184,c	;volatile
  6398   000E9E                     
  6399                           ;mcc_generated_files/eusart.c: 90:     RCSTA = 0x90;
  6400   000E9E  0E90               	movlw	144
  6401   000EA0  6EAB               	movwf	171,c	;volatile
  6402   000EA2                     
  6403                           ;mcc_generated_files/eusart.c: 93:     TXSTA = 0x24;
  6404   000EA2  0E24               	movlw	36
  6405   000EA4  6EAC               	movwf	172,c	;volatile
  6406   000EA6                     
  6407                           ;mcc_generated_files/eusart.c: 96:     SPBRG = 0xCF;
  6408   000EA6  0ECF               	movlw	207
  6409   000EA8  6EAF               	movwf	175,c	;volatile
  6410   000EAA                     
  6411                           ;mcc_generated_files/eusart.c: 99:     SPBRGH = 0x00;
  6412   000EAA  0E00               	movlw	0
  6413   000EAC  6EB0               	movwf	176,c	;volatile
  6414   000EAE                     
  6415                           ;mcc_generated_files/eusart.c: 103:     eusartTxHead = 0;
  6416   000EAE  0E00               	movlw	0
  6417   000EB0  6E58               	movwf	_eusartTxHead^0,c	;volatile
  6418   000EB2                     
  6419                           ;mcc_generated_files/eusart.c: 104:     eusartTxTail = 0;
  6420   000EB2  0E00               	movlw	0
  6421   000EB4  6E57               	movwf	_eusartTxTail^0,c	;volatile
  6422   000EB6                     
  6423                           ;mcc_generated_files/eusart.c: 105:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6424   000EB6  0E08               	movlw	8
  6425   000EB8  6E56               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  6426   000EBA                     
  6427                           ;mcc_generated_files/eusart.c: 107:     eusartRxHead = 0;
  6428   000EBA  0E00               	movlw	0
  6429   000EBC  6E55               	movwf	_eusartRxHead^0,c	;volatile
  6430   000EBE                     
  6431                           ;mcc_generated_files/eusart.c: 108:     eusartRxTail = 0;
  6432   000EBE  0E00               	movlw	0
  6433   000EC0  0100               	movlb	0	; () banked
  6434   000EC2  6FAE               	movwf	_eusartRxTail& (0+255),b	;volatile
  6435   000EC4                     
  6436                           ; BSR set to: 0
  6437                           ;mcc_generated_files/eusart.c: 109:     eusartRxCount = 0;
  6438   000EC4  0E00               	movlw	0
  6439   000EC6  6FAD               	movwf	_eusartRxCount& (0+255),b	;volatile
  6440   000EC8                     
  6441                           ; BSR set to: 0
  6442                           ;mcc_generated_files/eusart.c: 112:     PIE1bits.RC1IE = 1;
  6443   000EC8  8A9D               	bsf	157,5,c	;volatile
  6444   000ECA                     
  6445                           ; BSR set to: 0
  6446   000ECA  0012               	return		;funcret
  6447   000ECC                     __end_of_EUSART_Initialize:
  6448                           	callstack 0
  6449                           
  6450 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6451 ;; Defined at:
  6452 ;;		line 212 in file "mcc_generated_files/eusart.c"
  6453 ;; Parameters:    Size  Location     Type
  6454 ;;  handler         2    5[COMRAM] PTR void 
  6455 ;; Auto vars:     Size  Location     Type
  6456 ;;		None
  6457 ;; Return value:  Size  Location     Type
  6458 ;;                  1    wreg      void 
  6459 ;; Registers used:
  6460 ;;		wreg, status,2, status,0
  6461 ;; Tracked objects:
  6462 ;;		On entry : 0/0
  6463 ;;		On exit  : 0/0
  6464 ;;		Unchanged: 0/0
  6465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6470 ;;Total ram usage:        2 bytes
  6471 ;; Hardware stack levels used: 1
  6472 ;; Hardware stack levels required when called: 5
  6473 ;; This function calls:
  6474 ;;		Nothing
  6475 ;; This function is called by:
  6476 ;;		_EUSART_Initialize
  6477 ;; This function uses a non-reentrant model
  6478 ;;
  6479                           
  6480                           	psect	text33
  6481   001140                     __ptext33:
  6482                           	callstack 0
  6483   001140                     _EUSART_SetTxInterruptHandler:
  6484                           	callstack 23
  6485   001140                     
  6486                           ;mcc_generated_files/eusart.c: 213:     EUSART_TxDefaultInterruptHandler = handler;
  6487   001140  C006  F0FA         	movff	EUSART_SetTxInterruptHandler@handler,_EUSART_TxDefaultInterruptHandler
  6488   001144  C007  F0FB         	movff	EUSART_SetTxInterruptHandler@handler+1,_EUSART_TxDefaultInterruptHandler+1
  6489   001148  0012               	return		;funcret
  6490   00114A                     __end_of_EUSART_SetTxInterruptHandler:
  6491                           	callstack 0
  6492                           
  6493 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6494 ;; Defined at:
  6495 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  handler         2    5[COMRAM] PTR void 
  6498 ;; Auto vars:     Size  Location     Type
  6499 ;;		None
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  1    wreg      void 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6509 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6512 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6513 ;;Total ram usage:        2 bytes
  6514 ;; Hardware stack levels used: 1
  6515 ;; Hardware stack levels required when called: 5
  6516 ;; This function calls:
  6517 ;;		Nothing
  6518 ;; This function is called by:
  6519 ;;		_EUSART_Initialize
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text34
  6524   00114A                     __ptext34:
  6525                           	callstack 0
  6526   00114A                     _EUSART_SetRxInterruptHandler:
  6527                           	callstack 23
  6528   00114A                     
  6529                           ;mcc_generated_files/eusart.c: 217:     EUSART_RxDefaultInterruptHandler = handler;
  6530   00114A  C006  F0F8         	movff	EUSART_SetRxInterruptHandler@handler,_EUSART_RxDefaultInterruptHandler
  6531   00114E  C007  F0F9         	movff	EUSART_SetRxInterruptHandler@handler+1,_EUSART_RxDefaultInterruptHandler+1
  6532   001152  0012               	return		;funcret
  6533   001154                     __end_of_EUSART_SetRxInterruptHandler:
  6534                           	callstack 0
  6535                           
  6536 ;; *************** function _INTERRUPT_InterruptManager *****************
  6537 ;; Defined at:
  6538 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6539 ;; Parameters:    Size  Location     Type
  6540 ;;		None
  6541 ;; Auto vars:     Size  Location     Type
  6542 ;;		None
  6543 ;; Return value:  Size  Location     Type
  6544 ;;                  1    wreg      void 
  6545 ;; Registers used:
  6546 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6547 ;; Tracked objects:
  6548 ;;		On entry : 0/0
  6549 ;;		On exit  : 0/0
  6550 ;;		Unchanged: 0/0
  6551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6552 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6555 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6556 ;;Total ram usage:        4 bytes
  6557 ;; Hardware stack levels used: 1
  6558 ;; Hardware stack levels required when called: 4
  6559 ;; This function calls:
  6560 ;;		_TMR0_ISR
  6561 ;;		_btGetData
  6562 ;; This function is called by:
  6563 ;;		Interrupt level 2
  6564 ;; This function uses a non-reentrant model
  6565 ;;
  6566                           
  6567                           	psect	intcode
  6568   000008                     __pintcode:
  6569                           	callstack 0
  6570   000008                     _INTERRUPT_InterruptManager:
  6571                           	callstack 20
  6572                           
  6573                           ;incstack = 0
  6574   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6575   00000A  CFFA F002          	movff	pclath,??_INTERRUPT_InterruptManager
  6576   00000E  CFFB F003          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6577   000012  CFD9 F004          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6578   000016  CFDA F005          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6579   00001A                     
  6580                           ;mcc_generated_files/interrupt_manager.c: 73:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6581   00001A  AAF2               	btfss	242,5,c	;volatile
  6582   00001C  EF12  F000         	goto	i2u224_41
  6583   000020  EF14  F000         	goto	i2u224_40
  6584   000024                     i2u224_41:
  6585   000024  EF1F  F000         	goto	i2l384
  6586   000028                     i2u224_40:
  6587   000028  A4F2               	btfss	242,2,c	;volatile
  6588   00002A  EF19  F000         	goto	i2u225_41
  6589   00002E  EF1B  F000         	goto	i2u225_40
  6590   000032                     i2u225_41:
  6591   000032  EF1F  F000         	goto	i2l384
  6592   000036                     i2u225_40:
  6593   000036                     
  6594                           ;mcc_generated_files/interrupt_manager.c: 74:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 75:         TMR0_ISR();
  6595   000036  EC7A  F008         	call	_TMR0_ISR	;wreg free
  6596                           
  6597                           ;mcc_generated_files/interrupt_manager.c: 76:     }
  6598   00003A  EF42  F000         	goto	i2l389
  6599   00003E                     i2l384:
  6600   00003E  A89D               	btfss	157,4,c	;volatile
  6601   000040  EF24  F000         	goto	i2u226_41
  6602   000044  EF26  F000         	goto	i2u226_40
  6603   000048                     i2u226_41:
  6604   000048  EF30  F000         	goto	i2l386
  6605   00004C                     i2u226_40:
  6606   00004C                     
  6607                           ;mcc_generated_files/interrupt_manager.c: 79:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 81:         EUSART_TxDefaultInterruptHandler();
  6608   00004C  A89E               	btfss	158,4,c	;volatile
  6609   00004E  EF2B  F000         	goto	i2u227_41
  6610   000052  EF2D  F000         	goto	i2u227_40
  6611   000056                     i2u227_41:
  6612   000056  EF30  F000         	goto	i2l386
  6613   00005A                     i2u227_40:
  6614   00005A                     
  6615                           ;mcc_generated_files/interrupt_manager.c: 84:         PIR1bits.TX1IF = 0;
  6616   00005A  989E               	bcf	158,4,c	;volatile
  6617                           
  6618                           ;mcc_generated_files/interrupt_manager.c: 85:     }
  6619   00005C  EF42  F000         	goto	i2l389
  6620   000060                     i2l386:
  6621   000060  AA9D               	btfss	157,5,c	;volatile
  6622   000062  EF35  F000         	goto	i2u228_41
  6623   000066  EF37  F000         	goto	i2u228_40
  6624   00006A                     i2u228_41:
  6625   00006A  EF42  F000         	goto	i2l389
  6626   00006E                     i2u228_40:
  6627   00006E  AA9E               	btfss	158,5,c	;volatile
  6628   000070  EF3C  F000         	goto	i2u229_41
  6629   000074  EF3E  F000         	goto	i2u229_40
  6630   000078                     i2u229_41:
  6631   000078  EF42  F000         	goto	i2l389
  6632   00007C                     i2u229_40:
  6633   00007C                     
  6634                           ;mcc_generated_files/interrupt_manager.c: 89:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 91:         btGetData(RCREG);
  6635   00007C  50AE               	movf	174,w,c	;volatile
  6636   00007E  EC5F  F006         	call	_btGetData
  6637   000082                     
  6638                           ;mcc_generated_files/interrupt_manager.c: 94:         PIR1bits.RC1IF = 0;
  6639   000082  9A9E               	bcf	158,5,c	;volatile
  6640   000084                     i2l389:
  6641   000084  C005  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6642   000088  C004  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6643   00008C  C003  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6644   000090  C002  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6645   000094  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6646   000096  0011               	retfie		f
  6647   000098                     __end_of_INTERRUPT_InterruptManager:
  6648                           	callstack 0
  6649                           
  6650 ;; *************** function _btGetData *****************
  6651 ;; Defined at:
  6652 ;;		line 343 in file "main.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  rcv             1    wreg     unsigned char 
  6655 ;; Auto vars:     Size  Location     Type
  6656 ;;  rcv             1    0[COMRAM] unsigned char 
  6657 ;; Return value:  Size  Location     Type
  6658 ;;                  1    wreg      void 
  6659 ;; Registers used:
  6660 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6661 ;; Tracked objects:
  6662 ;;		On entry : 0/0
  6663 ;;		On exit  : 0/0
  6664 ;;		Unchanged: 0/0
  6665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6667 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6669 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;Total ram usage:        1 bytes
  6671 ;; Hardware stack levels used: 1
  6672 ;; This function calls:
  6673 ;;		Nothing
  6674 ;; This function is called by:
  6675 ;;		_INTERRUPT_InterruptManager
  6676 ;; This function uses a non-reentrant model
  6677 ;;
  6678                           
  6679                           	psect	text36
  6680   000CBE                     __ptext36:
  6681                           	callstack 0
  6682   000CBE                     _btGetData:
  6683                           	callstack 23
  6684                           
  6685                           ;incstack = 0
  6686                           ;btGetData@rcv stored from wreg
  6687   000CBE  6E01               	movwf	btGetData@rcv^0,c
  6688   000CC0                     
  6689                           ;main.c: 344:     if(rcv == 'H' && uartBufferIndex == 0) {
  6690   000CC0  0E48               	movlw	72
  6691   000CC2  1801               	xorwf	btGetData@rcv^0,w,c
  6692   000CC4  A4D8               	btfss	status,2,c
  6693   000CC6  EF67  F006         	goto	i2u174_41
  6694   000CCA  EF69  F006         	goto	i2u174_40
  6695   000CCE                     i2u174_41:
  6696   000CCE  EF7A  F006         	goto	i2l2841
  6697   000CD2                     i2u174_40:
  6698   000CD2  5054               	movf	_uartBufferIndex^0,w,c
  6699   000CD4  A4D8               	btfss	status,2,c
  6700   000CD6  EF6F  F006         	goto	i2u175_41
  6701   000CDA  EF71  F006         	goto	i2u175_40
  6702   000CDE                     i2u175_41:
  6703   000CDE  EF7A  F006         	goto	i2l2841
  6704   000CE2                     i2u175_40:
  6705   000CE2                     
  6706                           ;main.c: 345:         uartBuffer[uartBufferIndex] = 'H';
  6707   000CE2  5054               	movf	_uartBufferIndex^0,w,c
  6708   000CE4  0F80               	addlw	low _uartBuffer
  6709   000CE6  6ED9               	movwf	fsr2l,c
  6710   000CE8  6ADA               	clrf	fsr2h,c
  6711   000CEA  0E48               	movlw	72
  6712   000CEC  6EDF               	movwf	indf2,c
  6713   000CEE                     i2l2839:
  6714                           
  6715                           ;main.c: 346:         uartBufferIndex++;
  6716   000CEE  2A54               	incf	_uartBufferIndex^0,f,c
  6717                           
  6718                           ;main.c: 347:     }
  6719   000CF0  EFAD  F006         	goto	i2l553
  6720   000CF4                     i2l2841:
  6721   000CF4  5054               	movf	_uartBufferIndex^0,w,c
  6722   000CF6  B4D8               	btfsc	status,2,c
  6723   000CF8  EF80  F006         	goto	i2u176_41
  6724   000CFC  EF82  F006         	goto	i2u176_40
  6725   000D00                     i2u176_41:
  6726   000D00  EF92  F006         	goto	i2l2849
  6727   000D04                     i2u176_40:
  6728   000D04  0E07               	movlw	7
  6729   000D06  6054               	cpfslt	_uartBufferIndex^0,c
  6730   000D08  EF88  F006         	goto	i2u177_41
  6731   000D0C  EF8A  F006         	goto	i2u177_40
  6732   000D10                     i2u177_41:
  6733   000D10  EF92  F006         	goto	i2l2849
  6734   000D14                     i2u177_40:
  6735   000D14                     
  6736                           ;main.c: 349:         uartBuffer[uartBufferIndex++] = rcv;
  6737   000D14  5054               	movf	_uartBufferIndex^0,w,c
  6738   000D16  0F80               	addlw	low _uartBuffer
  6739   000D18  6ED9               	movwf	fsr2l,c
  6740   000D1A  6ADA               	clrf	fsr2h,c
  6741   000D1C  C001  FFDF         	movff	btGetData@rcv,indf2
  6742   000D20  EF77  F006         	goto	i2l2839
  6743   000D24                     i2l2849:
  6744   000D24  0E07               	movlw	7
  6745   000D26  1854               	xorwf	_uartBufferIndex^0,w,c
  6746   000D28  A4D8               	btfss	status,2,c
  6747   000D2A  EF99  F006         	goto	i2u178_41
  6748   000D2E  EF9B  F006         	goto	i2u178_40
  6749   000D32                     i2u178_41:
  6750   000D32  EFAD  F006         	goto	i2l553
  6751   000D36                     i2u178_40:
  6752   000D36                     
  6753                           ;main.c: 352:         if(rcv == ';') {
  6754   000D36  0E3B               	movlw	59
  6755   000D38  1801               	xorwf	btGetData@rcv^0,w,c
  6756   000D3A  A4D8               	btfss	status,2,c
  6757   000D3C  EFA2  F006         	goto	i2u179_41
  6758   000D40  EFA4  F006         	goto	i2u179_40
  6759   000D44                     i2u179_41:
  6760   000D44  EFAD  F006         	goto	i2l550
  6761   000D48                     i2u179_40:
  6762   000D48                     
  6763                           ;main.c: 353:             uartBuffer[6] = ';';
  6764   000D48  0E3B               	movlw	59
  6765   000D4A  0100               	movlb	0	; () banked
  6766   000D4C  6F86               	movwf	(_uartBuffer+6)& (0+255),b
  6767                           
  6768                           ;main.c: 354:             uartBufferIndex = 0;
  6769   000D4E  0E00               	movlw	0
  6770   000D50  6E54               	movwf	_uartBufferIndex^0,c
  6771                           
  6772                           ;main.c: 355:             btTimeSet = 1;
  6773   000D52  0E01               	movlw	1
  6774   000D54  6FA2               	movwf	_btTimeSet& (0+255),b
  6775   000D56  EFAD  F006         	goto	i2l553
  6776   000D5A                     i2l550:
  6777   000D5A                     i2l553:
  6778   000D5A  0012               	return		;funcret
  6779   000D5C                     __end_of_btGetData:
  6780                           	callstack 0
  6781                           
  6782 ;; *************** function _TMR0_ISR *****************
  6783 ;; Defined at:
  6784 ;;		line 133 in file "mcc_generated_files/tmr0.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;		None
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;		None
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6802 ;;Total ram usage:        0 bytes
  6803 ;; Hardware stack levels used: 1
  6804 ;; Hardware stack levels required when called: 3
  6805 ;; This function calls:
  6806 ;;		_TMR0_CallBack
  6807 ;; This function is called by:
  6808 ;;		_INTERRUPT_InterruptManager
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text37
  6813   0010F4                     __ptext37:
  6814                           	callstack 0
  6815   0010F4                     _TMR0_ISR:
  6816                           	callstack 20
  6817   0010F4                     
  6818                           ;mcc_generated_files/tmr0.c: 137:     INTCONbits.TMR0IF = 0;
  6819   0010F4  94F2               	bcf	242,2,c	;volatile
  6820   0010F6                     
  6821                           ;mcc_generated_files/tmr0.c: 141:     TMR0H = timer0ReloadVal >> 8;
  6822   0010F6  5053               	movf	(_timer0ReloadVal+1)^0,w,c	;volatile
  6823   0010F8  6ED7               	movwf	215,c	;volatile
  6824   0010FA                     
  6825                           ;mcc_generated_files/tmr0.c: 142:     TMR0L = (uint8_t) timer0ReloadVal;
  6826   0010FA  C052  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  6827   0010FE                     
  6828                           ;mcc_generated_files/tmr0.c: 146:     TMR0_CallBack();
  6829   0010FE  EC22  F008         	call	_TMR0_CallBack	;wreg free
  6830   001102  0012               	return		;funcret
  6831   001104                     __end_of_TMR0_ISR:
  6832                           	callstack 0
  6833                           
  6834 ;; *************** function _TMR0_CallBack *****************
  6835 ;; Defined at:
  6836 ;;		line 151 in file "mcc_generated_files/tmr0.c"
  6837 ;; Parameters:    Size  Location     Type
  6838 ;;		None
  6839 ;; Auto vars:     Size  Location     Type
  6840 ;;		None
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  1    wreg      void 
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6851 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6853 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6854 ;;Total ram usage:        0 bytes
  6855 ;; Hardware stack levels used: 1
  6856 ;; Hardware stack levels required when called: 2
  6857 ;; This function calls:
  6858 ;;		NULL
  6859 ;;		_TMR0_DefaultInterruptHandler
  6860 ;; This function is called by:
  6861 ;;		_TMR0_ISR
  6862 ;; This function uses a non-reentrant model
  6863 ;;
  6864                           
  6865                           	psect	text38
  6866   001044                     __ptext38:
  6867                           	callstack 0
  6868   001044                     _TMR0_CallBack:
  6869                           	callstack 20
  6870   001044                     
  6871                           ;mcc_generated_files/tmr0.c: 155:     if(TMR0_InterruptHandler)
  6872   001044  0100               	movlb	0	; () banked
  6873   001046  51F6               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6874   001048  11F7               	iorwf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6875   00104A  B4D8               	btfsc	status,2,c
  6876   00104C  EF2A  F008         	goto	i2u163_41
  6877   001050  EF2C  F008         	goto	i2u163_40
  6878   001054                     i2u163_41:
  6879   001054  EF38  F008         	goto	i2l245
  6880   001058                     i2u163_40:
  6881   001058                     
  6882                           ; BSR set to: 0
  6883                           ;mcc_generated_files/tmr0.c: 156:     {;mcc_generated_files/tmr0.c: 157:         TMR0_In
      +                          terruptHandler();
  6884   001058  D802               	call	i2u164_48
  6885   00105A  EF38  F008         	goto	i2u164_49
  6886   00105E                     i2u164_48:
  6887   00105E  0005               	push	
  6888   001060  6EFA               	movwf	pclath,c
  6889   001062  51F6               	movf	_TMR0_InterruptHandler& (0+255),w,b
  6890   001064  6EFD               	movwf	tosl,c
  6891   001066  51F7               	movf	(_TMR0_InterruptHandler+1)& (0+255),w,b
  6892   001068  6EFE               	movwf	tosh,c
  6893   00106A  6AFF               	clrf	tosu,c
  6894   00106C  50FA               	movf	pclath,w,c
  6895   00106E  0012               	return		;indir
  6896   001070                     i2u164_49:
  6897   001070                     i2l245:
  6898   001070  0012               	return		;funcret
  6899   001072                     __end_of_TMR0_CallBack:
  6900                           	callstack 0
  6901                           
  6902 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  6903 ;; Defined at:
  6904 ;;		line 165 in file "mcc_generated_files/tmr0.c"
  6905 ;; Parameters:    Size  Location     Type
  6906 ;;		None
  6907 ;; Auto vars:     Size  Location     Type
  6908 ;;		None
  6909 ;; Return value:  Size  Location     Type
  6910 ;;                  1    wreg      void 
  6911 ;; Registers used:
  6912 ;;		wreg, status,2, status,0, cstack
  6913 ;; Tracked objects:
  6914 ;;		On entry : 0/0
  6915 ;;		On exit  : 0/0
  6916 ;;		Unchanged: 0/0
  6917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6918 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6919 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6921 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6922 ;;Total ram usage:        0 bytes
  6923 ;; Hardware stack levels used: 1
  6924 ;; Hardware stack levels required when called: 1
  6925 ;; This function calls:
  6926 ;;		_calculateTime
  6927 ;; This function is called by:
  6928 ;;		_TMR0_Initialize
  6929 ;;		_TMR0_CallBack
  6930 ;; This function uses a non-reentrant model
  6931 ;;
  6932                           
  6933                           	psect	text39
  6934   001154                     __ptext39:
  6935                           	callstack 0
  6936   001154                     _TMR0_DefaultInterruptHandler:
  6937                           	callstack 20
  6938   001154                     
  6939                           ;mcc_generated_files/tmr0.c: 168:     calculateTime();
  6940   001154  EC66  F007         	call	_calculateTime	;wreg free
  6941   001158  0012               	return		;funcret
  6942   00115A                     __end_of_TMR0_DefaultInterruptHandler:
  6943                           	callstack 0
  6944                           
  6945 ;; *************** function _calculateTime *****************
  6946 ;; Defined at:
  6947 ;;		line 111 in file "main.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;		None
  6950 ;; Auto vars:     Size  Location     Type
  6951 ;;		None
  6952 ;; Return value:  Size  Location     Type
  6953 ;;                  1    wreg      void 
  6954 ;; Registers used:
  6955 ;;		wreg, status,2, status,0
  6956 ;; Tracked objects:
  6957 ;;		On entry : 0/0
  6958 ;;		On exit  : 0/0
  6959 ;;		Unchanged: 0/0
  6960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6965 ;;Total ram usage:        0 bytes
  6966 ;; Hardware stack levels used: 1
  6967 ;; This function calls:
  6968 ;;		Nothing
  6969 ;; This function is called by:
  6970 ;;		_TMR0_DefaultInterruptHandler
  6971 ;; This function uses a non-reentrant model
  6972 ;;
  6973                           
  6974                           	psect	text40
  6975   000ECC                     __ptext40:
  6976                           	callstack 0
  6977   000ECC                     _calculateTime:
  6978                           	callstack 20
  6979   000ECC                     
  6980                           ;main.c: 113:     if (++seconds >= 60) {
  6981   000ECC  0100               	movlb	0	; () banked
  6982   000ECE  2BAA               	incf	_seconds& (0+255),f,b
  6983   000ED0  0E3B               	movlw	59
  6984   000ED2  65AA               	cpfsgt	_seconds& (0+255),b
  6985   000ED4  EF6E  F007         	goto	i2u130_41
  6986   000ED8  EF70  F007         	goto	i2u130_40
  6987   000EDC                     i2u130_41:
  6988   000EDC  EF88  F007         	goto	i2l483
  6989   000EE0                     i2u130_40:
  6990   000EE0                     
  6991                           ; BSR set to: 0
  6992                           ;main.c: 114:         seconds = 0;
  6993   000EE0  0E00               	movlw	0
  6994   000EE2  6FAA               	movwf	_seconds& (0+255),b
  6995   000EE4                     
  6996                           ; BSR set to: 0
  6997                           ;main.c: 116:         if (++minutes >= 60) {
  6998   000EE4  2BAB               	incf	_minutes& (0+255),f,b
  6999   000EE6  0E3B               	movlw	59
  7000   000EE8  65AB               	cpfsgt	_minutes& (0+255),b
  7001   000EEA  EF79  F007         	goto	i2u131_41
  7002   000EEE  EF7B  F007         	goto	i2u131_40
  7003   000EF2                     i2u131_41:
  7004   000EF2  EF88  F007         	goto	i2l483
  7005   000EF6                     i2u131_40:
  7006   000EF6                     
  7007                           ; BSR set to: 0
  7008                           ;main.c: 117:             minutes = 0;
  7009   000EF6  0E00               	movlw	0
  7010   000EF8  6FAB               	movwf	_minutes& (0+255),b
  7011   000EFA                     
  7012                           ; BSR set to: 0
  7013                           ;main.c: 119:             if (++hours >= 24) {
  7014   000EFA  2BAC               	incf	_hours& (0+255),f,b
  7015   000EFC  0E17               	movlw	23
  7016   000EFE  65AC               	cpfsgt	_hours& (0+255),b
  7017   000F00  EF84  F007         	goto	i2u132_41
  7018   000F04  EF86  F007         	goto	i2u132_40
  7019   000F08                     i2u132_41:
  7020   000F08  EF88  F007         	goto	i2l483
  7021   000F0C                     i2u132_40:
  7022   000F0C                     
  7023                           ; BSR set to: 0
  7024                           ;main.c: 120:                 hours = 0;
  7025   000F0C  0E00               	movlw	0
  7026   000F0E  6FAC               	movwf	_hours& (0+255),b
  7027   000F10                     i2l483:
  7028                           
  7029                           ; BSR set to: 0
  7030   000F10  0012               	return		;funcret
  7031   000F12                     __end_of_calculateTime:
  7032                           	callstack 0
  7033                           
  7034                           	psect	rparam
  7035   000000                     
  7036                           	psect	temp
  7037   000059                     btemp:
  7038                           	callstack 0
  7039   000059                     	ds	1
  7040   000000                     int$flags	set	btemp
  7041   000000                     wtemp8	set	btemp+1
  7042   000000                     ttemp5	set	btemp+1
  7043   000000                     ttemp6	set	btemp+4
  7044   000000                     ttemp7	set	btemp+8
  7045                           
  7046                           	psect	idloc
  7047                           
  7048                           ;Config register IDLOC0 @ 0x200000
  7049                           ;	unspecified, using default values
  7050   200000                     	org	2097152
  7051   200000  FF                 	db	255
  7052                           
  7053                           ;Config register IDLOC1 @ 0x200001
  7054                           ;	unspecified, using default values
  7055   200001                     	org	2097153
  7056   200001  FF                 	db	255
  7057                           
  7058                           ;Config register IDLOC2 @ 0x200002
  7059                           ;	unspecified, using default values
  7060   200002                     	org	2097154
  7061   200002  FF                 	db	255
  7062                           
  7063                           ;Config register IDLOC3 @ 0x200003
  7064                           ;	unspecified, using default values
  7065   200003                     	org	2097155
  7066   200003  FF                 	db	255
  7067                           
  7068                           ;Config register IDLOC4 @ 0x200004
  7069                           ;	unspecified, using default values
  7070   200004                     	org	2097156
  7071   200004  FF                 	db	255
  7072                           
  7073                           ;Config register IDLOC5 @ 0x200005
  7074                           ;	unspecified, using default values
  7075   200005                     	org	2097157
  7076   200005  FF                 	db	255
  7077                           
  7078                           ;Config register IDLOC6 @ 0x200006
  7079                           ;	unspecified, using default values
  7080   200006                     	org	2097158
  7081   200006  FF                 	db	255
  7082                           
  7083                           ;Config register IDLOC7 @ 0x200007
  7084                           ;	unspecified, using default values
  7085   200007                     	org	2097159
  7086   200007  FF                 	db	255
  7087                           
  7088                           	psect	config
  7089                           
  7090                           ; Padding undefined space
  7091   300000                     	org	3145728
  7092   300000  FF                 	db	255
  7093                           
  7094                           ;Config register CONFIG1H @ 0x300001
  7095                           ;	Oscillator Selection bits
  7096                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7097                           ;	Fail-Safe Clock Monitor Enable bit
  7098                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7099                           ;	Internal/External Oscillator Switchover bit
  7100                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7101   300001                     	org	3145729
  7102   300001  08                 	db	8
  7103                           
  7104                           ;Config register CONFIG2L @ 0x300002
  7105                           ;	Power-up Timer Enable bit
  7106                           ;	PWRTEN = OFF, PWRT disabled
  7107                           ;	Brown-out Reset Enable bits
  7108                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7109                           ;	Brown Out Reset Voltage bits
  7110                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7111   300002                     	org	3145730
  7112   300002  1F                 	db	31
  7113                           
  7114                           ;Config register CONFIG2H @ 0x300003
  7115                           ;	Watchdog Timer Enable bit
  7116                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7117                           ;	Watchdog Timer Postscale Select bits
  7118                           ;	WDTPS = 32768, 1:32768
  7119   300003                     	org	3145731
  7120   300003  1E                 	db	30
  7121                           
  7122                           ; Padding undefined space
  7123   300004                     	org	3145732
  7124   300004  FF                 	db	255
  7125                           
  7126                           ;Config register CONFIG3H @ 0x300005
  7127                           ;	CCP2 MUX bit
  7128                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7129                           ;	PORTB A/D Enable bit
  7130                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7131                           ;	Low-Power Timer1 Oscillator Enable bit
  7132                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7133                           ;	HFINTOSC Fast Start-up
  7134                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7135                           ;	MCLR Pin Enable bit
  7136                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  7137   300005                     	org	3145733
  7138   300005  09                 	db	9
  7139                           
  7140                           ;Config register CONFIG4L @ 0x300006
  7141                           ;	Stack Full/Underflow Reset Enable bit
  7142                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7143                           ;	Single-Supply ICSP Enable bit
  7144                           ;	LVP = OFF, Single-Supply ICSP disabled
  7145                           ;	Extended Instruction Set Enable bit
  7146                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7147                           ;	Background Debugger Enable bit
  7148                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7149   300006                     	org	3145734
  7150   300006  81                 	db	129
  7151                           
  7152                           ; Padding undefined space
  7153   300007                     	org	3145735
  7154   300007  FF                 	db	255
  7155                           
  7156                           ;Config register CONFIG5L @ 0x300008
  7157                           ;	Code Protection Block 0
  7158                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7159                           ;	Code Protection Block 1
  7160                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7161                           ;	Code Protection Block 2
  7162                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7163                           ;	Code Protection Block 3
  7164                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7165   300008                     	org	3145736
  7166   300008  0F                 	db	15
  7167                           
  7168                           ;Config register CONFIG5H @ 0x300009
  7169                           ;	Boot Block Code Protection bit
  7170                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7171                           ;	Data EEPROM Code Protection bit
  7172                           ;	CPD = OFF, Data EEPROM not code-protected
  7173   300009                     	org	3145737
  7174   300009  C0                 	db	192
  7175                           
  7176                           ;Config register CONFIG6L @ 0x30000A
  7177                           ;	Write Protection Block 0
  7178                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7179                           ;	Write Protection Block 1
  7180                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7181                           ;	Write Protection Block 2
  7182                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7183                           ;	Write Protection Block 3
  7184                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7185   30000A                     	org	3145738
  7186   30000A  0F                 	db	15
  7187                           
  7188                           ;Config register CONFIG6H @ 0x30000B
  7189                           ;	Configuration Register Write Protection bit
  7190                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7191                           ;	Boot Block Write Protection bit
  7192                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7193                           ;	Data EEPROM Write Protection bit
  7194                           ;	WRTD = OFF, Data EEPROM not write-protected
  7195   30000B                     	org	3145739
  7196   30000B  E0                 	db	224
  7197                           
  7198                           ;Config register CONFIG7L @ 0x30000C
  7199                           ;	Table Read Protection Block 0
  7200                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7201                           ;	Table Read Protection Block 1
  7202                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7203                           ;	Table Read Protection Block 2
  7204                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7205                           ;	Table Read Protection Block 3
  7206                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7207   30000C                     	org	3145740
  7208   30000C  0F                 	db	15
  7209                           
  7210                           ;Config register CONFIG7H @ 0x30000D
  7211                           ;	Boot Block Table Read Protection bit
  7212                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7213   30000D                     	org	3145741
  7214   30000D  40                 	db	64
  7215                           tosu	equ	0xFFF
  7216                           tosh	equ	0xFFE
  7217                           tosl	equ	0xFFD
  7218                           stkptr	equ	0xFFC
  7219                           pclatu	equ	0xFFB
  7220                           pclath	equ	0xFFA
  7221                           pcl	equ	0xFF9
  7222                           tblptru	equ	0xFF8
  7223                           tblptrh	equ	0xFF7
  7224                           tblptrl	equ	0xFF6
  7225                           tablat	equ	0xFF5
  7226                           prodh	equ	0xFF4
  7227                           prodl	equ	0xFF3
  7228                           indf0	equ	0xFEF
  7229                           postinc0	equ	0xFEE
  7230                           postdec0	equ	0xFED
  7231                           preinc0	equ	0xFEC
  7232                           plusw0	equ	0xFEB
  7233                           fsr0h	equ	0xFEA
  7234                           fsr0l	equ	0xFE9
  7235                           wreg	equ	0xFE8
  7236                           indf1	equ	0xFE7
  7237                           postinc1	equ	0xFE6
  7238                           postdec1	equ	0xFE5
  7239                           preinc1	equ	0xFE4
  7240                           plusw1	equ	0xFE3
  7241                           fsr1h	equ	0xFE2
  7242                           fsr1l	equ	0xFE1
  7243                           bsr	equ	0xFE0
  7244                           indf2	equ	0xFDF
  7245                           postinc2	equ	0xFDE
  7246                           postdec2	equ	0xFDD
  7247                           preinc2	equ	0xFDC
  7248                           plusw2	equ	0xFDB
  7249                           fsr2h	equ	0xFDA
  7250                           fsr2l	equ	0xFD9
  7251                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    2048
    Data        0
    BSS         118
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     81      88
    BANK0           160     71     156
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(1) Largest target is 64
		 -> saveTimeToFlash@flashBuffer(BANK0[64]), 

    printString@str	PTR unsigned char  size(2) Largest target is 6
		 -> displayAlarmTime@displayString(BANK0[5]), displayTime@displayString(BANK0[5]), STR_1(CODE[6]), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), NULL(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR0_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_checkButtons
    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _clearDisplay->_flushBuffer
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _saveTimeToFlash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _displayTime->_printString
    _displayAlarmTime->_printString
    _printString->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_btGetData

Critical Paths under _main in BANK0

    _main->_saveTimeToFlash
    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _checkButtons->_saveTimeToFlash
    _displayTime->_printString
    _displayAlarmTime->_printString

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   50753
                                             69 BANK0      2     2      0
                  _SYSTEM_Initialize
                    _TMR0_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
                       _processAlarm
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _processAlarm                                         0     0      0    9673
                       _triggerAlarm
 ---------------------------------------------------------------------------------
 (2) _triggerAlarm                                         6     6      0    9673
                                             79 COMRAM     2     2      0
                                             11 BANK0      4     4      0
                 _PWM2_LoadDutyValue
                         _clearAlarm
                       _clearDisplay
                        _printString
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         2     2      0    4344
                                             69 COMRAM     2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (3) _PWM2_LoadDutyValue                                   4     2      2     242
                                              5 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     676
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     676
                                              6 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0    1061
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   22951
                                             79 COMRAM     2     2      0
                            ___awmod
                         _clearAlarm
                   _displayAlarmTime
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _saveTimeToFlash                                     69    69      0    2392
                                              0 BANK0     69    69      0
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    14     9      5    1072
                                             10 COMRAM    14     9      5
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     5     1      4     217
                                              5 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     903
                                              5 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    9163
                                             11 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _displayAlarmTime                                    12    12      0    9163
                                             11 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (3) _printString                                         21    19      2    5016
                                             69 COMRAM    10     8      2
                                              0 BANK0     11    11      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (4) _flushBuffer                                         43    43      0    4245
                                             26 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (5) _max_write                                           13    10      3    2160
                                             13 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1525
                                              5 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                              5 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2233
                                              5 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _clearAlarm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0     121
                                              7 COMRAM     2     2      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR0_SetInterruptHandler                             2     0      2     121
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     242
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              5 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           4     4      0      66
                                              1 COMRAM     4     4      0
                           _TMR0_ISR
                          _btGetData
 ---------------------------------------------------------------------------------
 (8) _btGetData                                            1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR0_ISR                                             0     0      0       0
                      _TMR0_CallBack
 ---------------------------------------------------------------------------------
 (9) _TMR0_CallBack                                        0     0      0       0
                                NULL *
       _TMR0_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR0_DefaultInterruptHandler                        0     0      0       0
                      _calculateTime
 ---------------------------------------------------------------------------------
 (11) _calculateTime                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _SPI_Initialize
     _TMR0_Initialize
       _TMR0_SetInterruptHandler
     _TMR2_Initialize
   _TMR0_StartTimer
   _checkButtons
     ___awmod
     _clearAlarm
     _displayAlarmTime
       ___awdiv
       ___awmod
       _printString
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
     _displayTime
       ___awdiv
       ___awmod
       _printString
     _saveTimeToFlash
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _clearDisplay
     _flushBuffer
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit
   _processAlarm
     _triggerAlarm
       _PWM2_LoadDutyValue
       _clearAlarm
       _clearDisplay
       _printString
   _saveTimeToFlash

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     _TMR0_CallBack
       NULL(Fake) *
       _TMR0_DefaultInterruptHandler *
         _calculateTime
   _btGetData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9C       5       97.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     51      58       1       93.6%
BITBIGSFRlllll      1C      0       0      54        0.0%
BITBIGSFRhhlh       19      0       0      39        0.0%
BITBIGSFRlhhhh       A      0       0      43        0.0%
BITBIGSFRlllhh       7      0       0      51        0.0%
BITBIGSFRhhhh        7      0       0      37        0.0%
BITBIGSFRlhhlhh      7      0       0      45        0.0%
BITBIGSFRllhh        6      0       0      49        0.0%
BITBIGSFRllhl        6      0       0      50        0.0%
BITBIGSFRlhhlll      4      0       0      46        0.0%
BITBIGSFRhlhl        3      0       0      42        0.0%
BITBIGSFRhlhh        2      0       0      41        0.0%
BITBIGSFRlhhlll      2      0       0      47        0.0%
BITBIGSFRhhhl        2      0       0      38        0.0%
BITBIGSFRlhhhl       1      0       0      44        0.0%
BITBIGSFRllllh       1      0       0      53        0.0%
BITBIGSFRlllhl       1      0       0      52        0.0%
BITBIGSFRlhl         1      0       0      48        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     114      14        0.0%
DATA                 0      0     114       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 11 20:06:34 2024

                    __end_of_checkButtons 0332             ?_EUSART_SetRxInterruptHandler 0006  
                          _SPI_Initialize 1104                              ?_displayTime 0001  
                             _SSPSTATbits 0FC7                                        l20 10CC  
                                      l21 10CE                                        l15 1110  
                                      l18 10BE                                        l72 1092  
                                      l75 113E                                        l98 10B4  
                            ___awdiv@sign 000B                           _timer0ReloadVal 0052  
                                     l223 0FE4                                       l152 0ECA  
                                     l226 115C                                       l324 10E0  
                                     l340 06AA                                       l500 07A6  
                                     l341 0694                                       l342 0698  
                                     l191 1148                                       l248 1134  
                                     l264 10F2                                       l504 112A  
                                     l336 06DC                                       l194 1152  
                                     l290 111E                                       l346 0FB0  
                                     l602 0F7C                                       l525 0222  
                                     l293 1014                                       l534 0330  
                                     l607 0F48                                       l544 0AA4  
                                     l538 0DAC                                       l379 1160  
                                     l539 0DD8                                       l467 0864  
                                     l645 04C4                                       l477 0B58  
                                     l493 0E2A                                       l590 05F2  
                                     l576 09EC                                       l488 0C0C  
                                     l497 06F4                                       l578 09EE  
                                     l597 0E7A                                       l599 0E7C  
                                     l892 0CBC                                       l879 092E  
                                     _PR2 0FCB       EUSART_SetRxInterruptHandler@handler 0006  
                            ___awmod@sign 000B                           _TMR2_Initialize 10E2  
                                     prod 0FF3                                       tosl 0FFD  
                                     wreg 0FE8                                      l3201 08A4  
                                    l3211 08DC                                      l3203 08AC  
                                    l3221 0908                                      l3213 08E2  
                                    l3205 08BE                                      l3215 08F8  
                                    l3207 08C6                                      l3223 090E  
                                    l3231 0930                                      l3311 056E  
                                    l3225 091E                                      l3217 0900  
                                    l3209 08CE                                      l3233 0950  
                                    l3313 058A                                      l3305 04FE  
                                    l3401 0F1A                                      l3331 114A  
                                    l3227 0926                                      l3219 0902  
                                    l3251 09B6                                      l3235 0972  
                                    l3323 05B2                                      l3315 058E  
                                    l3307 0536                                      l3411 0348  
                                    l3403 0F24                                      l3501 10A2  
                                    l3333 112C                                      l3261 09D0  
                                    l3253 09C0                                      l3245 097C  
                                    l3237 0972                                      l3325 05D2  
                                    l3317 05AA                                      l3309 056A  
                                    l3405 0F28                                      l3503 10B0  
                                    l3511 111A                                      l3183 10B8  
                                    l3191 087E                                      l3255 09C0  
                                    l3247 0994                                      l3239 0974  
                                    l3327 05D6                                      l3431 0424  
                                    l3423 0366                                      l3271 0F92  
                                    l3263 0F7E                                      l3351 0618  
                                    l3343 05F4                                      l3335 0FE6  
                                    l3407 0F44                                      l3329 1140  
                                    l3505 10B2                                      l3521 0FBA  
                                    l3513 10E2                                      l3185 10BA  
                                    l3193 0886                                      l3257 09C6  
                                    l3249 09B0                                      l3441 044C  
                                    l3425 03EC                                      l3417 035A  
                                    l3409 0332                                      l3601 0BCE  
                                    l3337 10D0                                      l3281 0F9C  
                                    l3273 0F94                                      l3265 0F86  
                                    l3361 065C                                      l3353 061C  
                                    l3345 060C                                      l3531 0E7E  
                                    l3507 1136                                      l3523 0FD0  
                                    l3515 10EA                                      l3195 088A  
                                    l3187 086C                                      l3259 09CC  
                                    l3291 04D2                                      l3443 0450  
                                    l3435 0436                                      l3427 040E  
                                    l3451 0482                                      l3603 0BE2  
                                    l3339 10DE                                      l3283 0FA0  
                                    l3275 0F96                                      l3267 0F8A  
                                    l3363 0660                                      l3347 0614  
                                    l3611 0702                                      l3541 0EA6  
                                    l3533 0E82                                      l3509 1112  
                                    l3525 0FD2                                      l3517 10F0  
                                    l3461 0C20                                      l3197 0898  
                                    l3189 0870                                      l3453 04C0  
                                    l3437 0442                                      l3445 046C  
                                    l3429 0416                                      l3605 0BE6  
                                    l3285 0FA4                                      l3277 0F98  
                                    l3269 0F8E                                      l3381 069A  
                                    l3373 0670                                      l3365 0664  
                                    l3357 0644                                      l3349 0614  
                                    l3701 0A7C                                      l3613 071C  
                                    l3621 0736                                      l3551 0EBA  
                                    l3543 0EAA                                      l3535 0E9A  
                                    l3527 0FD4                                      l3519 0FB2  
                                    l3455 1120                                      l3471 0C54  
                                    l3463 0C28                                      l3199 08A0  
                                    l3447 0470                                      l3439 0448  
                                    l3607 0C02                                      l3287 0FA6  
                                    l3279 0F9A                                      l3391 06C8  
                                    l3383 06B2                                      l3375 067C  
                                    l3367 066C                                      l3359 0658  
                                    l3711 00AA                                      l3703 0A8C  
                                    l3631 0774                                      l3623 0742  
                                    l3615 072A                                      l3553 0EBE  
                                    l3545 0EAE                                      l3537 0E9E  
                                    l3529 0FE0                                      l3481 0C90  
                                    l3473 0C5C                                      l3465 0C2C  
                                    l3457 0C0E                                      l3297 04DA  
                                    l3289 04C6                                      l3561 0B0E  
                                    l3385 06BA                                      l3377 068E  
                                    l3393 06CA                                      l3721 010A  
                                    l3713 00C4                                      l3705 0A90  
                                    l3641 0E46                                      l3633 078A  
                                    l3625 074E                                      l3617 072E  
                                    l3609 06DE                                      l3801 0E24  
                                    l3555 0EC4                                      l3547 0EB2  
                                    l3539 0EA2                                      l3483 0C96  
                                    l3475 0C64                                      l3467 0C3A  
                                    l3459 0C12                                      l3299 04F6  
                                    l3571 0B2E                                      l3563 0B12  
                                    l3387 06BC                                      l3379 0696  
                                    l3731 0162                                      l3723 0128  
                                    l3715 00D2                                      l3707 0AA0  
                                    l3651 0E5E                                      l3395 0F12  
                                    l3627 0764                                      l3635 0790  
                                    l3557 0EC8                                      l3549 0EB6  
                                    l3493 1104                                      l3477 0C72  
                                    l3485 0C9C                                      l3469 0C42  
                                    l3573 0B32                                      l3389 06BE  
                                    l3733 0174                                      l3741 01BC  
                                    l3717 00E4                                      l3725 012C  
                                    l3709 009C                                      l3637 0E2E  
                                    l3629 0768                                      l3901 07C8  
                                    l3495 115E                                      l3671 1076  
                                    l3487 0CAC                                      l3479 0C88  
                                    l3591 0B5A                                      l3575 0B4E  
                                    l3559 0AA6                                      l3583 0D72  
                                    l3751 0216                                      l3743 01CA  
                                    l3735 0192                                      l3727 013A  
                                    l3719 0102                                      l3647 0E4E  
                                    l3639 0E44                                      l3911 0814  
                                    l3903 07CC                                      l3497 1094  
                                    l3681 108A                                      l3673 107A  
                                    l3489 0CB4                                      l3593 0BC2  
                                    l3569 0B1A                                      l3585 0D98  
                                    l3577 0D5C                                      l3761 026E  
                                    l3753 021A                                      l3745 01D4  
                                    l3737 019A                                      l3729 0154  
                                    l3649 0E5A                                      l3921 0854  
                                    l3913 082C                                      l3905 07DE  
                                    l3499 10A0                                      l3683 108E  
                                    l3675 107E                                      l3595 0BC6  
                                    l3587 0D9C                                      l3771 02C8  
                                    l3763 027C                                      l3755 0230  
                                    l3747 01EE                                      l3739 01B8  
                                    l3691 09F0                                      l3923 0858  
                                    l3915 083C                                      l3907 07F0  
                                    l3677 1082                                      l3669 1072  
                                    l3685 115A                                      l3589 0DC0  
                                    l3781 030A                                      l3773 02D2  
                                    l3765 0296                                      l3757 024A  
                                    l3749 0206                                      l3693 0A08  
                                    l3925 085C                                      l3917 084C  
                                    l3909 0802                                      l3679 1086  
                                    l3783 030C                                      l3759 026A  
                                    l3775 02DA                                      l3695 0A20  
                                    l3687 0F4A                                      l3791 0DDA  
                                    l3919 0850                                      l3785 031E  
                                    l3777 02EA                                      l3769 02BA  
                                    l3697 0A38                                      l3689 09F0  
                                    l3793 0DEC                                      l3787 0322  
                                    l3779 02F2                                      l3699 0A50  
                                    l3795 0DFC                                      l3891 07B8  
                                    l3789 0328                                      l3797 0E0E  
                                    l3893 07BC                                      l3885 07A8  
                                    l3799 0E20                                      l3895 07BE  
                                    l3887 07B0                                      l3897 07C0  
                                    l3889 07B4                                      l3899 07C4  
                                    STR_1 FFF9                              _triggerAlarm 06DE  
                                    u3000 02EA                                      u3001 02E6  
                                    u3010 030A                                      u3011 0306  
                                    u3020 031E                                      u3021 031A  
                                    _LATA 0F89                                      u3030 0DEC  
                                    _LATB 0F8A                                      u3031 0DE8  
                                    _LATC 0F8B                                      u2400 08BE  
                                    u3040 0DFC                                      u3200 07F0  
                                    u2401 08BA                                      u3041 0DF8  
                                    u3201 07EC                                      u2410 08DC  
                                    u3050 0E0E                                      u3210 0802  
                                    u2411 08D8                                      u3051 0E0A  
                                    u3211 07FE                                      u2420 08F8  
                                    u3060 0E20                                      u3220 0814  
                                    u2421 08F4                                      u3061 0E1C  
                                    u3221 0810                                      u2430 091E  
                                    u2510 058A                                      u3230 083C  
                                    u2431 091A                                      u2511 0586  
                                    u3231 0838                                      u2440 0994  
                                    u2520 05AA                                      u2504 0552  
                                    u2600 0394                                      u3240 084C  
                                    u2441 0990                                      u2521 05A6  
                                    u2505 054E                                      u3241 0848  
                                    u2370 10CC                                      u2450 09EC  
                                    u2530 05F2                                      u2371 10C8  
                                    u2451 09E8                                      u2531 05EE  
                                    u3307 0144                                      u2700 0C20  
                                    u2380 087E                                      u2620 03EC  
                                    u2540 0640                                      u2701 0C1C  
                                    u2381 087A                                      u2621 03E8  
                                    u2541 063C                                      u3317 01DE  
                                    u2710 0C3A                                      u2390 0898  
                                    u2614 03D2                                      u2550 068E  
                                    u3190 07DE                                      u2711 0C36  
                                    u2391 0894                                      u2471 04CC  
                                    u2615 03CE                                      u2607 038A  
                                    u2551 068A                                      u3327 023A  
                                    u3191 07DA                                      u2720 0C54  
                                    u2640 0424                                      u2560 06AA  
                                    u2800 072A                                      u2721 0C50  
                                    u2641 0420                                      u2465 0FAE  
                                    u2561 06A6                                      u3337 0286  
                                    u2801 0726                                      u2730 0C72  
                                    u2490 0536                                      u2650 0432  
                                    u2634 0402                                      u2466 0FB0  
                                    u2810 07A6                                      u2731 0C6E  
                                    u2491 0532                                      u2651 042E  
                                    u2635 03FE                                      u2811 07A2  
                                    u3267 070C                                      u2740 0C88  
                                    u2484 051C                                      u2660 046C  
                                    u2580 06DC                                      u2900 00E4  
                                    u2820 0E7A                                      u2741 0C84  
                                    u2485 0518                                      u2661 0468  
                                    u2581 06D8                                      u2901 00E0  
                                    u2821 0E76                                      u3277 0758  
                                    u2750 0CAC                                      u2670 047E  
                                    u2910 013A                                      u2590 0F44  
                                    u2751 0CA8                                      u2671 047A  
                                    u2575 06C6                                      u2911 0136  
                                    u2591 0F40                                      u3287 077E  
                                    u2680 04B0                                      u2760 0B4E  
                                    u2576 06C8                                      u2920 0162  
                                    u2840 0A76                                      u2761 0B4A  
                                    u2921 015E                                      u3297 00B4  
                                    u2841 0A70                                      u2690 04C0  
                                    u2770 0DAC                                      u2930 0174  
                                    u2850 0A78                                      u2691 04BC  
                                    u2771 0DA8                                      u2931 0170  
                                    u2780 0C02                                      u2940 01CA  
                                    u2860 0A8C                                      u2781 0BFE  
                                    u2941 01C6                                      u2861 0A88  
                                    u2950 0206                                      u2870 0AA0  
                                    u2790 0702                                      u2687 04A6  
                                    u2951 0202                                      u2871 0A9C  
                                    u2791 06FE                                      u2960 0216  
                                    u2880 00AA                                      u2961 0212  
                                    u2881 00A6                                      u2970 0230  
                                    u2890 00D2                                      u2971 022C  
                                    u2891 00CE                                      u2980 027C  
                                    u2981 0278                                      u2990 02C8  
                                    u2991 02C4                                      _TMR2 0FCC  
                                    _WPUB 0F7C                                      _main 07A8  
                         _TMR0_StartTimer 115A                                      fsr1h 0FE2  
                                    fsr2h 0FDA                                      indf1 0FE7  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9                                      btemp 0059  
                            printString@i 00B4                              printString@j 00B8  
                            printString@k 00B6                         ?_FLASH_WriteBlock 000B  
                                    prodl 0FF3                                      start 0098  
                  __end_of_SPI_Initialize 1112                              ?_flushBuffer 0001  
                      ??_FLASH_WriteBlock 0010                              ___param_bank 0000  
             saveTimeToFlash@flashAddress 00EF                      __end_of_clearDisplay 0F4A  
             checkButtons@button3HoldTime 009A                   __end_of_PWM2_Initialize 1120  
                 __end_of_TMR0_Initialize 0FE6            ??_TMR0_DefaultInterruptHandler 0001  
           __end_of_OSCILLATOR_Initialize 1140                                     ?_main 0001  
                         __end_of___awdiv 0930                         ??_saveTimeToFlash 0019  
                                   _EEADR 0FA9                           __end_of___awmod 0CBE  
                                   _ANSEL 0F7E                                     _T0CON 0FD5  
                         ___awdiv@divisor 0008                                     _T2CON 0FCA  
                                   i2l241 1102                                     i2l251 1158  
                                   i2l245 1070                                     i2l550 0D5A  
                                   i2l384 003E                                     i2l553 0D5A  
                                   i2l386 0060                                     i2l483 0F10  
                                   i2l389 0084                           ___awdiv@counter 000A  
                                   _RCREG 0FAE                                     _RCSTA 0FAB  
                                   _TMR0H 0FD7                                     _TMR0L 0FD6  
                                   _SPBRG 0FAF                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TXREG 0FAD                                     _TXSTA 0FAC  
               ?_TMR0_SetInterruptHandler 0006                          __end_of_TMR0_ISR 1104  
                                   _hours 00AC                              displayTime@i 00C4  
                        _button3PressTime 009C                           max7219_cmd@Addr 000A  
                                   pclath 0FFA                                     pclatu 0FFB  
                                   tablat 0FF5                           max7219_cmd@data 0007  
                                   ttemp5 005A                                     ttemp6 005D  
                                   ttemp7 0061                                     status 0FD8  
                                   wtemp8 005A                           ?_SPI_Initialize 0001  
                          _alarmTriggered 00A5                           __initialization 1016  
                            __end_of_main 086C                   FLASH_ReadByte@flashAddr 0006  
                 __end_of_TMR2_Initialize 10F4               ?_INTERRUPT_InterruptManager 0001  
          ??_EUSART_SetRxInterruptHandler 0008                                    ??_main 0052  
                           __activetblptr 0003                  __end_of_SPI_Exchange8bit 10D0  
                 __end_of_TMR0_StartTimer 115E                 FLASH_WriteBlock@writeAddr 000B  
                                  _EEADRH 0FAA                                    _EEDATA 0FA8  
                                  _CCPR2L 0FBB                                    _EECON2 0FA7  
                        ___awdiv@dividend 0006                                    _ANSELH 0F7F  
                                  i2l3121 0036                                    i2l3131 0082  
                                  i2l3123 004C                                    i2l3125 005A  
                                  i2l3117 001A                                    i2l3127 006E  
                                  i2l3119 0028                                    i2l3129 007C  
                                  i2l2381 0EE4                                    i2l2461 1154  
                                  i2l2383 0EF6                                    i2l2385 0EFA  
                                  i2l2377 0ECC                                    i2l2387 0F0C  
                                  i2l2379 0EE0                                    i2l2831 10FE  
                                  i2l2825 10F4                                    i2l2841 0CF4  
                                  i2l2833 0CC0                                    i2l2827 10F6  
                                  i2l2851 0D36                                    i2l2843 0D04  
                                  i2l2835 0CD2                                    i2l2829 10FA  
                                  i2l2853 0D48                                    i2l2845 0D14  
                                  i2l2837 0CE2                                    i2l2687 1044  
                                  i2l2839 0CEE                                    i2l2689 1058  
                                  i2l2849 0D24                                    _TABLAT 0FF5  
                                  _OSCCON 0FD3                                    _SPBRGH 0FB0  
                                  _SSPADD 0FC8                                    _SSPBUF 0FC9  
                   triggerAlarm@numCycles 00BA                             main@hours_pom 00F4  
                               ??___awdiv 000A                                 ??___awmod 000A  
                     _EUSART_Transmit_ISR 0000                          ?_TMR0_Initialize 0001  
                        ?_PWM2_Initialize 0001                                    clear_0 101C  
                                  clear_1 1028                                    clear_2 1034  
                        ___awdiv@quotient 000C                           ___awmod@divisor 0008  
                                  isa$std 0001                           ___awmod@counter 000A  
                        flushBuffer@F2581 0100                     displayTime@timeString 00BF  
                          printString@str 0046                         displayAlarmTime@i 00C4  
             FLASH_WriteBlock@dataCounter 0017                         ?_displayAlarmTime 0001  
                            __mediumconst F7F8                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                   __end_of_TMR0_CallBack 1072                              _checkButtons 009C  
                      ??_displayAlarmTime 0050  TMR0_SetInterruptHandler@InterruptHandler 0006  
                            ?_printString 0046                         _SYSTEM_Initialize 1072  
                              __accesstop 0060                   __end_of__initialization 103A  
                      ?_SYSTEM_Initialize 0001                __end_of_PWM2_LoadDutyValue 1016  
                           ___rparam_used 0001      __end_of_EUSART_SetTxInterruptHandler 114A  
            _EUSART_SetTxInterruptHandler 1140                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 000A                                 ?_TMR0_ISR 0001  
                            _alarmMinutes 00A8                          ?_TMR2_Initialize 0001  
         __end_of_MAX7219_Dot_Matrix_font FFF9               FLASH_WriteBlock@GIEBitValue 0014  
                            _clearDisplay 0F12                          ?_TMR0_StartTimer 0001  
               __end_of_SYSTEM_Initialize 1094                            flushBuffer@dev 003E  
                          flushBuffer@row 0042                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                _alarmHours 00A9  
                              _clearAlarm 1120             displayAlarmTime@displayString 00BA  
                            flushBuffer@i 0044                              flushBuffer@j 0040  
                         _saveTimeToFlash 0D5C             ?_EUSART_SetTxInterruptHandler 0006  
        _EUSART_TxDefaultInterruptHandler 00FA          __end_of_TMR0_SetInterruptHandler 1136  
                              _blinkTimer 009E                                ??_TMR0_ISR 0001  
                                 _CCP2CON 0FBA                                   _BAUDCON 0FB8  
                          _FLASH_ReadByte 10D0                             _eusartRxCount 00AD  
                       __end_of_btGetData 0D5C                                   _TBLPTRH 0FF7  
                                 _TBLPTRL 0FF6                                   _TBLPTRU 0FF8  
                                 _OSCTUNE 0F9B                                   _SSPCON1 0FC6  
                                 _SSPSTAT 0FC7                          _FLASH_EraseBlock 0F7E  
                        ??_SPI_Initialize 0006       EUSART_SetTxInterruptHandler@handler 0006  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___awdiv 086C                                   ___awmod 0C0E  
                        _isButton3Pressed 00A3                    __end_of_FLASH_ReadByte 10E2  
                                 __pcinit 1016                                   __ramtop 1000  
                              _matrixInit 0F4A                                   __ptext0 07A8  
                                 __ptext1 0DDA                                   __ptext2 06DE  
                                 __ptext3 0F12                                   __ptext4 0FE6  
                                 __ptext5 0F4A                                   __ptext6 0E2C  
                                 __ptext7 09F0                                   __ptext8 009C  
                                 __ptext9 0D5C                                 _T0CONbits 0FD5  
                           ??_max7219_cmd 0008                     _OSCILLATOR_Initialize 1136  
                               _T2CONbits 0FCA                          ___awmod@dividend 0006  
                       __end_of_max_write 09F0                                   _minutes 00AB  
                ??_PIN_MANAGER_Initialize 0006                                   _seconds 00AA  
                       ?_SPI_Exchange8bit 0001                      end_of_initialization 103A  
                         printString@data 00B1                             triggerAlarm@i 00BC  
                      ??_SPI_Exchange8bit 0006                           printString@indx 00AF  
                    SPI_Exchange8bit@data 0006                   __end_of_saveTimeToFlash 0DDA  
                           _calculateTime 0ECC                               ?_clearAlarm 0001  
                       _EUSART_Initialize 0E7E                              max_write@dev 0017  
                              _uartBuffer 0080                              btGetData@rcv 0001  
                      ?_EUSART_Initialize 0001                              max_write@row 000E  
                               _RCSTAbits 0FAB                                   postinc0 0FEE  
                                 postinc2 0FDE                           ?_FLASH_ReadByte 0006  
                     ??_EUSART_Initialize 0008                          saveTimeToFlash@i 00F3  
          ??_EUSART_SetTxInterruptHandler 0008                         _loadTimeFromFlash 09F0  
                _TMR0_SetInterruptHandler 112C                             ?_processAlarm 0001  
                               _PORTBbits 0F81                             clearDisplay@i 0046  
                      ?_loadTimeFromFlash 0001             FLASH_WriteBlock@flashWrBufPtr 000F  
                     ??_loadTimeFromFlash 000A                       __end_of_max7219_cmd 0E7E  
                FLASH_EraseBlock@baseAddr 0006                 __end_of_EUSART_Initialize 0ECC  
                          ?_calculateTime 0001                                 _TXSTAbits 0FAC  
                       FLASH_WriteBlock@i 0018                         FLASH_WriteBlock@j 0015  
              saveTimeToFlash@flashBuffer 00AF              __end_of_INTERRUPT_Initialize 1162  
                           ??_displayTime 0050                 __end_of_loadTimeFromFlash 0AA6  
                          ??_processAlarm 0052                        _PWM2_LoadDutyValue 0FE6  
                             ?_matrixInit 0001              checkButtons@alarmSettingMode 00A0  
                        _FLASH_WriteBlock 05F4                    ?_OSCILLATOR_Initialize 0001  
                     start_initialization 1016                       ?_PWM2_LoadDutyValue 0006  
                           ?_triggerAlarm 0001                          ?_saveTimeToFlash 0001  
                      printString@strindx 00B2                             ??_flushBuffer 001B  
                    ??_PWM2_LoadDutyValue 0008               PWM2_LoadDutyValue@dutyValue 0006  
         displayAlarmTime@alarmTimeString 00BF               FLASH_EraseBlock@GIEBitValue 000A  
                __end_of_FLASH_EraseBlock 0FB2                       __end_of_displayTime 0B5A  
                             _max7219_cmd 0E2C                               __pbssCOMRAM 0052  
                             _alarmActive 00A6                             __pcstackBANK0 00AF  
                          ??_triggerAlarm 0050                              max7219_cmd@i 000D  
                               _btGetData 0CBE                           ??_calculateTime 0001  
        _EUSART_RxDefaultInterruptHandler 00F8                     _TMR0_InterruptHandler 00F6  
                 _MAX7219_Dot_Matrix_font F7F9                                 __pnvBANK0 00F6  
                               _btTimeSet 00A2                    _PIN_MANAGER_Initialize 1094  
                               __pintcode 0008                             __pmediumconst F7F8  
                                ?___awdiv 0006                                  ?___awmod 0006  
                            _eusartRxHead 0055                              _eusartTxHead 0058  
                            _eusartRxTail 00AE                       __end_of_flushBuffer 05F4  
                            _eusartTxTail 0057                                 _bufferCol 0060  
            ??_INTERRUPT_InterruptManager 0002                   _eusartTxBufferRemaining 0056  
                           _TMR0_CallBack 1044                                 _max_write 0930  
                    _INTERRUPT_Initialize 115E                                ?_btGetData 0001  
          FLASH_WriteBlock@blockStartAddr 0010                            _eusartRxBuffer 008A  
                       ??_TMR0_Initialize 0008                         ??_PWM2_Initialize 0006  
                          _eusartTxBuffer 0092                      __end_of_processAlarm 0E2C  
                                _LATCbits 0F8B                              ??_clearAlarm 0006  
                                _PIE1bits 0F9D                          _displayAlarmTime 0B5A  
                                i2u130_40 0EE0                                  i2u130_41 0EDC  
                                i2u131_40 0EF6                                  i2u131_41 0EF2  
                                i2u132_40 0F0C                                  i2u132_41 0F08  
                                i2u224_40 0028                                  i2u224_41 0024  
                                i2u225_40 0036                                  i2u225_41 0032  
                         max_write@offset 0013                                  i2u226_40 004C  
                                i2u226_41 0048                                  i2u163_40 1058  
                                i2u227_40 005A                                  i2u163_41 1054  
                                i2u227_41 0056                                  i2u228_40 006E  
                                i2u228_41 006A                                  i2u164_48 105E  
                                i2u229_40 007C                ??_TMR0_SetInterruptHandler 0008  
                                i2u164_49 1070                                  i2u229_41 0078  
                                i2u174_40 0CD2                                  i2u174_41 0CCE  
                                i2u175_40 0CE2                                  i2u175_41 0CDE  
                                i2u176_40 0D04                                  i2u176_41 0D00  
                                i2u177_40 0D14                                  i2u177_41 0D10  
                                _PIR1bits 0F9E                                  i2u178_40 0D36  
                                i2u178_41 0D32                          ??_FLASH_ReadByte 000A  
                                i2u179_40 0D48                                  i2u179_41 0D44  
                                _PIR2bits 0FA1                                  _RCONbits 0FD0  
                                _TMR0_ISR 10F4                               _displayTime 0AA6  
                      __end_of_clearAlarm 112C                             ?_checkButtons 0001  
                          ?_TMR0_CallBack 0001                               _INTCON2bits 0FF1  
                              ?_max_write 000E                     ?_INTERRUPT_Initialize 0001  
                           ??_printString 0048                         ??_TMR2_Initialize 0006  
                __end_of_FLASH_WriteBlock 06DE                                _EECON1bits 0FA6  
                                __Hrparam 0000                               _flushBuffer 04C6  
                                __Lrparam 0000                        max_write@devTarget 0015  
                 ??_OSCILLATOR_Initialize 0006                      __end_of_triggerAlarm 07A8  
                       ??_TMR0_StartTimer 0006                              ??_matrixInit 000F  
                         main@minutes_pom 00F5                                  _alarmSet 00A7  
                          ??_checkButtons 0050                             ?_clearDisplay 0001  
                                __ptext10 05F4                                  __ptext11 0F7E  
                                __ptext20 0C0E                                  __ptext12 10D0  
                                __ptext21 1120                                  __ptext13 0AA6  
                                __ptext30 1136                                  __ptext22 115A  
                                __ptext14 0B5A                                  __ptext31 115E  
                                __ptext23 1072                                  __ptext15 0332  
                                __ptext40 0ECC                                  __ptext32 0E7E  
                                __ptext24 10E2                                  __ptext16 04C6  
                                __ptext33 1140                                  __ptext25 0FB2  
                                __ptext17 0930                                  __ptext34 114A  
                                __ptext26 112C                                  __ptext18 086C  
                                __ptext27 1104                                  __ptext19 10B6  
                                __ptext36 0CBE                                  __ptext28 1112  
                                __ptext37 10F4                                  __ptext29 1094  
                                __ptext38 1044                                  __ptext39 1154  
                             ??_btGetData 0001      __end_of_TMR0_DefaultInterruptHandler 115A  
            _TMR0_DefaultInterruptHandler 1154                        __end_of_matrixInit 0F7E  
                     __end_of_printString 04C6                      flushBuffer@bufferRow 001E  
                         _displayBlinking 00A4                                  isa$xinst 0000  
                    max7219_cmd@writeData 000B                                  int$flags 0059  
      __end_of_INTERRUPT_InterruptManager 0098                _INTERRUPT_InterruptManager 0008  
                       ?_FLASH_EraseBlock 0006       FLASH_WriteBlock@numberOfWriteBlocks 0016  
                            ?_max7219_cmd 0007                        ??_FLASH_EraseBlock 000A  
                              _INTCONbits 0FF2                           ??_TMR0_CallBack 0001  
                         _uartBufferIndex 0054                            ??_clearDisplay 0046  
                  ??_INTERRUPT_Initialize 0006                        max_write@writeData 0019  
                             ??_max_write 0011                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0001      __end_of_EUSART_SetRxInterruptHandler 1154  
            _EUSART_SetRxInterruptHandler 114A                             max_write@data 0010  
           ?_TMR0_DefaultInterruptHandler 0001                          _SPI_Exchange8bit 10B6  
                      _EUSART_Receive_ISR 0000                  displayTime@displayString 00BA  
                            _processAlarm 0DDA                  __end_of_displayAlarmTime 0C0E  
                         _TMR0_Initialize 0FB2                           _PWM2_Initialize 1112  
           checkButtons@button3PressCount 00A1                               _SSPCON1bits 0FC6  
          __end_of_PIN_MANAGER_Initialize 10B6                               _printString 0332  
                   __end_of_calculateTime 0F12  
