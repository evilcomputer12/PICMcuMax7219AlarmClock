

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 12 01:05:17 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 05/01/2024 GMT
    63                           ; 
    64                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F26K20 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97 ;; Function _EUSART_Transmit_ISR is unused but had its address taken
    98   000000                     
    99 ;; Function _EUSART_Receive_ISR is unused but had its address taken
   100   000000                     
   101                           	psect	mediumconst
   102   00F7F8                     __pmediumconst:
   103                           	callstack 0
   104   00F7F8  00                 	db	0
   105   00F7F9                     _MAX7219_Dot_Matrix_font:
   106                           	callstack 0
   107   00F7F9  00                 	db	0
   108   00F7FA  00                 	db	0
   109   00F7FB  00                 	db	0
   110   00F7FC  00                 	db	0
   111   00F7FD  00                 	db	0
   112   00F7FE  00                 	db	0
   113   00F7FF  00                 	db	0
   114   00F800  00                 	db	0
   115   00F801  7E                 	db	126
   116   00F802  81                 	db	129
   117   00F803  95                 	db	149
   118   00F804  B1                 	db	177
   119   00F805  B1                 	db	177
   120   00F806  95                 	db	149
   121   00F807  81                 	db	129
   122   00F808  7E                 	db	126
   123   00F809  7E                 	db	126
   124   00F80A  FF                 	db	255
   125   00F80B  EB                 	db	235
   126   00F80C  CF                 	db	207
   127   00F80D  CF                 	db	207
   128   00F80E  EB                 	db	235
   129   00F80F  FF                 	db	255
   130   00F810  7E                 	db	126
   131   00F811  0E                 	db	14
   132   00F812  1F                 	db	31
   133   00F813  3F                 	db	63
   134   00F814  7E                 	db	126
   135   00F815  3F                 	db	63
   136   00F816  1F                 	db	31
   137   00F817  0E                 	db	14
   138   00F818  00                 	db	0
   139   00F819  08                 	db	8
   140   00F81A  1C                 	db	28
   141   00F81B  3E                 	db	62
   142   00F81C  7F                 	db	127
   143   00F81D  3E                 	db	62
   144   00F81E  1C                 	db	28
   145   00F81F  08                 	db	8
   146   00F820  00                 	db	0
   147   00F821  18                 	db	24
   148   00F822  BA                 	db	186
   149   00F823  FF                 	db	255
   150   00F824  FF                 	db	255
   151   00F825  FF                 	db	255
   152   00F826  BA                 	db	186
   153   00F827  18                 	db	24
   154   00F828  00                 	db	0
   155   00F829  10                 	db	16
   156   00F82A  B8                 	db	184
   157   00F82B  FC                 	db	252
   158   00F82C  FF                 	db	255
   159   00F82D  FC                 	db	252
   160   00F82E  B8                 	db	184
   161   00F82F  10                 	db	16
   162   00F830  00                 	db	0
   163   00F831  00                 	db	0
   164   00F832  00                 	db	0
   165   00F833  18                 	db	24
   166   00F834  3C                 	db	60
   167   00F835  3C                 	db	60
   168   00F836  18                 	db	24
   169   00F837  00                 	db	0
   170   00F838  00                 	db	0
   171   00F839  FF                 	db	255
   172   00F83A  FF                 	db	255
   173   00F83B  E7                 	db	231
   174   00F83C  C3                 	db	195
   175   00F83D  C3                 	db	195
   176   00F83E  E7                 	db	231
   177   00F83F  FF                 	db	255
   178   00F840  FF                 	db	255
   179   00F841  00                 	db	0
   180   00F842  3C                 	db	60
   181   00F843  66                 	db	102
   182   00F844  42                 	db	66
   183   00F845  42                 	db	66
   184   00F846  66                 	db	102
   185   00F847  3C                 	db	60
   186   00F848  00                 	db	0
   187   00F849  FF                 	db	255
   188   00F84A  C3                 	db	195
   189   00F84B  99                 	db	153
   190   00F84C  BD                 	db	189
   191   00F84D  BD                 	db	189
   192   00F84E  99                 	db	153
   193   00F84F  C3                 	db	195
   194   00F850  FF                 	db	255
   195   00F851  70                 	db	112
   196   00F852  F8                 	db	248
   197   00F853  88                 	db	136
   198   00F854  88                 	db	136
   199   00F855  FD                 	db	253
   200   00F856  7F                 	db	127
   201   00F857  07                 	db	7
   202   00F858  0F                 	db	15
   203   00F859  00                 	db	0
   204   00F85A  4E                 	db	78
   205   00F85B  5F                 	db	95
   206   00F85C  F1                 	db	241
   207   00F85D  F1                 	db	241
   208   00F85E  5F                 	db	95
   209   00F85F  4E                 	db	78
   210   00F860  00                 	db	0
   211   00F861  C0                 	db	192
   212   00F862  E0                 	db	224
   213   00F863  FF                 	db	255
   214   00F864  7F                 	db	127
   215   00F865  05                 	db	5
   216   00F866  05                 	db	5
   217   00F867  07                 	db	7
   218   00F868  07                 	db	7
   219   00F869  C0                 	db	192
   220   00F86A  FF                 	db	255
   221   00F86B  7F                 	db	127
   222   00F86C  05                 	db	5
   223   00F86D  05                 	db	5
   224   00F86E  65                 	db	101
   225   00F86F  7F                 	db	127
   226   00F870  3F                 	db	63
   227   00F871  99                 	db	153
   228   00F872  5A                 	db	90
   229   00F873  3C                 	db	60
   230   00F874  E7                 	db	231
   231   00F875  E7                 	db	231
   232   00F876  3C                 	db	60
   233   00F877  5A                 	db	90
   234   00F878  99                 	db	153
   235   00F879  7F                 	db	127
   236   00F87A  3E                 	db	62
   237   00F87B  3E                 	db	62
   238   00F87C  1C                 	db	28
   239   00F87D  1C                 	db	28
   240   00F87E  08                 	db	8
   241   00F87F  08                 	db	8
   242   00F880  00                 	db	0
   243   00F881  08                 	db	8
   244   00F882  08                 	db	8
   245   00F883  1C                 	db	28
   246   00F884  1C                 	db	28
   247   00F885  3E                 	db	62
   248   00F886  3E                 	db	62
   249   00F887  7F                 	db	127
   250   00F888  00                 	db	0
   251   00F889  00                 	db	0
   252   00F88A  24                 	db	36
   253   00F88B  66                 	db	102
   254   00F88C  FF                 	db	255
   255   00F88D  FF                 	db	255
   256   00F88E  66                 	db	102
   257   00F88F  24                 	db	36
   258   00F890  00                 	db	0
   259   00F891  00                 	db	0
   260   00F892  5F                 	db	95
   261   00F893  5F                 	db	95
   262   00F894  00                 	db	0
   263   00F895  00                 	db	0
   264   00F896  5F                 	db	95
   265   00F897  5F                 	db	95
   266   00F898  00                 	db	0
   267   00F899  06                 	db	6
   268   00F89A  0F                 	db	15
   269   00F89B  09                 	db	9
   270   00F89C  7F                 	db	127
   271   00F89D  7F                 	db	127
   272   00F89E  01                 	db	1
   273   00F89F  7F                 	db	127
   274   00F8A0  7F                 	db	127
   275   00F8A1  40                 	db	64
   276   00F8A2  DA                 	db	218
   277   00F8A3  BF                 	db	191
   278   00F8A4  A5                 	db	165
   279   00F8A5  FD                 	db	253
   280   00F8A6  59                 	db	89
   281   00F8A7  03                 	db	3
   282   00F8A8  02                 	db	2
   283   00F8A9  00                 	db	0
   284   00F8AA  70                 	db	112
   285   00F8AB  70                 	db	112
   286   00F8AC  70                 	db	112
   287   00F8AD  70                 	db	112
   288   00F8AE  70                 	db	112
   289   00F8AF  70                 	db	112
   290   00F8B0  00                 	db	0
   291   00F8B1  80                 	db	128
   292   00F8B2  94                 	db	148
   293   00F8B3  B6                 	db	182
   294   00F8B4  FF                 	db	255
   295   00F8B5  FF                 	db	255
   296   00F8B6  B6                 	db	182
   297   00F8B7  94                 	db	148
   298   00F8B8  80                 	db	128
   299   00F8B9  00                 	db	0
   300   00F8BA  04                 	db	4
   301   00F8BB  06                 	db	6
   302   00F8BC  7F                 	db	127
   303   00F8BD  7F                 	db	127
   304   00F8BE  06                 	db	6
   305   00F8BF  04                 	db	4
   306   00F8C0  00                 	db	0
   307   00F8C1  00                 	db	0
   308   00F8C2  10                 	db	16
   309   00F8C3  30                 	db	48
   310   00F8C4  7F                 	db	127
   311   00F8C5  7F                 	db	127
   312   00F8C6  30                 	db	48
   313   00F8C7  10                 	db	16
   314   00F8C8  00                 	db	0
   315   00F8C9  08                 	db	8
   316   00F8CA  08                 	db	8
   317   00F8CB  08                 	db	8
   318   00F8CC  2A                 	db	42
   319   00F8CD  3E                 	db	62
   320   00F8CE  1C                 	db	28
   321   00F8CF  08                 	db	8
   322   00F8D0  00                 	db	0
   323   00F8D1  08                 	db	8
   324   00F8D2  1C                 	db	28
   325   00F8D3  3E                 	db	62
   326   00F8D4  2A                 	db	42
   327   00F8D5  08                 	db	8
   328   00F8D6  08                 	db	8
   329   00F8D7  08                 	db	8
   330   00F8D8  00                 	db	0
   331   00F8D9  3C                 	db	60
   332   00F8DA  3C                 	db	60
   333   00F8DB  20                 	db	32
   334   00F8DC  20                 	db	32
   335   00F8DD  20                 	db	32
   336   00F8DE  20                 	db	32
   337   00F8DF  20                 	db	32
   338   00F8E0  00                 	db	0
   339   00F8E1  08                 	db	8
   340   00F8E2  1C                 	db	28
   341   00F8E3  3E                 	db	62
   342   00F8E4  08                 	db	8
   343   00F8E5  08                 	db	8
   344   00F8E6  3E                 	db	62
   345   00F8E7  1C                 	db	28
   346   00F8E8  08                 	db	8
   347   00F8E9  30                 	db	48
   348   00F8EA  38                 	db	56
   349   00F8EB  3C                 	db	60
   350   00F8EC  3E                 	db	62
   351   00F8ED  3E                 	db	62
   352   00F8EE  3C                 	db	60
   353   00F8EF  38                 	db	56
   354   00F8F0  30                 	db	48
   355   00F8F1  06                 	db	6
   356   00F8F2  0E                 	db	14
   357   00F8F3  1E                 	db	30
   358   00F8F4  3E                 	db	62
   359   00F8F5  3E                 	db	62
   360   00F8F6  1E                 	db	30
   361   00F8F7  0E                 	db	14
   362   00F8F8  06                 	db	6
   363   00F8F9  00                 	db	0
   364   00F8FA  00                 	db	0
   365   00F8FB  00                 	db	0
   366   00F8FC  00                 	db	0
   367   00F8FD  00                 	db	0
   368   00F8FE  00                 	db	0
   369   00F8FF  00                 	db	0
   370   00F900  00                 	db	0
   371   00F901  00                 	db	0
   372   00F902  06                 	db	6
   373   00F903  5F                 	db	95
   374   00F904  5F                 	db	95
   375   00F905  06                 	db	6
   376   00F906  00                 	db	0
   377   00F907  00                 	db	0
   378   00F908  00                 	db	0
   379   00F909  00                 	db	0
   380   00F90A  07                 	db	7
   381   00F90B  07                 	db	7
   382   00F90C  00                 	db	0
   383   00F90D  07                 	db	7
   384   00F90E  07                 	db	7
   385   00F90F  00                 	db	0
   386   00F910  00                 	db	0
   387   00F911  14                 	db	20
   388   00F912  7F                 	db	127
   389   00F913  7F                 	db	127
   390   00F914  14                 	db	20
   391   00F915  7F                 	db	127
   392   00F916  7F                 	db	127
   393   00F917  14                 	db	20
   394   00F918  00                 	db	0
   395   00F919  24                 	db	36
   396   00F91A  2E                 	db	46
   397   00F91B  6B                 	db	107
   398   00F91C  6B                 	db	107
   399   00F91D  3A                 	db	58
   400   00F91E  12                 	db	18
   401   00F91F  00                 	db	0
   402   00F920  00                 	db	0
   403   00F921  46                 	db	70
   404   00F922  66                 	db	102
   405   00F923  30                 	db	48
   406   00F924  18                 	db	24
   407   00F925  0C                 	db	12
   408   00F926  66                 	db	102
   409   00F927  62                 	db	98
   410   00F928  00                 	db	0
   411   00F929  30                 	db	48
   412   00F92A  7A                 	db	122
   413   00F92B  4F                 	db	79
   414   00F92C  5D                 	db	93
   415   00F92D  37                 	db	55
   416   00F92E  7A                 	db	122
   417   00F92F  48                 	db	72
   418   00F930  00                 	db	0
   419   00F931  04                 	db	4
   420   00F932  07                 	db	7
   421   00F933  03                 	db	3
   422   00F934  00                 	db	0
   423   00F935  00                 	db	0
   424   00F936  00                 	db	0
   425   00F937  00                 	db	0
   426   00F938  00                 	db	0
   427   00F939  00                 	db	0
   428   00F93A  1C                 	db	28
   429   00F93B  3E                 	db	62
   430   00F93C  63                 	db	99
   431   00F93D  41                 	db	65
   432   00F93E  00                 	db	0
   433   00F93F  00                 	db	0
   434   00F940  00                 	db	0
   435   00F941  00                 	db	0
   436   00F942  41                 	db	65
   437   00F943  63                 	db	99
   438   00F944  3E                 	db	62
   439   00F945  1C                 	db	28
   440   00F946  00                 	db	0
   441   00F947  00                 	db	0
   442   00F948  00                 	db	0
   443   00F949  08                 	db	8
   444   00F94A  2A                 	db	42
   445   00F94B  3E                 	db	62
   446   00F94C  1C                 	db	28
   447   00F94D  1C                 	db	28
   448   00F94E  3E                 	db	62
   449   00F94F  2A                 	db	42
   450   00F950  08                 	db	8
   451   00F951  08                 	db	8
   452   00F952  08                 	db	8
   453   00F953  3E                 	db	62
   454   00F954  3E                 	db	62
   455   00F955  08                 	db	8
   456   00F956  08                 	db	8
   457   00F957  00                 	db	0
   458   00F958  00                 	db	0
   459   00F959  00                 	db	0
   460   00F95A  80                 	db	128
   461   00F95B  E0                 	db	224
   462   00F95C  60                 	db	96
   463   00F95D  00                 	db	0
   464   00F95E  00                 	db	0
   465   00F95F  00                 	db	0
   466   00F960  00                 	db	0
   467   00F961  08                 	db	8
   468   00F962  08                 	db	8
   469   00F963  08                 	db	8
   470   00F964  08                 	db	8
   471   00F965  08                 	db	8
   472   00F966  08                 	db	8
   473   00F967  00                 	db	0
   474   00F968  00                 	db	0
   475   00F969  00                 	db	0
   476   00F96A  00                 	db	0
   477   00F96B  60                 	db	96
   478   00F96C  60                 	db	96
   479   00F96D  00                 	db	0
   480   00F96E  00                 	db	0
   481   00F96F  00                 	db	0
   482   00F970  00                 	db	0
   483   00F971  60                 	db	96
   484   00F972  30                 	db	48
   485   00F973  18                 	db	24
   486   00F974  0C                 	db	12
   487   00F975  06                 	db	6
   488   00F976  03                 	db	3
   489   00F977  01                 	db	1
   490   00F978  00                 	db	0
   491   00F979  3E                 	db	62
   492   00F97A  7F                 	db	127
   493   00F97B  71                 	db	113
   494   00F97C  59                 	db	89
   495   00F97D  4D                 	db	77
   496   00F97E  7F                 	db	127
   497   00F97F  3E                 	db	62
   498   00F980  00                 	db	0
   499   00F981  40                 	db	64
   500   00F982  42                 	db	66
   501   00F983  7F                 	db	127
   502   00F984  7F                 	db	127
   503   00F985  40                 	db	64
   504   00F986  40                 	db	64
   505   00F987  00                 	db	0
   506   00F988  00                 	db	0
   507   00F989  62                 	db	98
   508   00F98A  73                 	db	115
   509   00F98B  59                 	db	89
   510   00F98C  49                 	db	73
   511   00F98D  6F                 	db	111
   512   00F98E  66                 	db	102
   513   00F98F  00                 	db	0
   514   00F990  00                 	db	0
   515   00F991  22                 	db	34
   516   00F992  63                 	db	99
   517   00F993  49                 	db	73
   518   00F994  49                 	db	73
   519   00F995  7F                 	db	127
   520   00F996  36                 	db	54
   521   00F997  00                 	db	0
   522   00F998  00                 	db	0
   523   00F999  18                 	db	24
   524   00F99A  1C                 	db	28
   525   00F99B  16                 	db	22
   526   00F99C  53                 	db	83
   527   00F99D  7F                 	db	127
   528   00F99E  7F                 	db	127
   529   00F99F  50                 	db	80
   530   00F9A0  00                 	db	0
   531   00F9A1  27                 	db	39
   532   00F9A2  67                 	db	103
   533   00F9A3  45                 	db	69
   534   00F9A4  45                 	db	69
   535   00F9A5  7D                 	db	125
   536   00F9A6  39                 	db	57
   537   00F9A7  00                 	db	0
   538   00F9A8  00                 	db	0
   539   00F9A9  3C                 	db	60
   540   00F9AA  7E                 	db	126
   541   00F9AB  4B                 	db	75
   542   00F9AC  49                 	db	73
   543   00F9AD  79                 	db	121
   544   00F9AE  30                 	db	48
   545   00F9AF  00                 	db	0
   546   00F9B0  00                 	db	0
   547   00F9B1  03                 	db	3
   548   00F9B2  03                 	db	3
   549   00F9B3  71                 	db	113
   550   00F9B4  79                 	db	121
   551   00F9B5  0F                 	db	15
   552   00F9B6  07                 	db	7
   553   00F9B7  00                 	db	0
   554   00F9B8  00                 	db	0
   555   00F9B9  36                 	db	54
   556   00F9BA  7F                 	db	127
   557   00F9BB  49                 	db	73
   558   00F9BC  49                 	db	73
   559   00F9BD  7F                 	db	127
   560   00F9BE  36                 	db	54
   561   00F9BF  00                 	db	0
   562   00F9C0  00                 	db	0
   563   00F9C1  06                 	db	6
   564   00F9C2  4F                 	db	79
   565   00F9C3  49                 	db	73
   566   00F9C4  69                 	db	105
   567   00F9C5  3F                 	db	63
   568   00F9C6  1E                 	db	30
   569   00F9C7  00                 	db	0
   570   00F9C8  00                 	db	0
   571   00F9C9  00                 	db	0
   572   00F9CA  00                 	db	0
   573   00F9CB  66                 	db	102
   574   00F9CC  66                 	db	102
   575   00F9CD  00                 	db	0
   576   00F9CE  00                 	db	0
   577   00F9CF  00                 	db	0
   578   00F9D0  00                 	db	0
   579   00F9D1  00                 	db	0
   580   00F9D2  80                 	db	128
   581   00F9D3  E6                 	db	230
   582   00F9D4  66                 	db	102
   583   00F9D5  00                 	db	0
   584   00F9D6  00                 	db	0
   585   00F9D7  00                 	db	0
   586   00F9D8  00                 	db	0
   587   00F9D9  08                 	db	8
   588   00F9DA  1C                 	db	28
   589   00F9DB  36                 	db	54
   590   00F9DC  63                 	db	99
   591   00F9DD  41                 	db	65
   592   00F9DE  00                 	db	0
   593   00F9DF  00                 	db	0
   594   00F9E0  00                 	db	0
   595   00F9E1  24                 	db	36
   596   00F9E2  24                 	db	36
   597   00F9E3  24                 	db	36
   598   00F9E4  24                 	db	36
   599   00F9E5  24                 	db	36
   600   00F9E6  24                 	db	36
   601   00F9E7  00                 	db	0
   602   00F9E8  00                 	db	0
   603   00F9E9  00                 	db	0
   604   00F9EA  41                 	db	65
   605   00F9EB  63                 	db	99
   606   00F9EC  36                 	db	54
   607   00F9ED  1C                 	db	28
   608   00F9EE  08                 	db	8
   609   00F9EF  00                 	db	0
   610   00F9F0  00                 	db	0
   611   00F9F1  02                 	db	2
   612   00F9F2  03                 	db	3
   613   00F9F3  51                 	db	81
   614   00F9F4  59                 	db	89
   615   00F9F5  0F                 	db	15
   616   00F9F6  06                 	db	6
   617   00F9F7  00                 	db	0
   618   00F9F8  00                 	db	0
   619   00F9F9  3E                 	db	62
   620   00F9FA  7F                 	db	127
   621   00F9FB  41                 	db	65
   622   00F9FC  5D                 	db	93
   623   00F9FD  5D                 	db	93
   624   00F9FE  1F                 	db	31
   625   00F9FF  1E                 	db	30
   626   00FA00  00                 	db	0
   627   00FA01  7C                 	db	124
   628   00FA02  7E                 	db	126
   629   00FA03  13                 	db	19
   630   00FA04  13                 	db	19
   631   00FA05  7E                 	db	126
   632   00FA06  7C                 	db	124
   633   00FA07  00                 	db	0
   634   00FA08  00                 	db	0
   635   00FA09  41                 	db	65
   636   00FA0A  7F                 	db	127
   637   00FA0B  7F                 	db	127
   638   00FA0C  49                 	db	73
   639   00FA0D  49                 	db	73
   640   00FA0E  7F                 	db	127
   641   00FA0F  36                 	db	54
   642   00FA10  00                 	db	0
   643   00FA11  1C                 	db	28
   644   00FA12  3E                 	db	62
   645   00FA13  63                 	db	99
   646   00FA14  41                 	db	65
   647   00FA15  41                 	db	65
   648   00FA16  63                 	db	99
   649   00FA17  22                 	db	34
   650   00FA18  00                 	db	0
   651   00FA19  41                 	db	65
   652   00FA1A  7F                 	db	127
   653   00FA1B  7F                 	db	127
   654   00FA1C  41                 	db	65
   655   00FA1D  63                 	db	99
   656   00FA1E  3E                 	db	62
   657   00FA1F  1C                 	db	28
   658   00FA20  00                 	db	0
   659   00FA21  41                 	db	65
   660   00FA22  7F                 	db	127
   661   00FA23  7F                 	db	127
   662   00FA24  49                 	db	73
   663   00FA25  5D                 	db	93
   664   00FA26  41                 	db	65
   665   00FA27  63                 	db	99
   666   00FA28  00                 	db	0
   667   00FA29  41                 	db	65
   668   00FA2A  7F                 	db	127
   669   00FA2B  7F                 	db	127
   670   00FA2C  49                 	db	73
   671   00FA2D  1D                 	db	29
   672   00FA2E  01                 	db	1
   673   00FA2F  03                 	db	3
   674   00FA30  00                 	db	0
   675   00FA31  1C                 	db	28
   676   00FA32  3E                 	db	62
   677   00FA33  63                 	db	99
   678   00FA34  41                 	db	65
   679   00FA35  51                 	db	81
   680   00FA36  73                 	db	115
   681   00FA37  72                 	db	114
   682   00FA38  00                 	db	0
   683   00FA39  7F                 	db	127
   684   00FA3A  7F                 	db	127
   685   00FA3B  08                 	db	8
   686   00FA3C  08                 	db	8
   687   00FA3D  7F                 	db	127
   688   00FA3E  7F                 	db	127
   689   00FA3F  00                 	db	0
   690   00FA40  00                 	db	0
   691   00FA41  00                 	db	0
   692   00FA42  41                 	db	65
   693   00FA43  7F                 	db	127
   694   00FA44  7F                 	db	127
   695   00FA45  41                 	db	65
   696   00FA46  00                 	db	0
   697   00FA47  00                 	db	0
   698   00FA48  00                 	db	0
   699   00FA49  30                 	db	48
   700   00FA4A  70                 	db	112
   701   00FA4B  40                 	db	64
   702   00FA4C  41                 	db	65
   703   00FA4D  7F                 	db	127
   704   00FA4E  3F                 	db	63
   705   00FA4F  01                 	db	1
   706   00FA50  00                 	db	0
   707   00FA51  41                 	db	65
   708   00FA52  7F                 	db	127
   709   00FA53  7F                 	db	127
   710   00FA54  08                 	db	8
   711   00FA55  1C                 	db	28
   712   00FA56  77                 	db	119
   713   00FA57  63                 	db	99
   714   00FA58  00                 	db	0
   715   00FA59  41                 	db	65
   716   00FA5A  7F                 	db	127
   717   00FA5B  7F                 	db	127
   718   00FA5C  41                 	db	65
   719   00FA5D  40                 	db	64
   720   00FA5E  60                 	db	96
   721   00FA5F  70                 	db	112
   722   00FA60  00                 	db	0
   723   00FA61  00                 	db	0
   724   00FA62  7F                 	db	127
   725   00FA63  0E                 	db	14
   726   00FA64  1C                 	db	28
   727   00FA65  0E                 	db	14
   728   00FA66  7F                 	db	127
   729   00FA67  00                 	db	0
   730   00FA68  00                 	db	0
   731   00FA69  7F                 	db	127
   732   00FA6A  7F                 	db	127
   733   00FA6B  06                 	db	6
   734   00FA6C  0C                 	db	12
   735   00FA6D  18                 	db	24
   736   00FA6E  7F                 	db	127
   737   00FA6F  7F                 	db	127
   738   00FA70  00                 	db	0
   739   00FA71  1C                 	db	28
   740   00FA72  3E                 	db	62
   741   00FA73  63                 	db	99
   742   00FA74  41                 	db	65
   743   00FA75  63                 	db	99
   744   00FA76  3E                 	db	62
   745   00FA77  1C                 	db	28
   746   00FA78  00                 	db	0
   747   00FA79  41                 	db	65
   748   00FA7A  7F                 	db	127
   749   00FA7B  7F                 	db	127
   750   00FA7C  49                 	db	73
   751   00FA7D  09                 	db	9
   752   00FA7E  0F                 	db	15
   753   00FA7F  06                 	db	6
   754   00FA80  00                 	db	0
   755   00FA81  1E                 	db	30
   756   00FA82  3F                 	db	63
   757   00FA83  21                 	db	33
   758   00FA84  71                 	db	113
   759   00FA85  7F                 	db	127
   760   00FA86  5E                 	db	94
   761   00FA87  00                 	db	0
   762   00FA88  00                 	db	0
   763   00FA89  41                 	db	65
   764   00FA8A  7F                 	db	127
   765   00FA8B  7F                 	db	127
   766   00FA8C  09                 	db	9
   767   00FA8D  19                 	db	25
   768   00FA8E  7F                 	db	127
   769   00FA8F  66                 	db	102
   770   00FA90  00                 	db	0
   771   00FA91  26                 	db	38
   772   00FA92  6F                 	db	111
   773   00FA93  4D                 	db	77
   774   00FA94  59                 	db	89
   775   00FA95  73                 	db	115
   776   00FA96  32                 	db	50
   777   00FA97  00                 	db	0
   778   00FA98  00                 	db	0
   779   00FA99  03                 	db	3
   780   00FA9A  41                 	db	65
   781   00FA9B  7F                 	db	127
   782   00FA9C  7F                 	db	127
   783   00FA9D  41                 	db	65
   784   00FA9E  03                 	db	3
   785   00FA9F  00                 	db	0
   786   00FAA0  00                 	db	0
   787   00FAA1  7F                 	db	127
   788   00FAA2  7F                 	db	127
   789   00FAA3  40                 	db	64
   790   00FAA4  40                 	db	64
   791   00FAA5  7F                 	db	127
   792   00FAA6  7F                 	db	127
   793   00FAA7  00                 	db	0
   794   00FAA8  00                 	db	0
   795   00FAA9  1F                 	db	31
   796   00FAAA  3F                 	db	63
   797   00FAAB  60                 	db	96
   798   00FAAC  60                 	db	96
   799   00FAAD  3F                 	db	63
   800   00FAAE  1F                 	db	31
   801   00FAAF  00                 	db	0
   802   00FAB0  00                 	db	0
   803   00FAB1  7F                 	db	127
   804   00FAB2  7F                 	db	127
   805   00FAB3  30                 	db	48
   806   00FAB4  18                 	db	24
   807   00FAB5  30                 	db	48
   808   00FAB6  7F                 	db	127
   809   00FAB7  7F                 	db	127
   810   00FAB8  00                 	db	0
   811   00FAB9  43                 	db	67
   812   00FABA  67                 	db	103
   813   00FABB  3C                 	db	60
   814   00FABC  18                 	db	24
   815   00FABD  3C                 	db	60
   816   00FABE  67                 	db	103
   817   00FABF  43                 	db	67
   818   00FAC0  00                 	db	0
   819   00FAC1  07                 	db	7
   820   00FAC2  4F                 	db	79
   821   00FAC3  78                 	db	120
   822   00FAC4  78                 	db	120
   823   00FAC5  4F                 	db	79
   824   00FAC6  07                 	db	7
   825   00FAC7  00                 	db	0
   826   00FAC8  00                 	db	0
   827   00FAC9  47                 	db	71
   828   00FACA  63                 	db	99
   829   00FACB  71                 	db	113
   830   00FACC  59                 	db	89
   831   00FACD  4D                 	db	77
   832   00FACE  67                 	db	103
   833   00FACF  73                 	db	115
   834   00FAD0  00                 	db	0
   835   00FAD1  00                 	db	0
   836   00FAD2  7F                 	db	127
   837   00FAD3  7F                 	db	127
   838   00FAD4  41                 	db	65
   839   00FAD5  41                 	db	65
   840   00FAD6  00                 	db	0
   841   00FAD7  00                 	db	0
   842   00FAD8  00                 	db	0
   843   00FAD9  01                 	db	1
   844   00FADA  03                 	db	3
   845   00FADB  06                 	db	6
   846   00FADC  0C                 	db	12
   847   00FADD  18                 	db	24
   848   00FADE  30                 	db	48
   849   00FADF  60                 	db	96
   850   00FAE0  00                 	db	0
   851   00FAE1  00                 	db	0
   852   00FAE2  41                 	db	65
   853   00FAE3  41                 	db	65
   854   00FAE4  7F                 	db	127
   855   00FAE5  7F                 	db	127
   856   00FAE6  00                 	db	0
   857   00FAE7  00                 	db	0
   858   00FAE8  00                 	db	0
   859   00FAE9  08                 	db	8
   860   00FAEA  0C                 	db	12
   861   00FAEB  06                 	db	6
   862   00FAEC  03                 	db	3
   863   00FAED  06                 	db	6
   864   00FAEE  0C                 	db	12
   865   00FAEF  08                 	db	8
   866   00FAF0  00                 	db	0
   867   00FAF1  80                 	db	128
   868   00FAF2  80                 	db	128
   869   00FAF3  80                 	db	128
   870   00FAF4  80                 	db	128
   871   00FAF5  80                 	db	128
   872   00FAF6  80                 	db	128
   873   00FAF7  80                 	db	128
   874   00FAF8  80                 	db	128
   875   00FAF9  00                 	db	0
   876   00FAFA  00                 	db	0
   877   00FAFB  03                 	db	3
   878   00FAFC  07                 	db	7
   879   00FAFD  04                 	db	4
   880   00FAFE  00                 	db	0
   881   00FAFF  00                 	db	0
   882   00FB00  00                 	db	0
   883   00FB01  20                 	db	32
   884   00FB02  74                 	db	116
   885   00FB03  54                 	db	84
   886   00FB04  54                 	db	84
   887   00FB05  3C                 	db	60
   888   00FB06  78                 	db	120
   889   00FB07  40                 	db	64
   890   00FB08  00                 	db	0
   891   00FB09  41                 	db	65
   892   00FB0A  7F                 	db	127
   893   00FB0B  3F                 	db	63
   894   00FB0C  48                 	db	72
   895   00FB0D  48                 	db	72
   896   00FB0E  78                 	db	120
   897   00FB0F  30                 	db	48
   898   00FB10  00                 	db	0
   899   00FB11  38                 	db	56
   900   00FB12  7C                 	db	124
   901   00FB13  44                 	db	68
   902   00FB14  44                 	db	68
   903   00FB15  6C                 	db	108
   904   00FB16  28                 	db	40
   905   00FB17  00                 	db	0
   906   00FB18  00                 	db	0
   907   00FB19  30                 	db	48
   908   00FB1A  78                 	db	120
   909   00FB1B  48                 	db	72
   910   00FB1C  49                 	db	73
   911   00FB1D  3F                 	db	63
   912   00FB1E  7F                 	db	127
   913   00FB1F  40                 	db	64
   914   00FB20  00                 	db	0
   915   00FB21  38                 	db	56
   916   00FB22  7C                 	db	124
   917   00FB23  54                 	db	84
   918   00FB24  54                 	db	84
   919   00FB25  5C                 	db	92
   920   00FB26  18                 	db	24
   921   00FB27  00                 	db	0
   922   00FB28  00                 	db	0
   923   00FB29  48                 	db	72
   924   00FB2A  7E                 	db	126
   925   00FB2B  7F                 	db	127
   926   00FB2C  49                 	db	73
   927   00FB2D  03                 	db	3
   928   00FB2E  02                 	db	2
   929   00FB2F  00                 	db	0
   930   00FB30  00                 	db	0
   931   00FB31  98                 	db	152
   932   00FB32  BC                 	db	188
   933   00FB33  A4                 	db	164
   934   00FB34  A4                 	db	164
   935   00FB35  F8                 	db	248
   936   00FB36  7C                 	db	124
   937   00FB37  04                 	db	4
   938   00FB38  00                 	db	0
   939   00FB39  41                 	db	65
   940   00FB3A  7F                 	db	127
   941   00FB3B  7F                 	db	127
   942   00FB3C  08                 	db	8
   943   00FB3D  04                 	db	4
   944   00FB3E  7C                 	db	124
   945   00FB3F  78                 	db	120
   946   00FB40  00                 	db	0
   947   00FB41  00                 	db	0
   948   00FB42  44                 	db	68
   949   00FB43  7D                 	db	125
   950   00FB44  7D                 	db	125
   951   00FB45  40                 	db	64
   952   00FB46  00                 	db	0
   953   00FB47  00                 	db	0
   954   00FB48  00                 	db	0
   955   00FB49  60                 	db	96
   956   00FB4A  E0                 	db	224
   957   00FB4B  80                 	db	128
   958   00FB4C  80                 	db	128
   959   00FB4D  FD                 	db	253
   960   00FB4E  7D                 	db	125
   961   00FB4F  00                 	db	0
   962   00FB50  00                 	db	0
   963   00FB51  41                 	db	65
   964   00FB52  7F                 	db	127
   965   00FB53  7F                 	db	127
   966   00FB54  10                 	db	16
   967   00FB55  38                 	db	56
   968   00FB56  6C                 	db	108
   969   00FB57  44                 	db	68
   970   00FB58  00                 	db	0
   971   00FB59  00                 	db	0
   972   00FB5A  41                 	db	65
   973   00FB5B  7F                 	db	127
   974   00FB5C  7F                 	db	127
   975   00FB5D  40                 	db	64
   976   00FB5E  00                 	db	0
   977   00FB5F  00                 	db	0
   978   00FB60  00                 	db	0
   979   00FB61  7C                 	db	124
   980   00FB62  7C                 	db	124
   981   00FB63  18                 	db	24
   982   00FB64  38                 	db	56
   983   00FB65  1C                 	db	28
   984   00FB66  7C                 	db	124
   985   00FB67  78                 	db	120
   986   00FB68  00                 	db	0
   987   00FB69  7C                 	db	124
   988   00FB6A  7C                 	db	124
   989   00FB6B  04                 	db	4
   990   00FB6C  04                 	db	4
   991   00FB6D  7C                 	db	124
   992   00FB6E  78                 	db	120
   993   00FB6F  00                 	db	0
   994   00FB70  00                 	db	0
   995   00FB71  38                 	db	56
   996   00FB72  7C                 	db	124
   997   00FB73  44                 	db	68
   998   00FB74  44                 	db	68
   999   00FB75  7C                 	db	124
  1000   00FB76  38                 	db	56
  1001   00FB77  00                 	db	0
  1002   00FB78  00                 	db	0
  1003   00FB79  84                 	db	132
  1004   00FB7A  FC                 	db	252
  1005   00FB7B  F8                 	db	248
  1006   00FB7C  A4                 	db	164
  1007   00FB7D  24                 	db	36
  1008   00FB7E  3C                 	db	60
  1009   00FB7F  18                 	db	24
  1010   00FB80  00                 	db	0
  1011   00FB81  18                 	db	24
  1012   00FB82  3C                 	db	60
  1013   00FB83  24                 	db	36
  1014   00FB84  A4                 	db	164
  1015   00FB85  F8                 	db	248
  1016   00FB86  FC                 	db	252
  1017   00FB87  84                 	db	132
  1018   00FB88  00                 	db	0
  1019   00FB89  44                 	db	68
  1020   00FB8A  7C                 	db	124
  1021   00FB8B  78                 	db	120
  1022   00FB8C  4C                 	db	76
  1023   00FB8D  04                 	db	4
  1024   00FB8E  1C                 	db	28
  1025   00FB8F  18                 	db	24
  1026   00FB90  00                 	db	0
  1027   00FB91  48                 	db	72
  1028   00FB92  5C                 	db	92
  1029   00FB93  54                 	db	84
  1030   00FB94  54                 	db	84
  1031   00FB95  74                 	db	116
  1032   00FB96  24                 	db	36
  1033   00FB97  00                 	db	0
  1034   00FB98  00                 	db	0
  1035   00FB99  00                 	db	0
  1036   00FB9A  04                 	db	4
  1037   00FB9B  3E                 	db	62
  1038   00FB9C  7F                 	db	127
  1039   00FB9D  44                 	db	68
  1040   00FB9E  24                 	db	36
  1041   00FB9F  00                 	db	0
  1042   00FBA0  00                 	db	0
  1043   00FBA1  3C                 	db	60
  1044   00FBA2  7C                 	db	124
  1045   00FBA3  40                 	db	64
  1046   00FBA4  40                 	db	64
  1047   00FBA5  3C                 	db	60
  1048   00FBA6  7C                 	db	124
  1049   00FBA7  40                 	db	64
  1050   00FBA8  00                 	db	0
  1051   00FBA9  1C                 	db	28
  1052   00FBAA  3C                 	db	60
  1053   00FBAB  60                 	db	96
  1054   00FBAC  60                 	db	96
  1055   00FBAD  3C                 	db	60
  1056   00FBAE  1C                 	db	28
  1057   00FBAF  00                 	db	0
  1058   00FBB0  00                 	db	0
  1059   00FBB1  3C                 	db	60
  1060   00FBB2  7C                 	db	124
  1061   00FBB3  70                 	db	112
  1062   00FBB4  38                 	db	56
  1063   00FBB5  70                 	db	112
  1064   00FBB6  7C                 	db	124
  1065   00FBB7  3C                 	db	60
  1066   00FBB8  00                 	db	0
  1067   00FBB9  44                 	db	68
  1068   00FBBA  6C                 	db	108
  1069   00FBBB  38                 	db	56
  1070   00FBBC  10                 	db	16
  1071   00FBBD  38                 	db	56
  1072   00FBBE  6C                 	db	108
  1073   00FBBF  44                 	db	68
  1074   00FBC0  00                 	db	0
  1075   00FBC1  9C                 	db	156
  1076   00FBC2  BC                 	db	188
  1077   00FBC3  A0                 	db	160
  1078   00FBC4  A0                 	db	160
  1079   00FBC5  FC                 	db	252
  1080   00FBC6  7C                 	db	124
  1081   00FBC7  00                 	db	0
  1082   00FBC8  00                 	db	0
  1083   00FBC9  4C                 	db	76
  1084   00FBCA  64                 	db	100
  1085   00FBCB  74                 	db	116
  1086   00FBCC  5C                 	db	92
  1087   00FBCD  4C                 	db	76
  1088   00FBCE  64                 	db	100
  1089   00FBCF  00                 	db	0
  1090   00FBD0  00                 	db	0
  1091   00FBD1  08                 	db	8
  1092   00FBD2  08                 	db	8
  1093   00FBD3  3E                 	db	62
  1094   00FBD4  77                 	db	119
  1095   00FBD5  41                 	db	65
  1096   00FBD6  41                 	db	65
  1097   00FBD7  00                 	db	0
  1098   00FBD8  00                 	db	0
  1099   00FBD9  00                 	db	0
  1100   00FBDA  00                 	db	0
  1101   00FBDB  00                 	db	0
  1102   00FBDC  77                 	db	119
  1103   00FBDD  77                 	db	119
  1104   00FBDE  00                 	db	0
  1105   00FBDF  00                 	db	0
  1106   00FBE0  00                 	db	0
  1107   00FBE1  41                 	db	65
  1108   00FBE2  41                 	db	65
  1109   00FBE3  77                 	db	119
  1110   00FBE4  3E                 	db	62
  1111   00FBE5  08                 	db	8
  1112   00FBE6  08                 	db	8
  1113   00FBE7  00                 	db	0
  1114   00FBE8  00                 	db	0
  1115   00FBE9  02                 	db	2
  1116   00FBEA  03                 	db	3
  1117   00FBEB  01                 	db	1
  1118   00FBEC  03                 	db	3
  1119   00FBED  02                 	db	2
  1120   00FBEE  03                 	db	3
  1121   00FBEF  01                 	db	1
  1122   00FBF0  00                 	db	0
  1123   00FBF1  70                 	db	112
  1124   00FBF2  78                 	db	120
  1125   00FBF3  4C                 	db	76
  1126   00FBF4  46                 	db	70
  1127   00FBF5  4C                 	db	76
  1128   00FBF6  78                 	db	120
  1129   00FBF7  70                 	db	112
  1130   00FBF8  00                 	db	0
  1131   00FBF9  0E                 	db	14
  1132   00FBFA  9F                 	db	159
  1133   00FBFB  91                 	db	145
  1134   00FBFC  B1                 	db	177
  1135   00FBFD  FB                 	db	251
  1136   00FBFE  4A                 	db	74
  1137   00FBFF  00                 	db	0
  1138   00FC00  00                 	db	0
  1139   00FC01  3A                 	db	58
  1140   00FC02  7A                 	db	122
  1141   00FC03  40                 	db	64
  1142   00FC04  40                 	db	64
  1143   00FC05  7A                 	db	122
  1144   00FC06  7A                 	db	122
  1145   00FC07  40                 	db	64
  1146   00FC08  00                 	db	0
  1147   00FC09  38                 	db	56
  1148   00FC0A  7C                 	db	124
  1149   00FC0B  54                 	db	84
  1150   00FC0C  55                 	db	85
  1151   00FC0D  5D                 	db	93
  1152   00FC0E  19                 	db	25
  1153   00FC0F  00                 	db	0
  1154   00FC10  00                 	db	0
  1155   00FC11  02                 	db	2
  1156   00FC12  23                 	db	35
  1157   00FC13  75                 	db	117
  1158   00FC14  55                 	db	85
  1159   00FC15  55                 	db	85
  1160   00FC16  7D                 	db	125
  1161   00FC17  7B                 	db	123
  1162   00FC18  42                 	db	66
  1163   00FC19  21                 	db	33
  1164   00FC1A  75                 	db	117
  1165   00FC1B  54                 	db	84
  1166   00FC1C  54                 	db	84
  1167   00FC1D  7D                 	db	125
  1168   00FC1E  79                 	db	121
  1169   00FC1F  40                 	db	64
  1170   00FC20  00                 	db	0
  1171   00FC21  21                 	db	33
  1172   00FC22  75                 	db	117
  1173   00FC23  55                 	db	85
  1174   00FC24  54                 	db	84
  1175   00FC25  7C                 	db	124
  1176   00FC26  78                 	db	120
  1177   00FC27  40                 	db	64
  1178   00FC28  00                 	db	0
  1179   00FC29  20                 	db	32
  1180   00FC2A  74                 	db	116
  1181   00FC2B  57                 	db	87
  1182   00FC2C  57                 	db	87
  1183   00FC2D  7C                 	db	124
  1184   00FC2E  78                 	db	120
  1185   00FC2F  40                 	db	64
  1186   00FC30  00                 	db	0
  1187   00FC31  18                 	db	24
  1188   00FC32  3C                 	db	60
  1189   00FC33  A4                 	db	164
  1190   00FC34  A4                 	db	164
  1191   00FC35  E4                 	db	228
  1192   00FC36  40                 	db	64
  1193   00FC37  00                 	db	0
  1194   00FC38  00                 	db	0
  1195   00FC39  02                 	db	2
  1196   00FC3A  3B                 	db	59
  1197   00FC3B  7D                 	db	125
  1198   00FC3C  55                 	db	85
  1199   00FC3D  55                 	db	85
  1200   00FC3E  5D                 	db	93
  1201   00FC3F  1B                 	db	27
  1202   00FC40  02                 	db	2
  1203   00FC41  39                 	db	57
  1204   00FC42  7D                 	db	125
  1205   00FC43  54                 	db	84
  1206   00FC44  54                 	db	84
  1207   00FC45  5D                 	db	93
  1208   00FC46  19                 	db	25
  1209   00FC47  00                 	db	0
  1210   00FC48  00                 	db	0
  1211   00FC49  39                 	db	57
  1212   00FC4A  7D                 	db	125
  1213   00FC4B  55                 	db	85
  1214   00FC4C  54                 	db	84
  1215   00FC4D  5C                 	db	92
  1216   00FC4E  18                 	db	24
  1217   00FC4F  00                 	db	0
  1218   00FC50  00                 	db	0
  1219   00FC51  01                 	db	1
  1220   00FC52  45                 	db	69
  1221   00FC53  7C                 	db	124
  1222   00FC54  7C                 	db	124
  1223   00FC55  41                 	db	65
  1224   00FC56  01                 	db	1
  1225   00FC57  00                 	db	0
  1226   00FC58  00                 	db	0
  1227   00FC59  02                 	db	2
  1228   00FC5A  03                 	db	3
  1229   00FC5B  45                 	db	69
  1230   00FC5C  7D                 	db	125
  1231   00FC5D  7D                 	db	125
  1232   00FC5E  43                 	db	67
  1233   00FC5F  02                 	db	2
  1234   00FC60  00                 	db	0
  1235   00FC61  01                 	db	1
  1236   00FC62  45                 	db	69
  1237   00FC63  7D                 	db	125
  1238   00FC64  7C                 	db	124
  1239   00FC65  40                 	db	64
  1240   00FC66  00                 	db	0
  1241   00FC67  00                 	db	0
  1242   00FC68  00                 	db	0
  1243   00FC69  79                 	db	121
  1244   00FC6A  7D                 	db	125
  1245   00FC6B  16                 	db	22
  1246   00FC6C  12                 	db	18
  1247   00FC6D  16                 	db	22
  1248   00FC6E  7D                 	db	125
  1249   00FC6F  79                 	db	121
  1250   00FC70  00                 	db	0
  1251   00FC71  70                 	db	112
  1252   00FC72  78                 	db	120
  1253   00FC73  2B                 	db	43
  1254   00FC74  2B                 	db	43
  1255   00FC75  78                 	db	120
  1256   00FC76  70                 	db	112
  1257   00FC77  00                 	db	0
  1258   00FC78  00                 	db	0
  1259   00FC79  44                 	db	68
  1260   00FC7A  7C                 	db	124
  1261   00FC7B  7C                 	db	124
  1262   00FC7C  55                 	db	85
  1263   00FC7D  55                 	db	85
  1264   00FC7E  45                 	db	69
  1265   00FC7F  00                 	db	0
  1266   00FC80  00                 	db	0
  1267   00FC81  20                 	db	32
  1268   00FC82  74                 	db	116
  1269   00FC83  54                 	db	84
  1270   00FC84  54                 	db	84
  1271   00FC85  7C                 	db	124
  1272   00FC86  7C                 	db	124
  1273   00FC87  54                 	db	84
  1274   00FC88  54                 	db	84
  1275   00FC89  7C                 	db	124
  1276   00FC8A  7E                 	db	126
  1277   00FC8B  0B                 	db	11
  1278   00FC8C  09                 	db	9
  1279   00FC8D  7F                 	db	127
  1280   00FC8E  7F                 	db	127
  1281   00FC8F  49                 	db	73
  1282   00FC90  00                 	db	0
  1283   00FC91  32                 	db	50
  1284   00FC92  7B                 	db	123
  1285   00FC93  49                 	db	73
  1286   00FC94  49                 	db	73
  1287   00FC95  7B                 	db	123
  1288   00FC96  32                 	db	50
  1289   00FC97  00                 	db	0
  1290   00FC98  00                 	db	0
  1291   00FC99  32                 	db	50
  1292   00FC9A  7A                 	db	122
  1293   00FC9B  48                 	db	72
  1294   00FC9C  48                 	db	72
  1295   00FC9D  7A                 	db	122
  1296   00FC9E  32                 	db	50
  1297   00FC9F  00                 	db	0
  1298   00FCA0  00                 	db	0
  1299   00FCA1  32                 	db	50
  1300   00FCA2  7A                 	db	122
  1301   00FCA3  4A                 	db	74
  1302   00FCA4  48                 	db	72
  1303   00FCA5  78                 	db	120
  1304   00FCA6  30                 	db	48
  1305   00FCA7  00                 	db	0
  1306   00FCA8  00                 	db	0
  1307   00FCA9  3A                 	db	58
  1308   00FCAA  7B                 	db	123
  1309   00FCAB  41                 	db	65
  1310   00FCAC  41                 	db	65
  1311   00FCAD  7B                 	db	123
  1312   00FCAE  7A                 	db	122
  1313   00FCAF  40                 	db	64
  1314   00FCB0  00                 	db	0
  1315   00FCB1  3A                 	db	58
  1316   00FCB2  7A                 	db	122
  1317   00FCB3  42                 	db	66
  1318   00FCB4  40                 	db	64
  1319   00FCB5  78                 	db	120
  1320   00FCB6  78                 	db	120
  1321   00FCB7  40                 	db	64
  1322   00FCB8  00                 	db	0
  1323   00FCB9  9A                 	db	154
  1324   00FCBA  BA                 	db	186
  1325   00FCBB  A0                 	db	160
  1326   00FCBC  A0                 	db	160
  1327   00FCBD  FA                 	db	250
  1328   00FCBE  7A                 	db	122
  1329   00FCBF  00                 	db	0
  1330   00FCC0  00                 	db	0
  1331   00FCC1  01                 	db	1
  1332   00FCC2  19                 	db	25
  1333   00FCC3  3C                 	db	60
  1334   00FCC4  66                 	db	102
  1335   00FCC5  66                 	db	102
  1336   00FCC6  3C                 	db	60
  1337   00FCC7  19                 	db	25
  1338   00FCC8  01                 	db	1
  1339   00FCC9  3D                 	db	61
  1340   00FCCA  7D                 	db	125
  1341   00FCCB  40                 	db	64
  1342   00FCCC  40                 	db	64
  1343   00FCCD  7D                 	db	125
  1344   00FCCE  3D                 	db	61
  1345   00FCCF  00                 	db	0
  1346   00FCD0  00                 	db	0
  1347   00FCD1  18                 	db	24
  1348   00FCD2  3C                 	db	60
  1349   00FCD3  24                 	db	36
  1350   00FCD4  E7                 	db	231
  1351   00FCD5  E7                 	db	231
  1352   00FCD6  24                 	db	36
  1353   00FCD7  24                 	db	36
  1354   00FCD8  00                 	db	0
  1355   00FCD9  68                 	db	104
  1356   00FCDA  7E                 	db	126
  1357   00FCDB  7F                 	db	127
  1358   00FCDC  49                 	db	73
  1359   00FCDD  43                 	db	67
  1360   00FCDE  66                 	db	102
  1361   00FCDF  20                 	db	32
  1362   00FCE0  00                 	db	0
  1363   00FCE1  2B                 	db	43
  1364   00FCE2  2F                 	db	47
  1365   00FCE3  FC                 	db	252
  1366   00FCE4  FC                 	db	252
  1367   00FCE5  2F                 	db	47
  1368   00FCE6  2B                 	db	43
  1369   00FCE7  00                 	db	0
  1370   00FCE8  00                 	db	0
  1371   00FCE9  FF                 	db	255
  1372   00FCEA  FF                 	db	255
  1373   00FCEB  09                 	db	9
  1374   00FCEC  09                 	db	9
  1375   00FCED  2F                 	db	47
  1376   00FCEE  F6                 	db	246
  1377   00FCEF  F8                 	db	248
  1378   00FCF0  A0                 	db	160
  1379   00FCF1  40                 	db	64
  1380   00FCF2  C0                 	db	192
  1381   00FCF3  88                 	db	136
  1382   00FCF4  FE                 	db	254
  1383   00FCF5  7F                 	db	127
  1384   00FCF6  09                 	db	9
  1385   00FCF7  03                 	db	3
  1386   00FCF8  02                 	db	2
  1387   00FCF9  20                 	db	32
  1388   00FCFA  74                 	db	116
  1389   00FCFB  54                 	db	84
  1390   00FCFC  55                 	db	85
  1391   00FCFD  7D                 	db	125
  1392   00FCFE  79                 	db	121
  1393   00FCFF  40                 	db	64
  1394   00FD00  00                 	db	0
  1395   00FD01  00                 	db	0
  1396   00FD02  44                 	db	68
  1397   00FD03  7D                 	db	125
  1398   00FD04  7D                 	db	125
  1399   00FD05  41                 	db	65
  1400   00FD06  00                 	db	0
  1401   00FD07  00                 	db	0
  1402   00FD08  00                 	db	0
  1403   00FD09  30                 	db	48
  1404   00FD0A  78                 	db	120
  1405   00FD0B  48                 	db	72
  1406   00FD0C  4A                 	db	74
  1407   00FD0D  7A                 	db	122
  1408   00FD0E  32                 	db	50
  1409   00FD0F  00                 	db	0
  1410   00FD10  00                 	db	0
  1411   00FD11  38                 	db	56
  1412   00FD12  78                 	db	120
  1413   00FD13  40                 	db	64
  1414   00FD14  42                 	db	66
  1415   00FD15  7A                 	db	122
  1416   00FD16  7A                 	db	122
  1417   00FD17  40                 	db	64
  1418   00FD18  00                 	db	0
  1419   00FD19  7A                 	db	122
  1420   00FD1A  7A                 	db	122
  1421   00FD1B  0A                 	db	10
  1422   00FD1C  0A                 	db	10
  1423   00FD1D  7A                 	db	122
  1424   00FD1E  70                 	db	112
  1425   00FD1F  00                 	db	0
  1426   00FD20  00                 	db	0
  1427   00FD21  7D                 	db	125
  1428   00FD22  7D                 	db	125
  1429   00FD23  19                 	db	25
  1430   00FD24  31                 	db	49
  1431   00FD25  7D                 	db	125
  1432   00FD26  7D                 	db	125
  1433   00FD27  00                 	db	0
  1434   00FD28  00                 	db	0
  1435   00FD29  00                 	db	0
  1436   00FD2A  26                 	db	38
  1437   00FD2B  2F                 	db	47
  1438   00FD2C  29                 	db	41
  1439   00FD2D  2F                 	db	47
  1440   00FD2E  2F                 	db	47
  1441   00FD2F  28                 	db	40
  1442   00FD30  00                 	db	0
  1443   00FD31  00                 	db	0
  1444   00FD32  26                 	db	38
  1445   00FD33  2F                 	db	47
  1446   00FD34  29                 	db	41
  1447   00FD35  2F                 	db	47
  1448   00FD36  26                 	db	38
  1449   00FD37  00                 	db	0
  1450   00FD38  00                 	db	0
  1451   00FD39  30                 	db	48
  1452   00FD3A  78                 	db	120
  1453   00FD3B  4D                 	db	77
  1454   00FD3C  45                 	db	69
  1455   00FD3D  60                 	db	96
  1456   00FD3E  20                 	db	32
  1457   00FD3F  00                 	db	0
  1458   00FD40  00                 	db	0
  1459   00FD41  38                 	db	56
  1460   00FD42  38                 	db	56
  1461   00FD43  08                 	db	8
  1462   00FD44  08                 	db	8
  1463   00FD45  08                 	db	8
  1464   00FD46  08                 	db	8
  1465   00FD47  00                 	db	0
  1466   00FD48  00                 	db	0
  1467   00FD49  08                 	db	8
  1468   00FD4A  08                 	db	8
  1469   00FD4B  08                 	db	8
  1470   00FD4C  08                 	db	8
  1471   00FD4D  38                 	db	56
  1472   00FD4E  38                 	db	56
  1473   00FD4F  00                 	db	0
  1474   00FD50  00                 	db	0
  1475   00FD51  4F                 	db	79
  1476   00FD52  6F                 	db	111
  1477   00FD53  30                 	db	48
  1478   00FD54  18                 	db	24
  1479   00FD55  CC                 	db	204
  1480   00FD56  EE                 	db	238
  1481   00FD57  BB                 	db	187
  1482   00FD58  91                 	db	145
  1483   00FD59  4F                 	db	79
  1484   00FD5A  6F                 	db	111
  1485   00FD5B  30                 	db	48
  1486   00FD5C  18                 	db	24
  1487   00FD5D  6C                 	db	108
  1488   00FD5E  76                 	db	118
  1489   00FD5F  FB                 	db	251
  1490   00FD60  F9                 	db	249
  1491   00FD61  00                 	db	0
  1492   00FD62  00                 	db	0
  1493   00FD63  00                 	db	0
  1494   00FD64  7B                 	db	123
  1495   00FD65  7B                 	db	123
  1496   00FD66  00                 	db	0
  1497   00FD67  00                 	db	0
  1498   00FD68  00                 	db	0
  1499   00FD69  08                 	db	8
  1500   00FD6A  1C                 	db	28
  1501   00FD6B  36                 	db	54
  1502   00FD6C  22                 	db	34
  1503   00FD6D  08                 	db	8
  1504   00FD6E  1C                 	db	28
  1505   00FD6F  36                 	db	54
  1506   00FD70  22                 	db	34
  1507   00FD71  22                 	db	34
  1508   00FD72  36                 	db	54
  1509   00FD73  1C                 	db	28
  1510   00FD74  08                 	db	8
  1511   00FD75  22                 	db	34
  1512   00FD76  36                 	db	54
  1513   00FD77  1C                 	db	28
  1514   00FD78  08                 	db	8
  1515   00FD79  AA                 	db	170
  1516   00FD7A  00                 	db	0
  1517   00FD7B  55                 	db	85
  1518   00FD7C  00                 	db	0
  1519   00FD7D  AA                 	db	170
  1520   00FD7E  00                 	db	0
  1521   00FD7F  55                 	db	85
  1522   00FD80  00                 	db	0
  1523   00FD81  AA                 	db	170
  1524   00FD82  55                 	db	85
  1525   00FD83  AA                 	db	170
  1526   00FD84  55                 	db	85
  1527   00FD85  AA                 	db	170
  1528   00FD86  55                 	db	85
  1529   00FD87  AA                 	db	170
  1530   00FD88  55                 	db	85
  1531   00FD89  DD                 	db	221
  1532   00FD8A  FF                 	db	255
  1533   00FD8B  AA                 	db	170
  1534   00FD8C  77                 	db	119
  1535   00FD8D  DD                 	db	221
  1536   00FD8E  AA                 	db	170
  1537   00FD8F  FF                 	db	255
  1538   00FD90  77                 	db	119
  1539   00FD91  00                 	db	0
  1540   00FD92  00                 	db	0
  1541   00FD93  00                 	db	0
  1542   00FD94  FF                 	db	255
  1543   00FD95  FF                 	db	255
  1544   00FD96  00                 	db	0
  1545   00FD97  00                 	db	0
  1546   00FD98  00                 	db	0
  1547   00FD99  10                 	db	16
  1548   00FD9A  10                 	db	16
  1549   00FD9B  10                 	db	16
  1550   00FD9C  FF                 	db	255
  1551   00FD9D  FF                 	db	255
  1552   00FD9E  00                 	db	0
  1553   00FD9F  00                 	db	0
  1554   00FDA0  00                 	db	0
  1555   00FDA1  14                 	db	20
  1556   00FDA2  14                 	db	20
  1557   00FDA3  14                 	db	20
  1558   00FDA4  FF                 	db	255
  1559   00FDA5  FF                 	db	255
  1560   00FDA6  00                 	db	0
  1561   00FDA7  00                 	db	0
  1562   00FDA8  00                 	db	0
  1563   00FDA9  10                 	db	16
  1564   00FDAA  10                 	db	16
  1565   00FDAB  FF                 	db	255
  1566   00FDAC  FF                 	db	255
  1567   00FDAD  00                 	db	0
  1568   00FDAE  FF                 	db	255
  1569   00FDAF  FF                 	db	255
  1570   00FDB0  00                 	db	0
  1571   00FDB1  10                 	db	16
  1572   00FDB2  10                 	db	16
  1573   00FDB3  F0                 	db	240
  1574   00FDB4  F0                 	db	240
  1575   00FDB5  10                 	db	16
  1576   00FDB6  F0                 	db	240
  1577   00FDB7  F0                 	db	240
  1578   00FDB8  00                 	db	0
  1579   00FDB9  14                 	db	20
  1580   00FDBA  14                 	db	20
  1581   00FDBB  14                 	db	20
  1582   00FDBC  FC                 	db	252
  1583   00FDBD  FC                 	db	252
  1584   00FDBE  00                 	db	0
  1585   00FDBF  00                 	db	0
  1586   00FDC0  00                 	db	0
  1587   00FDC1  14                 	db	20
  1588   00FDC2  14                 	db	20
  1589   00FDC3  F7                 	db	247
  1590   00FDC4  F7                 	db	247
  1591   00FDC5  00                 	db	0
  1592   00FDC6  FF                 	db	255
  1593   00FDC7  FF                 	db	255
  1594   00FDC8  00                 	db	0
  1595   00FDC9  00                 	db	0
  1596   00FDCA  00                 	db	0
  1597   00FDCB  FF                 	db	255
  1598   00FDCC  FF                 	db	255
  1599   00FDCD  00                 	db	0
  1600   00FDCE  FF                 	db	255
  1601   00FDCF  FF                 	db	255
  1602   00FDD0  00                 	db	0
  1603   00FDD1  14                 	db	20
  1604   00FDD2  14                 	db	20
  1605   00FDD3  F4                 	db	244
  1606   00FDD4  F4                 	db	244
  1607   00FDD5  04                 	db	4
  1608   00FDD6  FC                 	db	252
  1609   00FDD7  FC                 	db	252
  1610   00FDD8  00                 	db	0
  1611   00FDD9  14                 	db	20
  1612   00FDDA  14                 	db	20
  1613   00FDDB  17                 	db	23
  1614   00FDDC  17                 	db	23
  1615   00FDDD  10                 	db	16
  1616   00FDDE  1F                 	db	31
  1617   00FDDF  1F                 	db	31
  1618   00FDE0  00                 	db	0
  1619   00FDE1  10                 	db	16
  1620   00FDE2  10                 	db	16
  1621   00FDE3  1F                 	db	31
  1622   00FDE4  1F                 	db	31
  1623   00FDE5  10                 	db	16
  1624   00FDE6  1F                 	db	31
  1625   00FDE7  1F                 	db	31
  1626   00FDE8  00                 	db	0
  1627   00FDE9  14                 	db	20
  1628   00FDEA  14                 	db	20
  1629   00FDEB  14                 	db	20
  1630   00FDEC  1F                 	db	31
  1631   00FDED  1F                 	db	31
  1632   00FDEE  00                 	db	0
  1633   00FDEF  00                 	db	0
  1634   00FDF0  00                 	db	0
  1635   00FDF1  10                 	db	16
  1636   00FDF2  10                 	db	16
  1637   00FDF3  10                 	db	16
  1638   00FDF4  F0                 	db	240
  1639   00FDF5  F0                 	db	240
  1640   00FDF6  00                 	db	0
  1641   00FDF7  00                 	db	0
  1642   00FDF8  00                 	db	0
  1643   00FDF9  00                 	db	0
  1644   00FDFA  00                 	db	0
  1645   00FDFB  00                 	db	0
  1646   00FDFC  1F                 	db	31
  1647   00FDFD  1F                 	db	31
  1648   00FDFE  10                 	db	16
  1649   00FDFF  10                 	db	16
  1650   00FE00  10                 	db	16
  1651   00FE01  10                 	db	16
  1652   00FE02  10                 	db	16
  1653   00FE03  10                 	db	16
  1654   00FE04  1F                 	db	31
  1655   00FE05  1F                 	db	31
  1656   00FE06  10                 	db	16
  1657   00FE07  10                 	db	16
  1658   00FE08  10                 	db	16
  1659   00FE09  10                 	db	16
  1660   00FE0A  10                 	db	16
  1661   00FE0B  10                 	db	16
  1662   00FE0C  F0                 	db	240
  1663   00FE0D  F0                 	db	240
  1664   00FE0E  10                 	db	16
  1665   00FE0F  10                 	db	16
  1666   00FE10  10                 	db	16
  1667   00FE11  00                 	db	0
  1668   00FE12  00                 	db	0
  1669   00FE13  00                 	db	0
  1670   00FE14  FF                 	db	255
  1671   00FE15  FF                 	db	255
  1672   00FE16  10                 	db	16
  1673   00FE17  10                 	db	16
  1674   00FE18  10                 	db	16
  1675   00FE19  10                 	db	16
  1676   00FE1A  10                 	db	16
  1677   00FE1B  10                 	db	16
  1678   00FE1C  10                 	db	16
  1679   00FE1D  10                 	db	16
  1680   00FE1E  10                 	db	16
  1681   00FE1F  10                 	db	16
  1682   00FE20  10                 	db	16
  1683   00FE21  10                 	db	16
  1684   00FE22  10                 	db	16
  1685   00FE23  10                 	db	16
  1686   00FE24  FF                 	db	255
  1687   00FE25  FF                 	db	255
  1688   00FE26  10                 	db	16
  1689   00FE27  10                 	db	16
  1690   00FE28  10                 	db	16
  1691   00FE29  00                 	db	0
  1692   00FE2A  00                 	db	0
  1693   00FE2B  00                 	db	0
  1694   00FE2C  FF                 	db	255
  1695   00FE2D  FF                 	db	255
  1696   00FE2E  14                 	db	20
  1697   00FE2F  14                 	db	20
  1698   00FE30  14                 	db	20
  1699   00FE31  00                 	db	0
  1700   00FE32  00                 	db	0
  1701   00FE33  FF                 	db	255
  1702   00FE34  FF                 	db	255
  1703   00FE35  00                 	db	0
  1704   00FE36  FF                 	db	255
  1705   00FE37  FF                 	db	255
  1706   00FE38  10                 	db	16
  1707   00FE39  00                 	db	0
  1708   00FE3A  00                 	db	0
  1709   00FE3B  1F                 	db	31
  1710   00FE3C  1F                 	db	31
  1711   00FE3D  10                 	db	16
  1712   00FE3E  17                 	db	23
  1713   00FE3F  17                 	db	23
  1714   00FE40  14                 	db	20
  1715   00FE41  00                 	db	0
  1716   00FE42  00                 	db	0
  1717   00FE43  FC                 	db	252
  1718   00FE44  FC                 	db	252
  1719   00FE45  04                 	db	4
  1720   00FE46  F4                 	db	244
  1721   00FE47  F4                 	db	244
  1722   00FE48  14                 	db	20
  1723   00FE49  14                 	db	20
  1724   00FE4A  14                 	db	20
  1725   00FE4B  17                 	db	23
  1726   00FE4C  17                 	db	23
  1727   00FE4D  10                 	db	16
  1728   00FE4E  17                 	db	23
  1729   00FE4F  17                 	db	23
  1730   00FE50  14                 	db	20
  1731   00FE51  14                 	db	20
  1732   00FE52  14                 	db	20
  1733   00FE53  F4                 	db	244
  1734   00FE54  F4                 	db	244
  1735   00FE55  04                 	db	4
  1736   00FE56  F4                 	db	244
  1737   00FE57  F4                 	db	244
  1738   00FE58  14                 	db	20
  1739   00FE59  00                 	db	0
  1740   00FE5A  00                 	db	0
  1741   00FE5B  FF                 	db	255
  1742   00FE5C  FF                 	db	255
  1743   00FE5D  00                 	db	0
  1744   00FE5E  F7                 	db	247
  1745   00FE5F  F7                 	db	247
  1746   00FE60  14                 	db	20
  1747   00FE61  14                 	db	20
  1748   00FE62  14                 	db	20
  1749   00FE63  14                 	db	20
  1750   00FE64  14                 	db	20
  1751   00FE65  14                 	db	20
  1752   00FE66  14                 	db	20
  1753   00FE67  14                 	db	20
  1754   00FE68  14                 	db	20
  1755   00FE69  14                 	db	20
  1756   00FE6A  14                 	db	20
  1757   00FE6B  F7                 	db	247
  1758   00FE6C  F7                 	db	247
  1759   00FE6D  00                 	db	0
  1760   00FE6E  F7                 	db	247
  1761   00FE6F  F7                 	db	247
  1762   00FE70  14                 	db	20
  1763   00FE71  14                 	db	20
  1764   00FE72  14                 	db	20
  1765   00FE73  14                 	db	20
  1766   00FE74  17                 	db	23
  1767   00FE75  17                 	db	23
  1768   00FE76  14                 	db	20
  1769   00FE77  14                 	db	20
  1770   00FE78  14                 	db	20
  1771   00FE79  10                 	db	16
  1772   00FE7A  10                 	db	16
  1773   00FE7B  1F                 	db	31
  1774   00FE7C  1F                 	db	31
  1775   00FE7D  10                 	db	16
  1776   00FE7E  1F                 	db	31
  1777   00FE7F  1F                 	db	31
  1778   00FE80  10                 	db	16
  1779   00FE81  14                 	db	20
  1780   00FE82  14                 	db	20
  1781   00FE83  14                 	db	20
  1782   00FE84  F4                 	db	244
  1783   00FE85  F4                 	db	244
  1784   00FE86  14                 	db	20
  1785   00FE87  14                 	db	20
  1786   00FE88  14                 	db	20
  1787   00FE89  10                 	db	16
  1788   00FE8A  10                 	db	16
  1789   00FE8B  F0                 	db	240
  1790   00FE8C  F0                 	db	240
  1791   00FE8D  10                 	db	16
  1792   00FE8E  F0                 	db	240
  1793   00FE8F  F0                 	db	240
  1794   00FE90  10                 	db	16
  1795   00FE91  00                 	db	0
  1796   00FE92  00                 	db	0
  1797   00FE93  1F                 	db	31
  1798   00FE94  1F                 	db	31
  1799   00FE95  10                 	db	16
  1800   00FE96  1F                 	db	31
  1801   00FE97  1F                 	db	31
  1802   00FE98  10                 	db	16
  1803   00FE99  00                 	db	0
  1804   00FE9A  00                 	db	0
  1805   00FE9B  00                 	db	0
  1806   00FE9C  1F                 	db	31
  1807   00FE9D  1F                 	db	31
  1808   00FE9E  14                 	db	20
  1809   00FE9F  14                 	db	20
  1810   00FEA0  14                 	db	20
  1811   00FEA1  00                 	db	0
  1812   00FEA2  00                 	db	0
  1813   00FEA3  00                 	db	0
  1814   00FEA4  FC                 	db	252
  1815   00FEA5  FC                 	db	252
  1816   00FEA6  14                 	db	20
  1817   00FEA7  14                 	db	20
  1818   00FEA8  14                 	db	20
  1819   00FEA9  00                 	db	0
  1820   00FEAA  00                 	db	0
  1821   00FEAB  F0                 	db	240
  1822   00FEAC  F0                 	db	240
  1823   00FEAD  10                 	db	16
  1824   00FEAE  F0                 	db	240
  1825   00FEAF  F0                 	db	240
  1826   00FEB0  10                 	db	16
  1827   00FEB1  10                 	db	16
  1828   00FEB2  10                 	db	16
  1829   00FEB3  FF                 	db	255
  1830   00FEB4  FF                 	db	255
  1831   00FEB5  10                 	db	16
  1832   00FEB6  FF                 	db	255
  1833   00FEB7  FF                 	db	255
  1834   00FEB8  10                 	db	16
  1835   00FEB9  14                 	db	20
  1836   00FEBA  14                 	db	20
  1837   00FEBB  14                 	db	20
  1838   00FEBC  FF                 	db	255
  1839   00FEBD  FF                 	db	255
  1840   00FEBE  14                 	db	20
  1841   00FEBF  14                 	db	20
  1842   00FEC0  14                 	db	20
  1843   00FEC1  10                 	db	16
  1844   00FEC2  10                 	db	16
  1845   00FEC3  10                 	db	16
  1846   00FEC4  1F                 	db	31
  1847   00FEC5  1F                 	db	31
  1848   00FEC6  00                 	db	0
  1849   00FEC7  00                 	db	0
  1850   00FEC8  00                 	db	0
  1851   00FEC9  00                 	db	0
  1852   00FECA  00                 	db	0
  1853   00FECB  00                 	db	0
  1854   00FECC  F0                 	db	240
  1855   00FECD  F0                 	db	240
  1856   00FECE  10                 	db	16
  1857   00FECF  10                 	db	16
  1858   00FED0  10                 	db	16
  1859   00FED1  FF                 	db	255
  1860   00FED2  FF                 	db	255
  1861   00FED3  FF                 	db	255
  1862   00FED4  FF                 	db	255
  1863   00FED5  FF                 	db	255
  1864   00FED6  FF                 	db	255
  1865   00FED7  FF                 	db	255
  1866   00FED8  FF                 	db	255
  1867   00FED9  F0                 	db	240
  1868   00FEDA  F0                 	db	240
  1869   00FEDB  F0                 	db	240
  1870   00FEDC  F0                 	db	240
  1871   00FEDD  F0                 	db	240
  1872   00FEDE  F0                 	db	240
  1873   00FEDF  F0                 	db	240
  1874   00FEE0  F0                 	db	240
  1875   00FEE1  FF                 	db	255
  1876   00FEE2  FF                 	db	255
  1877   00FEE3  FF                 	db	255
  1878   00FEE4  FF                 	db	255
  1879   00FEE5  00                 	db	0
  1880   00FEE6  00                 	db	0
  1881   00FEE7  00                 	db	0
  1882   00FEE8  00                 	db	0
  1883   00FEE9  00                 	db	0
  1884   00FEEA  00                 	db	0
  1885   00FEEB  00                 	db	0
  1886   00FEEC  00                 	db	0
  1887   00FEED  FF                 	db	255
  1888   00FEEE  FF                 	db	255
  1889   00FEEF  FF                 	db	255
  1890   00FEF0  FF                 	db	255
  1891   00FEF1  0F                 	db	15
  1892   00FEF2  0F                 	db	15
  1893   00FEF3  0F                 	db	15
  1894   00FEF4  0F                 	db	15
  1895   00FEF5  0F                 	db	15
  1896   00FEF6  0F                 	db	15
  1897   00FEF7  0F                 	db	15
  1898   00FEF8  0F                 	db	15
  1899   00FEF9  38                 	db	56
  1900   00FEFA  7C                 	db	124
  1901   00FEFB  44                 	db	68
  1902   00FEFC  6C                 	db	108
  1903   00FEFD  38                 	db	56
  1904   00FEFE  6C                 	db	108
  1905   00FEFF  44                 	db	68
  1906   00FF00  00                 	db	0
  1907   00FF01  FC                 	db	252
  1908   00FF02  FE                 	db	254
  1909   00FF03  2A                 	db	42
  1910   00FF04  2A                 	db	42
  1911   00FF05  3E                 	db	62
  1912   00FF06  14                 	db	20
  1913   00FF07  00                 	db	0
  1914   00FF08  00                 	db	0
  1915   00FF09  7E                 	db	126
  1916   00FF0A  7E                 	db	126
  1917   00FF0B  02                 	db	2
  1918   00FF0C  02                 	db	2
  1919   00FF0D  06                 	db	6
  1920   00FF0E  06                 	db	6
  1921   00FF0F  00                 	db	0
  1922   00FF10  00                 	db	0
  1923   00FF11  02                 	db	2
  1924   00FF12  7E                 	db	126
  1925   00FF13  7E                 	db	126
  1926   00FF14  02                 	db	2
  1927   00FF15  7E                 	db	126
  1928   00FF16  7E                 	db	126
  1929   00FF17  02                 	db	2
  1930   00FF18  00                 	db	0
  1931   00FF19  63                 	db	99
  1932   00FF1A  77                 	db	119
  1933   00FF1B  5D                 	db	93
  1934   00FF1C  49                 	db	73
  1935   00FF1D  63                 	db	99
  1936   00FF1E  63                 	db	99
  1937   00FF1F  00                 	db	0
  1938   00FF20  00                 	db	0
  1939   00FF21  38                 	db	56
  1940   00FF22  7C                 	db	124
  1941   00FF23  44                 	db	68
  1942   00FF24  7C                 	db	124
  1943   00FF25  3C                 	db	60
  1944   00FF26  04                 	db	4
  1945   00FF27  04                 	db	4
  1946   00FF28  00                 	db	0
  1947   00FF29  80                 	db	128
  1948   00FF2A  FE                 	db	254
  1949   00FF2B  7E                 	db	126
  1950   00FF2C  20                 	db	32
  1951   00FF2D  20                 	db	32
  1952   00FF2E  3E                 	db	62
  1953   00FF2F  1E                 	db	30
  1954   00FF30  00                 	db	0
  1955   00FF31  04                 	db	4
  1956   00FF32  06                 	db	6
  1957   00FF33  02                 	db	2
  1958   00FF34  7E                 	db	126
  1959   00FF35  7C                 	db	124
  1960   00FF36  06                 	db	6
  1961   00FF37  02                 	db	2
  1962   00FF38  00                 	db	0
  1963   00FF39  99                 	db	153
  1964   00FF3A  BD                 	db	189
  1965   00FF3B  E7                 	db	231
  1966   00FF3C  E7                 	db	231
  1967   00FF3D  BD                 	db	189
  1968   00FF3E  99                 	db	153
  1969   00FF3F  00                 	db	0
  1970   00FF40  00                 	db	0
  1971   00FF41  1C                 	db	28
  1972   00FF42  3E                 	db	62
  1973   00FF43  6B                 	db	107
  1974   00FF44  49                 	db	73
  1975   00FF45  6B                 	db	107
  1976   00FF46  3E                 	db	62
  1977   00FF47  1C                 	db	28
  1978   00FF48  00                 	db	0
  1979   00FF49  4C                 	db	76
  1980   00FF4A  7E                 	db	126
  1981   00FF4B  73                 	db	115
  1982   00FF4C  01                 	db	1
  1983   00FF4D  73                 	db	115
  1984   00FF4E  7E                 	db	126
  1985   00FF4F  4C                 	db	76
  1986   00FF50  00                 	db	0
  1987   00FF51  30                 	db	48
  1988   00FF52  78                 	db	120
  1989   00FF53  4A                 	db	74
  1990   00FF54  4F                 	db	79
  1991   00FF55  7D                 	db	125
  1992   00FF56  39                 	db	57
  1993   00FF57  00                 	db	0
  1994   00FF58  00                 	db	0
  1995   00FF59  18                 	db	24
  1996   00FF5A  3C                 	db	60
  1997   00FF5B  24                 	db	36
  1998   00FF5C  3C                 	db	60
  1999   00FF5D  3C                 	db	60
  2000   00FF5E  24                 	db	36
  2001   00FF5F  3C                 	db	60
  2002   00FF60  18                 	db	24
  2003   00FF61  98                 	db	152
  2004   00FF62  FC                 	db	252
  2005   00FF63  64                 	db	100
  2006   00FF64  3C                 	db	60
  2007   00FF65  3E                 	db	62
  2008   00FF66  27                 	db	39
  2009   00FF67  3D                 	db	61
  2010   00FF68  18                 	db	24
  2011   00FF69  1C                 	db	28
  2012   00FF6A  3E                 	db	62
  2013   00FF6B  6B                 	db	107
  2014   00FF6C  49                 	db	73
  2015   00FF6D  49                 	db	73
  2016   00FF6E  00                 	db	0
  2017   00FF6F  00                 	db	0
  2018   00FF70  00                 	db	0
  2019   00FF71  7E                 	db	126
  2020   00FF72  7F                 	db	127
  2021   00FF73  01                 	db	1
  2022   00FF74  01                 	db	1
  2023   00FF75  7F                 	db	127
  2024   00FF76  7E                 	db	126
  2025   00FF77  00                 	db	0
  2026   00FF78  00                 	db	0
  2027   00FF79  2A                 	db	42
  2028   00FF7A  2A                 	db	42
  2029   00FF7B  2A                 	db	42
  2030   00FF7C  2A                 	db	42
  2031   00FF7D  2A                 	db	42
  2032   00FF7E  2A                 	db	42
  2033   00FF7F  00                 	db	0
  2034   00FF80  00                 	db	0
  2035   00FF81  44                 	db	68
  2036   00FF82  44                 	db	68
  2037   00FF83  5F                 	db	95
  2038   00FF84  5F                 	db	95
  2039   00FF85  44                 	db	68
  2040   00FF86  44                 	db	68
  2041   00FF87  00                 	db	0
  2042   00FF88  00                 	db	0
  2043   00FF89  40                 	db	64
  2044   00FF8A  51                 	db	81
  2045   00FF8B  5B                 	db	91
  2046   00FF8C  4E                 	db	78
  2047   00FF8D  44                 	db	68
  2048   00FF8E  40                 	db	64
  2049   00FF8F  00                 	db	0
  2050   00FF90  00                 	db	0
  2051   00FF91  40                 	db	64
  2052   00FF92  44                 	db	68
  2053   00FF93  4E                 	db	78
  2054   00FF94  5B                 	db	91
  2055   00FF95  51                 	db	81
  2056   00FF96  40                 	db	64
  2057   00FF97  00                 	db	0
  2058   00FF98  00                 	db	0
  2059   00FF99  00                 	db	0
  2060   00FF9A  00                 	db	0
  2061   00FF9B  00                 	db	0
  2062   00FF9C  FE                 	db	254
  2063   00FF9D  FF                 	db	255
  2064   00FF9E  01                 	db	1
  2065   00FF9F  07                 	db	7
  2066   00FFA0  06                 	db	6
  2067   00FFA1  60                 	db	96
  2068   00FFA2  E0                 	db	224
  2069   00FFA3  80                 	db	128
  2070   00FFA4  FF                 	db	255
  2071   00FFA5  7F                 	db	127
  2072   00FFA6  00                 	db	0
  2073   00FFA7  00                 	db	0
  2074   00FFA8  00                 	db	0
  2075   00FFA9  08                 	db	8
  2076   00FFAA  08                 	db	8
  2077   00FFAB  6B                 	db	107
  2078   00FFAC  6B                 	db	107
  2079   00FFAD  08                 	db	8
  2080   00FFAE  08                 	db	8
  2081   00FFAF  00                 	db	0
  2082   00FFB0  00                 	db	0
  2083   00FFB1  24                 	db	36
  2084   00FFB2  36                 	db	54
  2085   00FFB3  12                 	db	18
  2086   00FFB4  36                 	db	54
  2087   00FFB5  24                 	db	36
  2088   00FFB6  36                 	db	54
  2089   00FFB7  12                 	db	18
  2090   00FFB8  00                 	db	0
  2091   00FFB9  00                 	db	0
  2092   00FFBA  06                 	db	6
  2093   00FFBB  0F                 	db	15
  2094   00FFBC  09                 	db	9
  2095   00FFBD  0F                 	db	15
  2096   00FFBE  06                 	db	6
  2097   00FFBF  00                 	db	0
  2098   00FFC0  00                 	db	0
  2099   00FFC1  00                 	db	0
  2100   00FFC2  00                 	db	0
  2101   00FFC3  00                 	db	0
  2102   00FFC4  18                 	db	24
  2103   00FFC5  18                 	db	24
  2104   00FFC6  00                 	db	0
  2105   00FFC7  00                 	db	0
  2106   00FFC8  00                 	db	0
  2107   00FFC9  00                 	db	0
  2108   00FFCA  00                 	db	0
  2109   00FFCB  00                 	db	0
  2110   00FFCC  10                 	db	16
  2111   00FFCD  10                 	db	16
  2112   00FFCE  00                 	db	0
  2113   00FFCF  00                 	db	0
  2114   00FFD0  00                 	db	0
  2115   00FFD1  10                 	db	16
  2116   00FFD2  30                 	db	48
  2117   00FFD3  70                 	db	112
  2118   00FFD4  C0                 	db	192
  2119   00FFD5  FF                 	db	255
  2120   00FFD6  FF                 	db	255
  2121   00FFD7  01                 	db	1
  2122   00FFD8  01                 	db	1
  2123   00FFD9  00                 	db	0
  2124   00FFDA  1F                 	db	31
  2125   00FFDB  1F                 	db	31
  2126   00FFDC  01                 	db	1
  2127   00FFDD  1F                 	db	31
  2128   00FFDE  1E                 	db	30
  2129   00FFDF  00                 	db	0
  2130   00FFE0  00                 	db	0
  2131   00FFE1  00                 	db	0
  2132   00FFE2  19                 	db	25
  2133   00FFE3  1D                 	db	29
  2134   00FFE4  17                 	db	23
  2135   00FFE5  12                 	db	18
  2136   00FFE6  00                 	db	0
  2137   00FFE7  00                 	db	0
  2138   00FFE8  00                 	db	0
  2139   00FFE9  00                 	db	0
  2140   00FFEA  00                 	db	0
  2141   00FFEB  3C                 	db	60
  2142   00FFEC  3C                 	db	60
  2143   00FFED  3C                 	db	60
  2144   00FFEE  3C                 	db	60
  2145   00FFEF  00                 	db	0
  2146   00FFF0  00                 	db	0
  2147   00FFF1  00                 	db	0
  2148   00FFF2  00                 	db	0
  2149   00FFF3  00                 	db	0
  2150   00FFF4  00                 	db	0
  2151   00FFF5  00                 	db	0
  2152   00FFF6  00                 	db	0
  2153   00FFF7  00                 	db	0
  2154   00FFF8  00                 	db	0
  2155   00FFF9                     __end_of_MAX7219_Dot_Matrix_font:
  2156                           	callstack 0
  2157   000000                     _EEDATA	set	4008
  2158   000000                     _EEADR	set	4009
  2159   000000                     _EEADRH	set	4010
  2160   000000                     _EECON2	set	4007
  2161   000000                     _RCREG	set	4014
  2162   000000                     _TXREG	set	4013
  2163   000000                     _SPBRG	set	4015
  2164   000000                     _TXSTA	set	4012
  2165   00FFF9                     STR_1:
  2166                           
  2167                           ; BSR set to: 0
  2168   00FFF9  41                 	db	65	;'A'
  2169   00FFFA  4C                 	db	76	;'L'
  2170   00FFFB  41                 	db	65	;'A'
  2171   00FFFC  52                 	db	82	;'R'
  2172   00FFFD  4D                 	db	77	;'M'
  2173   00FFFE  00                 	db	0
  2174   00FFFF  00                 	db	0	; dummy byte at the end
  2175   000000                     
  2176                           	psect	nvBANK0
  2177   0000F7                     __pnvBANK0:
  2178                           	callstack 0
  2179   0000F7                     _TMR1_InterruptHandler:
  2180                           	callstack 0
  2181   0000F7                     	ds	2
  2182   0000F9                     _EUSART_RxDefaultInterruptHandler:
  2183                           	callstack 0
  2184   0000F9                     	ds	2
  2185   0000FB                     _EUSART_TxDefaultInterruptHandler:
  2186                           	callstack 0
  2187   0000FB                     	ds	2
  2188   000000                     _TMR1	set	4046
  2189   000000                     _LATCbits	set	3979
  2190   000000                     _LATBbits	set	3978
  2191   000000                     _TRISBbits	set	3987
  2192   000000                     _T1CONbits	set	4045
  2193   000000                     _RCSTAbits	set	4011
  2194   000000                     _TXSTAbits	set	4012
  2195   000000                     _SSPSTATbits	set	4039
  2196   000000                     _SSPCON1bits	set	4038
  2197   000000                     _WPUB	set	3964
  2198   000000                     _ANSEL	set	3966
  2199   000000                     _ANSELH	set	3967
  2200   000000                     _LATA	set	3977
  2201   000000                     _OSCTUNE	set	3995
  2202   000000                     _SSPCON1	set	4038
  2203   000000                     _SSPSTAT	set	4039
  2204   000000                     _T1CON	set	4045
  2205   000000                     _TMR1L	set	4046
  2206   000000                     _TMR1H	set	4047
  2207   000000                     _RCONbits	set	4048
  2208   000000                     _OSCCON	set	4051
  2209   000000                     _SSPBUF	set	4041
  2210   000000                     _SSPADD	set	4040
  2211   000000                     _INTCON2bits	set	4081
  2212   000000                     _PIE1bits	set	3997
  2213   000000                     _TRISA	set	3986
  2214   000000                     _LATC	set	3979
  2215   000000                     _LATB	set	3978
  2216   000000                     _TRISC	set	3988
  2217   000000                     _TRISB	set	3987
  2218   000000                     _PORTBbits	set	3969
  2219   000000                     _INTCONbits	set	4082
  2220   000000                     _TABLAT	set	4085
  2221   000000                     _TBLPTRL	set	4086
  2222   000000                     _TBLPTRH	set	4087
  2223   000000                     _TBLPTRU	set	4088
  2224   000000                     _PIR1bits	set	3998
  2225   000000                     _PIR2bits	set	4001
  2226   000000                     _EECON1bits	set	4006
  2227   000000                     _RCSTA	set	4011
  2228   000000                     _BAUDCON	set	4024
  2229   000000                     _SPBRGH	set	4016
  2230                           
  2231                           ; #config settings
  2232                           
  2233                           	psect	cinit
  2234   0010A2                     __pcinit:
  2235                           	callstack 0
  2236   0010A2                     start_initialization:
  2237                           	callstack 0
  2238   0010A2                     __initialization:
  2239                           	callstack 0
  2240                           
  2241                           ; Clear objects allocated to BANK1 (32 bytes)
  2242   0010A2  EE01  F000         	lfsr	0,__pbssBANK1
  2243   0010A6  0E20               	movlw	32
  2244   0010A8                     clear_0:
  2245   0010A8  6AEE               	clrf	postinc0,c
  2246   0010AA  06E8               	decf	wreg,f,c
  2247   0010AC  E1FD               	bnz	clear_0
  2248                           
  2249                           ; Clear objects allocated to BANK0 (80 bytes)
  2250   0010AE  EE00  F060         	lfsr	0,__pbssBANK0
  2251   0010B2  0E50               	movlw	80
  2252   0010B4                     clear_1:
  2253   0010B4  6AEE               	clrf	postinc0,c
  2254   0010B6  06E8               	decf	wreg,f,c
  2255   0010B8  E1FD               	bnz	clear_1
  2256                           
  2257                           ; Clear objects allocated to COMRAM (6 bytes)
  2258   0010BA  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
  2259   0010BC  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2260   0010BE  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2261   0010C0  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2262   0010C2  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2263   0010C4  6A53               	clrf	__pbssCOMRAM& (0+255),c
  2264   0010C6                     end_of_initialization:
  2265                           	callstack 0
  2266   0010C6                     __end_of__initialization:
  2267                           	callstack 0
  2268   0010C6  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2269   0010C8  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2270   0010CA  0100               	movlb	0
  2271   0010CC  EF78  F003         	goto	_main	;jump to C main() function
  2272                           
  2273                           	psect	bssCOMRAM
  2274   000053                     __pbssCOMRAM:
  2275                           	callstack 0
  2276   000053                     _uartBufferIndex:
  2277                           	callstack 0
  2278   000053                     	ds	1
  2279   000054                     _eusartRxTail:
  2280                           	callstack 0
  2281   000054                     	ds	1
  2282   000055                     _eusartRxHead:
  2283                           	callstack 0
  2284   000055                     	ds	1
  2285   000056                     _eusartTxBufferRemaining:
  2286                           	callstack 0
  2287   000056                     	ds	1
  2288   000057                     _eusartTxTail:
  2289                           	callstack 0
  2290   000057                     	ds	1
  2291   000058                     _eusartTxHead:
  2292                           	callstack 0
  2293   000058                     	ds	1
  2294                           
  2295                           	psect	bssBANK0
  2296   000060                     __pbssBANK0:
  2297                           	callstack 0
  2298   000060                     _bufferCol:
  2299                           	callstack 0
  2300   000060                     	ds	32
  2301   000080                     _uartBuffer:
  2302                           	callstack 0
  2303   000080                     	ds	10
  2304   00008A                     _eusartRxBuffer:
  2305                           	callstack 0
  2306   00008A                     	ds	8
  2307   000092                     _eusartTxBuffer:
  2308                           	callstack 0
  2309   000092                     	ds	8
  2310   00009A                     checkButtons@button3HoldTime:
  2311                           	callstack 0
  2312   00009A                     	ds	2
  2313   00009C                     _button3PressTime:
  2314                           	callstack 0
  2315   00009C                     	ds	2
  2316   00009E                     _blinkTimer:
  2317                           	callstack 0
  2318   00009E                     	ds	2
  2319   0000A0                     _timer1ReloadVal:
  2320                           	callstack 0
  2321   0000A0                     	ds	2
  2322   0000A2                     checkButtons@alarmSettingMode:
  2323                           	callstack 0
  2324   0000A2                     	ds	1
  2325   0000A3                     checkButtons@button3PressCount:
  2326                           	callstack 0
  2327   0000A3                     	ds	1
  2328   0000A4                     _btTimeSet:
  2329                           	callstack 0
  2330   0000A4                     	ds	1
  2331   0000A5                     _isButton3Pressed:
  2332                           	callstack 0
  2333   0000A5                     	ds	1
  2334   0000A6                     _displayBlinking:
  2335                           	callstack 0
  2336   0000A6                     	ds	1
  2337   0000A7                     _alarmTriggered:
  2338                           	callstack 0
  2339   0000A7                     	ds	1
  2340   0000A8                     _alarmActive:
  2341                           	callstack 0
  2342   0000A8                     	ds	1
  2343   0000A9                     _alarmSet:
  2344                           	callstack 0
  2345   0000A9                     	ds	1
  2346   0000AA                     _alarmMinutes:
  2347                           	callstack 0
  2348   0000AA                     	ds	1
  2349   0000AB                     _alarmHours:
  2350                           	callstack 0
  2351   0000AB                     	ds	1
  2352   0000AC                     _seconds:
  2353                           	callstack 0
  2354   0000AC                     	ds	1
  2355   0000AD                     _minutes:
  2356                           	callstack 0
  2357   0000AD                     	ds	1
  2358   0000AE                     _hours:
  2359                           	callstack 0
  2360   0000AE                     	ds	1
  2361   0000AF                     _eusartRxCount:
  2362                           	callstack 0
  2363   0000AF                     	ds	1
  2364                           
  2365                           	psect	bssBANK1
  2366   000100                     __pbssBANK1:
  2367                           	callstack 0
  2368   000100                     	ds	32
  2369                           
  2370                           	psect	cstackBANK0
  2371   0000B0                     __pcstackBANK0:
  2372                           	callstack 0
  2373   0000B0                     printString@indx:
  2374                           	callstack 0
  2375   0000B0                     saveTimeToFlash@flashBuffer:
  2376                           	callstack 0
  2377                           
  2378                           ; 64 bytes @ 0x0
  2379   0000B0                     	ds	2
  2380   0000B2                     printString@data:
  2381                           	callstack 0
  2382                           
  2383                           ; 1 bytes @ 0x2
  2384   0000B2                     	ds	1
  2385   0000B3                     printString@strindx:
  2386                           	callstack 0
  2387                           
  2388                           ; 2 bytes @ 0x3
  2389   0000B3                     	ds	2
  2390   0000B5                     printString@i:
  2391                           	callstack 0
  2392                           
  2393                           ; 2 bytes @ 0x5
  2394   0000B5                     	ds	2
  2395   0000B7                     printString@k:
  2396                           	callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x7
  2399   0000B7                     	ds	2
  2400   0000B9                     printString@j:
  2401                           	callstack 0
  2402                           
  2403                           ; 2 bytes @ 0x9
  2404   0000B9                     	ds	2
  2405   0000BB                     triggerAlarm@numCycles:
  2406                           	callstack 0
  2407   0000BB                     displayTime@displayString:
  2408                           	callstack 0
  2409   0000BB                     displayAlarmTime@displayString:
  2410                           	callstack 0
  2411                           
  2412                           ; 5 bytes @ 0xB
  2413   0000BB                     	ds	2
  2414   0000BD                     triggerAlarm@i:
  2415                           	callstack 0
  2416                           
  2417                           ; 2 bytes @ 0xD
  2418   0000BD                     	ds	3
  2419   0000C0                     displayTime@timeString:
  2420                           	callstack 0
  2421   0000C0                     displayAlarmTime@alarmTimeString:
  2422                           	callstack 0
  2423                           
  2424                           ; 5 bytes @ 0x10
  2425   0000C0                     	ds	5
  2426   0000C5                     displayTime@i:
  2427                           	callstack 0
  2428   0000C5                     displayAlarmTime@i:
  2429                           	callstack 0
  2430                           
  2431                           ; 2 bytes @ 0x15
  2432   0000C5                     	ds	43
  2433   0000F0                     saveTimeToFlash@flashAddress:
  2434                           	callstack 0
  2435                           
  2436                           ; 4 bytes @ 0x40
  2437   0000F0                     	ds	4
  2438   0000F4                     saveTimeToFlash@i:
  2439                           	callstack 0
  2440                           
  2441                           ; 1 bytes @ 0x44
  2442   0000F4                     	ds	1
  2443   0000F5                     main@hours_pom:
  2444                           	callstack 0
  2445                           
  2446                           ; 1 bytes @ 0x45
  2447   0000F5                     	ds	1
  2448   0000F6                     main@minutes_pom:
  2449                           	callstack 0
  2450                           
  2451                           ; 1 bytes @ 0x46
  2452   0000F6                     	ds	1
  2453                           
  2454                           	psect	cstackCOMRAM
  2455   000001                     __pcstackCOMRAM:
  2456                           	callstack 0
  2457   000001                     btGetData@rcv:
  2458                           	callstack 0
  2459   000001                     TMR1_WriteTimer@timerVal:
  2460                           	callstack 0
  2461                           
  2462                           ; 2 bytes @ 0x0
  2463   000001                     	ds	2
  2464   000003                     ??_INTERRUPT_InterruptManager:
  2465   000003                     
  2466                           ; 1 bytes @ 0x2
  2467   000003                     	ds	4
  2468   000007                     ?___wmul:
  2469                           	callstack 0
  2470   000007                     ?___awdiv:
  2471                           	callstack 0
  2472   000007                     ?___awmod:
  2473                           	callstack 0
  2474   000007                     SPI_Exchange8bit@data:
  2475                           	callstack 0
  2476   000007                     EUSART_SetTxInterruptHandler@handler:
  2477                           	callstack 0
  2478   000007                     EUSART_SetRxInterruptHandler@handler:
  2479                           	callstack 0
  2480   000007                     TMR1_SetInterruptHandler@InterruptHandler:
  2481                           	callstack 0
  2482   000007                     delayMicroseconds@microseconds:
  2483                           	callstack 0
  2484   000007                     ___wmul@multiplier:
  2485                           	callstack 0
  2486   000007                     ___awdiv@dividend:
  2487                           	callstack 0
  2488   000007                     ___awmod@dividend:
  2489                           	callstack 0
  2490   000007                     FLASH_ReadByte@flashAddr:
  2491                           	callstack 0
  2492   000007                     FLASH_EraseBlock@baseAddr:
  2493                           	callstack 0
  2494                           
  2495                           ; 4 bytes @ 0x6
  2496   000007                     	ds	1
  2497   000008                     max7219_cmd@data:
  2498                           	callstack 0
  2499                           
  2500                           ; 1 bytes @ 0x7
  2501   000008                     	ds	1
  2502   000009                     ??_max7219_cmd:
  2503   000009                     delayMicroseconds@i:
  2504                           	callstack 0
  2505   000009                     ___wmul@multiplicand:
  2506                           	callstack 0
  2507   000009                     ___awdiv@divisor:
  2508                           	callstack 0
  2509   000009                     ___awmod@divisor:
  2510                           	callstack 0
  2511                           
  2512                           ; 2 bytes @ 0x8
  2513   000009                     	ds	2
  2514   00000B                     FLASH_EraseBlock@GIEBitValue:
  2515                           	callstack 0
  2516   00000B                     max7219_cmd@Addr:
  2517                           	callstack 0
  2518   00000B                     ___awdiv@counter:
  2519                           	callstack 0
  2520   00000B                     ___awmod@counter:
  2521                           	callstack 0
  2522   00000B                     ___wmul@product:
  2523                           	callstack 0
  2524                           
  2525                           ; 2 bytes @ 0xA
  2526   00000B                     	ds	1
  2527   00000C                     ___awdiv@sign:
  2528                           	callstack 0
  2529   00000C                     ___awmod@sign:
  2530                           	callstack 0
  2531   00000C                     max7219_cmd@writeData:
  2532                           	callstack 0
  2533   00000C                     FLASH_WriteBlock@writeAddr:
  2534                           	callstack 0
  2535                           
  2536                           ; 4 bytes @ 0xB
  2537   00000C                     	ds	1
  2538   00000D                     ?___lwdiv:
  2539                           	callstack 0
  2540   00000D                     ___awdiv@quotient:
  2541                           	callstack 0
  2542   00000D                     ___lwdiv@dividend:
  2543                           	callstack 0
  2544                           
  2545                           ; 2 bytes @ 0xC
  2546   00000D                     	ds	1
  2547   00000E                     max7219_cmd@i:
  2548                           	callstack 0
  2549                           
  2550                           ; 2 bytes @ 0xD
  2551   00000E                     	ds	1
  2552   00000F                     max_write@row:
  2553                           	callstack 0
  2554   00000F                     ___lwdiv@divisor:
  2555                           	callstack 0
  2556                           
  2557                           ; 2 bytes @ 0xE
  2558   00000F                     	ds	1
  2559   000010                     FLASH_WriteBlock@flashWrBufPtr:
  2560                           	callstack 0
  2561                           
  2562                           ; 1 bytes @ 0xF
  2563   000010                     	ds	1
  2564   000011                     max_write@data:
  2565                           	callstack 0
  2566   000011                     ___lwdiv@counter:
  2567                           	callstack 0
  2568   000011                     FLASH_WriteBlock@blockStartAddr:
  2569                           	callstack 0
  2570                           
  2571                           ; 4 bytes @ 0x10
  2572   000011                     	ds	1
  2573   000012                     ??_max_write:
  2574   000012                     ___lwdiv@quotient:
  2575                           	callstack 0
  2576                           
  2577                           ; 2 bytes @ 0x11
  2578   000012                     	ds	2
  2579   000014                     generateBeep@duration_ms:
  2580                           	callstack 0
  2581   000014                     max_write@offset:
  2582                           	callstack 0
  2583                           
  2584                           ; 2 bytes @ 0x13
  2585   000014                     	ds	1
  2586   000015                     FLASH_WriteBlock@GIEBitValue:
  2587                           	callstack 0
  2588                           
  2589                           ; 1 bytes @ 0x14
  2590   000015                     	ds	1
  2591   000016                     FLASH_WriteBlock@j:
  2592                           	callstack 0
  2593   000016                     generateBeep@cycles:
  2594                           	callstack 0
  2595   000016                     max_write@devTarget:
  2596                           	callstack 0
  2597                           
  2598                           ; 2 bytes @ 0x15
  2599   000016                     	ds	1
  2600   000017                     FLASH_WriteBlock@numberOfWriteBlocks:
  2601                           	callstack 0
  2602                           
  2603                           ; 1 bytes @ 0x16
  2604   000017                     	ds	1
  2605   000018                     FLASH_WriteBlock@dataCounter:
  2606                           	callstack 0
  2607   000018                     generateBeep@i:
  2608                           	callstack 0
  2609   000018                     max_write@dev:
  2610                           	callstack 0
  2611                           
  2612                           ; 2 bytes @ 0x17
  2613   000018                     	ds	1
  2614   000019                     FLASH_WriteBlock@i:
  2615                           	callstack 0
  2616                           
  2617                           ; 1 bytes @ 0x18
  2618   000019                     	ds	1
  2619   00001A                     max_write@writeData:
  2620                           	callstack 0
  2621                           
  2622                           ; 2 bytes @ 0x19
  2623   00001A                     	ds	2
  2624   00001C                     ??_flushBuffer:
  2625                           
  2626                           ; 1 bytes @ 0x1B
  2627   00001C                     	ds	3
  2628   00001F                     flushBuffer@bufferRow:
  2629                           	callstack 0
  2630                           
  2631                           ; 32 bytes @ 0x1E
  2632   00001F                     	ds	32
  2633   00003F                     flushBuffer@dev:
  2634                           	callstack 0
  2635                           
  2636                           ; 2 bytes @ 0x3E
  2637   00003F                     	ds	2
  2638   000041                     flushBuffer@j:
  2639                           	callstack 0
  2640                           
  2641                           ; 2 bytes @ 0x40
  2642   000041                     	ds	2
  2643   000043                     flushBuffer@row:
  2644                           	callstack 0
  2645                           
  2646                           ; 2 bytes @ 0x42
  2647   000043                     	ds	2
  2648   000045                     flushBuffer@i:
  2649                           	callstack 0
  2650                           
  2651                           ; 2 bytes @ 0x44
  2652   000045                     	ds	2
  2653   000047                     clearDisplay@i:
  2654                           	callstack 0
  2655   000047                     printString@str:
  2656                           	callstack 0
  2657                           
  2658                           ; 2 bytes @ 0x46
  2659   000047                     	ds	2
  2660   000049                     ??_printString:
  2661                           
  2662                           ; 1 bytes @ 0x48
  2663   000049                     	ds	8
  2664   000051                     ??_checkButtons:
  2665   000051                     ??_triggerAlarm:
  2666   000051                     
  2667                           ; 1 bytes @ 0x50
  2668   000051                     	ds	2
  2669   000053                     
  2670                           ; 1 bytes @ 0x52
  2671 ;;
  2672 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2673 ;;
  2674 ;; *************** function _main *****************
  2675 ;; Defined at:
  2676 ;;		line 46 in file "main.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  minutes_pom     1   70[BANK0 ] unsigned char 
  2681 ;;  hours_pom       1   69[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;Total ram usage:        2 bytes
  2696 ;; Hardware stack levels required when called: 11
  2697 ;; This function calls:
  2698 ;;		_SYSTEM_Initialize
  2699 ;;		_TMR1_StartTimer
  2700 ;;		_checkButtons
  2701 ;;		_clearDisplay
  2702 ;;		_displayTime
  2703 ;;		_loadTimeFromFlash
  2704 ;;		_matrixInit
  2705 ;;		_processAlarm
  2706 ;;		_saveTimeToFlash
  2707 ;; This function is called by:
  2708 ;;		Startup code after reset
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text0
  2713   0006F0                     __ptext0:
  2714                           	callstack 0
  2715   0006F0                     _main:
  2716                           	callstack 20
  2717   0006F0                     
  2718                           ;main.c: 48:     SYSTEM_Initialize();
  2719   0006F0  ECEC  F008         	call	_SYSTEM_Initialize	;wreg free
  2720                           
  2721                           ;main.c: 49:     matrixInit();
  2722   0006F4  EC1D  F008         	call	_matrixInit	;wreg free
  2723   0006F8                     
  2724                           ;main.c: 50:     clearDisplay();
  2725   0006F8  EC01  F008         	call	_clearDisplay	;wreg free
  2726   0006FC                     
  2727                           ;main.c: 51:     loadTimeFromFlash();
  2728   0006FC  ECFC  F004         	call	_loadTimeFromFlash	;wreg free
  2729   000700                     
  2730                           ;main.c: 53:     TMR1_StartTimer();
  2731   000700  EC30  F009         	call	_TMR1_StartTimer	;wreg free
  2732   000704                     
  2733                           ;main.c: 54:     TRISBbits.RB3 = 0;
  2734   000704  9693               	bcf	147,3,c	;volatile
  2735   000706                     
  2736                           ;main.c: 55:     INTCONbits.GIE = 1;
  2737   000706  8EF2               	bsf	242,7,c	;volatile
  2738   000708                     
  2739                           ;main.c: 56:     INTCONbits.PEIE = 1;
  2740   000708  8CF2               	bsf	242,6,c	;volatile
  2741   00070A                     l3973:
  2742                           
  2743                           ;main.c: 60:     {;main.c: 61:         displayTime();
  2744   00070A  EC57  F005         	call	_displayTime	;wreg free
  2745   00070E                     
  2746                           ;main.c: 62:         checkButtons();
  2747   00070E  EC57  F000         	call	_checkButtons	;wreg free
  2748   000712                     
  2749                           ;main.c: 63:         processAlarm();
  2750   000712  EC65  F007         	call	_processAlarm	;wreg free
  2751   000716                     
  2752                           ;main.c: 64:         if(btTimeSet) {
  2753   000716  0100               	movlb	0	; () banked
  2754   000718  51A4               	movf	_btTimeSet& (0+255),w,b
  2755   00071A  B4D8               	btfsc	status,2,c
  2756   00071C  EF92  F003         	goto	u3361
  2757   000720  EF94  F003         	goto	u3360
  2758   000724                     u3361:
  2759   000724  EF85  F003         	goto	l3973
  2760   000728                     u3360:
  2761   000728                     
  2762                           ; BSR set to: 0
  2763                           ;main.c: 66:             if (uartBuffer[0] == 'H' && uartBuffer[3] == 'M' && uartBuffer[
      +                          6] == ';')
  2764   000728  0E48               	movlw	72
  2765   00072A  1980               	xorwf	_uartBuffer& (0+255),w,b
  2766   00072C  A4D8               	btfss	status,2,c
  2767   00072E  EF9B  F003         	goto	u3371
  2768   000732  EF9D  F003         	goto	u3370
  2769   000736                     u3371:
  2770   000736  EF85  F003         	goto	l3973
  2771   00073A                     u3370:
  2772   00073A                     
  2773                           ; BSR set to: 0
  2774   00073A  0E4D               	movlw	77
  2775   00073C  1983               	xorwf	(_uartBuffer+3)& (0+255),w,b
  2776   00073E  A4D8               	btfss	status,2,c
  2777   000740  EFA4  F003         	goto	u3381
  2778   000744  EFA6  F003         	goto	u3380
  2779   000748                     u3381:
  2780   000748  EF85  F003         	goto	l3973
  2781   00074C                     u3380:
  2782   00074C                     
  2783                           ; BSR set to: 0
  2784   00074C  0E3B               	movlw	59
  2785   00074E  1986               	xorwf	(_uartBuffer+6)& (0+255),w,b
  2786   000750  A4D8               	btfss	status,2,c
  2787   000752  EFAD  F003         	goto	u3391
  2788   000756  EFAF  F003         	goto	u3390
  2789   00075A                     u3391:
  2790   00075A  EF85  F003         	goto	l3973
  2791   00075E                     u3390:
  2792   00075E                     
  2793                           ; BSR set to: 0
  2794                           ;main.c: 67:             {;main.c: 69:                 uint8_t hours_pom = (uartBuffer[1
      +                          ] - '0') * 10 + (uartBuffer[2] - '0');
  2795   00075E  5181               	movf	(_uartBuffer+1)& (0+255),w,b
  2796   000760  0D0A               	mullw	10
  2797   000762  50F3               	movf	243,w,c
  2798   000764  2582               	addwf	(_uartBuffer+2)& (0+255),w,b
  2799   000766  0FF0               	addlw	240
  2800   000768  6FF5               	movwf	main@hours_pom& (0+255),b
  2801                           
  2802                           ;main.c: 72:                 uint8_t minutes_pom = (uartBuffer[4] - '0') * 10 + (uartBuf
      +                          fer[5] - '0');
  2803   00076A  5184               	movf	(_uartBuffer+4)& (0+255),w,b
  2804   00076C  0D0A               	mullw	10
  2805   00076E  50F3               	movf	243,w,c
  2806   000770  2585               	addwf	(_uartBuffer+5)& (0+255),w,b
  2807   000772  0FF0               	addlw	240
  2808   000774  6FF6               	movwf	main@minutes_pom& (0+255),b
  2809   000776                     
  2810                           ; BSR set to: 0
  2811                           ;main.c: 75:                 if (hours_pom < 24 && minutes_pom < 60)
  2812   000776  0E18               	movlw	24
  2813   000778  61F5               	cpfslt	main@hours_pom& (0+255),b
  2814   00077A  EFC1  F003         	goto	u3401
  2815   00077E  EFC3  F003         	goto	u3400
  2816   000782                     u3401:
  2817   000782  EFD7  F003         	goto	l431
  2818   000786                     u3400:
  2819   000786                     
  2820                           ; BSR set to: 0
  2821   000786  0E3C               	movlw	60
  2822   000788  61F6               	cpfslt	main@minutes_pom& (0+255),b
  2823   00078A  EFC9  F003         	goto	u3411
  2824   00078E  EFCB  F003         	goto	u3410
  2825   000792                     u3411:
  2826   000792  EFD7  F003         	goto	l431
  2827   000796                     u3410:
  2828   000796                     
  2829                           ; BSR set to: 0
  2830                           ;main.c: 76:                 {;main.c: 78:                     btTimeSet = 0;
  2831   000796  0E00               	movlw	0
  2832   000798  6FA4               	movwf	_btTimeSet& (0+255),b
  2833   00079A                     
  2834                           ; BSR set to: 0
  2835                           ;main.c: 79:                     hours = hours_pom;
  2836   00079A  C0F5  F0AE         	movff	main@hours_pom,_hours
  2837   00079E                     
  2838                           ; BSR set to: 0
  2839                           ;main.c: 80:                     minutes = minutes_pom;
  2840   00079E  C0F6  F0AD         	movff	main@minutes_pom,_minutes
  2841   0007A2                     
  2842                           ; BSR set to: 0
  2843                           ;main.c: 81:                     displayTime();
  2844   0007A2  EC57  F005         	call	_displayTime	;wreg free
  2845   0007A6                     
  2846                           ;main.c: 82:                     saveTimeToFlash();
  2847   0007A6  ECB2  F006         	call	_saveTimeToFlash	;wreg free
  2848   0007AA  EF85  F003         	goto	l3973
  2849   0007AE                     l431:
  2850                           
  2851                           ; BSR set to: 0
  2852   0007AE  EF85  F003         	goto	l3973
  2853   0007B2  EF55  F000         	goto	start
  2854   0007B6                     __end_of_main:
  2855                           	callstack 0
  2856                           
  2857 ;; *************** function _processAlarm *****************
  2858 ;; Defined at:
  2859 ;;		line 164 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 10
  2880 ;; This function calls:
  2881 ;;		_triggerAlarm
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text1
  2888   000ECA                     __ptext1:
  2889                           	callstack 0
  2890   000ECA                     _processAlarm:
  2891                           	callstack 20
  2892   000ECA                     
  2893                           ;main.c: 167:     if (alarmSet && !alarmTriggered)
  2894   000ECA  0100               	movlb	0	; () banked
  2895   000ECC  51A9               	movf	_alarmSet& (0+255),w,b
  2896   000ECE  B4D8               	btfsc	status,2,c
  2897   000ED0  EF6C  F007         	goto	u3201
  2898   000ED4  EF6E  F007         	goto	u3200
  2899   000ED8                     u3201:
  2900   000ED8  EF8D  F007         	goto	l469
  2901   000EDC                     u3200:
  2902   000EDC                     
  2903                           ; BSR set to: 0
  2904   000EDC  51A7               	movf	_alarmTriggered& (0+255),w,b
  2905   000EDE  A4D8               	btfss	status,2,c
  2906   000EE0  EF74  F007         	goto	u3211
  2907   000EE4  EF76  F007         	goto	u3210
  2908   000EE8                     u3211:
  2909   000EE8  EF8D  F007         	goto	l469
  2910   000EEC                     u3210:
  2911   000EEC                     
  2912                           ; BSR set to: 0
  2913                           ;main.c: 168:     {;main.c: 170:         if (hours == alarmHours && minutes == alarmMinu
      +                          tes)
  2914   000EEC  51AB               	movf	_alarmHours& (0+255),w,b
  2915   000EEE  19AE               	xorwf	_hours& (0+255),w,b
  2916   000EF0  A4D8               	btfss	status,2,c
  2917   000EF2  EF7D  F007         	goto	u3221
  2918   000EF6  EF7F  F007         	goto	u3220
  2919   000EFA                     u3221:
  2920   000EFA  EF8D  F007         	goto	l469
  2921   000EFE                     u3220:
  2922   000EFE                     
  2923                           ; BSR set to: 0
  2924   000EFE  51AA               	movf	_alarmMinutes& (0+255),w,b
  2925   000F00  19AD               	xorwf	_minutes& (0+255),w,b
  2926   000F02  A4D8               	btfss	status,2,c
  2927   000F04  EF86  F007         	goto	u3231
  2928   000F08  EF88  F007         	goto	u3230
  2929   000F0C                     u3231:
  2930   000F0C  EF8D  F007         	goto	l469
  2931   000F10                     u3230:
  2932   000F10                     
  2933                           ; BSR set to: 0
  2934                           ;main.c: 171:         {;main.c: 172:             triggerAlarm();
  2935   000F10  EC9D  F004         	call	_triggerAlarm	;wreg free
  2936   000F14                     
  2937                           ;main.c: 173:             alarmTriggered = 1;
  2938   000F14  0E01               	movlw	1
  2939   000F16  0100               	movlb	0	; () banked
  2940   000F18  6FA7               	movwf	_alarmTriggered& (0+255),b
  2941   000F1A                     l469:
  2942                           
  2943                           ; BSR set to: 0
  2944   000F1A  0012               	return		;funcret
  2945   000F1C                     __end_of_processAlarm:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _triggerAlarm *****************
  2949 ;; Defined at:
  2950 ;;		line 179 in file "main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  i               2   13[BANK0 ] unsigned int 
  2955 ;;  numCycles       2   11[BANK0 ] unsigned int 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;Total ram usage:        6 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 9
  2972 ;; This function calls:
  2973 ;;		_clearAlarm
  2974 ;;		_clearDisplay
  2975 ;;		_generateBeep
  2976 ;;		_printString
  2977 ;; This function is called by:
  2978 ;;		_processAlarm
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text2
  2983   00093A                     __ptext2:
  2984                           	callstack 0
  2985   00093A                     _triggerAlarm:
  2986                           	callstack 20
  2987   00093A                     
  2988                           ;main.c: 186:     unsigned int numCycles = 60000 / (2 * 500);
  2989   00093A  0E00               	movlw	0
  2990   00093C  0100               	movlb	0	; () banked
  2991   00093E  6FBC               	movwf	(triggerAlarm@numCycles+1)& (0+255),b
  2992   000940  0E3C               	movlw	60
  2993   000942  6FBB               	movwf	triggerAlarm@numCycles& (0+255),b
  2994                           
  2995                           ;main.c: 188:     for (unsigned int i = 0; i < numCycles; i++)
  2996   000944  0E00               	movlw	0
  2997   000946  6FBE               	movwf	(triggerAlarm@i+1)& (0+255),b
  2998   000948  0E00               	movlw	0
  2999   00094A  6FBD               	movwf	triggerAlarm@i& (0+255),b
  3000   00094C  EFF0  F004         	goto	l3713
  3001   000950                     l473:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;main.c: 189:     {;main.c: 191:         if (!PORTBbits.RB2)
  3005   000950  B481               	btfsc	129,2,c	;volatile
  3006   000952  EFAD  F004         	goto	u2961
  3007   000956  EFAF  F004         	goto	u2960
  3008   00095A                     u2961:
  3009   00095A  EFC9  F004         	goto	l3701
  3010   00095E                     u2960:
  3011   00095E                     
  3012                           ; BSR set to: 0
  3013                           ;main.c: 192:         {;main.c: 193:             _delay((unsigned long)((100)*(8000000/4
      +                          000.0)));
  3014   00095E  0E02               	movlw	2
  3015   000960  6E52               	movwf	(??_triggerAlarm+1)^0,c
  3016   000962  0E04               	movlw	4
  3017   000964  6E51               	movwf	??_triggerAlarm^0,c
  3018   000966  0EBA               	movlw	186
  3019   000968                     u3437:
  3020   000968  2EE8               	decfsz	wreg,f,c
  3021   00096A  D7FE               	bra	u3437
  3022   00096C  2E51               	decfsz	??_triggerAlarm^0,f,c
  3023   00096E  D7FC               	bra	u3437
  3024   000970  2E52               	decfsz	(??_triggerAlarm+1)^0,f,c
  3025   000972  D7FA               	bra	u3437
  3026   000974  F000 F000          	nop2	
  3027   000978                     
  3028                           ;main.c: 194:             if (!PORTBbits.RB2)
  3029   000978  B481               	btfsc	129,2,c	;volatile
  3030   00097A  EFC1  F004         	goto	u2971
  3031   00097E  EFC3  F004         	goto	u2970
  3032   000982                     u2971:
  3033   000982  EFC9  F004         	goto	l3701
  3034   000986                     u2970:
  3035   000986                     
  3036                           ;main.c: 195:             {;main.c: 196:                 clearDisplay();
  3037   000986  EC01  F008         	call	_clearDisplay	;wreg free
  3038   00098A                     
  3039                           ;main.c: 197:                 clearAlarm();
  3040   00098A  EC13  F009         	call	_clearAlarm	;wreg free
  3041   00098E  EFFB  F004         	goto	l476
  3042   000992                     l3701:
  3043                           
  3044                           ;main.c: 203:         printString("ALARM");
  3045   000992  0EF9               	movlw	low STR_1
  3046   000994  6E47               	movwf	printString@str^0,c
  3047   000996  0EFF               	movlw	high STR_1
  3048   000998  6E48               	movwf	(printString@str+1)^0,c
  3049   00099A  ECA2  F001         	call	_printString	;wreg free
  3050   00099E                     
  3051                           ;main.c: 205:         generateBeep(500);
  3052   00099E  0E01               	movlw	1
  3053   0009A0  6E15               	movwf	(generateBeep@duration_ms+1)^0,c
  3054   0009A2  0EF4               	movlw	244
  3055   0009A4  6E14               	movwf	generateBeep@duration_ms^0,c
  3056   0009A6  ECF1  F006         	call	_generateBeep	;wreg free
  3057   0009AA                     
  3058                           ;main.c: 206:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3059   0009AA  0E06               	movlw	6
  3060   0009AC  6E52               	movwf	(??_triggerAlarm+1)^0,c
  3061   0009AE  0E13               	movlw	19
  3062   0009B0  6E51               	movwf	??_triggerAlarm^0,c
  3063   0009B2  0EAE               	movlw	174
  3064   0009B4                     u3447:
  3065   0009B4  2EE8               	decfsz	wreg,f,c
  3066   0009B6  D7FE               	bra	u3447
  3067   0009B8  2E51               	decfsz	??_triggerAlarm^0,f,c
  3068   0009BA  D7FC               	bra	u3447
  3069   0009BC  2E52               	decfsz	(??_triggerAlarm+1)^0,f,c
  3070   0009BE  D7FA               	bra	u3447
  3071   0009C0                     
  3072                           ;main.c: 207:         clearDisplay();
  3073   0009C0  EC01  F008         	call	_clearDisplay	;wreg free
  3074   0009C4                     
  3075                           ;main.c: 209:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3076   0009C4  0E06               	movlw	6
  3077   0009C6  6E52               	movwf	(??_triggerAlarm+1)^0,c
  3078   0009C8  0E13               	movlw	19
  3079   0009CA  6E51               	movwf	??_triggerAlarm^0,c
  3080   0009CC  0EAE               	movlw	174
  3081   0009CE                     u3457:
  3082   0009CE  2EE8               	decfsz	wreg,f,c
  3083   0009D0  D7FE               	bra	u3457
  3084   0009D2  2E51               	decfsz	??_triggerAlarm^0,f,c
  3085   0009D4  D7FC               	bra	u3457
  3086   0009D6  2E52               	decfsz	(??_triggerAlarm+1)^0,f,c
  3087   0009D8  D7FA               	bra	u3457
  3088   0009DA                     
  3089                           ;main.c: 210:     }
  3090   0009DA  0100               	movlb	0	; () banked
  3091   0009DC  4BBD               	infsnz	triggerAlarm@i& (0+255),f,b
  3092   0009DE  2BBE               	incf	(triggerAlarm@i+1)& (0+255),f,b
  3093   0009E0                     l3713:
  3094                           
  3095                           ; BSR set to: 0
  3096   0009E0  51BB               	movf	triggerAlarm@numCycles& (0+255),w,b
  3097   0009E2  5DBD               	subwf	triggerAlarm@i& (0+255),w,b
  3098   0009E4  51BC               	movf	(triggerAlarm@numCycles+1)& (0+255),w,b
  3099   0009E6  59BE               	subwfb	(triggerAlarm@i+1)& (0+255),w,b
  3100   0009E8  A0D8               	btfss	status,0,c
  3101   0009EA  EFF9  F004         	goto	u2981
  3102   0009EE  EFFB  F004         	goto	u2980
  3103   0009F2                     u2981:
  3104   0009F2  EFA8  F004         	goto	l473
  3105   0009F6                     u2980:
  3106   0009F6                     l476:
  3107   0009F6  0012               	return		;funcret
  3108   0009F8                     __end_of_triggerAlarm:
  3109                           	callstack 0
  3110                           
  3111 ;; *************** function _generateBeep *****************
  3112 ;; Defined at:
  3113 ;;		line 99 in file "main.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  duration_ms     2   19[COMRAM] unsigned int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  i               2   23[COMRAM] unsigned int 
  3118 ;;  cycles          2   21[COMRAM] unsigned int 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;Total ram usage:        6 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; Hardware stack levels required when called: 6
  3135 ;; This function calls:
  3136 ;;		___lwdiv
  3137 ;;		___wmul
  3138 ;;		_delayMicroseconds
  3139 ;; This function is called by:
  3140 ;;		_triggerAlarm
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text3
  3145   000DE2                     __ptext3:
  3146                           	callstack 0
  3147   000DE2                     _generateBeep:
  3148                           	callstack 22
  3149   000DE2                     
  3150                           ;main.c: 100:     unsigned int i;;main.c: 101:     unsigned int cycles = (duration_ms * 
      +                          1000) / 244;
  3151   000DE2  C014  F007         	movff	generateBeep@duration_ms,___wmul@multiplier
  3152   000DE6  C015  F008         	movff	generateBeep@duration_ms+1,___wmul@multiplier+1
  3153   000DEA  0E03               	movlw	3
  3154   000DEC  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  3155   000DEE  0EE8               	movlw	232
  3156   000DF0  6E09               	movwf	___wmul@multiplicand^0,c
  3157   000DF2  ECA8  F008         	call	___wmul	;wreg free
  3158   000DF6  C007  F00D         	movff	?___wmul,___lwdiv@dividend
  3159   000DFA  C008  F00E         	movff	?___wmul+1,___lwdiv@dividend+1
  3160   000DFE  0E00               	movlw	0
  3161   000E00  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  3162   000E02  0EF4               	movlw	244
  3163   000E04  6E0F               	movwf	___lwdiv@divisor^0,c
  3164   000E06  EC2B  F007         	call	___lwdiv	;wreg free
  3165   000E0A  C00D  F016         	movff	?___lwdiv,generateBeep@cycles
  3166   000E0E  C00E  F017         	movff	?___lwdiv+1,generateBeep@cycles+1
  3167   000E12                     
  3168                           ;main.c: 102:     for (i = 0; i < cycles; i++) {
  3169   000E12  0E00               	movlw	0
  3170   000E14  6E19               	movwf	(generateBeep@i+1)^0,c
  3171   000E16  0E00               	movlw	0
  3172   000E18  6E18               	movwf	generateBeep@i^0,c
  3173   000E1A  EF1F  F007         	goto	l3497
  3174   000E1E                     l446:
  3175                           
  3176                           ;main.c: 103:         LATBbits.LATB3 = 1;
  3177   000E1E  868A               	bsf	138,3,c	;volatile
  3178   000E20                     
  3179                           ;main.c: 104:         delayMicroseconds(122);
  3180   000E20  0E00               	movlw	0
  3181   000E22  6E08               	movwf	(delayMicroseconds@microseconds+1)^0,c
  3182   000E24  0E7A               	movlw	122
  3183   000E26  6E07               	movwf	delayMicroseconds@microseconds^0,c
  3184   000E28  EC7F  F008         	call	_delayMicroseconds	;wreg free
  3185   000E2C                     
  3186                           ;main.c: 105:         LATBbits.LATB3 = 0;
  3187   000E2C  968A               	bcf	138,3,c	;volatile
  3188                           
  3189                           ;main.c: 106:         delayMicroseconds(122);
  3190   000E2E  0E00               	movlw	0
  3191   000E30  6E08               	movwf	(delayMicroseconds@microseconds+1)^0,c
  3192   000E32  0E7A               	movlw	122
  3193   000E34  6E07               	movwf	delayMicroseconds@microseconds^0,c
  3194   000E36  EC7F  F008         	call	_delayMicroseconds	;wreg free
  3195   000E3A                     
  3196                           ;main.c: 107:     }
  3197   000E3A  4A18               	infsnz	generateBeep@i^0,f,c
  3198   000E3C  2A19               	incf	(generateBeep@i+1)^0,f,c
  3199   000E3E                     l3497:
  3200   000E3E  5016               	movf	generateBeep@cycles^0,w,c
  3201   000E40  5C18               	subwf	generateBeep@i^0,w,c
  3202   000E42  5017               	movf	(generateBeep@cycles+1)^0,w,c
  3203   000E44  5819               	subwfb	(generateBeep@i+1)^0,w,c
  3204   000E46  A0D8               	btfss	status,0,c
  3205   000E48  EF28  F007         	goto	u2761
  3206   000E4C  EF2A  F007         	goto	u2760
  3207   000E50                     u2761:
  3208   000E50  EF0F  F007         	goto	l446
  3209   000E54                     u2760:
  3210   000E54  0012               	return		;funcret
  3211   000E56                     __end_of_generateBeep:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _delayMicroseconds *****************
  3215 ;; Defined at:
  3216 ;;		line 89 in file "main.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  microseconds    2    6[COMRAM] unsigned int 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  i               2    8[COMRAM] unsigned int 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;Total ram usage:        4 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 5
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_generateBeep
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text4
  3245   0010FE                     __ptext4:
  3246                           	callstack 0
  3247   0010FE                     _delayMicroseconds:
  3248                           	callstack 22
  3249   0010FE                     
  3250                           ;main.c: 91:     unsigned int i;;main.c: 92:     for (i = 0; i < microseconds; i++) {
  3251   0010FE  0E00               	movlw	0
  3252   001100  6E0A               	movwf	(delayMicroseconds@i+1)^0,c
  3253   001102  0E00               	movlw	0
  3254   001104  6E09               	movwf	delayMicroseconds@i^0,c
  3255   001106  EF88  F008         	goto	l3339
  3256   00110A                     l440:
  3257   00110A  0000               	nop		;# 
  3258   00110C                     
  3259                           ;main.c: 96:     }
  3260   00110C  4A09               	infsnz	delayMicroseconds@i^0,f,c
  3261   00110E  2A0A               	incf	(delayMicroseconds@i+1)^0,f,c
  3262   001110                     l3339:
  3263   001110  5007               	movf	delayMicroseconds@microseconds^0,w,c
  3264   001112  5C09               	subwf	delayMicroseconds@i^0,w,c
  3265   001114  5008               	movf	(delayMicroseconds@microseconds+1)^0,w,c
  3266   001116  580A               	subwfb	(delayMicroseconds@i+1)^0,w,c
  3267   001118  A0D8               	btfss	status,0,c
  3268   00111A  EF91  F008         	goto	u2591
  3269   00111E  EF93  F008         	goto	u2590
  3270   001122                     u2591:
  3271   001122  EF85  F008         	goto	l440
  3272   001126                     u2590:
  3273   001126  0012               	return		;funcret
  3274   001128                     __end_of_delayMicroseconds:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function ___wmul *****************
  3278 ;; Defined at:
  3279 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  multiplier      2    6[COMRAM] unsigned int 
  3282 ;;  multiplicand    2    8[COMRAM] unsigned int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  product         2   10[COMRAM] unsigned int 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2    6[COMRAM] unsigned int 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, prodl, prodh
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        6 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 5
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_generateBeep
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text5
  3309   001150                     __ptext5:
  3310                           	callstack 0
  3311   001150                     ___wmul:
  3312                           	callstack 22
  3313   001150  5007               	movf	___wmul@multiplier^0,w,c
  3314   001152  0209               	mulwf	___wmul@multiplicand^0,c
  3315   001154  CFF3 F00B          	movff	prodl,___wmul@product
  3316   001158  CFF4 F00C          	movff	prodh,___wmul@product+1
  3317   00115C  5007               	movf	___wmul@multiplier^0,w,c
  3318   00115E  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  3319   001160  50F3               	movf	243,w,c
  3320   001162  260C               	addwf	(___wmul@product+1)^0,f,c
  3321   001164  5008               	movf	(___wmul@multiplier+1)^0,w,c
  3322   001166  0209               	mulwf	___wmul@multiplicand^0,c
  3323   001168  50F3               	movf	243,w,c
  3324   00116A  260C               	addwf	(___wmul@product+1)^0,f,c
  3325   00116C  C00B  F007         	movff	___wmul@product,?___wmul
  3326   001170  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  3327   001174  0012               	return		;funcret
  3328   001176                     __end_of___wmul:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function ___lwdiv *****************
  3332 ;; Defined at:
  3333 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  dividend        2   12[COMRAM] unsigned int 
  3336 ;;  divisor         2   14[COMRAM] unsigned int 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  quotient        2   17[COMRAM] unsigned int 
  3339 ;;  counter         1   16[COMRAM] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2   12[COMRAM] unsigned int 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:        7 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 5
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_generateBeep
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text6
  3364   000E56                     __ptext6:
  3365                           	callstack 0
  3366   000E56                     ___lwdiv:
  3367                           	callstack 22
  3368   000E56  0E00               	movlw	0
  3369   000E58  6E13               	movwf	(___lwdiv@quotient+1)^0,c
  3370   000E5A  0E00               	movlw	0
  3371   000E5C  6E12               	movwf	___lwdiv@quotient^0,c
  3372   000E5E  500F               	movf	___lwdiv@divisor^0,w,c
  3373   000E60  1010               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3374   000E62  B4D8               	btfsc	status,2,c
  3375   000E64  EF36  F007         	goto	u2671
  3376   000E68  EF38  F007         	goto	u2670
  3377   000E6C                     u2671:
  3378   000E6C  EF60  F007         	goto	l1115
  3379   000E70                     u2670:
  3380   000E70  0E01               	movlw	1
  3381   000E72  6E11               	movwf	___lwdiv@counter^0,c
  3382   000E74  EF40  F007         	goto	l3395
  3383   000E78                     l3393:
  3384   000E78  90D8               	bcf	status,0,c
  3385   000E7A  360F               	rlcf	___lwdiv@divisor^0,f,c
  3386   000E7C  3610               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3387   000E7E  2A11               	incf	___lwdiv@counter^0,f,c
  3388   000E80                     l3395:
  3389   000E80  AE10               	btfss	(___lwdiv@divisor+1)^0,7,c
  3390   000E82  EF45  F007         	goto	u2681
  3391   000E86  EF47  F007         	goto	u2680
  3392   000E8A                     u2681:
  3393   000E8A  EF3C  F007         	goto	l3393
  3394   000E8E                     u2680:
  3395   000E8E                     l3397:
  3396   000E8E  90D8               	bcf	status,0,c
  3397   000E90  3612               	rlcf	___lwdiv@quotient^0,f,c
  3398   000E92  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3399   000E94  500F               	movf	___lwdiv@divisor^0,w,c
  3400   000E96  5C0D               	subwf	___lwdiv@dividend^0,w,c
  3401   000E98  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  3402   000E9A  580E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3403   000E9C  A0D8               	btfss	status,0,c
  3404   000E9E  EF53  F007         	goto	u2691
  3405   000EA2  EF55  F007         	goto	u2690
  3406   000EA6                     u2691:
  3407   000EA6  EF5A  F007         	goto	l3405
  3408   000EAA                     u2690:
  3409   000EAA  500F               	movf	___lwdiv@divisor^0,w,c
  3410   000EAC  5E0D               	subwf	___lwdiv@dividend^0,f,c
  3411   000EAE  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  3412   000EB0  5A0E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3413   000EB2  8012               	bsf	___lwdiv@quotient^0,0,c
  3414   000EB4                     l3405:
  3415   000EB4  90D8               	bcf	status,0,c
  3416   000EB6  3210               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3417   000EB8  320F               	rrcf	___lwdiv@divisor^0,f,c
  3418   000EBA  2E11               	decfsz	___lwdiv@counter^0,f,c
  3419   000EBC  EF47  F007         	goto	l3397
  3420   000EC0                     l1115:
  3421   000EC0  C012  F00D         	movff	___lwdiv@quotient,?___lwdiv
  3422   000EC4  C013  F00E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3423   000EC8  0012               	return		;funcret
  3424   000ECA                     __end_of___lwdiv:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function _clearDisplay *****************
  3428 ;; Defined at:
  3429 ;;		line 105 in file "MAX7219.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  i               2   70[COMRAM] int 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;Total ram usage:        2 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 8
  3450 ;; This function calls:
  3451 ;;		_flushBuffer
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;;		_triggerAlarm
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text7
  3459   001002                     __ptext7:
  3460                           	callstack 0
  3461   001002                     _clearDisplay:
  3462                           	callstack 20
  3463   001002                     
  3464                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  3465   001002  0E00               	movlw	0
  3466   001004  6E48               	movwf	(clearDisplay@i+1)^0,c
  3467   001006  0E00               	movlw	0
  3468   001008  6E47               	movwf	clearDisplay@i^0,c
  3469   00100A                     l3479:
  3470                           
  3471                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  3472   00100A  5047               	movf	clearDisplay@i^0,w,c
  3473   00100C  0F60               	addlw	low _bufferCol
  3474   00100E  6ED9               	movwf	fsr2l,c
  3475   001010  6ADA               	clrf	fsr2h,c
  3476   001012  6ADF               	clrf	indf2,c
  3477   001014                     
  3478                           ;MAX7219.c: 110:  }
  3479   001014  4A47               	infsnz	clearDisplay@i^0,f,c
  3480   001016  2A48               	incf	(clearDisplay@i+1)^0,f,c
  3481   001018  BE48               	btfsc	(clearDisplay@i+1)^0,7,c
  3482   00101A  EF18  F008         	goto	u2751
  3483   00101E  5048               	movf	(clearDisplay@i+1)^0,w,c
  3484   001020  E109               	bnz	u2750
  3485   001022  0E1F               	movlw	31
  3486   001024  5C47               	subwf	clearDisplay@i^0,w,c
  3487   001026  A0D8               	btfss	status,0,c
  3488   001028  EF18  F008         	goto	u2751
  3489   00102C  EF1A  F008         	goto	u2750
  3490   001030                     u2751:
  3491   001030  EF05  F008         	goto	l3479
  3492   001034                     u2750:
  3493   001034                     
  3494                           ;MAX7219.c: 111:  flushBuffer();
  3495   001034  EC6C  F002         	call	_flushBuffer	;wreg free
  3496   001038  0012               	return		;funcret
  3497   00103A                     __end_of_clearDisplay:
  3498                           	callstack 0
  3499                           
  3500 ;; *************** function _matrixInit *****************
  3501 ;; Defined at:
  3502 ;;		line 96 in file "MAX7219.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2, status,0, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;Total ram usage:        0 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; Hardware stack levels required when called: 7
  3523 ;; This function calls:
  3524 ;;		_max7219_cmd
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text8
  3531   00103A                     __ptext8:
  3532                           	callstack 0
  3533   00103A                     _matrixInit:
  3534                           	callstack 23
  3535   00103A                     
  3536                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  3537   00103A  0E00               	movlw	0
  3538   00103C  6E08               	movwf	max7219_cmd@data^0,c
  3539   00103E  0E09               	movlw	9
  3540   001040  EC8E  F007         	call	_max7219_cmd
  3541                           
  3542                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  3543   001044  0E01               	movlw	1
  3544   001046  6E08               	movwf	max7219_cmd@data^0,c
  3545   001048  0E0A               	movlw	10
  3546   00104A  EC8E  F007         	call	_max7219_cmd
  3547                           
  3548                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  3549   00104E  0E07               	movlw	7
  3550   001050  6E08               	movwf	max7219_cmd@data^0,c
  3551   001052  0E0B               	movlw	11
  3552   001054  EC8E  F007         	call	_max7219_cmd
  3553                           
  3554                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  3555   001058  0E01               	movlw	1
  3556   00105A  6E08               	movwf	max7219_cmd@data^0,c
  3557   00105C  0E0C               	movlw	12
  3558   00105E  EC8E  F007         	call	_max7219_cmd
  3559                           
  3560                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  3561   001062  0E00               	movlw	0
  3562   001064  6E08               	movwf	max7219_cmd@data^0,c
  3563   001066  0E0F               	movlw	15
  3564   001068  EC8E  F007         	call	_max7219_cmd
  3565   00106C  0012               	return		;funcret
  3566   00106E                     __end_of_matrixInit:
  3567                           	callstack 0
  3568                           
  3569 ;; *************** function _max7219_cmd *****************
  3570 ;; Defined at:
  3571 ;;		line 76 in file "MAX7219.c"
  3572 ;; Parameters:    Size  Location     Type
  3573 ;;  Addr            1    wreg     unsigned char 
  3574 ;;  data            1    7[COMRAM] unsigned char 
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;  Addr            1   10[COMRAM] unsigned char 
  3577 ;;  i               2   13[COMRAM] int 
  3578 ;;  writeData       2   11[COMRAM] unsigned short 
  3579 ;; Return value:  Size  Location     Type
  3580 ;;                  1    wreg      void 
  3581 ;; Registers used:
  3582 ;;		wreg, status,2, status,0, cstack
  3583 ;; Tracked objects:
  3584 ;;		On entry : 0/0
  3585 ;;		On exit  : 0/0
  3586 ;;		Unchanged: 0/0
  3587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3588 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3589 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3591 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3592 ;;Total ram usage:        8 bytes
  3593 ;; Hardware stack levels used: 1
  3594 ;; Hardware stack levels required when called: 6
  3595 ;; This function calls:
  3596 ;;		_SPI_Exchange8bit
  3597 ;; This function is called by:
  3598 ;;		_matrixInit
  3599 ;; This function uses a non-reentrant model
  3600 ;;
  3601                           
  3602                           	psect	text9
  3603   000F1C                     __ptext9:
  3604                           	callstack 0
  3605   000F1C                     _max7219_cmd:
  3606                           	callstack 23
  3607                           
  3608                           ;incstack = 0
  3609                           ;max7219_cmd@Addr stored from wreg
  3610   000F1C  6E0B               	movwf	max7219_cmd@Addr^0,c
  3611   000F1E                     
  3612                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  3613   000F1E  5008               	movf	max7219_cmd@data^0,w,c
  3614   000F20  C00B  F009         	movff	max7219_cmd@Addr,??_max7219_cmd
  3615   000F24  6A0A               	clrf	(??_max7219_cmd+1)^0,c
  3616   000F26  C009  F00A         	movff	??_max7219_cmd,??_max7219_cmd+1
  3617   000F2A  6A09               	clrf	??_max7219_cmd^0,c
  3618   000F2C  1009               	iorwf	??_max7219_cmd^0,w,c
  3619   000F2E  6E0C               	movwf	max7219_cmd@writeData^0,c
  3620   000F30  500A               	movf	(??_max7219_cmd+1)^0,w,c
  3621   000F32  6E0D               	movwf	(max7219_cmd@writeData+1)^0,c
  3622   000F34  948B               	bcf	139,2,c	;volatile
  3623   000F36                     
  3624                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  3625   000F36  0E00               	movlw	0
  3626   000F38  6E0F               	movwf	(max7219_cmd@i+1)^0,c
  3627   000F3A  0E00               	movlw	0
  3628   000F3C  6E0E               	movwf	max7219_cmd@i^0,c
  3629   000F3E                     l3725:
  3630                           
  3631                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  3632   000F3E  500D               	movf	(max7219_cmd@writeData+1)^0,w,c
  3633   000F40  ECDF  F008         	call	_SPI_Exchange8bit
  3634                           
  3635                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  3636   000F44  500C               	movf	max7219_cmd@writeData^0,w,c
  3637   000F46  ECDF  F008         	call	_SPI_Exchange8bit
  3638   000F4A                     
  3639                           ;MAX7219.c: 90:  }
  3640   000F4A  4A0E               	infsnz	max7219_cmd@i^0,f,c
  3641   000F4C  2A0F               	incf	(max7219_cmd@i+1)^0,f,c
  3642   000F4E  BE0F               	btfsc	(max7219_cmd@i+1)^0,7,c
  3643   000F50  EFB3  F007         	goto	u2991
  3644   000F54  500F               	movf	(max7219_cmd@i+1)^0,w,c
  3645   000F56  E109               	bnz	u2990
  3646   000F58  0E04               	movlw	4
  3647   000F5A  5C0E               	subwf	max7219_cmd@i^0,w,c
  3648   000F5C  A0D8               	btfss	status,0,c
  3649   000F5E  EFB3  F007         	goto	u2991
  3650   000F62  EFB5  F007         	goto	u2990
  3651   000F66                     u2991:
  3652   000F66  EF9F  F007         	goto	l3725
  3653   000F6A                     u2990:
  3654   000F6A  848B               	bsf	139,2,c	;volatile
  3655   000F6C  0012               	return		;funcret
  3656   000F6E                     __end_of_max7219_cmd:
  3657                           	callstack 0
  3658                           
  3659 ;; *************** function _loadTimeFromFlash *****************
  3660 ;; Defined at:
  3661 ;;		line 350 in file "main.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  flashAddress    4    0        unsigned long 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3678 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3679 ;;Total ram usage:        0 bytes
  3680 ;; Hardware stack levels used: 1
  3681 ;; Hardware stack levels required when called: 6
  3682 ;; This function calls:
  3683 ;;		_FLASH_ReadByte
  3684 ;; This function is called by:
  3685 ;;		_main
  3686 ;; This function uses a non-reentrant model
  3687 ;;
  3688                           
  3689                           	psect	text10
  3690   0009F8                     __ptext10:
  3691                           	callstack 0
  3692   0009F8                     _loadTimeFromFlash:
  3693                           	callstack 24
  3694   0009F8                     
  3695                           ;main.c: 353:     hours = FLASH_ReadByte(flashAddress);
  3696   0009F8  0E80               	movlw	128
  3697   0009FA  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3698   0009FC  0E1F               	movlw	31
  3699   0009FE  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3700   000A00  0E00               	movlw	0
  3701   000A02  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3702   000A04  0E00               	movlw	0
  3703   000A06  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3704   000A08  EC03  F009         	call	_FLASH_ReadByte	;wreg free
  3705   000A0C  0100               	movlb	0	; () banked
  3706   000A0E  6FAE               	movwf	_hours& (0+255),b
  3707   000A10                     
  3708                           ; BSR set to: 0
  3709                           ;main.c: 354:     minutes = FLASH_ReadByte(flashAddress + 1);
  3710   000A10  0E81               	movlw	129
  3711   000A12  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3712   000A14  0E1F               	movlw	31
  3713   000A16  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3714   000A18  0E00               	movlw	0
  3715   000A1A  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3716   000A1C  0E00               	movlw	0
  3717   000A1E  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3718   000A20  EC03  F009         	call	_FLASH_ReadByte	;wreg free
  3719   000A24  0100               	movlb	0	; () banked
  3720   000A26  6FAD               	movwf	_minutes& (0+255),b
  3721   000A28                     
  3722                           ; BSR set to: 0
  3723                           ;main.c: 355:     alarmHours = FLASH_ReadByte(flashAddress + 2);
  3724   000A28  0E82               	movlw	130
  3725   000A2A  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3726   000A2C  0E1F               	movlw	31
  3727   000A2E  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3728   000A30  0E00               	movlw	0
  3729   000A32  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3730   000A34  0E00               	movlw	0
  3731   000A36  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3732   000A38  EC03  F009         	call	_FLASH_ReadByte	;wreg free
  3733   000A3C  0100               	movlb	0	; () banked
  3734   000A3E  6FAB               	movwf	_alarmHours& (0+255),b
  3735   000A40                     
  3736                           ; BSR set to: 0
  3737                           ;main.c: 356:     alarmMinutes = FLASH_ReadByte(flashAddress + 3);
  3738   000A40  0E83               	movlw	131
  3739   000A42  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3740   000A44  0E1F               	movlw	31
  3741   000A46  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3742   000A48  0E00               	movlw	0
  3743   000A4A  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3744   000A4C  0E00               	movlw	0
  3745   000A4E  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3746   000A50  EC03  F009         	call	_FLASH_ReadByte	;wreg free
  3747   000A54  0100               	movlb	0	; () banked
  3748   000A56  6FAA               	movwf	_alarmMinutes& (0+255),b
  3749   000A58                     
  3750                           ; BSR set to: 0
  3751                           ;main.c: 357:     alarmSet = FLASH_ReadByte(flashAddress + 4);
  3752   000A58  0E84               	movlw	132
  3753   000A5A  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3754   000A5C  0E1F               	movlw	31
  3755   000A5E  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3756   000A60  0E00               	movlw	0
  3757   000A62  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3758   000A64  0E00               	movlw	0
  3759   000A66  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3760   000A68  EC03  F009         	call	_FLASH_ReadByte	;wreg free
  3761   000A6C  0900               	iorlw	0
  3762   000A6E  A4D8               	btfss	status,2,c
  3763   000A70  EF3C  F005         	goto	u3011
  3764   000A74  EF3F  F005         	goto	u3010
  3765   000A78                     u3011:
  3766   000A78  0E01               	movlw	1
  3767   000A7A  EF40  F005         	goto	u3020
  3768   000A7E                     u3010:
  3769   000A7E  0E00               	movlw	0
  3770   000A80                     u3020:
  3771   000A80  0100               	movlb	0	; () banked
  3772   000A82  6FA9               	movwf	_alarmSet& (0+255),b
  3773   000A84                     
  3774                           ; BSR set to: 0
  3775                           ;main.c: 359:     if (hours >= 24) hours = 0;
  3776   000A84  0E17               	movlw	23
  3777   000A86  65AE               	cpfsgt	_hours& (0+255),b
  3778   000A88  EF48  F005         	goto	u3031
  3779   000A8C  EF4A  F005         	goto	u3030
  3780   000A90                     u3031:
  3781   000A90  EF4C  F005         	goto	l3779
  3782   000A94                     u3030:
  3783   000A94                     
  3784                           ; BSR set to: 0
  3785   000A94  0E00               	movlw	0
  3786   000A96  6FAE               	movwf	_hours& (0+255),b
  3787   000A98                     l3779:
  3788                           
  3789                           ; BSR set to: 0
  3790                           ;main.c: 360:     if (minutes >= 60) minutes = 0;
  3791   000A98  0E3B               	movlw	59
  3792   000A9A  65AD               	cpfsgt	_minutes& (0+255),b
  3793   000A9C  EF52  F005         	goto	u3041
  3794   000AA0  EF54  F005         	goto	u3040
  3795   000AA4                     u3041:
  3796   000AA4  EF56  F005         	goto	l520
  3797   000AA8                     u3040:
  3798   000AA8                     
  3799                           ; BSR set to: 0
  3800   000AA8  0E00               	movlw	0
  3801   000AAA  6FAD               	movwf	_minutes& (0+255),b
  3802   000AAC                     l520:
  3803                           
  3804                           ; BSR set to: 0
  3805   000AAC  0012               	return		;funcret
  3806   000AAE                     __end_of_loadTimeFromFlash:
  3807                           	callstack 0
  3808                           
  3809 ;; *************** function _checkButtons *****************
  3810 ;; Defined at:
  3811 ;;		line 226 in file "main.c"
  3812 ;; Parameters:    Size  Location     Type
  3813 ;;		None
  3814 ;; Auto vars:     Size  Location     Type
  3815 ;;		None
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      void 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3825 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;Total ram usage:        2 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 10
  3832 ;; This function calls:
  3833 ;;		___awmod
  3834 ;;		_clearAlarm
  3835 ;;		_displayAlarmTime
  3836 ;;		_displayTime
  3837 ;;		_saveTimeToFlash
  3838 ;; This function is called by:
  3839 ;;		_main
  3840 ;; This function uses a non-reentrant model
  3841 ;;
  3842                           
  3843                           	psect	text11
  3844   0000AE                     __ptext11:
  3845                           	callstack 0
  3846   0000AE                     _checkButtons:
  3847                           	callstack 20
  3848   0000AE                     
  3849                           ;main.c: 228:     static uint8_t button3PressCount = 0;;main.c: 229:     static uint16_t
      +                           button3HoldTime = 0;;main.c: 230:     static _Bool alarmSettingMode = 0;;main.c: 233:  
      +                             if (!PORTBbits.RB0)
  3850   0000AE  B081               	btfsc	129,0,c	;volatile
  3851   0000B0  EF5C  F000         	goto	u3051
  3852   0000B4  EF5E  F000         	goto	u3050
  3853   0000B8                     u3051:
  3854   0000B8  EF9F  F000         	goto	l3799
  3855   0000BC                     u3050:
  3856   0000BC                     
  3857                           ;main.c: 234:     {;main.c: 235:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3858   0000BC  0E02               	movlw	2
  3859   0000BE  6E52               	movwf	(??_checkButtons+1)^0,c
  3860   0000C0  0E04               	movlw	4
  3861   0000C2  6E51               	movwf	??_checkButtons^0,c
  3862   0000C4  0EBA               	movlw	186
  3863   0000C6                     u3467:
  3864   0000C6  2EE8               	decfsz	wreg,f,c
  3865   0000C8  D7FE               	bra	u3467
  3866   0000CA  2E51               	decfsz	??_checkButtons^0,f,c
  3867   0000CC  D7FC               	bra	u3467
  3868   0000CE  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  3869   0000D0  D7FA               	bra	u3467
  3870   0000D2  F000 F000          	nop2	
  3871   0000D6                     
  3872                           ;main.c: 236:         if (!PORTBbits.RB0)
  3873   0000D6  B081               	btfsc	129,0,c	;volatile
  3874   0000D8  EF70  F000         	goto	u3061
  3875   0000DC  EF72  F000         	goto	u3060
  3876   0000E0                     u3061:
  3877   0000E0  EF9F  F000         	goto	l3799
  3878   0000E4                     u3060:
  3879   0000E4                     
  3880                           ;main.c: 237:         {;main.c: 238:             if (alarmSettingMode)
  3881   0000E4  0100               	movlb	0	; () banked
  3882   0000E6  51A2               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3883   0000E8  B4D8               	btfsc	status,2,c
  3884   0000EA  EF79  F000         	goto	u3071
  3885   0000EE  EF7B  F000         	goto	u3070
  3886   0000F2                     u3071:
  3887   0000F2  EF8E  F000         	goto	l3795
  3888   0000F6                     u3070:
  3889   0000F6                     
  3890                           ; BSR set to: 0
  3891                           ;main.c: 239:             {;main.c: 240:                 alarmHours = (alarmHours + 1) %
      +                           24;
  3892   0000F6  0E01               	movlw	1
  3893   0000F8  25AB               	addwf	_alarmHours& (0+255),w,b
  3894   0000FA  6E07               	movwf	___awmod@dividend^0,c
  3895   0000FC  6A08               	clrf	(___awmod@dividend+1)^0,c
  3896   0000FE  0E00               	movlw	0
  3897   000100  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  3898   000102  0E00               	movlw	0
  3899   000104  6E0A               	movwf	(___awmod@divisor+1)^0,c
  3900   000106  0E18               	movlw	24
  3901   000108  6E09               	movwf	___awmod@divisor^0,c
  3902   00010A  EC0B  F006         	call	___awmod	;wreg free
  3903   00010E  5007               	movf	?___awmod^0,w,c
  3904   000110  0100               	movlb	0	; () banked
  3905   000112  6FAB               	movwf	_alarmHours& (0+255),b
  3906   000114                     
  3907                           ; BSR set to: 0
  3908                           ;main.c: 241:                 displayAlarmTime();
  3909   000114  ECB1  F005         	call	_displayAlarmTime	;wreg free
  3910                           
  3911                           ;main.c: 242:             }
  3912   000118  EF9F  F000         	goto	l3799
  3913   00011C                     l3795:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;main.c: 244:             {;main.c: 245:                 hours = (hours + 1) % 24;
  3917   00011C  0E01               	movlw	1
  3918   00011E  25AE               	addwf	_hours& (0+255),w,b
  3919   000120  6E07               	movwf	___awmod@dividend^0,c
  3920   000122  6A08               	clrf	(___awmod@dividend+1)^0,c
  3921   000124  0E00               	movlw	0
  3922   000126  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  3923   000128  0E00               	movlw	0
  3924   00012A  6E0A               	movwf	(___awmod@divisor+1)^0,c
  3925   00012C  0E18               	movlw	24
  3926   00012E  6E09               	movwf	___awmod@divisor^0,c
  3927   000130  EC0B  F006         	call	___awmod	;wreg free
  3928   000134  5007               	movf	?___awmod^0,w,c
  3929   000136  0100               	movlb	0	; () banked
  3930   000138  6FAE               	movwf	_hours& (0+255),b
  3931   00013A                     
  3932                           ; BSR set to: 0
  3933                           ;main.c: 246:                 displayTime();
  3934   00013A  EC57  F005         	call	_displayTime	;wreg free
  3935   00013E                     l3799:
  3936                           
  3937                           ;main.c: 252:     if (!PORTBbits.RB1)
  3938   00013E  B281               	btfsc	129,1,c	;volatile
  3939   000140  EFA4  F000         	goto	u3081
  3940   000144  EFA6  F000         	goto	u3080
  3941   000148                     u3081:
  3942   000148  EFE7  F000         	goto	l3815
  3943   00014C                     u3080:
  3944   00014C                     
  3945                           ;main.c: 253:     {;main.c: 254:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3946   00014C  0E02               	movlw	2
  3947   00014E  6E52               	movwf	(??_checkButtons+1)^0,c
  3948   000150  0E04               	movlw	4
  3949   000152  6E51               	movwf	??_checkButtons^0,c
  3950   000154  0EBA               	movlw	186
  3951   000156                     u3477:
  3952   000156  2EE8               	decfsz	wreg,f,c
  3953   000158  D7FE               	bra	u3477
  3954   00015A  2E51               	decfsz	??_checkButtons^0,f,c
  3955   00015C  D7FC               	bra	u3477
  3956   00015E  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  3957   000160  D7FA               	bra	u3477
  3958   000162  F000 F000          	nop2	
  3959   000166                     
  3960                           ;main.c: 255:         if (!PORTBbits.RB1)
  3961   000166  B281               	btfsc	129,1,c	;volatile
  3962   000168  EFB8  F000         	goto	u3091
  3963   00016C  EFBA  F000         	goto	u3090
  3964   000170                     u3091:
  3965   000170  EFE7  F000         	goto	l3815
  3966   000174                     u3090:
  3967   000174                     
  3968                           ;main.c: 256:         {;main.c: 257:             if (alarmSettingMode)
  3969   000174  0100               	movlb	0	; () banked
  3970   000176  51A2               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3971   000178  B4D8               	btfsc	status,2,c
  3972   00017A  EFC1  F000         	goto	u3101
  3973   00017E  EFC3  F000         	goto	u3100
  3974   000182                     u3101:
  3975   000182  EFD6  F000         	goto	l3811
  3976   000186                     u3100:
  3977   000186                     
  3978                           ; BSR set to: 0
  3979                           ;main.c: 258:             {;main.c: 259:                 alarmMinutes = (alarmMinutes + 
      +                          1) % 60;
  3980   000186  0E01               	movlw	1
  3981   000188  25AA               	addwf	_alarmMinutes& (0+255),w,b
  3982   00018A  6E07               	movwf	___awmod@dividend^0,c
  3983   00018C  6A08               	clrf	(___awmod@dividend+1)^0,c
  3984   00018E  0E00               	movlw	0
  3985   000190  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  3986   000192  0E00               	movlw	0
  3987   000194  6E0A               	movwf	(___awmod@divisor+1)^0,c
  3988   000196  0E3C               	movlw	60
  3989   000198  6E09               	movwf	___awmod@divisor^0,c
  3990   00019A  EC0B  F006         	call	___awmod	;wreg free
  3991   00019E  5007               	movf	?___awmod^0,w,c
  3992   0001A0  0100               	movlb	0	; () banked
  3993   0001A2  6FAA               	movwf	_alarmMinutes& (0+255),b
  3994   0001A4                     
  3995                           ; BSR set to: 0
  3996                           ;main.c: 260:                 displayAlarmTime();
  3997   0001A4  ECB1  F005         	call	_displayAlarmTime	;wreg free
  3998                           
  3999                           ;main.c: 261:             }
  4000   0001A8  EFE7  F000         	goto	l3815
  4001   0001AC                     l3811:
  4002                           
  4003                           ; BSR set to: 0
  4004                           ;main.c: 263:             {;main.c: 264:                 minutes = (minutes + 1) % 60;
  4005   0001AC  0E01               	movlw	1
  4006   0001AE  25AD               	addwf	_minutes& (0+255),w,b
  4007   0001B0  6E07               	movwf	___awmod@dividend^0,c
  4008   0001B2  6A08               	clrf	(___awmod@dividend+1)^0,c
  4009   0001B4  0E00               	movlw	0
  4010   0001B6  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  4011   0001B8  0E00               	movlw	0
  4012   0001BA  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4013   0001BC  0E3C               	movlw	60
  4014   0001BE  6E09               	movwf	___awmod@divisor^0,c
  4015   0001C0  EC0B  F006         	call	___awmod	;wreg free
  4016   0001C4  5007               	movf	?___awmod^0,w,c
  4017   0001C6  0100               	movlb	0	; () banked
  4018   0001C8  6FAD               	movwf	_minutes& (0+255),b
  4019   0001CA                     
  4020                           ; BSR set to: 0
  4021                           ;main.c: 265:                 displayTime();
  4022   0001CA  EC57  F005         	call	_displayTime	;wreg free
  4023   0001CE                     l3815:
  4024                           
  4025                           ;main.c: 271:     if (!PORTBbits.RB2)
  4026   0001CE  B481               	btfsc	129,2,c	;volatile
  4027   0001D0  EFEC  F000         	goto	u3111
  4028   0001D4  EFEE  F000         	goto	u3110
  4029   0001D8                     u3111:
  4030   0001D8  EF82  F001         	goto	l3853
  4031   0001DC                     u3110:
  4032   0001DC                     
  4033                           ;main.c: 272:     {;main.c: 273:         button3HoldTime += 100;
  4034   0001DC  0E64               	movlw	100
  4035   0001DE  0100               	movlb	0	; () banked
  4036   0001E0  279A               	addwf	checkButtons@button3HoldTime& (0+255),f,b
  4037   0001E2  0E00               	movlw	0
  4038   0001E4  239B               	addwfc	(checkButtons@button3HoldTime+1)& (0+255),f,b
  4039   0001E6                     
  4040                           ; BSR set to: 0
  4041                           ;main.c: 274:         _delay((unsigned long)((100)*(8000000/4000.0)));
  4042   0001E6  0E02               	movlw	2
  4043   0001E8  6E52               	movwf	(??_checkButtons+1)^0,c
  4044   0001EA  0E04               	movlw	4
  4045   0001EC  6E51               	movwf	??_checkButtons^0,c
  4046   0001EE  0EBA               	movlw	186
  4047   0001F0                     u3487:
  4048   0001F0  2EE8               	decfsz	wreg,f,c
  4049   0001F2  D7FE               	bra	u3487
  4050   0001F4  2E51               	decfsz	??_checkButtons^0,f,c
  4051   0001F6  D7FC               	bra	u3487
  4052   0001F8  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  4053   0001FA  D7FA               	bra	u3487
  4054   0001FC  F000 F000          	nop2	
  4055   000200                     
  4056                           ;main.c: 276:         if (button3HoldTime >= 1000)
  4057   000200  0EE8               	movlw	232
  4058   000202  0100               	movlb	0	; () banked
  4059   000204  5D9A               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  4060   000206  0E03               	movlw	3
  4061   000208  599B               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  4062   00020A  A0D8               	btfss	status,0,c
  4063   00020C  EF0A  F001         	goto	u3121
  4064   000210  EF0C  F001         	goto	u3120
  4065   000214                     u3121:
  4066   000214  EF76  F001         	goto	l3849
  4067   000218                     u3120:
  4068   000218                     
  4069                           ; BSR set to: 0
  4070                           ;main.c: 277:         {;main.c: 278:             if (!alarmTriggered)
  4071   000218  51A7               	movf	_alarmTriggered& (0+255),w,b
  4072   00021A  A4D8               	btfss	status,2,c
  4073   00021C  EF12  F001         	goto	u3131
  4074   000220  EF14  F001         	goto	u3130
  4075   000224                     u3131:
  4076   000224  EFA1  F001         	goto	l510
  4077   000228                     u3130:
  4078   000228                     
  4079                           ; BSR set to: 0
  4080                           ;main.c: 279:             {;main.c: 280:                 alarmSettingMode = 1;
  4081   000228  0E01               	movlw	1
  4082   00022A  6FA2               	movwf	checkButtons@alarmSettingMode& (0+255),b
  4083   00022C                     l3827:
  4084                           
  4085                           ; BSR set to: 0
  4086                           ;main.c: 281:                 displayAlarmTime();
  4087   00022C  ECB1  F005         	call	_displayAlarmTime	;wreg free
  4088                           
  4089                           ;main.c: 283:                 while (!PORTBbits.RB2)
  4090   000230  EF66  F001         	goto	l3843
  4091   000234                     l501:
  4092                           
  4093                           ;main.c: 284:                 {;main.c: 285:                     if (!PORTBbits.RB0)
  4094   000234  B081               	btfsc	129,0,c	;volatile
  4095   000236  EF1F  F001         	goto	u3141
  4096   00023A  EF21  F001         	goto	u3140
  4097   00023E                     u3141:
  4098   00023E  EF40  F001         	goto	l3835
  4099   000242                     u3140:
  4100   000242                     
  4101                           ;main.c: 286:                     {;main.c: 287:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  4102   000242  0E02               	movlw	2
  4103   000244  6E52               	movwf	(??_checkButtons+1)^0,c
  4104   000246  0E04               	movlw	4
  4105   000248  6E51               	movwf	??_checkButtons^0,c
  4106   00024A  0EBA               	movlw	186
  4107   00024C                     u3497:
  4108   00024C  2EE8               	decfsz	wreg,f,c
  4109   00024E  D7FE               	bra	u3497
  4110   000250  2E51               	decfsz	??_checkButtons^0,f,c
  4111   000252  D7FC               	bra	u3497
  4112   000254  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  4113   000256  D7FA               	bra	u3497
  4114   000258  F000 F000          	nop2	
  4115   00025C                     
  4116                           ;main.c: 288:                         alarmHours = (alarmHours + 1) % 24;
  4117   00025C  0E01               	movlw	1
  4118   00025E  0100               	movlb	0	; () banked
  4119   000260  25AB               	addwf	_alarmHours& (0+255),w,b
  4120   000262  6E07               	movwf	___awmod@dividend^0,c
  4121   000264  6A08               	clrf	(___awmod@dividend+1)^0,c
  4122   000266  0E00               	movlw	0
  4123   000268  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  4124   00026A  0E00               	movlw	0
  4125   00026C  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4126   00026E  0E18               	movlw	24
  4127   000270  6E09               	movwf	___awmod@divisor^0,c
  4128   000272  EC0B  F006         	call	___awmod	;wreg free
  4129   000276  5007               	movf	?___awmod^0,w,c
  4130   000278  0100               	movlb	0	; () banked
  4131   00027A  6FAB               	movwf	_alarmHours& (0+255),b
  4132   00027C                     
  4133                           ; BSR set to: 0
  4134                           ;main.c: 289:                         displayAlarmTime();
  4135   00027C  ECB1  F005         	call	_displayAlarmTime	;wreg free
  4136   000280                     l3835:
  4137                           
  4138                           ;main.c: 291:                     if (!PORTBbits.RB1)
  4139   000280  B281               	btfsc	129,1,c	;volatile
  4140   000282  EF45  F001         	goto	u3151
  4141   000286  EF47  F001         	goto	u3150
  4142   00028A                     u3151:
  4143   00028A  EF66  F001         	goto	l3843
  4144   00028E                     u3150:
  4145   00028E                     
  4146                           ;main.c: 292:                     {;main.c: 293:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  4147   00028E  0E02               	movlw	2
  4148   000290  6E52               	movwf	(??_checkButtons+1)^0,c
  4149   000292  0E04               	movlw	4
  4150   000294  6E51               	movwf	??_checkButtons^0,c
  4151   000296  0EBA               	movlw	186
  4152   000298                     u3507:
  4153   000298  2EE8               	decfsz	wreg,f,c
  4154   00029A  D7FE               	bra	u3507
  4155   00029C  2E51               	decfsz	??_checkButtons^0,f,c
  4156   00029E  D7FC               	bra	u3507
  4157   0002A0  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  4158   0002A2  D7FA               	bra	u3507
  4159   0002A4  F000 F000          	nop2	
  4160   0002A8                     
  4161                           ;main.c: 294:                         alarmMinutes = (alarmMinutes + 1) % 60;
  4162   0002A8  0E01               	movlw	1
  4163   0002AA  0100               	movlb	0	; () banked
  4164   0002AC  25AA               	addwf	_alarmMinutes& (0+255),w,b
  4165   0002AE  6E07               	movwf	___awmod@dividend^0,c
  4166   0002B0  6A08               	clrf	(___awmod@dividend+1)^0,c
  4167   0002B2  0E00               	movlw	0
  4168   0002B4  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  4169   0002B6  0E00               	movlw	0
  4170   0002B8  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4171   0002BA  0E3C               	movlw	60
  4172   0002BC  6E09               	movwf	___awmod@divisor^0,c
  4173   0002BE  EC0B  F006         	call	___awmod	;wreg free
  4174   0002C2  5007               	movf	?___awmod^0,w,c
  4175   0002C4  0100               	movlb	0	; () banked
  4176   0002C6  6FAA               	movwf	_alarmMinutes& (0+255),b
  4177   0002C8  EF16  F001         	goto	l3827
  4178   0002CC                     l3843:
  4179                           
  4180                           ;main.c: 283:                 while (!PORTBbits.RB2)
  4181   0002CC  A481               	btfss	129,2,c	;volatile
  4182   0002CE  EF6B  F001         	goto	u3161
  4183   0002D2  EF6D  F001         	goto	u3160
  4184   0002D6                     u3161:
  4185   0002D6  EF1A  F001         	goto	l501
  4186   0002DA                     u3160:
  4187   0002DA                     
  4188                           ;main.c: 298:                 alarmSettingMode = 0;
  4189   0002DA  0E00               	movlw	0
  4190   0002DC  0100               	movlb	0	; () banked
  4191   0002DE  6FA2               	movwf	checkButtons@alarmSettingMode& (0+255),b
  4192                           
  4193                           ;main.c: 299:                 alarmSet = 1;
  4194   0002E0  0E01               	movlw	1
  4195   0002E2  6FA9               	movwf	_alarmSet& (0+255),b
  4196   0002E4                     
  4197                           ; BSR set to: 0
  4198                           ;main.c: 300:                 displayTime();
  4199   0002E4  EC57  F005         	call	_displayTime	;wreg free
  4200   0002E8  EFA1  F001         	goto	l510
  4201   0002EC                     l3849:
  4202                           
  4203                           ; BSR set to: 0
  4204                           ;main.c: 304:         {;main.c: 305:             if (alarmTriggered)
  4205   0002EC  51A7               	movf	_alarmTriggered& (0+255),w,b
  4206   0002EE  B4D8               	btfsc	status,2,c
  4207   0002F0  EF7C  F001         	goto	u3171
  4208   0002F4  EF7E  F001         	goto	u3170
  4209   0002F8                     u3171:
  4210   0002F8  EFA1  F001         	goto	l510
  4211   0002FC                     u3170:
  4212   0002FC                     
  4213                           ; BSR set to: 0
  4214                           ;main.c: 306:             {;main.c: 307:                 clearAlarm();
  4215   0002FC  EC13  F009         	call	_clearAlarm	;wreg free
  4216   000300  EFA1  F001         	goto	l510
  4217   000304                     l3853:
  4218                           
  4219                           ;main.c: 312:     {;main.c: 313:         if (button3HoldTime < 1000)
  4220   000304  0EE8               	movlw	232
  4221   000306  0100               	movlb	0	; () banked
  4222   000308  5D9A               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  4223   00030A  0E03               	movlw	3
  4224   00030C  599B               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  4225   00030E  B0D8               	btfsc	status,0,c
  4226   000310  EF8C  F001         	goto	u3181
  4227   000314  EF8E  F001         	goto	u3180
  4228   000318                     u3181:
  4229   000318  EF9D  F001         	goto	l3863
  4230   00031C                     u3180:
  4231   00031C                     
  4232                           ; BSR set to: 0
  4233                           ;main.c: 314:         {;main.c: 315:             button3PressCount++;
  4234   00031C  2BA3               	incf	checkButtons@button3PressCount& (0+255),f,b
  4235   00031E                     
  4236                           ; BSR set to: 0
  4237                           ;main.c: 316:             if (button3PressCount == 5)
  4238   00031E  0E05               	movlw	5
  4239   000320  19A3               	xorwf	checkButtons@button3PressCount& (0+255),w,b
  4240   000322  A4D8               	btfss	status,2,c
  4241   000324  EF96  F001         	goto	u3191
  4242   000328  EF98  F001         	goto	u3190
  4243   00032C                     u3191:
  4244   00032C  EF9D  F001         	goto	l3863
  4245   000330                     u3190:
  4246   000330                     
  4247                           ; BSR set to: 0
  4248                           ;main.c: 317:             {;main.c: 318:                 saveTimeToFlash();
  4249   000330  ECB2  F006         	call	_saveTimeToFlash	;wreg free
  4250   000334                     
  4251                           ;main.c: 319:                 button3PressCount = 0;
  4252   000334  0E00               	movlw	0
  4253   000336  0100               	movlb	0	; () banked
  4254   000338  6FA3               	movwf	checkButtons@button3PressCount& (0+255),b
  4255   00033A                     l3863:
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;main.c: 322:         button3HoldTime = 0;
  4259   00033A  0E00               	movlw	0
  4260   00033C  6F9B               	movwf	(checkButtons@button3HoldTime+1)& (0+255),b
  4261   00033E  0E00               	movlw	0
  4262   000340  6F9A               	movwf	checkButtons@button3HoldTime& (0+255),b
  4263   000342                     l510:
  4264   000342  0012               	return		;funcret
  4265   000344                     __end_of_checkButtons:
  4266                           	callstack 0
  4267                           
  4268 ;; *************** function _saveTimeToFlash *****************
  4269 ;; Defined at:
  4270 ;;		line 328 in file "main.c"
  4271 ;; Parameters:    Size  Location     Type
  4272 ;;		None
  4273 ;; Auto vars:     Size  Location     Type
  4274 ;;  i               1   68[BANK0 ] unsigned char 
  4275 ;;  flashBuffer    64    0[BANK0 ] unsigned char [64]
  4276 ;;  flashAddress    4   64[BANK0 ] unsigned long 
  4277 ;; Return value:  Size  Location     Type
  4278 ;;                  1    wreg      void 
  4279 ;; Registers used:
  4280 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4281 ;; Tracked objects:
  4282 ;;		On entry : 0/0
  4283 ;;		On exit  : 0/0
  4284 ;;		Unchanged: 0/0
  4285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4286 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4287 ;;      Locals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4289 ;;      Totals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4290 ;;Total ram usage:       69 bytes
  4291 ;; Hardware stack levels used: 1
  4292 ;; Hardware stack levels required when called: 7
  4293 ;; This function calls:
  4294 ;;		_FLASH_ReadByte
  4295 ;;		_FLASH_WriteBlock
  4296 ;; This function is called by:
  4297 ;;		_main
  4298 ;;		_checkButtons
  4299 ;; This function uses a non-reentrant model
  4300 ;;
  4301                           
  4302                           	psect	text12
  4303   000D64                     __ptext12:
  4304                           	callstack 0
  4305   000D64                     _saveTimeToFlash:
  4306                           	callstack 23
  4307   000D64                     
  4308                           ;main.c: 330:     uint32_t flashAddress = 0x1F80;
  4309   000D64  0E80               	movlw	128
  4310   000D66  0100               	movlb	0	; () banked
  4311   000D68  6FF0               	movwf	saveTimeToFlash@flashAddress& (0+255),b
  4312   000D6A  0E1F               	movlw	31
  4313   000D6C  6FF1               	movwf	(saveTimeToFlash@flashAddress+1)& (0+255),b
  4314   000D6E  0E00               	movlw	0
  4315   000D70  6FF2               	movwf	(saveTimeToFlash@flashAddress+2)& (0+255),b
  4316   000D72  0E00               	movlw	0
  4317   000D74  6FF3               	movwf	(saveTimeToFlash@flashAddress+3)& (0+255),b
  4318                           
  4319                           ;main.c: 331:     uint8_t flashBuffer[64];;main.c: 334:     for (uint8_t i = 0; i < 64; 
      +                          i++) {
  4320   000D76  0E00               	movlw	0
  4321   000D78  6FF4               	movwf	saveTimeToFlash@i& (0+255),b
  4322   000D7A                     l3663:
  4323                           
  4324                           ; BSR set to: 0
  4325                           ;main.c: 335:         flashBuffer[i] = FLASH_ReadByte(flashAddress + i);
  4326   000D7A  51F4               	movf	saveTimeToFlash@i& (0+255),w,b
  4327   000D7C  0FB0               	addlw	low saveTimeToFlash@flashBuffer
  4328   000D7E  6ED9               	movwf	fsr2l,c
  4329   000D80  6ADA               	clrf	fsr2h,c
  4330   000D82  51F4               	movf	saveTimeToFlash@i& (0+255),w,b
  4331   000D84  25F0               	addwf	saveTimeToFlash@flashAddress& (0+255),w,b
  4332   000D86  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  4333   000D88  0E00               	movlw	0
  4334   000D8A  21F1               	addwfc	(saveTimeToFlash@flashAddress+1)& (0+255),w,b
  4335   000D8C  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  4336   000D8E  0E00               	movlw	0
  4337   000D90  21F2               	addwfc	(saveTimeToFlash@flashAddress+2)& (0+255),w,b
  4338   000D92  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  4339   000D94  0E00               	movlw	0
  4340   000D96  21F3               	addwfc	(saveTimeToFlash@flashAddress+3)& (0+255),w,b
  4341   000D98  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  4342   000D9A  EC03  F009         	call	_FLASH_ReadByte	;wreg free
  4343   000D9E  6EDF               	movwf	indf2,c
  4344   000DA0                     
  4345                           ;main.c: 336:     }
  4346   000DA0  0100               	movlb	0	; () banked
  4347   000DA2  2BF4               	incf	saveTimeToFlash@i& (0+255),f,b
  4348   000DA4                     
  4349                           ; BSR set to: 0
  4350   000DA4  0E3F               	movlw	63
  4351   000DA6  65F4               	cpfsgt	saveTimeToFlash@i& (0+255),b
  4352   000DA8  EFD8  F006         	goto	u2941
  4353   000DAC  EFDA  F006         	goto	u2940
  4354   000DB0                     u2941:
  4355   000DB0  EFBD  F006         	goto	l3663
  4356   000DB4                     u2940:
  4357   000DB4                     
  4358                           ; BSR set to: 0
  4359                           ;main.c: 339:     flashBuffer[0] = hours;
  4360   000DB4  C0AE  F0B0         	movff	_hours,saveTimeToFlash@flashBuffer
  4361                           
  4362                           ;main.c: 340:     flashBuffer[1] = minutes;
  4363   000DB8  C0AD  F0B1         	movff	_minutes,saveTimeToFlash@flashBuffer+1
  4364                           
  4365                           ;main.c: 341:     flashBuffer[2] = alarmHours;
  4366   000DBC  C0AB  F0B2         	movff	_alarmHours,saveTimeToFlash@flashBuffer+2
  4367                           
  4368                           ;main.c: 342:     flashBuffer[3] = alarmMinutes;
  4369   000DC0  C0AA  F0B3         	movff	_alarmMinutes,saveTimeToFlash@flashBuffer+3
  4370                           
  4371                           ;main.c: 343:     flashBuffer[4] = alarmSet;
  4372   000DC4  C0A9  F0B4         	movff	_alarmSet,saveTimeToFlash@flashBuffer+4
  4373   000DC8                     
  4374                           ; BSR set to: 0
  4375                           ;main.c: 346:     FLASH_WriteBlock(flashAddress, flashBuffer);
  4376   000DC8  C0F0  F00C         	movff	saveTimeToFlash@flashAddress,FLASH_WriteBlock@writeAddr
  4377   000DCC  C0F1  F00D         	movff	saveTimeToFlash@flashAddress+1,FLASH_WriteBlock@writeAddr+1
  4378   000DD0  C0F2  F00E         	movff	saveTimeToFlash@flashAddress+2,FLASH_WriteBlock@writeAddr+2
  4379   000DD4  C0F3  F00F         	movff	saveTimeToFlash@flashAddress+3,FLASH_WriteBlock@writeAddr+3
  4380   000DD8  0EB0               	movlw	low saveTimeToFlash@flashBuffer
  4381   000DDA  6E10               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  4382   000DDC  EC03  F003         	call	_FLASH_WriteBlock	;wreg free
  4383   000DE0  0012               	return		;funcret
  4384   000DE2                     __end_of_saveTimeToFlash:
  4385                           	callstack 0
  4386                           
  4387 ;; *************** function _FLASH_WriteBlock *****************
  4388 ;; Defined at:
  4389 ;;		line 93 in file "mcc_generated_files/memory.c"
  4390 ;; Parameters:    Size  Location     Type
  4391 ;;  writeAddr       4   11[COMRAM] unsigned long 
  4392 ;;  flashWrBufPt    1   15[COMRAM] PTR unsigned char 
  4393 ;;		 -> saveTimeToFlash@flashBuffer(64), 
  4394 ;; Auto vars:     Size  Location     Type
  4395 ;;  blockStartAd    4   16[COMRAM] unsigned long 
  4396 ;;  i               1   24[COMRAM] unsigned char 
  4397 ;;  dataCounter     1   23[COMRAM] unsigned char 
  4398 ;;  numberOfWrit    1   22[COMRAM] unsigned char 
  4399 ;;  j               1   21[COMRAM] unsigned char 
  4400 ;;  GIEBitValue     1   20[COMRAM] unsigned char 
  4401 ;; Return value:  Size  Location     Type
  4402 ;;                  1    wreg      char 
  4403 ;; Registers used:
  4404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4405 ;; Tracked objects:
  4406 ;;		On entry : 0/0
  4407 ;;		On exit  : 0/0
  4408 ;;		Unchanged: 0/0
  4409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4410 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4411 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4413 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4414 ;;Total ram usage:       14 bytes
  4415 ;; Hardware stack levels used: 1
  4416 ;; Hardware stack levels required when called: 6
  4417 ;; This function calls:
  4418 ;;		_FLASH_EraseBlock
  4419 ;; This function is called by:
  4420 ;;		_saveTimeToFlash
  4421 ;;		_FLASH_WriteByte
  4422 ;; This function uses a non-reentrant model
  4423 ;;
  4424                           
  4425                           	psect	text13
  4426   000606                     __ptext13:
  4427                           	callstack 0
  4428   000606                     _FLASH_WriteBlock:
  4429                           	callstack 23
  4430   000606                     
  4431                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  4432   000606  0EC0               	movlw	192
  4433   000608  140C               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  4434   00060A  6E11               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  4435   00060C  0EFF               	movlw	255
  4436   00060E  140D               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4437   000610  6E12               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  4438   000612  0E00               	movlw	0
  4439   000614  140E               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4440   000616  6E13               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  4441   000618  0E00               	movlw	0
  4442   00061A  140F               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4443   00061C  6E14               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  4444   00061E                     
  4445                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  4446   00061E  0E00               	movlw	0
  4447   000620  BEF2               	btfsc	242,7,c	;volatile
  4448   000622  0E01               	movlw	1
  4449   000624  6E15               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  4450   000626  0E00               	movlw	0
  4451   000628  6E18               	movwf	FLASH_WriteBlock@dataCounter^0,c
  4452   00062A                     
  4453                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  4454   00062A  0E01               	movlw	1
  4455   00062C  6E17               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  4456   00062E                     
  4457                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  4458   00062E  5011               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  4459   000630  180C               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  4460   000632  E10F               	bnz	u2700
  4461   000634  5012               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  4462   000636  180D               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4463   000638  E10C               	bnz	u2700
  4464   00063A  5013               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  4465   00063C  180E               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4466   00063E  E109               	bnz	u2700
  4467   000640  5014               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  4468   000642  180F               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4469   000644  B4D8               	btfsc	status,2,c
  4470   000646  EF27  F003         	goto	u2701
  4471   00064A  EF29  F003         	goto	u2700
  4472   00064E                     u2701:
  4473   00064E  EF2B  F003         	goto	l3433
  4474   000652                     u2700:
  4475   000652  EF77  F003         	goto	l233
  4476   000656                     l3433:
  4477                           
  4478                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  4479   000656  C00C  F007         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  4480   00065A  C00D  F008         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  4481   00065E  C00E  F009         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  4482   000662  C00F  F00A         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  4483   000666  EC37  F008         	call	_FLASH_EraseBlock	;wreg free
  4484   00066A                     
  4485                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  4486   00066A  C00E  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  4487   00066E                     
  4488                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  4489   00066E  C00D  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  4490   000672                     
  4491                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  4492   000672  C00C  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  4493   000676                     
  4494                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  4495   000676  0E00               	movlw	0
  4496   000678  6E16               	movwf	FLASH_WriteBlock@j^0,c
  4497   00067A  EF6E  F003         	goto	l3469
  4498   00067E                     l3443:
  4499                           
  4500                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  4501   00067E  0E00               	movlw	0
  4502   000680  6E19               	movwf	FLASH_WriteBlock@i^0,c
  4503   000682                     l3449:
  4504                           
  4505                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  4506   000682  5010               	movf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  4507   000684  2418               	addwf	FLASH_WriteBlock@dataCounter^0,w,c
  4508   000686  6ED9               	movwf	fsr2l,c
  4509   000688  6ADA               	clrf	fsr2h,c
  4510   00068A  50DF               	movf	indf2,w,c
  4511   00068C  6EF5               	movwf	245,c	;volatile
  4512   00068E                     
  4513                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  4514   00068E  0E3F               	movlw	63
  4515   000690  1819               	xorwf	FLASH_WriteBlock@i^0,w,c
  4516   000692  A4D8               	btfss	status,2,c
  4517   000694  EF4E  F003         	goto	u2711
  4518   000698  EF50  F003         	goto	u2710
  4519   00069C                     u2711:
  4520   00069C  EF53  F003         	goto	l238
  4521   0006A0                     u2710:
  4522   0006A0  000C               	tblwt		*	;# 
  4523                           
  4524                           ;mcc_generated_files/memory.c: 124:    }
  4525   0006A2  EF55  F003         	goto	l239
  4526   0006A6                     l238:
  4527   0006A6  000D               	tblwt		*+	;# 
  4528   0006A8                     
  4529                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  4530   0006A8  2A18               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  4531   0006AA                     l239:
  4532                           
  4533                           ;mcc_generated_files/memory.c: 130:   }
  4534   0006AA  2A19               	incf	FLASH_WriteBlock@i^0,f,c
  4535   0006AC  0E3F               	movlw	63
  4536   0006AE  6419               	cpfsgt	FLASH_WriteBlock@i^0,c
  4537   0006B0  EF5C  F003         	goto	u2721
  4538   0006B4  EF5E  F003         	goto	u2720
  4539   0006B8                     u2721:
  4540   0006B8  EF41  F003         	goto	l3449
  4541   0006BC                     u2720:
  4542   0006BC                     
  4543                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  4544   0006BC  8EA6               	bsf	166,7,c	;volsfr
  4545                           
  4546                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  4547   0006BE  9CA6               	bcf	166,6,c	;volsfr
  4548                           
  4549                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  4550   0006C0  84A6               	bsf	166,2,c	;volsfr
  4551                           
  4552                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  4553   0006C2  9EF2               	bcf	242,7,c	;volatile
  4554   0006C4                     
  4555                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  4556   0006C4  0E55               	movlw	85
  4557   0006C6  6EA7               	movwf	167,c	;volsfr
  4558                           
  4559                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  4560   0006C8  0EAA               	movlw	170
  4561   0006CA  6EA7               	movwf	167,c	;volsfr
  4562   0006CC                     
  4563                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  4564   0006CC  82A6               	bsf	166,1,c	;volsfr
  4565   0006CE                     
  4566                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  4567   0006CE  94A6               	bcf	166,2,c	;volsfr
  4568   0006D0                     
  4569                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  4570   0006D0  B015               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  4571   0006D2  D002               	bra	u2735
  4572   0006D4  9EF2               	bcf	242,7,c	;volatile
  4573   0006D6  D001               	bra	u2736
  4574   0006D8                     u2735:
  4575   0006D8  8EF2               	bsf	242,7,c	;volatile
  4576   0006DA                     u2736:
  4577   0006DA                     
  4578                           ;mcc_generated_files/memory.c: 142:  }
  4579   0006DA  2A16               	incf	FLASH_WriteBlock@j^0,f,c
  4580   0006DC                     l3469:
  4581   0006DC  5017               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  4582   0006DE  5C16               	subwf	FLASH_WriteBlock@j^0,w,c
  4583   0006E0  A0D8               	btfss	status,0,c
  4584   0006E2  EF75  F003         	goto	u2741
  4585   0006E6  EF77  F003         	goto	u2740
  4586   0006EA                     u2741:
  4587   0006EA  EF3F  F003         	goto	l3443
  4588   0006EE                     u2740:
  4589   0006EE                     l233:
  4590   0006EE  0012               	return		;funcret
  4591   0006F0                     __end_of_FLASH_WriteBlock:
  4592                           	callstack 0
  4593                           
  4594 ;; *************** function _FLASH_EraseBlock *****************
  4595 ;; Defined at:
  4596 ;;		line 147 in file "mcc_generated_files/memory.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;  baseAddr        4    6[COMRAM] unsigned long 
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;  GIEBitValue     1   10[COMRAM] unsigned char 
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4613 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4614 ;;Total ram usage:        5 bytes
  4615 ;; Hardware stack levels used: 1
  4616 ;; Hardware stack levels required when called: 5
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_FLASH_WriteBlock
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           
  4624                           	psect	text14
  4625   00106E                     __ptext14:
  4626                           	callstack 0
  4627   00106E                     _FLASH_EraseBlock:
  4628                           	callstack 23
  4629   00106E                     
  4630                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  4631   00106E  0E00               	movlw	0
  4632   001070  BEF2               	btfsc	242,7,c	;volatile
  4633   001072  0E01               	movlw	1
  4634   001074  6E0B               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  4635   001076                     
  4636                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  4637   001076  C009  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  4638   00107A                     
  4639                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  4640   00107A  C008  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  4641   00107E                     
  4642                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  4643   00107E  C007  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  4644   001082                     
  4645                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  4646   001082  8EA6               	bsf	166,7,c	;volsfr
  4647   001084                     
  4648                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  4649   001084  9CA6               	bcf	166,6,c	;volsfr
  4650   001086                     
  4651                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  4652   001086  84A6               	bsf	166,2,c	;volsfr
  4653   001088                     
  4654                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  4655   001088  88A6               	bsf	166,4,c	;volsfr
  4656   00108A                     
  4657                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  4658   00108A  9EF2               	bcf	242,7,c	;volatile
  4659   00108C                     
  4660                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  4661   00108C  0E55               	movlw	85
  4662   00108E  6EA7               	movwf	167,c	;volsfr
  4663   001090                     
  4664                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  4665   001090  0EAA               	movlw	170
  4666   001092  6EA7               	movwf	167,c	;volsfr
  4667   001094                     
  4668                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  4669   001094  82A6               	bsf	166,1,c	;volsfr
  4670   001096                     
  4671                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  4672   001096  B00B               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  4673   001098  D002               	bra	u2585
  4674   00109A  9EF2               	bcf	242,7,c	;volatile
  4675   00109C  D001               	bra	u2586
  4676   00109E                     u2585:
  4677   00109E  8EF2               	bsf	242,7,c	;volatile
  4678   0010A0                     u2586:
  4679   0010A0  0012               	return		;funcret
  4680   0010A2                     __end_of_FLASH_EraseBlock:
  4681                           	callstack 0
  4682                           
  4683 ;; *************** function _FLASH_ReadByte *****************
  4684 ;; Defined at:
  4685 ;;		line 58 in file "mcc_generated_files/memory.c"
  4686 ;; Parameters:    Size  Location     Type
  4687 ;;  flashAddr       4    6[COMRAM] unsigned long 
  4688 ;; Auto vars:     Size  Location     Type
  4689 ;;		None
  4690 ;; Return value:  Size  Location     Type
  4691 ;;                  1    wreg      unsigned char 
  4692 ;; Registers used:
  4693 ;;		wreg, status,2
  4694 ;; Tracked objects:
  4695 ;;		On entry : 0/0
  4696 ;;		On exit  : 0/0
  4697 ;;		Unchanged: 0/0
  4698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4699 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4700 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;Total ram usage:        4 bytes
  4704 ;; Hardware stack levels used: 1
  4705 ;; Hardware stack levels required when called: 5
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_saveTimeToFlash
  4710 ;;		_loadTimeFromFlash
  4711 ;;		_FLASH_ReadWord
  4712 ;;		_FLASH_WriteByte
  4713 ;; This function uses a non-reentrant model
  4714 ;;
  4715                           
  4716                           	psect	text15
  4717   001206                     __ptext15:
  4718                           	callstack 0
  4719   001206                     _FLASH_ReadByte:
  4720                           	callstack 24
  4721   001206                     
  4722                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  4723   001206  C009  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  4724                           
  4725                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  4726   00120A  C008  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  4727                           
  4728                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  4729   00120E  C007  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  4730   001212  0008               	tblrd		*	;# 
  4731   001214                     
  4732                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  4733   001214  50F5               	movf	245,w,c	;volatile
  4734   001216  0012               	return		;funcret
  4735   001218                     __end_of_FLASH_ReadByte:
  4736                           	callstack 0
  4737                           
  4738 ;; *************** function _displayTime *****************
  4739 ;; Defined at:
  4740 ;;		line 111 in file "main.c"
  4741 ;; Parameters:    Size  Location     Type
  4742 ;;		None
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  i               2   21[BANK0 ] int 
  4745 ;;  timeString      5   16[BANK0 ] unsigned char [5]
  4746 ;;  displayStrin    5   11[BANK0 ] unsigned char [5]
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      void 
  4749 ;; Registers used:
  4750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;Total ram usage:       12 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; Hardware stack levels required when called: 9
  4763 ;; This function calls:
  4764 ;;		___awdiv
  4765 ;;		___awmod
  4766 ;;		_printString
  4767 ;; This function is called by:
  4768 ;;		_main
  4769 ;;		_checkButtons
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text16
  4774   000AAE                     __ptext16:
  4775                           	callstack 0
  4776   000AAE                     _displayTime:
  4777                           	callstack 21
  4778   000AAE                     
  4779                           ;main.c: 113:     char timeString[5];;main.c: 116:     timeString[0] = (hours / 10) + '0
      +                          ';
  4780   000AAE  C0AE  F007         	movff	_hours,___awdiv@dividend
  4781   000AB2  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4782   000AB4  0E00               	movlw	0
  4783   000AB6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4784   000AB8  0E0A               	movlw	10
  4785   000ABA  6E09               	movwf	___awdiv@divisor^0,c
  4786   000ABC  ECDB  F003         	call	___awdiv	;wreg free
  4787   000AC0  5007               	movf	?___awdiv^0,w,c
  4788   000AC2  0F30               	addlw	48
  4789   000AC4  0100               	movlb	0	; () banked
  4790   000AC6  6FC0               	movwf	displayTime@timeString& (0+255),b
  4791                           
  4792                           ;main.c: 117:     timeString[1] = (hours % 10) + '0';
  4793   000AC8  C0AE  F007         	movff	_hours,___awmod@dividend
  4794   000ACC  6A08               	clrf	(___awmod@dividend+1)^0,c
  4795   000ACE  0E00               	movlw	0
  4796   000AD0  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4797   000AD2  0E0A               	movlw	10
  4798   000AD4  6E09               	movwf	___awmod@divisor^0,c
  4799   000AD6  EC0B  F006         	call	___awmod	;wreg free
  4800   000ADA  5007               	movf	?___awmod^0,w,c
  4801   000ADC  0F30               	addlw	48
  4802   000ADE  0100               	movlb	0	; () banked
  4803   000AE0  6FC1               	movwf	(displayTime@timeString+1)& (0+255),b
  4804                           
  4805                           ;main.c: 118:     timeString[2] = (minutes / 10) + '0';
  4806   000AE2  C0AD  F007         	movff	_minutes,___awdiv@dividend
  4807   000AE6  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4808   000AE8  0E00               	movlw	0
  4809   000AEA  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4810   000AEC  0E0A               	movlw	10
  4811   000AEE  6E09               	movwf	___awdiv@divisor^0,c
  4812   000AF0  ECDB  F003         	call	___awdiv	;wreg free
  4813   000AF4  5007               	movf	?___awdiv^0,w,c
  4814   000AF6  0F30               	addlw	48
  4815   000AF8  0100               	movlb	0	; () banked
  4816   000AFA  6FC2               	movwf	(displayTime@timeString+2)& (0+255),b
  4817                           
  4818                           ;main.c: 119:     timeString[3] = (minutes % 10) + '0';
  4819   000AFC  C0AD  F007         	movff	_minutes,___awmod@dividend
  4820   000B00  6A08               	clrf	(___awmod@dividend+1)^0,c
  4821   000B02  0E00               	movlw	0
  4822   000B04  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4823   000B06  0E0A               	movlw	10
  4824   000B08  6E09               	movwf	___awmod@divisor^0,c
  4825   000B0A  EC0B  F006         	call	___awmod	;wreg free
  4826   000B0E  5007               	movf	?___awmod^0,w,c
  4827   000B10  0F30               	addlw	48
  4828   000B12  0100               	movlb	0	; () banked
  4829   000B14  6FC3               	movwf	(displayTime@timeString+3)& (0+255),b
  4830   000B16                     
  4831                           ; BSR set to: 0
  4832                           ;main.c: 120:     timeString[4] = '\0';
  4833   000B16  0E00               	movlw	0
  4834   000B18  6FC4               	movwf	(displayTime@timeString+4)& (0+255),b
  4835   000B1A                     
  4836                           ; BSR set to: 0
  4837                           ;main.c: 123:     uint8_t displayString[5];;main.c: 124:     for (int i = 0; i < 5; i++)
      +                           {
  4838   000B1A  0E00               	movlw	0
  4839   000B1C  6FC6               	movwf	(displayTime@i+1)& (0+255),b
  4840   000B1E  0E00               	movlw	0
  4841   000B20  6FC5               	movwf	displayTime@i& (0+255),b
  4842   000B22                     l3649:
  4843                           
  4844                           ; BSR set to: 0
  4845                           ;main.c: 125:         displayString[i] = (uint8_t)timeString[i];
  4846   000B22  51C5               	movf	displayTime@i& (0+255),w,b
  4847   000B24  0FC0               	addlw	low displayTime@timeString
  4848   000B26  6ED9               	movwf	fsr2l,c
  4849   000B28  6ADA               	clrf	fsr2h,c
  4850   000B2A  51C5               	movf	displayTime@i& (0+255),w,b
  4851   000B2C  0FBB               	addlw	low displayTime@displayString
  4852   000B2E  6EE1               	movwf	fsr1l,c
  4853   000B30  6AE2               	clrf	fsr1h,c
  4854   000B32  CFDF FFE7          	movff	indf2,indf1
  4855   000B36                     
  4856                           ; BSR set to: 0
  4857                           ;main.c: 126:     }
  4858   000B36  4BC5               	infsnz	displayTime@i& (0+255),f,b
  4859   000B38  2BC6               	incf	(displayTime@i+1)& (0+255),f,b
  4860   000B3A                     
  4861                           ; BSR set to: 0
  4862   000B3A  BFC6               	btfsc	(displayTime@i+1)& (0+255),7,b
  4863   000B3C  EFA9  F005         	goto	u2931
  4864   000B40  51C6               	movf	(displayTime@i+1)& (0+255),w,b
  4865   000B42  E109               	bnz	u2930
  4866   000B44  0E05               	movlw	5
  4867   000B46  5DC5               	subwf	displayTime@i& (0+255),w,b
  4868   000B48  A0D8               	btfss	status,0,c
  4869   000B4A  EFA9  F005         	goto	u2931
  4870   000B4E  EFAB  F005         	goto	u2930
  4871   000B52                     u2931:
  4872   000B52  EF91  F005         	goto	l3649
  4873   000B56                     u2930:
  4874   000B56                     
  4875                           ; BSR set to: 0
  4876                           ;main.c: 128:     printString(displayString);
  4877   000B56  0EBB               	movlw	low displayTime@displayString
  4878   000B58  6E47               	movwf	printString@str^0,c
  4879   000B5A  6A48               	clrf	(printString@str+1)^0,c
  4880   000B5C  ECA2  F001         	call	_printString	;wreg free
  4881   000B60  0012               	return		;funcret
  4882   000B62                     __end_of_displayTime:
  4883                           	callstack 0
  4884                           
  4885 ;; *************** function _displayAlarmTime *****************
  4886 ;; Defined at:
  4887 ;;		line 144 in file "main.c"
  4888 ;; Parameters:    Size  Location     Type
  4889 ;;		None
  4890 ;; Auto vars:     Size  Location     Type
  4891 ;;  i               2   21[BANK0 ] int 
  4892 ;;  alarmTimeStr    5   16[BANK0 ] unsigned char [5]
  4893 ;;  displayStrin    5   11[BANK0 ] unsigned char [5]
  4894 ;; Return value:  Size  Location     Type
  4895 ;;                  1    wreg      void 
  4896 ;; Registers used:
  4897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4898 ;; Tracked objects:
  4899 ;;		On entry : 0/0
  4900 ;;		On exit  : 0/0
  4901 ;;		Unchanged: 0/0
  4902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4903 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4904 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4905 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4906 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4907 ;;Total ram usage:       12 bytes
  4908 ;; Hardware stack levels used: 1
  4909 ;; Hardware stack levels required when called: 9
  4910 ;; This function calls:
  4911 ;;		___awdiv
  4912 ;;		___awmod
  4913 ;;		_printString
  4914 ;; This function is called by:
  4915 ;;		_checkButtons
  4916 ;; This function uses a non-reentrant model
  4917 ;;
  4918                           
  4919                           	psect	text17
  4920   000B62                     __ptext17:
  4921                           	callstack 0
  4922   000B62                     _displayAlarmTime:
  4923                           	callstack 20
  4924   000B62                     
  4925                           ;main.c: 146:     char alarmTimeString[5];;main.c: 149:     alarmTimeString[0] = (alarmH
      +                          ours / 10) + '0';
  4926   000B62  C0AB  F007         	movff	_alarmHours,___awdiv@dividend
  4927   000B66  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4928   000B68  0E00               	movlw	0
  4929   000B6A  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4930   000B6C  0E0A               	movlw	10
  4931   000B6E  6E09               	movwf	___awdiv@divisor^0,c
  4932   000B70  ECDB  F003         	call	___awdiv	;wreg free
  4933   000B74  5007               	movf	?___awdiv^0,w,c
  4934   000B76  0F30               	addlw	48
  4935   000B78  0100               	movlb	0	; () banked
  4936   000B7A  6FC0               	movwf	displayAlarmTime@alarmTimeString& (0+255),b
  4937                           
  4938                           ;main.c: 150:     alarmTimeString[1] = (alarmHours % 10) + '0';
  4939   000B7C  C0AB  F007         	movff	_alarmHours,___awmod@dividend
  4940   000B80  6A08               	clrf	(___awmod@dividend+1)^0,c
  4941   000B82  0E00               	movlw	0
  4942   000B84  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4943   000B86  0E0A               	movlw	10
  4944   000B88  6E09               	movwf	___awmod@divisor^0,c
  4945   000B8A  EC0B  F006         	call	___awmod	;wreg free
  4946   000B8E  5007               	movf	?___awmod^0,w,c
  4947   000B90  0F30               	addlw	48
  4948   000B92  0100               	movlb	0	; () banked
  4949   000B94  6FC1               	movwf	(displayAlarmTime@alarmTimeString+1)& (0+255),b
  4950                           
  4951                           ;main.c: 151:     alarmTimeString[2] = (alarmMinutes / 10) + '0';
  4952   000B96  C0AA  F007         	movff	_alarmMinutes,___awdiv@dividend
  4953   000B9A  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4954   000B9C  0E00               	movlw	0
  4955   000B9E  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4956   000BA0  0E0A               	movlw	10
  4957   000BA2  6E09               	movwf	___awdiv@divisor^0,c
  4958   000BA4  ECDB  F003         	call	___awdiv	;wreg free
  4959   000BA8  5007               	movf	?___awdiv^0,w,c
  4960   000BAA  0F30               	addlw	48
  4961   000BAC  0100               	movlb	0	; () banked
  4962   000BAE  6FC2               	movwf	(displayAlarmTime@alarmTimeString+2)& (0+255),b
  4963                           
  4964                           ;main.c: 152:     alarmTimeString[3] = (alarmMinutes % 10) + '0';
  4965   000BB0  C0AA  F007         	movff	_alarmMinutes,___awmod@dividend
  4966   000BB4  6A08               	clrf	(___awmod@dividend+1)^0,c
  4967   000BB6  0E00               	movlw	0
  4968   000BB8  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4969   000BBA  0E0A               	movlw	10
  4970   000BBC  6E09               	movwf	___awmod@divisor^0,c
  4971   000BBE  EC0B  F006         	call	___awmod	;wreg free
  4972   000BC2  5007               	movf	?___awmod^0,w,c
  4973   000BC4  0F30               	addlw	48
  4974   000BC6  0100               	movlb	0	; () banked
  4975   000BC8  6FC3               	movwf	(displayAlarmTime@alarmTimeString+3)& (0+255),b
  4976   000BCA                     
  4977                           ; BSR set to: 0
  4978                           ;main.c: 153:     alarmTimeString[4] = '\0';
  4979   000BCA  0E00               	movlw	0
  4980   000BCC  6FC4               	movwf	(displayAlarmTime@alarmTimeString+4)& (0+255),b
  4981   000BCE                     
  4982                           ; BSR set to: 0
  4983                           ;main.c: 156:     uint8_t displayString[5];;main.c: 157:     for (int i = 0; i < 5; i++)
      +                           {
  4984   000BCE  0E00               	movlw	0
  4985   000BD0  6FC6               	movwf	(displayAlarmTime@i+1)& (0+255),b
  4986   000BD2  0E00               	movlw	0
  4987   000BD4  6FC5               	movwf	displayAlarmTime@i& (0+255),b
  4988   000BD6                     l3681:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;main.c: 158:         displayString[i] = (uint8_t)alarmTimeString[i];
  4992   000BD6  51C5               	movf	displayAlarmTime@i& (0+255),w,b
  4993   000BD8  0FC0               	addlw	low displayAlarmTime@alarmTimeString
  4994   000BDA  6ED9               	movwf	fsr2l,c
  4995   000BDC  6ADA               	clrf	fsr2h,c
  4996   000BDE  51C5               	movf	displayAlarmTime@i& (0+255),w,b
  4997   000BE0  0FBB               	addlw	low displayAlarmTime@displayString
  4998   000BE2  6EE1               	movwf	fsr1l,c
  4999   000BE4  6AE2               	clrf	fsr1h,c
  5000   000BE6  CFDF FFE7          	movff	indf2,indf1
  5001   000BEA                     
  5002                           ; BSR set to: 0
  5003                           ;main.c: 159:     }
  5004   000BEA  4BC5               	infsnz	displayAlarmTime@i& (0+255),f,b
  5005   000BEC  2BC6               	incf	(displayAlarmTime@i+1)& (0+255),f,b
  5006   000BEE                     
  5007                           ; BSR set to: 0
  5008   000BEE  BFC6               	btfsc	(displayAlarmTime@i+1)& (0+255),7,b
  5009   000BF0  EF03  F006         	goto	u2951
  5010   000BF4  51C6               	movf	(displayAlarmTime@i+1)& (0+255),w,b
  5011   000BF6  E109               	bnz	u2950
  5012   000BF8  0E05               	movlw	5
  5013   000BFA  5DC5               	subwf	displayAlarmTime@i& (0+255),w,b
  5014   000BFC  A0D8               	btfss	status,0,c
  5015   000BFE  EF03  F006         	goto	u2951
  5016   000C02  EF05  F006         	goto	u2950
  5017   000C06                     u2951:
  5018   000C06  EFEB  F005         	goto	l3681
  5019   000C0A                     u2950:
  5020   000C0A                     
  5021                           ; BSR set to: 0
  5022                           ;main.c: 161:     printString(displayString);
  5023   000C0A  0EBB               	movlw	low displayAlarmTime@displayString
  5024   000C0C  6E47               	movwf	printString@str^0,c
  5025   000C0E  6A48               	clrf	(printString@str+1)^0,c
  5026   000C10  ECA2  F001         	call	_printString	;wreg free
  5027   000C14  0012               	return		;funcret
  5028   000C16                     __end_of_displayAlarmTime:
  5029                           	callstack 0
  5030                           
  5031 ;; *************** function _printString *****************
  5032 ;; Defined at:
  5033 ;;		line 161 in file "MAX7219.c"
  5034 ;; Parameters:    Size  Location     Type
  5035 ;;  str             2   70[COMRAM] PTR unsigned char 
  5036 ;;		 -> STR_1(6), displayAlarmTime@displayString(5), displayTime@displayString(5), 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  j               2    9[BANK0 ] int 
  5039 ;;  data            1    2[BANK0 ] unsigned char 
  5040 ;;  i               2    5[BANK0 ] int 
  5041 ;;  indx            2    0[BANK0 ] int 
  5042 ;;  k               2    7[BANK0 ] int 
  5043 ;;  strindx         2    3[BANK0 ] int 
  5044 ;; Return value:  Size  Location     Type
  5045 ;;                  1    wreg      void 
  5046 ;; Registers used:
  5047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5048 ;; Tracked objects:
  5049 ;;		On entry : 0/0
  5050 ;;		On exit  : 0/0
  5051 ;;		Unchanged: 0/0
  5052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5053 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5054 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5055 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5056 ;;      Totals:        10      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5057 ;;Total ram usage:       21 bytes
  5058 ;; Hardware stack levels used: 1
  5059 ;; Hardware stack levels required when called: 8
  5060 ;; This function calls:
  5061 ;;		_flushBuffer
  5062 ;; This function is called by:
  5063 ;;		_displayTime
  5064 ;;		_displayAlarmTime
  5065 ;;		_triggerAlarm
  5066 ;; This function uses a non-reentrant model
  5067 ;;
  5068                           
  5069                           	psect	text18
  5070   000344                     __ptext18:
  5071                           	callstack 0
  5072   000344                     _printString:
  5073                           	callstack 20
  5074   000344                     
  5075                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  5076   000344  0E00               	movlw	0
  5077   000346  0100               	movlb	0	; () banked
  5078   000348  6FB4               	movwf	(printString@strindx+1)& (0+255),b
  5079   00034A  0E00               	movlw	0
  5080   00034C  6FB3               	movwf	printString@strindx& (0+255),b
  5081                           
  5082                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  5083   00034E  0E00               	movlw	0
  5084   000350  6FB8               	movwf	(printString@k+1)& (0+255),b
  5085   000352  0E1F               	movlw	31
  5086   000354  6FB7               	movwf	printString@k& (0+255),b
  5087                           
  5088                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5089   000356  EF4A  F002         	goto	l3541
  5090   00035A                     l3501:
  5091                           
  5092                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  5093   00035A  0E00               	movlw	0
  5094   00035C  0100               	movlb	0	; () banked
  5095   00035E  6FB1               	movwf	(printString@indx+1)& (0+255),b
  5096   000360  0E00               	movlw	0
  5097   000362  6FB0               	movwf	printString@indx& (0+255),b
  5098                           
  5099                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  5100   000364  0E00               	movlw	0
  5101   000366  6FB6               	movwf	(printString@i+1)& (0+255),b
  5102   000368  0E00               	movlw	0
  5103   00036A  6FB5               	movwf	printString@i& (0+255),b
  5104   00036C                     l3507:
  5105                           
  5106                           ; BSR set to: 0
  5107                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  5108   00036C  0E00               	movlw	0
  5109   00036E  6FB2               	movwf	printString@data& (0+255),b
  5110                           
  5111                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  5112   000370  0E00               	movlw	0
  5113   000372  6FBA               	movwf	(printString@j+1)& (0+255),b
  5114   000374  0E07               	movlw	7
  5115   000376  6FB9               	movwf	printString@j& (0+255),b
  5116   000378                     l3513:
  5117                           
  5118                           ; BSR set to: 0
  5119                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  5120   000378  51B3               	movf	printString@strindx& (0+255),w,b
  5121   00037A  2447               	addwf	printString@str^0,w,c
  5122   00037C  6E49               	movwf	??_printString^0,c
  5123   00037E  51B4               	movf	(printString@strindx+1)& (0+255),w,b
  5124   000380  2048               	addwfc	(printString@str+1)^0,w,c
  5125   000382  6E4A               	movwf	(??_printString+1)^0,c
  5126   000384  C049  FFF6         	movff	??_printString,tblptrl
  5127   000388  C04A  FFF7         	movff	??_printString+1,tblptrh
  5128   00038C  0E00               	movlw	low (__mediumconst shr (0+16))
  5129   00038E  6EF8               	movwf	tblptru,c
  5130   000390  0E0F               	movlw	(high __ramtop+-1)
  5131   000392  64F7               	cpfsgt	tblptrh,c
  5132   000394  D003               	bra	u2777
  5133   000396  0008               	tblrd		*
  5134   000398  50F5               	movf	tablat,w,c
  5135   00039A  D005               	bra	u2770
  5136   00039C                     u2777:
  5137   00039C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5138   0003A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5139   0003A4  50E7               	movf	indf1,w,c
  5140   0003A6                     u2770:
  5141   0003A6  6E4B               	movwf	(??_printString+2)^0,c
  5142   0003A8  504B               	movf	(??_printString+2)^0,w,c
  5143   0003AA  0D08               	mullw	8
  5144   0003AC  0EF9               	movlw	low _MAX7219_Dot_Matrix_font
  5145   0003AE  24F3               	addwf	243,w,c
  5146   0003B0  6E4C               	movwf	(??_printString+3)^0,c
  5147   0003B2  0EF7               	movlw	high _MAX7219_Dot_Matrix_font
  5148   0003B4  20F4               	addwfc	prodh,w,c
  5149   0003B6  6E4D               	movwf	(??_printString+4)^0,c
  5150   0003B8  0100               	movlb	0	; () banked
  5151   0003BA  51B0               	movf	printString@indx& (0+255),w,b
  5152   0003BC  264C               	addwf	(??_printString+3)^0,f,c
  5153   0003BE  51B1               	movf	(printString@indx+1)& (0+255),w,b
  5154   0003C0  224D               	addwfc	(??_printString+4)^0,f,c
  5155   0003C2  C04C  FFF6         	movff	??_printString+3,tblptrl
  5156   0003C6  C04D  FFF7         	movff	??_printString+4,tblptrh
  5157   0003CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5158   0003CA  6AF8               	clrf	tblptru,c
  5159   0003CC                     	endif
  5160   0003CC                     	if	0	;tblptru may be non-zero
  5161   0003CC                     	endif
  5162   0003CC  0008               	tblrd		*
  5163   0003CE  CFF5 F04E          	movff	tablat,??_printString+5
  5164   0003D2  C0B9  F04F         	movff	printString@j,??_printString+6
  5165   0003D6  0E01               	movlw	1
  5166   0003D8  6E50               	movwf	(??_printString+7)^0,c
  5167   0003DA  2A4F               	incf	(??_printString+6)^0,f,c
  5168   0003DC  EFF2  F001         	goto	u2784
  5169   0003E0                     u2785:
  5170   0003E0  90D8               	bcf	status,0,c
  5171   0003E2  3650               	rlcf	(??_printString+7)^0,f,c
  5172   0003E4                     u2784:
  5173   0003E4  2E4F               	decfsz	(??_printString+6)^0,f,c
  5174   0003E6  EFF0  F001         	goto	u2785
  5175   0003EA  5050               	movf	(??_printString+7)^0,w,c
  5176   0003EC  144E               	andwf	(??_printString+5)^0,w,c
  5177   0003EE  0900               	iorlw	0
  5178   0003F0  B4D8               	btfsc	status,2,c
  5179   0003F2  EFFD  F001         	goto	u2791
  5180   0003F6  EFFF  F001         	goto	u2790
  5181   0003FA                     u2791:
  5182   0003FA  EF10  F002         	goto	l3517
  5183   0003FE                     u2790:
  5184   0003FE                     
  5185                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  5186   0003FE  0100               	movlb	0	; () banked
  5187   000400  51B9               	movf	printString@j& (0+255),w,b
  5188   000402  0807               	sublw	7
  5189   000404  6E49               	movwf	??_printString^0,c
  5190   000406  0E01               	movlw	1
  5191   000408  6E4A               	movwf	(??_printString+1)^0,c
  5192   00040A  2A49               	incf	??_printString^0,f,c
  5193   00040C  EF0A  F002         	goto	u2804
  5194   000410                     u2805:
  5195   000410  90D8               	bcf	status,0,c
  5196   000412  364A               	rlcf	(??_printString+1)^0,f,c
  5197   000414                     u2804:
  5198   000414  2E49               	decfsz	??_printString^0,f,c
  5199   000416  EF08  F002         	goto	u2805
  5200   00041A  504A               	movf	(??_printString+1)^0,w,c
  5201   00041C  0100               	movlb	0	; () banked
  5202   00041E  13B2               	iorwf	printString@data& (0+255),f,b
  5203   000420                     l3517:
  5204                           
  5205                           ;MAX7219.c: 179:             }
  5206   000420  0100               	movlb	0	; () banked
  5207   000422  07B9               	decf	printString@j& (0+255),f,b
  5208   000424  A0D8               	btfss	status,0,c
  5209   000426  07BA               	decf	(printString@j+1)& (0+255),f,b
  5210   000428                     
  5211                           ; BSR set to: 0
  5212   000428  BFBA               	btfsc	(printString@j+1)& (0+255),7,b
  5213   00042A  EF1B  F002         	goto	u2810
  5214   00042E  EF19  F002         	goto	u2811
  5215   000432                     u2811:
  5216   000432  EFBC  F001         	goto	l3513
  5217   000436                     u2810:
  5218   000436                     
  5219                           ; BSR set to: 0
  5220                           ;MAX7219.c: 180:             if (k < 0) break;
  5221   000436  BFB8               	btfsc	(printString@k+1)& (0+255),7,b
  5222   000438  EF22  F002         	goto	u2820
  5223   00043C  EF20  F002         	goto	u2821
  5224   000440                     u2821:
  5225   000440  EF24  F002         	goto	l3525
  5226   000444                     u2820:
  5227   000444  EF3F  F002         	goto	l3535
  5228   000448                     l3525:
  5229                           
  5230                           ; BSR set to: 0
  5231                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  5232   000448  51B7               	movf	printString@k& (0+255),w,b
  5233   00044A  0F60               	addlw	low _bufferCol
  5234   00044C  6ED9               	movwf	fsr2l,c
  5235   00044E  6ADA               	clrf	fsr2h,c
  5236   000450  C0B2  FFDF         	movff	printString@data,indf2
  5237   000454                     
  5238                           ; BSR set to: 0
  5239   000454  07B7               	decf	printString@k& (0+255),f,b
  5240   000456  A0D8               	btfss	status,0,c
  5241   000458  07B8               	decf	(printString@k+1)& (0+255),f,b
  5242   00045A                     
  5243                           ; BSR set to: 0
  5244                           ;MAX7219.c: 182:             indx++;
  5245   00045A  4BB0               	infsnz	printString@indx& (0+255),f,b
  5246   00045C  2BB1               	incf	(printString@indx+1)& (0+255),f,b
  5247   00045E                     
  5248                           ; BSR set to: 0
  5249                           ;MAX7219.c: 183:         }
  5250   00045E  4BB5               	infsnz	printString@i& (0+255),f,b
  5251   000460  2BB6               	incf	(printString@i+1)& (0+255),f,b
  5252   000462                     
  5253                           ; BSR set to: 0
  5254   000462  BFB6               	btfsc	(printString@i+1)& (0+255),7,b
  5255   000464  EF3D  F002         	goto	u2831
  5256   000468  51B6               	movf	(printString@i+1)& (0+255),w,b
  5257   00046A  E109               	bnz	u2830
  5258   00046C  0E08               	movlw	8
  5259   00046E  5DB5               	subwf	printString@i& (0+255),w,b
  5260   000470  A0D8               	btfss	status,0,c
  5261   000472  EF3D  F002         	goto	u2831
  5262   000476  EF3F  F002         	goto	u2830
  5263   00047A                     u2831:
  5264   00047A  EFB6  F001         	goto	l3507
  5265   00047E                     u2830:
  5266   00047E                     l3535:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;MAX7219.c: 184:         strindx++;
  5270   00047E  4BB3               	infsnz	printString@strindx& (0+255),f,b
  5271   000480  2BB4               	incf	(printString@strindx+1)& (0+255),f,b
  5272   000482                     
  5273                           ; BSR set to: 0
  5274                           ;MAX7219.c: 185:         if (k < 0) break;
  5275   000482  BFB8               	btfsc	(printString@k+1)& (0+255),7,b
  5276   000484  EF48  F002         	goto	u2840
  5277   000488  EF46  F002         	goto	u2841
  5278   00048C                     u2841:
  5279   00048C  EF4A  F002         	goto	l3541
  5280   000490                     u2840:
  5281   000490  EF69  F002         	goto	l3543
  5282   000494                     l3541:
  5283                           
  5284                           ; BSR set to: 0
  5285                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5286   000494  51B3               	movf	printString@strindx& (0+255),w,b
  5287   000496  2447               	addwf	printString@str^0,w,c
  5288   000498  6E49               	movwf	??_printString^0,c
  5289   00049A  51B4               	movf	(printString@strindx+1)& (0+255),w,b
  5290   00049C  2048               	addwfc	(printString@str+1)^0,w,c
  5291   00049E  6E4A               	movwf	(??_printString+1)^0,c
  5292   0004A0  C049  FFF6         	movff	??_printString,tblptrl
  5293   0004A4  C04A  FFF7         	movff	??_printString+1,tblptrh
  5294   0004A8  0E00               	movlw	low (__mediumconst shr (0+16))
  5295   0004AA  6EF8               	movwf	tblptru,c
  5296   0004AC  0E0F               	movlw	(high __ramtop+-1)
  5297   0004AE  64F7               	cpfsgt	tblptrh,c
  5298   0004B0  D003               	bra	u2857
  5299   0004B2  0008               	tblrd		*
  5300   0004B4  50F5               	movf	tablat,w,c
  5301   0004B6  D005               	bra	u2850
  5302   0004B8                     u2857:
  5303   0004B8  CFF6 FFE1          	movff	tblptrl,fsr1l
  5304   0004BC  CFF7 FFE2          	movff	tblptrh,fsr1h
  5305   0004C0  50E7               	movf	indf1,w,c
  5306   0004C2                     u2850:
  5307   0004C2  0900               	iorlw	0
  5308   0004C4  A4D8               	btfss	status,2,c
  5309   0004C6  EF67  F002         	goto	u2861
  5310   0004CA  EF69  F002         	goto	u2860
  5311   0004CE                     u2861:
  5312   0004CE  EFAD  F001         	goto	l3501
  5313   0004D2                     u2860:
  5314   0004D2                     l3543:
  5315                           
  5316                           ;MAX7219.c: 188:     flushBuffer();
  5317   0004D2  EC6C  F002         	call	_flushBuffer	;wreg free
  5318   0004D6  0012               	return		;funcret
  5319   0004D8                     __end_of_printString:
  5320                           	callstack 0
  5321                           
  5322 ;; *************** function _flushBuffer *****************
  5323 ;; Defined at:
  5324 ;;		line 52 in file "MAX7219.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  j               2   64[COMRAM] int 
  5329 ;;  dev             2   62[COMRAM] int 
  5330 ;;  row             2   66[COMRAM] int 
  5331 ;;  i               2   68[COMRAM] int 
  5332 ;;  bufferRow      32   30[COMRAM] unsigned char [32]
  5333 ;; Return value:  Size  Location     Type
  5334 ;;                  1    wreg      void 
  5335 ;; Registers used:
  5336 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5337 ;; Tracked objects:
  5338 ;;		On entry : 0/0
  5339 ;;		On exit  : 0/0
  5340 ;;		Unchanged: 0/0
  5341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5342 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5343 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5344 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5345 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5346 ;;Total ram usage:       43 bytes
  5347 ;; Hardware stack levels used: 1
  5348 ;; Hardware stack levels required when called: 7
  5349 ;; This function calls:
  5350 ;;		___awdiv
  5351 ;;		_max_write
  5352 ;; This function is called by:
  5353 ;;		_clearDisplay
  5354 ;;		_printString
  5355 ;;		_shiftLeft
  5356 ;;		_shiftchar
  5357 ;; This function uses a non-reentrant model
  5358 ;;
  5359                           
  5360                           	psect	text19
  5361   0004D8                     __ptext19:
  5362                           	callstack 0
  5363   0004D8                     _flushBuffer:
  5364                           	callstack 20
  5365   0004D8                     
  5366                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  5367   0004D8  EE20  F01F         	lfsr	2,flushBuffer@bufferRow
  5368   0004DC  0E1F               	movlw	31
  5369   0004DE                     u2601:
  5370   0004DE  6ADE               	clrf	postinc2,c
  5371   0004E0  06E8               	decf	wreg,f,c
  5372   0004E2  E2FD               	bc	u2601
  5373   0004E4                     
  5374                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  5375   0004E4  0E00               	movlw	0
  5376   0004E6  6E46               	movwf	(flushBuffer@i+1)^0,c
  5377   0004E8  0E00               	movlw	0
  5378   0004EA  6E45               	movwf	flushBuffer@i^0,c
  5379   0004EC                     l3349:
  5380                           
  5381                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  5382   0004EC  C045  F007         	movff	flushBuffer@i,___awdiv@dividend
  5383   0004F0  C046  F008         	movff	flushBuffer@i+1,___awdiv@dividend+1
  5384   0004F4  0E00               	movlw	0
  5385   0004F6  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5386   0004F8  0E08               	movlw	8
  5387   0004FA  6E09               	movwf	___awdiv@divisor^0,c
  5388   0004FC  ECDB  F003         	call	___awdiv	;wreg free
  5389   000500  C007  F03F         	movff	?___awdiv,flushBuffer@dev
  5390   000504  C008  F040         	movff	?___awdiv+1,flushBuffer@dev+1
  5391   000508                     
  5392                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  5393   000508  0E00               	movlw	0
  5394   00050A  6E42               	movwf	(flushBuffer@j+1)^0,c
  5395   00050C  0E00               	movlw	0
  5396   00050E  6E41               	movwf	flushBuffer@j^0,c
  5397   000510                     l3357:
  5398                           
  5399                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  5400   000510  5045               	movf	flushBuffer@i^0,w,c
  5401   000512  0F60               	addlw	low _bufferCol
  5402   000514  6ED9               	movwf	fsr2l,c
  5403   000516  6ADA               	clrf	fsr2h,c
  5404   000518  50DF               	movf	indf2,w,c
  5405   00051A  6E1C               	movwf	??_flushBuffer^0,c
  5406   00051C  C041  F01D         	movff	flushBuffer@j,??_flushBuffer+1
  5407   000520  0E01               	movlw	1
  5408   000522  6E1E               	movwf	(??_flushBuffer+2)^0,c
  5409   000524  2A1D               	incf	(??_flushBuffer+1)^0,f,c
  5410   000526  EF97  F002         	goto	u2614
  5411   00052A                     u2615:
  5412   00052A  90D8               	bcf	status,0,c
  5413   00052C  361E               	rlcf	(??_flushBuffer+2)^0,f,c
  5414   00052E                     u2614:
  5415   00052E  2E1D               	decfsz	(??_flushBuffer+1)^0,f,c
  5416   000530  EF95  F002         	goto	u2615
  5417   000534  501E               	movf	(??_flushBuffer+2)^0,w,c
  5418   000536  141C               	andwf	??_flushBuffer^0,w,c
  5419   000538  0900               	iorlw	0
  5420   00053A  B4D8               	btfsc	status,2,c
  5421   00053C  EFA2  F002         	goto	u2621
  5422   000540  EFA4  F002         	goto	u2620
  5423   000544                     u2621:
  5424   000544  EFBE  F002         	goto	l3361
  5425   000548                     u2620:
  5426   000548                     
  5427                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  5428   000548  503F               	movf	flushBuffer@dev^0,w,c
  5429   00054A  0D08               	mullw	8
  5430   00054C  5045               	movf	flushBuffer@i^0,w,c
  5431   00054E  5CF3               	subwf	243,w,c
  5432   000550  6E1C               	movwf	??_flushBuffer^0,c
  5433   000552  0E07               	movlw	7
  5434   000554  261C               	addwf	??_flushBuffer^0,f,c
  5435   000556  0E01               	movlw	1
  5436   000558  6E1D               	movwf	(??_flushBuffer+1)^0,c
  5437   00055A  2A1C               	incf	??_flushBuffer^0,f,c
  5438   00055C  EFB2  F002         	goto	u2634
  5439   000560                     u2635:
  5440   000560  90D8               	bcf	status,0,c
  5441   000562  361D               	rlcf	(??_flushBuffer+1)^0,f,c
  5442   000564                     u2634:
  5443   000564  2E1C               	decfsz	??_flushBuffer^0,f,c
  5444   000566  EFB0  F002         	goto	u2635
  5445   00056A  503F               	movf	flushBuffer@dev^0,w,c
  5446   00056C  0D08               	mullw	8
  5447   00056E  50F3               	movf	243,w,c
  5448   000570  0F1F               	addlw	low flushBuffer@bufferRow
  5449   000572  2441               	addwf	flushBuffer@j^0,w,c
  5450   000574  6ED9               	movwf	fsr2l,c
  5451   000576  6ADA               	clrf	fsr2h,c
  5452   000578  501D               	movf	(??_flushBuffer+1)^0,w,c
  5453   00057A  12DF               	iorwf	indf2,f,c
  5454   00057C                     l3361:
  5455                           
  5456                           ;MAX7219.c: 66:   }
  5457   00057C  4A41               	infsnz	flushBuffer@j^0,f,c
  5458   00057E  2A42               	incf	(flushBuffer@j+1)^0,f,c
  5459   000580  BE42               	btfsc	(flushBuffer@j+1)^0,7,c
  5460   000582  EFCC  F002         	goto	u2641
  5461   000586  5042               	movf	(flushBuffer@j+1)^0,w,c
  5462   000588  E109               	bnz	u2640
  5463   00058A  0E08               	movlw	8
  5464   00058C  5C41               	subwf	flushBuffer@j^0,w,c
  5465   00058E  A0D8               	btfss	status,0,c
  5466   000590  EFCC  F002         	goto	u2641
  5467   000594  EFCE  F002         	goto	u2640
  5468   000598                     u2641:
  5469   000598  EF88  F002         	goto	l3357
  5470   00059C                     u2640:
  5471   00059C                     
  5472                           ;MAX7219.c: 67:  }
  5473   00059C  4A45               	infsnz	flushBuffer@i^0,f,c
  5474   00059E  2A46               	incf	(flushBuffer@i+1)^0,f,c
  5475   0005A0  BE46               	btfsc	(flushBuffer@i+1)^0,7,c
  5476   0005A2  EFDC  F002         	goto	u2651
  5477   0005A6  5046               	movf	(flushBuffer@i+1)^0,w,c
  5478   0005A8  E109               	bnz	u2650
  5479   0005AA  0E20               	movlw	32
  5480   0005AC  5C45               	subwf	flushBuffer@i^0,w,c
  5481   0005AE  A0D8               	btfss	status,0,c
  5482   0005B0  EFDC  F002         	goto	u2651
  5483   0005B4  EFDE  F002         	goto	u2650
  5484   0005B8                     u2651:
  5485   0005B8  EF76  F002         	goto	l3349
  5486   0005BC                     u2650:
  5487   0005BC                     
  5488                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  5489   0005BC  0E00               	movlw	0
  5490   0005BE  6E44               	movwf	(flushBuffer@row+1)^0,c
  5491   0005C0  0E01               	movlw	1
  5492   0005C2  6E43               	movwf	flushBuffer@row^0,c
  5493   0005C4                     l3375:
  5494                           
  5495                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  5496   0005C4  C043  F00F         	movff	flushBuffer@row,max_write@row
  5497   0005C8  C044  F010         	movff	flushBuffer@row+1,max_write@row+1
  5498   0005CC  C043  F01C         	movff	flushBuffer@row,??_flushBuffer
  5499   0005D0  0EFF               	movlw	255
  5500   0005D2  261C               	addwf	??_flushBuffer^0,f,c
  5501   0005D4  501C               	movf	??_flushBuffer^0,w,c
  5502   0005D6  0F1F               	addlw	low flushBuffer@bufferRow
  5503   0005D8  6ED9               	movwf	fsr2l,c
  5504   0005DA  6ADA               	clrf	fsr2h,c
  5505   0005DC  50DF               	movf	indf2,w,c
  5506   0005DE  6E11               	movwf	max_write@data^0,c
  5507   0005E0  EC3D  F004         	call	_max_write	;wreg free
  5508   0005E4                     
  5509                           ;MAX7219.c: 73:  }
  5510   0005E4  4A43               	infsnz	flushBuffer@row^0,f,c
  5511   0005E6  2A44               	incf	(flushBuffer@row+1)^0,f,c
  5512   0005E8  BE44               	btfsc	(flushBuffer@row+1)^0,7,c
  5513   0005EA  EF00  F003         	goto	u2661
  5514   0005EE  5044               	movf	(flushBuffer@row+1)^0,w,c
  5515   0005F0  E109               	bnz	u2660
  5516   0005F2  0E21               	movlw	33
  5517   0005F4  5C43               	subwf	flushBuffer@row^0,w,c
  5518   0005F6  A0D8               	btfss	status,0,c
  5519   0005F8  EF00  F003         	goto	u2661
  5520   0005FC  EF02  F003         	goto	u2660
  5521   000600                     u2661:
  5522   000600  EFE2  F002         	goto	l3375
  5523   000604                     u2660:
  5524   000604  0012               	return		;funcret
  5525   000606                     __end_of_flushBuffer:
  5526                           	callstack 0
  5527                           
  5528 ;; *************** function _max_write *****************
  5529 ;; Defined at:
  5530 ;;		line 10 in file "MAX7219.c"
  5531 ;; Parameters:    Size  Location     Type
  5532 ;;  row             2   14[COMRAM] int 
  5533 ;;  data            1   16[COMRAM] unsigned char 
  5534 ;; Auto vars:     Size  Location     Type
  5535 ;;  dev             2   23[COMRAM] int 
  5536 ;;  writeData       2   25[COMRAM] unsigned short 
  5537 ;;  devTarget       2   21[COMRAM] int 
  5538 ;;  offset          2   19[COMRAM] int 
  5539 ;; Return value:  Size  Location     Type
  5540 ;;                  1    wreg      void 
  5541 ;; Registers used:
  5542 ;;		wreg, status,2, status,0, cstack
  5543 ;; Tracked objects:
  5544 ;;		On entry : 0/0
  5545 ;;		On exit  : 0/0
  5546 ;;		Unchanged: 0/0
  5547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5548 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5549 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5550 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;Total ram usage:       13 bytes
  5553 ;; Hardware stack levels used: 1
  5554 ;; Hardware stack levels required when called: 6
  5555 ;; This function calls:
  5556 ;;		_SPI_Exchange8bit
  5557 ;;		___awdiv
  5558 ;; This function is called by:
  5559 ;;		_flushBuffer
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text20
  5564   00087A                     __ptext20:
  5565                           	callstack 0
  5566   00087A                     _max_write:
  5567                           	callstack 20
  5568   00087A                     
  5569                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  5570   00087A  0EFF               	movlw	255
  5571   00087C  240F               	addwf	max_write@row^0,w,c
  5572   00087E  6E07               	movwf	___awdiv@dividend^0,c
  5573   000880  0EFF               	movlw	255
  5574   000882  2010               	addwfc	(max_write@row+1)^0,w,c
  5575   000884  6E08               	movwf	(___awdiv@dividend+1)^0,c
  5576   000886  0E00               	movlw	0
  5577   000888  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5578   00088A  0E08               	movlw	8
  5579   00088C  6E09               	movwf	___awdiv@divisor^0,c
  5580   00088E  ECDB  F003         	call	___awdiv	;wreg free
  5581   000892  C007  F016         	movff	?___awdiv,max_write@devTarget
  5582   000896  C008  F017         	movff	?___awdiv+1,max_write@devTarget+1
  5583   00089A                     
  5584                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  5585   00089A  C016  F012         	movff	max_write@devTarget,??_max_write
  5586   00089E  C017  F013         	movff	max_write@devTarget+1,??_max_write+1
  5587   0008A2  90D8               	bcf	status,0,c
  5588   0008A4  3612               	rlcf	??_max_write^0,f,c
  5589   0008A6  3613               	rlcf	(??_max_write+1)^0,f,c
  5590   0008A8  90D8               	bcf	status,0,c
  5591   0008AA  3612               	rlcf	??_max_write^0,f,c
  5592   0008AC  3613               	rlcf	(??_max_write+1)^0,f,c
  5593   0008AE  90D8               	bcf	status,0,c
  5594   0008B0  3612               	rlcf	??_max_write^0,f,c
  5595   0008B2  3613               	rlcf	(??_max_write+1)^0,f,c
  5596   0008B4  C012  F014         	movff	??_max_write,max_write@offset
  5597   0008B8  C013  F015         	movff	??_max_write+1,max_write@offset+1
  5598   0008BC  948B               	bcf	139,2,c	;volatile
  5599   0008BE                     
  5600                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  5601   0008BE  0E00               	movlw	0
  5602   0008C0  6E19               	movwf	(max_write@dev+1)^0,c
  5603   0008C2  0E00               	movlw	0
  5604   0008C4  6E18               	movwf	max_write@dev^0,c
  5605   0008C6                     l3291:
  5606                           
  5607                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  5608   0008C6  5016               	movf	max_write@devTarget^0,w,c
  5609   0008C8  1818               	xorwf	max_write@dev^0,w,c
  5610   0008CA  E107               	bnz	u2561
  5611   0008CC  5017               	movf	(max_write@devTarget+1)^0,w,c
  5612   0008CE  1819               	xorwf	(max_write@dev+1)^0,w,c
  5613   0008D0  A4D8               	btfss	status,2,c
  5614   0008D2  EF6D  F004         	goto	u2561
  5615   0008D6  EF6F  F004         	goto	u2560
  5616   0008DA                     u2561:
  5617   0008DA  EF85  F004         	goto	l3299
  5618   0008DE                     u2560:
  5619   0008DE                     
  5620                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  5621   0008DE  5014               	movf	max_write@offset^0,w,c
  5622   0008E0  5C0F               	subwf	max_write@row^0,w,c
  5623   0008E2  6E12               	movwf	??_max_write^0,c
  5624   0008E4  5015               	movf	(max_write@offset+1)^0,w,c
  5625   0008E6  5810               	subwfb	(max_write@row+1)^0,w,c
  5626   0008E8  6E13               	movwf	(??_max_write+1)^0,c
  5627   0008EA  C012  F013         	movff	??_max_write,??_max_write+1
  5628   0008EE  6A12               	clrf	??_max_write^0,c
  5629   0008F0  5011               	movf	max_write@data^0,w,c
  5630   0008F2  1012               	iorwf	??_max_write^0,w,c
  5631   0008F4  6E1A               	movwf	max_write@writeData^0,c
  5632   0008F6  5013               	movf	(??_max_write+1)^0,w,c
  5633   0008F8  6E1B               	movwf	(max_write@writeData+1)^0,c
  5634   0008FA                     
  5635                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5636   0008FA  501B               	movf	(max_write@writeData+1)^0,w,c
  5637   0008FC  ECDF  F008         	call	_SPI_Exchange8bit
  5638   000900                     
  5639                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  5640   000900  501A               	movf	max_write@writeData^0,w,c
  5641   000902  ECDF  F008         	call	_SPI_Exchange8bit
  5642                           
  5643                           ;MAX7219.c: 31:   }
  5644   000906  EF8B  F004         	goto	l3305
  5645   00090A                     l3299:
  5646   00090A                     
  5647                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5648   00090A  0E00               	movlw	0
  5649   00090C  ECDF  F008         	call	_SPI_Exchange8bit
  5650   000910                     
  5651                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  5652   000910  0E00               	movlw	0
  5653   000912  ECDF  F008         	call	_SPI_Exchange8bit
  5654   000916                     l3305:
  5655                           
  5656                           ;MAX7219.c: 46:  }
  5657   000916  4A18               	infsnz	max_write@dev^0,f,c
  5658   000918  2A19               	incf	(max_write@dev+1)^0,f,c
  5659   00091A  BE19               	btfsc	(max_write@dev+1)^0,7,c
  5660   00091C  EF99  F004         	goto	u2571
  5661   000920  5019               	movf	(max_write@dev+1)^0,w,c
  5662   000922  E109               	bnz	u2570
  5663   000924  0E04               	movlw	4
  5664   000926  5C18               	subwf	max_write@dev^0,w,c
  5665   000928  A0D8               	btfss	status,0,c
  5666   00092A  EF99  F004         	goto	u2571
  5667   00092E  EF9B  F004         	goto	u2570
  5668   000932                     u2571:
  5669   000932  EF63  F004         	goto	l3291
  5670   000936                     u2570:
  5671   000936  848B               	bsf	139,2,c	;volatile
  5672   000938  0012               	return		;funcret
  5673   00093A                     __end_of_max_write:
  5674                           	callstack 0
  5675                           
  5676 ;; *************** function ___awdiv *****************
  5677 ;; Defined at:
  5678 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5679 ;; Parameters:    Size  Location     Type
  5680 ;;  dividend        2    6[COMRAM] int 
  5681 ;;  divisor         2    8[COMRAM] int 
  5682 ;; Auto vars:     Size  Location     Type
  5683 ;;  quotient        2   12[COMRAM] int 
  5684 ;;  sign            1   11[COMRAM] unsigned char 
  5685 ;;  counter         1   10[COMRAM] unsigned char 
  5686 ;; Return value:  Size  Location     Type
  5687 ;;                  2    6[COMRAM] int 
  5688 ;; Registers used:
  5689 ;;		wreg, status,2, status,0
  5690 ;; Tracked objects:
  5691 ;;		On entry : 0/0
  5692 ;;		On exit  : 0/0
  5693 ;;		Unchanged: 0/0
  5694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5695 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5696 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5698 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5699 ;;Total ram usage:        8 bytes
  5700 ;; Hardware stack levels used: 1
  5701 ;; Hardware stack levels required when called: 5
  5702 ;; This function calls:
  5703 ;;		Nothing
  5704 ;; This function is called by:
  5705 ;;		_displayTime
  5706 ;;		_displayAlarmTime
  5707 ;;		_max_write
  5708 ;;		_flushBuffer
  5709 ;; This function uses a non-reentrant model
  5710 ;;
  5711                           
  5712                           	psect	text21
  5713   0007B6                     __ptext21:
  5714                           	callstack 0
  5715   0007B6                     ___awdiv:
  5716                           	callstack 20
  5717   0007B6  0E00               	movlw	0
  5718   0007B8  6E0C               	movwf	___awdiv@sign^0,c
  5719   0007BA  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  5720   0007BC  EFE4  F003         	goto	u2500
  5721   0007C0  EFE2  F003         	goto	u2501
  5722   0007C4                     u2501:
  5723   0007C4  EFEA  F003         	goto	l3241
  5724   0007C8                     u2500:
  5725   0007C8  6C09               	negf	___awdiv@divisor^0,c
  5726   0007CA  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  5727   0007CC  B0D8               	btfsc	status,0,c
  5728   0007CE  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  5729   0007D0  0E01               	movlw	1
  5730   0007D2  6E0C               	movwf	___awdiv@sign^0,c
  5731   0007D4                     l3241:
  5732   0007D4  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  5733   0007D6  EFF1  F003         	goto	u2510
  5734   0007DA  EFEF  F003         	goto	u2511
  5735   0007DE                     u2511:
  5736   0007DE  EFF7  F003         	goto	l3247
  5737   0007E2                     u2510:
  5738   0007E2  6C07               	negf	___awdiv@dividend^0,c
  5739   0007E4  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  5740   0007E6  B0D8               	btfsc	status,0,c
  5741   0007E8  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  5742   0007EA  0E01               	movlw	1
  5743   0007EC  1A0C               	xorwf	___awdiv@sign^0,f,c
  5744   0007EE                     l3247:
  5745   0007EE  0E00               	movlw	0
  5746   0007F0  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  5747   0007F2  0E00               	movlw	0
  5748   0007F4  6E0D               	movwf	___awdiv@quotient^0,c
  5749   0007F6  5009               	movf	___awdiv@divisor^0,w,c
  5750   0007F8  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  5751   0007FA  B4D8               	btfsc	status,2,c
  5752   0007FC  EF02  F004         	goto	u2521
  5753   000800  EF04  F004         	goto	u2520
  5754   000804                     u2521:
  5755   000804  EF2C  F004         	goto	l3269
  5756   000808                     u2520:
  5757   000808  0E01               	movlw	1
  5758   00080A  6E0B               	movwf	___awdiv@counter^0,c
  5759   00080C  EF0C  F004         	goto	l3255
  5760   000810                     l3253:
  5761   000810  90D8               	bcf	status,0,c
  5762   000812  3609               	rlcf	___awdiv@divisor^0,f,c
  5763   000814  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  5764   000816  2A0B               	incf	___awdiv@counter^0,f,c
  5765   000818                     l3255:
  5766   000818  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  5767   00081A  EF11  F004         	goto	u2531
  5768   00081E  EF13  F004         	goto	u2530
  5769   000822                     u2531:
  5770   000822  EF08  F004         	goto	l3253
  5771   000826                     u2530:
  5772   000826                     l3257:
  5773   000826  90D8               	bcf	status,0,c
  5774   000828  360D               	rlcf	___awdiv@quotient^0,f,c
  5775   00082A  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  5776   00082C  5009               	movf	___awdiv@divisor^0,w,c
  5777   00082E  5C07               	subwf	___awdiv@dividend^0,w,c
  5778   000830  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5779   000832  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  5780   000834  A0D8               	btfss	status,0,c
  5781   000836  EF1F  F004         	goto	u2541
  5782   00083A  EF21  F004         	goto	u2540
  5783   00083E                     u2541:
  5784   00083E  EF26  F004         	goto	l3265
  5785   000842                     u2540:
  5786   000842  5009               	movf	___awdiv@divisor^0,w,c
  5787   000844  5E07               	subwf	___awdiv@dividend^0,f,c
  5788   000846  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5789   000848  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  5790   00084A  800D               	bsf	___awdiv@quotient^0,0,c
  5791   00084C                     l3265:
  5792   00084C  90D8               	bcf	status,0,c
  5793   00084E  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  5794   000850  3209               	rrcf	___awdiv@divisor^0,f,c
  5795   000852  2E0B               	decfsz	___awdiv@counter^0,f,c
  5796   000854  EF13  F004         	goto	l3257
  5797   000858                     l3269:
  5798   000858  500C               	movf	___awdiv@sign^0,w,c
  5799   00085A  B4D8               	btfsc	status,2,c
  5800   00085C  EF32  F004         	goto	u2551
  5801   000860  EF34  F004         	goto	u2550
  5802   000864                     u2551:
  5803   000864  EF38  F004         	goto	l3273
  5804   000868                     u2550:
  5805   000868  6C0D               	negf	___awdiv@quotient^0,c
  5806   00086A  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  5807   00086C  B0D8               	btfsc	status,0,c
  5808   00086E  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  5809   000870                     l3273:
  5810   000870  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  5811   000874  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  5812   000878  0012               	return		;funcret
  5813   00087A                     __end_of___awdiv:
  5814                           	callstack 0
  5815                           
  5816 ;; *************** function _SPI_Exchange8bit *****************
  5817 ;; Defined at:
  5818 ;;		line 77 in file "mcc_generated_files/spi.c"
  5819 ;; Parameters:    Size  Location     Type
  5820 ;;  data            1    wreg     unsigned char 
  5821 ;; Auto vars:     Size  Location     Type
  5822 ;;  data            1    6[COMRAM] unsigned char 
  5823 ;; Return value:  Size  Location     Type
  5824 ;;                  1    wreg      unsigned char 
  5825 ;; Registers used:
  5826 ;;		wreg, status,2
  5827 ;; Tracked objects:
  5828 ;;		On entry : 0/0
  5829 ;;		On exit  : 0/0
  5830 ;;		Unchanged: 0/0
  5831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5832 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5833 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5835 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5836 ;;Total ram usage:        1 bytes
  5837 ;; Hardware stack levels used: 1
  5838 ;; Hardware stack levels required when called: 5
  5839 ;; This function calls:
  5840 ;;		Nothing
  5841 ;; This function is called by:
  5842 ;;		_max_write
  5843 ;;		_max7219_cmd
  5844 ;;		_SPI_Exchange8bitBuffer
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text22
  5849   0011BE                     __ptext22:
  5850                           	callstack 0
  5851   0011BE                     _SPI_Exchange8bit:
  5852                           	callstack 20
  5853                           
  5854                           ;incstack = 0
  5855                           ;SPI_Exchange8bit@data stored from wreg
  5856   0011BE  6E07               	movwf	SPI_Exchange8bit@data^0,c
  5857   0011C0                     
  5858                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  5859   0011C0  9EC6               	bcf	198,7,c	;volatile
  5860   0011C2                     
  5861                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  5862   0011C2  C007  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  5863   0011C6                     l18:
  5864                           
  5865                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  5866   0011C6  A0C7               	btfss	199,0,c	;volatile
  5867   0011C8  EFE8  F008         	goto	u2491
  5868   0011CC  EFEA  F008         	goto	u2490
  5869   0011D0                     u2491:
  5870   0011D0  EFE3  F008         	goto	l18
  5871   0011D4                     u2490:
  5872   0011D4                     
  5873                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  5874   0011D4  50C9               	movf	201,w,c	;volatile
  5875   0011D6  0012               	return		;funcret
  5876   0011D8                     __end_of_SPI_Exchange8bit:
  5877                           	callstack 0
  5878                           
  5879 ;; *************** function ___awmod *****************
  5880 ;; Defined at:
  5881 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5882 ;; Parameters:    Size  Location     Type
  5883 ;;  dividend        2    6[COMRAM] int 
  5884 ;;  divisor         2    8[COMRAM] int 
  5885 ;; Auto vars:     Size  Location     Type
  5886 ;;  sign            1   11[COMRAM] unsigned char 
  5887 ;;  counter         1   10[COMRAM] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  2    6[COMRAM] int 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;Total ram usage:        6 bytes
  5902 ;; Hardware stack levels used: 1
  5903 ;; Hardware stack levels required when called: 5
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_displayTime
  5908 ;;		_displayAlarmTime
  5909 ;;		_checkButtons
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text23
  5914   000C16                     __ptext23:
  5915                           	callstack 0
  5916   000C16                     ___awmod:
  5917                           	callstack 24
  5918   000C16  0E00               	movlw	0
  5919   000C18  6E0C               	movwf	___awmod@sign^0,c
  5920   000C1A  BE08               	btfsc	(___awmod@dividend+1)^0,7,c
  5921   000C1C  EF14  F006         	goto	u2870
  5922   000C20  EF12  F006         	goto	u2871
  5923   000C24                     u2871:
  5924   000C24  EF1A  F006         	goto	l3555
  5925   000C28                     u2870:
  5926   000C28  6C07               	negf	___awmod@dividend^0,c
  5927   000C2A  1E08               	comf	(___awmod@dividend+1)^0,f,c
  5928   000C2C  B0D8               	btfsc	status,0,c
  5929   000C2E  2A08               	incf	(___awmod@dividend+1)^0,f,c
  5930   000C30  0E01               	movlw	1
  5931   000C32  6E0C               	movwf	___awmod@sign^0,c
  5932   000C34                     l3555:
  5933   000C34  BE0A               	btfsc	(___awmod@divisor+1)^0,7,c
  5934   000C36  EF21  F006         	goto	u2880
  5935   000C3A  EF1F  F006         	goto	u2881
  5936   000C3E                     u2881:
  5937   000C3E  EF25  F006         	goto	l3559
  5938   000C42                     u2880:
  5939   000C42  6C09               	negf	___awmod@divisor^0,c
  5940   000C44  1E0A               	comf	(___awmod@divisor+1)^0,f,c
  5941   000C46  B0D8               	btfsc	status,0,c
  5942   000C48  2A0A               	incf	(___awmod@divisor+1)^0,f,c
  5943   000C4A                     l3559:
  5944   000C4A  5009               	movf	___awmod@divisor^0,w,c
  5945   000C4C  100A               	iorwf	(___awmod@divisor+1)^0,w,c
  5946   000C4E  B4D8               	btfsc	status,2,c
  5947   000C50  EF2C  F006         	goto	u2891
  5948   000C54  EF2E  F006         	goto	u2890
  5949   000C58                     u2891:
  5950   000C58  EF52  F006         	goto	l3575
  5951   000C5C                     u2890:
  5952   000C5C  0E01               	movlw	1
  5953   000C5E  6E0B               	movwf	___awmod@counter^0,c
  5954   000C60  EF36  F006         	goto	l3565
  5955   000C64                     l3563:
  5956   000C64  90D8               	bcf	status,0,c
  5957   000C66  3609               	rlcf	___awmod@divisor^0,f,c
  5958   000C68  360A               	rlcf	(___awmod@divisor+1)^0,f,c
  5959   000C6A  2A0B               	incf	___awmod@counter^0,f,c
  5960   000C6C                     l3565:
  5961   000C6C  AE0A               	btfss	(___awmod@divisor+1)^0,7,c
  5962   000C6E  EF3B  F006         	goto	u2901
  5963   000C72  EF3D  F006         	goto	u2900
  5964   000C76                     u2901:
  5965   000C76  EF32  F006         	goto	l3563
  5966   000C7A                     u2900:
  5967   000C7A                     l3567:
  5968   000C7A  5009               	movf	___awmod@divisor^0,w,c
  5969   000C7C  5C07               	subwf	___awmod@dividend^0,w,c
  5970   000C7E  500A               	movf	(___awmod@divisor+1)^0,w,c
  5971   000C80  5808               	subwfb	(___awmod@dividend+1)^0,w,c
  5972   000C82  A0D8               	btfss	status,0,c
  5973   000C84  EF46  F006         	goto	u2911
  5974   000C88  EF48  F006         	goto	u2910
  5975   000C8C                     u2911:
  5976   000C8C  EF4C  F006         	goto	l3571
  5977   000C90                     u2910:
  5978   000C90  5009               	movf	___awmod@divisor^0,w,c
  5979   000C92  5E07               	subwf	___awmod@dividend^0,f,c
  5980   000C94  500A               	movf	(___awmod@divisor+1)^0,w,c
  5981   000C96  5A08               	subwfb	(___awmod@dividend+1)^0,f,c
  5982   000C98                     l3571:
  5983   000C98  90D8               	bcf	status,0,c
  5984   000C9A  320A               	rrcf	(___awmod@divisor+1)^0,f,c
  5985   000C9C  3209               	rrcf	___awmod@divisor^0,f,c
  5986   000C9E  2E0B               	decfsz	___awmod@counter^0,f,c
  5987   000CA0  EF3D  F006         	goto	l3567
  5988   000CA4                     l3575:
  5989   000CA4  500C               	movf	___awmod@sign^0,w,c
  5990   000CA6  B4D8               	btfsc	status,2,c
  5991   000CA8  EF58  F006         	goto	u2921
  5992   000CAC  EF5A  F006         	goto	u2920
  5993   000CB0                     u2921:
  5994   000CB0  EF5E  F006         	goto	l3579
  5995   000CB4                     u2920:
  5996   000CB4  6C07               	negf	___awmod@dividend^0,c
  5997   000CB6  1E08               	comf	(___awmod@dividend+1)^0,f,c
  5998   000CB8  B0D8               	btfsc	status,0,c
  5999   000CBA  2A08               	incf	(___awmod@dividend+1)^0,f,c
  6000   000CBC                     l3579:
  6001   000CBC  C007  F007         	movff	___awmod@dividend,?___awmod
  6002   000CC0  C008  F008         	movff	___awmod@dividend+1,?___awmod+1
  6003   000CC4  0012               	return		;funcret
  6004   000CC6                     __end_of___awmod:
  6005                           	callstack 0
  6006                           
  6007 ;; *************** function _clearAlarm *****************
  6008 ;; Defined at:
  6009 ;;		line 216 in file "main.c"
  6010 ;; Parameters:    Size  Location     Type
  6011 ;;		None
  6012 ;; Auto vars:     Size  Location     Type
  6013 ;;		None
  6014 ;; Return value:  Size  Location     Type
  6015 ;;                  1    wreg      void 
  6016 ;; Registers used:
  6017 ;;		wreg, status,2
  6018 ;; Tracked objects:
  6019 ;;		On entry : 0/0
  6020 ;;		On exit  : 0/0
  6021 ;;		Unchanged: 0/0
  6022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6024 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6026 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6027 ;;Total ram usage:        0 bytes
  6028 ;; Hardware stack levels used: 1
  6029 ;; Hardware stack levels required when called: 5
  6030 ;; This function calls:
  6031 ;;		Nothing
  6032 ;; This function is called by:
  6033 ;;		_triggerAlarm
  6034 ;;		_checkButtons
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           
  6038                           	psect	text24
  6039   001226                     __ptext24:
  6040                           	callstack 0
  6041   001226                     _clearAlarm:
  6042                           	callstack 23
  6043   001226                     
  6044                           ;main.c: 218:     alarmTriggered = 0;
  6045   001226  0E00               	movlw	0
  6046   001228  0100               	movlb	0	; () banked
  6047   00122A  6FA7               	movwf	_alarmTriggered& (0+255),b
  6048                           
  6049                           ;main.c: 219:     alarmSet = 0;
  6050   00122C  0E00               	movlw	0
  6051   00122E  6FA9               	movwf	_alarmSet& (0+255),b
  6052   001230                     
  6053                           ; BSR set to: 0
  6054   001230  0012               	return		;funcret
  6055   001232                     __end_of_clearAlarm:
  6056                           	callstack 0
  6057                           
  6058 ;; *************** function _TMR1_StartTimer *****************
  6059 ;; Defined at:
  6060 ;;		line 91 in file "mcc_generated_files/tmr1.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;		None
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		None
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6075 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6077 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6078 ;;Total ram usage:        0 bytes
  6079 ;; Hardware stack levels used: 1
  6080 ;; Hardware stack levels required when called: 5
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_main
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088                           	psect	text25
  6089   001260                     __ptext25:
  6090                           	callstack 0
  6091   001260                     _TMR1_StartTimer:
  6092                           	callstack 25
  6093   001260                     
  6094                           ;mcc_generated_files/tmr1.c: 94:     T1CONbits.TMR1ON = 1;
  6095   001260  80CD               	bsf	205,0,c	;volatile
  6096   001262  0012               	return		;funcret
  6097   001264                     __end_of_TMR1_StartTimer:
  6098                           	callstack 0
  6099                           
  6100 ;; *************** function _SYSTEM_Initialize *****************
  6101 ;; Defined at:
  6102 ;;		line 108 in file "mcc_generated_files/mcc.c"
  6103 ;; Parameters:    Size  Location     Type
  6104 ;;		None
  6105 ;; Auto vars:     Size  Location     Type
  6106 ;;		None
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  1    wreg      void 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0, cstack
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;Total ram usage:        0 bytes
  6121 ;; Hardware stack levels used: 1
  6122 ;; Hardware stack levels required when called: 7
  6123 ;; This function calls:
  6124 ;;		_EUSART_Initialize
  6125 ;;		_INTERRUPT_Initialize
  6126 ;;		_OSCILLATOR_Initialize
  6127 ;;		_PIN_MANAGER_Initialize
  6128 ;;		_SPI_Initialize
  6129 ;;		_TMR1_Initialize
  6130 ;; This function is called by:
  6131 ;;		_main
  6132 ;; This function uses a non-reentrant model
  6133 ;;
  6134                           
  6135                           	psect	text26
  6136   0011D8                     __ptext26:
  6137                           	callstack 0
  6138   0011D8                     _SYSTEM_Initialize:
  6139                           	callstack 23
  6140   0011D8                     
  6141                           ;mcc_generated_files/mcc.c: 110:     INTERRUPT_Initialize();
  6142   0011D8  EC32  F009         	call	_INTERRUPT_Initialize	;wreg free
  6143   0011DC                     
  6144                           ;mcc_generated_files/mcc.c: 111:     PIN_MANAGER_Initialize();
  6145   0011DC  ECCE  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  6146   0011E0                     
  6147                           ;mcc_generated_files/mcc.c: 112:     OSCILLATOR_Initialize();
  6148   0011E0  EC1E  F009         	call	_OSCILLATOR_Initialize	;wreg free
  6149   0011E4                     
  6150                           ;mcc_generated_files/mcc.c: 113:     SPI_Initialize();
  6151   0011E4  EC0C  F009         	call	_SPI_Initialize	;wreg free
  6152   0011E8                     
  6153                           ;mcc_generated_files/mcc.c: 114:     TMR1_Initialize();
  6154   0011E8  ECBB  F008         	call	_TMR1_Initialize	;wreg free
  6155   0011EC                     
  6156                           ;mcc_generated_files/mcc.c: 115:     EUSART_Initialize();
  6157   0011EC  ECB7  F007         	call	_EUSART_Initialize	;wreg free
  6158   0011F0  0012               	return		;funcret
  6159   0011F2                     __end_of_SYSTEM_Initialize:
  6160                           	callstack 0
  6161                           
  6162 ;; *************** function _TMR1_Initialize *****************
  6163 ;; Defined at:
  6164 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6165 ;; Parameters:    Size  Location     Type
  6166 ;;		None
  6167 ;; Auto vars:     Size  Location     Type
  6168 ;;		None
  6169 ;; Return value:  Size  Location     Type
  6170 ;;                  1    wreg      void 
  6171 ;; Registers used:
  6172 ;;		wreg, status,2, status,0, cstack
  6173 ;; Tracked objects:
  6174 ;;		On entry : 0/0
  6175 ;;		On exit  : 0/0
  6176 ;;		Unchanged: 0/0
  6177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6182 ;;Total ram usage:        0 bytes
  6183 ;; Hardware stack levels used: 1
  6184 ;; Hardware stack levels required when called: 6
  6185 ;; This function calls:
  6186 ;;		_TMR1_SetInterruptHandler
  6187 ;; This function is called by:
  6188 ;;		_SYSTEM_Initialize
  6189 ;; This function uses a non-reentrant model
  6190 ;;
  6191                           
  6192                           	psect	text27
  6193   001176                     __ptext27:
  6194                           	callstack 0
  6195   001176                     _TMR1_Initialize:
  6196                           	callstack 23
  6197   001176                     
  6198                           ;mcc_generated_files/tmr1.c: 70:   TMR1H = 0x80;
  6199   001176  0E80               	movlw	128
  6200   001178  6ECF               	movwf	207,c	;volatile
  6201                           
  6202                           ;mcc_generated_files/tmr1.c: 73:   TMR1L = 0x00;
  6203   00117A  0E00               	movlw	0
  6204   00117C  6ECE               	movwf	206,c	;volatile
  6205   00117E                     
  6206                           ;mcc_generated_files/tmr1.c: 76:     timer1ReloadVal=TMR1;
  6207   00117E  CFCE F0A0          	movff	4046,_timer1ReloadVal	;volatile
  6208   001182  CFCF F0A1          	movff	4047,_timer1ReloadVal+1	;volatile
  6209   001186                     
  6210                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  6211   001186  909E               	bcf	158,0,c	;volatile
  6212   001188                     
  6213                           ;mcc_generated_files/tmr1.c: 82:     PIE1bits.TMR1IE = 1;
  6214   001188  809D               	bsf	157,0,c	;volatile
  6215   00118A                     
  6216                           ;mcc_generated_files/tmr1.c: 85:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6217   00118A  0E5A               	movlw	low _TMR1_DefaultInterruptHandler
  6218   00118C  6E07               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  6219   00118E  0E12               	movlw	high _TMR1_DefaultInterruptHandler
  6220   001190  6E08               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  6221   001192  EC19  F009         	call	_TMR1_SetInterruptHandler	;wreg free
  6222   001196                     
  6223                           ;mcc_generated_files/tmr1.c: 88:     T1CON = 0x0B;
  6224   001196  0E0B               	movlw	11
  6225   001198  6ECD               	movwf	205,c	;volatile
  6226   00119A  0012               	return		;funcret
  6227   00119C                     __end_of_TMR1_Initialize:
  6228                           	callstack 0
  6229                           
  6230 ;; *************** function _TMR1_SetInterruptHandler *****************
  6231 ;; Defined at:
  6232 ;;		line 168 in file "mcc_generated_files/tmr1.c"
  6233 ;; Parameters:    Size  Location     Type
  6234 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  6235 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  6236 ;; Auto vars:     Size  Location     Type
  6237 ;;		None
  6238 ;; Return value:  Size  Location     Type
  6239 ;;                  1    wreg      void 
  6240 ;; Registers used:
  6241 ;;		wreg, status,2, status,0
  6242 ;; Tracked objects:
  6243 ;;		On entry : 0/0
  6244 ;;		On exit  : 0/0
  6245 ;;		Unchanged: 0/0
  6246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6247 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6248 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6250 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6251 ;;Total ram usage:        2 bytes
  6252 ;; Hardware stack levels used: 1
  6253 ;; Hardware stack levels required when called: 5
  6254 ;; This function calls:
  6255 ;;		Nothing
  6256 ;; This function is called by:
  6257 ;;		_TMR1_Initialize
  6258 ;; This function uses a non-reentrant model
  6259 ;;
  6260                           
  6261                           	psect	text28
  6262   001232                     __ptext28:
  6263                           	callstack 0
  6264   001232                     _TMR1_SetInterruptHandler:
  6265                           	callstack 23
  6266   001232                     
  6267                           ;mcc_generated_files/tmr1.c: 169:     TMR1_InterruptHandler = InterruptHandler;
  6268   001232  C007  F0F7         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  6269   001236  C008  F0F8         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  6270   00123A  0012               	return		;funcret
  6271   00123C                     __end_of_TMR1_SetInterruptHandler:
  6272                           	callstack 0
  6273                           
  6274 ;; *************** function _SPI_Initialize *****************
  6275 ;; Defined at:
  6276 ;;		line 63 in file "mcc_generated_files/spi.c"
  6277 ;; Parameters:    Size  Location     Type
  6278 ;;		None
  6279 ;; Auto vars:     Size  Location     Type
  6280 ;;		None
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  1    wreg      void 
  6283 ;; Registers used:
  6284 ;;		wreg, status,2
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6293 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6294 ;;Total ram usage:        0 bytes
  6295 ;; Hardware stack levels used: 1
  6296 ;; Hardware stack levels required when called: 5
  6297 ;; This function calls:
  6298 ;;		Nothing
  6299 ;; This function is called by:
  6300 ;;		_SYSTEM_Initialize
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text29
  6305   001218                     __ptext29:
  6306                           	callstack 0
  6307   001218                     _SPI_Initialize:
  6308                           	callstack 24
  6309   001218                     
  6310                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  6311   001218  0EC0               	movlw	192
  6312   00121A  6EC7               	movwf	199,c	;volatile
  6313                           
  6314                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  6315   00121C  0E30               	movlw	48
  6316   00121E  6EC6               	movwf	198,c	;volatile
  6317                           
  6318                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  6319   001220  0E00               	movlw	0
  6320   001222  6EC8               	movwf	200,c	;volatile
  6321   001224  0012               	return		;funcret
  6322   001226                     __end_of_SPI_Initialize:
  6323                           	callstack 0
  6324                           
  6325 ;; *************** function _PIN_MANAGER_Initialize *****************
  6326 ;; Defined at:
  6327 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6328 ;; Parameters:    Size  Location     Type
  6329 ;;		None
  6330 ;; Auto vars:     Size  Location     Type
  6331 ;;		None
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  1    wreg      void 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6341 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;Total ram usage:        0 bytes
  6346 ;; Hardware stack levels used: 1
  6347 ;; Hardware stack levels required when called: 5
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		_SYSTEM_Initialize
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text30
  6356   00119C                     __ptext30:
  6357                           	callstack 0
  6358   00119C                     _PIN_MANAGER_Initialize:
  6359                           	callstack 24
  6360   00119C                     
  6361                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  6362   00119C  0E00               	movlw	0
  6363   00119E  6E89               	movwf	137,c	;volatile
  6364                           
  6365                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  6366   0011A0  0E00               	movlw	0
  6367   0011A2  6E8A               	movwf	138,c	;volatile
  6368                           
  6369                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  6370   0011A4  0E2C               	movlw	44
  6371   0011A6  6E8B               	movwf	139,c	;volatile
  6372   0011A8                     
  6373                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  6374   0011A8  6892               	setf	146,c	;volatile
  6375   0011AA                     
  6376                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  6377   0011AA  6893               	setf	147,c	;volatile
  6378                           
  6379                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x93;
  6380   0011AC  0E93               	movlw	147
  6381   0011AE  6E94               	movwf	148,c	;volatile
  6382                           
  6383                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  6384   0011B0  0E0A               	movlw	10
  6385   0011B2  6E7F               	movwf	127,c	;volatile
  6386                           
  6387                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  6388   0011B4  0E1F               	movlw	31
  6389   0011B6  6E7E               	movwf	126,c	;volatile
  6390   0011B8                     
  6391                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  6392   0011B8  687C               	setf	124,c	;volatile
  6393   0011BA                     
  6394                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  6395   0011BA  9EF1               	bcf	241,7,c	;volatile
  6396   0011BC  0012               	return		;funcret
  6397   0011BE                     __end_of_PIN_MANAGER_Initialize:
  6398                           	callstack 0
  6399                           
  6400 ;; *************** function _OSCILLATOR_Initialize *****************
  6401 ;; Defined at:
  6402 ;;		line 118 in file "mcc_generated_files/mcc.c"
  6403 ;; Parameters:    Size  Location     Type
  6404 ;;		None
  6405 ;; Auto vars:     Size  Location     Type
  6406 ;;		None
  6407 ;; Return value:  Size  Location     Type
  6408 ;;                  1    wreg      void 
  6409 ;; Registers used:
  6410 ;;		wreg, status,2
  6411 ;; Tracked objects:
  6412 ;;		On entry : 0/0
  6413 ;;		On exit  : 0/0
  6414 ;;		Unchanged: 0/0
  6415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6417 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6418 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6419 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6420 ;;Total ram usage:        0 bytes
  6421 ;; Hardware stack levels used: 1
  6422 ;; Hardware stack levels required when called: 5
  6423 ;; This function calls:
  6424 ;;		Nothing
  6425 ;; This function is called by:
  6426 ;;		_SYSTEM_Initialize
  6427 ;; This function uses a non-reentrant model
  6428 ;;
  6429                           
  6430                           	psect	text31
  6431   00123C                     __ptext31:
  6432                           	callstack 0
  6433   00123C                     _OSCILLATOR_Initialize:
  6434                           	callstack 24
  6435   00123C                     
  6436                           ;mcc_generated_files/mcc.c: 121:     OSCCON = 0x6A;
  6437   00123C  0E6A               	movlw	106
  6438   00123E  6ED3               	movwf	211,c	;volatile
  6439                           
  6440                           ;mcc_generated_files/mcc.c: 123:     OSCTUNE = 0x00;
  6441   001240  0E00               	movlw	0
  6442   001242  6E9B               	movwf	155,c	;volatile
  6443   001244  0012               	return		;funcret
  6444   001246                     __end_of_OSCILLATOR_Initialize:
  6445                           	callstack 0
  6446                           
  6447 ;; *************** function _INTERRUPT_Initialize *****************
  6448 ;; Defined at:
  6449 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6450 ;; Parameters:    Size  Location     Type
  6451 ;;		None
  6452 ;; Auto vars:     Size  Location     Type
  6453 ;;		None
  6454 ;; Return value:  Size  Location     Type
  6455 ;;                  1    wreg      void 
  6456 ;; Registers used:
  6457 ;;		None
  6458 ;; Tracked objects:
  6459 ;;		On entry : 0/0
  6460 ;;		On exit  : 0/0
  6461 ;;		Unchanged: 0/0
  6462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6463 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6464 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6465 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6466 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6467 ;;Total ram usage:        0 bytes
  6468 ;; Hardware stack levels used: 1
  6469 ;; Hardware stack levels required when called: 5
  6470 ;; This function calls:
  6471 ;;		Nothing
  6472 ;; This function is called by:
  6473 ;;		_SYSTEM_Initialize
  6474 ;; This function uses a non-reentrant model
  6475 ;;
  6476                           
  6477                           	psect	text32
  6478   001264                     __ptext32:
  6479                           	callstack 0
  6480   001264                     _INTERRUPT_Initialize:
  6481                           	callstack 24
  6482   001264                     
  6483                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6484   001264  9ED0               	bcf	208,7,c	;volatile
  6485   001266  0012               	return		;funcret
  6486   001268                     __end_of_INTERRUPT_Initialize:
  6487                           	callstack 0
  6488                           
  6489 ;; *************** function _EUSART_Initialize *****************
  6490 ;; Defined at:
  6491 ;;		line 75 in file "mcc_generated_files/eusart.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;		None
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  1    wreg      void 
  6498 ;; Registers used:
  6499 ;;		wreg, status,2, status,0, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6505 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;Total ram usage:        0 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 6
  6512 ;; This function calls:
  6513 ;;		_EUSART_SetRxInterruptHandler
  6514 ;;		_EUSART_SetTxInterruptHandler
  6515 ;; This function is called by:
  6516 ;;		_SYSTEM_Initialize
  6517 ;; This function uses a non-reentrant model
  6518 ;;
  6519                           
  6520                           	psect	text33
  6521   000F6E                     __ptext33:
  6522                           	callstack 0
  6523   000F6E                     _EUSART_Initialize:
  6524                           	callstack 23
  6525   000F6E                     
  6526                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RC1IE = 0;
  6527   000F6E  9A9D               	bcf	157,5,c	;volatile
  6528                           
  6529                           ;mcc_generated_files/eusart.c: 79:     PIE1bits.TX1IE = 0;
  6530   000F70  989D               	bcf	157,4,c	;volatile
  6531   000F72                     
  6532                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6533   000F72  0E00               	movlw	0
  6534   000F74  6E07               	movwf	EUSART_SetTxInterruptHandler@handler^0,c
  6535   000F76  0E00               	movlw	0
  6536   000F78  6E08               	movwf	(EUSART_SetTxInterruptHandler@handler+1)^0,c
  6537   000F7A  EC23  F009         	call	_EUSART_SetTxInterruptHandler	;wreg free
  6538                           
  6539                           ;mcc_generated_files/eusart.c: 82:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6540   000F7E  0E00               	movlw	0
  6541   000F80  6E07               	movwf	EUSART_SetRxInterruptHandler@handler^0,c
  6542   000F82  0E00               	movlw	0
  6543   000F84  6E08               	movwf	(EUSART_SetRxInterruptHandler@handler+1)^0,c
  6544   000F86  EC28  F009         	call	_EUSART_SetRxInterruptHandler	;wreg free
  6545   000F8A                     
  6546                           ;mcc_generated_files/eusart.c: 87:     BAUDCON = 0x08;
  6547   000F8A  0E08               	movlw	8
  6548   000F8C  6EB8               	movwf	184,c	;volatile
  6549   000F8E                     
  6550                           ;mcc_generated_files/eusart.c: 90:     RCSTA = 0x90;
  6551   000F8E  0E90               	movlw	144
  6552   000F90  6EAB               	movwf	171,c	;volatile
  6553   000F92                     
  6554                           ;mcc_generated_files/eusart.c: 93:     TXSTA = 0x24;
  6555   000F92  0E24               	movlw	36
  6556   000F94  6EAC               	movwf	172,c	;volatile
  6557   000F96                     
  6558                           ;mcc_generated_files/eusart.c: 96:     SPBRG = 0xCF;
  6559   000F96  0ECF               	movlw	207
  6560   000F98  6EAF               	movwf	175,c	;volatile
  6561   000F9A                     
  6562                           ;mcc_generated_files/eusart.c: 99:     SPBRGH = 0x00;
  6563   000F9A  0E00               	movlw	0
  6564   000F9C  6EB0               	movwf	176,c	;volatile
  6565   000F9E                     
  6566                           ;mcc_generated_files/eusart.c: 103:     eusartTxHead = 0;
  6567   000F9E  0E00               	movlw	0
  6568   000FA0  6E58               	movwf	_eusartTxHead^0,c	;volatile
  6569   000FA2                     
  6570                           ;mcc_generated_files/eusart.c: 104:     eusartTxTail = 0;
  6571   000FA2  0E00               	movlw	0
  6572   000FA4  6E57               	movwf	_eusartTxTail^0,c	;volatile
  6573   000FA6                     
  6574                           ;mcc_generated_files/eusart.c: 105:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6575   000FA6  0E08               	movlw	8
  6576   000FA8  6E56               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  6577   000FAA                     
  6578                           ;mcc_generated_files/eusart.c: 107:     eusartRxHead = 0;
  6579   000FAA  0E00               	movlw	0
  6580   000FAC  6E55               	movwf	_eusartRxHead^0,c	;volatile
  6581   000FAE                     
  6582                           ;mcc_generated_files/eusart.c: 108:     eusartRxTail = 0;
  6583   000FAE  0E00               	movlw	0
  6584   000FB0  6E54               	movwf	_eusartRxTail^0,c	;volatile
  6585   000FB2                     
  6586                           ;mcc_generated_files/eusart.c: 109:     eusartRxCount = 0;
  6587   000FB2  0E00               	movlw	0
  6588   000FB4  0100               	movlb	0	; () banked
  6589   000FB6  6FAF               	movwf	_eusartRxCount& (0+255),b	;volatile
  6590   000FB8                     
  6591                           ; BSR set to: 0
  6592                           ;mcc_generated_files/eusart.c: 112:     PIE1bits.RC1IE = 1;
  6593   000FB8  8A9D               	bsf	157,5,c	;volatile
  6594   000FBA                     
  6595                           ; BSR set to: 0
  6596   000FBA  0012               	return		;funcret
  6597   000FBC                     __end_of_EUSART_Initialize:
  6598                           	callstack 0
  6599                           
  6600 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6601 ;; Defined at:
  6602 ;;		line 212 in file "mcc_generated_files/eusart.c"
  6603 ;; Parameters:    Size  Location     Type
  6604 ;;  handler         2    6[COMRAM] PTR void 
  6605 ;; Auto vars:     Size  Location     Type
  6606 ;;		None
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      void 
  6609 ;; Registers used:
  6610 ;;		wreg, status,2, status,0
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6616 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6620 ;;Total ram usage:        2 bytes
  6621 ;; Hardware stack levels used: 1
  6622 ;; Hardware stack levels required when called: 5
  6623 ;; This function calls:
  6624 ;;		Nothing
  6625 ;; This function is called by:
  6626 ;;		_EUSART_Initialize
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           
  6630                           	psect	text34
  6631   001246                     __ptext34:
  6632                           	callstack 0
  6633   001246                     _EUSART_SetTxInterruptHandler:
  6634                           	callstack 23
  6635   001246                     
  6636                           ;mcc_generated_files/eusart.c: 213:     EUSART_TxDefaultInterruptHandler = handler;
  6637   001246  C007  F0FB         	movff	EUSART_SetTxInterruptHandler@handler,_EUSART_TxDefaultInterruptHandler
  6638   00124A  C008  F0FC         	movff	EUSART_SetTxInterruptHandler@handler+1,_EUSART_TxDefaultInterruptHandler+1
  6639   00124E  0012               	return		;funcret
  6640   001250                     __end_of_EUSART_SetTxInterruptHandler:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6644 ;; Defined at:
  6645 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  handler         2    6[COMRAM] PTR void 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;		None
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  1    wreg      void 
  6652 ;; Registers used:
  6653 ;;		wreg, status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6662 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6663 ;;Total ram usage:        2 bytes
  6664 ;; Hardware stack levels used: 1
  6665 ;; Hardware stack levels required when called: 5
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_EUSART_Initialize
  6670 ;; This function uses a non-reentrant model
  6671 ;;
  6672                           
  6673                           	psect	text35
  6674   001250                     __ptext35:
  6675                           	callstack 0
  6676   001250                     _EUSART_SetRxInterruptHandler:
  6677                           	callstack 23
  6678   001250                     
  6679                           ;mcc_generated_files/eusart.c: 217:     EUSART_RxDefaultInterruptHandler = handler;
  6680   001250  C007  F0F9         	movff	EUSART_SetRxInterruptHandler@handler,_EUSART_RxDefaultInterruptHandler
  6681   001254  C008  F0FA         	movff	EUSART_SetRxInterruptHandler@handler+1,_EUSART_RxDefaultInterruptHandler+1
  6682   001258  0012               	return		;funcret
  6683   00125A                     __end_of_EUSART_SetRxInterruptHandler:
  6684                           	callstack 0
  6685                           
  6686 ;; *************** function _INTERRUPT_InterruptManager *****************
  6687 ;; Defined at:
  6688 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;		None
  6691 ;; Auto vars:     Size  Location     Type
  6692 ;;		None
  6693 ;; Return value:  Size  Location     Type
  6694 ;;                  1    wreg      void 
  6695 ;; Registers used:
  6696 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6697 ;; Tracked objects:
  6698 ;;		On entry : 0/0
  6699 ;;		On exit  : 0/0
  6700 ;;		Unchanged: 0/0
  6701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6702 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6703 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6704 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6705 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6706 ;;Total ram usage:        4 bytes
  6707 ;; Hardware stack levels used: 1
  6708 ;; Hardware stack levels required when called: 4
  6709 ;; This function calls:
  6710 ;;		_TMR1_ISR
  6711 ;;		_btGetData
  6712 ;; This function is called by:
  6713 ;;		Interrupt level 2
  6714 ;; This function uses a non-reentrant model
  6715 ;;
  6716                           
  6717                           	psect	intcode
  6718   000008                     __pintcode:
  6719                           	callstack 0
  6720   000008                     _INTERRUPT_InterruptManager:
  6721                           	callstack 20
  6722                           
  6723                           ;incstack = 0
  6724   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6725   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  6726   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6727   000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6728   000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6729   00001A                     
  6730                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6731   00001A  ACF2               	btfss	242,6,c	;volatile
  6732   00001C  EF12  F000         	goto	i2u235_41
  6733   000020  EF14  F000         	goto	i2u235_40
  6734   000024                     i2u235_41:
  6735   000024  EF4B  F000         	goto	i2l288
  6736   000028                     i2u235_40:
  6737   000028                     
  6738                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6739   000028  A09D               	btfss	157,0,c	;volatile
  6740   00002A  EF19  F000         	goto	i2u236_41
  6741   00002E  EF1B  F000         	goto	i2u236_40
  6742   000032                     i2u236_41:
  6743   000032  EF26  F000         	goto	i2l282
  6744   000036                     i2u236_40:
  6745   000036  A09E               	btfss	158,0,c	;volatile
  6746   000038  EF20  F000         	goto	i2u237_41
  6747   00003C  EF22  F000         	goto	i2u237_40
  6748   000040                     i2u237_41:
  6749   000040  EF26  F000         	goto	i2l282
  6750   000044                     i2u237_40:
  6751   000044                     
  6752                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  6753   000044  ECF9  F008         	call	_TMR1_ISR	;wreg free
  6754                           
  6755                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6756   000048  EF4B  F000         	goto	i2l288
  6757   00004C                     i2l282:
  6758   00004C  A89D               	btfss	157,4,c	;volatile
  6759   00004E  EF2B  F000         	goto	i2u238_41
  6760   000052  EF2D  F000         	goto	i2u238_40
  6761   000056                     i2u238_41:
  6762   000056  EF37  F000         	goto	i2l284
  6763   00005A                     i2u238_40:
  6764   00005A                     
  6765                           ;mcc_generated_files/interrupt_manager.c: 69:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_TxDefaultInterruptHandler();
  6766   00005A  A89E               	btfss	158,4,c	;volatile
  6767   00005C  EF32  F000         	goto	i2u239_41
  6768   000060  EF34  F000         	goto	i2u239_40
  6769   000064                     i2u239_41:
  6770   000064  EF37  F000         	goto	i2l284
  6771   000068                     i2u239_40:
  6772   000068                     
  6773                           ;mcc_generated_files/interrupt_manager.c: 74:             PIR1bits.TX1IF = 0;
  6774   000068  989E               	bcf	158,4,c	;volatile
  6775                           
  6776                           ;mcc_generated_files/interrupt_manager.c: 75:         }
  6777   00006A  EF4B  F000         	goto	i2l288
  6778   00006E                     i2l284:
  6779   00006E  AA9D               	btfss	157,5,c	;volatile
  6780   000070  EF3C  F000         	goto	i2u240_41
  6781   000074  EF3E  F000         	goto	i2u240_40
  6782   000078                     i2u240_41:
  6783   000078  EF4B  F000         	goto	i2l283
  6784   00007C                     i2u240_40:
  6785   00007C  AA9E               	btfss	158,5,c	;volatile
  6786   00007E  EF43  F000         	goto	i2u241_41
  6787   000082  EF45  F000         	goto	i2u241_40
  6788   000086                     i2u241_41:
  6789   000086  EF4B  F000         	goto	i2l283
  6790   00008A                     i2u241_40:
  6791   00008A                     
  6792                           ;mcc_generated_files/interrupt_manager.c: 79:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             btGetData(RCREG);
  6793   00008A  50AE               	movf	174,w,c	;volatile
  6794   00008C  EC63  F006         	call	_btGetData
  6795   000090                     
  6796                           ;mcc_generated_files/interrupt_manager.c: 84:             PIR1bits.RC1IF = 0;
  6797   000090  9A9E               	bcf	158,5,c	;volatile
  6798   000092  EF4B  F000         	goto	i2l288
  6799   000096                     i2l283:
  6800   000096                     i2l288:
  6801   000096  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6802   00009A  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6803   00009E  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6804   0000A2  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6805   0000A6  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6806   0000A8  0011               	retfie		f
  6807   0000AA                     __end_of_INTERRUPT_InterruptManager:
  6808                           	callstack 0
  6809                           
  6810 ;; *************** function _btGetData *****************
  6811 ;; Defined at:
  6812 ;;		line 363 in file "main.c"
  6813 ;; Parameters:    Size  Location     Type
  6814 ;;  rcv             1    wreg     unsigned char 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  rcv             1    0[COMRAM] unsigned char 
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6826 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6827 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6829 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6830 ;;Total ram usage:        1 bytes
  6831 ;; Hardware stack levels used: 1
  6832 ;; This function calls:
  6833 ;;		Nothing
  6834 ;; This function is called by:
  6835 ;;		_INTERRUPT_InterruptManager
  6836 ;; This function uses a non-reentrant model
  6837 ;;
  6838                           
  6839                           	psect	text37
  6840   000CC6                     __ptext37:
  6841                           	callstack 0
  6842   000CC6                     _btGetData:
  6843                           	callstack 23
  6844                           
  6845                           ;incstack = 0
  6846                           ;btGetData@rcv stored from wreg
  6847   000CC6  6E01               	movwf	btGetData@rcv^0,c
  6848   000CC8                     
  6849                           ;main.c: 364:     if(rcv == 'H' && uartBufferIndex == 0) {
  6850   000CC8  0E48               	movlw	72
  6851   000CCA  1801               	xorwf	btGetData@rcv^0,w,c
  6852   000CCC  A4D8               	btfss	status,2,c
  6853   000CCE  EF6B  F006         	goto	i2u185_41
  6854   000CD2  EF6D  F006         	goto	i2u185_40
  6855   000CD6                     i2u185_41:
  6856   000CD6  EF7E  F006         	goto	i2l2879
  6857   000CDA                     i2u185_40:
  6858   000CDA  5053               	movf	_uartBufferIndex^0,w,c
  6859   000CDC  A4D8               	btfss	status,2,c
  6860   000CDE  EF73  F006         	goto	i2u186_41
  6861   000CE2  EF75  F006         	goto	i2u186_40
  6862   000CE6                     i2u186_41:
  6863   000CE6  EF7E  F006         	goto	i2l2879
  6864   000CEA                     i2u186_40:
  6865   000CEA                     
  6866                           ;main.c: 365:         uartBuffer[uartBufferIndex] = 'H';
  6867   000CEA  5053               	movf	_uartBufferIndex^0,w,c
  6868   000CEC  0F80               	addlw	low _uartBuffer
  6869   000CEE  6ED9               	movwf	fsr2l,c
  6870   000CF0  6ADA               	clrf	fsr2h,c
  6871   000CF2  0E48               	movlw	72
  6872   000CF4  6EDF               	movwf	indf2,c
  6873   000CF6                     i2l2877:
  6874                           
  6875                           ;main.c: 366:         uartBufferIndex++;
  6876   000CF6  2A53               	incf	_uartBufferIndex^0,f,c
  6877                           
  6878                           ;main.c: 367:     }
  6879   000CF8  EFB1  F006         	goto	i2l529
  6880   000CFC                     i2l2879:
  6881   000CFC  5053               	movf	_uartBufferIndex^0,w,c
  6882   000CFE  B4D8               	btfsc	status,2,c
  6883   000D00  EF84  F006         	goto	i2u187_41
  6884   000D04  EF86  F006         	goto	i2u187_40
  6885   000D08                     i2u187_41:
  6886   000D08  EF96  F006         	goto	i2l2887
  6887   000D0C                     i2u187_40:
  6888   000D0C  0E07               	movlw	7
  6889   000D0E  6053               	cpfslt	_uartBufferIndex^0,c
  6890   000D10  EF8C  F006         	goto	i2u188_41
  6891   000D14  EF8E  F006         	goto	i2u188_40
  6892   000D18                     i2u188_41:
  6893   000D18  EF96  F006         	goto	i2l2887
  6894   000D1C                     i2u188_40:
  6895   000D1C                     
  6896                           ;main.c: 369:         uartBuffer[uartBufferIndex++] = rcv;
  6897   000D1C  5053               	movf	_uartBufferIndex^0,w,c
  6898   000D1E  0F80               	addlw	low _uartBuffer
  6899   000D20  6ED9               	movwf	fsr2l,c
  6900   000D22  6ADA               	clrf	fsr2h,c
  6901   000D24  C001  FFDF         	movff	btGetData@rcv,indf2
  6902   000D28  EF7B  F006         	goto	i2l2877
  6903   000D2C                     i2l2887:
  6904   000D2C  0E07               	movlw	7
  6905   000D2E  1853               	xorwf	_uartBufferIndex^0,w,c
  6906   000D30  A4D8               	btfss	status,2,c
  6907   000D32  EF9D  F006         	goto	i2u189_41
  6908   000D36  EF9F  F006         	goto	i2u189_40
  6909   000D3A                     i2u189_41:
  6910   000D3A  EFB1  F006         	goto	i2l529
  6911   000D3E                     i2u189_40:
  6912   000D3E                     
  6913                           ;main.c: 372:         if(rcv == ';') {
  6914   000D3E  0E3B               	movlw	59
  6915   000D40  1801               	xorwf	btGetData@rcv^0,w,c
  6916   000D42  A4D8               	btfss	status,2,c
  6917   000D44  EFA6  F006         	goto	i2u190_41
  6918   000D48  EFA8  F006         	goto	i2u190_40
  6919   000D4C                     i2u190_41:
  6920   000D4C  EFB1  F006         	goto	i2l526
  6921   000D50                     i2u190_40:
  6922   000D50                     
  6923                           ;main.c: 373:             uartBuffer[6] = ';';
  6924   000D50  0E3B               	movlw	59
  6925   000D52  0100               	movlb	0	; () banked
  6926   000D54  6F86               	movwf	(_uartBuffer+6)& (0+255),b
  6927                           
  6928                           ;main.c: 374:             uartBufferIndex = 0;
  6929   000D56  0E00               	movlw	0
  6930   000D58  6E53               	movwf	_uartBufferIndex^0,c
  6931                           
  6932                           ;main.c: 375:             btTimeSet = 1;
  6933   000D5A  0E01               	movlw	1
  6934   000D5C  6FA4               	movwf	_btTimeSet& (0+255),b
  6935   000D5E  EFB1  F006         	goto	i2l529
  6936   000D62                     i2l526:
  6937   000D62                     i2l529:
  6938   000D62  0012               	return		;funcret
  6939   000D64                     __end_of_btGetData:
  6940                           	callstack 0
  6941                           
  6942 ;; *************** function _TMR1_ISR *****************
  6943 ;; Defined at:
  6944 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;		None
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;		None
  6949 ;; Return value:  Size  Location     Type
  6950 ;;                  1    wreg      void 
  6951 ;; Registers used:
  6952 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6953 ;; Tracked objects:
  6954 ;;		On entry : 0/0
  6955 ;;		On exit  : 0/0
  6956 ;;		Unchanged: 0/0
  6957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6962 ;;Total ram usage:        0 bytes
  6963 ;; Hardware stack levels used: 1
  6964 ;; Hardware stack levels required when called: 3
  6965 ;; This function calls:
  6966 ;;		_TMR1_CallBack
  6967 ;;		_TMR1_WriteTimer
  6968 ;; This function is called by:
  6969 ;;		_INTERRUPT_InterruptManager
  6970 ;; This function uses a non-reentrant model
  6971 ;;
  6972                           
  6973                           	psect	text38
  6974   0011F2                     __ptext38:
  6975                           	callstack 0
  6976   0011F2                     _TMR1_ISR:
  6977                           	callstack 20
  6978   0011F2                     
  6979                           ;mcc_generated_files/tmr1.c: 150:     PIR1bits.TMR1IF = 0;
  6980   0011F2  909E               	bcf	158,0,c	;volatile
  6981   0011F4                     
  6982                           ;mcc_generated_files/tmr1.c: 151:     TMR1_WriteTimer(timer1ReloadVal);
  6983   0011F4  C0A0  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  6984   0011F8  C0A1  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  6985   0011FC  EC94  F008         	call	_TMR1_WriteTimer	;wreg free
  6986   001200                     
  6987                           ;mcc_generated_files/tmr1.c: 155:     TMR1_CallBack();
  6988   001200  EC68  F008         	call	_TMR1_CallBack	;wreg free
  6989   001204  0012               	return		;funcret
  6990   001206                     __end_of_TMR1_ISR:
  6991                           	callstack 0
  6992                           
  6993 ;; *************** function _TMR1_WriteTimer *****************
  6994 ;; Defined at:
  6995 ;;		line 119 in file "mcc_generated_files/tmr1.c"
  6996 ;; Parameters:    Size  Location     Type
  6997 ;;  timerVal        2    0[COMRAM] unsigned short 
  6998 ;; Auto vars:     Size  Location     Type
  6999 ;;		None
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  1    wreg      void 
  7002 ;; Registers used:
  7003 ;;		wreg, status,2
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7009 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7013 ;;Total ram usage:        2 bytes
  7014 ;; Hardware stack levels used: 1
  7015 ;; This function calls:
  7016 ;;		Nothing
  7017 ;; This function is called by:
  7018 ;;		_TMR1_ISR
  7019 ;;		_TMR1_Reload
  7020 ;; This function uses a non-reentrant model
  7021 ;;
  7022                           
  7023                           	psect	text39
  7024   001128                     __ptext39:
  7025                           	callstack 0
  7026   001128                     _TMR1_WriteTimer:
  7027                           	callstack 22
  7028   001128                     
  7029                           ;mcc_generated_files/tmr1.c: 119: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 120: {;mcc_generated_files/tmr1.c: 121:     if (T1CONbits.nT1SYNC == 1)
  7030   001128  A4CD               	btfss	205,2,c	;volatile
  7031   00112A  EF99  F008         	goto	i2u173_41
  7032   00112E  EF9B  F008         	goto	i2u173_40
  7033   001132                     i2u173_41:
  7034   001132  EFA3  F008         	goto	i2l2731
  7035   001136                     i2u173_40:
  7036   001136                     
  7037                           ;mcc_generated_files/tmr1.c: 122:     {;mcc_generated_files/tmr1.c: 124:         T1CONbi
      +                          ts.TMR1ON = 0;
  7038   001136  90CD               	bcf	205,0,c	;volatile
  7039   001138                     
  7040                           ;mcc_generated_files/tmr1.c: 127:         TMR1H = (uint8_t)(timerVal >> 8);
  7041   001138  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7042   00113A  6ECF               	movwf	207,c	;volatile
  7043   00113C                     
  7044                           ;mcc_generated_files/tmr1.c: 128:         TMR1L = (uint8_t)timerVal;
  7045   00113C  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7046   001140                     
  7047                           ;mcc_generated_files/tmr1.c: 131:         T1CONbits.TMR1ON =1;
  7048   001140  80CD               	bsf	205,0,c	;volatile
  7049                           
  7050                           ;mcc_generated_files/tmr1.c: 132:     }
  7051   001142  EFA7  F008         	goto	i2l335
  7052   001146                     i2l2731:
  7053                           
  7054                           ;mcc_generated_files/tmr1.c: 134:     {;mcc_generated_files/tmr1.c: 136:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  7055   001146  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7056   001148  6ECF               	movwf	207,c	;volatile
  7057   00114A                     
  7058                           ;mcc_generated_files/tmr1.c: 137:         TMR1L = (uint8_t)timerVal;
  7059   00114A  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7060   00114E                     i2l335:
  7061   00114E  0012               	return		;funcret
  7062   001150                     __end_of_TMR1_WriteTimer:
  7063                           	callstack 0
  7064                           
  7065 ;; *************** function _TMR1_CallBack *****************
  7066 ;; Defined at:
  7067 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  7068 ;; Parameters:    Size  Location     Type
  7069 ;;		None
  7070 ;; Auto vars:     Size  Location     Type
  7071 ;;		None
  7072 ;; Return value:  Size  Location     Type
  7073 ;;                  1    wreg      void 
  7074 ;; Registers used:
  7075 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7076 ;; Tracked objects:
  7077 ;;		On entry : 0/0
  7078 ;;		On exit  : 0/0
  7079 ;;		Unchanged: 0/0
  7080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7085 ;;Total ram usage:        0 bytes
  7086 ;; Hardware stack levels used: 1
  7087 ;; Hardware stack levels required when called: 2
  7088 ;; This function calls:
  7089 ;;		NULL
  7090 ;;		_TMR1_DefaultInterruptHandler
  7091 ;; This function is called by:
  7092 ;;		_TMR1_ISR
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text40
  7097   0010D0                     __ptext40:
  7098                           	callstack 0
  7099   0010D0                     _TMR1_CallBack:
  7100                           	callstack 20
  7101   0010D0                     
  7102                           ;mcc_generated_files/tmr1.c: 162:     if(TMR1_InterruptHandler)
  7103   0010D0  0100               	movlb	0	; () banked
  7104   0010D2  51F7               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7105   0010D4  11F8               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7106   0010D6  B4D8               	btfsc	status,2,c
  7107   0010D8  EF70  F008         	goto	i2u174_41
  7108   0010DC  EF72  F008         	goto	i2u174_40
  7109   0010E0                     i2u174_41:
  7110   0010E0  EF7E  F008         	goto	i2l345
  7111   0010E4                     i2u174_40:
  7112   0010E4                     
  7113                           ; BSR set to: 0
  7114                           ;mcc_generated_files/tmr1.c: 163:     {;mcc_generated_files/tmr1.c: 164:         TMR1_In
      +                          terruptHandler();
  7115   0010E4  D802               	call	i2u175_48
  7116   0010E6  EF7E  F008         	goto	i2u175_49
  7117   0010EA                     i2u175_48:
  7118   0010EA  0005               	push	
  7119   0010EC  6EFA               	movwf	pclath,c
  7120   0010EE  51F7               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7121   0010F0  6EFD               	movwf	tosl,c
  7122   0010F2  51F8               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7123   0010F4  6EFE               	movwf	tosh,c
  7124   0010F6  6AFF               	clrf	tosu,c
  7125   0010F8  50FA               	movf	pclath,w,c
  7126   0010FA  0012               	return		;indir
  7127   0010FC                     i2u175_49:
  7128   0010FC                     i2l345:
  7129   0010FC  0012               	return		;funcret
  7130   0010FE                     __end_of_TMR1_CallBack:
  7131                           	callstack 0
  7132                           
  7133 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7134 ;; Defined at:
  7135 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;		None
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;		None
  7140 ;; Return value:  Size  Location     Type
  7141 ;;                  1    wreg      void 
  7142 ;; Registers used:
  7143 ;;		wreg, status,2, status,0, cstack
  7144 ;; Tracked objects:
  7145 ;;		On entry : 0/0
  7146 ;;		On exit  : 0/0
  7147 ;;		Unchanged: 0/0
  7148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7153 ;;Total ram usage:        0 bytes
  7154 ;; Hardware stack levels used: 1
  7155 ;; Hardware stack levels required when called: 1
  7156 ;; This function calls:
  7157 ;;		_calculateTime
  7158 ;; This function is called by:
  7159 ;;		_TMR1_Initialize
  7160 ;;		_TMR1_CallBack
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           	psect	text41
  7165   00125A                     __ptext41:
  7166                           	callstack 0
  7167   00125A                     _TMR1_DefaultInterruptHandler:
  7168                           	callstack 20
  7169   00125A                     
  7170                           ;mcc_generated_files/tmr1.c: 175:     calculateTime();
  7171   00125A  ECDE  F007         	call	_calculateTime	;wreg free
  7172   00125E  0012               	return		;funcret
  7173   001260                     __end_of_TMR1_DefaultInterruptHandler:
  7174                           	callstack 0
  7175                           
  7176 ;; *************** function _calculateTime *****************
  7177 ;; Defined at:
  7178 ;;		line 130 in file "main.c"
  7179 ;; Parameters:    Size  Location     Type
  7180 ;;		None
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;		None
  7183 ;; Return value:  Size  Location     Type
  7184 ;;                  1    wreg      void 
  7185 ;; Registers used:
  7186 ;;		wreg, status,2, status,0
  7187 ;; Tracked objects:
  7188 ;;		On entry : 0/0
  7189 ;;		On exit  : 0/0
  7190 ;;		Unchanged: 0/0
  7191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7192 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7193 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7194 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7195 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7196 ;;Total ram usage:        0 bytes
  7197 ;; Hardware stack levels used: 1
  7198 ;; This function calls:
  7199 ;;		Nothing
  7200 ;; This function is called by:
  7201 ;;		_TMR1_DefaultInterruptHandler
  7202 ;; This function uses a non-reentrant model
  7203 ;;
  7204                           
  7205                           	psect	text42
  7206   000FBC                     __ptext42:
  7207                           	callstack 0
  7208   000FBC                     _calculateTime:
  7209                           	callstack 20
  7210   000FBC                     
  7211                           ;main.c: 132:     if (++seconds >= 60) {
  7212   000FBC  0100               	movlb	0	; () banked
  7213   000FBE  2BAC               	incf	_seconds& (0+255),f,b
  7214   000FC0  0E3B               	movlw	59
  7215   000FC2  65AC               	cpfsgt	_seconds& (0+255),b
  7216   000FC4  EFE6  F007         	goto	i2u136_41
  7217   000FC8  EFE8  F007         	goto	i2u136_40
  7218   000FCC                     i2u136_41:
  7219   000FCC  EF00  F008         	goto	i2l459
  7220   000FD0                     i2u136_40:
  7221   000FD0                     
  7222                           ; BSR set to: 0
  7223                           ;main.c: 133:         seconds = 0;
  7224   000FD0  0E00               	movlw	0
  7225   000FD2  6FAC               	movwf	_seconds& (0+255),b
  7226   000FD4                     
  7227                           ; BSR set to: 0
  7228                           ;main.c: 135:         if (++minutes >= 60) {
  7229   000FD4  2BAD               	incf	_minutes& (0+255),f,b
  7230   000FD6  0E3B               	movlw	59
  7231   000FD8  65AD               	cpfsgt	_minutes& (0+255),b
  7232   000FDA  EFF1  F007         	goto	i2u137_41
  7233   000FDE  EFF3  F007         	goto	i2u137_40
  7234   000FE2                     i2u137_41:
  7235   000FE2  EF00  F008         	goto	i2l459
  7236   000FE6                     i2u137_40:
  7237   000FE6                     
  7238                           ; BSR set to: 0
  7239                           ;main.c: 136:             minutes = 0;
  7240   000FE6  0E00               	movlw	0
  7241   000FE8  6FAD               	movwf	_minutes& (0+255),b
  7242   000FEA                     
  7243                           ; BSR set to: 0
  7244                           ;main.c: 138:             if (++hours >= 24) {
  7245   000FEA  2BAE               	incf	_hours& (0+255),f,b
  7246   000FEC  0E17               	movlw	23
  7247   000FEE  65AE               	cpfsgt	_hours& (0+255),b
  7248   000FF0  EFFC  F007         	goto	i2u138_41
  7249   000FF4  EFFE  F007         	goto	i2u138_40
  7250   000FF8                     i2u138_41:
  7251   000FF8  EF00  F008         	goto	i2l459
  7252   000FFC                     i2u138_40:
  7253   000FFC                     
  7254                           ; BSR set to: 0
  7255                           ;main.c: 139:                 hours = 0;
  7256   000FFC  0E00               	movlw	0
  7257   000FFE  6FAE               	movwf	_hours& (0+255),b
  7258   001000                     i2l459:
  7259                           
  7260                           ; BSR set to: 0
  7261   001000  0012               	return		;funcret
  7262   001002                     __end_of_calculateTime:
  7263                           	callstack 0
  7264                           
  7265                           	psect	rparam
  7266   000000                     
  7267                           	psect	temp
  7268   000059                     btemp:
  7269                           	callstack 0
  7270   000059                     	ds	1
  7271   000000                     int$flags	set	btemp
  7272   000000                     wtemp8	set	btemp+1
  7273   000000                     ttemp5	set	btemp+1
  7274   000000                     ttemp6	set	btemp+4
  7275   000000                     ttemp7	set	btemp+8
  7276                           
  7277                           	psect	idloc
  7278                           
  7279                           ;Config register IDLOC0 @ 0x200000
  7280                           ;	unspecified, using default values
  7281   200000                     	org	2097152
  7282   200000  FF                 	db	255
  7283                           
  7284                           ;Config register IDLOC1 @ 0x200001
  7285                           ;	unspecified, using default values
  7286   200001                     	org	2097153
  7287   200001  FF                 	db	255
  7288                           
  7289                           ;Config register IDLOC2 @ 0x200002
  7290                           ;	unspecified, using default values
  7291   200002                     	org	2097154
  7292   200002  FF                 	db	255
  7293                           
  7294                           ;Config register IDLOC3 @ 0x200003
  7295                           ;	unspecified, using default values
  7296   200003                     	org	2097155
  7297   200003  FF                 	db	255
  7298                           
  7299                           ;Config register IDLOC4 @ 0x200004
  7300                           ;	unspecified, using default values
  7301   200004                     	org	2097156
  7302   200004  FF                 	db	255
  7303                           
  7304                           ;Config register IDLOC5 @ 0x200005
  7305                           ;	unspecified, using default values
  7306   200005                     	org	2097157
  7307   200005  FF                 	db	255
  7308                           
  7309                           ;Config register IDLOC6 @ 0x200006
  7310                           ;	unspecified, using default values
  7311   200006                     	org	2097158
  7312   200006  FF                 	db	255
  7313                           
  7314                           ;Config register IDLOC7 @ 0x200007
  7315                           ;	unspecified, using default values
  7316   200007                     	org	2097159
  7317   200007  FF                 	db	255
  7318                           
  7319                           	psect	config
  7320                           
  7321                           ; Padding undefined space
  7322   300000                     	org	3145728
  7323   300000  FF                 	db	255
  7324                           
  7325                           ;Config register CONFIG1H @ 0x300001
  7326                           ;	Oscillator Selection bits
  7327                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7328                           ;	Fail-Safe Clock Monitor Enable bit
  7329                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7330                           ;	Internal/External Oscillator Switchover bit
  7331                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7332   300001                     	org	3145729
  7333   300001  08                 	db	8
  7334                           
  7335                           ;Config register CONFIG2L @ 0x300002
  7336                           ;	Power-up Timer Enable bit
  7337                           ;	PWRTEN = OFF, PWRT disabled
  7338                           ;	Brown-out Reset Enable bits
  7339                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7340                           ;	Brown Out Reset Voltage bits
  7341                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7342   300002                     	org	3145730
  7343   300002  1F                 	db	31
  7344                           
  7345                           ;Config register CONFIG2H @ 0x300003
  7346                           ;	Watchdog Timer Enable bit
  7347                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7348                           ;	Watchdog Timer Postscale Select bits
  7349                           ;	WDTPS = 32768, 1:32768
  7350   300003                     	org	3145731
  7351   300003  1E                 	db	30
  7352                           
  7353                           ; Padding undefined space
  7354   300004                     	org	3145732
  7355   300004  FF                 	db	255
  7356                           
  7357                           ;Config register CONFIG3H @ 0x300005
  7358                           ;	CCP2 MUX bit
  7359                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7360                           ;	PORTB A/D Enable bit
  7361                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7362                           ;	Low-Power Timer1 Oscillator Enable bit
  7363                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7364                           ;	HFINTOSC Fast Start-up
  7365                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7366                           ;	MCLR Pin Enable bit
  7367                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  7368   300005                     	org	3145733
  7369   300005  09                 	db	9
  7370                           
  7371                           ;Config register CONFIG4L @ 0x300006
  7372                           ;	Stack Full/Underflow Reset Enable bit
  7373                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7374                           ;	Single-Supply ICSP Enable bit
  7375                           ;	LVP = OFF, Single-Supply ICSP disabled
  7376                           ;	Extended Instruction Set Enable bit
  7377                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7378                           ;	Background Debugger Enable bit
  7379                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7380   300006                     	org	3145734
  7381   300006  81                 	db	129
  7382                           
  7383                           ; Padding undefined space
  7384   300007                     	org	3145735
  7385   300007  FF                 	db	255
  7386                           
  7387                           ;Config register CONFIG5L @ 0x300008
  7388                           ;	Code Protection Block 0
  7389                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7390                           ;	Code Protection Block 1
  7391                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7392                           ;	Code Protection Block 2
  7393                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7394                           ;	Code Protection Block 3
  7395                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7396   300008                     	org	3145736
  7397   300008  0F                 	db	15
  7398                           
  7399                           ;Config register CONFIG5H @ 0x300009
  7400                           ;	Boot Block Code Protection bit
  7401                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7402                           ;	Data EEPROM Code Protection bit
  7403                           ;	CPD = OFF, Data EEPROM not code-protected
  7404   300009                     	org	3145737
  7405   300009  C0                 	db	192
  7406                           
  7407                           ;Config register CONFIG6L @ 0x30000A
  7408                           ;	Write Protection Block 0
  7409                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7410                           ;	Write Protection Block 1
  7411                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7412                           ;	Write Protection Block 2
  7413                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7414                           ;	Write Protection Block 3
  7415                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7416   30000A                     	org	3145738
  7417   30000A  0F                 	db	15
  7418                           
  7419                           ;Config register CONFIG6H @ 0x30000B
  7420                           ;	Configuration Register Write Protection bit
  7421                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7422                           ;	Boot Block Write Protection bit
  7423                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7424                           ;	Data EEPROM Write Protection bit
  7425                           ;	WRTD = OFF, Data EEPROM not write-protected
  7426   30000B                     	org	3145739
  7427   30000B  E0                 	db	224
  7428                           
  7429                           ;Config register CONFIG7L @ 0x30000C
  7430                           ;	Table Read Protection Block 0
  7431                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7432                           ;	Table Read Protection Block 1
  7433                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7434                           ;	Table Read Protection Block 2
  7435                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7436                           ;	Table Read Protection Block 3
  7437                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7438   30000C                     	org	3145740
  7439   30000C  0F                 	db	15
  7440                           
  7441                           ;Config register CONFIG7H @ 0x30000D
  7442                           ;	Boot Block Table Read Protection bit
  7443                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7444   30000D                     	org	3145741
  7445   30000D  40                 	db	64
  7446                           tosu	equ	0xFFF
  7447                           tosh	equ	0xFFE
  7448                           tosl	equ	0xFFD
  7449                           stkptr	equ	0xFFC
  7450                           pclatu	equ	0xFFB
  7451                           pclath	equ	0xFFA
  7452                           pcl	equ	0xFF9
  7453                           tblptru	equ	0xFF8
  7454                           tblptrh	equ	0xFF7
  7455                           tblptrl	equ	0xFF6
  7456                           tablat	equ	0xFF5
  7457                           prodh	equ	0xFF4
  7458                           prodl	equ	0xFF3
  7459                           indf0	equ	0xFEF
  7460                           postinc0	equ	0xFEE
  7461                           postdec0	equ	0xFED
  7462                           preinc0	equ	0xFEC
  7463                           plusw0	equ	0xFEB
  7464                           fsr0h	equ	0xFEA
  7465                           fsr0l	equ	0xFE9
  7466                           wreg	equ	0xFE8
  7467                           indf1	equ	0xFE7
  7468                           postinc1	equ	0xFE6
  7469                           postdec1	equ	0xFE5
  7470                           preinc1	equ	0xFE4
  7471                           plusw1	equ	0xFE3
  7472                           fsr1h	equ	0xFE2
  7473                           fsr1l	equ	0xFE1
  7474                           bsr	equ	0xFE0
  7475                           indf2	equ	0xFDF
  7476                           postinc2	equ	0xFDE
  7477                           postdec2	equ	0xFDD
  7478                           preinc2	equ	0xFDC
  7479                           plusw2	equ	0xFDB
  7480                           fsr2h	equ	0xFDA
  7481                           fsr2l	equ	0xFD9
  7482                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    2048
    Data        0
    BSS         118
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      88
    BANK0           160     71     157
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(1) Largest target is 64
		 -> saveTimeToFlash@flashBuffer(BANK0[64]), 

    printString@str	PTR unsigned char  size(2) Largest target is 6
		 -> displayAlarmTime@displayString(BANK0[5]), displayTime@displayString(BANK0[5]), STR_1(CODE[6]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_checkButtons
    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _generateBeep->___lwdiv
    ___lwdiv->___wmul
    _clearDisplay->_flushBuffer
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _saveTimeToFlash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _displayTime->_printString
    _displayAlarmTime->_printString
    _printString->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_saveTimeToFlash
    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _checkButtons->_saveTimeToFlash
    _displayTime->_printString
    _displayAlarmTime->_printString

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   51784
                                             69 BANK0      2     2      0
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
                       _processAlarm
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _processAlarm                                         0     0      0   10704
                       _triggerAlarm
 ---------------------------------------------------------------------------------
 (2) _triggerAlarm                                         6     6      0   10704
                                             80 COMRAM     2     2      0
                                             11 BANK0      4     4      0
                         _clearAlarm
                       _clearDisplay
                       _generateBeep
                        _printString
 ---------------------------------------------------------------------------------
 (3) _generateBeep                                         6     4      2    1273
                                             19 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
                  _delayMicroseconds
 ---------------------------------------------------------------------------------
 (4) _delayMicroseconds                                    4     2      2     248
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                             12 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         2     2      0    4344
                                             70 COMRAM     2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     676
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     676
                                              7 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0    1061
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   22951
                                             80 COMRAM     2     2      0
                            ___awmod
                         _clearAlarm
                   _displayAlarmTime
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _saveTimeToFlash                                     69    69      0    2392
                                              0 BANK0     69    69      0
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    14     9      5    1072
                                             11 COMRAM    14     9      5
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     5     1      4     217
                                              6 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     903
                                              6 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    9163
                                             11 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _displayAlarmTime                                    12    12      0    9163
                                             11 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (3) _printString                                         21    19      2    5016
                                             70 COMRAM    10     8      2
                                              0 BANK0     11    11      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (4) _flushBuffer                                         43    43      0    4245
                                             27 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (5) _max_write                                           13    10      3    2160
                                             14 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1525
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    2233
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _clearAlarm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     242
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           4     4      0     306
                                              2 COMRAM     4     4      0
                           _TMR1_ISR
                          _btGetData
 ---------------------------------------------------------------------------------
 (8) _btGetData                                            1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
                      _calculateTime
 ---------------------------------------------------------------------------------
 (11) _calculateTime                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _checkButtons
     ___awmod
     _clearAlarm
     _displayAlarmTime
       ___awdiv
       ___awmod
       _printString
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
     _displayTime
       ___awdiv
       ___awmod
       _printString
     _saveTimeToFlash
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _clearDisplay
     _flushBuffer
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit
   _processAlarm
     _triggerAlarm
       _clearAlarm
       _clearDisplay
       _generateBeep
         ___lwdiv
           ___wmul (ARG)
         ___wmul
         _delayMicroseconds
       _printString
   _saveTimeToFlash

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
         _calculateTime
     _TMR1_WriteTimer
   _btGetData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9D       5       98.1%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      58       1       93.6%
BITBIGSFRhhl        1D      0       0      38        0.0%
BITBIGSFRlllll      1C      0       0      51        0.0%
BITBIGSFRlhhh        D      0       0      41        0.0%
BITBIGSFRlllhh       7      0       0      48        0.0%
BITBIGSFRhhhh        7      0       0      36        0.0%
BITBIGSFRlhhlhh      7      0       0      42        0.0%
BITBIGSFRllhh        6      0       0      46        0.0%
BITBIGSFRllhl        6      0       0      47        0.0%
BITBIGSFRlhhlll      4      0       0      43        0.0%
BITBIGSFRhll         3      0       0      40        0.0%
BITBIGSFRhlh         2      0       0      39        0.0%
BITBIGSFRlhhlll      2      0       0      44        0.0%
BITBIGSFRhhhl        2      0       0      37        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRlhl         1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      52        0.0%
DATA                 0      0     115       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 12 01:05:17 2024

                    __end_of_checkButtons 0344             ?_EUSART_SetRxInterruptHandler 0007  
                          _SPI_Initialize 1218                              ?_displayTime 0001  
                             _SSPSTATbits 0FC7                                        l20 11D4  
                                      l21 11D6                                        l15 1224  
                                      l18 11C6                                        l71 1244  
                                      l68 11F0                                        l94 11BC  
                            ___awdiv@sign 000C                       ___wmul@multiplicand 0009  
                                     l221 1216                                       l321 119A  
                                     l233 06EE                                       l243 10A0  
                                     l148 0FBA                                       l324 1262  
                                     l237 06BC                                       l501 0234  
                                     l190 1258                                       l238 06A6  
                                     l510 0342                                       l239 06AA  
                                     l431 07AE                                       l520 0AAC  
                                     l440 110A                                       l514 0DB4  
                                     l442 1126                                       l187 124E  
                                     l515 0DE0                                       l276 1266  
                                     l348 123A                                       l621 04D6  
                                     l453 0B60                                       l446 0E1E  
                                     l480 1230                                       l552 0936  
                                     l464 0C14                                       l624 1174  
                                     l448 0E54                                       l473 0950  
                                     l554 0938                                       l476 09F6  
                                     l573 0F6A                                       l469 0F1A  
                                     l566 0604                                       l575 0F6C  
                                     l583 1038                                       l578 106C  
                                     l855 0878                                       l868 0CC4  
     EUSART_SetRxInterruptHandler@handler 0007                           _timer1ReloadVal 00A0  
                            ___awmod@sign 000C                                       prod 0FF3  
                                     tosl 0FFD                                       wreg 0FE8  
                          ??_generateBeep 0016                             generateBeep@i 0018  
                                    l1122 0EC8                                      l1115 0EC0  
                                    l4001 07A6                                      l3301 090A  
                                    l3231 11C2                                      l3303 0910  
                                    l3311 1076                                      l3241 07D4  
                                    l3233 07B6                                      l3305 0916  
                                    l3321 1086                                      l3313 107A  
                                    l3401 0EAA                                      l3411 1250  
                                    l3251 0808                                      l3243 07E2  
                                    l3235 07BA                                      l3307 091A  
                                    l3331 1094                                      l3323 1088  
                                    l3315 107E                                      l3403 0EB2  
                                    l3229 11C0                                      l3261 0842  
                                    l3253 0810                                      l3245 07EA  
                                    l3237 07C8                                      l3341 04D8  
                                    l3501 035A                                      l3413 1206  
                                    l3333 1096                                      l3325 108A  
                                    l3317 1082                                      l3309 106E  
                                    l3421 061E                                      l3405 0EB4  
                                    l3271 0868                                      l3263 084A  
                                    l3255 0818                                      l3247 07EE  
                                    l3239 07D0                                      l3351 0508  
                                    l3343 04E4                                      l3415 1214  
                                    l3327 108C                                      l3319 1084  
                                    l3423 0626                                      l3407 0EBA  
                                    l3335 10FE                                      l3409 1246  
                                    l3601 117E                                      l3273 0870  
                                    l3265 084C                                      l3257 0826  
                                    l3249 07F6                                      l3281 08BC  
                                    l3361 057C                                      l3521 0436  
                                    l3513 0378                                      l3329 1090  
                                    l3441 0676                                      l3433 0656  
                                    l3425 0626                                      l3337 110C  
                                    l3611 0F6E                                      l3603 1186  
                                    l3267 0852                                      l3259 082C  
                                    l3291 08C6                                      l3283 08BC  
                                    l3363 0580                                      l3531 045E  
                                    l3515 03FE                                      l3507 036C  
                                    l3451 068E                                      l3443 067E  
                                    l3435 066A                                      l3427 062A  
                                    l3419 0606                                      l3339 1110  
                                    l3621 0F96                                      l3613 0F72  
                                    l3605 1188                                      l3269 0858  
                                    l3293 08DE                                      l3285 08BE  
                                    l3277 087A                                      l3365 059C  
                                    l3357 0510                                      l3349 04EC  
                                    l3533 0462                                      l3525 0448  
                                    l3517 0420                                      l3541 0494  
                                    l3461 06CC                                      l3453 06A0  
                                    l3437 066E                                      l3429 062E  
                                    l3381 1150                                      l3701 0992  
                                    l3631 0FAA                                      l3623 0F9A  
                                    l3615 0F8A                                      l3471 1232  
                                    l3607 118A                                      l3551 0C28  
                                    l3295 08FA                                      l3279 089A  
                                    l3375 05C4                                      l3367 05A0  
                                    l3359 0548                                      l3543 04D2  
                                    l3527 0454                                      l3535 047E  
                                    l3519 0428                                      l3463 06CE  
                                    l3455 06A8                                      l3439 0672  
                                    l3391 0E70                                      l3383 116C  
                                    l3711 09DA                                      l3703 099E  
                                    l3633 0FAE                                      l3625 0F9E  
                                    l3617 0F8E                                      l3609 1196  
                                    l3545 1226                                      l3561 0C5C  
                                    l3553 0C30                                      l3297 0900  
                                    l3377 05E4                                      l3369 05BC  
                                    l3537 0482                                      l3529 045A  
                                    l3641 0B16                                      l3465 06D0  
                                    l3457 06AC                                      l3449 0682  
                                    l3801 014C                                      l3481 1014  
                                    l3473 1002                                      l3393 0E78  
                                    l3705 09AA                                      l3713 09E0  
                                    l3635 0FB2                                      l3627 0FA2  
                                    l3619 0F92                                      l3571 0C98  
                                    l3563 0C64                                      l3555 0C34  
                                    l3547 0C16                                      l3299 090A  
                                    l3379 05E8                                      l3651 0B36  
                                    l3643 0B1A                                      l3467 06DA  
                                    l3459 06C4                                      l3811 01AC  
                                    l3803 0166                                      l3715 0F1E  
                                    l3483 1018                                      l3395 0E80  
                                    l3387 0E56                                      l3491 0E20  
                                    l3707 09C0                                      l3637 0FB8  
                                    l3629 0FA6                                      l3573 0C9E  
                                    l3565 0C6C                                      l3557 0C42  
                                    l3549 0C1A                                      l3653 0B3A  
                                    l3469 06DC                                      l3821 0200  
                                    l3813 01CA                                      l3805 0174  
                                    l3725 0F3E                                      l3717 0F34  
                                    l3485 1034                                      l3397 0E8E  
                                    l3389 0E5E                                      l3493 0E2C  
                                    l3709 09C4                                      l3591 11AA  
                                    l3583 1218                                      l3751 11E0  
                                    l3567 0C7A                                      l3575 0CA4  
                                    l3559 0C4A                                      l3671 0B62  
                                    l3655 0B56                                      l3639 0AAE  
                                    l3663 0D7A                                      l3831 025C  
                                    l3823 0218                                      l3807 0186  
                                    l3815 01CE                                      l3727 0F4A  
                                    l3719 0F36                                      l3479 100A  
                                    l3399 0E94                                      l3495 0E3A  
                                    l3487 0DE2                                      l3585 1264  
                                    l3593 11B8                                      l3753 11E4  
                                    l3577 0CB4                                      l3569 0C90  
                                    l3681 0BD6                                      l3673 0BCA  
                                    l3649 0B22                                      l3665 0DA0  
                                    l3657 0D64                                      l3833 027C  
                                    l3825 0228                                      l3817 01DC  
                                    l3809 01A4                                      l3729 0F4E  
                                    l3761 103A                                      l3497 0E3E  
                                    l3489 0E12                                      l3595 11BA  
                                    l3587 119C                                      l3755 11E8  
                                    l3747 11D8                                      l3579 0CBC  
                                    l3499 0344                                      l3683 0BEA  
                                    l3675 0BCE                                      l3667 0DA4  
                                    l3851 02FC                                      l3835 0280  
                                    l3843 02CC                                      l3827 022C  
                                    l3819 01E6                                      l3771 0A40  
                                    l3763 09F8                                      l3691 095E  
                                    l3597 123C                                      l3589 11A8  
                                    l3757 11EC                                      l3749 11DC  
                                    l3685 0BEE                                      l3669 0DC8  
                                    l3861 0334                                      l3845 02DA  
                                    l3837 028E                                      l3829 0242  
                                    l3853 0304                                      l3781 0AA8  
                                    l3773 0A58                                      l3765 09F8  
                                    l3693 0978                                      l3599 1176  
                                    l3759 1260                                      l3687 0C0A  
                                    l3855 031C                                      l3863 033A  
                                    l3847 02E4                                      l3839 02A8  
                                    l3791 00F6                                      l3783 00AE  
                                    l3775 0A84                                      l3767 0A10  
                                    l3695 0986                                      l3871 0EFE  
                                    l3857 031E                                      l3849 02EC  
                                    l3793 0114                                      l3785 00BC  
                                    l3777 0A94                                      l3769 0A28  
                                    l3697 098A                                      l3689 093A  
                                    l3873 0F10                                      l3865 0ECA  
                                    l3961 06F8                                      l3859 0330  
                                    l3795 011C                                      l3787 00D6  
                                    l3779 0A98                                      l3875 0F14  
                                    l3867 0EDC                                      l3971 0708  
                                    l3963 06FC                                      l3797 013A  
                                    l3789 00E4                                      l3869 0EEC  
                                    l3981 0728                                      l3973 070A  
                                    l3965 0700                                      l3799 013E  
                                    l3991 0786                                      l3983 073A  
                                    l3975 070E                                      l3967 0704  
                                    l3959 06F0                                      l3993 0796  
                                    l3985 074C                                      l3977 0712  
                                    l3969 0706                                      l3995 079A  
                                    l3987 075E                                      l3979 0716  
                                    l3997 079E                                      l3989 0776  
                                    l3999 07A2                                      STR_1 FFF9  
                            _triggerAlarm 093A                                      u3010 0A7E  
                                    u3011 0A78                                      u3100 0186  
                                    u3020 0A80                                      u3101 0182  
                                    _LATA 0F89                                      u3110 01DC  
                                    u3030 0A94                                      _LATB 0F8A  
                                    u3111 01D8                                      u3031 0A90  
                                    _LATC 0F8B                                      u3120 0218  
                                    u3040 0AA8                                      u3200 0EDC  
                                    u3121 0214                                      u3041 0AA4  
                                    u3201 0ED8                                      u3130 0228  
                                    u3050 00BC                                      u3210 0EEC  
                                    u3131 0224                                      u3051 00B8  
                                    u3211 0EE8                                      u2500 07C8  
                                    u3140 0242                                      u3060 00E4  
                                    u3220 0EFE                                      u2501 07C4  
                                    u3141 023E                                      u3061 00E0  
                                    u3221 0EFA                                      u2510 07E2  
                                    u3150 028E                                      u3070 00F6  
                                    u3230 0F10                                      u2511 07DE  
                                    u3151 028A                                      u3071 00F2  
                                    u3231 0F0C                                      u2520 0808  
                                    u3160 02DA                                      u3080 014C  
                                    u3400 0786                                      u2521 0804  
                                    u2601 04DE                                      u3161 02D6  
                                    u3081 0148                                      u3401 0782  
                                    u2530 0826                                      u3170 02FC  
                                    u3090 0174                                      u3410 0796  
                                    u2531 0822                                      u3171 02F8  
                                    u3091 0170                                      u3411 0792  
                                    u2540 0842                                      u2620 0548  
                                    u2700 0652                                      u3180 031C  
                                    u2541 083E                                      u2621 0544  
                                    u2701 064E                                      u3181 0318  
                                    u2550 0868                                      u2614 052E  
                                    u2710 06A0                                      u3190 0330  
                                    u2551 0864                                      u2615 052A  
                                    u2711 069C                                      u3191 032C  
                                    u2560 08DE                                      u2640 059C  
                                    u2720 06BC                                      u3360 0728  
                                    u2561 08DA                                      u2641 0598  
                                    u2721 06B8                                      u3361 0724  
                                    u2490 11D4                                      u2570 0936  
                                    u2650 05BC                                      u2634 0564  
                                    u2810 0436                                      u3370 073A  
                                    u2491 11D0                                      u2571 0932  
                                    u2651 05B8                                      u2635 0560  
                                    u2811 0432                                      u3507 0298  
                                    u3371 0736                                      u2900 0C7A  
                                    u2660 0604                                      u2820 0444  
                                    u2804 0414                                      u2740 06EE  
                                    u3380 074C                                      u2901 0C76  
                                    u2661 0600                                      u2821 0440  
                                    u2805 0410                                      u2741 06EA  
                                    u3437 0968                                      u3381 0748  
                                    u2910 0C90                                      u2830 047E  
                                    u2750 1034                                      u2670 0E70  
                                    u2590 1126                                      u3390 075E  
                                    u2911 0C8C                                      u2831 047A  
                                    u2735 06D8                                      u2751 1030  
                                    u2671 0E6C                                      u2591 1122  
                                    u3447 09B4                                      u3391 075A  
                                    u2920 0CB4                                      u2840 0490  
                                    u2736 06DA                                      u2680 0E8E  
                                    u2760 0E54                                      u2921 0CB0  
                                    u2841 048C                                      u2585 109E  
                                    u2681 0E8A                                      u2761 0E50  
                                    u3457 09CE                                      u2850 04C2  
                                    u2770 03A6                                      u2930 0B56  
                                    u2586 10A0                                      u2690 0EAA  
                                    u2931 0B52                                      u3467 00C6  
                                    u2691 0EA6                                      u2860 04D2  
                                    u2940 0DB4                                      u2861 04CE  
                                    u2941 0DB0                                      u3477 0156  
                                    u2870 0C28                                      u2790 03FE  
                                    u2950 0C0A                                      u2871 0C24  
                                    u2791 03FA                                      u2951 0C06  
                                    u3487 01F0                                      u2880 0C42  
                                    u2784 03E4                                      u2960 095E  
                                    u2881 0C3E                                      u2857 04B8  
                                    u2785 03E0                                      u2777 039C  
                                    u3497 024C                                      u2961 095A  
                                    u2890 0C5C                                      u2970 0986  
                                    u2891 0C58                                      u2971 0982  
                                    u2980 09F6                                      u2981 09F2  
                                    u2990 0F6A                                      u2991 0F66  
                                    _TMR1 0FCE                                      _WPUB 0F7C  
                                    _main 06F0                                      fsr1h 0FE2  
                                    fsr2h 0FDA                                      indf1 0FE7  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9                                      btemp 0059  
                            printString@i 00B5                              printString@j 00B9  
                            printString@k 00B7                         ?_FLASH_WriteBlock 000C  
                                    prodh 0FF4                                      prodl 0FF3  
                                    start 00AA                    __end_of_SPI_Initialize 1226  
                            ?_flushBuffer 0001                        ??_FLASH_WriteBlock 0011  
              ??_TMR1_SetInterruptHandler 0009                              ___param_bank 0000  
             saveTimeToFlash@flashAddress 00F0                      __end_of_clearDisplay 103A  
             checkButtons@button3HoldTime 009A             __end_of_OSCILLATOR_Initialize 1246  
                                   ?_main 0001                           __end_of___awdiv 087A  
                       ??_saveTimeToFlash 001A                                     _EEADR 0FA9  
                         __end_of___awmod 0CC6                           _TMR1_StartTimer 1260  
                                   _ANSEL 0F7E                           ___awdiv@divisor 0009  
                                   _T1CON 0FCD                           __end_of___lwdiv 0ECA  
                                   i2l341 1204                                     i2l351 125E  
                                   i2l335 114E                                     i2l345 10FC  
                                   i2l282 004C                                     i2l283 0096  
                                   i2l284 006E                                     i2l526 0D62  
                                   i2l288 0096                                     i2l529 0D62  
                                   i2l459 1000                           ___awdiv@counter 000B  
                                   _RCREG 0FAE                                     _RCSTA 0FAB  
                                   _TMR1H 0FCF                                     _TMR1L 0FCE  
                                   _SPBRG 0FAF                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TXREG 0FAD                                     _TXSTA 0FAC  
                        __end_of_TMR1_ISR 1206                                     _hours 00AE  
                            displayTime@i 00C5                          _button3PressTime 009C  
                 __end_of_TMR1_Initialize 119C                           max7219_cmd@Addr 000B  
                                   pclath 0FFA                                     pclatu 0FFB  
                                   tablat 0FF5                           max7219_cmd@data 0008  
                                   ttemp5 005A                                     ttemp6 005D  
                                   ttemp7 0061                                     status 0FD8  
                                   wtemp8 005A                           _TMR1_WriteTimer 1128  
                         ?_SPI_Initialize 0001                            _alarmTriggered 00A7  
                         __initialization 10A2                              __end_of_main 07B6  
                 FLASH_ReadByte@flashAddr 0007               ?_INTERRUPT_InterruptManager 0001  
          ??_EUSART_SetRxInterruptHandler 0009                                    ??_main 0053  
                           __activetblptr 0003                        generateBeep@cycles 0016  
                __end_of_SPI_Exchange8bit 11D8                 FLASH_WriteBlock@writeAddr 000C  
                                  _EEADRH 0FAA                                    _EEDATA 0FA8  
                                  _EECON2 0FA7                          ___awdiv@dividend 0007  
                                  _ANSELH 0F7F                   TMR1_WriteTimer@timerVal 0001  
                                  i2l2411 0FEA                                    i2l2403 0FBC  
                                  i2l2413 0FFC                                    i2l2405 0FD0  
                                  i2l2407 0FD4                                    i2l2409 0FE6  
                                  i2l3161 0036                                    i2l3171 008A  
                                  i2l3163 0044                                    i2l3173 0090  
                                  i2l3165 005A                                    i2l3157 001A  
                                  i2l3167 0068                                    i2l3159 0028  
                                  i2l2553 125A                                    i2l2721 1128  
                                  i2l3169 007C                                    i2l2723 1136  
                                  i2l2731 1146                                    i2l2733 114A  
                                  i2l2725 1138                                    i2l2735 10D0  
                                  i2l2727 113C                                    i2l2737 10E4  
                                  i2l2729 1140                                    i2l2871 0CC8  
                                  i2l2865 11F2                                    i2l2881 0D0C  
                                  i2l2873 0CDA                                    i2l2867 11F4  
                                  i2l2891 0D50                                    i2l2883 0D1C  
                                  i2l2875 0CEA                                    i2l2869 1200  
                                  i2l2877 0CF6                                    i2l2887 0D2C  
                                  i2l2879 0CFC                                    i2l2889 0D3E  
                                  _TABLAT 0FF5                        delayMicroseconds@i 0009  
                                  _OSCCON 0FD3                                    _SPBRGH 0FB0  
                                  _SSPADD 0FC8                                    _SSPBUF 0FC9  
                   triggerAlarm@numCycles 00BB      __end_of_TMR1_DefaultInterruptHandler 1260  
            _TMR1_DefaultInterruptHandler 125A                             main@hours_pom 00F5  
                 __end_of_TMR1_StartTimer 1264                                    ___wmul 1150  
                    __end_of_generateBeep 0E56                                 ??___awdiv 000B  
                               ??___awmod 000B                                 ??___lwdiv 0011  
                     _EUSART_Transmit_ISR 0000                                    clear_0 10A8  
                                  clear_1 10B4                          ___awdiv@quotient 000D  
                         ___awmod@divisor 0009                                    isa$std 0001  
                         ___awmod@counter 000B                          flushBuffer@F2569 0100  
                   displayTime@timeString 00C0                            printString@str 0047  
                       displayAlarmTime@i 00C5               FLASH_WriteBlock@dataCounter 0018  
                       ?_displayAlarmTime 0001                              __mediumconst F7F8  
                                  tblptrh 0FF7                                    tblptrl 0FF6  
                                  tblptru 0FF8                              _checkButtons 00AE  
                      ??_displayAlarmTime 0051  TMR1_SetInterruptHandler@InterruptHandler 0007  
                 __end_of_TMR1_WriteTimer 1150                     __end_of_TMR1_CallBack 10FE  
                            ?_printString 0047                          ?_TMR1_Initialize 0001  
                       _SYSTEM_Initialize 11D8                                __accesstop 0060  
                 __end_of__initialization 10C6                        ?_SYSTEM_Initialize 0001  
                           ___rparam_used 0001      __end_of_EUSART_SetTxInterruptHandler 1250  
            _EUSART_SetTxInterruptHandler 1246                            __pcstackCOMRAM 0001  
                     ??_SYSTEM_Initialize 0009                                 ?_TMR1_ISR 0001  
           ?_TMR1_DefaultInterruptHandler 0001                              _alarmMinutes 00AA  
         __end_of_MAX7219_Dot_Matrix_font FFF9               FLASH_WriteBlock@GIEBitValue 0015  
                            _clearDisplay 1002                 __end_of_SYSTEM_Initialize 11F2  
                          flushBuffer@dev 003F                            flushBuffer@row 0043  
                              __pbssBANK0 0060                                __pbssBANK1 0100  
                              _alarmHours 00AB             delayMicroseconds@microseconds 0007  
                              _clearAlarm 1226             displayAlarmTime@displayString 00BB  
                            flushBuffer@i 0045                              flushBuffer@j 0041  
                         _saveTimeToFlash 0D64             ?_EUSART_SetTxInterruptHandler 0007  
        _EUSART_TxDefaultInterruptHandler 00FB                                   ?___wmul 0007  
                        ?_TMR1_StartTimer 0001                                _blinkTimer 009E  
                              ??_TMR1_ISR 0003                                   _BAUDCON 0FB8  
                          _FLASH_ReadByte 1206                             _eusartRxCount 00AF  
                       __end_of_btGetData 0D64                                   _TBLPTRH 0FF7  
                                 _TBLPTRL 0FF6                                   _TBLPTRU 0FF8  
                                 _OSCTUNE 0F9B                                   _SSPCON1 0FC6  
                                 _SSPSTAT 0FC7                          ?_TMR1_WriteTimer 0001  
                        _FLASH_EraseBlock 106E                          ??_SPI_Initialize 0007  
     EUSART_SetTxInterruptHandler@handler 0007                   generateBeep@duration_ms 0014  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___awdiv 07B6                                   ___awmod 0C16  
                        _isButton3Pressed 00A5                                   ___lwdiv 0E56  
                  __end_of_FLASH_ReadByte 1218                                   __pcinit 10A2  
                                 __ramtop 1000                                _matrixInit 103A  
                                 __ptext0 06F0                                   __ptext1 0ECA  
                                 __ptext2 093A                                   __ptext3 0DE2  
                                 __ptext4 10FE                                   __ptext5 1150  
                                 __ptext6 0E56                                   __ptext7 1002  
                                 __ptext8 103A                                   __ptext9 0F1C  
          ??_TMR1_DefaultInterruptHandler 0001                             ??_max7219_cmd 0009  
                               _T1CONbits 0FCD                     _OSCILLATOR_Initialize 123C  
                        ___awmod@dividend 0007                         __end_of_max_write 093A  
                                 _minutes 00AD                  ??_PIN_MANAGER_Initialize 0007  
                                 _seconds 00AC                 ?_TMR1_SetInterruptHandler 0007  
                       ?_SPI_Exchange8bit 0001                              _generateBeep 0DE2  
                    end_of_initialization 10C6                           printString@data 00B2  
                           triggerAlarm@i 00BD                        ??_SPI_Exchange8bit 0007  
                         printString@indx 00B0                      SPI_Exchange8bit@data 0007  
                 __end_of_saveTimeToFlash 0DE2                             _calculateTime 0FBC  
                             ?_clearAlarm 0001                         _EUSART_Initialize 0F6E  
                            max_write@dev 0018                                _uartBuffer 0080  
                            btGetData@rcv 0001                        ?_EUSART_Initialize 0001  
                            max_write@row 000F                                 _RCSTAbits 0FAB  
                                 postinc0 0FEE                                   postinc2 0FDE  
                         ?_FLASH_ReadByte 0007                       ??_EUSART_Initialize 0009  
                        saveTimeToFlash@i 00F4            ??_EUSART_SetTxInterruptHandler 0009  
                       _loadTimeFromFlash 09F8                             ?_processAlarm 0001  
                               _PORTBbits 0F81                             clearDisplay@i 0047  
                      ?_loadTimeFromFlash 0001                                 _TRISBbits 0F93  
           FLASH_WriteBlock@flashWrBufPtr 0010                       ??_loadTimeFromFlash 000B  
                     __end_of_max7219_cmd 0F6E                  FLASH_EraseBlock@baseAddr 0007  
               __end_of_EUSART_Initialize 0FBC                            ?_calculateTime 0001  
                               _TXSTAbits 0FAC                         FLASH_WriteBlock@i 0019  
                       FLASH_WriteBlock@j 0016                saveTimeToFlash@flashBuffer 00B0  
            __end_of_INTERRUPT_Initialize 1268                             ??_displayTime 0051  
               __end_of_loadTimeFromFlash 0AAE                            __end_of___wmul 1176  
                          ??_processAlarm 0053                               ?_matrixInit 0001  
            checkButtons@alarmSettingMode 00A2                          _FLASH_WriteBlock 0606  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 10A2  
                           ?_triggerAlarm 0001                          ?_saveTimeToFlash 0001  
                      printString@strindx 00B3                             ??_flushBuffer 001C  
                                ??___wmul 000B           displayAlarmTime@alarmTimeString 00C0  
             FLASH_EraseBlock@GIEBitValue 000B                  __end_of_FLASH_EraseBlock 10A2  
                     __end_of_displayTime 0B62                               _max7219_cmd 0F1C  
                             __pbssCOMRAM 0053                               _alarmActive 00A8  
                           __pcstackBANK0 00B0                         _delayMicroseconds 10FE  
                          ??_triggerAlarm 0051                              max7219_cmd@i 000E  
                      ?_delayMicroseconds 0007                                 _btGetData 0CC6  
                         ??_calculateTime 0001          _EUSART_RxDefaultInterruptHandler 00F9  
                 _MAX7219_Dot_Matrix_font F7F9                                 __pnvBANK0 00F7  
                     ??_delayMicroseconds 0009                                 _btTimeSet 00A4  
                        ___lwdiv@dividend 000D                    _PIN_MANAGER_Initialize 119C  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 123C  
                           __pmediumconst F7F8                                  ?___awdiv 0007  
                                ?___awmod 0007                                  ?___lwdiv 000D  
                            _eusartRxHead 0055                              _eusartTxHead 0058  
                            _eusartRxTail 0054                       __end_of_flushBuffer 0606  
                            _eusartTxTail 0057                                 _bufferCol 0060  
            ??_INTERRUPT_InterruptManager 0003                   _eusartTxBufferRemaining 0056  
               __end_of_delayMicroseconds 1128                          ___lwdiv@quotient 0012  
                               _max_write 087A                      _INTERRUPT_Initialize 1264  
                              ?_btGetData 0001            FLASH_WriteBlock@blockStartAddr 0011  
                          _eusartRxBuffer 008A                             _TMR1_CallBack 10D0  
                          _eusartTxBuffer 0092                      __end_of_processAlarm 0F1C  
                          ___wmul@product 000B                                  _LATBbits 0F8A  
                                _LATCbits 0F8B                              ??_clearAlarm 0007  
                                _PIE1bits 0F9D                          _displayAlarmTime 0B62  
                                i2u136_40 0FD0                                  i2u240_40 007C  
                                i2u136_41 0FCC                                  i2u240_41 0078  
                                i2u137_40 0FE6                                  i2u241_40 008A  
                                i2u137_41 0FE2                                  i2u241_41 0086  
                         max_write@offset 0014                                  i2u138_40 0FFC  
                                i2u138_41 0FF8                                  i2u235_40 0028  
                                i2u235_41 0024                                  i2u236_40 0036  
                                i2u236_41 0032                                  i2u173_40 1136  
                                i2u237_40 0044                                  i2u173_41 1132  
                                i2u237_41 0040                                  i2u174_40 10E4  
                                i2u190_40 0D50                                  i2u238_40 005A  
                                i2u174_41 10E0                                  i2u190_41 0D4C  
                                i2u238_41 0056                                  i2u239_40 0068  
                                i2u239_41 0064                                  i2u175_48 10EA  
                                i2u175_49 10FC                                  i2u185_40 0CDA  
                                i2u185_41 0CD6                                  _PIR1bits 0F9E  
                                i2u186_40 0CEA                                  i2u186_41 0CE6  
                        ??_FLASH_ReadByte 000B                                  i2u187_40 0D0C  
                                i2u187_41 0D08                                  _PIR2bits 0FA1  
                                i2u188_40 0D1C                                  i2u188_41 0D18  
                                i2u189_40 0D3E                                  i2u189_41 0D3A  
                                _RCONbits 0FD0                                  _TMR1_ISR 11F2  
                             _displayTime 0AAE                         ??_TMR1_Initialize 0009  
                       ___wmul@multiplier 0007                        __end_of_clearAlarm 1232  
                           ?_checkButtons 0001                               _INTCON2bits 0FF1  
                              ?_max_write 000F                     ?_INTERRUPT_Initialize 0001  
                           ??_printString 0049                            ?_TMR1_CallBack 0001  
                __end_of_FLASH_WriteBlock 06F0                                _EECON1bits 0FA6  
                                __Hrparam 0000                               _flushBuffer 04D8  
                                __Lrparam 0000                        max_write@devTarget 0016  
                 ??_OSCILLATOR_Initialize 0007                      __end_of_triggerAlarm 09F8  
                            ??_matrixInit 0010                  _TMR1_SetInterruptHandler 1232  
                   _TMR1_InterruptHandler 00F7                           main@minutes_pom 00F6  
                                _alarmSet 00A9                            ??_checkButtons 0051  
                         ___lwdiv@divisor 000F                           ___lwdiv@counter 0011  
                           ?_clearDisplay 0001                                  __ptext10 09F8  
                                __ptext11 00AE                                  __ptext20 087A  
                                __ptext12 0D64                                  __ptext21 07B6  
                                __ptext13 0606                                  __ptext30 119C  
                                __ptext22 11BE                                  __ptext14 106E  
                                __ptext31 123C                                  __ptext23 0C16  
                                __ptext15 1206                                  __ptext40 10D0  
                                __ptext32 1264                                  __ptext24 1226  
                                __ptext16 0AAE                                  __ptext41 125A  
                                __ptext33 0F6E                                  __ptext25 1260  
                                __ptext17 0B62                                  __ptext42 0FBC  
                                __ptext34 1246                                  __ptext26 11D8  
                                __ptext18 0344                                  __ptext35 1250  
                                __ptext27 1176                                  __ptext19 04D8  
                                __ptext28 1232                                  __ptext37 0CC6  
                                __ptext29 1218                                  __ptext38 11F2  
                                __ptext39 1128                         ??_TMR1_StartTimer 0007  
                             ??_btGetData 0001                        __end_of_matrixInit 106E  
                     __end_of_printString 04D8                      flushBuffer@bufferRow 001F  
                         _displayBlinking 00A6                                  isa$xinst 0000  
                    max7219_cmd@writeData 000C                                  int$flags 0059  
      __end_of_INTERRUPT_InterruptManager 00AA                _INTERRUPT_InterruptManager 0008  
                       ??_TMR1_WriteTimer 0003                         ?_FLASH_EraseBlock 0007  
     FLASH_WriteBlock@numberOfWriteBlocks 0017                              ?_max7219_cmd 0008  
                      ??_FLASH_EraseBlock 000B                                _INTCONbits 0FF2  
                         _uartBufferIndex 0053                            ??_clearDisplay 0047  
                  ??_INTERRUPT_Initialize 0007                           ??_TMR1_CallBack 0001  
                      max_write@writeData 001A                               ??_max_write 0012  
                                intlevel2 0000                   ?_PIN_MANAGER_Initialize 0001  
    __end_of_EUSART_SetRxInterruptHandler 125A              _EUSART_SetRxInterruptHandler 1250  
                           max_write@data 0011                          _SPI_Exchange8bit 11BE  
                      _EUSART_Receive_ISR 0000                  displayTime@displayString 00BB  
                            _processAlarm 0ECA                  __end_of_displayAlarmTime 0C16  
           checkButtons@button3PressCount 00A3                               _SSPCON1bits 0FC6  
                           ?_generateBeep 0014            __end_of_PIN_MANAGER_Initialize 11BE  
                             _printString 0344                     __end_of_calculateTime 1002  
                         _TMR1_Initialize 1176  
