

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 11 03:10:24 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    52                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    53                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    54                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    55                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    56   000000                     
    57                           ; Generated 05/01/2024 GMT
    58                           ; 
    59                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution. Publication is not required when
    73                           ;        this file is used in an embedded application.
    74                           ; 
    75                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    76                           ;        software without specific prior written permission.
    77                           ; 
    78                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    79                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    80                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    81                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    82                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    83                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    84                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    85                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    86                           ; 
    87                           ; 
    88                           ; Code-generator required, PIC18F26K20 Definitions
    89                           ; 
    90                           ; SFR Addresses
    91   000000                     
    92 ;; Function _EUSART_Transmit_ISR is unused but had its address taken
    93   000000                     
    94 ;; Function _EUSART_Receive_ISR is unused but had its address taken
    95   000000                     
    96                           	psect	mediumconst
    97   00F7F8                     __pmediumconst:
    98                           	callstack 0
    99   00F7F8  00                 	db	0
   100   00F7F9                     _MAX7219_Dot_Matrix_font:
   101                           	callstack 0
   102   00F7F9  00                 	db	0
   103   00F7FA  00                 	db	0
   104   00F7FB  00                 	db	0
   105   00F7FC  00                 	db	0
   106   00F7FD  00                 	db	0
   107   00F7FE  00                 	db	0
   108   00F7FF  00                 	db	0
   109   00F800  00                 	db	0
   110   00F801  7E                 	db	126
   111   00F802  81                 	db	129
   112   00F803  95                 	db	149
   113   00F804  B1                 	db	177
   114   00F805  B1                 	db	177
   115   00F806  95                 	db	149
   116   00F807  81                 	db	129
   117   00F808  7E                 	db	126
   118   00F809  7E                 	db	126
   119   00F80A  FF                 	db	255
   120   00F80B  EB                 	db	235
   121   00F80C  CF                 	db	207
   122   00F80D  CF                 	db	207
   123   00F80E  EB                 	db	235
   124   00F80F  FF                 	db	255
   125   00F810  7E                 	db	126
   126   00F811  0E                 	db	14
   127   00F812  1F                 	db	31
   128   00F813  3F                 	db	63
   129   00F814  7E                 	db	126
   130   00F815  3F                 	db	63
   131   00F816  1F                 	db	31
   132   00F817  0E                 	db	14
   133   00F818  00                 	db	0
   134   00F819  08                 	db	8
   135   00F81A  1C                 	db	28
   136   00F81B  3E                 	db	62
   137   00F81C  7F                 	db	127
   138   00F81D  3E                 	db	62
   139   00F81E  1C                 	db	28
   140   00F81F  08                 	db	8
   141   00F820  00                 	db	0
   142   00F821  18                 	db	24
   143   00F822  BA                 	db	186
   144   00F823  FF                 	db	255
   145   00F824  FF                 	db	255
   146   00F825  FF                 	db	255
   147   00F826  BA                 	db	186
   148   00F827  18                 	db	24
   149   00F828  00                 	db	0
   150   00F829  10                 	db	16
   151   00F82A  B8                 	db	184
   152   00F82B  FC                 	db	252
   153   00F82C  FF                 	db	255
   154   00F82D  FC                 	db	252
   155   00F82E  B8                 	db	184
   156   00F82F  10                 	db	16
   157   00F830  00                 	db	0
   158   00F831  00                 	db	0
   159   00F832  00                 	db	0
   160   00F833  18                 	db	24
   161   00F834  3C                 	db	60
   162   00F835  3C                 	db	60
   163   00F836  18                 	db	24
   164   00F837  00                 	db	0
   165   00F838  00                 	db	0
   166   00F839  FF                 	db	255
   167   00F83A  FF                 	db	255
   168   00F83B  E7                 	db	231
   169   00F83C  C3                 	db	195
   170   00F83D  C3                 	db	195
   171   00F83E  E7                 	db	231
   172   00F83F  FF                 	db	255
   173   00F840  FF                 	db	255
   174   00F841  00                 	db	0
   175   00F842  3C                 	db	60
   176   00F843  66                 	db	102
   177   00F844  42                 	db	66
   178   00F845  42                 	db	66
   179   00F846  66                 	db	102
   180   00F847  3C                 	db	60
   181   00F848  00                 	db	0
   182   00F849  FF                 	db	255
   183   00F84A  C3                 	db	195
   184   00F84B  99                 	db	153
   185   00F84C  BD                 	db	189
   186   00F84D  BD                 	db	189
   187   00F84E  99                 	db	153
   188   00F84F  C3                 	db	195
   189   00F850  FF                 	db	255
   190   00F851  70                 	db	112
   191   00F852  F8                 	db	248
   192   00F853  88                 	db	136
   193   00F854  88                 	db	136
   194   00F855  FD                 	db	253
   195   00F856  7F                 	db	127
   196   00F857  07                 	db	7
   197   00F858  0F                 	db	15
   198   00F859  00                 	db	0
   199   00F85A  4E                 	db	78
   200   00F85B  5F                 	db	95
   201   00F85C  F1                 	db	241
   202   00F85D  F1                 	db	241
   203   00F85E  5F                 	db	95
   204   00F85F  4E                 	db	78
   205   00F860  00                 	db	0
   206   00F861  C0                 	db	192
   207   00F862  E0                 	db	224
   208   00F863  FF                 	db	255
   209   00F864  7F                 	db	127
   210   00F865  05                 	db	5
   211   00F866  05                 	db	5
   212   00F867  07                 	db	7
   213   00F868  07                 	db	7
   214   00F869  C0                 	db	192
   215   00F86A  FF                 	db	255
   216   00F86B  7F                 	db	127
   217   00F86C  05                 	db	5
   218   00F86D  05                 	db	5
   219   00F86E  65                 	db	101
   220   00F86F  7F                 	db	127
   221   00F870  3F                 	db	63
   222   00F871  99                 	db	153
   223   00F872  5A                 	db	90
   224   00F873  3C                 	db	60
   225   00F874  E7                 	db	231
   226   00F875  E7                 	db	231
   227   00F876  3C                 	db	60
   228   00F877  5A                 	db	90
   229   00F878  99                 	db	153
   230   00F879  7F                 	db	127
   231   00F87A  3E                 	db	62
   232   00F87B  3E                 	db	62
   233   00F87C  1C                 	db	28
   234   00F87D  1C                 	db	28
   235   00F87E  08                 	db	8
   236   00F87F  08                 	db	8
   237   00F880  00                 	db	0
   238   00F881  08                 	db	8
   239   00F882  08                 	db	8
   240   00F883  1C                 	db	28
   241   00F884  1C                 	db	28
   242   00F885  3E                 	db	62
   243   00F886  3E                 	db	62
   244   00F887  7F                 	db	127
   245   00F888  00                 	db	0
   246   00F889  00                 	db	0
   247   00F88A  24                 	db	36
   248   00F88B  66                 	db	102
   249   00F88C  FF                 	db	255
   250   00F88D  FF                 	db	255
   251   00F88E  66                 	db	102
   252   00F88F  24                 	db	36
   253   00F890  00                 	db	0
   254   00F891  00                 	db	0
   255   00F892  5F                 	db	95
   256   00F893  5F                 	db	95
   257   00F894  00                 	db	0
   258   00F895  00                 	db	0
   259   00F896  5F                 	db	95
   260   00F897  5F                 	db	95
   261   00F898  00                 	db	0
   262   00F899  06                 	db	6
   263   00F89A  0F                 	db	15
   264   00F89B  09                 	db	9
   265   00F89C  7F                 	db	127
   266   00F89D  7F                 	db	127
   267   00F89E  01                 	db	1
   268   00F89F  7F                 	db	127
   269   00F8A0  7F                 	db	127
   270   00F8A1  40                 	db	64
   271   00F8A2  DA                 	db	218
   272   00F8A3  BF                 	db	191
   273   00F8A4  A5                 	db	165
   274   00F8A5  FD                 	db	253
   275   00F8A6  59                 	db	89
   276   00F8A7  03                 	db	3
   277   00F8A8  02                 	db	2
   278   00F8A9  00                 	db	0
   279   00F8AA  70                 	db	112
   280   00F8AB  70                 	db	112
   281   00F8AC  70                 	db	112
   282   00F8AD  70                 	db	112
   283   00F8AE  70                 	db	112
   284   00F8AF  70                 	db	112
   285   00F8B0  00                 	db	0
   286   00F8B1  80                 	db	128
   287   00F8B2  94                 	db	148
   288   00F8B3  B6                 	db	182
   289   00F8B4  FF                 	db	255
   290   00F8B5  FF                 	db	255
   291   00F8B6  B6                 	db	182
   292   00F8B7  94                 	db	148
   293   00F8B8  80                 	db	128
   294   00F8B9  00                 	db	0
   295   00F8BA  04                 	db	4
   296   00F8BB  06                 	db	6
   297   00F8BC  7F                 	db	127
   298   00F8BD  7F                 	db	127
   299   00F8BE  06                 	db	6
   300   00F8BF  04                 	db	4
   301   00F8C0  00                 	db	0
   302   00F8C1  00                 	db	0
   303   00F8C2  10                 	db	16
   304   00F8C3  30                 	db	48
   305   00F8C4  7F                 	db	127
   306   00F8C5  7F                 	db	127
   307   00F8C6  30                 	db	48
   308   00F8C7  10                 	db	16
   309   00F8C8  00                 	db	0
   310   00F8C9  08                 	db	8
   311   00F8CA  08                 	db	8
   312   00F8CB  08                 	db	8
   313   00F8CC  2A                 	db	42
   314   00F8CD  3E                 	db	62
   315   00F8CE  1C                 	db	28
   316   00F8CF  08                 	db	8
   317   00F8D0  00                 	db	0
   318   00F8D1  08                 	db	8
   319   00F8D2  1C                 	db	28
   320   00F8D3  3E                 	db	62
   321   00F8D4  2A                 	db	42
   322   00F8D5  08                 	db	8
   323   00F8D6  08                 	db	8
   324   00F8D7  08                 	db	8
   325   00F8D8  00                 	db	0
   326   00F8D9  3C                 	db	60
   327   00F8DA  3C                 	db	60
   328   00F8DB  20                 	db	32
   329   00F8DC  20                 	db	32
   330   00F8DD  20                 	db	32
   331   00F8DE  20                 	db	32
   332   00F8DF  20                 	db	32
   333   00F8E0  00                 	db	0
   334   00F8E1  08                 	db	8
   335   00F8E2  1C                 	db	28
   336   00F8E3  3E                 	db	62
   337   00F8E4  08                 	db	8
   338   00F8E5  08                 	db	8
   339   00F8E6  3E                 	db	62
   340   00F8E7  1C                 	db	28
   341   00F8E8  08                 	db	8
   342   00F8E9  30                 	db	48
   343   00F8EA  38                 	db	56
   344   00F8EB  3C                 	db	60
   345   00F8EC  3E                 	db	62
   346   00F8ED  3E                 	db	62
   347   00F8EE  3C                 	db	60
   348   00F8EF  38                 	db	56
   349   00F8F0  30                 	db	48
   350   00F8F1  06                 	db	6
   351   00F8F2  0E                 	db	14
   352   00F8F3  1E                 	db	30
   353   00F8F4  3E                 	db	62
   354   00F8F5  3E                 	db	62
   355   00F8F6  1E                 	db	30
   356   00F8F7  0E                 	db	14
   357   00F8F8  06                 	db	6
   358   00F8F9  00                 	db	0
   359   00F8FA  00                 	db	0
   360   00F8FB  00                 	db	0
   361   00F8FC  00                 	db	0
   362   00F8FD  00                 	db	0
   363   00F8FE  00                 	db	0
   364   00F8FF  00                 	db	0
   365   00F900  00                 	db	0
   366   00F901  00                 	db	0
   367   00F902  06                 	db	6
   368   00F903  5F                 	db	95
   369   00F904  5F                 	db	95
   370   00F905  06                 	db	6
   371   00F906  00                 	db	0
   372   00F907  00                 	db	0
   373   00F908  00                 	db	0
   374   00F909  00                 	db	0
   375   00F90A  07                 	db	7
   376   00F90B  07                 	db	7
   377   00F90C  00                 	db	0
   378   00F90D  07                 	db	7
   379   00F90E  07                 	db	7
   380   00F90F  00                 	db	0
   381   00F910  00                 	db	0
   382   00F911  14                 	db	20
   383   00F912  7F                 	db	127
   384   00F913  7F                 	db	127
   385   00F914  14                 	db	20
   386   00F915  7F                 	db	127
   387   00F916  7F                 	db	127
   388   00F917  14                 	db	20
   389   00F918  00                 	db	0
   390   00F919  24                 	db	36
   391   00F91A  2E                 	db	46
   392   00F91B  6B                 	db	107
   393   00F91C  6B                 	db	107
   394   00F91D  3A                 	db	58
   395   00F91E  12                 	db	18
   396   00F91F  00                 	db	0
   397   00F920  00                 	db	0
   398   00F921  46                 	db	70
   399   00F922  66                 	db	102
   400   00F923  30                 	db	48
   401   00F924  18                 	db	24
   402   00F925  0C                 	db	12
   403   00F926  66                 	db	102
   404   00F927  62                 	db	98
   405   00F928  00                 	db	0
   406   00F929  30                 	db	48
   407   00F92A  7A                 	db	122
   408   00F92B  4F                 	db	79
   409   00F92C  5D                 	db	93
   410   00F92D  37                 	db	55
   411   00F92E  7A                 	db	122
   412   00F92F  48                 	db	72
   413   00F930  00                 	db	0
   414   00F931  04                 	db	4
   415   00F932  07                 	db	7
   416   00F933  03                 	db	3
   417   00F934  00                 	db	0
   418   00F935  00                 	db	0
   419   00F936  00                 	db	0
   420   00F937  00                 	db	0
   421   00F938  00                 	db	0
   422   00F939  00                 	db	0
   423   00F93A  1C                 	db	28
   424   00F93B  3E                 	db	62
   425   00F93C  63                 	db	99
   426   00F93D  41                 	db	65
   427   00F93E  00                 	db	0
   428   00F93F  00                 	db	0
   429   00F940  00                 	db	0
   430   00F941  00                 	db	0
   431   00F942  41                 	db	65
   432   00F943  63                 	db	99
   433   00F944  3E                 	db	62
   434   00F945  1C                 	db	28
   435   00F946  00                 	db	0
   436   00F947  00                 	db	0
   437   00F948  00                 	db	0
   438   00F949  08                 	db	8
   439   00F94A  2A                 	db	42
   440   00F94B  3E                 	db	62
   441   00F94C  1C                 	db	28
   442   00F94D  1C                 	db	28
   443   00F94E  3E                 	db	62
   444   00F94F  2A                 	db	42
   445   00F950  08                 	db	8
   446   00F951  08                 	db	8
   447   00F952  08                 	db	8
   448   00F953  3E                 	db	62
   449   00F954  3E                 	db	62
   450   00F955  08                 	db	8
   451   00F956  08                 	db	8
   452   00F957  00                 	db	0
   453   00F958  00                 	db	0
   454   00F959  00                 	db	0
   455   00F95A  80                 	db	128
   456   00F95B  E0                 	db	224
   457   00F95C  60                 	db	96
   458   00F95D  00                 	db	0
   459   00F95E  00                 	db	0
   460   00F95F  00                 	db	0
   461   00F960  00                 	db	0
   462   00F961  08                 	db	8
   463   00F962  08                 	db	8
   464   00F963  08                 	db	8
   465   00F964  08                 	db	8
   466   00F965  08                 	db	8
   467   00F966  08                 	db	8
   468   00F967  00                 	db	0
   469   00F968  00                 	db	0
   470   00F969  00                 	db	0
   471   00F96A  00                 	db	0
   472   00F96B  60                 	db	96
   473   00F96C  60                 	db	96
   474   00F96D  00                 	db	0
   475   00F96E  00                 	db	0
   476   00F96F  00                 	db	0
   477   00F970  00                 	db	0
   478   00F971  60                 	db	96
   479   00F972  30                 	db	48
   480   00F973  18                 	db	24
   481   00F974  0C                 	db	12
   482   00F975  06                 	db	6
   483   00F976  03                 	db	3
   484   00F977  01                 	db	1
   485   00F978  00                 	db	0
   486   00F979  3E                 	db	62
   487   00F97A  7F                 	db	127
   488   00F97B  71                 	db	113
   489   00F97C  59                 	db	89
   490   00F97D  4D                 	db	77
   491   00F97E  7F                 	db	127
   492   00F97F  3E                 	db	62
   493   00F980  00                 	db	0
   494   00F981  40                 	db	64
   495   00F982  42                 	db	66
   496   00F983  7F                 	db	127
   497   00F984  7F                 	db	127
   498   00F985  40                 	db	64
   499   00F986  40                 	db	64
   500   00F987  00                 	db	0
   501   00F988  00                 	db	0
   502   00F989  62                 	db	98
   503   00F98A  73                 	db	115
   504   00F98B  59                 	db	89
   505   00F98C  49                 	db	73
   506   00F98D  6F                 	db	111
   507   00F98E  66                 	db	102
   508   00F98F  00                 	db	0
   509   00F990  00                 	db	0
   510   00F991  22                 	db	34
   511   00F992  63                 	db	99
   512   00F993  49                 	db	73
   513   00F994  49                 	db	73
   514   00F995  7F                 	db	127
   515   00F996  36                 	db	54
   516   00F997  00                 	db	0
   517   00F998  00                 	db	0
   518   00F999  18                 	db	24
   519   00F99A  1C                 	db	28
   520   00F99B  16                 	db	22
   521   00F99C  53                 	db	83
   522   00F99D  7F                 	db	127
   523   00F99E  7F                 	db	127
   524   00F99F  50                 	db	80
   525   00F9A0  00                 	db	0
   526   00F9A1  27                 	db	39
   527   00F9A2  67                 	db	103
   528   00F9A3  45                 	db	69
   529   00F9A4  45                 	db	69
   530   00F9A5  7D                 	db	125
   531   00F9A6  39                 	db	57
   532   00F9A7  00                 	db	0
   533   00F9A8  00                 	db	0
   534   00F9A9  3C                 	db	60
   535   00F9AA  7E                 	db	126
   536   00F9AB  4B                 	db	75
   537   00F9AC  49                 	db	73
   538   00F9AD  79                 	db	121
   539   00F9AE  30                 	db	48
   540   00F9AF  00                 	db	0
   541   00F9B0  00                 	db	0
   542   00F9B1  03                 	db	3
   543   00F9B2  03                 	db	3
   544   00F9B3  71                 	db	113
   545   00F9B4  79                 	db	121
   546   00F9B5  0F                 	db	15
   547   00F9B6  07                 	db	7
   548   00F9B7  00                 	db	0
   549   00F9B8  00                 	db	0
   550   00F9B9  36                 	db	54
   551   00F9BA  7F                 	db	127
   552   00F9BB  49                 	db	73
   553   00F9BC  49                 	db	73
   554   00F9BD  7F                 	db	127
   555   00F9BE  36                 	db	54
   556   00F9BF  00                 	db	0
   557   00F9C0  00                 	db	0
   558   00F9C1  06                 	db	6
   559   00F9C2  4F                 	db	79
   560   00F9C3  49                 	db	73
   561   00F9C4  69                 	db	105
   562   00F9C5  3F                 	db	63
   563   00F9C6  1E                 	db	30
   564   00F9C7  00                 	db	0
   565   00F9C8  00                 	db	0
   566   00F9C9  00                 	db	0
   567   00F9CA  00                 	db	0
   568   00F9CB  66                 	db	102
   569   00F9CC  66                 	db	102
   570   00F9CD  00                 	db	0
   571   00F9CE  00                 	db	0
   572   00F9CF  00                 	db	0
   573   00F9D0  00                 	db	0
   574   00F9D1  00                 	db	0
   575   00F9D2  80                 	db	128
   576   00F9D3  E6                 	db	230
   577   00F9D4  66                 	db	102
   578   00F9D5  00                 	db	0
   579   00F9D6  00                 	db	0
   580   00F9D7  00                 	db	0
   581   00F9D8  00                 	db	0
   582   00F9D9  08                 	db	8
   583   00F9DA  1C                 	db	28
   584   00F9DB  36                 	db	54
   585   00F9DC  63                 	db	99
   586   00F9DD  41                 	db	65
   587   00F9DE  00                 	db	0
   588   00F9DF  00                 	db	0
   589   00F9E0  00                 	db	0
   590   00F9E1  24                 	db	36
   591   00F9E2  24                 	db	36
   592   00F9E3  24                 	db	36
   593   00F9E4  24                 	db	36
   594   00F9E5  24                 	db	36
   595   00F9E6  24                 	db	36
   596   00F9E7  00                 	db	0
   597   00F9E8  00                 	db	0
   598   00F9E9  00                 	db	0
   599   00F9EA  41                 	db	65
   600   00F9EB  63                 	db	99
   601   00F9EC  36                 	db	54
   602   00F9ED  1C                 	db	28
   603   00F9EE  08                 	db	8
   604   00F9EF  00                 	db	0
   605   00F9F0  00                 	db	0
   606   00F9F1  02                 	db	2
   607   00F9F2  03                 	db	3
   608   00F9F3  51                 	db	81
   609   00F9F4  59                 	db	89
   610   00F9F5  0F                 	db	15
   611   00F9F6  06                 	db	6
   612   00F9F7  00                 	db	0
   613   00F9F8  00                 	db	0
   614   00F9F9  3E                 	db	62
   615   00F9FA  7F                 	db	127
   616   00F9FB  41                 	db	65
   617   00F9FC  5D                 	db	93
   618   00F9FD  5D                 	db	93
   619   00F9FE  1F                 	db	31
   620   00F9FF  1E                 	db	30
   621   00FA00  00                 	db	0
   622   00FA01  7C                 	db	124
   623   00FA02  7E                 	db	126
   624   00FA03  13                 	db	19
   625   00FA04  13                 	db	19
   626   00FA05  7E                 	db	126
   627   00FA06  7C                 	db	124
   628   00FA07  00                 	db	0
   629   00FA08  00                 	db	0
   630   00FA09  41                 	db	65
   631   00FA0A  7F                 	db	127
   632   00FA0B  7F                 	db	127
   633   00FA0C  49                 	db	73
   634   00FA0D  49                 	db	73
   635   00FA0E  7F                 	db	127
   636   00FA0F  36                 	db	54
   637   00FA10  00                 	db	0
   638   00FA11  1C                 	db	28
   639   00FA12  3E                 	db	62
   640   00FA13  63                 	db	99
   641   00FA14  41                 	db	65
   642   00FA15  41                 	db	65
   643   00FA16  63                 	db	99
   644   00FA17  22                 	db	34
   645   00FA18  00                 	db	0
   646   00FA19  41                 	db	65
   647   00FA1A  7F                 	db	127
   648   00FA1B  7F                 	db	127
   649   00FA1C  41                 	db	65
   650   00FA1D  63                 	db	99
   651   00FA1E  3E                 	db	62
   652   00FA1F  1C                 	db	28
   653   00FA20  00                 	db	0
   654   00FA21  41                 	db	65
   655   00FA22  7F                 	db	127
   656   00FA23  7F                 	db	127
   657   00FA24  49                 	db	73
   658   00FA25  5D                 	db	93
   659   00FA26  41                 	db	65
   660   00FA27  63                 	db	99
   661   00FA28  00                 	db	0
   662   00FA29  41                 	db	65
   663   00FA2A  7F                 	db	127
   664   00FA2B  7F                 	db	127
   665   00FA2C  49                 	db	73
   666   00FA2D  1D                 	db	29
   667   00FA2E  01                 	db	1
   668   00FA2F  03                 	db	3
   669   00FA30  00                 	db	0
   670   00FA31  1C                 	db	28
   671   00FA32  3E                 	db	62
   672   00FA33  63                 	db	99
   673   00FA34  41                 	db	65
   674   00FA35  51                 	db	81
   675   00FA36  73                 	db	115
   676   00FA37  72                 	db	114
   677   00FA38  00                 	db	0
   678   00FA39  7F                 	db	127
   679   00FA3A  7F                 	db	127
   680   00FA3B  08                 	db	8
   681   00FA3C  08                 	db	8
   682   00FA3D  7F                 	db	127
   683   00FA3E  7F                 	db	127
   684   00FA3F  00                 	db	0
   685   00FA40  00                 	db	0
   686   00FA41  00                 	db	0
   687   00FA42  41                 	db	65
   688   00FA43  7F                 	db	127
   689   00FA44  7F                 	db	127
   690   00FA45  41                 	db	65
   691   00FA46  00                 	db	0
   692   00FA47  00                 	db	0
   693   00FA48  00                 	db	0
   694   00FA49  30                 	db	48
   695   00FA4A  70                 	db	112
   696   00FA4B  40                 	db	64
   697   00FA4C  41                 	db	65
   698   00FA4D  7F                 	db	127
   699   00FA4E  3F                 	db	63
   700   00FA4F  01                 	db	1
   701   00FA50  00                 	db	0
   702   00FA51  41                 	db	65
   703   00FA52  7F                 	db	127
   704   00FA53  7F                 	db	127
   705   00FA54  08                 	db	8
   706   00FA55  1C                 	db	28
   707   00FA56  77                 	db	119
   708   00FA57  63                 	db	99
   709   00FA58  00                 	db	0
   710   00FA59  41                 	db	65
   711   00FA5A  7F                 	db	127
   712   00FA5B  7F                 	db	127
   713   00FA5C  41                 	db	65
   714   00FA5D  40                 	db	64
   715   00FA5E  60                 	db	96
   716   00FA5F  70                 	db	112
   717   00FA60  00                 	db	0
   718   00FA61  00                 	db	0
   719   00FA62  7F                 	db	127
   720   00FA63  0E                 	db	14
   721   00FA64  1C                 	db	28
   722   00FA65  0E                 	db	14
   723   00FA66  7F                 	db	127
   724   00FA67  00                 	db	0
   725   00FA68  00                 	db	0
   726   00FA69  7F                 	db	127
   727   00FA6A  7F                 	db	127
   728   00FA6B  06                 	db	6
   729   00FA6C  0C                 	db	12
   730   00FA6D  18                 	db	24
   731   00FA6E  7F                 	db	127
   732   00FA6F  7F                 	db	127
   733   00FA70  00                 	db	0
   734   00FA71  1C                 	db	28
   735   00FA72  3E                 	db	62
   736   00FA73  63                 	db	99
   737   00FA74  41                 	db	65
   738   00FA75  63                 	db	99
   739   00FA76  3E                 	db	62
   740   00FA77  1C                 	db	28
   741   00FA78  00                 	db	0
   742   00FA79  41                 	db	65
   743   00FA7A  7F                 	db	127
   744   00FA7B  7F                 	db	127
   745   00FA7C  49                 	db	73
   746   00FA7D  09                 	db	9
   747   00FA7E  0F                 	db	15
   748   00FA7F  06                 	db	6
   749   00FA80  00                 	db	0
   750   00FA81  1E                 	db	30
   751   00FA82  3F                 	db	63
   752   00FA83  21                 	db	33
   753   00FA84  71                 	db	113
   754   00FA85  7F                 	db	127
   755   00FA86  5E                 	db	94
   756   00FA87  00                 	db	0
   757   00FA88  00                 	db	0
   758   00FA89  41                 	db	65
   759   00FA8A  7F                 	db	127
   760   00FA8B  7F                 	db	127
   761   00FA8C  09                 	db	9
   762   00FA8D  19                 	db	25
   763   00FA8E  7F                 	db	127
   764   00FA8F  66                 	db	102
   765   00FA90  00                 	db	0
   766   00FA91  26                 	db	38
   767   00FA92  6F                 	db	111
   768   00FA93  4D                 	db	77
   769   00FA94  59                 	db	89
   770   00FA95  73                 	db	115
   771   00FA96  32                 	db	50
   772   00FA97  00                 	db	0
   773   00FA98  00                 	db	0
   774   00FA99  03                 	db	3
   775   00FA9A  41                 	db	65
   776   00FA9B  7F                 	db	127
   777   00FA9C  7F                 	db	127
   778   00FA9D  41                 	db	65
   779   00FA9E  03                 	db	3
   780   00FA9F  00                 	db	0
   781   00FAA0  00                 	db	0
   782   00FAA1  7F                 	db	127
   783   00FAA2  7F                 	db	127
   784   00FAA3  40                 	db	64
   785   00FAA4  40                 	db	64
   786   00FAA5  7F                 	db	127
   787   00FAA6  7F                 	db	127
   788   00FAA7  00                 	db	0
   789   00FAA8  00                 	db	0
   790   00FAA9  1F                 	db	31
   791   00FAAA  3F                 	db	63
   792   00FAAB  60                 	db	96
   793   00FAAC  60                 	db	96
   794   00FAAD  3F                 	db	63
   795   00FAAE  1F                 	db	31
   796   00FAAF  00                 	db	0
   797   00FAB0  00                 	db	0
   798   00FAB1  7F                 	db	127
   799   00FAB2  7F                 	db	127
   800   00FAB3  30                 	db	48
   801   00FAB4  18                 	db	24
   802   00FAB5  30                 	db	48
   803   00FAB6  7F                 	db	127
   804   00FAB7  7F                 	db	127
   805   00FAB8  00                 	db	0
   806   00FAB9  43                 	db	67
   807   00FABA  67                 	db	103
   808   00FABB  3C                 	db	60
   809   00FABC  18                 	db	24
   810   00FABD  3C                 	db	60
   811   00FABE  67                 	db	103
   812   00FABF  43                 	db	67
   813   00FAC0  00                 	db	0
   814   00FAC1  07                 	db	7
   815   00FAC2  4F                 	db	79
   816   00FAC3  78                 	db	120
   817   00FAC4  78                 	db	120
   818   00FAC5  4F                 	db	79
   819   00FAC6  07                 	db	7
   820   00FAC7  00                 	db	0
   821   00FAC8  00                 	db	0
   822   00FAC9  47                 	db	71
   823   00FACA  63                 	db	99
   824   00FACB  71                 	db	113
   825   00FACC  59                 	db	89
   826   00FACD  4D                 	db	77
   827   00FACE  67                 	db	103
   828   00FACF  73                 	db	115
   829   00FAD0  00                 	db	0
   830   00FAD1  00                 	db	0
   831   00FAD2  7F                 	db	127
   832   00FAD3  7F                 	db	127
   833   00FAD4  41                 	db	65
   834   00FAD5  41                 	db	65
   835   00FAD6  00                 	db	0
   836   00FAD7  00                 	db	0
   837   00FAD8  00                 	db	0
   838   00FAD9  01                 	db	1
   839   00FADA  03                 	db	3
   840   00FADB  06                 	db	6
   841   00FADC  0C                 	db	12
   842   00FADD  18                 	db	24
   843   00FADE  30                 	db	48
   844   00FADF  60                 	db	96
   845   00FAE0  00                 	db	0
   846   00FAE1  00                 	db	0
   847   00FAE2  41                 	db	65
   848   00FAE3  41                 	db	65
   849   00FAE4  7F                 	db	127
   850   00FAE5  7F                 	db	127
   851   00FAE6  00                 	db	0
   852   00FAE7  00                 	db	0
   853   00FAE8  00                 	db	0
   854   00FAE9  08                 	db	8
   855   00FAEA  0C                 	db	12
   856   00FAEB  06                 	db	6
   857   00FAEC  03                 	db	3
   858   00FAED  06                 	db	6
   859   00FAEE  0C                 	db	12
   860   00FAEF  08                 	db	8
   861   00FAF0  00                 	db	0
   862   00FAF1  80                 	db	128
   863   00FAF2  80                 	db	128
   864   00FAF3  80                 	db	128
   865   00FAF4  80                 	db	128
   866   00FAF5  80                 	db	128
   867   00FAF6  80                 	db	128
   868   00FAF7  80                 	db	128
   869   00FAF8  80                 	db	128
   870   00FAF9  00                 	db	0
   871   00FAFA  00                 	db	0
   872   00FAFB  03                 	db	3
   873   00FAFC  07                 	db	7
   874   00FAFD  04                 	db	4
   875   00FAFE  00                 	db	0
   876   00FAFF  00                 	db	0
   877   00FB00  00                 	db	0
   878   00FB01  20                 	db	32
   879   00FB02  74                 	db	116
   880   00FB03  54                 	db	84
   881   00FB04  54                 	db	84
   882   00FB05  3C                 	db	60
   883   00FB06  78                 	db	120
   884   00FB07  40                 	db	64
   885   00FB08  00                 	db	0
   886   00FB09  41                 	db	65
   887   00FB0A  7F                 	db	127
   888   00FB0B  3F                 	db	63
   889   00FB0C  48                 	db	72
   890   00FB0D  48                 	db	72
   891   00FB0E  78                 	db	120
   892   00FB0F  30                 	db	48
   893   00FB10  00                 	db	0
   894   00FB11  38                 	db	56
   895   00FB12  7C                 	db	124
   896   00FB13  44                 	db	68
   897   00FB14  44                 	db	68
   898   00FB15  6C                 	db	108
   899   00FB16  28                 	db	40
   900   00FB17  00                 	db	0
   901   00FB18  00                 	db	0
   902   00FB19  30                 	db	48
   903   00FB1A  78                 	db	120
   904   00FB1B  48                 	db	72
   905   00FB1C  49                 	db	73
   906   00FB1D  3F                 	db	63
   907   00FB1E  7F                 	db	127
   908   00FB1F  40                 	db	64
   909   00FB20  00                 	db	0
   910   00FB21  38                 	db	56
   911   00FB22  7C                 	db	124
   912   00FB23  54                 	db	84
   913   00FB24  54                 	db	84
   914   00FB25  5C                 	db	92
   915   00FB26  18                 	db	24
   916   00FB27  00                 	db	0
   917   00FB28  00                 	db	0
   918   00FB29  48                 	db	72
   919   00FB2A  7E                 	db	126
   920   00FB2B  7F                 	db	127
   921   00FB2C  49                 	db	73
   922   00FB2D  03                 	db	3
   923   00FB2E  02                 	db	2
   924   00FB2F  00                 	db	0
   925   00FB30  00                 	db	0
   926   00FB31  98                 	db	152
   927   00FB32  BC                 	db	188
   928   00FB33  A4                 	db	164
   929   00FB34  A4                 	db	164
   930   00FB35  F8                 	db	248
   931   00FB36  7C                 	db	124
   932   00FB37  04                 	db	4
   933   00FB38  00                 	db	0
   934   00FB39  41                 	db	65
   935   00FB3A  7F                 	db	127
   936   00FB3B  7F                 	db	127
   937   00FB3C  08                 	db	8
   938   00FB3D  04                 	db	4
   939   00FB3E  7C                 	db	124
   940   00FB3F  78                 	db	120
   941   00FB40  00                 	db	0
   942   00FB41  00                 	db	0
   943   00FB42  44                 	db	68
   944   00FB43  7D                 	db	125
   945   00FB44  7D                 	db	125
   946   00FB45  40                 	db	64
   947   00FB46  00                 	db	0
   948   00FB47  00                 	db	0
   949   00FB48  00                 	db	0
   950   00FB49  60                 	db	96
   951   00FB4A  E0                 	db	224
   952   00FB4B  80                 	db	128
   953   00FB4C  80                 	db	128
   954   00FB4D  FD                 	db	253
   955   00FB4E  7D                 	db	125
   956   00FB4F  00                 	db	0
   957   00FB50  00                 	db	0
   958   00FB51  41                 	db	65
   959   00FB52  7F                 	db	127
   960   00FB53  7F                 	db	127
   961   00FB54  10                 	db	16
   962   00FB55  38                 	db	56
   963   00FB56  6C                 	db	108
   964   00FB57  44                 	db	68
   965   00FB58  00                 	db	0
   966   00FB59  00                 	db	0
   967   00FB5A  41                 	db	65
   968   00FB5B  7F                 	db	127
   969   00FB5C  7F                 	db	127
   970   00FB5D  40                 	db	64
   971   00FB5E  00                 	db	0
   972   00FB5F  00                 	db	0
   973   00FB60  00                 	db	0
   974   00FB61  7C                 	db	124
   975   00FB62  7C                 	db	124
   976   00FB63  18                 	db	24
   977   00FB64  38                 	db	56
   978   00FB65  1C                 	db	28
   979   00FB66  7C                 	db	124
   980   00FB67  78                 	db	120
   981   00FB68  00                 	db	0
   982   00FB69  7C                 	db	124
   983   00FB6A  7C                 	db	124
   984   00FB6B  04                 	db	4
   985   00FB6C  04                 	db	4
   986   00FB6D  7C                 	db	124
   987   00FB6E  78                 	db	120
   988   00FB6F  00                 	db	0
   989   00FB70  00                 	db	0
   990   00FB71  38                 	db	56
   991   00FB72  7C                 	db	124
   992   00FB73  44                 	db	68
   993   00FB74  44                 	db	68
   994   00FB75  7C                 	db	124
   995   00FB76  38                 	db	56
   996   00FB77  00                 	db	0
   997   00FB78  00                 	db	0
   998   00FB79  84                 	db	132
   999   00FB7A  FC                 	db	252
  1000   00FB7B  F8                 	db	248
  1001   00FB7C  A4                 	db	164
  1002   00FB7D  24                 	db	36
  1003   00FB7E  3C                 	db	60
  1004   00FB7F  18                 	db	24
  1005   00FB80  00                 	db	0
  1006   00FB81  18                 	db	24
  1007   00FB82  3C                 	db	60
  1008   00FB83  24                 	db	36
  1009   00FB84  A4                 	db	164
  1010   00FB85  F8                 	db	248
  1011   00FB86  FC                 	db	252
  1012   00FB87  84                 	db	132
  1013   00FB88  00                 	db	0
  1014   00FB89  44                 	db	68
  1015   00FB8A  7C                 	db	124
  1016   00FB8B  78                 	db	120
  1017   00FB8C  4C                 	db	76
  1018   00FB8D  04                 	db	4
  1019   00FB8E  1C                 	db	28
  1020   00FB8F  18                 	db	24
  1021   00FB90  00                 	db	0
  1022   00FB91  48                 	db	72
  1023   00FB92  5C                 	db	92
  1024   00FB93  54                 	db	84
  1025   00FB94  54                 	db	84
  1026   00FB95  74                 	db	116
  1027   00FB96  24                 	db	36
  1028   00FB97  00                 	db	0
  1029   00FB98  00                 	db	0
  1030   00FB99  00                 	db	0
  1031   00FB9A  04                 	db	4
  1032   00FB9B  3E                 	db	62
  1033   00FB9C  7F                 	db	127
  1034   00FB9D  44                 	db	68
  1035   00FB9E  24                 	db	36
  1036   00FB9F  00                 	db	0
  1037   00FBA0  00                 	db	0
  1038   00FBA1  3C                 	db	60
  1039   00FBA2  7C                 	db	124
  1040   00FBA3  40                 	db	64
  1041   00FBA4  40                 	db	64
  1042   00FBA5  3C                 	db	60
  1043   00FBA6  7C                 	db	124
  1044   00FBA7  40                 	db	64
  1045   00FBA8  00                 	db	0
  1046   00FBA9  1C                 	db	28
  1047   00FBAA  3C                 	db	60
  1048   00FBAB  60                 	db	96
  1049   00FBAC  60                 	db	96
  1050   00FBAD  3C                 	db	60
  1051   00FBAE  1C                 	db	28
  1052   00FBAF  00                 	db	0
  1053   00FBB0  00                 	db	0
  1054   00FBB1  3C                 	db	60
  1055   00FBB2  7C                 	db	124
  1056   00FBB3  70                 	db	112
  1057   00FBB4  38                 	db	56
  1058   00FBB5  70                 	db	112
  1059   00FBB6  7C                 	db	124
  1060   00FBB7  3C                 	db	60
  1061   00FBB8  00                 	db	0
  1062   00FBB9  44                 	db	68
  1063   00FBBA  6C                 	db	108
  1064   00FBBB  38                 	db	56
  1065   00FBBC  10                 	db	16
  1066   00FBBD  38                 	db	56
  1067   00FBBE  6C                 	db	108
  1068   00FBBF  44                 	db	68
  1069   00FBC0  00                 	db	0
  1070   00FBC1  9C                 	db	156
  1071   00FBC2  BC                 	db	188
  1072   00FBC3  A0                 	db	160
  1073   00FBC4  A0                 	db	160
  1074   00FBC5  FC                 	db	252
  1075   00FBC6  7C                 	db	124
  1076   00FBC7  00                 	db	0
  1077   00FBC8  00                 	db	0
  1078   00FBC9  4C                 	db	76
  1079   00FBCA  64                 	db	100
  1080   00FBCB  74                 	db	116
  1081   00FBCC  5C                 	db	92
  1082   00FBCD  4C                 	db	76
  1083   00FBCE  64                 	db	100
  1084   00FBCF  00                 	db	0
  1085   00FBD0  00                 	db	0
  1086   00FBD1  08                 	db	8
  1087   00FBD2  08                 	db	8
  1088   00FBD3  3E                 	db	62
  1089   00FBD4  77                 	db	119
  1090   00FBD5  41                 	db	65
  1091   00FBD6  41                 	db	65
  1092   00FBD7  00                 	db	0
  1093   00FBD8  00                 	db	0
  1094   00FBD9  00                 	db	0
  1095   00FBDA  00                 	db	0
  1096   00FBDB  00                 	db	0
  1097   00FBDC  77                 	db	119
  1098   00FBDD  77                 	db	119
  1099   00FBDE  00                 	db	0
  1100   00FBDF  00                 	db	0
  1101   00FBE0  00                 	db	0
  1102   00FBE1  41                 	db	65
  1103   00FBE2  41                 	db	65
  1104   00FBE3  77                 	db	119
  1105   00FBE4  3E                 	db	62
  1106   00FBE5  08                 	db	8
  1107   00FBE6  08                 	db	8
  1108   00FBE7  00                 	db	0
  1109   00FBE8  00                 	db	0
  1110   00FBE9  02                 	db	2
  1111   00FBEA  03                 	db	3
  1112   00FBEB  01                 	db	1
  1113   00FBEC  03                 	db	3
  1114   00FBED  02                 	db	2
  1115   00FBEE  03                 	db	3
  1116   00FBEF  01                 	db	1
  1117   00FBF0  00                 	db	0
  1118   00FBF1  70                 	db	112
  1119   00FBF2  78                 	db	120
  1120   00FBF3  4C                 	db	76
  1121   00FBF4  46                 	db	70
  1122   00FBF5  4C                 	db	76
  1123   00FBF6  78                 	db	120
  1124   00FBF7  70                 	db	112
  1125   00FBF8  00                 	db	0
  1126   00FBF9  0E                 	db	14
  1127   00FBFA  9F                 	db	159
  1128   00FBFB  91                 	db	145
  1129   00FBFC  B1                 	db	177
  1130   00FBFD  FB                 	db	251
  1131   00FBFE  4A                 	db	74
  1132   00FBFF  00                 	db	0
  1133   00FC00  00                 	db	0
  1134   00FC01  3A                 	db	58
  1135   00FC02  7A                 	db	122
  1136   00FC03  40                 	db	64
  1137   00FC04  40                 	db	64
  1138   00FC05  7A                 	db	122
  1139   00FC06  7A                 	db	122
  1140   00FC07  40                 	db	64
  1141   00FC08  00                 	db	0
  1142   00FC09  38                 	db	56
  1143   00FC0A  7C                 	db	124
  1144   00FC0B  54                 	db	84
  1145   00FC0C  55                 	db	85
  1146   00FC0D  5D                 	db	93
  1147   00FC0E  19                 	db	25
  1148   00FC0F  00                 	db	0
  1149   00FC10  00                 	db	0
  1150   00FC11  02                 	db	2
  1151   00FC12  23                 	db	35
  1152   00FC13  75                 	db	117
  1153   00FC14  55                 	db	85
  1154   00FC15  55                 	db	85
  1155   00FC16  7D                 	db	125
  1156   00FC17  7B                 	db	123
  1157   00FC18  42                 	db	66
  1158   00FC19  21                 	db	33
  1159   00FC1A  75                 	db	117
  1160   00FC1B  54                 	db	84
  1161   00FC1C  54                 	db	84
  1162   00FC1D  7D                 	db	125
  1163   00FC1E  79                 	db	121
  1164   00FC1F  40                 	db	64
  1165   00FC20  00                 	db	0
  1166   00FC21  21                 	db	33
  1167   00FC22  75                 	db	117
  1168   00FC23  55                 	db	85
  1169   00FC24  54                 	db	84
  1170   00FC25  7C                 	db	124
  1171   00FC26  78                 	db	120
  1172   00FC27  40                 	db	64
  1173   00FC28  00                 	db	0
  1174   00FC29  20                 	db	32
  1175   00FC2A  74                 	db	116
  1176   00FC2B  57                 	db	87
  1177   00FC2C  57                 	db	87
  1178   00FC2D  7C                 	db	124
  1179   00FC2E  78                 	db	120
  1180   00FC2F  40                 	db	64
  1181   00FC30  00                 	db	0
  1182   00FC31  18                 	db	24
  1183   00FC32  3C                 	db	60
  1184   00FC33  A4                 	db	164
  1185   00FC34  A4                 	db	164
  1186   00FC35  E4                 	db	228
  1187   00FC36  40                 	db	64
  1188   00FC37  00                 	db	0
  1189   00FC38  00                 	db	0
  1190   00FC39  02                 	db	2
  1191   00FC3A  3B                 	db	59
  1192   00FC3B  7D                 	db	125
  1193   00FC3C  55                 	db	85
  1194   00FC3D  55                 	db	85
  1195   00FC3E  5D                 	db	93
  1196   00FC3F  1B                 	db	27
  1197   00FC40  02                 	db	2
  1198   00FC41  39                 	db	57
  1199   00FC42  7D                 	db	125
  1200   00FC43  54                 	db	84
  1201   00FC44  54                 	db	84
  1202   00FC45  5D                 	db	93
  1203   00FC46  19                 	db	25
  1204   00FC47  00                 	db	0
  1205   00FC48  00                 	db	0
  1206   00FC49  39                 	db	57
  1207   00FC4A  7D                 	db	125
  1208   00FC4B  55                 	db	85
  1209   00FC4C  54                 	db	84
  1210   00FC4D  5C                 	db	92
  1211   00FC4E  18                 	db	24
  1212   00FC4F  00                 	db	0
  1213   00FC50  00                 	db	0
  1214   00FC51  01                 	db	1
  1215   00FC52  45                 	db	69
  1216   00FC53  7C                 	db	124
  1217   00FC54  7C                 	db	124
  1218   00FC55  41                 	db	65
  1219   00FC56  01                 	db	1
  1220   00FC57  00                 	db	0
  1221   00FC58  00                 	db	0
  1222   00FC59  02                 	db	2
  1223   00FC5A  03                 	db	3
  1224   00FC5B  45                 	db	69
  1225   00FC5C  7D                 	db	125
  1226   00FC5D  7D                 	db	125
  1227   00FC5E  43                 	db	67
  1228   00FC5F  02                 	db	2
  1229   00FC60  00                 	db	0
  1230   00FC61  01                 	db	1
  1231   00FC62  45                 	db	69
  1232   00FC63  7D                 	db	125
  1233   00FC64  7C                 	db	124
  1234   00FC65  40                 	db	64
  1235   00FC66  00                 	db	0
  1236   00FC67  00                 	db	0
  1237   00FC68  00                 	db	0
  1238   00FC69  79                 	db	121
  1239   00FC6A  7D                 	db	125
  1240   00FC6B  16                 	db	22
  1241   00FC6C  12                 	db	18
  1242   00FC6D  16                 	db	22
  1243   00FC6E  7D                 	db	125
  1244   00FC6F  79                 	db	121
  1245   00FC70  00                 	db	0
  1246   00FC71  70                 	db	112
  1247   00FC72  78                 	db	120
  1248   00FC73  2B                 	db	43
  1249   00FC74  2B                 	db	43
  1250   00FC75  78                 	db	120
  1251   00FC76  70                 	db	112
  1252   00FC77  00                 	db	0
  1253   00FC78  00                 	db	0
  1254   00FC79  44                 	db	68
  1255   00FC7A  7C                 	db	124
  1256   00FC7B  7C                 	db	124
  1257   00FC7C  55                 	db	85
  1258   00FC7D  55                 	db	85
  1259   00FC7E  45                 	db	69
  1260   00FC7F  00                 	db	0
  1261   00FC80  00                 	db	0
  1262   00FC81  20                 	db	32
  1263   00FC82  74                 	db	116
  1264   00FC83  54                 	db	84
  1265   00FC84  54                 	db	84
  1266   00FC85  7C                 	db	124
  1267   00FC86  7C                 	db	124
  1268   00FC87  54                 	db	84
  1269   00FC88  54                 	db	84
  1270   00FC89  7C                 	db	124
  1271   00FC8A  7E                 	db	126
  1272   00FC8B  0B                 	db	11
  1273   00FC8C  09                 	db	9
  1274   00FC8D  7F                 	db	127
  1275   00FC8E  7F                 	db	127
  1276   00FC8F  49                 	db	73
  1277   00FC90  00                 	db	0
  1278   00FC91  32                 	db	50
  1279   00FC92  7B                 	db	123
  1280   00FC93  49                 	db	73
  1281   00FC94  49                 	db	73
  1282   00FC95  7B                 	db	123
  1283   00FC96  32                 	db	50
  1284   00FC97  00                 	db	0
  1285   00FC98  00                 	db	0
  1286   00FC99  32                 	db	50
  1287   00FC9A  7A                 	db	122
  1288   00FC9B  48                 	db	72
  1289   00FC9C  48                 	db	72
  1290   00FC9D  7A                 	db	122
  1291   00FC9E  32                 	db	50
  1292   00FC9F  00                 	db	0
  1293   00FCA0  00                 	db	0
  1294   00FCA1  32                 	db	50
  1295   00FCA2  7A                 	db	122
  1296   00FCA3  4A                 	db	74
  1297   00FCA4  48                 	db	72
  1298   00FCA5  78                 	db	120
  1299   00FCA6  30                 	db	48
  1300   00FCA7  00                 	db	0
  1301   00FCA8  00                 	db	0
  1302   00FCA9  3A                 	db	58
  1303   00FCAA  7B                 	db	123
  1304   00FCAB  41                 	db	65
  1305   00FCAC  41                 	db	65
  1306   00FCAD  7B                 	db	123
  1307   00FCAE  7A                 	db	122
  1308   00FCAF  40                 	db	64
  1309   00FCB0  00                 	db	0
  1310   00FCB1  3A                 	db	58
  1311   00FCB2  7A                 	db	122
  1312   00FCB3  42                 	db	66
  1313   00FCB4  40                 	db	64
  1314   00FCB5  78                 	db	120
  1315   00FCB6  78                 	db	120
  1316   00FCB7  40                 	db	64
  1317   00FCB8  00                 	db	0
  1318   00FCB9  9A                 	db	154
  1319   00FCBA  BA                 	db	186
  1320   00FCBB  A0                 	db	160
  1321   00FCBC  A0                 	db	160
  1322   00FCBD  FA                 	db	250
  1323   00FCBE  7A                 	db	122
  1324   00FCBF  00                 	db	0
  1325   00FCC0  00                 	db	0
  1326   00FCC1  01                 	db	1
  1327   00FCC2  19                 	db	25
  1328   00FCC3  3C                 	db	60
  1329   00FCC4  66                 	db	102
  1330   00FCC5  66                 	db	102
  1331   00FCC6  3C                 	db	60
  1332   00FCC7  19                 	db	25
  1333   00FCC8  01                 	db	1
  1334   00FCC9  3D                 	db	61
  1335   00FCCA  7D                 	db	125
  1336   00FCCB  40                 	db	64
  1337   00FCCC  40                 	db	64
  1338   00FCCD  7D                 	db	125
  1339   00FCCE  3D                 	db	61
  1340   00FCCF  00                 	db	0
  1341   00FCD0  00                 	db	0
  1342   00FCD1  18                 	db	24
  1343   00FCD2  3C                 	db	60
  1344   00FCD3  24                 	db	36
  1345   00FCD4  E7                 	db	231
  1346   00FCD5  E7                 	db	231
  1347   00FCD6  24                 	db	36
  1348   00FCD7  24                 	db	36
  1349   00FCD8  00                 	db	0
  1350   00FCD9  68                 	db	104
  1351   00FCDA  7E                 	db	126
  1352   00FCDB  7F                 	db	127
  1353   00FCDC  49                 	db	73
  1354   00FCDD  43                 	db	67
  1355   00FCDE  66                 	db	102
  1356   00FCDF  20                 	db	32
  1357   00FCE0  00                 	db	0
  1358   00FCE1  2B                 	db	43
  1359   00FCE2  2F                 	db	47
  1360   00FCE3  FC                 	db	252
  1361   00FCE4  FC                 	db	252
  1362   00FCE5  2F                 	db	47
  1363   00FCE6  2B                 	db	43
  1364   00FCE7  00                 	db	0
  1365   00FCE8  00                 	db	0
  1366   00FCE9  FF                 	db	255
  1367   00FCEA  FF                 	db	255
  1368   00FCEB  09                 	db	9
  1369   00FCEC  09                 	db	9
  1370   00FCED  2F                 	db	47
  1371   00FCEE  F6                 	db	246
  1372   00FCEF  F8                 	db	248
  1373   00FCF0  A0                 	db	160
  1374   00FCF1  40                 	db	64
  1375   00FCF2  C0                 	db	192
  1376   00FCF3  88                 	db	136
  1377   00FCF4  FE                 	db	254
  1378   00FCF5  7F                 	db	127
  1379   00FCF6  09                 	db	9
  1380   00FCF7  03                 	db	3
  1381   00FCF8  02                 	db	2
  1382   00FCF9  20                 	db	32
  1383   00FCFA  74                 	db	116
  1384   00FCFB  54                 	db	84
  1385   00FCFC  55                 	db	85
  1386   00FCFD  7D                 	db	125
  1387   00FCFE  79                 	db	121
  1388   00FCFF  40                 	db	64
  1389   00FD00  00                 	db	0
  1390   00FD01  00                 	db	0
  1391   00FD02  44                 	db	68
  1392   00FD03  7D                 	db	125
  1393   00FD04  7D                 	db	125
  1394   00FD05  41                 	db	65
  1395   00FD06  00                 	db	0
  1396   00FD07  00                 	db	0
  1397   00FD08  00                 	db	0
  1398   00FD09  30                 	db	48
  1399   00FD0A  78                 	db	120
  1400   00FD0B  48                 	db	72
  1401   00FD0C  4A                 	db	74
  1402   00FD0D  7A                 	db	122
  1403   00FD0E  32                 	db	50
  1404   00FD0F  00                 	db	0
  1405   00FD10  00                 	db	0
  1406   00FD11  38                 	db	56
  1407   00FD12  78                 	db	120
  1408   00FD13  40                 	db	64
  1409   00FD14  42                 	db	66
  1410   00FD15  7A                 	db	122
  1411   00FD16  7A                 	db	122
  1412   00FD17  40                 	db	64
  1413   00FD18  00                 	db	0
  1414   00FD19  7A                 	db	122
  1415   00FD1A  7A                 	db	122
  1416   00FD1B  0A                 	db	10
  1417   00FD1C  0A                 	db	10
  1418   00FD1D  7A                 	db	122
  1419   00FD1E  70                 	db	112
  1420   00FD1F  00                 	db	0
  1421   00FD20  00                 	db	0
  1422   00FD21  7D                 	db	125
  1423   00FD22  7D                 	db	125
  1424   00FD23  19                 	db	25
  1425   00FD24  31                 	db	49
  1426   00FD25  7D                 	db	125
  1427   00FD26  7D                 	db	125
  1428   00FD27  00                 	db	0
  1429   00FD28  00                 	db	0
  1430   00FD29  00                 	db	0
  1431   00FD2A  26                 	db	38
  1432   00FD2B  2F                 	db	47
  1433   00FD2C  29                 	db	41
  1434   00FD2D  2F                 	db	47
  1435   00FD2E  2F                 	db	47
  1436   00FD2F  28                 	db	40
  1437   00FD30  00                 	db	0
  1438   00FD31  00                 	db	0
  1439   00FD32  26                 	db	38
  1440   00FD33  2F                 	db	47
  1441   00FD34  29                 	db	41
  1442   00FD35  2F                 	db	47
  1443   00FD36  26                 	db	38
  1444   00FD37  00                 	db	0
  1445   00FD38  00                 	db	0
  1446   00FD39  30                 	db	48
  1447   00FD3A  78                 	db	120
  1448   00FD3B  4D                 	db	77
  1449   00FD3C  45                 	db	69
  1450   00FD3D  60                 	db	96
  1451   00FD3E  20                 	db	32
  1452   00FD3F  00                 	db	0
  1453   00FD40  00                 	db	0
  1454   00FD41  38                 	db	56
  1455   00FD42  38                 	db	56
  1456   00FD43  08                 	db	8
  1457   00FD44  08                 	db	8
  1458   00FD45  08                 	db	8
  1459   00FD46  08                 	db	8
  1460   00FD47  00                 	db	0
  1461   00FD48  00                 	db	0
  1462   00FD49  08                 	db	8
  1463   00FD4A  08                 	db	8
  1464   00FD4B  08                 	db	8
  1465   00FD4C  08                 	db	8
  1466   00FD4D  38                 	db	56
  1467   00FD4E  38                 	db	56
  1468   00FD4F  00                 	db	0
  1469   00FD50  00                 	db	0
  1470   00FD51  4F                 	db	79
  1471   00FD52  6F                 	db	111
  1472   00FD53  30                 	db	48
  1473   00FD54  18                 	db	24
  1474   00FD55  CC                 	db	204
  1475   00FD56  EE                 	db	238
  1476   00FD57  BB                 	db	187
  1477   00FD58  91                 	db	145
  1478   00FD59  4F                 	db	79
  1479   00FD5A  6F                 	db	111
  1480   00FD5B  30                 	db	48
  1481   00FD5C  18                 	db	24
  1482   00FD5D  6C                 	db	108
  1483   00FD5E  76                 	db	118
  1484   00FD5F  FB                 	db	251
  1485   00FD60  F9                 	db	249
  1486   00FD61  00                 	db	0
  1487   00FD62  00                 	db	0
  1488   00FD63  00                 	db	0
  1489   00FD64  7B                 	db	123
  1490   00FD65  7B                 	db	123
  1491   00FD66  00                 	db	0
  1492   00FD67  00                 	db	0
  1493   00FD68  00                 	db	0
  1494   00FD69  08                 	db	8
  1495   00FD6A  1C                 	db	28
  1496   00FD6B  36                 	db	54
  1497   00FD6C  22                 	db	34
  1498   00FD6D  08                 	db	8
  1499   00FD6E  1C                 	db	28
  1500   00FD6F  36                 	db	54
  1501   00FD70  22                 	db	34
  1502   00FD71  22                 	db	34
  1503   00FD72  36                 	db	54
  1504   00FD73  1C                 	db	28
  1505   00FD74  08                 	db	8
  1506   00FD75  22                 	db	34
  1507   00FD76  36                 	db	54
  1508   00FD77  1C                 	db	28
  1509   00FD78  08                 	db	8
  1510   00FD79  AA                 	db	170
  1511   00FD7A  00                 	db	0
  1512   00FD7B  55                 	db	85
  1513   00FD7C  00                 	db	0
  1514   00FD7D  AA                 	db	170
  1515   00FD7E  00                 	db	0
  1516   00FD7F  55                 	db	85
  1517   00FD80  00                 	db	0
  1518   00FD81  AA                 	db	170
  1519   00FD82  55                 	db	85
  1520   00FD83  AA                 	db	170
  1521   00FD84  55                 	db	85
  1522   00FD85  AA                 	db	170
  1523   00FD86  55                 	db	85
  1524   00FD87  AA                 	db	170
  1525   00FD88  55                 	db	85
  1526   00FD89  DD                 	db	221
  1527   00FD8A  FF                 	db	255
  1528   00FD8B  AA                 	db	170
  1529   00FD8C  77                 	db	119
  1530   00FD8D  DD                 	db	221
  1531   00FD8E  AA                 	db	170
  1532   00FD8F  FF                 	db	255
  1533   00FD90  77                 	db	119
  1534   00FD91  00                 	db	0
  1535   00FD92  00                 	db	0
  1536   00FD93  00                 	db	0
  1537   00FD94  FF                 	db	255
  1538   00FD95  FF                 	db	255
  1539   00FD96  00                 	db	0
  1540   00FD97  00                 	db	0
  1541   00FD98  00                 	db	0
  1542   00FD99  10                 	db	16
  1543   00FD9A  10                 	db	16
  1544   00FD9B  10                 	db	16
  1545   00FD9C  FF                 	db	255
  1546   00FD9D  FF                 	db	255
  1547   00FD9E  00                 	db	0
  1548   00FD9F  00                 	db	0
  1549   00FDA0  00                 	db	0
  1550   00FDA1  14                 	db	20
  1551   00FDA2  14                 	db	20
  1552   00FDA3  14                 	db	20
  1553   00FDA4  FF                 	db	255
  1554   00FDA5  FF                 	db	255
  1555   00FDA6  00                 	db	0
  1556   00FDA7  00                 	db	0
  1557   00FDA8  00                 	db	0
  1558   00FDA9  10                 	db	16
  1559   00FDAA  10                 	db	16
  1560   00FDAB  FF                 	db	255
  1561   00FDAC  FF                 	db	255
  1562   00FDAD  00                 	db	0
  1563   00FDAE  FF                 	db	255
  1564   00FDAF  FF                 	db	255
  1565   00FDB0  00                 	db	0
  1566   00FDB1  10                 	db	16
  1567   00FDB2  10                 	db	16
  1568   00FDB3  F0                 	db	240
  1569   00FDB4  F0                 	db	240
  1570   00FDB5  10                 	db	16
  1571   00FDB6  F0                 	db	240
  1572   00FDB7  F0                 	db	240
  1573   00FDB8  00                 	db	0
  1574   00FDB9  14                 	db	20
  1575   00FDBA  14                 	db	20
  1576   00FDBB  14                 	db	20
  1577   00FDBC  FC                 	db	252
  1578   00FDBD  FC                 	db	252
  1579   00FDBE  00                 	db	0
  1580   00FDBF  00                 	db	0
  1581   00FDC0  00                 	db	0
  1582   00FDC1  14                 	db	20
  1583   00FDC2  14                 	db	20
  1584   00FDC3  F7                 	db	247
  1585   00FDC4  F7                 	db	247
  1586   00FDC5  00                 	db	0
  1587   00FDC6  FF                 	db	255
  1588   00FDC7  FF                 	db	255
  1589   00FDC8  00                 	db	0
  1590   00FDC9  00                 	db	0
  1591   00FDCA  00                 	db	0
  1592   00FDCB  FF                 	db	255
  1593   00FDCC  FF                 	db	255
  1594   00FDCD  00                 	db	0
  1595   00FDCE  FF                 	db	255
  1596   00FDCF  FF                 	db	255
  1597   00FDD0  00                 	db	0
  1598   00FDD1  14                 	db	20
  1599   00FDD2  14                 	db	20
  1600   00FDD3  F4                 	db	244
  1601   00FDD4  F4                 	db	244
  1602   00FDD5  04                 	db	4
  1603   00FDD6  FC                 	db	252
  1604   00FDD7  FC                 	db	252
  1605   00FDD8  00                 	db	0
  1606   00FDD9  14                 	db	20
  1607   00FDDA  14                 	db	20
  1608   00FDDB  17                 	db	23
  1609   00FDDC  17                 	db	23
  1610   00FDDD  10                 	db	16
  1611   00FDDE  1F                 	db	31
  1612   00FDDF  1F                 	db	31
  1613   00FDE0  00                 	db	0
  1614   00FDE1  10                 	db	16
  1615   00FDE2  10                 	db	16
  1616   00FDE3  1F                 	db	31
  1617   00FDE4  1F                 	db	31
  1618   00FDE5  10                 	db	16
  1619   00FDE6  1F                 	db	31
  1620   00FDE7  1F                 	db	31
  1621   00FDE8  00                 	db	0
  1622   00FDE9  14                 	db	20
  1623   00FDEA  14                 	db	20
  1624   00FDEB  14                 	db	20
  1625   00FDEC  1F                 	db	31
  1626   00FDED  1F                 	db	31
  1627   00FDEE  00                 	db	0
  1628   00FDEF  00                 	db	0
  1629   00FDF0  00                 	db	0
  1630   00FDF1  10                 	db	16
  1631   00FDF2  10                 	db	16
  1632   00FDF3  10                 	db	16
  1633   00FDF4  F0                 	db	240
  1634   00FDF5  F0                 	db	240
  1635   00FDF6  00                 	db	0
  1636   00FDF7  00                 	db	0
  1637   00FDF8  00                 	db	0
  1638   00FDF9  00                 	db	0
  1639   00FDFA  00                 	db	0
  1640   00FDFB  00                 	db	0
  1641   00FDFC  1F                 	db	31
  1642   00FDFD  1F                 	db	31
  1643   00FDFE  10                 	db	16
  1644   00FDFF  10                 	db	16
  1645   00FE00  10                 	db	16
  1646   00FE01  10                 	db	16
  1647   00FE02  10                 	db	16
  1648   00FE03  10                 	db	16
  1649   00FE04  1F                 	db	31
  1650   00FE05  1F                 	db	31
  1651   00FE06  10                 	db	16
  1652   00FE07  10                 	db	16
  1653   00FE08  10                 	db	16
  1654   00FE09  10                 	db	16
  1655   00FE0A  10                 	db	16
  1656   00FE0B  10                 	db	16
  1657   00FE0C  F0                 	db	240
  1658   00FE0D  F0                 	db	240
  1659   00FE0E  10                 	db	16
  1660   00FE0F  10                 	db	16
  1661   00FE10  10                 	db	16
  1662   00FE11  00                 	db	0
  1663   00FE12  00                 	db	0
  1664   00FE13  00                 	db	0
  1665   00FE14  FF                 	db	255
  1666   00FE15  FF                 	db	255
  1667   00FE16  10                 	db	16
  1668   00FE17  10                 	db	16
  1669   00FE18  10                 	db	16
  1670   00FE19  10                 	db	16
  1671   00FE1A  10                 	db	16
  1672   00FE1B  10                 	db	16
  1673   00FE1C  10                 	db	16
  1674   00FE1D  10                 	db	16
  1675   00FE1E  10                 	db	16
  1676   00FE1F  10                 	db	16
  1677   00FE20  10                 	db	16
  1678   00FE21  10                 	db	16
  1679   00FE22  10                 	db	16
  1680   00FE23  10                 	db	16
  1681   00FE24  FF                 	db	255
  1682   00FE25  FF                 	db	255
  1683   00FE26  10                 	db	16
  1684   00FE27  10                 	db	16
  1685   00FE28  10                 	db	16
  1686   00FE29  00                 	db	0
  1687   00FE2A  00                 	db	0
  1688   00FE2B  00                 	db	0
  1689   00FE2C  FF                 	db	255
  1690   00FE2D  FF                 	db	255
  1691   00FE2E  14                 	db	20
  1692   00FE2F  14                 	db	20
  1693   00FE30  14                 	db	20
  1694   00FE31  00                 	db	0
  1695   00FE32  00                 	db	0
  1696   00FE33  FF                 	db	255
  1697   00FE34  FF                 	db	255
  1698   00FE35  00                 	db	0
  1699   00FE36  FF                 	db	255
  1700   00FE37  FF                 	db	255
  1701   00FE38  10                 	db	16
  1702   00FE39  00                 	db	0
  1703   00FE3A  00                 	db	0
  1704   00FE3B  1F                 	db	31
  1705   00FE3C  1F                 	db	31
  1706   00FE3D  10                 	db	16
  1707   00FE3E  17                 	db	23
  1708   00FE3F  17                 	db	23
  1709   00FE40  14                 	db	20
  1710   00FE41  00                 	db	0
  1711   00FE42  00                 	db	0
  1712   00FE43  FC                 	db	252
  1713   00FE44  FC                 	db	252
  1714   00FE45  04                 	db	4
  1715   00FE46  F4                 	db	244
  1716   00FE47  F4                 	db	244
  1717   00FE48  14                 	db	20
  1718   00FE49  14                 	db	20
  1719   00FE4A  14                 	db	20
  1720   00FE4B  17                 	db	23
  1721   00FE4C  17                 	db	23
  1722   00FE4D  10                 	db	16
  1723   00FE4E  17                 	db	23
  1724   00FE4F  17                 	db	23
  1725   00FE50  14                 	db	20
  1726   00FE51  14                 	db	20
  1727   00FE52  14                 	db	20
  1728   00FE53  F4                 	db	244
  1729   00FE54  F4                 	db	244
  1730   00FE55  04                 	db	4
  1731   00FE56  F4                 	db	244
  1732   00FE57  F4                 	db	244
  1733   00FE58  14                 	db	20
  1734   00FE59  00                 	db	0
  1735   00FE5A  00                 	db	0
  1736   00FE5B  FF                 	db	255
  1737   00FE5C  FF                 	db	255
  1738   00FE5D  00                 	db	0
  1739   00FE5E  F7                 	db	247
  1740   00FE5F  F7                 	db	247
  1741   00FE60  14                 	db	20
  1742   00FE61  14                 	db	20
  1743   00FE62  14                 	db	20
  1744   00FE63  14                 	db	20
  1745   00FE64  14                 	db	20
  1746   00FE65  14                 	db	20
  1747   00FE66  14                 	db	20
  1748   00FE67  14                 	db	20
  1749   00FE68  14                 	db	20
  1750   00FE69  14                 	db	20
  1751   00FE6A  14                 	db	20
  1752   00FE6B  F7                 	db	247
  1753   00FE6C  F7                 	db	247
  1754   00FE6D  00                 	db	0
  1755   00FE6E  F7                 	db	247
  1756   00FE6F  F7                 	db	247
  1757   00FE70  14                 	db	20
  1758   00FE71  14                 	db	20
  1759   00FE72  14                 	db	20
  1760   00FE73  14                 	db	20
  1761   00FE74  17                 	db	23
  1762   00FE75  17                 	db	23
  1763   00FE76  14                 	db	20
  1764   00FE77  14                 	db	20
  1765   00FE78  14                 	db	20
  1766   00FE79  10                 	db	16
  1767   00FE7A  10                 	db	16
  1768   00FE7B  1F                 	db	31
  1769   00FE7C  1F                 	db	31
  1770   00FE7D  10                 	db	16
  1771   00FE7E  1F                 	db	31
  1772   00FE7F  1F                 	db	31
  1773   00FE80  10                 	db	16
  1774   00FE81  14                 	db	20
  1775   00FE82  14                 	db	20
  1776   00FE83  14                 	db	20
  1777   00FE84  F4                 	db	244
  1778   00FE85  F4                 	db	244
  1779   00FE86  14                 	db	20
  1780   00FE87  14                 	db	20
  1781   00FE88  14                 	db	20
  1782   00FE89  10                 	db	16
  1783   00FE8A  10                 	db	16
  1784   00FE8B  F0                 	db	240
  1785   00FE8C  F0                 	db	240
  1786   00FE8D  10                 	db	16
  1787   00FE8E  F0                 	db	240
  1788   00FE8F  F0                 	db	240
  1789   00FE90  10                 	db	16
  1790   00FE91  00                 	db	0
  1791   00FE92  00                 	db	0
  1792   00FE93  1F                 	db	31
  1793   00FE94  1F                 	db	31
  1794   00FE95  10                 	db	16
  1795   00FE96  1F                 	db	31
  1796   00FE97  1F                 	db	31
  1797   00FE98  10                 	db	16
  1798   00FE99  00                 	db	0
  1799   00FE9A  00                 	db	0
  1800   00FE9B  00                 	db	0
  1801   00FE9C  1F                 	db	31
  1802   00FE9D  1F                 	db	31
  1803   00FE9E  14                 	db	20
  1804   00FE9F  14                 	db	20
  1805   00FEA0  14                 	db	20
  1806   00FEA1  00                 	db	0
  1807   00FEA2  00                 	db	0
  1808   00FEA3  00                 	db	0
  1809   00FEA4  FC                 	db	252
  1810   00FEA5  FC                 	db	252
  1811   00FEA6  14                 	db	20
  1812   00FEA7  14                 	db	20
  1813   00FEA8  14                 	db	20
  1814   00FEA9  00                 	db	0
  1815   00FEAA  00                 	db	0
  1816   00FEAB  F0                 	db	240
  1817   00FEAC  F0                 	db	240
  1818   00FEAD  10                 	db	16
  1819   00FEAE  F0                 	db	240
  1820   00FEAF  F0                 	db	240
  1821   00FEB0  10                 	db	16
  1822   00FEB1  10                 	db	16
  1823   00FEB2  10                 	db	16
  1824   00FEB3  FF                 	db	255
  1825   00FEB4  FF                 	db	255
  1826   00FEB5  10                 	db	16
  1827   00FEB6  FF                 	db	255
  1828   00FEB7  FF                 	db	255
  1829   00FEB8  10                 	db	16
  1830   00FEB9  14                 	db	20
  1831   00FEBA  14                 	db	20
  1832   00FEBB  14                 	db	20
  1833   00FEBC  FF                 	db	255
  1834   00FEBD  FF                 	db	255
  1835   00FEBE  14                 	db	20
  1836   00FEBF  14                 	db	20
  1837   00FEC0  14                 	db	20
  1838   00FEC1  10                 	db	16
  1839   00FEC2  10                 	db	16
  1840   00FEC3  10                 	db	16
  1841   00FEC4  1F                 	db	31
  1842   00FEC5  1F                 	db	31
  1843   00FEC6  00                 	db	0
  1844   00FEC7  00                 	db	0
  1845   00FEC8  00                 	db	0
  1846   00FEC9  00                 	db	0
  1847   00FECA  00                 	db	0
  1848   00FECB  00                 	db	0
  1849   00FECC  F0                 	db	240
  1850   00FECD  F0                 	db	240
  1851   00FECE  10                 	db	16
  1852   00FECF  10                 	db	16
  1853   00FED0  10                 	db	16
  1854   00FED1  FF                 	db	255
  1855   00FED2  FF                 	db	255
  1856   00FED3  FF                 	db	255
  1857   00FED4  FF                 	db	255
  1858   00FED5  FF                 	db	255
  1859   00FED6  FF                 	db	255
  1860   00FED7  FF                 	db	255
  1861   00FED8  FF                 	db	255
  1862   00FED9  F0                 	db	240
  1863   00FEDA  F0                 	db	240
  1864   00FEDB  F0                 	db	240
  1865   00FEDC  F0                 	db	240
  1866   00FEDD  F0                 	db	240
  1867   00FEDE  F0                 	db	240
  1868   00FEDF  F0                 	db	240
  1869   00FEE0  F0                 	db	240
  1870   00FEE1  FF                 	db	255
  1871   00FEE2  FF                 	db	255
  1872   00FEE3  FF                 	db	255
  1873   00FEE4  FF                 	db	255
  1874   00FEE5  00                 	db	0
  1875   00FEE6  00                 	db	0
  1876   00FEE7  00                 	db	0
  1877   00FEE8  00                 	db	0
  1878   00FEE9  00                 	db	0
  1879   00FEEA  00                 	db	0
  1880   00FEEB  00                 	db	0
  1881   00FEEC  00                 	db	0
  1882   00FEED  FF                 	db	255
  1883   00FEEE  FF                 	db	255
  1884   00FEEF  FF                 	db	255
  1885   00FEF0  FF                 	db	255
  1886   00FEF1  0F                 	db	15
  1887   00FEF2  0F                 	db	15
  1888   00FEF3  0F                 	db	15
  1889   00FEF4  0F                 	db	15
  1890   00FEF5  0F                 	db	15
  1891   00FEF6  0F                 	db	15
  1892   00FEF7  0F                 	db	15
  1893   00FEF8  0F                 	db	15
  1894   00FEF9  38                 	db	56
  1895   00FEFA  7C                 	db	124
  1896   00FEFB  44                 	db	68
  1897   00FEFC  6C                 	db	108
  1898   00FEFD  38                 	db	56
  1899   00FEFE  6C                 	db	108
  1900   00FEFF  44                 	db	68
  1901   00FF00  00                 	db	0
  1902   00FF01  FC                 	db	252
  1903   00FF02  FE                 	db	254
  1904   00FF03  2A                 	db	42
  1905   00FF04  2A                 	db	42
  1906   00FF05  3E                 	db	62
  1907   00FF06  14                 	db	20
  1908   00FF07  00                 	db	0
  1909   00FF08  00                 	db	0
  1910   00FF09  7E                 	db	126
  1911   00FF0A  7E                 	db	126
  1912   00FF0B  02                 	db	2
  1913   00FF0C  02                 	db	2
  1914   00FF0D  06                 	db	6
  1915   00FF0E  06                 	db	6
  1916   00FF0F  00                 	db	0
  1917   00FF10  00                 	db	0
  1918   00FF11  02                 	db	2
  1919   00FF12  7E                 	db	126
  1920   00FF13  7E                 	db	126
  1921   00FF14  02                 	db	2
  1922   00FF15  7E                 	db	126
  1923   00FF16  7E                 	db	126
  1924   00FF17  02                 	db	2
  1925   00FF18  00                 	db	0
  1926   00FF19  63                 	db	99
  1927   00FF1A  77                 	db	119
  1928   00FF1B  5D                 	db	93
  1929   00FF1C  49                 	db	73
  1930   00FF1D  63                 	db	99
  1931   00FF1E  63                 	db	99
  1932   00FF1F  00                 	db	0
  1933   00FF20  00                 	db	0
  1934   00FF21  38                 	db	56
  1935   00FF22  7C                 	db	124
  1936   00FF23  44                 	db	68
  1937   00FF24  7C                 	db	124
  1938   00FF25  3C                 	db	60
  1939   00FF26  04                 	db	4
  1940   00FF27  04                 	db	4
  1941   00FF28  00                 	db	0
  1942   00FF29  80                 	db	128
  1943   00FF2A  FE                 	db	254
  1944   00FF2B  7E                 	db	126
  1945   00FF2C  20                 	db	32
  1946   00FF2D  20                 	db	32
  1947   00FF2E  3E                 	db	62
  1948   00FF2F  1E                 	db	30
  1949   00FF30  00                 	db	0
  1950   00FF31  04                 	db	4
  1951   00FF32  06                 	db	6
  1952   00FF33  02                 	db	2
  1953   00FF34  7E                 	db	126
  1954   00FF35  7C                 	db	124
  1955   00FF36  06                 	db	6
  1956   00FF37  02                 	db	2
  1957   00FF38  00                 	db	0
  1958   00FF39  99                 	db	153
  1959   00FF3A  BD                 	db	189
  1960   00FF3B  E7                 	db	231
  1961   00FF3C  E7                 	db	231
  1962   00FF3D  BD                 	db	189
  1963   00FF3E  99                 	db	153
  1964   00FF3F  00                 	db	0
  1965   00FF40  00                 	db	0
  1966   00FF41  1C                 	db	28
  1967   00FF42  3E                 	db	62
  1968   00FF43  6B                 	db	107
  1969   00FF44  49                 	db	73
  1970   00FF45  6B                 	db	107
  1971   00FF46  3E                 	db	62
  1972   00FF47  1C                 	db	28
  1973   00FF48  00                 	db	0
  1974   00FF49  4C                 	db	76
  1975   00FF4A  7E                 	db	126
  1976   00FF4B  73                 	db	115
  1977   00FF4C  01                 	db	1
  1978   00FF4D  73                 	db	115
  1979   00FF4E  7E                 	db	126
  1980   00FF4F  4C                 	db	76
  1981   00FF50  00                 	db	0
  1982   00FF51  30                 	db	48
  1983   00FF52  78                 	db	120
  1984   00FF53  4A                 	db	74
  1985   00FF54  4F                 	db	79
  1986   00FF55  7D                 	db	125
  1987   00FF56  39                 	db	57
  1988   00FF57  00                 	db	0
  1989   00FF58  00                 	db	0
  1990   00FF59  18                 	db	24
  1991   00FF5A  3C                 	db	60
  1992   00FF5B  24                 	db	36
  1993   00FF5C  3C                 	db	60
  1994   00FF5D  3C                 	db	60
  1995   00FF5E  24                 	db	36
  1996   00FF5F  3C                 	db	60
  1997   00FF60  18                 	db	24
  1998   00FF61  98                 	db	152
  1999   00FF62  FC                 	db	252
  2000   00FF63  64                 	db	100
  2001   00FF64  3C                 	db	60
  2002   00FF65  3E                 	db	62
  2003   00FF66  27                 	db	39
  2004   00FF67  3D                 	db	61
  2005   00FF68  18                 	db	24
  2006   00FF69  1C                 	db	28
  2007   00FF6A  3E                 	db	62
  2008   00FF6B  6B                 	db	107
  2009   00FF6C  49                 	db	73
  2010   00FF6D  49                 	db	73
  2011   00FF6E  00                 	db	0
  2012   00FF6F  00                 	db	0
  2013   00FF70  00                 	db	0
  2014   00FF71  7E                 	db	126
  2015   00FF72  7F                 	db	127
  2016   00FF73  01                 	db	1
  2017   00FF74  01                 	db	1
  2018   00FF75  7F                 	db	127
  2019   00FF76  7E                 	db	126
  2020   00FF77  00                 	db	0
  2021   00FF78  00                 	db	0
  2022   00FF79  2A                 	db	42
  2023   00FF7A  2A                 	db	42
  2024   00FF7B  2A                 	db	42
  2025   00FF7C  2A                 	db	42
  2026   00FF7D  2A                 	db	42
  2027   00FF7E  2A                 	db	42
  2028   00FF7F  00                 	db	0
  2029   00FF80  00                 	db	0
  2030   00FF81  44                 	db	68
  2031   00FF82  44                 	db	68
  2032   00FF83  5F                 	db	95
  2033   00FF84  5F                 	db	95
  2034   00FF85  44                 	db	68
  2035   00FF86  44                 	db	68
  2036   00FF87  00                 	db	0
  2037   00FF88  00                 	db	0
  2038   00FF89  40                 	db	64
  2039   00FF8A  51                 	db	81
  2040   00FF8B  5B                 	db	91
  2041   00FF8C  4E                 	db	78
  2042   00FF8D  44                 	db	68
  2043   00FF8E  40                 	db	64
  2044   00FF8F  00                 	db	0
  2045   00FF90  00                 	db	0
  2046   00FF91  40                 	db	64
  2047   00FF92  44                 	db	68
  2048   00FF93  4E                 	db	78
  2049   00FF94  5B                 	db	91
  2050   00FF95  51                 	db	81
  2051   00FF96  40                 	db	64
  2052   00FF97  00                 	db	0
  2053   00FF98  00                 	db	0
  2054   00FF99  00                 	db	0
  2055   00FF9A  00                 	db	0
  2056   00FF9B  00                 	db	0
  2057   00FF9C  FE                 	db	254
  2058   00FF9D  FF                 	db	255
  2059   00FF9E  01                 	db	1
  2060   00FF9F  07                 	db	7
  2061   00FFA0  06                 	db	6
  2062   00FFA1  60                 	db	96
  2063   00FFA2  E0                 	db	224
  2064   00FFA3  80                 	db	128
  2065   00FFA4  FF                 	db	255
  2066   00FFA5  7F                 	db	127
  2067   00FFA6  00                 	db	0
  2068   00FFA7  00                 	db	0
  2069   00FFA8  00                 	db	0
  2070   00FFA9  08                 	db	8
  2071   00FFAA  08                 	db	8
  2072   00FFAB  6B                 	db	107
  2073   00FFAC  6B                 	db	107
  2074   00FFAD  08                 	db	8
  2075   00FFAE  08                 	db	8
  2076   00FFAF  00                 	db	0
  2077   00FFB0  00                 	db	0
  2078   00FFB1  24                 	db	36
  2079   00FFB2  36                 	db	54
  2080   00FFB3  12                 	db	18
  2081   00FFB4  36                 	db	54
  2082   00FFB5  24                 	db	36
  2083   00FFB6  36                 	db	54
  2084   00FFB7  12                 	db	18
  2085   00FFB8  00                 	db	0
  2086   00FFB9  00                 	db	0
  2087   00FFBA  06                 	db	6
  2088   00FFBB  0F                 	db	15
  2089   00FFBC  09                 	db	9
  2090   00FFBD  0F                 	db	15
  2091   00FFBE  06                 	db	6
  2092   00FFBF  00                 	db	0
  2093   00FFC0  00                 	db	0
  2094   00FFC1  00                 	db	0
  2095   00FFC2  00                 	db	0
  2096   00FFC3  00                 	db	0
  2097   00FFC4  18                 	db	24
  2098   00FFC5  18                 	db	24
  2099   00FFC6  00                 	db	0
  2100   00FFC7  00                 	db	0
  2101   00FFC8  00                 	db	0
  2102   00FFC9  00                 	db	0
  2103   00FFCA  00                 	db	0
  2104   00FFCB  00                 	db	0
  2105   00FFCC  10                 	db	16
  2106   00FFCD  10                 	db	16
  2107   00FFCE  00                 	db	0
  2108   00FFCF  00                 	db	0
  2109   00FFD0  00                 	db	0
  2110   00FFD1  10                 	db	16
  2111   00FFD2  30                 	db	48
  2112   00FFD3  70                 	db	112
  2113   00FFD4  C0                 	db	192
  2114   00FFD5  FF                 	db	255
  2115   00FFD6  FF                 	db	255
  2116   00FFD7  01                 	db	1
  2117   00FFD8  01                 	db	1
  2118   00FFD9  00                 	db	0
  2119   00FFDA  1F                 	db	31
  2120   00FFDB  1F                 	db	31
  2121   00FFDC  01                 	db	1
  2122   00FFDD  1F                 	db	31
  2123   00FFDE  1E                 	db	30
  2124   00FFDF  00                 	db	0
  2125   00FFE0  00                 	db	0
  2126   00FFE1  00                 	db	0
  2127   00FFE2  19                 	db	25
  2128   00FFE3  1D                 	db	29
  2129   00FFE4  17                 	db	23
  2130   00FFE5  12                 	db	18
  2131   00FFE6  00                 	db	0
  2132   00FFE7  00                 	db	0
  2133   00FFE8  00                 	db	0
  2134   00FFE9  00                 	db	0
  2135   00FFEA  00                 	db	0
  2136   00FFEB  3C                 	db	60
  2137   00FFEC  3C                 	db	60
  2138   00FFED  3C                 	db	60
  2139   00FFEE  3C                 	db	60
  2140   00FFEF  00                 	db	0
  2141   00FFF0  00                 	db	0
  2142   00FFF1  00                 	db	0
  2143   00FFF2  00                 	db	0
  2144   00FFF3  00                 	db	0
  2145   00FFF4  00                 	db	0
  2146   00FFF5  00                 	db	0
  2147   00FFF6  00                 	db	0
  2148   00FFF7  00                 	db	0
  2149   00FFF8  00                 	db	0
  2150   00FFF9                     __end_of_MAX7219_Dot_Matrix_font:
  2151                           	callstack 0
  2152   000000                     _EEDATA	set	4008
  2153   000000                     _EEADR	set	4009
  2154   000000                     _EEADRH	set	4010
  2155   000000                     _EECON2	set	4007
  2156   000000                     _T2CON	set	4042
  2157   000000                     _PR2	set	4043
  2158   000000                     _RCREG	set	4014
  2159   000000                     _TXREG	set	4013
  2160   000000                     _SPBRG	set	4015
  2161   000000                     _TXSTA	set	4012
  2162   000000                     _OSCCON	set	4051
  2163   000000                     _SSPBUF	set	4041
  2164   000000                     _SSPADD	set	4040
  2165   00FFF9                     STR_1:
  2166   00FFF9  41                 	db	65	;'A'
  2167   00FFFA  4C                 	db	76	;'L'
  2168   00FFFB  41                 	db	65	;'A'
  2169   00FFFC  52                 	db	82	;'R'
  2170   00FFFD  4D                 	db	77	;'M'
  2171   00FFFE  00                 	db	0
  2172   00FFFF  00                 	db	0	; dummy byte at the end
  2173   000000                     
  2174                           	psect	nvBANK0
  2175   0000E3                     __pnvBANK0:
  2176                           	callstack 0
  2177   0000E3                     _EUSART_RxDefaultInterruptHandler:
  2178                           	callstack 0
  2179   0000E3                     	ds	2
  2180   0000E5                     _EUSART_TxDefaultInterruptHandler:
  2181                           	callstack 0
  2182   0000E5                     	ds	2
  2183   000000                     _LATCbits	set	3979
  2184   000000                     _T2CONbits	set	4042
  2185   000000                     _T0CONbits	set	4053
  2186   000000                     _RCSTAbits	set	4011
  2187   000000                     _TXSTAbits	set	4012
  2188   000000                     _SSPSTATbits	set	4039
  2189   000000                     _SSPCON1bits	set	4038
  2190   000000                     _WPUB	set	3964
  2191   000000                     _ANSEL	set	3966
  2192   000000                     _ANSELH	set	3967
  2193   000000                     _LATA	set	3977
  2194   000000                     _OSCTUNE	set	3995
  2195   000000                     _SSPCON1	set	4038
  2196   000000                     _SSPSTAT	set	4039
  2197   000000                     _T0CON	set	4053
  2198   000000                     _TMR0L	set	4054
  2199   000000                     _TMR0H	set	4055
  2200   000000                     _INTCON2bits	set	4081
  2201   000000                     _PIE1bits	set	3997
  2202   000000                     _TRISA	set	3986
  2203   000000                     _LATC	set	3979
  2204   000000                     _LATB	set	3978
  2205   000000                     _TRISC	set	3988
  2206   000000                     _TRISB	set	3987
  2207   000000                     _PORTBbits	set	3969
  2208   000000                     _TABLAT	set	4085
  2209   000000                     _TBLPTRL	set	4086
  2210   000000                     _TBLPTRH	set	4087
  2211   000000                     _TBLPTRU	set	4088
  2212   000000                     _INTCONbits	set	4082
  2213   000000                     _PIR2bits	set	4001
  2214   000000                     _EECON1bits	set	4006
  2215   000000                     _PIR1bits	set	3998
  2216   000000                     _RCSTA	set	4011
  2217   000000                     _BAUDCON	set	4024
  2218   000000                     _CCP2CON	set	4026
  2219   000000                     _SPBRGH	set	4016
  2220   000000                     _RCONbits	set	4048
  2221   000000                     _TMR2	set	4044
  2222   000000                     _CCPR2L	set	4027
  2223                           
  2224                           ; #config settings
  2225                           
  2226                           	psect	cinit
  2227   000FDA                     __pcinit:
  2228                           	callstack 0
  2229   000FDA                     start_initialization:
  2230                           	callstack 0
  2231   000FDA                     __initialization:
  2232                           	callstack 0
  2233                           
  2234                           ; Clear objects allocated to BANK0 (115 bytes)
  2235   000FDA  EE00  F060         	lfsr	0,__pbssBANK0
  2236   000FDE  0E73               	movlw	115
  2237   000FE0                     clear_0:
  2238   000FE0  6AEE               	clrf	postinc0,c
  2239   000FE2  06E8               	decf	wreg,f,c
  2240   000FE4  E1FD               	bnz	clear_0
  2241                           
  2242                           ; Clear objects allocated to COMRAM (3 bytes)
  2243   000FE6  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2244   000FE8  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2245   000FEA  6A59               	clrf	__pbssCOMRAM& (0+255),c
  2246   000FEC                     end_of_initialization:
  2247                           	callstack 0
  2248   000FEC                     __end_of__initialization:
  2249                           	callstack 0
  2250   000FEC  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2251   000FEE  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2252   000FF0  0100               	movlb	0
  2253   000FF2  EFDA  F002         	goto	_main	;jump to C main() function
  2254                           
  2255                           	psect	bssCOMRAM
  2256   000059                     __pbssCOMRAM:
  2257                           	callstack 0
  2258   000059                     _uartBufferIndex:
  2259                           	callstack 0
  2260   000059                     	ds	1
  2261   00005A                     _eusartTxTail:
  2262                           	callstack 0
  2263   00005A                     	ds	1
  2264   00005B                     _eusartTxHead:
  2265                           	callstack 0
  2266   00005B                     	ds	1
  2267                           
  2268                           	psect	bssBANK0
  2269   000060                     __pbssBANK0:
  2270                           	callstack 0
  2271   000060                     	ds	32
  2272   000080                     _bufferCol:
  2273                           	callstack 0
  2274   000080                     	ds	32
  2275   0000A0                     _uartBuffer:
  2276                           	callstack 0
  2277   0000A0                     	ds	10
  2278   0000AA                     _eusartRxBuffer:
  2279                           	callstack 0
  2280   0000AA                     	ds	8
  2281   0000B2                     _eusartTxBuffer:
  2282                           	callstack 0
  2283   0000B2                     	ds	8
  2284   0000BA                     checkButtons@button3HoldTime:
  2285                           	callstack 0
  2286   0000BA                     	ds	2
  2287   0000BC                     _button3PressTime:
  2288                           	callstack 0
  2289   0000BC                     	ds	2
  2290   0000BE                     _blinkTimer:
  2291                           	callstack 0
  2292   0000BE                     	ds	2
  2293   0000C0                     _timer0ReloadVal:
  2294                           	callstack 0
  2295   0000C0                     	ds	2
  2296   0000C2                     checkButtons@alarmSettingMode:
  2297                           	callstack 0
  2298   0000C2                     	ds	1
  2299   0000C3                     checkButtons@button3PressCount:
  2300                           	callstack 0
  2301   0000C3                     	ds	1
  2302   0000C4                     _btTimeSet:
  2303                           	callstack 0
  2304   0000C4                     	ds	1
  2305   0000C5                     _isButton3Pressed:
  2306                           	callstack 0
  2307   0000C5                     	ds	1
  2308   0000C6                     _displayBlinking:
  2309                           	callstack 0
  2310   0000C6                     	ds	1
  2311   0000C7                     _alarmTriggered:
  2312                           	callstack 0
  2313   0000C7                     	ds	1
  2314   0000C8                     _alarmActive:
  2315                           	callstack 0
  2316   0000C8                     	ds	1
  2317   0000C9                     _alarmSet:
  2318                           	callstack 0
  2319   0000C9                     	ds	1
  2320   0000CA                     _alarmMinutes:
  2321                           	callstack 0
  2322   0000CA                     	ds	1
  2323   0000CB                     _alarmHours:
  2324                           	callstack 0
  2325   0000CB                     	ds	1
  2326   0000CC                     _seconds:
  2327                           	callstack 0
  2328   0000CC                     	ds	1
  2329   0000CD                     _minutes:
  2330                           	callstack 0
  2331   0000CD                     	ds	1
  2332   0000CE                     _hours:
  2333                           	callstack 0
  2334   0000CE                     	ds	1
  2335   0000CF                     _eusartRxCount:
  2336                           	callstack 0
  2337   0000CF                     	ds	1
  2338   0000D0                     _eusartRxTail:
  2339                           	callstack 0
  2340   0000D0                     	ds	1
  2341   0000D1                     _eusartRxHead:
  2342                           	callstack 0
  2343   0000D1                     	ds	1
  2344   0000D2                     _eusartTxBufferRemaining:
  2345                           	callstack 0
  2346   0000D2                     	ds	1
  2347                           
  2348                           	psect	cstackBANK1
  2349   000100                     __pcstackBANK1:
  2350                           	callstack 0
  2351   000100                     saveTimeToFlash@flashBuffer:
  2352                           	callstack 0
  2353                           
  2354                           ; 64 bytes @ 0x0
  2355   000100                     	ds	64
  2356   000140                     saveTimeToFlash@flashAddress:
  2357                           	callstack 0
  2358                           
  2359                           ; 4 bytes @ 0x40
  2360   000140                     	ds	4
  2361   000144                     saveTimeToFlash@i:
  2362                           	callstack 0
  2363                           
  2364                           ; 1 bytes @ 0x44
  2365   000144                     	ds	1
  2366                           
  2367                           	psect	cstackBANK0
  2368   0000D3                     __pcstackBANK0:
  2369                           	callstack 0
  2370   0000D3                     ??_triggerAlarm:
  2371   0000D3                     displayTime@displayString:
  2372                           	callstack 0
  2373   0000D3                     displayAlarmTime@displayString:
  2374                           	callstack 0
  2375                           
  2376                           ; 5 bytes @ 0x0
  2377   0000D3                     	ds	2
  2378   0000D5                     triggerAlarm@numCycles:
  2379                           	callstack 0
  2380                           
  2381                           ; 2 bytes @ 0x2
  2382   0000D5                     	ds	2
  2383   0000D7                     triggerAlarm@i:
  2384                           	callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x4
  2387   0000D7                     	ds	1
  2388   0000D8                     displayTime@timeString:
  2389                           	callstack 0
  2390   0000D8                     displayAlarmTime@alarmTimeString:
  2391                           	callstack 0
  2392                           
  2393                           ; 5 bytes @ 0x5
  2394   0000D8                     	ds	5
  2395   0000DD                     displayTime@i:
  2396                           	callstack 0
  2397   0000DD                     displayAlarmTime@i:
  2398                           	callstack 0
  2399                           
  2400                           ; 2 bytes @ 0xA
  2401   0000DD                     	ds	2
  2402   0000DF                     ??_checkButtons:
  2403                           
  2404                           ; 1 bytes @ 0xC
  2405   0000DF                     	ds	2
  2406   0000E1                     main@hours_pom:
  2407                           	callstack 0
  2408                           
  2409                           ; 1 bytes @ 0xE
  2410   0000E1                     	ds	1
  2411   0000E2                     main@minutes_pom:
  2412                           	callstack 0
  2413                           
  2414                           ; 1 bytes @ 0xF
  2415   0000E2                     	ds	1
  2416                           
  2417                           	psect	cstackCOMRAM
  2418   000001                     __pcstackCOMRAM:
  2419                           	callstack 0
  2420   000001                     btGetData@rcv:
  2421                           	callstack 0
  2422                           
  2423                           ; 1 bytes @ 0x0
  2424   000001                     	ds	1
  2425   000002                     ??_INTERRUPT_InterruptManager:
  2426                           
  2427                           ; 1 bytes @ 0x1
  2428   000002                     	ds	2
  2429   000004                     ??_TMR0_Initialize:
  2430   000004                     ?___awdiv:
  2431                           	callstack 0
  2432   000004                     ?___awmod:
  2433                           	callstack 0
  2434   000004                     SPI_Exchange8bit@data:
  2435                           	callstack 0
  2436   000004                     EUSART_SetTxInterruptHandler@handler:
  2437                           	callstack 0
  2438   000004                     EUSART_SetRxInterruptHandler@handler:
  2439                           	callstack 0
  2440   000004                     PWM2_LoadDutyValue@dutyValue:
  2441                           	callstack 0
  2442   000004                     ___awdiv@dividend:
  2443                           	callstack 0
  2444   000004                     ___awmod@dividend:
  2445                           	callstack 0
  2446   000004                     FLASH_ReadByte@flashAddr:
  2447                           	callstack 0
  2448   000004                     FLASH_EraseBlock@baseAddr:
  2449                           	callstack 0
  2450                           
  2451                           ; 4 bytes @ 0x3
  2452   000004                     	ds	1
  2453   000005                     max7219_cmd@data:
  2454                           	callstack 0
  2455                           
  2456                           ; 1 bytes @ 0x4
  2457   000005                     	ds	1
  2458   000006                     ??_PWM2_LoadDutyValue:
  2459   000006                     ??_max7219_cmd:
  2460   000006                     ___awdiv@divisor:
  2461                           	callstack 0
  2462   000006                     ___awmod@divisor:
  2463                           	callstack 0
  2464                           
  2465                           ; 2 bytes @ 0x5
  2466   000006                     	ds	2
  2467   000008                     FLASH_EraseBlock@GIEBitValue:
  2468                           	callstack 0
  2469   000008                     max7219_cmd@Addr:
  2470                           	callstack 0
  2471   000008                     ___awdiv@counter:
  2472                           	callstack 0
  2473   000008                     ___awmod@counter:
  2474                           	callstack 0
  2475                           
  2476                           ; 1 bytes @ 0x7
  2477   000008                     	ds	1
  2478   000009                     ___awdiv@sign:
  2479                           	callstack 0
  2480   000009                     ___awmod@sign:
  2481                           	callstack 0
  2482   000009                     max7219_cmd@writeData:
  2483                           	callstack 0
  2484   000009                     FLASH_WriteBlock@writeAddr:
  2485                           	callstack 0
  2486                           
  2487                           ; 4 bytes @ 0x8
  2488   000009                     	ds	1
  2489   00000A                     ___awdiv@quotient:
  2490                           	callstack 0
  2491                           
  2492                           ; 2 bytes @ 0x9
  2493   00000A                     	ds	1
  2494   00000B                     max7219_cmd@i:
  2495                           	callstack 0
  2496                           
  2497                           ; 2 bytes @ 0xA
  2498   00000B                     	ds	1
  2499   00000C                     max_write@row:
  2500                           	callstack 0
  2501                           
  2502                           ; 2 bytes @ 0xB
  2503   00000C                     	ds	1
  2504   00000D                     FLASH_WriteBlock@flashWrBufPtr:
  2505                           	callstack 0
  2506                           
  2507                           ; 2 bytes @ 0xC
  2508   00000D                     	ds	1
  2509   00000E                     max_write@data:
  2510                           	callstack 0
  2511                           
  2512                           ; 1 bytes @ 0xD
  2513   00000E                     	ds	1
  2514   00000F                     ??_max_write:
  2515   00000F                     FLASH_WriteBlock@blockStartAddr:
  2516                           	callstack 0
  2517                           
  2518                           ; 4 bytes @ 0xE
  2519   00000F                     	ds	2
  2520   000011                     max_write@offset:
  2521                           	callstack 0
  2522                           
  2523                           ; 2 bytes @ 0x10
  2524   000011                     	ds	2
  2525   000013                     FLASH_WriteBlock@GIEBitValue:
  2526                           	callstack 0
  2527   000013                     max_write@devTarget:
  2528                           	callstack 0
  2529                           
  2530                           ; 2 bytes @ 0x12
  2531   000013                     	ds	1
  2532   000014                     FLASH_WriteBlock@j:
  2533                           	callstack 0
  2534                           
  2535                           ; 1 bytes @ 0x13
  2536   000014                     	ds	1
  2537   000015                     FLASH_WriteBlock@numberOfWriteBlocks:
  2538                           	callstack 0
  2539   000015                     max_write@dev:
  2540                           	callstack 0
  2541                           
  2542                           ; 2 bytes @ 0x14
  2543   000015                     	ds	1
  2544   000016                     FLASH_WriteBlock@dataCounter:
  2545                           	callstack 0
  2546                           
  2547                           ; 1 bytes @ 0x15
  2548   000016                     	ds	1
  2549   000017                     FLASH_WriteBlock@i:
  2550                           	callstack 0
  2551   000017                     max_write@writeData:
  2552                           	callstack 0
  2553                           
  2554                           ; 2 bytes @ 0x16
  2555   000017                     	ds	1
  2556   000018                     
  2557                           ; 1 bytes @ 0x17
  2558   000018                     	ds	1
  2559   000019                     ??_flushBuffer:
  2560                           
  2561                           ; 1 bytes @ 0x18
  2562   000019                     	ds	3
  2563   00001C                     flushBuffer@bufferRow:
  2564                           	callstack 0
  2565                           
  2566                           ; 32 bytes @ 0x1B
  2567   00001C                     	ds	32
  2568   00003C                     flushBuffer@dev:
  2569                           	callstack 0
  2570                           
  2571                           ; 2 bytes @ 0x3B
  2572   00003C                     	ds	2
  2573   00003E                     flushBuffer@j:
  2574                           	callstack 0
  2575                           
  2576                           ; 2 bytes @ 0x3D
  2577   00003E                     	ds	2
  2578   000040                     flushBuffer@row:
  2579                           	callstack 0
  2580                           
  2581                           ; 2 bytes @ 0x3F
  2582   000040                     	ds	2
  2583   000042                     flushBuffer@i:
  2584                           	callstack 0
  2585                           
  2586                           ; 2 bytes @ 0x41
  2587   000042                     	ds	2
  2588   000044                     clearDisplay@i:
  2589                           	callstack 0
  2590   000044                     printString@str:
  2591                           	callstack 0
  2592                           
  2593                           ; 2 bytes @ 0x43
  2594   000044                     	ds	2
  2595   000046                     ??_printString:
  2596                           
  2597                           ; 1 bytes @ 0x45
  2598   000046                     	ds	8
  2599   00004E                     printString@indx:
  2600                           	callstack 0
  2601                           
  2602                           ; 2 bytes @ 0x4D
  2603   00004E                     	ds	2
  2604   000050                     printString@data:
  2605                           	callstack 0
  2606                           
  2607                           ; 1 bytes @ 0x4F
  2608   000050                     	ds	1
  2609   000051                     printString@strindx:
  2610                           	callstack 0
  2611                           
  2612                           ; 2 bytes @ 0x50
  2613   000051                     	ds	2
  2614   000053                     printString@i:
  2615                           	callstack 0
  2616                           
  2617                           ; 2 bytes @ 0x52
  2618   000053                     	ds	2
  2619   000055                     printString@k:
  2620                           	callstack 0
  2621                           
  2622                           ; 2 bytes @ 0x54
  2623   000055                     	ds	2
  2624   000057                     printString@j:
  2625                           	callstack 0
  2626                           
  2627                           ; 2 bytes @ 0x56
  2628   000057                     	ds	2
  2629   000059                     
  2630                           ; 1 bytes @ 0x58
  2631 ;;
  2632 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2633 ;;
  2634 ;; *************** function _main *****************
  2635 ;; Defined at:
  2636 ;;		line 46 in file "main.c"
  2637 ;; Parameters:    Size  Location     Type
  2638 ;;		None
  2639 ;; Auto vars:     Size  Location     Type
  2640 ;;  minutes_pom     1   15[BANK0 ] unsigned char 
  2641 ;;  hours_pom       1   14[BANK0 ] unsigned char 
  2642 ;; Return value:  Size  Location     Type
  2643 ;;                  1    wreg      void 
  2644 ;; Registers used:
  2645 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2646 ;; Tracked objects:
  2647 ;;		On entry : 0/0
  2648 ;;		On exit  : 0/0
  2649 ;;		Unchanged: 0/0
  2650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2651 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2654 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2655 ;;Total ram usage:        2 bytes
  2656 ;; Hardware stack levels required when called: 8
  2657 ;; This function calls:
  2658 ;;		_SYSTEM_Initialize
  2659 ;;		_TMR0_HasOverflowOccured
  2660 ;;		_TMR0_Reload
  2661 ;;		_TMR0_StartTimer
  2662 ;;		_checkButtons
  2663 ;;		_clearDisplay
  2664 ;;		_displayTime
  2665 ;;		_loadTimeFromFlash
  2666 ;;		_matrixInit
  2667 ;;		_processAlarm
  2668 ;;		_saveTimeToFlash
  2669 ;; This function is called by:
  2670 ;;		Startup code after reset
  2671 ;; This function uses a non-reentrant model
  2672 ;;
  2673                           
  2674                           	psect	text0
  2675   0005B4                     __ptext0:
  2676                           	callstack 0
  2677   0005B4                     _main:
  2678                           	callstack 23
  2679   0005B4                     
  2680                           ;main.c: 48:     SYSTEM_Initialize();
  2681   0005B4  ECCB  F007         	call	_SYSTEM_Initialize	;wreg free
  2682                           
  2683                           ;main.c: 49:     matrixInit();
  2684   0005B8  EC6B  F007         	call	_matrixInit	;wreg free
  2685   0005BC                     
  2686                           ;main.c: 50:     clearDisplay();
  2687   0005BC  EC4F  F007         	call	_clearDisplay	;wreg free
  2688   0005C0                     
  2689                           ;main.c: 51:     loadTimeFromFlash();
  2690   0005C0  ECA9  F006         	call	_loadTimeFromFlash	;wreg free
  2691   0005C4                     
  2692                           ;main.c: 53:     TMR0_StartTimer();
  2693   0005C4  EC4D  F008         	call	_TMR0_StartTimer	;wreg free
  2694   0005C8                     
  2695                           ;main.c: 55:     INTCONbits.GIE = 1;
  2696   0005C8  8EF2               	bsf	242,7,c	;volatile
  2697   0005CA                     
  2698                           ;main.c: 56:     INTCONbits.PEIE = 1;
  2699   0005CA  8CF2               	bsf	242,6,c	;volatile
  2700   0005CC                     l3625:
  2701                           
  2702                           ;main.c: 60:     {;main.c: 61:         if(TMR0_HasOverflowOccured())
  2703   0005CC  EC08  F008         	call	_TMR0_HasOverflowOccured	;wreg free
  2704   0005D0  0900               	iorlw	0
  2705   0005D2  B4D8               	btfsc	status,2,c
  2706   0005D4  EFEE  F002         	goto	u2931
  2707   0005D8  EFF0  F002         	goto	u2930
  2708   0005DC                     u2931:
  2709   0005DC  EF19  F003         	goto	l3651
  2710   0005E0                     u2930:
  2711   0005E0                     
  2712                           ;main.c: 62:         {;main.c: 63:             displayTime();
  2713   0005E0  EC11  F005         	call	_displayTime	;wreg free
  2714   0005E4                     
  2715                           ;main.c: 65:             seconds++;
  2716   0005E4  0100               	movlb	0	; () banked
  2717   0005E6  2BCC               	incf	_seconds& (0+255),f,b
  2718   0005E8                     
  2719                           ; BSR set to: 0
  2720                           ;main.c: 66:             if (seconds >= 60) {
  2721   0005E8  0E3B               	movlw	59
  2722   0005EA  65CC               	cpfsgt	_seconds& (0+255),b
  2723   0005EC  EFFA  F002         	goto	u2941
  2724   0005F0  EFFC  F002         	goto	u2940
  2725   0005F4                     u2941:
  2726   0005F4  EF14  F003         	goto	l3647
  2727   0005F8                     u2940:
  2728   0005F8                     
  2729                           ; BSR set to: 0
  2730                           ;main.c: 67:                 seconds = 0;
  2731   0005F8  0E00               	movlw	0
  2732   0005FA  6FCC               	movwf	_seconds& (0+255),b
  2733   0005FC                     
  2734                           ; BSR set to: 0
  2735                           ;main.c: 68:                 minutes++;
  2736   0005FC  2BCD               	incf	_minutes& (0+255),f,b
  2737   0005FE                     
  2738                           ; BSR set to: 0
  2739                           ;main.c: 69:                 if (minutes >= 60) {
  2740   0005FE  0E3B               	movlw	59
  2741   000600  65CD               	cpfsgt	_minutes& (0+255),b
  2742   000602  EF05  F003         	goto	u2951
  2743   000606  EF07  F003         	goto	u2950
  2744   00060A                     u2951:
  2745   00060A  EF14  F003         	goto	l3647
  2746   00060E                     u2950:
  2747   00060E                     
  2748                           ; BSR set to: 0
  2749                           ;main.c: 70:                     minutes = 0;
  2750   00060E  0E00               	movlw	0
  2751   000610  6FCD               	movwf	_minutes& (0+255),b
  2752   000612                     
  2753                           ; BSR set to: 0
  2754                           ;main.c: 71:                     hours++;
  2755   000612  2BCE               	incf	_hours& (0+255),f,b
  2756   000614                     
  2757                           ; BSR set to: 0
  2758                           ;main.c: 72:                     if (hours >= 24) {
  2759   000614  0E17               	movlw	23
  2760   000616  65CE               	cpfsgt	_hours& (0+255),b
  2761   000618  EF10  F003         	goto	u2961
  2762   00061C  EF12  F003         	goto	u2960
  2763   000620                     u2961:
  2764   000620  EF14  F003         	goto	l3647
  2765   000624                     u2960:
  2766   000624                     
  2767                           ; BSR set to: 0
  2768                           ;main.c: 73:                         hours = 0;
  2769   000624  0E00               	movlw	0
  2770   000626  6FCE               	movwf	_hours& (0+255),b
  2771   000628                     l3647:
  2772                           
  2773                           ; BSR set to: 0
  2774                           ;main.c: 77:             TMR0_Reload();
  2775   000628  EC38  F008         	call	_TMR0_Reload	;wreg free
  2776   00062C                     
  2777                           ;main.c: 78:             INTCONbits.TMR0IF = 0;
  2778   00062C  94F2               	bcf	242,2,c	;volatile
  2779                           
  2780                           ;main.c: 79:             TMR0_StartTimer();
  2781   00062E  EC4D  F008         	call	_TMR0_StartTimer	;wreg free
  2782   000632                     l3651:
  2783                           
  2784                           ;main.c: 81:         displayTime();
  2785   000632  EC11  F005         	call	_displayTime	;wreg free
  2786   000636                     
  2787                           ;main.c: 82:         checkButtons();
  2788   000636  EC34  F000         	call	_checkButtons	;wreg free
  2789   00063A                     
  2790                           ;main.c: 83:         processAlarm();
  2791   00063A  ECD6  F006         	call	_processAlarm	;wreg free
  2792   00063E                     
  2793                           ;main.c: 84:         if(btTimeSet) {
  2794   00063E  0100               	movlb	0	; () banked
  2795   000640  51C4               	movf	_btTimeSet& (0+255),w,b
  2796   000642  B4D8               	btfsc	status,2,c
  2797   000644  EF26  F003         	goto	u2971
  2798   000648  EF28  F003         	goto	u2970
  2799   00064C                     u2971:
  2800   00064C  EFE6  F002         	goto	l3625
  2801   000650                     u2970:
  2802   000650                     
  2803                           ; BSR set to: 0
  2804                           ;main.c: 86:             if (uartBuffer[0] == 'H' && uartBuffer[3] == 'M' && uartBuffer[
      +                          6] == ';')
  2805   000650  0E48               	movlw	72
  2806   000652  19A0               	xorwf	_uartBuffer& (0+255),w,b
  2807   000654  A4D8               	btfss	status,2,c
  2808   000656  EF2F  F003         	goto	u2981
  2809   00065A  EF31  F003         	goto	u2980
  2810   00065E                     u2981:
  2811   00065E  EFE6  F002         	goto	l3625
  2812   000662                     u2980:
  2813   000662                     
  2814                           ; BSR set to: 0
  2815   000662  0E4D               	movlw	77
  2816   000664  19A3               	xorwf	(_uartBuffer+3)& (0+255),w,b
  2817   000666  A4D8               	btfss	status,2,c
  2818   000668  EF38  F003         	goto	u2991
  2819   00066C  EF3A  F003         	goto	u2990
  2820   000670                     u2991:
  2821   000670  EFE6  F002         	goto	l3625
  2822   000674                     u2990:
  2823   000674                     
  2824                           ; BSR set to: 0
  2825   000674  0E3B               	movlw	59
  2826   000676  19A6               	xorwf	(_uartBuffer+6)& (0+255),w,b
  2827   000678  A4D8               	btfss	status,2,c
  2828   00067A  EF41  F003         	goto	u3001
  2829   00067E  EF43  F003         	goto	u3000
  2830   000682                     u3001:
  2831   000682  EFE6  F002         	goto	l3625
  2832   000686                     u3000:
  2833   000686                     
  2834                           ; BSR set to: 0
  2835                           ;main.c: 87:             {;main.c: 89:                 uint8_t hours_pom = (uartBuffer[1
      +                          ] - '0') * 10 + (uartBuffer[2] - '0');
  2836   000686  51A1               	movf	(_uartBuffer+1)& (0+255),w,b
  2837   000688  0D0A               	mullw	10
  2838   00068A  50F3               	movf	243,w,c
  2839   00068C  25A2               	addwf	(_uartBuffer+2)& (0+255),w,b
  2840   00068E  0FF0               	addlw	240
  2841   000690  6FE1               	movwf	main@hours_pom& (0+255),b
  2842                           
  2843                           ;main.c: 92:                 uint8_t minutes_pom = (uartBuffer[4] - '0') * 10 + (uartBuf
      +                          fer[5] - '0');
  2844   000692  51A4               	movf	(_uartBuffer+4)& (0+255),w,b
  2845   000694  0D0A               	mullw	10
  2846   000696  50F3               	movf	243,w,c
  2847   000698  25A5               	addwf	(_uartBuffer+5)& (0+255),w,b
  2848   00069A  0FF0               	addlw	240
  2849   00069C  6FE2               	movwf	main@minutes_pom& (0+255),b
  2850   00069E                     
  2851                           ; BSR set to: 0
  2852                           ;main.c: 95:                 if (hours_pom < 24 && minutes_pom < 60)
  2853   00069E  0E18               	movlw	24
  2854   0006A0  61E1               	cpfslt	main@hours_pom& (0+255),b
  2855   0006A2  EF55  F003         	goto	u3011
  2856   0006A6  EF57  F003         	goto	u3010
  2857   0006AA                     u3011:
  2858   0006AA  EF6B  F003         	goto	l443
  2859   0006AE                     u3010:
  2860   0006AE                     
  2861                           ; BSR set to: 0
  2862   0006AE  0E3C               	movlw	60
  2863   0006B0  61E2               	cpfslt	main@minutes_pom& (0+255),b
  2864   0006B2  EF5D  F003         	goto	u3021
  2865   0006B6  EF5F  F003         	goto	u3020
  2866   0006BA                     u3021:
  2867   0006BA  EF6B  F003         	goto	l443
  2868   0006BE                     u3020:
  2869   0006BE                     
  2870                           ; BSR set to: 0
  2871                           ;main.c: 96:                 {;main.c: 98:                     btTimeSet = 0;
  2872   0006BE  0E00               	movlw	0
  2873   0006C0  6FC4               	movwf	_btTimeSet& (0+255),b
  2874   0006C2                     
  2875                           ; BSR set to: 0
  2876                           ;main.c: 99:                     hours = hours_pom;
  2877   0006C2  C0E1  F0CE         	movff	main@hours_pom,_hours
  2878   0006C6                     
  2879                           ; BSR set to: 0
  2880                           ;main.c: 100:                     minutes = minutes_pom;
  2881   0006C6  C0E2  F0CD         	movff	main@minutes_pom,_minutes
  2882   0006CA                     
  2883                           ; BSR set to: 0
  2884                           ;main.c: 101:                     displayTime();
  2885   0006CA  EC11  F005         	call	_displayTime	;wreg free
  2886   0006CE                     
  2887                           ;main.c: 102:                     saveTimeToFlash();
  2888   0006CE  EC6C  F006         	call	_saveTimeToFlash	;wreg free
  2889   0006D2  EFE6  F002         	goto	l3625
  2890   0006D6                     l443:
  2891                           
  2892                           ; BSR set to: 0
  2893   0006D6  EFE6  F002         	goto	l3625
  2894   0006DA  EF32  F000         	goto	start
  2895   0006DE                     __end_of_main:
  2896                           	callstack 0
  2897                           
  2898 ;; *************** function _processAlarm *****************
  2899 ;; Defined at:
  2900 ;;		line 150 in file "main.c"
  2901 ;; Parameters:    Size  Location     Type
  2902 ;;		None
  2903 ;; Auto vars:     Size  Location     Type
  2904 ;;		None
  2905 ;; Return value:  Size  Location     Type
  2906 ;;                  1    wreg      void 
  2907 ;; Registers used:
  2908 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2909 ;; Tracked objects:
  2910 ;;		On entry : 0/0
  2911 ;;		On exit  : 0/0
  2912 ;;		Unchanged: 0/0
  2913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2914 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2918 ;;Total ram usage:        0 bytes
  2919 ;; Hardware stack levels used: 1
  2920 ;; Hardware stack levels required when called: 7
  2921 ;; This function calls:
  2922 ;;		_triggerAlarm
  2923 ;; This function is called by:
  2924 ;;		_main
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text1
  2929   000DAC                     __ptext1:
  2930                           	callstack 0
  2931   000DAC                     _processAlarm:
  2932                           	callstack 23
  2933   000DAC                     
  2934                           ;main.c: 153:     if (alarmSet && !alarmTriggered)
  2935   000DAC  0100               	movlb	0	; () banked
  2936   000DAE  51C9               	movf	_alarmSet& (0+255),w,b
  2937   000DB0  B4D8               	btfsc	status,2,c
  2938   000DB2  EFDD  F006         	goto	u2561
  2939   000DB6  EFDF  F006         	goto	u2560
  2940   000DBA                     u2561:
  2941   000DBA  EFFE  F006         	goto	l463
  2942   000DBE                     u2560:
  2943   000DBE                     
  2944                           ; BSR set to: 0
  2945   000DBE  51C7               	movf	_alarmTriggered& (0+255),w,b
  2946   000DC0  A4D8               	btfss	status,2,c
  2947   000DC2  EFE5  F006         	goto	u2571
  2948   000DC6  EFE7  F006         	goto	u2570
  2949   000DCA                     u2571:
  2950   000DCA  EFFE  F006         	goto	l463
  2951   000DCE                     u2570:
  2952   000DCE                     
  2953                           ; BSR set to: 0
  2954                           ;main.c: 154:     {;main.c: 156:         if (hours == alarmHours && minutes == alarmMinu
      +                          tes)
  2955   000DCE  51CB               	movf	_alarmHours& (0+255),w,b
  2956   000DD0  19CE               	xorwf	_hours& (0+255),w,b
  2957   000DD2  A4D8               	btfss	status,2,c
  2958   000DD4  EFEE  F006         	goto	u2581
  2959   000DD8  EFF0  F006         	goto	u2580
  2960   000DDC                     u2581:
  2961   000DDC  EFFE  F006         	goto	l463
  2962   000DE0                     u2580:
  2963   000DE0                     
  2964                           ; BSR set to: 0
  2965   000DE0  51CA               	movf	_alarmMinutes& (0+255),w,b
  2966   000DE2  19CD               	xorwf	_minutes& (0+255),w,b
  2967   000DE4  A4D8               	btfss	status,2,c
  2968   000DE6  EFF7  F006         	goto	u2591
  2969   000DEA  EFF9  F006         	goto	u2590
  2970   000DEE                     u2591:
  2971   000DEE  EFFE  F006         	goto	l463
  2972   000DF2                     u2590:
  2973   000DF2                     
  2974                           ; BSR set to: 0
  2975                           ;main.c: 157:         {;main.c: 158:             triggerAlarm();
  2976   000DF2  ECE6  F003         	call	_triggerAlarm	;wreg free
  2977   000DF6                     
  2978                           ;main.c: 159:             alarmTriggered = 1;
  2979   000DF6  0E01               	movlw	1
  2980   000DF8  0100               	movlb	0	; () banked
  2981   000DFA  6FC7               	movwf	_alarmTriggered& (0+255),b
  2982   000DFC                     l463:
  2983                           
  2984                           ; BSR set to: 0
  2985   000DFC  0012               	return		;funcret
  2986   000DFE                     __end_of_processAlarm:
  2987                           	callstack 0
  2988                           
  2989 ;; *************** function _triggerAlarm *****************
  2990 ;; Defined at:
  2991 ;;		line 165 in file "main.c"
  2992 ;; Parameters:    Size  Location     Type
  2993 ;;		None
  2994 ;; Auto vars:     Size  Location     Type
  2995 ;;  i               2    4[BANK0 ] unsigned int 
  2996 ;;  numCycles       2    2[BANK0 ] unsigned int 
  2997 ;; Return value:  Size  Location     Type
  2998 ;;                  1    wreg      void 
  2999 ;; Registers used:
  3000 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3001 ;; Tracked objects:
  3002 ;;		On entry : 0/0
  3003 ;;		On exit  : 0/0
  3004 ;;		Unchanged: 0/0
  3005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3006 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3010 ;;Total ram usage:        6 bytes
  3011 ;; Hardware stack levels used: 1
  3012 ;; Hardware stack levels required when called: 6
  3013 ;; This function calls:
  3014 ;;		_PWM2_LoadDutyValue
  3015 ;;		_clearDisplay
  3016 ;;		_printString
  3017 ;; This function is called by:
  3018 ;;		_processAlarm
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text2
  3023   0007CC                     __ptext2:
  3024                           	callstack 0
  3025   0007CC                     _triggerAlarm:
  3026                           	callstack 23
  3027   0007CC                     
  3028                           ;main.c: 172:     unsigned int numCycles = 60000 / (2 * 500);
  3029   0007CC  0E00               	movlw	0
  3030   0007CE  0100               	movlb	0	; () banked
  3031   0007D0  6FD6               	movwf	(triggerAlarm@numCycles+1)& (0+255),b
  3032   0007D2  0E3C               	movlw	60
  3033   0007D4  6FD5               	movwf	triggerAlarm@numCycles& (0+255),b
  3034                           
  3035                           ;main.c: 174:     for (unsigned int i = 0; i < numCycles; i++)
  3036   0007D6  0E00               	movlw	0
  3037   0007D8  6FD8               	movwf	(triggerAlarm@i+1)& (0+255),b
  3038   0007DA  0E00               	movlw	0
  3039   0007DC  6FD7               	movwf	triggerAlarm@i& (0+255),b
  3040   0007DE  EF43  F004         	goto	l3247
  3041   0007E2                     l467:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;main.c: 175:     {;main.c: 177:         if (!PORTBbits.RB2)
  3045   0007E2  B481               	btfsc	129,2,c	;volatile
  3046   0007E4  EFF6  F003         	goto	u2361
  3047   0007E8  EFF8  F003         	goto	u2360
  3048   0007EC                     u2361:
  3049   0007EC  EF10  F004         	goto	l3233
  3050   0007F0                     u2360:
  3051   0007F0                     
  3052                           ; BSR set to: 0
  3053                           ;main.c: 178:         {;main.c: 179:             _delay((unsigned long)((100)*(8000000/4
      +                          000.0)));
  3054   0007F0  0E02               	movlw	2
  3055   0007F2  0100               	movlb	0	; () banked
  3056   0007F4  6FD4               	movwf	(??_triggerAlarm+1)& (0+255),b
  3057   0007F6  0E04               	movlw	4
  3058   0007F8  6FD3               	movwf	??_triggerAlarm& (0+255),b
  3059   0007FA  0EBA               	movlw	186
  3060   0007FC                     u3037:
  3061   0007FC  2EE8               	decfsz	wreg,f,c
  3062   0007FE  D7FE               	bra	u3037
  3063   000800  2FD3               	decfsz	??_triggerAlarm& (0+255),f,b
  3064   000802  D7FC               	bra	u3037
  3065   000804  2FD4               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3066   000806  D7FA               	bra	u3037
  3067   000808  0000               	nop	
  3068   00080A                     
  3069                           ;main.c: 180:             if (!PORTBbits.RB2)
  3070   00080A  B481               	btfsc	129,2,c	;volatile
  3071   00080C  EF0A  F004         	goto	u2371
  3072   000810  EF0C  F004         	goto	u2370
  3073   000814                     u2371:
  3074   000814  EF10  F004         	goto	l3233
  3075   000818                     u2370:
  3076   000818                     
  3077                           ;main.c: 181:             {;main.c: 182:                 clearDisplay();
  3078   000818  EC4F  F007         	call	_clearDisplay	;wreg free
  3079   00081C  EF4E  F004         	goto	l470
  3080   000820                     l3233:
  3081                           
  3082                           ;main.c: 188:         printString("ALARM");
  3083   000820  0EF9               	movlw	low STR_1
  3084   000822  6E44               	movwf	printString@str^0,c
  3085   000824  0EFF               	movlw	high STR_1
  3086   000826  6E45               	movwf	(printString@str+1)^0,c
  3087   000828  EC7F  F001         	call	_printString	;wreg free
  3088   00082C                     
  3089                           ;main.c: 189:         PWM2_LoadDutyValue(500);
  3090   00082C  0E01               	movlw	1
  3091   00082E  6E05               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^0,c
  3092   000830  0EF4               	movlw	244
  3093   000832  6E04               	movwf	PWM2_LoadDutyValue@dutyValue^0,c
  3094   000834  EC9F  F007         	call	_PWM2_LoadDutyValue	;wreg free
  3095   000838                     
  3096                           ;main.c: 190:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3097   000838  0E06               	movlw	6
  3098   00083A  0100               	movlb	0	; () banked
  3099   00083C  6FD4               	movwf	(??_triggerAlarm+1)& (0+255),b
  3100   00083E  0E13               	movlw	19
  3101   000840  6FD3               	movwf	??_triggerAlarm& (0+255),b
  3102   000842  0EAD               	movlw	173
  3103   000844                     u3047:
  3104   000844  2EE8               	decfsz	wreg,f,c
  3105   000846  D7FE               	bra	u3047
  3106   000848  2FD3               	decfsz	??_triggerAlarm& (0+255),f,b
  3107   00084A  D7FC               	bra	u3047
  3108   00084C  2FD4               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3109   00084E  D7FA               	bra	u3047
  3110   000850  F000 F000          	nop2	
  3111   000854                     
  3112                           ;main.c: 191:         clearDisplay();
  3113   000854  EC4F  F007         	call	_clearDisplay	;wreg free
  3114   000858                     
  3115                           ;main.c: 192:         PWM2_LoadDutyValue(0);
  3116   000858  0E00               	movlw	0
  3117   00085A  6E05               	movwf	(PWM2_LoadDutyValue@dutyValue+1)^0,c
  3118   00085C  0E00               	movlw	0
  3119   00085E  6E04               	movwf	PWM2_LoadDutyValue@dutyValue^0,c
  3120   000860  EC9F  F007         	call	_PWM2_LoadDutyValue	;wreg free
  3121   000864                     
  3122                           ;main.c: 193:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3123   000864  0E06               	movlw	6
  3124   000866  0100               	movlb	0	; () banked
  3125   000868  6FD4               	movwf	(??_triggerAlarm+1)& (0+255),b
  3126   00086A  0E13               	movlw	19
  3127   00086C  6FD3               	movwf	??_triggerAlarm& (0+255),b
  3128   00086E  0EAD               	movlw	173
  3129   000870                     u3057:
  3130   000870  2EE8               	decfsz	wreg,f,c
  3131   000872  D7FE               	bra	u3057
  3132   000874  2FD3               	decfsz	??_triggerAlarm& (0+255),f,b
  3133   000876  D7FC               	bra	u3057
  3134   000878  2FD4               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3135   00087A  D7FA               	bra	u3057
  3136   00087C  F000 F000          	nop2	
  3137   000880                     
  3138                           ;main.c: 194:     }
  3139   000880  0100               	movlb	0	; () banked
  3140   000882  4BD7               	infsnz	triggerAlarm@i& (0+255),f,b
  3141   000884  2BD8               	incf	(triggerAlarm@i+1)& (0+255),f,b
  3142   000886                     l3247:
  3143                           
  3144                           ; BSR set to: 0
  3145   000886  51D5               	movf	triggerAlarm@numCycles& (0+255),w,b
  3146   000888  5DD7               	subwf	triggerAlarm@i& (0+255),w,b
  3147   00088A  51D6               	movf	(triggerAlarm@numCycles+1)& (0+255),w,b
  3148   00088C  59D8               	subwfb	(triggerAlarm@i+1)& (0+255),w,b
  3149   00088E  A0D8               	btfss	status,0,c
  3150   000890  EF4C  F004         	goto	u2381
  3151   000894  EF4E  F004         	goto	u2380
  3152   000898                     u2381:
  3153   000898  EFF1  F003         	goto	l467
  3154   00089C                     u2380:
  3155   00089C                     l470:
  3156   00089C  0012               	return		;funcret
  3157   00089E                     __end_of_triggerAlarm:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _clearDisplay *****************
  3161 ;; Defined at:
  3162 ;;		line 105 in file "MAX7219.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;  i               2   67[COMRAM] int 
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;Total ram usage:        2 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 5
  3183 ;; This function calls:
  3184 ;;		_flushBuffer
  3185 ;; This function is called by:
  3186 ;;		_main
  3187 ;;		_triggerAlarm
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text3
  3192   000E9E                     __ptext3:
  3193                           	callstack 0
  3194   000E9E                     _clearDisplay:
  3195                           	callstack 23
  3196   000E9E                     
  3197                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  3198   000E9E  0E00               	movlw	0
  3199   000EA0  6E45               	movwf	(clearDisplay@i+1)^0,c
  3200   000EA2  0E00               	movlw	0
  3201   000EA4  6E44               	movwf	clearDisplay@i^0,c
  3202   000EA6                     l2467:
  3203                           
  3204                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  3205   000EA6  5044               	movf	clearDisplay@i^0,w,c
  3206   000EA8  0F80               	addlw	low _bufferCol
  3207   000EAA  6ED9               	movwf	fsr2l,c
  3208   000EAC  6ADA               	clrf	fsr2h,c
  3209   000EAE  6ADF               	clrf	indf2,c
  3210   000EB0                     
  3211                           ;MAX7219.c: 110:  }
  3212   000EB0  4A44               	infsnz	clearDisplay@i^0,f,c
  3213   000EB2  2A45               	incf	(clearDisplay@i+1)^0,f,c
  3214   000EB4  BE45               	btfsc	(clearDisplay@i+1)^0,7,c
  3215   000EB6  EF66  F007         	goto	u1391
  3216   000EBA  5045               	movf	(clearDisplay@i+1)^0,w,c
  3217   000EBC  E109               	bnz	u1390
  3218   000EBE  0E1F               	movlw	31
  3219   000EC0  5C44               	subwf	clearDisplay@i^0,w,c
  3220   000EC2  A0D8               	btfss	status,0,c
  3221   000EC4  EF66  F007         	goto	u1391
  3222   000EC8  EF68  F007         	goto	u1390
  3223   000ECC                     u1391:
  3224   000ECC  EF53  F007         	goto	l2467
  3225   000ED0                     u1390:
  3226   000ED0                     
  3227                           ;MAX7219.c: 111:  flushBuffer();
  3228   000ED0  EC43  F002         	call	_flushBuffer	;wreg free
  3229   000ED4  0012               	return		;funcret
  3230   000ED6                     __end_of_clearDisplay:
  3231                           	callstack 0
  3232                           
  3233 ;; *************** function _PWM2_LoadDutyValue *****************
  3234 ;; Defined at:
  3235 ;;		line 78 in file "mcc_generated_files/pwm2.c"
  3236 ;; Parameters:    Size  Location     Type
  3237 ;;  dutyValue       2    3[COMRAM] unsigned short 
  3238 ;; Auto vars:     Size  Location     Type
  3239 ;;		None
  3240 ;; Return value:  Size  Location     Type
  3241 ;;                  1    wreg      void 
  3242 ;; Registers used:
  3243 ;;		wreg, status,2, status,0
  3244 ;; Tracked objects:
  3245 ;;		On entry : 0/0
  3246 ;;		On exit  : 0/0
  3247 ;;		Unchanged: 0/0
  3248 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3249 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3250 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3251 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3252 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3253 ;;Total ram usage:        4 bytes
  3254 ;; Hardware stack levels used: 1
  3255 ;; Hardware stack levels required when called: 2
  3256 ;; This function calls:
  3257 ;;		Nothing
  3258 ;; This function is called by:
  3259 ;;		_triggerAlarm
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	text4
  3264   000F3E                     __ptext4:
  3265                           	callstack 0
  3266   000F3E                     _PWM2_LoadDutyValue:
  3267                           	callstack 26
  3268   000F3E                     
  3269                           ;mcc_generated_files/pwm2.c: 78: void PWM2_LoadDutyValue(uint16_t dutyValue);mcc_generat
      +                          ed_files/pwm2.c: 79: {;mcc_generated_files/pwm2.c: 81:     CCPR2L = ((dutyValue & 0x03FC
      +                          )>>2);
  3270   000F3E  C004  F006         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  3271   000F42  C005  F007         	movff	PWM2_LoadDutyValue@dutyValue+1,??_PWM2_LoadDutyValue+1
  3272   000F46  90D8               	bcf	status,0,c
  3273   000F48  3207               	rrcf	(??_PWM2_LoadDutyValue+1)^0,f,c
  3274   000F4A  3206               	rrcf	??_PWM2_LoadDutyValue^0,f,c
  3275   000F4C  90D8               	bcf	status,0,c
  3276   000F4E  3207               	rrcf	(??_PWM2_LoadDutyValue+1)^0,f,c
  3277   000F50  3206               	rrcf	??_PWM2_LoadDutyValue^0,f,c
  3278   000F52  5006               	movf	??_PWM2_LoadDutyValue^0,w,c
  3279   000F54  6EBB               	movwf	187,c	;volatile
  3280                           
  3281                           ;mcc_generated_files/pwm2.c: 84:     CCP2CON = ((uint8_t)(CCP2CON & 0xCF) | ((dutyValue 
      +                          & 0x0003)<<4));
  3282   000F56  C004  F006         	movff	PWM2_LoadDutyValue@dutyValue,??_PWM2_LoadDutyValue
  3283   000F5A  0E03               	movlw	3
  3284   000F5C  1606               	andwf	??_PWM2_LoadDutyValue^0,f,c
  3285   000F5E  3A06               	swapf	??_PWM2_LoadDutyValue^0,f,c
  3286   000F60  0EF0               	movlw	240
  3287   000F62  1606               	andwf	??_PWM2_LoadDutyValue^0,f,c
  3288   000F64  50BA               	movf	186,w,c	;volatile
  3289   000F66  0BCF               	andlw	207
  3290   000F68  1006               	iorwf	??_PWM2_LoadDutyValue^0,w,c
  3291   000F6A  6EBA               	movwf	186,c	;volatile
  3292   000F6C  0012               	return		;funcret
  3293   000F6E                     __end_of_PWM2_LoadDutyValue:
  3294                           	callstack 0
  3295                           
  3296 ;; *************** function _matrixInit *****************
  3297 ;; Defined at:
  3298 ;;		line 96 in file "MAX7219.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;		None
  3301 ;; Auto vars:     Size  Location     Type
  3302 ;;		None
  3303 ;; Return value:  Size  Location     Type
  3304 ;;                  1    wreg      void 
  3305 ;; Registers used:
  3306 ;;		wreg, status,2, status,0, cstack
  3307 ;; Tracked objects:
  3308 ;;		On entry : 0/0
  3309 ;;		On exit  : 0/0
  3310 ;;		Unchanged: 0/0
  3311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3312 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;Total ram usage:        0 bytes
  3317 ;; Hardware stack levels used: 1
  3318 ;; Hardware stack levels required when called: 4
  3319 ;; This function calls:
  3320 ;;		_max7219_cmd
  3321 ;; This function is called by:
  3322 ;;		_main
  3323 ;; This function uses a non-reentrant model
  3324 ;;
  3325                           
  3326                           	psect	text5
  3327   000ED6                     __ptext5:
  3328                           	callstack 0
  3329   000ED6                     _matrixInit:
  3330                           	callstack 26
  3331   000ED6                     
  3332                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  3333   000ED6  0E00               	movlw	0
  3334   000ED8  6E05               	movwf	max7219_cmd@data^0,c
  3335   000EDA  0E09               	movlw	9
  3336   000EDC  ECFF  F006         	call	_max7219_cmd
  3337                           
  3338                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  3339   000EE0  0E01               	movlw	1
  3340   000EE2  6E05               	movwf	max7219_cmd@data^0,c
  3341   000EE4  0E0A               	movlw	10
  3342   000EE6  ECFF  F006         	call	_max7219_cmd
  3343                           
  3344                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  3345   000EEA  0E07               	movlw	7
  3346   000EEC  6E05               	movwf	max7219_cmd@data^0,c
  3347   000EEE  0E0B               	movlw	11
  3348   000EF0  ECFF  F006         	call	_max7219_cmd
  3349                           
  3350                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  3351   000EF4  0E01               	movlw	1
  3352   000EF6  6E05               	movwf	max7219_cmd@data^0,c
  3353   000EF8  0E0C               	movlw	12
  3354   000EFA  ECFF  F006         	call	_max7219_cmd
  3355                           
  3356                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  3357   000EFE  0E00               	movlw	0
  3358   000F00  6E05               	movwf	max7219_cmd@data^0,c
  3359   000F02  0E0F               	movlw	15
  3360   000F04  ECFF  F006         	call	_max7219_cmd
  3361   000F08  0012               	return		;funcret
  3362   000F0A                     __end_of_matrixInit:
  3363                           	callstack 0
  3364                           
  3365 ;; *************** function _max7219_cmd *****************
  3366 ;; Defined at:
  3367 ;;		line 76 in file "MAX7219.c"
  3368 ;; Parameters:    Size  Location     Type
  3369 ;;  Addr            1    wreg     unsigned char 
  3370 ;;  data            1    4[COMRAM] unsigned char 
  3371 ;; Auto vars:     Size  Location     Type
  3372 ;;  Addr            1    7[COMRAM] unsigned char 
  3373 ;;  i               2   10[COMRAM] int 
  3374 ;;  writeData       2    8[COMRAM] unsigned short 
  3375 ;; Return value:  Size  Location     Type
  3376 ;;                  1    wreg      void 
  3377 ;; Registers used:
  3378 ;;		wreg, status,2, status,0, cstack
  3379 ;; Tracked objects:
  3380 ;;		On entry : 0/0
  3381 ;;		On exit  : 0/0
  3382 ;;		Unchanged: 0/0
  3383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3384 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3385 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;Total ram usage:        8 bytes
  3389 ;; Hardware stack levels used: 1
  3390 ;; Hardware stack levels required when called: 3
  3391 ;; This function calls:
  3392 ;;		_SPI_Exchange8bit
  3393 ;; This function is called by:
  3394 ;;		_matrixInit
  3395 ;; This function uses a non-reentrant model
  3396 ;;
  3397                           
  3398                           	psect	text6
  3399   000DFE                     __ptext6:
  3400                           	callstack 0
  3401   000DFE                     _max7219_cmd:
  3402                           	callstack 26
  3403                           
  3404                           ;incstack = 0
  3405                           ;max7219_cmd@Addr stored from wreg
  3406   000DFE  6E08               	movwf	max7219_cmd@Addr^0,c
  3407   000E00                     
  3408                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  3409   000E00  5005               	movf	max7219_cmd@data^0,w,c
  3410   000E02  C008  F006         	movff	max7219_cmd@Addr,??_max7219_cmd
  3411   000E06  6A07               	clrf	(??_max7219_cmd+1)^0,c
  3412   000E08  C006  F007         	movff	??_max7219_cmd,??_max7219_cmd+1
  3413   000E0C  6A06               	clrf	??_max7219_cmd^0,c
  3414   000E0E  1006               	iorwf	??_max7219_cmd^0,w,c
  3415   000E10  6E09               	movwf	max7219_cmd@writeData^0,c
  3416   000E12  5007               	movf	(??_max7219_cmd+1)^0,w,c
  3417   000E14  6E0A               	movwf	(max7219_cmd@writeData+1)^0,c
  3418   000E16  948B               	bcf	139,2,c	;volatile
  3419   000E18                     
  3420                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  3421   000E18  0E00               	movlw	0
  3422   000E1A  6E0C               	movwf	(max7219_cmd@i+1)^0,c
  3423   000E1C  0E00               	movlw	0
  3424   000E1E  6E0B               	movwf	max7219_cmd@i^0,c
  3425   000E20                     l2707:
  3426                           
  3427                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  3428   000E20  500A               	movf	(max7219_cmd@writeData+1)^0,w,c
  3429   000E22  ECFB  F007         	call	_SPI_Exchange8bit
  3430                           
  3431                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  3432   000E26  5009               	movf	max7219_cmd@writeData^0,w,c
  3433   000E28  ECFB  F007         	call	_SPI_Exchange8bit
  3434   000E2C                     
  3435                           ;MAX7219.c: 90:  }
  3436   000E2C  4A0B               	infsnz	max7219_cmd@i^0,f,c
  3437   000E2E  2A0C               	incf	(max7219_cmd@i+1)^0,f,c
  3438   000E30  BE0C               	btfsc	(max7219_cmd@i+1)^0,7,c
  3439   000E32  EF24  F007         	goto	u1621
  3440   000E36  500C               	movf	(max7219_cmd@i+1)^0,w,c
  3441   000E38  E109               	bnz	u1620
  3442   000E3A  0E04               	movlw	4
  3443   000E3C  5C0B               	subwf	max7219_cmd@i^0,w,c
  3444   000E3E  A0D8               	btfss	status,0,c
  3445   000E40  EF24  F007         	goto	u1621
  3446   000E44  EF26  F007         	goto	u1620
  3447   000E48                     u1621:
  3448   000E48  EF10  F007         	goto	l2707
  3449   000E4C                     u1620:
  3450   000E4C  848B               	bsf	139,2,c	;volatile
  3451   000E4E  0012               	return		;funcret
  3452   000E50                     __end_of_max7219_cmd:
  3453                           	callstack 0
  3454                           
  3455 ;; *************** function _loadTimeFromFlash *****************
  3456 ;; Defined at:
  3457 ;;		line 333 in file "main.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;		None
  3460 ;; Auto vars:     Size  Location     Type
  3461 ;;  flashAddress    4    0        unsigned long 
  3462 ;; Return value:  Size  Location     Type
  3463 ;;                  1    wreg      void 
  3464 ;; Registers used:
  3465 ;;		wreg, status,2, status,0, cstack
  3466 ;; Tracked objects:
  3467 ;;		On entry : 0/0
  3468 ;;		On exit  : 0/0
  3469 ;;		Unchanged: 0/0
  3470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3473 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3474 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3475 ;;Total ram usage:        0 bytes
  3476 ;; Hardware stack levels used: 1
  3477 ;; Hardware stack levels required when called: 3
  3478 ;; This function calls:
  3479 ;;		_FLASH_ReadByte
  3480 ;; This function is called by:
  3481 ;;		_main
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text7
  3486   000D52                     __ptext7:
  3487                           	callstack 0
  3488   000D52                     _loadTimeFromFlash:
  3489                           	callstack 27
  3490   000D52                     
  3491                           ;main.c: 336:     hours = FLASH_ReadByte(flashAddress);
  3492   000D52  0E80               	movlw	128
  3493   000D54  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  3494   000D56  0E1F               	movlw	31
  3495   000D58  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3496   000D5A  0E00               	movlw	0
  3497   000D5C  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3498   000D5E  0E00               	movlw	0
  3499   000D60  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3500   000D62  EC12  F008         	call	_FLASH_ReadByte	;wreg free
  3501   000D66  0100               	movlb	0	; () banked
  3502   000D68  6FCE               	movwf	_hours& (0+255),b
  3503   000D6A                     
  3504                           ; BSR set to: 0
  3505                           ;main.c: 337:     minutes = FLASH_ReadByte(flashAddress + 1);
  3506   000D6A  0E81               	movlw	129
  3507   000D6C  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  3508   000D6E  0E1F               	movlw	31
  3509   000D70  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3510   000D72  0E00               	movlw	0
  3511   000D74  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3512   000D76  0E00               	movlw	0
  3513   000D78  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3514   000D7A  EC12  F008         	call	_FLASH_ReadByte	;wreg free
  3515   000D7E  0100               	movlb	0	; () banked
  3516   000D80  6FCD               	movwf	_minutes& (0+255),b
  3517                           
  3518                           ;main.c: 340:     if (hours >= 24) hours = 0;
  3519   000D82  0E17               	movlw	23
  3520   000D84  65CE               	cpfsgt	_hours& (0+255),b
  3521   000D86  EFC7  F006         	goto	u2391
  3522   000D8A  EFC9  F006         	goto	u2390
  3523   000D8E                     u2391:
  3524   000D8E  EFCB  F006         	goto	l3257
  3525   000D92                     u2390:
  3526   000D92                     
  3527                           ; BSR set to: 0
  3528   000D92  0E00               	movlw	0
  3529   000D94  6FCE               	movwf	_hours& (0+255),b
  3530   000D96                     l3257:
  3531                           
  3532                           ; BSR set to: 0
  3533                           ;main.c: 341:     if (minutes >= 60) minutes = 0;
  3534   000D96  0E3B               	movlw	59
  3535   000D98  65CD               	cpfsgt	_minutes& (0+255),b
  3536   000D9A  EFD1  F006         	goto	u2401
  3537   000D9E  EFD3  F006         	goto	u2400
  3538   000DA2                     u2401:
  3539   000DA2  EFD5  F006         	goto	l514
  3540   000DA6                     u2400:
  3541   000DA6                     
  3542                           ; BSR set to: 0
  3543   000DA6  0E00               	movlw	0
  3544   000DA8  6FCD               	movwf	_minutes& (0+255),b
  3545   000DAA                     l514:
  3546                           
  3547                           ; BSR set to: 0
  3548   000DAA  0012               	return		;funcret
  3549   000DAC                     __end_of_loadTimeFromFlash:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _checkButtons *****************
  3553 ;; Defined at:
  3554 ;;		line 211 in file "main.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;Total ram usage:        2 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 7
  3575 ;; This function calls:
  3576 ;;		___awmod
  3577 ;;		_clearAlarm
  3578 ;;		_displayAlarmTime
  3579 ;;		_displayTime
  3580 ;;		_saveTimeToFlash
  3581 ;; This function is called by:
  3582 ;;		_main
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text8
  3587   000068                     __ptext8:
  3588                           	callstack 0
  3589   000068                     _checkButtons:
  3590                           	callstack 23
  3591   000068                     
  3592                           ;main.c: 213:     static uint8_t button3PressCount = 0;;main.c: 214:     static uint16_t
      +                           button3HoldTime = 0;;main.c: 215:     static _Bool alarmSettingMode = 0;;main.c: 218:  
      +                             if (!PORTBbits.RB0)
  3593   000068  B081               	btfsc	129,0,c	;volatile
  3594   00006A  EF39  F000         	goto	u2771
  3595   00006E  EF3B  F000         	goto	u2770
  3596   000072                     u2771:
  3597   000072  EF7C  F000         	goto	l3529
  3598   000076                     u2770:
  3599   000076                     
  3600                           ;main.c: 219:     {;main.c: 220:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3601   000076  0E02               	movlw	2
  3602   000078  0100               	movlb	0	; () banked
  3603   00007A  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3604   00007C  0E04               	movlw	4
  3605   00007E  6FDF               	movwf	??_checkButtons& (0+255),b
  3606   000080  0EBA               	movlw	186
  3607   000082                     u3067:
  3608   000082  2EE8               	decfsz	wreg,f,c
  3609   000084  D7FE               	bra	u3067
  3610   000086  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3611   000088  D7FC               	bra	u3067
  3612   00008A  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3613   00008C  D7FA               	bra	u3067
  3614   00008E  0000               	nop	
  3615   000090                     
  3616                           ;main.c: 221:         if (!PORTBbits.RB0)
  3617   000090  B081               	btfsc	129,0,c	;volatile
  3618   000092  EF4D  F000         	goto	u2781
  3619   000096  EF4F  F000         	goto	u2780
  3620   00009A                     u2781:
  3621   00009A  EF7C  F000         	goto	l3529
  3622   00009E                     u2780:
  3623   00009E                     
  3624                           ;main.c: 222:         {;main.c: 223:             if (alarmSettingMode)
  3625   00009E  0100               	movlb	0	; () banked
  3626   0000A0  51C2               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3627   0000A2  B4D8               	btfsc	status,2,c
  3628   0000A4  EF56  F000         	goto	u2791
  3629   0000A8  EF58  F000         	goto	u2790
  3630   0000AC                     u2791:
  3631   0000AC  EF6B  F000         	goto	l3525
  3632   0000B0                     u2790:
  3633   0000B0                     
  3634                           ; BSR set to: 0
  3635                           ;main.c: 224:             {;main.c: 225:                 alarmHours = (alarmHours + 1) %
      +                           24;
  3636   0000B0  0E01               	movlw	1
  3637   0000B2  25CB               	addwf	_alarmHours& (0+255),w,b
  3638   0000B4  6E04               	movwf	___awmod@dividend^0,c
  3639   0000B6  6A05               	clrf	(___awmod@dividend+1)^0,c
  3640   0000B8  0E00               	movlw	0
  3641   0000BA  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3642   0000BC  0E00               	movlw	0
  3643   0000BE  6E07               	movwf	(___awmod@divisor+1)^0,c
  3644   0000C0  0E18               	movlw	24
  3645   0000C2  6E06               	movwf	___awmod@divisor^0,c
  3646   0000C4  ECC5  F005         	call	___awmod	;wreg free
  3647   0000C8  5004               	movf	?___awmod^0,w,c
  3648   0000CA  0100               	movlb	0	; () banked
  3649   0000CC  6FCB               	movwf	_alarmHours& (0+255),b
  3650   0000CE                     
  3651                           ; BSR set to: 0
  3652                           ;main.c: 226:                 displayAlarmTime();
  3653   0000CE  EC6B  F005         	call	_displayAlarmTime	;wreg free
  3654                           
  3655                           ;main.c: 227:             }
  3656   0000D2  EF7C  F000         	goto	l3529
  3657   0000D6                     l3525:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;main.c: 229:             {;main.c: 230:                 hours = (hours + 1) % 24;
  3661   0000D6  0E01               	movlw	1
  3662   0000D8  25CE               	addwf	_hours& (0+255),w,b
  3663   0000DA  6E04               	movwf	___awmod@dividend^0,c
  3664   0000DC  6A05               	clrf	(___awmod@dividend+1)^0,c
  3665   0000DE  0E00               	movlw	0
  3666   0000E0  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3667   0000E2  0E00               	movlw	0
  3668   0000E4  6E07               	movwf	(___awmod@divisor+1)^0,c
  3669   0000E6  0E18               	movlw	24
  3670   0000E8  6E06               	movwf	___awmod@divisor^0,c
  3671   0000EA  ECC5  F005         	call	___awmod	;wreg free
  3672   0000EE  5004               	movf	?___awmod^0,w,c
  3673   0000F0  0100               	movlb	0	; () banked
  3674   0000F2  6FCE               	movwf	_hours& (0+255),b
  3675   0000F4                     
  3676                           ; BSR set to: 0
  3677                           ;main.c: 231:                 displayTime();
  3678   0000F4  EC11  F005         	call	_displayTime	;wreg free
  3679   0000F8                     l3529:
  3680                           
  3681                           ;main.c: 237:     if (!PORTBbits.RB1)
  3682   0000F8  B281               	btfsc	129,1,c	;volatile
  3683   0000FA  EF81  F000         	goto	u2801
  3684   0000FE  EF83  F000         	goto	u2800
  3685   000102                     u2801:
  3686   000102  EFC4  F000         	goto	l3545
  3687   000106                     u2800:
  3688   000106                     
  3689                           ;main.c: 238:     {;main.c: 239:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3690   000106  0E02               	movlw	2
  3691   000108  0100               	movlb	0	; () banked
  3692   00010A  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3693   00010C  0E04               	movlw	4
  3694   00010E  6FDF               	movwf	??_checkButtons& (0+255),b
  3695   000110  0EBA               	movlw	186
  3696   000112                     u3077:
  3697   000112  2EE8               	decfsz	wreg,f,c
  3698   000114  D7FE               	bra	u3077
  3699   000116  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3700   000118  D7FC               	bra	u3077
  3701   00011A  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3702   00011C  D7FA               	bra	u3077
  3703   00011E  0000               	nop	
  3704   000120                     
  3705                           ;main.c: 240:         if (!PORTBbits.RB1)
  3706   000120  B281               	btfsc	129,1,c	;volatile
  3707   000122  EF95  F000         	goto	u2811
  3708   000126  EF97  F000         	goto	u2810
  3709   00012A                     u2811:
  3710   00012A  EFC4  F000         	goto	l3545
  3711   00012E                     u2810:
  3712   00012E                     
  3713                           ;main.c: 241:         {;main.c: 242:             if (alarmSettingMode)
  3714   00012E  0100               	movlb	0	; () banked
  3715   000130  51C2               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3716   000132  B4D8               	btfsc	status,2,c
  3717   000134  EF9E  F000         	goto	u2821
  3718   000138  EFA0  F000         	goto	u2820
  3719   00013C                     u2821:
  3720   00013C  EFB3  F000         	goto	l3541
  3721   000140                     u2820:
  3722   000140                     
  3723                           ; BSR set to: 0
  3724                           ;main.c: 243:             {;main.c: 244:                 alarmMinutes = (alarmMinutes + 
      +                          1) % 60;
  3725   000140  0E01               	movlw	1
  3726   000142  25CA               	addwf	_alarmMinutes& (0+255),w,b
  3727   000144  6E04               	movwf	___awmod@dividend^0,c
  3728   000146  6A05               	clrf	(___awmod@dividend+1)^0,c
  3729   000148  0E00               	movlw	0
  3730   00014A  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3731   00014C  0E00               	movlw	0
  3732   00014E  6E07               	movwf	(___awmod@divisor+1)^0,c
  3733   000150  0E3C               	movlw	60
  3734   000152  6E06               	movwf	___awmod@divisor^0,c
  3735   000154  ECC5  F005         	call	___awmod	;wreg free
  3736   000158  5004               	movf	?___awmod^0,w,c
  3737   00015A  0100               	movlb	0	; () banked
  3738   00015C  6FCA               	movwf	_alarmMinutes& (0+255),b
  3739   00015E                     
  3740                           ; BSR set to: 0
  3741                           ;main.c: 245:                 displayAlarmTime();
  3742   00015E  EC6B  F005         	call	_displayAlarmTime	;wreg free
  3743                           
  3744                           ;main.c: 246:             }
  3745   000162  EFC4  F000         	goto	l3545
  3746   000166                     l3541:
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;main.c: 248:             {;main.c: 249:                 minutes = (minutes + 1) % 60;
  3750   000166  0E01               	movlw	1
  3751   000168  25CD               	addwf	_minutes& (0+255),w,b
  3752   00016A  6E04               	movwf	___awmod@dividend^0,c
  3753   00016C  6A05               	clrf	(___awmod@dividend+1)^0,c
  3754   00016E  0E00               	movlw	0
  3755   000170  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3756   000172  0E00               	movlw	0
  3757   000174  6E07               	movwf	(___awmod@divisor+1)^0,c
  3758   000176  0E3C               	movlw	60
  3759   000178  6E06               	movwf	___awmod@divisor^0,c
  3760   00017A  ECC5  F005         	call	___awmod	;wreg free
  3761   00017E  5004               	movf	?___awmod^0,w,c
  3762   000180  0100               	movlb	0	; () banked
  3763   000182  6FCD               	movwf	_minutes& (0+255),b
  3764   000184                     
  3765                           ; BSR set to: 0
  3766                           ;main.c: 250:                 displayTime();
  3767   000184  EC11  F005         	call	_displayTime	;wreg free
  3768   000188                     l3545:
  3769                           
  3770                           ;main.c: 256:     if (!PORTBbits.RB2)
  3771   000188  B481               	btfsc	129,2,c	;volatile
  3772   00018A  EFC9  F000         	goto	u2831
  3773   00018E  EFCB  F000         	goto	u2830
  3774   000192                     u2831:
  3775   000192  EF5F  F001         	goto	l3583
  3776   000196                     u2830:
  3777   000196                     
  3778                           ;main.c: 257:     {;main.c: 258:         button3HoldTime += 100;
  3779   000196  0E64               	movlw	100
  3780   000198  0100               	movlb	0	; () banked
  3781   00019A  27BA               	addwf	checkButtons@button3HoldTime& (0+255),f,b
  3782   00019C  0E00               	movlw	0
  3783   00019E  23BB               	addwfc	(checkButtons@button3HoldTime+1)& (0+255),f,b
  3784   0001A0                     
  3785                           ; BSR set to: 0
  3786                           ;main.c: 259:         _delay((unsigned long)((100)*(8000000/4000.0)));
  3787   0001A0  0E02               	movlw	2
  3788   0001A2  0100               	movlb	0	; () banked
  3789   0001A4  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3790   0001A6  0E04               	movlw	4
  3791   0001A8  6FDF               	movwf	??_checkButtons& (0+255),b
  3792   0001AA  0EBA               	movlw	186
  3793   0001AC                     u3087:
  3794   0001AC  2EE8               	decfsz	wreg,f,c
  3795   0001AE  D7FE               	bra	u3087
  3796   0001B0  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3797   0001B2  D7FC               	bra	u3087
  3798   0001B4  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3799   0001B6  D7FA               	bra	u3087
  3800   0001B8  0000               	nop	
  3801   0001BA                     
  3802                           ;main.c: 261:         if (button3HoldTime >= 3000)
  3803   0001BA  0EB8               	movlw	184
  3804   0001BC  0100               	movlb	0	; () banked
  3805   0001BE  5DBA               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3806   0001C0  0E0B               	movlw	11
  3807   0001C2  59BB               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3808   0001C4  A0D8               	btfss	status,0,c
  3809   0001C6  EFE7  F000         	goto	u2841
  3810   0001CA  EFE9  F000         	goto	u2840
  3811   0001CE                     u2841:
  3812   0001CE  EF53  F001         	goto	l3579
  3813   0001D2                     u2840:
  3814   0001D2                     
  3815                           ; BSR set to: 0
  3816                           ;main.c: 262:         {;main.c: 263:             if (!alarmTriggered)
  3817   0001D2  51C7               	movf	_alarmTriggered& (0+255),w,b
  3818   0001D4  A4D8               	btfss	status,2,c
  3819   0001D6  EFEF  F000         	goto	u2851
  3820   0001DA  EFF1  F000         	goto	u2850
  3821   0001DE                     u2851:
  3822   0001DE  EF7E  F001         	goto	l504
  3823   0001E2                     u2850:
  3824   0001E2                     
  3825                           ; BSR set to: 0
  3826                           ;main.c: 264:             {;main.c: 265:                 alarmSettingMode = 1;
  3827   0001E2  0E01               	movlw	1
  3828   0001E4  6FC2               	movwf	checkButtons@alarmSettingMode& (0+255),b
  3829   0001E6                     l3557:
  3830                           
  3831                           ; BSR set to: 0
  3832                           ;main.c: 266:                 displayAlarmTime();
  3833   0001E6  EC6B  F005         	call	_displayAlarmTime	;wreg free
  3834                           
  3835                           ;main.c: 268:                 while (!PORTBbits.RB2)
  3836   0001EA  EF43  F001         	goto	l3573
  3837   0001EE                     l495:
  3838                           
  3839                           ;main.c: 269:                 {;main.c: 270:                     if (!PORTBbits.RB0)
  3840   0001EE  B081               	btfsc	129,0,c	;volatile
  3841   0001F0  EFFC  F000         	goto	u2861
  3842   0001F4  EFFE  F000         	goto	u2860
  3843   0001F8                     u2861:
  3844   0001F8  EF1D  F001         	goto	l3565
  3845   0001FC                     u2860:
  3846   0001FC                     
  3847                           ;main.c: 271:                     {;main.c: 272:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3848   0001FC  0E02               	movlw	2
  3849   0001FE  0100               	movlb	0	; () banked
  3850   000200  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3851   000202  0E04               	movlw	4
  3852   000204  6FDF               	movwf	??_checkButtons& (0+255),b
  3853   000206  0EBA               	movlw	186
  3854   000208                     u3097:
  3855   000208  2EE8               	decfsz	wreg,f,c
  3856   00020A  D7FE               	bra	u3097
  3857   00020C  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3858   00020E  D7FC               	bra	u3097
  3859   000210  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3860   000212  D7FA               	bra	u3097
  3861   000214  0000               	nop	
  3862   000216                     
  3863                           ;main.c: 273:                         alarmHours = (alarmHours + 1) % 24;
  3864   000216  0E01               	movlw	1
  3865   000218  0100               	movlb	0	; () banked
  3866   00021A  25CB               	addwf	_alarmHours& (0+255),w,b
  3867   00021C  6E04               	movwf	___awmod@dividend^0,c
  3868   00021E  6A05               	clrf	(___awmod@dividend+1)^0,c
  3869   000220  0E00               	movlw	0
  3870   000222  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3871   000224  0E00               	movlw	0
  3872   000226  6E07               	movwf	(___awmod@divisor+1)^0,c
  3873   000228  0E18               	movlw	24
  3874   00022A  6E06               	movwf	___awmod@divisor^0,c
  3875   00022C  ECC5  F005         	call	___awmod	;wreg free
  3876   000230  5004               	movf	?___awmod^0,w,c
  3877   000232  0100               	movlb	0	; () banked
  3878   000234  6FCB               	movwf	_alarmHours& (0+255),b
  3879   000236                     
  3880                           ; BSR set to: 0
  3881                           ;main.c: 274:                         displayAlarmTime();
  3882   000236  EC6B  F005         	call	_displayAlarmTime	;wreg free
  3883   00023A                     l3565:
  3884                           
  3885                           ;main.c: 276:                     if (!PORTBbits.RB1)
  3886   00023A  B281               	btfsc	129,1,c	;volatile
  3887   00023C  EF22  F001         	goto	u2871
  3888   000240  EF24  F001         	goto	u2870
  3889   000244                     u2871:
  3890   000244  EF43  F001         	goto	l3573
  3891   000248                     u2870:
  3892   000248                     
  3893                           ;main.c: 277:                     {;main.c: 278:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3894   000248  0E02               	movlw	2
  3895   00024A  0100               	movlb	0	; () banked
  3896   00024C  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3897   00024E  0E04               	movlw	4
  3898   000250  6FDF               	movwf	??_checkButtons& (0+255),b
  3899   000252  0EBA               	movlw	186
  3900   000254                     u3107:
  3901   000254  2EE8               	decfsz	wreg,f,c
  3902   000256  D7FE               	bra	u3107
  3903   000258  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3904   00025A  D7FC               	bra	u3107
  3905   00025C  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3906   00025E  D7FA               	bra	u3107
  3907   000260  0000               	nop	
  3908   000262                     
  3909                           ;main.c: 279:                         alarmMinutes = (alarmMinutes + 1) % 60;
  3910   000262  0E01               	movlw	1
  3911   000264  0100               	movlb	0	; () banked
  3912   000266  25CA               	addwf	_alarmMinutes& (0+255),w,b
  3913   000268  6E04               	movwf	___awmod@dividend^0,c
  3914   00026A  6A05               	clrf	(___awmod@dividend+1)^0,c
  3915   00026C  0E00               	movlw	0
  3916   00026E  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3917   000270  0E00               	movlw	0
  3918   000272  6E07               	movwf	(___awmod@divisor+1)^0,c
  3919   000274  0E3C               	movlw	60
  3920   000276  6E06               	movwf	___awmod@divisor^0,c
  3921   000278  ECC5  F005         	call	___awmod	;wreg free
  3922   00027C  5004               	movf	?___awmod^0,w,c
  3923   00027E  0100               	movlb	0	; () banked
  3924   000280  6FCA               	movwf	_alarmMinutes& (0+255),b
  3925   000282  EFF3  F000         	goto	l3557
  3926   000286                     l3573:
  3927                           
  3928                           ;main.c: 268:                 while (!PORTBbits.RB2)
  3929   000286  A481               	btfss	129,2,c	;volatile
  3930   000288  EF48  F001         	goto	u2881
  3931   00028C  EF4A  F001         	goto	u2880
  3932   000290                     u2881:
  3933   000290  EFF7  F000         	goto	l495
  3934   000294                     u2880:
  3935   000294                     
  3936                           ;main.c: 284:                 alarmSettingMode = 0;
  3937   000294  0E00               	movlw	0
  3938   000296  0100               	movlb	0	; () banked
  3939   000298  6FC2               	movwf	checkButtons@alarmSettingMode& (0+255),b
  3940                           
  3941                           ;main.c: 285:                 alarmSet = 1;
  3942   00029A  0E01               	movlw	1
  3943   00029C  6FC9               	movwf	_alarmSet& (0+255),b
  3944   00029E                     
  3945                           ; BSR set to: 0
  3946                           ;main.c: 286:                 displayTime();
  3947   00029E  EC11  F005         	call	_displayTime	;wreg free
  3948   0002A2  EF7E  F001         	goto	l504
  3949   0002A6                     l3579:
  3950                           
  3951                           ; BSR set to: 0
  3952                           ;main.c: 290:         {;main.c: 291:             if (alarmTriggered)
  3953   0002A6  51C7               	movf	_alarmTriggered& (0+255),w,b
  3954   0002A8  B4D8               	btfsc	status,2,c
  3955   0002AA  EF59  F001         	goto	u2891
  3956   0002AE  EF5B  F001         	goto	u2890
  3957   0002B2                     u2891:
  3958   0002B2  EF7E  F001         	goto	l504
  3959   0002B6                     u2890:
  3960   0002B6                     
  3961                           ; BSR set to: 0
  3962                           ;main.c: 292:             {;main.c: 293:                 clearAlarm();
  3963   0002B6  EC32  F008         	call	_clearAlarm	;wreg free
  3964   0002BA  EF7E  F001         	goto	l504
  3965   0002BE                     l3583:
  3966                           
  3967                           ;main.c: 298:     {;main.c: 299:         if (button3HoldTime < 3000)
  3968   0002BE  0EB8               	movlw	184
  3969   0002C0  0100               	movlb	0	; () banked
  3970   0002C2  5DBA               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3971   0002C4  0E0B               	movlw	11
  3972   0002C6  59BB               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3973   0002C8  B0D8               	btfsc	status,0,c
  3974   0002CA  EF69  F001         	goto	u2901
  3975   0002CE  EF6B  F001         	goto	u2900
  3976   0002D2                     u2901:
  3977   0002D2  EF7A  F001         	goto	l3593
  3978   0002D6                     u2900:
  3979   0002D6                     
  3980                           ; BSR set to: 0
  3981                           ;main.c: 300:         {;main.c: 301:             button3PressCount++;
  3982   0002D6  2BC3               	incf	checkButtons@button3PressCount& (0+255),f,b
  3983   0002D8                     
  3984                           ; BSR set to: 0
  3985                           ;main.c: 302:             if (button3PressCount == 5)
  3986   0002D8  0E05               	movlw	5
  3987   0002DA  19C3               	xorwf	checkButtons@button3PressCount& (0+255),w,b
  3988   0002DC  A4D8               	btfss	status,2,c
  3989   0002DE  EF73  F001         	goto	u2911
  3990   0002E2  EF75  F001         	goto	u2910
  3991   0002E6                     u2911:
  3992   0002E6  EF7A  F001         	goto	l3593
  3993   0002EA                     u2910:
  3994   0002EA                     
  3995                           ; BSR set to: 0
  3996                           ;main.c: 303:             {;main.c: 304:                 saveTimeToFlash();
  3997   0002EA  EC6C  F006         	call	_saveTimeToFlash	;wreg free
  3998   0002EE                     
  3999                           ;main.c: 305:                 button3PressCount = 0;
  4000   0002EE  0E00               	movlw	0
  4001   0002F0  0100               	movlb	0	; () banked
  4002   0002F2  6FC3               	movwf	checkButtons@button3PressCount& (0+255),b
  4003   0002F4                     l3593:
  4004                           
  4005                           ; BSR set to: 0
  4006                           ;main.c: 308:         button3HoldTime = 0;
  4007   0002F4  0E00               	movlw	0
  4008   0002F6  6FBB               	movwf	(checkButtons@button3HoldTime+1)& (0+255),b
  4009   0002F8  0E00               	movlw	0
  4010   0002FA  6FBA               	movwf	checkButtons@button3HoldTime& (0+255),b
  4011   0002FC                     l504:
  4012   0002FC  0012               	return		;funcret
  4013   0002FE                     __end_of_checkButtons:
  4014                           	callstack 0
  4015                           
  4016 ;; *************** function _saveTimeToFlash *****************
  4017 ;; Defined at:
  4018 ;;		line 314 in file "main.c"
  4019 ;; Parameters:    Size  Location     Type
  4020 ;;		None
  4021 ;; Auto vars:     Size  Location     Type
  4022 ;;  i               1   68[BANK1 ] unsigned char 
  4023 ;;  flashBuffer    64    0[BANK1 ] unsigned char [64]
  4024 ;;  flashAddress    4   64[BANK1 ] unsigned long 
  4025 ;; Return value:  Size  Location     Type
  4026 ;;                  1    wreg      void 
  4027 ;; Registers used:
  4028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4029 ;; Tracked objects:
  4030 ;;		On entry : 0/0
  4031 ;;		On exit  : 0/0
  4032 ;;		Unchanged: 0/0
  4033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4035 ;;      Locals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4037 ;;      Totals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4038 ;;Total ram usage:       69 bytes
  4039 ;; Hardware stack levels used: 1
  4040 ;; Hardware stack levels required when called: 4
  4041 ;; This function calls:
  4042 ;;		_FLASH_ReadByte
  4043 ;;		_FLASH_WriteBlock
  4044 ;; This function is called by:
  4045 ;;		_main
  4046 ;;		_checkButtons
  4047 ;; This function uses a non-reentrant model
  4048 ;;
  4049                           
  4050                           	psect	text9
  4051   000CD8                     __ptext9:
  4052                           	callstack 0
  4053   000CD8                     _saveTimeToFlash:
  4054                           	callstack 26
  4055   000CD8                     
  4056                           ;main.c: 316:     uint32_t flashAddress = 0x1F80;
  4057   000CD8  0E80               	movlw	128
  4058   000CDA  0101               	movlb	1	; () banked
  4059   000CDC  6F40               	movwf	saveTimeToFlash@flashAddress& (0+255),b
  4060   000CDE  0E1F               	movlw	31
  4061   000CE0  6F41               	movwf	(saveTimeToFlash@flashAddress+1)& (0+255),b
  4062   000CE2  0E00               	movlw	0
  4063   000CE4  6F42               	movwf	(saveTimeToFlash@flashAddress+2)& (0+255),b
  4064   000CE6  0E00               	movlw	0
  4065   000CE8  6F43               	movwf	(saveTimeToFlash@flashAddress+3)& (0+255),b
  4066                           
  4067                           ;main.c: 317:     uint8_t flashBuffer[64];;main.c: 320:     for (uint8_t i = 0; i < 64; 
      +                          i++) {
  4068   000CEA  0E00               	movlw	0
  4069   000CEC  6F44               	movwf	saveTimeToFlash@i& (0+255),b
  4070   000CEE                     l3505:
  4071                           
  4072                           ; BSR set to: 1
  4073                           ;main.c: 321:         flashBuffer[i] = FLASH_ReadByte(flashAddress + i);
  4074   000CEE  0E00               	movlw	low saveTimeToFlash@flashBuffer
  4075   000CF0  2544               	addwf	saveTimeToFlash@i& (0+255),w,b
  4076   000CF2  6ED9               	movwf	fsr2l,c
  4077   000CF4  6ADA               	clrf	fsr2h,c
  4078   000CF6  0E01               	movlw	high saveTimeToFlash@flashBuffer
  4079   000CF8  22DA               	addwfc	fsr2h,f,c
  4080   000CFA  5144               	movf	saveTimeToFlash@i& (0+255),w,b
  4081   000CFC  2540               	addwf	saveTimeToFlash@flashAddress& (0+255),w,b
  4082   000CFE  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  4083   000D00  0E00               	movlw	0
  4084   000D02  2141               	addwfc	(saveTimeToFlash@flashAddress+1)& (0+255),w,b
  4085   000D04  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  4086   000D06  0E00               	movlw	0
  4087   000D08  2142               	addwfc	(saveTimeToFlash@flashAddress+2)& (0+255),w,b
  4088   000D0A  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  4089   000D0C  0E00               	movlw	0
  4090   000D0E  2143               	addwfc	(saveTimeToFlash@flashAddress+3)& (0+255),w,b
  4091   000D10  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  4092   000D12  EC12  F008         	call	_FLASH_ReadByte	;wreg free
  4093   000D16  6EDF               	movwf	indf2,c
  4094   000D18                     
  4095                           ;main.c: 322:     }
  4096   000D18  0101               	movlb	1	; () banked
  4097   000D1A  2B44               	incf	saveTimeToFlash@i& (0+255),f,b
  4098   000D1C                     
  4099                           ; BSR set to: 1
  4100   000D1C  0E3F               	movlw	63
  4101   000D1E  6544               	cpfsgt	saveTimeToFlash@i& (0+255),b
  4102   000D20  EF94  F006         	goto	u2761
  4103   000D24  EF96  F006         	goto	u2760
  4104   000D28                     u2761:
  4105   000D28  EF77  F006         	goto	l3505
  4106   000D2C                     u2760:
  4107   000D2C                     
  4108                           ; BSR set to: 1
  4109                           ;main.c: 325:     flashBuffer[0] = hours;
  4110   000D2C  C0CE  F100         	movff	_hours,saveTimeToFlash@flashBuffer
  4111                           
  4112                           ;main.c: 326:     flashBuffer[1] = minutes;
  4113   000D30  C0CD  F101         	movff	_minutes,saveTimeToFlash@flashBuffer+1
  4114   000D34                     
  4115                           ; BSR set to: 1
  4116                           ;main.c: 329:     FLASH_WriteBlock(flashAddress, flashBuffer);
  4117   000D34  C140  F009         	movff	saveTimeToFlash@flashAddress,FLASH_WriteBlock@writeAddr
  4118   000D38  C141  F00A         	movff	saveTimeToFlash@flashAddress+1,FLASH_WriteBlock@writeAddr+1
  4119   000D3C  C142  F00B         	movff	saveTimeToFlash@flashAddress+2,FLASH_WriteBlock@writeAddr+2
  4120   000D40  C143  F00C         	movff	saveTimeToFlash@flashAddress+3,FLASH_WriteBlock@writeAddr+3
  4121   000D44  0E00               	movlw	low saveTimeToFlash@flashBuffer
  4122   000D46  6E0D               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  4123   000D48  0E01               	movlw	high saveTimeToFlash@flashBuffer
  4124   000D4A  6E0E               	movwf	(FLASH_WriteBlock@flashWrBufPtr+1)^0,c
  4125   000D4C  EC6F  F003         	call	_FLASH_WriteBlock	;wreg free
  4126   000D50  0012               	return		;funcret
  4127   000D52                     __end_of_saveTimeToFlash:
  4128                           	callstack 0
  4129                           
  4130 ;; *************** function _FLASH_WriteBlock *****************
  4131 ;; Defined at:
  4132 ;;		line 93 in file "mcc_generated_files/memory.c"
  4133 ;; Parameters:    Size  Location     Type
  4134 ;;  writeAddr       4    8[COMRAM] unsigned long 
  4135 ;;  flashWrBufPt    2   12[COMRAM] PTR unsigned char 
  4136 ;;		 -> saveTimeToFlash@flashBuffer(64), 
  4137 ;; Auto vars:     Size  Location     Type
  4138 ;;  blockStartAd    4   14[COMRAM] unsigned long 
  4139 ;;  i               1   22[COMRAM] unsigned char 
  4140 ;;  dataCounter     1   21[COMRAM] unsigned char 
  4141 ;;  numberOfWrit    1   20[COMRAM] unsigned char 
  4142 ;;  j               1   19[COMRAM] unsigned char 
  4143 ;;  GIEBitValue     1   18[COMRAM] unsigned char 
  4144 ;; Return value:  Size  Location     Type
  4145 ;;                  1    wreg      char 
  4146 ;; Registers used:
  4147 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4148 ;; Tracked objects:
  4149 ;;		On entry : 0/0
  4150 ;;		On exit  : 0/0
  4151 ;;		Unchanged: 0/0
  4152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4153 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4154 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4156 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4157 ;;Total ram usage:       15 bytes
  4158 ;; Hardware stack levels used: 1
  4159 ;; Hardware stack levels required when called: 3
  4160 ;; This function calls:
  4161 ;;		_FLASH_EraseBlock
  4162 ;; This function is called by:
  4163 ;;		_saveTimeToFlash
  4164 ;;		_FLASH_WriteByte
  4165 ;; This function uses a non-reentrant model
  4166 ;;
  4167                           
  4168                           	psect	text10
  4169   0006DE                     __ptext10:
  4170                           	callstack 0
  4171   0006DE                     _FLASH_WriteBlock:
  4172                           	callstack 26
  4173   0006DE                     
  4174                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  4175   0006DE  0EC0               	movlw	192
  4176   0006E0  1409               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  4177   0006E2  6E0F               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  4178   0006E4  0EFF               	movlw	255
  4179   0006E6  140A               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4180   0006E8  6E10               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  4181   0006EA  0E00               	movlw	0
  4182   0006EC  140B               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4183   0006EE  6E11               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  4184   0006F0  0E00               	movlw	0
  4185   0006F2  140C               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4186   0006F4  6E12               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  4187   0006F6                     
  4188                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  4189   0006F6  0E00               	movlw	0
  4190   0006F8  BEF2               	btfsc	242,7,c	;volatile
  4191   0006FA  0E01               	movlw	1
  4192   0006FC  6E13               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  4193   0006FE  0E00               	movlw	0
  4194   000700  6E16               	movwf	FLASH_WriteBlock@dataCounter^0,c
  4195   000702                     
  4196                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  4197   000702  0E01               	movlw	1
  4198   000704  6E15               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  4199   000706                     
  4200                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  4201   000706  500F               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  4202   000708  1809               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  4203   00070A  E10F               	bnz	u2710
  4204   00070C  5010               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  4205   00070E  180A               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4206   000710  E10C               	bnz	u2710
  4207   000712  5011               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  4208   000714  180B               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4209   000716  E109               	bnz	u2710
  4210   000718  5012               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  4211   00071A  180C               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4212   00071C  B4D8               	btfsc	status,2,c
  4213   00071E  EF93  F003         	goto	u2711
  4214   000722  EF95  F003         	goto	u2710
  4215   000726                     u2711:
  4216   000726  EF97  F003         	goto	l3461
  4217   00072A                     u2710:
  4218   00072A  EFE5  F003         	goto	l312
  4219   00072E                     l3461:
  4220                           
  4221                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  4222   00072E  C009  F004         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  4223   000732  C00A  F005         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  4224   000736  C00B  F006         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  4225   00073A  C00C  F007         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  4226   00073E  EC85  F007         	call	_FLASH_EraseBlock	;wreg free
  4227   000742                     
  4228                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  4229   000742  C00B  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  4230   000746                     
  4231                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  4232   000746  C00A  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  4233   00074A                     
  4234                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  4235   00074A  C009  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  4236   00074E                     
  4237                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  4238   00074E  0E00               	movlw	0
  4239   000750  6E14               	movwf	FLASH_WriteBlock@j^0,c
  4240   000752  EFDC  F003         	goto	l3497
  4241   000756                     l3471:
  4242                           
  4243                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  4244   000756  0E00               	movlw	0
  4245   000758  6E17               	movwf	FLASH_WriteBlock@i^0,c
  4246   00075A                     l3477:
  4247                           
  4248                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  4249   00075A  5016               	movf	FLASH_WriteBlock@dataCounter^0,w,c
  4250   00075C  240D               	addwf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  4251   00075E  6ED9               	movwf	fsr2l,c
  4252   000760  0E00               	movlw	0
  4253   000762  200E               	addwfc	(FLASH_WriteBlock@flashWrBufPtr+1)^0,w,c
  4254   000764  6EDA               	movwf	fsr2h,c
  4255   000766  50DF               	movf	indf2,w,c
  4256   000768  6EF5               	movwf	245,c	;volatile
  4257   00076A                     
  4258                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  4259   00076A  0E3F               	movlw	63
  4260   00076C  1817               	xorwf	FLASH_WriteBlock@i^0,w,c
  4261   00076E  A4D8               	btfss	status,2,c
  4262   000770  EFBC  F003         	goto	u2721
  4263   000774  EFBE  F003         	goto	u2720
  4264   000778                     u2721:
  4265   000778  EFC1  F003         	goto	l317
  4266   00077C                     u2720:
  4267   00077C  000C               	tblwt		*	;# 
  4268                           
  4269                           ;mcc_generated_files/memory.c: 124:    }
  4270   00077E  EFC3  F003         	goto	l318
  4271   000782                     l317:
  4272   000782  000D               	tblwt		*+	;# 
  4273   000784                     
  4274                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  4275   000784  2A16               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  4276   000786                     l318:
  4277                           
  4278                           ;mcc_generated_files/memory.c: 130:   }
  4279   000786  2A17               	incf	FLASH_WriteBlock@i^0,f,c
  4280   000788  0E3F               	movlw	63
  4281   00078A  6417               	cpfsgt	FLASH_WriteBlock@i^0,c
  4282   00078C  EFCA  F003         	goto	u2731
  4283   000790  EFCC  F003         	goto	u2730
  4284   000794                     u2731:
  4285   000794  EFAD  F003         	goto	l3477
  4286   000798                     u2730:
  4287   000798                     
  4288                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  4289   000798  8EA6               	bsf	166,7,c	;volsfr
  4290                           
  4291                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  4292   00079A  9CA6               	bcf	166,6,c	;volsfr
  4293                           
  4294                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  4295   00079C  84A6               	bsf	166,2,c	;volsfr
  4296                           
  4297                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  4298   00079E  9EF2               	bcf	242,7,c	;volatile
  4299   0007A0                     
  4300                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  4301   0007A0  0E55               	movlw	85
  4302   0007A2  6EA7               	movwf	167,c	;volsfr
  4303                           
  4304                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  4305   0007A4  0EAA               	movlw	170
  4306   0007A6  6EA7               	movwf	167,c	;volsfr
  4307   0007A8                     
  4308                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  4309   0007A8  82A6               	bsf	166,1,c	;volsfr
  4310   0007AA                     
  4311                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  4312   0007AA  94A6               	bcf	166,2,c	;volsfr
  4313   0007AC                     
  4314                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  4315   0007AC  B013               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  4316   0007AE  D002               	bra	u2745
  4317   0007B0  9EF2               	bcf	242,7,c	;volatile
  4318   0007B2  D001               	bra	u2746
  4319   0007B4                     u2745:
  4320   0007B4  8EF2               	bsf	242,7,c	;volatile
  4321   0007B6                     u2746:
  4322   0007B6                     
  4323                           ;mcc_generated_files/memory.c: 142:  }
  4324   0007B6  2A14               	incf	FLASH_WriteBlock@j^0,f,c
  4325   0007B8                     l3497:
  4326   0007B8  5015               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  4327   0007BA  5C14               	subwf	FLASH_WriteBlock@j^0,w,c
  4328   0007BC  A0D8               	btfss	status,0,c
  4329   0007BE  EFE3  F003         	goto	u2751
  4330   0007C2  EFE5  F003         	goto	u2750
  4331   0007C6                     u2751:
  4332   0007C6  EFAB  F003         	goto	l3471
  4333   0007CA                     u2750:
  4334   0007CA                     l312:
  4335   0007CA  0012               	return		;funcret
  4336   0007CC                     __end_of_FLASH_WriteBlock:
  4337                           	callstack 0
  4338                           
  4339 ;; *************** function _FLASH_EraseBlock *****************
  4340 ;; Defined at:
  4341 ;;		line 147 in file "mcc_generated_files/memory.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  baseAddr        4    3[COMRAM] unsigned long 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg, status,2
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4355 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4356 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4357 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4358 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4359 ;;Total ram usage:        5 bytes
  4360 ;; Hardware stack levels used: 1
  4361 ;; Hardware stack levels required when called: 2
  4362 ;; This function calls:
  4363 ;;		Nothing
  4364 ;; This function is called by:
  4365 ;;		_FLASH_WriteBlock
  4366 ;; This function uses a non-reentrant model
  4367 ;;
  4368                           
  4369                           	psect	text11
  4370   000F0A                     __ptext11:
  4371                           	callstack 0
  4372   000F0A                     _FLASH_EraseBlock:
  4373                           	callstack 26
  4374   000F0A                     
  4375                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  4376   000F0A  0E00               	movlw	0
  4377   000F0C  BEF2               	btfsc	242,7,c	;volatile
  4378   000F0E  0E01               	movlw	1
  4379   000F10  6E08               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  4380   000F12                     
  4381                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  4382   000F12  C006  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  4383   000F16                     
  4384                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  4385   000F16  C005  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  4386   000F1A                     
  4387                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  4388   000F1A  C004  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  4389   000F1E                     
  4390                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  4391   000F1E  8EA6               	bsf	166,7,c	;volsfr
  4392   000F20                     
  4393                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  4394   000F20  9CA6               	bcf	166,6,c	;volsfr
  4395   000F22                     
  4396                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  4397   000F22  84A6               	bsf	166,2,c	;volsfr
  4398   000F24                     
  4399                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  4400   000F24  88A6               	bsf	166,4,c	;volsfr
  4401   000F26                     
  4402                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  4403   000F26  9EF2               	bcf	242,7,c	;volatile
  4404   000F28                     
  4405                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  4406   000F28  0E55               	movlw	85
  4407   000F2A  6EA7               	movwf	167,c	;volsfr
  4408   000F2C                     
  4409                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  4410   000F2C  0EAA               	movlw	170
  4411   000F2E  6EA7               	movwf	167,c	;volsfr
  4412   000F30                     
  4413                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  4414   000F30  82A6               	bsf	166,1,c	;volsfr
  4415   000F32                     
  4416                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  4417   000F32  B008               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  4418   000F34  D002               	bra	u2295
  4419   000F36  9EF2               	bcf	242,7,c	;volatile
  4420   000F38  D001               	bra	u2296
  4421   000F3A                     u2295:
  4422   000F3A  8EF2               	bsf	242,7,c	;volatile
  4423   000F3C                     u2296:
  4424   000F3C  0012               	return		;funcret
  4425   000F3E                     __end_of_FLASH_EraseBlock:
  4426                           	callstack 0
  4427                           
  4428 ;; *************** function _FLASH_ReadByte *****************
  4429 ;; Defined at:
  4430 ;;		line 58 in file "mcc_generated_files/memory.c"
  4431 ;; Parameters:    Size  Location     Type
  4432 ;;  flashAddr       4    3[COMRAM] unsigned long 
  4433 ;; Auto vars:     Size  Location     Type
  4434 ;;		None
  4435 ;; Return value:  Size  Location     Type
  4436 ;;                  1    wreg      unsigned char 
  4437 ;; Registers used:
  4438 ;;		wreg, status,2
  4439 ;; Tracked objects:
  4440 ;;		On entry : 0/0
  4441 ;;		On exit  : 0/0
  4442 ;;		Unchanged: 0/0
  4443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4444 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4445 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4446 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4447 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;Total ram usage:        4 bytes
  4449 ;; Hardware stack levels used: 1
  4450 ;; Hardware stack levels required when called: 2
  4451 ;; This function calls:
  4452 ;;		Nothing
  4453 ;; This function is called by:
  4454 ;;		_saveTimeToFlash
  4455 ;;		_loadTimeFromFlash
  4456 ;;		_FLASH_ReadWord
  4457 ;;		_FLASH_WriteByte
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           
  4461                           	psect	text12
  4462   001024                     __ptext12:
  4463                           	callstack 0
  4464   001024                     _FLASH_ReadByte:
  4465                           	callstack 27
  4466   001024                     
  4467                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  4468   001024  C006  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  4469                           
  4470                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  4471   001028  C005  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  4472                           
  4473                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  4474   00102C  C004  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  4475   001030  0008               	tblrd		*	;# 
  4476   001032                     
  4477                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  4478   001032  50F5               	movf	245,w,c	;volatile
  4479   001034  0012               	return		;funcret
  4480   001036                     __end_of_FLASH_ReadByte:
  4481                           	callstack 0
  4482                           
  4483 ;; *************** function _displayTime *****************
  4484 ;; Defined at:
  4485 ;;		line 110 in file "main.c"
  4486 ;; Parameters:    Size  Location     Type
  4487 ;;		None
  4488 ;; Auto vars:     Size  Location     Type
  4489 ;;  i               2   10[BANK0 ] int 
  4490 ;;  timeString      5    5[BANK0 ] unsigned char [5]
  4491 ;;  displayStrin    5    0[BANK0 ] unsigned char [5]
  4492 ;; Return value:  Size  Location     Type
  4493 ;;                  1    wreg      void 
  4494 ;; Registers used:
  4495 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4496 ;; Tracked objects:
  4497 ;;		On entry : 0/0
  4498 ;;		On exit  : 0/0
  4499 ;;		Unchanged: 0/0
  4500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4502 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4504 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4505 ;;Total ram usage:       12 bytes
  4506 ;; Hardware stack levels used: 1
  4507 ;; Hardware stack levels required when called: 6
  4508 ;; This function calls:
  4509 ;;		___awdiv
  4510 ;;		___awmod
  4511 ;;		_printString
  4512 ;; This function is called by:
  4513 ;;		_main
  4514 ;;		_checkButtons
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text13
  4519   000A22                     __ptext13:
  4520                           	callstack 0
  4521   000A22                     _displayTime:
  4522                           	callstack 24
  4523   000A22                     
  4524                           ;main.c: 112:     char timeString[5];;main.c: 115:     timeString[0] = (hours / 10) + '0
      +                          ';
  4525   000A22  C0CE  F004         	movff	_hours,___awdiv@dividend
  4526   000A26  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4527   000A28  0E00               	movlw	0
  4528   000A2A  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4529   000A2C  0E0A               	movlw	10
  4530   000A2E  6E06               	movwf	___awdiv@divisor^0,c
  4531   000A30  EC4F  F004         	call	___awdiv	;wreg free
  4532   000A34  5004               	movf	?___awdiv^0,w,c
  4533   000A36  0F30               	addlw	48
  4534   000A38  0100               	movlb	0	; () banked
  4535   000A3A  6FD8               	movwf	displayTime@timeString& (0+255),b
  4536                           
  4537                           ;main.c: 116:     timeString[1] = (hours % 10) + '0';
  4538   000A3C  C0CE  F004         	movff	_hours,___awmod@dividend
  4539   000A40  6A05               	clrf	(___awmod@dividend+1)^0,c
  4540   000A42  0E00               	movlw	0
  4541   000A44  6E07               	movwf	(___awmod@divisor+1)^0,c
  4542   000A46  0E0A               	movlw	10
  4543   000A48  6E06               	movwf	___awmod@divisor^0,c
  4544   000A4A  ECC5  F005         	call	___awmod	;wreg free
  4545   000A4E  5004               	movf	?___awmod^0,w,c
  4546   000A50  0F30               	addlw	48
  4547   000A52  0100               	movlb	0	; () banked
  4548   000A54  6FD9               	movwf	(displayTime@timeString+1)& (0+255),b
  4549                           
  4550                           ;main.c: 117:     timeString[2] = (minutes / 10) + '0';
  4551   000A56  C0CD  F004         	movff	_minutes,___awdiv@dividend
  4552   000A5A  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4553   000A5C  0E00               	movlw	0
  4554   000A5E  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4555   000A60  0E0A               	movlw	10
  4556   000A62  6E06               	movwf	___awdiv@divisor^0,c
  4557   000A64  EC4F  F004         	call	___awdiv	;wreg free
  4558   000A68  5004               	movf	?___awdiv^0,w,c
  4559   000A6A  0F30               	addlw	48
  4560   000A6C  0100               	movlb	0	; () banked
  4561   000A6E  6FDA               	movwf	(displayTime@timeString+2)& (0+255),b
  4562                           
  4563                           ;main.c: 118:     timeString[3] = (minutes % 10) + '0';
  4564   000A70  C0CD  F004         	movff	_minutes,___awmod@dividend
  4565   000A74  6A05               	clrf	(___awmod@dividend+1)^0,c
  4566   000A76  0E00               	movlw	0
  4567   000A78  6E07               	movwf	(___awmod@divisor+1)^0,c
  4568   000A7A  0E0A               	movlw	10
  4569   000A7C  6E06               	movwf	___awmod@divisor^0,c
  4570   000A7E  ECC5  F005         	call	___awmod	;wreg free
  4571   000A82  5004               	movf	?___awmod^0,w,c
  4572   000A84  0F30               	addlw	48
  4573   000A86  0100               	movlb	0	; () banked
  4574   000A88  6FDB               	movwf	(displayTime@timeString+3)& (0+255),b
  4575   000A8A                     
  4576                           ; BSR set to: 0
  4577                           ;main.c: 119:     timeString[4] = '\0';
  4578   000A8A  0E00               	movlw	0
  4579   000A8C  6FDC               	movwf	(displayTime@timeString+4)& (0+255),b
  4580   000A8E                     
  4581                           ; BSR set to: 0
  4582                           ;main.c: 122:     uint8_t displayString[5];;main.c: 123:     for (int i = 0; i < 5; i++)
      +                           {
  4583   000A8E  0E00               	movlw	0
  4584   000A90  6FDE               	movwf	(displayTime@i+1)& (0+255),b
  4585   000A92  0E00               	movlw	0
  4586   000A94  6FDD               	movwf	displayTime@i& (0+255),b
  4587   000A96                     l2629:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;main.c: 124:         displayString[i] = (uint8_t)timeString[i];
  4591   000A96  51DD               	movf	displayTime@i& (0+255),w,b
  4592   000A98  0FD8               	addlw	low displayTime@timeString
  4593   000A9A  6ED9               	movwf	fsr2l,c
  4594   000A9C  6ADA               	clrf	fsr2h,c
  4595   000A9E  51DD               	movf	displayTime@i& (0+255),w,b
  4596   000AA0  0FD3               	addlw	low displayTime@displayString
  4597   000AA2  6EE1               	movwf	fsr1l,c
  4598   000AA4  6AE2               	clrf	fsr1h,c
  4599   000AA6  CFDF FFE7          	movff	indf2,indf1
  4600   000AAA                     
  4601                           ; BSR set to: 0
  4602                           ;main.c: 125:     }
  4603   000AAA  4BDD               	infsnz	displayTime@i& (0+255),f,b
  4604   000AAC  2BDE               	incf	(displayTime@i+1)& (0+255),f,b
  4605   000AAE                     
  4606                           ; BSR set to: 0
  4607   000AAE  BFDE               	btfsc	(displayTime@i+1)& (0+255),7,b
  4608   000AB0  EF63  F005         	goto	u1561
  4609   000AB4  51DE               	movf	(displayTime@i+1)& (0+255),w,b
  4610   000AB6  E109               	bnz	u1560
  4611   000AB8  0E05               	movlw	5
  4612   000ABA  5DDD               	subwf	displayTime@i& (0+255),w,b
  4613   000ABC  A0D8               	btfss	status,0,c
  4614   000ABE  EF63  F005         	goto	u1561
  4615   000AC2  EF65  F005         	goto	u1560
  4616   000AC6                     u1561:
  4617   000AC6  EF4B  F005         	goto	l2629
  4618   000ACA                     u1560:
  4619   000ACA                     
  4620                           ; BSR set to: 0
  4621                           ;main.c: 127:     printString(displayString);
  4622   000ACA  0ED3               	movlw	low displayTime@displayString
  4623   000ACC  6E44               	movwf	printString@str^0,c
  4624   000ACE  6A45               	clrf	(printString@str+1)^0,c
  4625   000AD0  EC7F  F001         	call	_printString	;wreg free
  4626   000AD4  0012               	return		;funcret
  4627   000AD6                     __end_of_displayTime:
  4628                           	callstack 0
  4629                           
  4630 ;; *************** function _displayAlarmTime *****************
  4631 ;; Defined at:
  4632 ;;		line 130 in file "main.c"
  4633 ;; Parameters:    Size  Location     Type
  4634 ;;		None
  4635 ;; Auto vars:     Size  Location     Type
  4636 ;;  i               2   10[BANK0 ] int 
  4637 ;;  alarmTimeStr    5    5[BANK0 ] unsigned char [5]
  4638 ;;  displayStrin    5    0[BANK0 ] unsigned char [5]
  4639 ;; Return value:  Size  Location     Type
  4640 ;;                  1    wreg      void 
  4641 ;; Registers used:
  4642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4643 ;; Tracked objects:
  4644 ;;		On entry : 0/0
  4645 ;;		On exit  : 0/0
  4646 ;;		Unchanged: 0/0
  4647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4652 ;;Total ram usage:       12 bytes
  4653 ;; Hardware stack levels used: 1
  4654 ;; Hardware stack levels required when called: 6
  4655 ;; This function calls:
  4656 ;;		___awdiv
  4657 ;;		___awmod
  4658 ;;		_printString
  4659 ;; This function is called by:
  4660 ;;		_checkButtons
  4661 ;; This function uses a non-reentrant model
  4662 ;;
  4663                           
  4664                           	psect	text14
  4665   000AD6                     __ptext14:
  4666                           	callstack 0
  4667   000AD6                     _displayAlarmTime:
  4668                           	callstack 23
  4669   000AD6                     
  4670                           ;main.c: 132:     char alarmTimeString[5];;main.c: 135:     alarmTimeString[0] = (alarmH
      +                          ours / 10) + '0';
  4671   000AD6  C0CB  F004         	movff	_alarmHours,___awdiv@dividend
  4672   000ADA  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4673   000ADC  0E00               	movlw	0
  4674   000ADE  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4675   000AE0  0E0A               	movlw	10
  4676   000AE2  6E06               	movwf	___awdiv@divisor^0,c
  4677   000AE4  EC4F  F004         	call	___awdiv	;wreg free
  4678   000AE8  5004               	movf	?___awdiv^0,w,c
  4679   000AEA  0F30               	addlw	48
  4680   000AEC  0100               	movlb	0	; () banked
  4681   000AEE  6FD8               	movwf	displayAlarmTime@alarmTimeString& (0+255),b
  4682                           
  4683                           ;main.c: 136:     alarmTimeString[1] = (alarmHours % 10) + '0';
  4684   000AF0  C0CB  F004         	movff	_alarmHours,___awmod@dividend
  4685   000AF4  6A05               	clrf	(___awmod@dividend+1)^0,c
  4686   000AF6  0E00               	movlw	0
  4687   000AF8  6E07               	movwf	(___awmod@divisor+1)^0,c
  4688   000AFA  0E0A               	movlw	10
  4689   000AFC  6E06               	movwf	___awmod@divisor^0,c
  4690   000AFE  ECC5  F005         	call	___awmod	;wreg free
  4691   000B02  5004               	movf	?___awmod^0,w,c
  4692   000B04  0F30               	addlw	48
  4693   000B06  0100               	movlb	0	; () banked
  4694   000B08  6FD9               	movwf	(displayAlarmTime@alarmTimeString+1)& (0+255),b
  4695                           
  4696                           ;main.c: 137:     alarmTimeString[2] = (alarmMinutes / 10) + '0';
  4697   000B0A  C0CA  F004         	movff	_alarmMinutes,___awdiv@dividend
  4698   000B0E  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4699   000B10  0E00               	movlw	0
  4700   000B12  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4701   000B14  0E0A               	movlw	10
  4702   000B16  6E06               	movwf	___awdiv@divisor^0,c
  4703   000B18  EC4F  F004         	call	___awdiv	;wreg free
  4704   000B1C  5004               	movf	?___awdiv^0,w,c
  4705   000B1E  0F30               	addlw	48
  4706   000B20  0100               	movlb	0	; () banked
  4707   000B22  6FDA               	movwf	(displayAlarmTime@alarmTimeString+2)& (0+255),b
  4708                           
  4709                           ;main.c: 138:     alarmTimeString[3] = (alarmMinutes % 10) + '0';
  4710   000B24  C0CA  F004         	movff	_alarmMinutes,___awmod@dividend
  4711   000B28  6A05               	clrf	(___awmod@dividend+1)^0,c
  4712   000B2A  0E00               	movlw	0
  4713   000B2C  6E07               	movwf	(___awmod@divisor+1)^0,c
  4714   000B2E  0E0A               	movlw	10
  4715   000B30  6E06               	movwf	___awmod@divisor^0,c
  4716   000B32  ECC5  F005         	call	___awmod	;wreg free
  4717   000B36  5004               	movf	?___awmod^0,w,c
  4718   000B38  0F30               	addlw	48
  4719   000B3A  0100               	movlb	0	; () banked
  4720   000B3C  6FDB               	movwf	(displayAlarmTime@alarmTimeString+3)& (0+255),b
  4721   000B3E                     
  4722                           ; BSR set to: 0
  4723                           ;main.c: 139:     alarmTimeString[4] = '\0';
  4724   000B3E  0E00               	movlw	0
  4725   000B40  6FDC               	movwf	(displayAlarmTime@alarmTimeString+4)& (0+255),b
  4726   000B42                     
  4727                           ; BSR set to: 0
  4728                           ;main.c: 142:     uint8_t displayString[5];;main.c: 143:     for (int i = 0; i < 5; i++)
      +                           {
  4729   000B42  0E00               	movlw	0
  4730   000B44  6FDE               	movwf	(displayAlarmTime@i+1)& (0+255),b
  4731   000B46  0E00               	movlw	0
  4732   000B48  6FDD               	movwf	displayAlarmTime@i& (0+255),b
  4733   000B4A                     l2661:
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;main.c: 144:         displayString[i] = (uint8_t)alarmTimeString[i];
  4737   000B4A  51DD               	movf	displayAlarmTime@i& (0+255),w,b
  4738   000B4C  0FD8               	addlw	low displayAlarmTime@alarmTimeString
  4739   000B4E  6ED9               	movwf	fsr2l,c
  4740   000B50  6ADA               	clrf	fsr2h,c
  4741   000B52  51DD               	movf	displayAlarmTime@i& (0+255),w,b
  4742   000B54  0FD3               	addlw	low displayAlarmTime@displayString
  4743   000B56  6EE1               	movwf	fsr1l,c
  4744   000B58  6AE2               	clrf	fsr1h,c
  4745   000B5A  CFDF FFE7          	movff	indf2,indf1
  4746   000B5E                     
  4747                           ; BSR set to: 0
  4748                           ;main.c: 145:     }
  4749   000B5E  4BDD               	infsnz	displayAlarmTime@i& (0+255),f,b
  4750   000B60  2BDE               	incf	(displayAlarmTime@i+1)& (0+255),f,b
  4751   000B62                     
  4752                           ; BSR set to: 0
  4753   000B62  BFDE               	btfsc	(displayAlarmTime@i+1)& (0+255),7,b
  4754   000B64  EFBD  F005         	goto	u1581
  4755   000B68  51DE               	movf	(displayAlarmTime@i+1)& (0+255),w,b
  4756   000B6A  E109               	bnz	u1580
  4757   000B6C  0E05               	movlw	5
  4758   000B6E  5DDD               	subwf	displayAlarmTime@i& (0+255),w,b
  4759   000B70  A0D8               	btfss	status,0,c
  4760   000B72  EFBD  F005         	goto	u1581
  4761   000B76  EFBF  F005         	goto	u1580
  4762   000B7A                     u1581:
  4763   000B7A  EFA5  F005         	goto	l2661
  4764   000B7E                     u1580:
  4765   000B7E                     
  4766                           ; BSR set to: 0
  4767                           ;main.c: 147:     printString(displayString);
  4768   000B7E  0ED3               	movlw	low displayAlarmTime@displayString
  4769   000B80  6E44               	movwf	printString@str^0,c
  4770   000B82  6A45               	clrf	(printString@str+1)^0,c
  4771   000B84  EC7F  F001         	call	_printString	;wreg free
  4772   000B88  0012               	return		;funcret
  4773   000B8A                     __end_of_displayAlarmTime:
  4774                           	callstack 0
  4775                           
  4776 ;; *************** function _printString *****************
  4777 ;; Defined at:
  4778 ;;		line 161 in file "MAX7219.c"
  4779 ;; Parameters:    Size  Location     Type
  4780 ;;  str             2   67[COMRAM] PTR unsigned char 
  4781 ;;		 -> STR_1(6), displayAlarmTime@displayString(5), displayTime@displayString(5), 
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;  j               2   86[COMRAM] int 
  4784 ;;  data            1   79[COMRAM] unsigned char 
  4785 ;;  i               2   82[COMRAM] int 
  4786 ;;  indx            2   77[COMRAM] int 
  4787 ;;  k               2   84[COMRAM] int 
  4788 ;;  strindx         2   80[COMRAM] int 
  4789 ;; Return value:  Size  Location     Type
  4790 ;;                  1    wreg      void 
  4791 ;; Registers used:
  4792 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4793 ;; Tracked objects:
  4794 ;;		On entry : 0/0
  4795 ;;		On exit  : 0/0
  4796 ;;		Unchanged: 0/0
  4797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4798 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4799 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4800 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4801 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4802 ;;Total ram usage:       21 bytes
  4803 ;; Hardware stack levels used: 1
  4804 ;; Hardware stack levels required when called: 5
  4805 ;; This function calls:
  4806 ;;		_flushBuffer
  4807 ;; This function is called by:
  4808 ;;		_displayTime
  4809 ;;		_displayAlarmTime
  4810 ;;		_triggerAlarm
  4811 ;; This function uses a non-reentrant model
  4812 ;;
  4813                           
  4814                           	psect	text15
  4815   0002FE                     __ptext15:
  4816                           	callstack 0
  4817   0002FE                     _printString:
  4818                           	callstack 23
  4819   0002FE                     
  4820                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  4821   0002FE  0E00               	movlw	0
  4822   000300  6E52               	movwf	(printString@strindx+1)^0,c
  4823   000302  0E00               	movlw	0
  4824   000304  6E51               	movwf	printString@strindx^0,c
  4825                           
  4826                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  4827   000306  0E00               	movlw	0
  4828   000308  6E56               	movwf	(printString@k+1)^0,c
  4829   00030A  0E1F               	movlw	31
  4830   00030C  6E55               	movwf	printString@k^0,c
  4831                           
  4832                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  4833   00030E  EF21  F002         	goto	l2517
  4834   000312                     l2477:
  4835                           
  4836                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  4837   000312  0E00               	movlw	0
  4838   000314  6E4F               	movwf	(printString@indx+1)^0,c
  4839   000316  0E00               	movlw	0
  4840   000318  6E4E               	movwf	printString@indx^0,c
  4841                           
  4842                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  4843   00031A  0E00               	movlw	0
  4844   00031C  6E54               	movwf	(printString@i+1)^0,c
  4845   00031E  0E00               	movlw	0
  4846   000320  6E53               	movwf	printString@i^0,c
  4847   000322                     l2483:
  4848                           
  4849                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  4850   000322  0E00               	movlw	0
  4851   000324  6E50               	movwf	printString@data^0,c
  4852                           
  4853                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  4854   000326  0E00               	movlw	0
  4855   000328  6E58               	movwf	(printString@j+1)^0,c
  4856   00032A  0E07               	movlw	7
  4857   00032C  6E57               	movwf	printString@j^0,c
  4858   00032E                     l2489:
  4859                           
  4860                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  4861   00032E  5051               	movf	printString@strindx^0,w,c
  4862   000330  2444               	addwf	printString@str^0,w,c
  4863   000332  6E46               	movwf	??_printString^0,c
  4864   000334  5052               	movf	(printString@strindx+1)^0,w,c
  4865   000336  2045               	addwfc	(printString@str+1)^0,w,c
  4866   000338  6E47               	movwf	(??_printString+1)^0,c
  4867   00033A  C046  FFF6         	movff	??_printString,tblptrl
  4868   00033E  C047  FFF7         	movff	??_printString+1,tblptrh
  4869   000342  0E00               	movlw	low (__mediumconst shr (0+16))
  4870   000344  6EF8               	movwf	tblptru,c
  4871   000346  0E0F               	movlw	(high __ramtop+-1)
  4872   000348  64F7               	cpfsgt	tblptrh,c
  4873   00034A  D003               	bra	u1407
  4874   00034C  0008               	tblrd		*
  4875   00034E  50F5               	movf	tablat,w,c
  4876   000350  D005               	bra	u1400
  4877   000352                     u1407:
  4878   000352  CFF6 FFE1          	movff	tblptrl,fsr1l
  4879   000356  CFF7 FFE2          	movff	tblptrh,fsr1h
  4880   00035A  50E7               	movf	indf1,w,c
  4881   00035C                     u1400:
  4882   00035C  6E48               	movwf	(??_printString+2)^0,c
  4883   00035E  5048               	movf	(??_printString+2)^0,w,c
  4884   000360  0D08               	mullw	8
  4885   000362  0EF9               	movlw	low _MAX7219_Dot_Matrix_font
  4886   000364  24F3               	addwf	243,w,c
  4887   000366  6E49               	movwf	(??_printString+3)^0,c
  4888   000368  0EF7               	movlw	high _MAX7219_Dot_Matrix_font
  4889   00036A  20F4               	addwfc	prodh,w,c
  4890   00036C  6E4A               	movwf	(??_printString+4)^0,c
  4891   00036E  504E               	movf	printString@indx^0,w,c
  4892   000370  2649               	addwf	(??_printString+3)^0,f,c
  4893   000372  504F               	movf	(printString@indx+1)^0,w,c
  4894   000374  224A               	addwfc	(??_printString+4)^0,f,c
  4895   000376  C049  FFF6         	movff	??_printString+3,tblptrl
  4896   00037A  C04A  FFF7         	movff	??_printString+4,tblptrh
  4897   00037E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4898   00037E  6AF8               	clrf	tblptru,c
  4899   000380                     	endif
  4900   000380                     	if	0	;tblptru may be non-zero
  4901   000380                     	endif
  4902   000380  0008               	tblrd		*
  4903   000382  CFF5 F04B          	movff	tablat,??_printString+5
  4904   000386  C057  F04C         	movff	printString@j,??_printString+6
  4905   00038A  0E01               	movlw	1
  4906   00038C  6E4D               	movwf	(??_printString+7)^0,c
  4907   00038E  2A4C               	incf	(??_printString+6)^0,f,c
  4908   000390  EFCC  F001         	goto	u1414
  4909   000394                     u1415:
  4910   000394  90D8               	bcf	status,0,c
  4911   000396  364D               	rlcf	(??_printString+7)^0,f,c
  4912   000398                     u1414:
  4913   000398  2E4C               	decfsz	(??_printString+6)^0,f,c
  4914   00039A  EFCA  F001         	goto	u1415
  4915   00039E  504D               	movf	(??_printString+7)^0,w,c
  4916   0003A0  144B               	andwf	(??_printString+5)^0,w,c
  4917   0003A2  0900               	iorlw	0
  4918   0003A4  B4D8               	btfsc	status,2,c
  4919   0003A6  EFD7  F001         	goto	u1421
  4920   0003AA  EFD9  F001         	goto	u1420
  4921   0003AE                     u1421:
  4922   0003AE  EFE8  F001         	goto	l2493
  4923   0003B2                     u1420:
  4924   0003B2                     
  4925                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  4926   0003B2  5057               	movf	printString@j^0,w,c
  4927   0003B4  0807               	sublw	7
  4928   0003B6  6E46               	movwf	??_printString^0,c
  4929   0003B8  0E01               	movlw	1
  4930   0003BA  6E47               	movwf	(??_printString+1)^0,c
  4931   0003BC  2A46               	incf	??_printString^0,f,c
  4932   0003BE  EFE3  F001         	goto	u1434
  4933   0003C2                     u1435:
  4934   0003C2  90D8               	bcf	status,0,c
  4935   0003C4  3647               	rlcf	(??_printString+1)^0,f,c
  4936   0003C6                     u1434:
  4937   0003C6  2E46               	decfsz	??_printString^0,f,c
  4938   0003C8  EFE1  F001         	goto	u1435
  4939   0003CC  5047               	movf	(??_printString+1)^0,w,c
  4940   0003CE  1250               	iorwf	printString@data^0,f,c
  4941   0003D0                     l2493:
  4942                           
  4943                           ;MAX7219.c: 179:             }
  4944   0003D0  0657               	decf	printString@j^0,f,c
  4945   0003D2  A0D8               	btfss	status,0,c
  4946   0003D4  0658               	decf	(printString@j+1)^0,f,c
  4947   0003D6  BE58               	btfsc	(printString@j+1)^0,7,c
  4948   0003D8  EFF2  F001         	goto	u1440
  4949   0003DC  EFF0  F001         	goto	u1441
  4950   0003E0                     u1441:
  4951   0003E0  EF97  F001         	goto	l2489
  4952   0003E4                     u1440:
  4953   0003E4                     
  4954                           ;MAX7219.c: 180:             if (k < 0) break;
  4955   0003E4  BE56               	btfsc	(printString@k+1)^0,7,c
  4956   0003E6  EFF9  F001         	goto	u1450
  4957   0003EA  EFF7  F001         	goto	u1451
  4958   0003EE                     u1451:
  4959   0003EE  EFFB  F001         	goto	l2501
  4960   0003F2                     u1450:
  4961   0003F2  EF16  F002         	goto	l2511
  4962   0003F6                     l2501:
  4963                           
  4964                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  4965   0003F6  5055               	movf	printString@k^0,w,c
  4966   0003F8  0F80               	addlw	low _bufferCol
  4967   0003FA  6ED9               	movwf	fsr2l,c
  4968   0003FC  6ADA               	clrf	fsr2h,c
  4969   0003FE  C050  FFDF         	movff	printString@data,indf2
  4970   000402  0655               	decf	printString@k^0,f,c
  4971   000404  A0D8               	btfss	status,0,c
  4972   000406  0656               	decf	(printString@k+1)^0,f,c
  4973   000408                     
  4974                           ;MAX7219.c: 182:             indx++;
  4975   000408  4A4E               	infsnz	printString@indx^0,f,c
  4976   00040A  2A4F               	incf	(printString@indx+1)^0,f,c
  4977   00040C                     
  4978                           ;MAX7219.c: 183:         }
  4979   00040C  4A53               	infsnz	printString@i^0,f,c
  4980   00040E  2A54               	incf	(printString@i+1)^0,f,c
  4981   000410  BE54               	btfsc	(printString@i+1)^0,7,c
  4982   000412  EF14  F002         	goto	u1461
  4983   000416  5054               	movf	(printString@i+1)^0,w,c
  4984   000418  E109               	bnz	u1460
  4985   00041A  0E08               	movlw	8
  4986   00041C  5C53               	subwf	printString@i^0,w,c
  4987   00041E  A0D8               	btfss	status,0,c
  4988   000420  EF14  F002         	goto	u1461
  4989   000424  EF16  F002         	goto	u1460
  4990   000428                     u1461:
  4991   000428  EF91  F001         	goto	l2483
  4992   00042C                     u1460:
  4993   00042C                     l2511:
  4994                           
  4995                           ;MAX7219.c: 184:         strindx++;
  4996   00042C  4A51               	infsnz	printString@strindx^0,f,c
  4997   00042E  2A52               	incf	(printString@strindx+1)^0,f,c
  4998   000430                     
  4999                           ;MAX7219.c: 185:         if (k < 0) break;
  5000   000430  BE56               	btfsc	(printString@k+1)^0,7,c
  5001   000432  EF1F  F002         	goto	u1470
  5002   000436  EF1D  F002         	goto	u1471
  5003   00043A                     u1471:
  5004   00043A  EF21  F002         	goto	l2517
  5005   00043E                     u1470:
  5006   00043E  EF40  F002         	goto	l2519
  5007   000442                     l2517:
  5008                           
  5009                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5010   000442  5051               	movf	printString@strindx^0,w,c
  5011   000444  2444               	addwf	printString@str^0,w,c
  5012   000446  6E46               	movwf	??_printString^0,c
  5013   000448  5052               	movf	(printString@strindx+1)^0,w,c
  5014   00044A  2045               	addwfc	(printString@str+1)^0,w,c
  5015   00044C  6E47               	movwf	(??_printString+1)^0,c
  5016   00044E  C046  FFF6         	movff	??_printString,tblptrl
  5017   000452  C047  FFF7         	movff	??_printString+1,tblptrh
  5018   000456  0E00               	movlw	low (__mediumconst shr (0+16))
  5019   000458  6EF8               	movwf	tblptru,c
  5020   00045A  0E0F               	movlw	(high __ramtop+-1)
  5021   00045C  64F7               	cpfsgt	tblptrh,c
  5022   00045E  D003               	bra	u1487
  5023   000460  0008               	tblrd		*
  5024   000462  50F5               	movf	tablat,w,c
  5025   000464  D005               	bra	u1480
  5026   000466                     u1487:
  5027   000466  CFF6 FFE1          	movff	tblptrl,fsr1l
  5028   00046A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5029   00046E  50E7               	movf	indf1,w,c
  5030   000470                     u1480:
  5031   000470  0900               	iorlw	0
  5032   000472  A4D8               	btfss	status,2,c
  5033   000474  EF3E  F002         	goto	u1491
  5034   000478  EF40  F002         	goto	u1490
  5035   00047C                     u1491:
  5036   00047C  EF89  F001         	goto	l2477
  5037   000480                     u1490:
  5038   000480                     l2519:
  5039                           
  5040                           ;MAX7219.c: 188:     flushBuffer();
  5041   000480  EC43  F002         	call	_flushBuffer	;wreg free
  5042   000484  0012               	return		;funcret
  5043   000486                     __end_of_printString:
  5044                           	callstack 0
  5045                           
  5046 ;; *************** function _flushBuffer *****************
  5047 ;; Defined at:
  5048 ;;		line 52 in file "MAX7219.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;		None
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  j               2   61[COMRAM] int 
  5053 ;;  dev             2   59[COMRAM] int 
  5054 ;;  row             2   63[COMRAM] int 
  5055 ;;  i               2   65[COMRAM] int 
  5056 ;;  bufferRow      32   27[COMRAM] unsigned char [32]
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  1    wreg      void 
  5059 ;; Registers used:
  5060 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5067 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5068 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5069 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5070 ;;Total ram usage:       43 bytes
  5071 ;; Hardware stack levels used: 1
  5072 ;; Hardware stack levels required when called: 4
  5073 ;; This function calls:
  5074 ;;		___awdiv
  5075 ;;		_max_write
  5076 ;; This function is called by:
  5077 ;;		_clearDisplay
  5078 ;;		_printString
  5079 ;;		_shiftLeft
  5080 ;;		_shiftchar
  5081 ;; This function uses a non-reentrant model
  5082 ;;
  5083                           
  5084                           	psect	text16
  5085   000486                     __ptext16:
  5086                           	callstack 0
  5087   000486                     _flushBuffer:
  5088                           	callstack 23
  5089   000486                     
  5090                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  5091   000486  EE20  F01C         	lfsr	2,flushBuffer@bufferRow
  5092   00048A  0E1F               	movlw	31
  5093   00048C                     u1271:
  5094   00048C  6ADE               	clrf	postinc2,c
  5095   00048E  06E8               	decf	wreg,f,c
  5096   000490  E2FD               	bc	u1271
  5097   000492                     
  5098                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  5099   000492  0E00               	movlw	0
  5100   000494  6E43               	movwf	(flushBuffer@i+1)^0,c
  5101   000496  0E00               	movlw	0
  5102   000498  6E42               	movwf	flushBuffer@i^0,c
  5103   00049A                     l2365:
  5104                           
  5105                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  5106   00049A  C042  F004         	movff	flushBuffer@i,___awdiv@dividend
  5107   00049E  C043  F005         	movff	flushBuffer@i+1,___awdiv@dividend+1
  5108   0004A2  0E00               	movlw	0
  5109   0004A4  6E07               	movwf	(___awdiv@divisor+1)^0,c
  5110   0004A6  0E08               	movlw	8
  5111   0004A8  6E06               	movwf	___awdiv@divisor^0,c
  5112   0004AA  EC4F  F004         	call	___awdiv	;wreg free
  5113   0004AE  C004  F03C         	movff	?___awdiv,flushBuffer@dev
  5114   0004B2  C005  F03D         	movff	?___awdiv+1,flushBuffer@dev+1
  5115   0004B6                     
  5116                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  5117   0004B6  0E00               	movlw	0
  5118   0004B8  6E3F               	movwf	(flushBuffer@j+1)^0,c
  5119   0004BA  0E00               	movlw	0
  5120   0004BC  6E3E               	movwf	flushBuffer@j^0,c
  5121   0004BE                     l2373:
  5122                           
  5123                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  5124   0004BE  5042               	movf	flushBuffer@i^0,w,c
  5125   0004C0  0F80               	addlw	low _bufferCol
  5126   0004C2  6ED9               	movwf	fsr2l,c
  5127   0004C4  6ADA               	clrf	fsr2h,c
  5128   0004C6  50DF               	movf	indf2,w,c
  5129   0004C8  6E19               	movwf	??_flushBuffer^0,c
  5130   0004CA  C03E  F01A         	movff	flushBuffer@j,??_flushBuffer+1
  5131   0004CE  0E01               	movlw	1
  5132   0004D0  6E1B               	movwf	(??_flushBuffer+2)^0,c
  5133   0004D2  2A1A               	incf	(??_flushBuffer+1)^0,f,c
  5134   0004D4  EF6E  F002         	goto	u1284
  5135   0004D8                     u1285:
  5136   0004D8  90D8               	bcf	status,0,c
  5137   0004DA  361B               	rlcf	(??_flushBuffer+2)^0,f,c
  5138   0004DC                     u1284:
  5139   0004DC  2E1A               	decfsz	(??_flushBuffer+1)^0,f,c
  5140   0004DE  EF6C  F002         	goto	u1285
  5141   0004E2  501B               	movf	(??_flushBuffer+2)^0,w,c
  5142   0004E4  1419               	andwf	??_flushBuffer^0,w,c
  5143   0004E6  0900               	iorlw	0
  5144   0004E8  B4D8               	btfsc	status,2,c
  5145   0004EA  EF79  F002         	goto	u1291
  5146   0004EE  EF7B  F002         	goto	u1290
  5147   0004F2                     u1291:
  5148   0004F2  EF95  F002         	goto	l2377
  5149   0004F6                     u1290:
  5150   0004F6                     
  5151                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  5152   0004F6  503C               	movf	flushBuffer@dev^0,w,c
  5153   0004F8  0D08               	mullw	8
  5154   0004FA  5042               	movf	flushBuffer@i^0,w,c
  5155   0004FC  5CF3               	subwf	243,w,c
  5156   0004FE  6E19               	movwf	??_flushBuffer^0,c
  5157   000500  0E07               	movlw	7
  5158   000502  2619               	addwf	??_flushBuffer^0,f,c
  5159   000504  0E01               	movlw	1
  5160   000506  6E1A               	movwf	(??_flushBuffer+1)^0,c
  5161   000508  2A19               	incf	??_flushBuffer^0,f,c
  5162   00050A  EF89  F002         	goto	u1304
  5163   00050E                     u1305:
  5164   00050E  90D8               	bcf	status,0,c
  5165   000510  361A               	rlcf	(??_flushBuffer+1)^0,f,c
  5166   000512                     u1304:
  5167   000512  2E19               	decfsz	??_flushBuffer^0,f,c
  5168   000514  EF87  F002         	goto	u1305
  5169   000518  503C               	movf	flushBuffer@dev^0,w,c
  5170   00051A  0D08               	mullw	8
  5171   00051C  50F3               	movf	243,w,c
  5172   00051E  0F1C               	addlw	low flushBuffer@bufferRow
  5173   000520  243E               	addwf	flushBuffer@j^0,w,c
  5174   000522  6ED9               	movwf	fsr2l,c
  5175   000524  6ADA               	clrf	fsr2h,c
  5176   000526  501A               	movf	(??_flushBuffer+1)^0,w,c
  5177   000528  12DF               	iorwf	indf2,f,c
  5178   00052A                     l2377:
  5179                           
  5180                           ;MAX7219.c: 66:   }
  5181   00052A  4A3E               	infsnz	flushBuffer@j^0,f,c
  5182   00052C  2A3F               	incf	(flushBuffer@j+1)^0,f,c
  5183   00052E  BE3F               	btfsc	(flushBuffer@j+1)^0,7,c
  5184   000530  EFA3  F002         	goto	u1311
  5185   000534  503F               	movf	(flushBuffer@j+1)^0,w,c
  5186   000536  E109               	bnz	u1310
  5187   000538  0E08               	movlw	8
  5188   00053A  5C3E               	subwf	flushBuffer@j^0,w,c
  5189   00053C  A0D8               	btfss	status,0,c
  5190   00053E  EFA3  F002         	goto	u1311
  5191   000542  EFA5  F002         	goto	u1310
  5192   000546                     u1311:
  5193   000546  EF5F  F002         	goto	l2373
  5194   00054A                     u1310:
  5195   00054A                     
  5196                           ;MAX7219.c: 67:  }
  5197   00054A  4A42               	infsnz	flushBuffer@i^0,f,c
  5198   00054C  2A43               	incf	(flushBuffer@i+1)^0,f,c
  5199   00054E  BE43               	btfsc	(flushBuffer@i+1)^0,7,c
  5200   000550  EFB3  F002         	goto	u1321
  5201   000554  5043               	movf	(flushBuffer@i+1)^0,w,c
  5202   000556  E109               	bnz	u1320
  5203   000558  0E20               	movlw	32
  5204   00055A  5C42               	subwf	flushBuffer@i^0,w,c
  5205   00055C  A0D8               	btfss	status,0,c
  5206   00055E  EFB3  F002         	goto	u1321
  5207   000562  EFB5  F002         	goto	u1320
  5208   000566                     u1321:
  5209   000566  EF4D  F002         	goto	l2365
  5210   00056A                     u1320:
  5211   00056A                     
  5212                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  5213   00056A  0E00               	movlw	0
  5214   00056C  6E41               	movwf	(flushBuffer@row+1)^0,c
  5215   00056E  0E01               	movlw	1
  5216   000570  6E40               	movwf	flushBuffer@row^0,c
  5217   000572                     l2391:
  5218                           
  5219                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  5220   000572  C040  F00C         	movff	flushBuffer@row,max_write@row
  5221   000576  C041  F00D         	movff	flushBuffer@row+1,max_write@row+1
  5222   00057A  C040  F019         	movff	flushBuffer@row,??_flushBuffer
  5223   00057E  0EFF               	movlw	255
  5224   000580  2619               	addwf	??_flushBuffer^0,f,c
  5225   000582  5019               	movf	??_flushBuffer^0,w,c
  5226   000584  0F1C               	addlw	low flushBuffer@bufferRow
  5227   000586  6ED9               	movwf	fsr2l,c
  5228   000588  6ADA               	clrf	fsr2h,c
  5229   00058A  50DF               	movf	indf2,w,c
  5230   00058C  6E0E               	movwf	max_write@data^0,c
  5231   00058E  ECB1  F004         	call	_max_write	;wreg free
  5232   000592                     
  5233                           ;MAX7219.c: 73:  }
  5234   000592  4A40               	infsnz	flushBuffer@row^0,f,c
  5235   000594  2A41               	incf	(flushBuffer@row+1)^0,f,c
  5236   000596  BE41               	btfsc	(flushBuffer@row+1)^0,7,c
  5237   000598  EFD7  F002         	goto	u1331
  5238   00059C  5041               	movf	(flushBuffer@row+1)^0,w,c
  5239   00059E  E109               	bnz	u1330
  5240   0005A0  0E21               	movlw	33
  5241   0005A2  5C40               	subwf	flushBuffer@row^0,w,c
  5242   0005A4  A0D8               	btfss	status,0,c
  5243   0005A6  EFD7  F002         	goto	u1331
  5244   0005AA  EFD9  F002         	goto	u1330
  5245   0005AE                     u1331:
  5246   0005AE  EFB9  F002         	goto	l2391
  5247   0005B2                     u1330:
  5248   0005B2  0012               	return		;funcret
  5249   0005B4                     __end_of_flushBuffer:
  5250                           	callstack 0
  5251                           
  5252 ;; *************** function _max_write *****************
  5253 ;; Defined at:
  5254 ;;		line 10 in file "MAX7219.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;  row             2   11[COMRAM] int 
  5257 ;;  data            1   13[COMRAM] unsigned char 
  5258 ;; Auto vars:     Size  Location     Type
  5259 ;;  dev             2   20[COMRAM] int 
  5260 ;;  writeData       2   22[COMRAM] unsigned short 
  5261 ;;  devTarget       2   18[COMRAM] int 
  5262 ;;  offset          2   16[COMRAM] int 
  5263 ;; Return value:  Size  Location     Type
  5264 ;;                  1    wreg      void 
  5265 ;; Registers used:
  5266 ;;		wreg, status,2, status,0, cstack
  5267 ;; Tracked objects:
  5268 ;;		On entry : 0/0
  5269 ;;		On exit  : 0/0
  5270 ;;		Unchanged: 0/0
  5271 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5272 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5273 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5274 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5275 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5276 ;;Total ram usage:       13 bytes
  5277 ;; Hardware stack levels used: 1
  5278 ;; Hardware stack levels required when called: 3
  5279 ;; This function calls:
  5280 ;;		_SPI_Exchange8bit
  5281 ;;		___awdiv
  5282 ;; This function is called by:
  5283 ;;		_flushBuffer
  5284 ;; This function uses a non-reentrant model
  5285 ;;
  5286                           
  5287                           	psect	text17
  5288   000962                     __ptext17:
  5289                           	callstack 0
  5290   000962                     _max_write:
  5291                           	callstack 23
  5292   000962                     
  5293                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  5294   000962  0EFF               	movlw	255
  5295   000964  240C               	addwf	max_write@row^0,w,c
  5296   000966  6E04               	movwf	___awdiv@dividend^0,c
  5297   000968  0EFF               	movlw	255
  5298   00096A  200D               	addwfc	(max_write@row+1)^0,w,c
  5299   00096C  6E05               	movwf	(___awdiv@dividend+1)^0,c
  5300   00096E  0E00               	movlw	0
  5301   000970  6E07               	movwf	(___awdiv@divisor+1)^0,c
  5302   000972  0E08               	movlw	8
  5303   000974  6E06               	movwf	___awdiv@divisor^0,c
  5304   000976  EC4F  F004         	call	___awdiv	;wreg free
  5305   00097A  C004  F013         	movff	?___awdiv,max_write@devTarget
  5306   00097E  C005  F014         	movff	?___awdiv+1,max_write@devTarget+1
  5307   000982                     
  5308                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  5309   000982  C013  F00F         	movff	max_write@devTarget,??_max_write
  5310   000986  C014  F010         	movff	max_write@devTarget+1,??_max_write+1
  5311   00098A  90D8               	bcf	status,0,c
  5312   00098C  360F               	rlcf	??_max_write^0,f,c
  5313   00098E  3610               	rlcf	(??_max_write+1)^0,f,c
  5314   000990  90D8               	bcf	status,0,c
  5315   000992  360F               	rlcf	??_max_write^0,f,c
  5316   000994  3610               	rlcf	(??_max_write+1)^0,f,c
  5317   000996  90D8               	bcf	status,0,c
  5318   000998  360F               	rlcf	??_max_write^0,f,c
  5319   00099A  3610               	rlcf	(??_max_write+1)^0,f,c
  5320   00099C  C00F  F011         	movff	??_max_write,max_write@offset
  5321   0009A0  C010  F012         	movff	??_max_write+1,max_write@offset+1
  5322   0009A4  948B               	bcf	139,2,c	;volatile
  5323   0009A6                     
  5324                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  5325   0009A6  0E00               	movlw	0
  5326   0009A8  6E16               	movwf	(max_write@dev+1)^0,c
  5327   0009AA  0E00               	movlw	0
  5328   0009AC  6E15               	movwf	max_write@dev^0,c
  5329   0009AE                     l2313:
  5330                           
  5331                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  5332   0009AE  5013               	movf	max_write@devTarget^0,w,c
  5333   0009B0  1815               	xorwf	max_write@dev^0,w,c
  5334   0009B2  E107               	bnz	u1241
  5335   0009B4  5014               	movf	(max_write@devTarget+1)^0,w,c
  5336   0009B6  1816               	xorwf	(max_write@dev+1)^0,w,c
  5337   0009B8  A4D8               	btfss	status,2,c
  5338   0009BA  EFE1  F004         	goto	u1241
  5339   0009BE  EFE3  F004         	goto	u1240
  5340   0009C2                     u1241:
  5341   0009C2  EFF9  F004         	goto	l2321
  5342   0009C6                     u1240:
  5343   0009C6                     
  5344                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  5345   0009C6  5011               	movf	max_write@offset^0,w,c
  5346   0009C8  5C0C               	subwf	max_write@row^0,w,c
  5347   0009CA  6E0F               	movwf	??_max_write^0,c
  5348   0009CC  5012               	movf	(max_write@offset+1)^0,w,c
  5349   0009CE  580D               	subwfb	(max_write@row+1)^0,w,c
  5350   0009D0  6E10               	movwf	(??_max_write+1)^0,c
  5351   0009D2  C00F  F010         	movff	??_max_write,??_max_write+1
  5352   0009D6  6A0F               	clrf	??_max_write^0,c
  5353   0009D8  500E               	movf	max_write@data^0,w,c
  5354   0009DA  100F               	iorwf	??_max_write^0,w,c
  5355   0009DC  6E17               	movwf	max_write@writeData^0,c
  5356   0009DE  5010               	movf	(??_max_write+1)^0,w,c
  5357   0009E0  6E18               	movwf	(max_write@writeData+1)^0,c
  5358   0009E2                     
  5359                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5360   0009E2  5018               	movf	(max_write@writeData+1)^0,w,c
  5361   0009E4  ECFB  F007         	call	_SPI_Exchange8bit
  5362   0009E8                     
  5363                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  5364   0009E8  5017               	movf	max_write@writeData^0,w,c
  5365   0009EA  ECFB  F007         	call	_SPI_Exchange8bit
  5366                           
  5367                           ;MAX7219.c: 31:   }
  5368   0009EE  EFFF  F004         	goto	l2327
  5369   0009F2                     l2321:
  5370   0009F2                     
  5371                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5372   0009F2  0E00               	movlw	0
  5373   0009F4  ECFB  F007         	call	_SPI_Exchange8bit
  5374   0009F8                     
  5375                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  5376   0009F8  0E00               	movlw	0
  5377   0009FA  ECFB  F007         	call	_SPI_Exchange8bit
  5378   0009FE                     l2327:
  5379                           
  5380                           ;MAX7219.c: 46:  }
  5381   0009FE  4A15               	infsnz	max_write@dev^0,f,c
  5382   000A00  2A16               	incf	(max_write@dev+1)^0,f,c
  5383   000A02  BE16               	btfsc	(max_write@dev+1)^0,7,c
  5384   000A04  EF0D  F005         	goto	u1251
  5385   000A08  5016               	movf	(max_write@dev+1)^0,w,c
  5386   000A0A  E109               	bnz	u1250
  5387   000A0C  0E04               	movlw	4
  5388   000A0E  5C15               	subwf	max_write@dev^0,w,c
  5389   000A10  A0D8               	btfss	status,0,c
  5390   000A12  EF0D  F005         	goto	u1251
  5391   000A16  EF0F  F005         	goto	u1250
  5392   000A1A                     u1251:
  5393   000A1A  EFD7  F004         	goto	l2313
  5394   000A1E                     u1250:
  5395   000A1E  848B               	bsf	139,2,c	;volatile
  5396   000A20  0012               	return		;funcret
  5397   000A22                     __end_of_max_write:
  5398                           	callstack 0
  5399                           
  5400 ;; *************** function ___awdiv *****************
  5401 ;; Defined at:
  5402 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5403 ;; Parameters:    Size  Location     Type
  5404 ;;  dividend        2    3[COMRAM] int 
  5405 ;;  divisor         2    5[COMRAM] int 
  5406 ;; Auto vars:     Size  Location     Type
  5407 ;;  quotient        2    9[COMRAM] int 
  5408 ;;  sign            1    8[COMRAM] unsigned char 
  5409 ;;  counter         1    7[COMRAM] unsigned char 
  5410 ;; Return value:  Size  Location     Type
  5411 ;;                  2    3[COMRAM] int 
  5412 ;; Registers used:
  5413 ;;		wreg, status,2, status,0
  5414 ;; Tracked objects:
  5415 ;;		On entry : 0/0
  5416 ;;		On exit  : 0/0
  5417 ;;		Unchanged: 0/0
  5418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5419 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5420 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5421 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5422 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5423 ;;Total ram usage:        8 bytes
  5424 ;; Hardware stack levels used: 1
  5425 ;; Hardware stack levels required when called: 2
  5426 ;; This function calls:
  5427 ;;		Nothing
  5428 ;; This function is called by:
  5429 ;;		_displayTime
  5430 ;;		_displayAlarmTime
  5431 ;;		_max_write
  5432 ;;		_flushBuffer
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text18
  5437   00089E                     __ptext18:
  5438                           	callstack 0
  5439   00089E                     ___awdiv:
  5440                           	callstack 23
  5441   00089E  0E00               	movlw	0
  5442   0008A0  6E09               	movwf	___awdiv@sign^0,c
  5443   0008A2  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  5444   0008A4  EF58  F004         	goto	u1180
  5445   0008A8  EF56  F004         	goto	u1181
  5446   0008AC                     u1181:
  5447   0008AC  EF5E  F004         	goto	l2263
  5448   0008B0                     u1180:
  5449   0008B0  6C06               	negf	___awdiv@divisor^0,c
  5450   0008B2  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  5451   0008B4  B0D8               	btfsc	status,0,c
  5452   0008B6  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  5453   0008B8  0E01               	movlw	1
  5454   0008BA  6E09               	movwf	___awdiv@sign^0,c
  5455   0008BC                     l2263:
  5456   0008BC  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  5457   0008BE  EF65  F004         	goto	u1190
  5458   0008C2  EF63  F004         	goto	u1191
  5459   0008C6                     u1191:
  5460   0008C6  EF6B  F004         	goto	l2269
  5461   0008CA                     u1190:
  5462   0008CA  6C04               	negf	___awdiv@dividend^0,c
  5463   0008CC  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  5464   0008CE  B0D8               	btfsc	status,0,c
  5465   0008D0  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  5466   0008D2  0E01               	movlw	1
  5467   0008D4  1A09               	xorwf	___awdiv@sign^0,f,c
  5468   0008D6                     l2269:
  5469   0008D6  0E00               	movlw	0
  5470   0008D8  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  5471   0008DA  0E00               	movlw	0
  5472   0008DC  6E0A               	movwf	___awdiv@quotient^0,c
  5473   0008DE  5006               	movf	___awdiv@divisor^0,w,c
  5474   0008E0  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  5475   0008E2  B4D8               	btfsc	status,2,c
  5476   0008E4  EF76  F004         	goto	u1201
  5477   0008E8  EF78  F004         	goto	u1200
  5478   0008EC                     u1201:
  5479   0008EC  EFA0  F004         	goto	l2291
  5480   0008F0                     u1200:
  5481   0008F0  0E01               	movlw	1
  5482   0008F2  6E08               	movwf	___awdiv@counter^0,c
  5483   0008F4  EF80  F004         	goto	l2277
  5484   0008F8                     l2275:
  5485   0008F8  90D8               	bcf	status,0,c
  5486   0008FA  3606               	rlcf	___awdiv@divisor^0,f,c
  5487   0008FC  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  5488   0008FE  2A08               	incf	___awdiv@counter^0,f,c
  5489   000900                     l2277:
  5490   000900  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  5491   000902  EF85  F004         	goto	u1211
  5492   000906  EF87  F004         	goto	u1210
  5493   00090A                     u1211:
  5494   00090A  EF7C  F004         	goto	l2275
  5495   00090E                     u1210:
  5496   00090E                     l2279:
  5497   00090E  90D8               	bcf	status,0,c
  5498   000910  360A               	rlcf	___awdiv@quotient^0,f,c
  5499   000912  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  5500   000914  5006               	movf	___awdiv@divisor^0,w,c
  5501   000916  5C04               	subwf	___awdiv@dividend^0,w,c
  5502   000918  5007               	movf	(___awdiv@divisor+1)^0,w,c
  5503   00091A  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  5504   00091C  A0D8               	btfss	status,0,c
  5505   00091E  EF93  F004         	goto	u1221
  5506   000922  EF95  F004         	goto	u1220
  5507   000926                     u1221:
  5508   000926  EF9A  F004         	goto	l2287
  5509   00092A                     u1220:
  5510   00092A  5006               	movf	___awdiv@divisor^0,w,c
  5511   00092C  5E04               	subwf	___awdiv@dividend^0,f,c
  5512   00092E  5007               	movf	(___awdiv@divisor+1)^0,w,c
  5513   000930  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  5514   000932  800A               	bsf	___awdiv@quotient^0,0,c
  5515   000934                     l2287:
  5516   000934  90D8               	bcf	status,0,c
  5517   000936  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  5518   000938  3206               	rrcf	___awdiv@divisor^0,f,c
  5519   00093A  2E08               	decfsz	___awdiv@counter^0,f,c
  5520   00093C  EF87  F004         	goto	l2279
  5521   000940                     l2291:
  5522   000940  5009               	movf	___awdiv@sign^0,w,c
  5523   000942  B4D8               	btfsc	status,2,c
  5524   000944  EFA6  F004         	goto	u1231
  5525   000948  EFA8  F004         	goto	u1230
  5526   00094C                     u1231:
  5527   00094C  EFAC  F004         	goto	l2295
  5528   000950                     u1230:
  5529   000950  6C0A               	negf	___awdiv@quotient^0,c
  5530   000952  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  5531   000954  B0D8               	btfsc	status,0,c
  5532   000956  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  5533   000958                     l2295:
  5534   000958  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  5535   00095C  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  5536   000960  0012               	return		;funcret
  5537   000962                     __end_of___awdiv:
  5538                           	callstack 0
  5539                           
  5540 ;; *************** function _SPI_Exchange8bit *****************
  5541 ;; Defined at:
  5542 ;;		line 77 in file "mcc_generated_files/spi.c"
  5543 ;; Parameters:    Size  Location     Type
  5544 ;;  data            1    wreg     unsigned char 
  5545 ;; Auto vars:     Size  Location     Type
  5546 ;;  data            1    3[COMRAM] unsigned char 
  5547 ;; Return value:  Size  Location     Type
  5548 ;;                  1    wreg      unsigned char 
  5549 ;; Registers used:
  5550 ;;		wreg, status,2
  5551 ;; Tracked objects:
  5552 ;;		On entry : 0/0
  5553 ;;		On exit  : 0/0
  5554 ;;		Unchanged: 0/0
  5555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5556 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5557 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5559 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5560 ;;Total ram usage:        1 bytes
  5561 ;; Hardware stack levels used: 1
  5562 ;; Hardware stack levels required when called: 2
  5563 ;; This function calls:
  5564 ;;		Nothing
  5565 ;; This function is called by:
  5566 ;;		_max_write
  5567 ;;		_max7219_cmd
  5568 ;;		_SPI_Exchange8bitBuffer
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           
  5572                           	psect	text19
  5573   000FF6                     __ptext19:
  5574                           	callstack 0
  5575   000FF6                     _SPI_Exchange8bit:
  5576                           	callstack 23
  5577                           
  5578                           ;incstack = 0
  5579                           ;SPI_Exchange8bit@data stored from wreg
  5580   000FF6  6E04               	movwf	SPI_Exchange8bit@data^0,c
  5581   000FF8                     
  5582                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  5583   000FF8  9EC6               	bcf	198,7,c	;volatile
  5584   000FFA                     
  5585                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  5586   000FFA  C004  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  5587   000FFE                     l18:
  5588                           
  5589                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  5590   000FFE  A0C7               	btfss	199,0,c	;volatile
  5591   001000  EF04  F008         	goto	u1171
  5592   001004  EF06  F008         	goto	u1170
  5593   001008                     u1171:
  5594   001008  EFFF  F007         	goto	l18
  5595   00100C                     u1170:
  5596   00100C                     
  5597                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  5598   00100C  50C9               	movf	201,w,c	;volatile
  5599   00100E  0012               	return		;funcret
  5600   001010                     __end_of_SPI_Exchange8bit:
  5601                           	callstack 0
  5602                           
  5603 ;; *************** function ___awmod *****************
  5604 ;; Defined at:
  5605 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5606 ;; Parameters:    Size  Location     Type
  5607 ;;  dividend        2    3[COMRAM] int 
  5608 ;;  divisor         2    5[COMRAM] int 
  5609 ;; Auto vars:     Size  Location     Type
  5610 ;;  sign            1    8[COMRAM] unsigned char 
  5611 ;;  counter         1    7[COMRAM] unsigned char 
  5612 ;; Return value:  Size  Location     Type
  5613 ;;                  2    3[COMRAM] int 
  5614 ;; Registers used:
  5615 ;;		wreg, status,2, status,0
  5616 ;; Tracked objects:
  5617 ;;		On entry : 0/0
  5618 ;;		On exit  : 0/0
  5619 ;;		Unchanged: 0/0
  5620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5621 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5622 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5624 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5625 ;;Total ram usage:        6 bytes
  5626 ;; Hardware stack levels used: 1
  5627 ;; Hardware stack levels required when called: 2
  5628 ;; This function calls:
  5629 ;;		Nothing
  5630 ;; This function is called by:
  5631 ;;		_displayTime
  5632 ;;		_displayAlarmTime
  5633 ;;		_checkButtons
  5634 ;; This function uses a non-reentrant model
  5635 ;;
  5636                           
  5637                           	psect	text20
  5638   000B8A                     __ptext20:
  5639                           	callstack 0
  5640   000B8A                     ___awmod:
  5641                           	callstack 27
  5642   000B8A  0E00               	movlw	0
  5643   000B8C  6E09               	movwf	___awmod@sign^0,c
  5644   000B8E  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  5645   000B90  EFCE  F005         	goto	u1500
  5646   000B94  EFCC  F005         	goto	u1501
  5647   000B98                     u1501:
  5648   000B98  EFD4  F005         	goto	l2529
  5649   000B9C                     u1500:
  5650   000B9C  6C04               	negf	___awmod@dividend^0,c
  5651   000B9E  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5652   000BA0  B0D8               	btfsc	status,0,c
  5653   000BA2  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5654   000BA4  0E01               	movlw	1
  5655   000BA6  6E09               	movwf	___awmod@sign^0,c
  5656   000BA8                     l2529:
  5657   000BA8  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  5658   000BAA  EFDB  F005         	goto	u1510
  5659   000BAE  EFD9  F005         	goto	u1511
  5660   000BB2                     u1511:
  5661   000BB2  EFDF  F005         	goto	l2533
  5662   000BB6                     u1510:
  5663   000BB6  6C06               	negf	___awmod@divisor^0,c
  5664   000BB8  1E07               	comf	(___awmod@divisor+1)^0,f,c
  5665   000BBA  B0D8               	btfsc	status,0,c
  5666   000BBC  2A07               	incf	(___awmod@divisor+1)^0,f,c
  5667   000BBE                     l2533:
  5668   000BBE  5006               	movf	___awmod@divisor^0,w,c
  5669   000BC0  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  5670   000BC2  B4D8               	btfsc	status,2,c
  5671   000BC4  EFE6  F005         	goto	u1521
  5672   000BC8  EFE8  F005         	goto	u1520
  5673   000BCC                     u1521:
  5674   000BCC  EF0C  F006         	goto	l2549
  5675   000BD0                     u1520:
  5676   000BD0  0E01               	movlw	1
  5677   000BD2  6E08               	movwf	___awmod@counter^0,c
  5678   000BD4  EFF0  F005         	goto	l2539
  5679   000BD8                     l2537:
  5680   000BD8  90D8               	bcf	status,0,c
  5681   000BDA  3606               	rlcf	___awmod@divisor^0,f,c
  5682   000BDC  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  5683   000BDE  2A08               	incf	___awmod@counter^0,f,c
  5684   000BE0                     l2539:
  5685   000BE0  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  5686   000BE2  EFF5  F005         	goto	u1531
  5687   000BE6  EFF7  F005         	goto	u1530
  5688   000BEA                     u1531:
  5689   000BEA  EFEC  F005         	goto	l2537
  5690   000BEE                     u1530:
  5691   000BEE                     l2541:
  5692   000BEE  5006               	movf	___awmod@divisor^0,w,c
  5693   000BF0  5C04               	subwf	___awmod@dividend^0,w,c
  5694   000BF2  5007               	movf	(___awmod@divisor+1)^0,w,c
  5695   000BF4  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  5696   000BF6  A0D8               	btfss	status,0,c
  5697   000BF8  EF00  F006         	goto	u1541
  5698   000BFC  EF02  F006         	goto	u1540
  5699   000C00                     u1541:
  5700   000C00  EF06  F006         	goto	l2545
  5701   000C04                     u1540:
  5702   000C04  5006               	movf	___awmod@divisor^0,w,c
  5703   000C06  5E04               	subwf	___awmod@dividend^0,f,c
  5704   000C08  5007               	movf	(___awmod@divisor+1)^0,w,c
  5705   000C0A  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  5706   000C0C                     l2545:
  5707   000C0C  90D8               	bcf	status,0,c
  5708   000C0E  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  5709   000C10  3206               	rrcf	___awmod@divisor^0,f,c
  5710   000C12  2E08               	decfsz	___awmod@counter^0,f,c
  5711   000C14  EFF7  F005         	goto	l2541
  5712   000C18                     l2549:
  5713   000C18  5009               	movf	___awmod@sign^0,w,c
  5714   000C1A  B4D8               	btfsc	status,2,c
  5715   000C1C  EF12  F006         	goto	u1551
  5716   000C20  EF14  F006         	goto	u1550
  5717   000C24                     u1551:
  5718   000C24  EF18  F006         	goto	l2553
  5719   000C28                     u1550:
  5720   000C28  6C04               	negf	___awmod@dividend^0,c
  5721   000C2A  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5722   000C2C  B0D8               	btfsc	status,0,c
  5723   000C2E  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5724   000C30                     l2553:
  5725   000C30  C004  F004         	movff	___awmod@dividend,?___awmod
  5726   000C34  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  5727   000C38  0012               	return		;funcret
  5728   000C3A                     __end_of___awmod:
  5729                           	callstack 0
  5730                           
  5731 ;; *************** function _clearAlarm *****************
  5732 ;; Defined at:
  5733 ;;		line 200 in file "main.c"
  5734 ;; Parameters:    Size  Location     Type
  5735 ;;		None
  5736 ;; Auto vars:     Size  Location     Type
  5737 ;;		None
  5738 ;; Return value:  Size  Location     Type
  5739 ;;                  1    wreg      void 
  5740 ;; Registers used:
  5741 ;;		wreg, status,2
  5742 ;; Tracked objects:
  5743 ;;		On entry : 0/0
  5744 ;;		On exit  : 0/0
  5745 ;;		Unchanged: 0/0
  5746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5747 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5750 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5751 ;;Total ram usage:        0 bytes
  5752 ;; Hardware stack levels used: 1
  5753 ;; Hardware stack levels required when called: 2
  5754 ;; This function calls:
  5755 ;;		Nothing
  5756 ;; This function is called by:
  5757 ;;		_checkButtons
  5758 ;; This function uses a non-reentrant model
  5759 ;;
  5760                           
  5761                           	psect	text21
  5762   001064                     __ptext21:
  5763                           	callstack 0
  5764   001064                     _clearAlarm:
  5765                           	callstack 27
  5766   001064                     
  5767                           ;main.c: 202:     alarmTriggered = 0;
  5768   001064  0E00               	movlw	0
  5769   001066  0100               	movlb	0	; () banked
  5770   001068  6FC7               	movwf	_alarmTriggered& (0+255),b
  5771                           
  5772                           ;main.c: 203:     alarmSet = 0;
  5773   00106A  0E00               	movlw	0
  5774   00106C  6FC9               	movwf	_alarmSet& (0+255),b
  5775   00106E                     
  5776                           ; BSR set to: 0
  5777   00106E  0012               	return		;funcret
  5778   001070                     __end_of_clearAlarm:
  5779                           	callstack 0
  5780                           
  5781 ;; *************** function _TMR0_StartTimer *****************
  5782 ;; Defined at:
  5783 ;;		line 86 in file "mcc_generated_files/tmr0.c"
  5784 ;; Parameters:    Size  Location     Type
  5785 ;;		None
  5786 ;; Auto vars:     Size  Location     Type
  5787 ;;		None
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  1    wreg      void 
  5790 ;; Registers used:
  5791 ;;		None
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;Total ram usage:        0 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; Hardware stack levels required when called: 2
  5804 ;; This function calls:
  5805 ;;		Nothing
  5806 ;; This function is called by:
  5807 ;;		_main
  5808 ;; This function uses a non-reentrant model
  5809 ;;
  5810                           
  5811                           	psect	text22
  5812   00109A                     __ptext22:
  5813                           	callstack 0
  5814   00109A                     _TMR0_StartTimer:
  5815                           	callstack 28
  5816   00109A                     
  5817                           ;mcc_generated_files/tmr0.c: 89:     T0CONbits.TMR0ON = 1;
  5818   00109A  8ED5               	bsf	213,7,c	;volatile
  5819   00109C  0012               	return		;funcret
  5820   00109E                     __end_of_TMR0_StartTimer:
  5821                           	callstack 0
  5822                           
  5823 ;; *************** function _TMR0_Reload *****************
  5824 ;; Defined at:
  5825 ;;		line 118 in file "mcc_generated_files/tmr0.c"
  5826 ;; Parameters:    Size  Location     Type
  5827 ;;		None
  5828 ;; Auto vars:     Size  Location     Type
  5829 ;;		None
  5830 ;; Return value:  Size  Location     Type
  5831 ;;                  1    wreg      void 
  5832 ;; Registers used:
  5833 ;;		wreg, status,2
  5834 ;; Tracked objects:
  5835 ;;		On entry : 0/0
  5836 ;;		On exit  : 0/0
  5837 ;;		Unchanged: 0/0
  5838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5839 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5840 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;Total ram usage:        0 bytes
  5844 ;; Hardware stack levels used: 1
  5845 ;; Hardware stack levels required when called: 2
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_main
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text23
  5854   001070                     __ptext23:
  5855                           	callstack 0
  5856   001070                     _TMR0_Reload:
  5857                           	callstack 28
  5858   001070                     
  5859                           ;mcc_generated_files/tmr0.c: 121:     TMR0H = timer0ReloadVal >> 8;
  5860   001070  0100               	movlb	0	; () banked
  5861   001072  51C1               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  5862   001074  6ED7               	movwf	215,c	;volatile
  5863   001076                     
  5864                           ; BSR set to: 0
  5865                           ;mcc_generated_files/tmr0.c: 122:     TMR0L = (uint8_t) timer0ReloadVal;
  5866   001076  C0C0  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5867   00107A                     
  5868                           ; BSR set to: 0
  5869   00107A  0012               	return		;funcret
  5870   00107C                     __end_of_TMR0_Reload:
  5871                           	callstack 0
  5872                           
  5873 ;; *************** function _TMR0_HasOverflowOccured *****************
  5874 ;; Defined at:
  5875 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  5876 ;; Parameters:    Size  Location     Type
  5877 ;;		None
  5878 ;; Auto vars:     Size  Location     Type
  5879 ;;		None
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      _Bool 
  5882 ;; Registers used:
  5883 ;;		wreg
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5890 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;Total ram usage:        0 bytes
  5894 ;; Hardware stack levels used: 1
  5895 ;; Hardware stack levels required when called: 2
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_main
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text24
  5904   001010                     __ptext24:
  5905                           	callstack 0
  5906   001010                     _TMR0_HasOverflowOccured:
  5907                           	callstack 28
  5908   001010                     
  5909                           ;mcc_generated_files/tmr0.c: 128:     return(INTCONbits.TMR0IF);
  5910   001010  B4F2               	btfsc	242,2,c	;volatile
  5911   001012  EF0D  F008         	goto	u1651
  5912   001016  EF10  F008         	goto	u1650
  5913   00101A                     u1651:
  5914   00101A  0E01               	movlw	1
  5915   00101C  EF11  F008         	goto	u1656
  5916   001020                     u1650:
  5917   001020  0E00               	movlw	0
  5918   001022                     u1656:
  5919   001022  0012               	return		;funcret
  5920   001024                     __end_of_TMR0_HasOverflowOccured:
  5921                           	callstack 0
  5922                           
  5923 ;; *************** function _SYSTEM_Initialize *****************
  5924 ;; Defined at:
  5925 ;;		line 108 in file "mcc_generated_files/mcc.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;		None
  5928 ;; Auto vars:     Size  Location     Type
  5929 ;;		None
  5930 ;; Return value:  Size  Location     Type
  5931 ;;                  1    wreg      void 
  5932 ;; Registers used:
  5933 ;;		wreg, status,2, status,0, cstack
  5934 ;; Tracked objects:
  5935 ;;		On entry : 0/0
  5936 ;;		On exit  : 0/0
  5937 ;;		Unchanged: 0/0
  5938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5939 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;Total ram usage:        0 bytes
  5944 ;; Hardware stack levels used: 1
  5945 ;; Hardware stack levels required when called: 4
  5946 ;; This function calls:
  5947 ;;		_EUSART_Initialize
  5948 ;;		_INTERRUPT_Initialize
  5949 ;;		_OSCILLATOR_Initialize
  5950 ;;		_PIN_MANAGER_Initialize
  5951 ;;		_PWM2_Initialize
  5952 ;;		_SPI_Initialize
  5953 ;;		_TMR0_Initialize
  5954 ;;		_TMR2_Initialize
  5955 ;; This function is called by:
  5956 ;;		_main
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text25
  5961   000F96                     __ptext25:
  5962                           	callstack 0
  5963   000F96                     _SYSTEM_Initialize:
  5964                           	callstack 26
  5965   000F96                     
  5966                           ;mcc_generated_files/mcc.c: 110:     INTERRUPT_Initialize();
  5967   000F96  EC4F  F008         	call	_INTERRUPT_Initialize	;wreg free
  5968   000F9A                     
  5969                           ;mcc_generated_files/mcc.c: 111:     PIN_MANAGER_Initialize();
  5970   000F9A  ECDC  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  5971   000F9E                     
  5972                           ;mcc_generated_files/mcc.c: 112:     OSCILLATOR_Initialize();
  5973   000F9E  EC3E  F008         	call	_OSCILLATOR_Initialize	;wreg free
  5974   000FA2                     
  5975                           ;mcc_generated_files/mcc.c: 113:     SPI_Initialize();
  5976   000FA2  EC24  F008         	call	_SPI_Initialize	;wreg free
  5977   000FA6                     
  5978                           ;mcc_generated_files/mcc.c: 114:     PWM2_Initialize();
  5979   000FA6  EC2B  F008         	call	_PWM2_Initialize	;wreg free
  5980   000FAA                     
  5981                           ;mcc_generated_files/mcc.c: 115:     TMR2_Initialize();
  5982   000FAA  EC1B  F008         	call	_TMR2_Initialize	;wreg free
  5983   000FAE                     
  5984                           ;mcc_generated_files/mcc.c: 116:     TMR0_Initialize();
  5985   000FAE  ECB7  F007         	call	_TMR0_Initialize	;wreg free
  5986   000FB2                     
  5987                           ;mcc_generated_files/mcc.c: 117:     EUSART_Initialize();
  5988   000FB2  EC28  F007         	call	_EUSART_Initialize	;wreg free
  5989   000FB6  0012               	return		;funcret
  5990   000FB8                     __end_of_SYSTEM_Initialize:
  5991                           	callstack 0
  5992                           
  5993 ;; *************** function _TMR2_Initialize *****************
  5994 ;; Defined at:
  5995 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  5996 ;; Parameters:    Size  Location     Type
  5997 ;;		None
  5998 ;; Auto vars:     Size  Location     Type
  5999 ;;		None
  6000 ;; Return value:  Size  Location     Type
  6001 ;;                  1    wreg      void 
  6002 ;; Registers used:
  6003 ;;		wreg, status,2
  6004 ;; Tracked objects:
  6005 ;;		On entry : 0/0
  6006 ;;		On exit  : 0/0
  6007 ;;		Unchanged: 0/0
  6008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6012 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;Total ram usage:        0 bytes
  6014 ;; Hardware stack levels used: 1
  6015 ;; Hardware stack levels required when called: 2
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_SYSTEM_Initialize
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text26
  6024   001036                     __ptext26:
  6025                           	callstack 0
  6026   001036                     _TMR2_Initialize:
  6027                           	callstack 27
  6028   001036                     
  6029                           ;mcc_generated_files/tmr2.c: 66:     PR2 = 0x7C;
  6030   001036  0E7C               	movlw	124
  6031   001038  6ECB               	movwf	203,c	;volatile
  6032                           
  6033                           ;mcc_generated_files/tmr2.c: 69:     TMR2 = 0x00;
  6034   00103A  0E00               	movlw	0
  6035   00103C  6ECC               	movwf	204,c	;volatile
  6036   00103E                     
  6037                           ;mcc_generated_files/tmr2.c: 72:     PIR1bits.TMR2IF = 0;
  6038   00103E  929E               	bcf	158,1,c	;volatile
  6039                           
  6040                           ;mcc_generated_files/tmr2.c: 75:     T2CON = 0x1D;
  6041   001040  0E1D               	movlw	29
  6042   001042  6ECA               	movwf	202,c	;volatile
  6043   001044                     
  6044                           ;mcc_generated_files/tmr2.c: 77:     T2CONbits.TMR2ON = 1;
  6045   001044  84CA               	bsf	202,2,c	;volatile
  6046   001046  0012               	return		;funcret
  6047   001048                     __end_of_TMR2_Initialize:
  6048                           	callstack 0
  6049                           
  6050 ;; *************** function _TMR0_Initialize *****************
  6051 ;; Defined at:
  6052 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;		None
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;		None
  6057 ;; Return value:  Size  Location     Type
  6058 ;;                  1    wreg      void 
  6059 ;; Registers used:
  6060 ;;		wreg, status,2, status,0
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6066 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6067 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;Total ram usage:        2 bytes
  6071 ;; Hardware stack levels used: 1
  6072 ;; Hardware stack levels required when called: 2
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_SYSTEM_Initialize
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text27
  6081   000F6E                     __ptext27:
  6082                           	callstack 0
  6083   000F6E                     _TMR0_Initialize:
  6084                           	callstack 27
  6085   000F6E                     
  6086                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0x0B;
  6087   000F6E  0E0B               	movlw	11
  6088   000F70  6ED7               	movwf	215,c	;volatile
  6089                           
  6090                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0xDB;
  6091   000F72  0EDB               	movlw	219
  6092   000F74  6ED6               	movwf	214,c	;volatile
  6093   000F76                     
  6094                           ;mcc_generated_files/tmr0.c: 77:     timer0ReloadVal = (TMR0H << 8) | TMR0L;
  6095   000F76  50D6               	movf	214,w,c	;volatile
  6096   000F78  CFD7 F004          	movff	4055,??_TMR0_Initialize	;volatile
  6097   000F7C  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
  6098   000F7E  C004  F005         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  6099   000F82  6A04               	clrf	??_TMR0_Initialize^0,c
  6100   000F84  1004               	iorwf	??_TMR0_Initialize^0,w,c
  6101   000F86  0100               	movlb	0	; () banked
  6102   000F88  6FC0               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  6103   000F8A  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
  6104   000F8C  6FC1               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  6105   000F8E                     
  6106                           ; BSR set to: 0
  6107                           ;mcc_generated_files/tmr0.c: 80:     INTCONbits.TMR0IF = 0;
  6108   000F8E  94F2               	bcf	242,2,c	;volatile
  6109   000F90                     
  6110                           ; BSR set to: 0
  6111                           ;mcc_generated_files/tmr0.c: 83:     T0CON = 0x94;
  6112   000F90  0E94               	movlw	148
  6113   000F92  6ED5               	movwf	213,c	;volatile
  6114   000F94                     
  6115                           ; BSR set to: 0
  6116   000F94  0012               	return		;funcret
  6117   000F96                     __end_of_TMR0_Initialize:
  6118                           	callstack 0
  6119                           
  6120 ;; *************** function _SPI_Initialize *****************
  6121 ;; Defined at:
  6122 ;;		line 63 in file "mcc_generated_files/spi.c"
  6123 ;; Parameters:    Size  Location     Type
  6124 ;;		None
  6125 ;; Auto vars:     Size  Location     Type
  6126 ;;		None
  6127 ;; Return value:  Size  Location     Type
  6128 ;;                  1    wreg      void 
  6129 ;; Registers used:
  6130 ;;		wreg, status,2
  6131 ;; Tracked objects:
  6132 ;;		On entry : 0/0
  6133 ;;		On exit  : 0/0
  6134 ;;		Unchanged: 0/0
  6135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6136 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6137 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6139 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6140 ;;Total ram usage:        0 bytes
  6141 ;; Hardware stack levels used: 1
  6142 ;; Hardware stack levels required when called: 2
  6143 ;; This function calls:
  6144 ;;		Nothing
  6145 ;; This function is called by:
  6146 ;;		_SYSTEM_Initialize
  6147 ;; This function uses a non-reentrant model
  6148 ;;
  6149                           
  6150                           	psect	text28
  6151   001048                     __ptext28:
  6152                           	callstack 0
  6153   001048                     _SPI_Initialize:
  6154                           	callstack 27
  6155   001048                     
  6156                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  6157   001048  0EC0               	movlw	192
  6158   00104A  6EC7               	movwf	199,c	;volatile
  6159                           
  6160                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  6161   00104C  0E30               	movlw	48
  6162   00104E  6EC6               	movwf	198,c	;volatile
  6163                           
  6164                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  6165   001050  0E00               	movlw	0
  6166   001052  6EC8               	movwf	200,c	;volatile
  6167   001054  0012               	return		;funcret
  6168   001056                     __end_of_SPI_Initialize:
  6169                           	callstack 0
  6170                           
  6171 ;; *************** function _PWM2_Initialize *****************
  6172 ;; Defined at:
  6173 ;;		line 65 in file "mcc_generated_files/pwm2.c"
  6174 ;; Parameters:    Size  Location     Type
  6175 ;;		None
  6176 ;; Auto vars:     Size  Location     Type
  6177 ;;		None
  6178 ;; Return value:  Size  Location     Type
  6179 ;;                  1    wreg      void 
  6180 ;; Registers used:
  6181 ;;		wreg, status,2, status,0
  6182 ;; Tracked objects:
  6183 ;;		On entry : 0/0
  6184 ;;		On exit  : 0/0
  6185 ;;		Unchanged: 0/0
  6186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6188 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6190 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6191 ;;Total ram usage:        0 bytes
  6192 ;; Hardware stack levels used: 1
  6193 ;; Hardware stack levels required when called: 2
  6194 ;; This function calls:
  6195 ;;		Nothing
  6196 ;; This function is called by:
  6197 ;;		_SYSTEM_Initialize
  6198 ;; This function uses a non-reentrant model
  6199 ;;
  6200                           
  6201                           	psect	text29
  6202   001056                     __ptext29:
  6203                           	callstack 0
  6204   001056                     _PWM2_Initialize:
  6205                           	callstack 27
  6206   001056                     
  6207                           ;mcc_generated_files/pwm2.c: 69:     CCP2CON = 0x1C;
  6208   001056  0E1C               	movlw	28
  6209   001058  6EBA               	movwf	186,c	;volatile
  6210                           
  6211                           ;mcc_generated_files/pwm2.c: 72:     CCPR2L = 0x00;
  6212   00105A  0E00               	movlw	0
  6213   00105C  6EBB               	movwf	187,c	;volatile
  6214   00105E                     
  6215                           ;mcc_generated_files/pwm2.c: 73:     CCP2CON &= 0xCF;
  6216   00105E  0ECF               	movlw	207
  6217   001060  16BA               	andwf	186,f,c	;volatile
  6218   001062  0012               	return		;funcret
  6219   001064                     __end_of_PWM2_Initialize:
  6220                           	callstack 0
  6221                           
  6222 ;; *************** function _PIN_MANAGER_Initialize *****************
  6223 ;; Defined at:
  6224 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6225 ;; Parameters:    Size  Location     Type
  6226 ;;		None
  6227 ;; Auto vars:     Size  Location     Type
  6228 ;;		None
  6229 ;; Return value:  Size  Location     Type
  6230 ;;                  1    wreg      void 
  6231 ;; Registers used:
  6232 ;;		wreg, status,2
  6233 ;; Tracked objects:
  6234 ;;		On entry : 0/0
  6235 ;;		On exit  : 0/0
  6236 ;;		Unchanged: 0/0
  6237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6242 ;;Total ram usage:        0 bytes
  6243 ;; Hardware stack levels used: 1
  6244 ;; Hardware stack levels required when called: 2
  6245 ;; This function calls:
  6246 ;;		Nothing
  6247 ;; This function is called by:
  6248 ;;		_SYSTEM_Initialize
  6249 ;; This function uses a non-reentrant model
  6250 ;;
  6251                           
  6252                           	psect	text30
  6253   000FB8                     __ptext30:
  6254                           	callstack 0
  6255   000FB8                     _PIN_MANAGER_Initialize:
  6256                           	callstack 27
  6257   000FB8                     
  6258                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  6259   000FB8  0E00               	movlw	0
  6260   000FBA  6E89               	movwf	137,c	;volatile
  6261                           
  6262                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  6263   000FBC  0E00               	movlw	0
  6264   000FBE  6E8A               	movwf	138,c	;volatile
  6265                           
  6266                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  6267   000FC0  0E2C               	movlw	44
  6268   000FC2  6E8B               	movwf	139,c	;volatile
  6269   000FC4                     
  6270                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  6271   000FC4  6892               	setf	146,c	;volatile
  6272   000FC6                     
  6273                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  6274   000FC6  6893               	setf	147,c	;volatile
  6275                           
  6276                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x91;
  6277   000FC8  0E91               	movlw	145
  6278   000FCA  6E94               	movwf	148,c	;volatile
  6279                           
  6280                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  6281   000FCC  0E0A               	movlw	10
  6282   000FCE  6E7F               	movwf	127,c	;volatile
  6283                           
  6284                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  6285   000FD0  0E1F               	movlw	31
  6286   000FD2  6E7E               	movwf	126,c	;volatile
  6287   000FD4                     
  6288                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  6289   000FD4  687C               	setf	124,c	;volatile
  6290   000FD6                     
  6291                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  6292   000FD6  9EF1               	bcf	241,7,c	;volatile
  6293   000FD8  0012               	return		;funcret
  6294   000FDA                     __end_of_PIN_MANAGER_Initialize:
  6295                           	callstack 0
  6296                           
  6297 ;; *************** function _OSCILLATOR_Initialize *****************
  6298 ;; Defined at:
  6299 ;;		line 120 in file "mcc_generated_files/mcc.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;		None
  6302 ;; Auto vars:     Size  Location     Type
  6303 ;;		None
  6304 ;; Return value:  Size  Location     Type
  6305 ;;                  1    wreg      void 
  6306 ;; Registers used:
  6307 ;;		wreg, status,2
  6308 ;; Tracked objects:
  6309 ;;		On entry : 0/0
  6310 ;;		On exit  : 0/0
  6311 ;;		Unchanged: 0/0
  6312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6317 ;;Total ram usage:        0 bytes
  6318 ;; Hardware stack levels used: 1
  6319 ;; Hardware stack levels required when called: 2
  6320 ;; This function calls:
  6321 ;;		Nothing
  6322 ;; This function is called by:
  6323 ;;		_SYSTEM_Initialize
  6324 ;; This function uses a non-reentrant model
  6325 ;;
  6326                           
  6327                           	psect	text31
  6328   00107C                     __ptext31:
  6329                           	callstack 0
  6330   00107C                     _OSCILLATOR_Initialize:
  6331                           	callstack 27
  6332   00107C                     
  6333                           ;mcc_generated_files/mcc.c: 123:     OSCCON = 0x62;
  6334   00107C  0E62               	movlw	98
  6335   00107E  6ED3               	movwf	211,c	;volatile
  6336                           
  6337                           ;mcc_generated_files/mcc.c: 125:     OSCTUNE = 0x00;
  6338   001080  0E00               	movlw	0
  6339   001082  6E9B               	movwf	155,c	;volatile
  6340   001084  0012               	return		;funcret
  6341   001086                     __end_of_OSCILLATOR_Initialize:
  6342                           	callstack 0
  6343                           
  6344 ;; *************** function _INTERRUPT_Initialize *****************
  6345 ;; Defined at:
  6346 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6347 ;; Parameters:    Size  Location     Type
  6348 ;;		None
  6349 ;; Auto vars:     Size  Location     Type
  6350 ;;		None
  6351 ;; Return value:  Size  Location     Type
  6352 ;;                  1    wreg      void 
  6353 ;; Registers used:
  6354 ;;		None
  6355 ;; Tracked objects:
  6356 ;;		On entry : 0/0
  6357 ;;		On exit  : 0/0
  6358 ;;		Unchanged: 0/0
  6359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6360 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6361 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6362 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6363 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6364 ;;Total ram usage:        0 bytes
  6365 ;; Hardware stack levels used: 1
  6366 ;; Hardware stack levels required when called: 2
  6367 ;; This function calls:
  6368 ;;		Nothing
  6369 ;; This function is called by:
  6370 ;;		_SYSTEM_Initialize
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text32
  6375   00109E                     __ptext32:
  6376                           	callstack 0
  6377   00109E                     _INTERRUPT_Initialize:
  6378                           	callstack 27
  6379   00109E                     
  6380                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6381   00109E  9ED0               	bcf	208,7,c	;volatile
  6382   0010A0  0012               	return		;funcret
  6383   0010A2                     __end_of_INTERRUPT_Initialize:
  6384                           	callstack 0
  6385                           
  6386 ;; *************** function _EUSART_Initialize *****************
  6387 ;; Defined at:
  6388 ;;		line 75 in file "mcc_generated_files/eusart.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		wreg, status,2, status,0, cstack
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used: 1
  6408 ;; Hardware stack levels required when called: 3
  6409 ;; This function calls:
  6410 ;;		_EUSART_SetRxInterruptHandler
  6411 ;;		_EUSART_SetTxInterruptHandler
  6412 ;; This function is called by:
  6413 ;;		_SYSTEM_Initialize
  6414 ;; This function uses a non-reentrant model
  6415 ;;
  6416                           
  6417                           	psect	text33
  6418   000E50                     __ptext33:
  6419                           	callstack 0
  6420   000E50                     _EUSART_Initialize:
  6421                           	callstack 26
  6422   000E50                     
  6423                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RC1IE = 0;
  6424   000E50  9A9D               	bcf	157,5,c	;volatile
  6425                           
  6426                           ;mcc_generated_files/eusart.c: 79:     PIE1bits.TX1IE = 0;
  6427   000E52  989D               	bcf	157,4,c	;volatile
  6428   000E54                     
  6429                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6430   000E54  0E00               	movlw	0
  6431   000E56  6E04               	movwf	EUSART_SetTxInterruptHandler@handler^0,c
  6432   000E58  0E00               	movlw	0
  6433   000E5A  6E05               	movwf	(EUSART_SetTxInterruptHandler@handler+1)^0,c
  6434   000E5C  EC43  F008         	call	_EUSART_SetTxInterruptHandler	;wreg free
  6435                           
  6436                           ;mcc_generated_files/eusart.c: 82:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6437   000E60  0E00               	movlw	0
  6438   000E62  6E04               	movwf	EUSART_SetRxInterruptHandler@handler^0,c
  6439   000E64  0E00               	movlw	0
  6440   000E66  6E05               	movwf	(EUSART_SetRxInterruptHandler@handler+1)^0,c
  6441   000E68  EC48  F008         	call	_EUSART_SetRxInterruptHandler	;wreg free
  6442   000E6C                     
  6443                           ;mcc_generated_files/eusart.c: 87:     BAUDCON = 0x08;
  6444   000E6C  0E08               	movlw	8
  6445   000E6E  6EB8               	movwf	184,c	;volatile
  6446   000E70                     
  6447                           ;mcc_generated_files/eusart.c: 90:     RCSTA = 0x90;
  6448   000E70  0E90               	movlw	144
  6449   000E72  6EAB               	movwf	171,c	;volatile
  6450   000E74                     
  6451                           ;mcc_generated_files/eusart.c: 93:     TXSTA = 0x24;
  6452   000E74  0E24               	movlw	36
  6453   000E76  6EAC               	movwf	172,c	;volatile
  6454   000E78                     
  6455                           ;mcc_generated_files/eusart.c: 96:     SPBRG = 0xCF;
  6456   000E78  0ECF               	movlw	207
  6457   000E7A  6EAF               	movwf	175,c	;volatile
  6458   000E7C                     
  6459                           ;mcc_generated_files/eusart.c: 99:     SPBRGH = 0x00;
  6460   000E7C  0E00               	movlw	0
  6461   000E7E  6EB0               	movwf	176,c	;volatile
  6462   000E80                     
  6463                           ;mcc_generated_files/eusart.c: 103:     eusartTxHead = 0;
  6464   000E80  0E00               	movlw	0
  6465   000E82  6E5B               	movwf	_eusartTxHead^0,c	;volatile
  6466   000E84                     
  6467                           ;mcc_generated_files/eusart.c: 104:     eusartTxTail = 0;
  6468   000E84  0E00               	movlw	0
  6469   000E86  6E5A               	movwf	_eusartTxTail^0,c	;volatile
  6470   000E88                     
  6471                           ;mcc_generated_files/eusart.c: 105:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6472   000E88  0E08               	movlw	8
  6473   000E8A  0100               	movlb	0	; () banked
  6474   000E8C  6FD2               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  6475   000E8E                     
  6476                           ; BSR set to: 0
  6477                           ;mcc_generated_files/eusart.c: 107:     eusartRxHead = 0;
  6478   000E8E  0E00               	movlw	0
  6479   000E90  6FD1               	movwf	_eusartRxHead& (0+255),b	;volatile
  6480   000E92                     
  6481                           ; BSR set to: 0
  6482                           ;mcc_generated_files/eusart.c: 108:     eusartRxTail = 0;
  6483   000E92  0E00               	movlw	0
  6484   000E94  6FD0               	movwf	_eusartRxTail& (0+255),b	;volatile
  6485   000E96                     
  6486                           ; BSR set to: 0
  6487                           ;mcc_generated_files/eusart.c: 109:     eusartRxCount = 0;
  6488   000E96  0E00               	movlw	0
  6489   000E98  6FCF               	movwf	_eusartRxCount& (0+255),b	;volatile
  6490   000E9A                     
  6491                           ; BSR set to: 0
  6492                           ;mcc_generated_files/eusart.c: 112:     PIE1bits.RC1IE = 1;
  6493   000E9A  8A9D               	bsf	157,5,c	;volatile
  6494   000E9C                     
  6495                           ; BSR set to: 0
  6496   000E9C  0012               	return		;funcret
  6497   000E9E                     __end_of_EUSART_Initialize:
  6498                           	callstack 0
  6499                           
  6500 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6501 ;; Defined at:
  6502 ;;		line 212 in file "mcc_generated_files/eusart.c"
  6503 ;; Parameters:    Size  Location     Type
  6504 ;;  handler         2    3[COMRAM] PTR void 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;		None
  6507 ;; Return value:  Size  Location     Type
  6508 ;;                  1    wreg      void 
  6509 ;; Registers used:
  6510 ;;		wreg, status,2, status,0
  6511 ;; Tracked objects:
  6512 ;;		On entry : 0/0
  6513 ;;		On exit  : 0/0
  6514 ;;		Unchanged: 0/0
  6515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6516 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6519 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6520 ;;Total ram usage:        2 bytes
  6521 ;; Hardware stack levels used: 1
  6522 ;; Hardware stack levels required when called: 2
  6523 ;; This function calls:
  6524 ;;		Nothing
  6525 ;; This function is called by:
  6526 ;;		_EUSART_Initialize
  6527 ;; This function uses a non-reentrant model
  6528 ;;
  6529                           
  6530                           	psect	text34
  6531   001086                     __ptext34:
  6532                           	callstack 0
  6533   001086                     _EUSART_SetTxInterruptHandler:
  6534                           	callstack 26
  6535   001086                     
  6536                           ;mcc_generated_files/eusart.c: 213:     EUSART_TxDefaultInterruptHandler = handler;
  6537   001086  C004  F0E5         	movff	EUSART_SetTxInterruptHandler@handler,_EUSART_TxDefaultInterruptHandler
  6538   00108A  C005  F0E6         	movff	EUSART_SetTxInterruptHandler@handler+1,_EUSART_TxDefaultInterruptHandler+1
  6539   00108E  0012               	return		;funcret
  6540   001090                     __end_of_EUSART_SetTxInterruptHandler:
  6541                           	callstack 0
  6542                           
  6543 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6544 ;; Defined at:
  6545 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6546 ;; Parameters:    Size  Location     Type
  6547 ;;  handler         2    3[COMRAM] PTR void 
  6548 ;; Auto vars:     Size  Location     Type
  6549 ;;		None
  6550 ;; Return value:  Size  Location     Type
  6551 ;;                  1    wreg      void 
  6552 ;; Registers used:
  6553 ;;		wreg, status,2, status,0
  6554 ;; Tracked objects:
  6555 ;;		On entry : 0/0
  6556 ;;		On exit  : 0/0
  6557 ;;		Unchanged: 0/0
  6558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6559 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6563 ;;Total ram usage:        2 bytes
  6564 ;; Hardware stack levels used: 1
  6565 ;; Hardware stack levels required when called: 2
  6566 ;; This function calls:
  6567 ;;		Nothing
  6568 ;; This function is called by:
  6569 ;;		_EUSART_Initialize
  6570 ;; This function uses a non-reentrant model
  6571 ;;
  6572                           
  6573                           	psect	text35
  6574   001090                     __ptext35:
  6575                           	callstack 0
  6576   001090                     _EUSART_SetRxInterruptHandler:
  6577                           	callstack 26
  6578   001090                     
  6579                           ;mcc_generated_files/eusart.c: 217:     EUSART_RxDefaultInterruptHandler = handler;
  6580   001090  C004  F0E3         	movff	EUSART_SetRxInterruptHandler@handler,_EUSART_RxDefaultInterruptHandler
  6581   001094  C005  F0E4         	movff	EUSART_SetRxInterruptHandler@handler+1,_EUSART_RxDefaultInterruptHandler+1
  6582   001098  0012               	return		;funcret
  6583   00109A                     __end_of_EUSART_SetRxInterruptHandler:
  6584                           	callstack 0
  6585                           
  6586 ;; *************** function _INTERRUPT_InterruptManager *****************
  6587 ;; Defined at:
  6588 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;		None
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6602 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;Total ram usage:        2 bytes
  6607 ;; Hardware stack levels used: 1
  6608 ;; Hardware stack levels required when called: 1
  6609 ;; This function calls:
  6610 ;;		_btGetData
  6611 ;; This function is called by:
  6612 ;;		Interrupt level 2
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	intcode
  6617   000008                     __pintcode:
  6618                           	callstack 0
  6619   000008                     _INTERRUPT_InterruptManager:
  6620                           	callstack 23
  6621                           
  6622                           ;incstack = 0
  6623   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6624   00000A  CFD9 F002          	movff	fsr2l,??_INTERRUPT_InterruptManager
  6625   00000E  CFDA F003          	movff	fsr2h,??_INTERRUPT_InterruptManager+1
  6626   000012                     
  6627                           ;mcc_generated_files/interrupt_manager.c: 75:     if (PIE1bits.TX1IE && PIR1bits.TX1IF)
  6628   000012  A89D               	btfss	157,4,c	;volatile
  6629   000014  EF0E  F000         	goto	i2u214_41
  6630   000018  EF10  F000         	goto	i2u214_40
  6631   00001C                     i2u214_41:
  6632   00001C  EF1A  F000         	goto	i2l356
  6633   000020                     i2u214_40:
  6634   000020                     
  6635                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:         EUSART_TxDefaultInterruptHandler();
  6636   000020  A89E               	btfss	158,4,c	;volatile
  6637   000022  EF15  F000         	goto	i2u215_41
  6638   000026  EF17  F000         	goto	i2u215_40
  6639   00002A                     i2u215_41:
  6640   00002A  EF1A  F000         	goto	i2l356
  6641   00002E                     i2u215_40:
  6642   00002E                     
  6643                           ;mcc_generated_files/interrupt_manager.c: 81:         PIR1bits.TX1IF = 0;
  6644   00002E  989E               	bcf	158,4,c	;volatile
  6645                           
  6646                           ;mcc_generated_files/interrupt_manager.c: 82:     }
  6647   000030  EF2C  F000         	goto	i2l359
  6648   000034                     i2l356:
  6649   000034  AA9D               	btfss	157,5,c	;volatile
  6650   000036  EF1F  F000         	goto	i2u216_41
  6651   00003A  EF21  F000         	goto	i2u216_40
  6652   00003E                     i2u216_41:
  6653   00003E  EF2C  F000         	goto	i2l359
  6654   000042                     i2u216_40:
  6655   000042  AA9E               	btfss	158,5,c	;volatile
  6656   000044  EF26  F000         	goto	i2u217_41
  6657   000048  EF28  F000         	goto	i2u217_40
  6658   00004C                     i2u217_41:
  6659   00004C  EF2C  F000         	goto	i2l359
  6660   000050                     i2u217_40:
  6661   000050                     
  6662                           ;mcc_generated_files/interrupt_manager.c: 86:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 88:         btGetData(RCREG);
  6663   000050  50AE               	movf	174,w,c	;volatile
  6664   000052  EC1D  F006         	call	_btGetData
  6665   000056                     
  6666                           ;mcc_generated_files/interrupt_manager.c: 91:         PIR1bits.RC1IF = 0;
  6667   000056  9A9E               	bcf	158,5,c	;volatile
  6668   000058                     i2l359:
  6669   000058  C003  FFDA         	movff	??_INTERRUPT_InterruptManager+1,fsr2h
  6670   00005C  C002  FFD9         	movff	??_INTERRUPT_InterruptManager,fsr2l
  6671   000060  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6672   000062  0011               	retfie		f
  6673   000064                     __end_of_INTERRUPT_InterruptManager:
  6674                           	callstack 0
  6675                           
  6676 ;; *************** function _btGetData *****************
  6677 ;; Defined at:
  6678 ;;		line 344 in file "main.c"
  6679 ;; Parameters:    Size  Location     Type
  6680 ;;  rcv             1    wreg     unsigned char 
  6681 ;; Auto vars:     Size  Location     Type
  6682 ;;  rcv             1    0[COMRAM] unsigned char 
  6683 ;; Return value:  Size  Location     Type
  6684 ;;                  1    wreg      void 
  6685 ;; Registers used:
  6686 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6687 ;; Tracked objects:
  6688 ;;		On entry : 0/0
  6689 ;;		On exit  : 0/0
  6690 ;;		Unchanged: 0/0
  6691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6692 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6693 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6695 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6696 ;;Total ram usage:        1 bytes
  6697 ;; Hardware stack levels used: 1
  6698 ;; This function calls:
  6699 ;;		Nothing
  6700 ;; This function is called by:
  6701 ;;		_INTERRUPT_InterruptManager
  6702 ;; This function uses a non-reentrant model
  6703 ;;
  6704                           
  6705                           	psect	text37
  6706   000C3A                     __ptext37:
  6707                           	callstack 0
  6708   000C3A                     _btGetData:
  6709                           	callstack 23
  6710                           
  6711                           ;incstack = 0
  6712                           ;btGetData@rcv stored from wreg
  6713   000C3A  6E01               	movwf	btGetData@rcv^0,c
  6714   000C3C                     
  6715                           ;main.c: 345:     if(rcv == 'H' && uartBufferIndex == 0) {
  6716   000C3C  0E48               	movlw	72
  6717   000C3E  1801               	xorwf	btGetData@rcv^0,w,c
  6718   000C40  A4D8               	btfss	status,2,c
  6719   000C42  EF25  F006         	goto	i2u166_41
  6720   000C46  EF27  F006         	goto	i2u166_40
  6721   000C4A                     i2u166_41:
  6722   000C4A  EF38  F006         	goto	i2l2769
  6723   000C4E                     i2u166_40:
  6724   000C4E  5059               	movf	_uartBufferIndex^0,w,c
  6725   000C50  A4D8               	btfss	status,2,c
  6726   000C52  EF2D  F006         	goto	i2u167_41
  6727   000C56  EF2F  F006         	goto	i2u167_40
  6728   000C5A                     i2u167_41:
  6729   000C5A  EF38  F006         	goto	i2l2769
  6730   000C5E                     i2u167_40:
  6731   000C5E                     
  6732                           ;main.c: 346:         uartBuffer[uartBufferIndex] = 'H';
  6733   000C5E  5059               	movf	_uartBufferIndex^0,w,c
  6734   000C60  0FA0               	addlw	low _uartBuffer
  6735   000C62  6ED9               	movwf	fsr2l,c
  6736   000C64  6ADA               	clrf	fsr2h,c
  6737   000C66  0E48               	movlw	72
  6738   000C68  6EDF               	movwf	indf2,c
  6739   000C6A                     i2l2767:
  6740                           
  6741                           ;main.c: 347:         uartBufferIndex++;
  6742   000C6A  2A59               	incf	_uartBufferIndex^0,f,c
  6743                           
  6744                           ;main.c: 348:     }
  6745   000C6C  EF6B  F006         	goto	i2l523
  6746   000C70                     i2l2769:
  6747   000C70  5059               	movf	_uartBufferIndex^0,w,c
  6748   000C72  B4D8               	btfsc	status,2,c
  6749   000C74  EF3E  F006         	goto	i2u168_41
  6750   000C78  EF40  F006         	goto	i2u168_40
  6751   000C7C                     i2u168_41:
  6752   000C7C  EF50  F006         	goto	i2l2777
  6753   000C80                     i2u168_40:
  6754   000C80  0E07               	movlw	7
  6755   000C82  6059               	cpfslt	_uartBufferIndex^0,c
  6756   000C84  EF46  F006         	goto	i2u169_41
  6757   000C88  EF48  F006         	goto	i2u169_40
  6758   000C8C                     i2u169_41:
  6759   000C8C  EF50  F006         	goto	i2l2777
  6760   000C90                     i2u169_40:
  6761   000C90                     
  6762                           ;main.c: 350:         uartBuffer[uartBufferIndex++] = rcv;
  6763   000C90  5059               	movf	_uartBufferIndex^0,w,c
  6764   000C92  0FA0               	addlw	low _uartBuffer
  6765   000C94  6ED9               	movwf	fsr2l,c
  6766   000C96  6ADA               	clrf	fsr2h,c
  6767   000C98  C001  FFDF         	movff	btGetData@rcv,indf2
  6768   000C9C  EF35  F006         	goto	i2l2767
  6769   000CA0                     i2l2777:
  6770   000CA0  0E07               	movlw	7
  6771   000CA2  1859               	xorwf	_uartBufferIndex^0,w,c
  6772   000CA4  A4D8               	btfss	status,2,c
  6773   000CA6  EF57  F006         	goto	i2u170_41
  6774   000CAA  EF59  F006         	goto	i2u170_40
  6775   000CAE                     i2u170_41:
  6776   000CAE  EF6B  F006         	goto	i2l523
  6777   000CB2                     i2u170_40:
  6778   000CB2                     
  6779                           ;main.c: 353:         if(rcv == ';') {
  6780   000CB2  0E3B               	movlw	59
  6781   000CB4  1801               	xorwf	btGetData@rcv^0,w,c
  6782   000CB6  A4D8               	btfss	status,2,c
  6783   000CB8  EF60  F006         	goto	i2u171_41
  6784   000CBC  EF62  F006         	goto	i2u171_40
  6785   000CC0                     i2u171_41:
  6786   000CC0  EF6B  F006         	goto	i2l520
  6787   000CC4                     i2u171_40:
  6788   000CC4                     
  6789                           ;main.c: 354:             uartBuffer[6] = ';';
  6790   000CC4  0E3B               	movlw	59
  6791   000CC6  0100               	movlb	0	; () banked
  6792   000CC8  6FA6               	movwf	(_uartBuffer+6)& (0+255),b
  6793                           
  6794                           ;main.c: 355:             uartBufferIndex = 0;
  6795   000CCA  0E00               	movlw	0
  6796   000CCC  6E59               	movwf	_uartBufferIndex^0,c
  6797                           
  6798                           ;main.c: 356:             btTimeSet = 1;
  6799   000CCE  0E01               	movlw	1
  6800   000CD0  6FC4               	movwf	_btTimeSet& (0+255),b
  6801   000CD2  EF6B  F006         	goto	i2l523
  6802   000CD6                     i2l520:
  6803   000CD6                     i2l523:
  6804   000CD6  0012               	return		;funcret
  6805   000CD8                     __end_of_btGetData:
  6806                           	callstack 0
  6807                           
  6808                           	psect	rparam
  6809   000000                     
  6810                           	psect	temp
  6811   00005C                     btemp:
  6812                           	callstack 0
  6813   00005C                     	ds	1
  6814   000000                     int$flags	set	btemp
  6815   000000                     wtemp8	set	btemp+1
  6816   000000                     ttemp5	set	btemp+1
  6817   000000                     ttemp6	set	btemp+4
  6818   000000                     ttemp7	set	btemp+8
  6819                           
  6820                           	psect	idloc
  6821                           
  6822                           ;Config register IDLOC0 @ 0x200000
  6823                           ;	unspecified, using default values
  6824   200000                     	org	2097152
  6825   200000  FF                 	db	255
  6826                           
  6827                           ;Config register IDLOC1 @ 0x200001
  6828                           ;	unspecified, using default values
  6829   200001                     	org	2097153
  6830   200001  FF                 	db	255
  6831                           
  6832                           ;Config register IDLOC2 @ 0x200002
  6833                           ;	unspecified, using default values
  6834   200002                     	org	2097154
  6835   200002  FF                 	db	255
  6836                           
  6837                           ;Config register IDLOC3 @ 0x200003
  6838                           ;	unspecified, using default values
  6839   200003                     	org	2097155
  6840   200003  FF                 	db	255
  6841                           
  6842                           ;Config register IDLOC4 @ 0x200004
  6843                           ;	unspecified, using default values
  6844   200004                     	org	2097156
  6845   200004  FF                 	db	255
  6846                           
  6847                           ;Config register IDLOC5 @ 0x200005
  6848                           ;	unspecified, using default values
  6849   200005                     	org	2097157
  6850   200005  FF                 	db	255
  6851                           
  6852                           ;Config register IDLOC6 @ 0x200006
  6853                           ;	unspecified, using default values
  6854   200006                     	org	2097158
  6855   200006  FF                 	db	255
  6856                           
  6857                           ;Config register IDLOC7 @ 0x200007
  6858                           ;	unspecified, using default values
  6859   200007                     	org	2097159
  6860   200007  FF                 	db	255
  6861                           
  6862                           	psect	config
  6863                           
  6864                           ; Padding undefined space
  6865   300000                     	org	3145728
  6866   300000  FF                 	db	255
  6867                           
  6868                           ;Config register CONFIG1H @ 0x300001
  6869                           ;	Oscillator Selection bits
  6870                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  6871                           ;	Fail-Safe Clock Monitor Enable bit
  6872                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6873                           ;	Internal/External Oscillator Switchover bit
  6874                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6875   300001                     	org	3145729
  6876   300001  08                 	db	8
  6877                           
  6878                           ;Config register CONFIG2L @ 0x300002
  6879                           ;	Power-up Timer Enable bit
  6880                           ;	PWRTEN = OFF, PWRT disabled
  6881                           ;	Brown-out Reset Enable bits
  6882                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6883                           ;	Brown Out Reset Voltage bits
  6884                           ;	BORV = 18, VBOR set to 1.8 V nominal
  6885   300002                     	org	3145730
  6886   300002  1F                 	db	31
  6887                           
  6888                           ;Config register CONFIG2H @ 0x300003
  6889                           ;	Watchdog Timer Enable bit
  6890                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  6891                           ;	Watchdog Timer Postscale Select bits
  6892                           ;	WDTPS = 32768, 1:32768
  6893   300003                     	org	3145731
  6894   300003  1E                 	db	30
  6895                           
  6896                           ; Padding undefined space
  6897   300004                     	org	3145732
  6898   300004  FF                 	db	255
  6899                           
  6900                           ;Config register CONFIG3H @ 0x300005
  6901                           ;	CCP2 MUX bit
  6902                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6903                           ;	PORTB A/D Enable bit
  6904                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6905                           ;	Low-Power Timer1 Oscillator Enable bit
  6906                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6907                           ;	HFINTOSC Fast Start-up
  6908                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  6909                           ;	MCLR Pin Enable bit
  6910                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  6911   300005                     	org	3145733
  6912   300005  09                 	db	9
  6913                           
  6914                           ;Config register CONFIG4L @ 0x300006
  6915                           ;	Stack Full/Underflow Reset Enable bit
  6916                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6917                           ;	Single-Supply ICSP Enable bit
  6918                           ;	LVP = OFF, Single-Supply ICSP disabled
  6919                           ;	Extended Instruction Set Enable bit
  6920                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6921                           ;	Background Debugger Enable bit
  6922                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6923   300006                     	org	3145734
  6924   300006  81                 	db	129
  6925                           
  6926                           ; Padding undefined space
  6927   300007                     	org	3145735
  6928   300007  FF                 	db	255
  6929                           
  6930                           ;Config register CONFIG5L @ 0x300008
  6931                           ;	Code Protection Block 0
  6932                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6933                           ;	Code Protection Block 1
  6934                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6935                           ;	Code Protection Block 2
  6936                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6937                           ;	Code Protection Block 3
  6938                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6939   300008                     	org	3145736
  6940   300008  0F                 	db	15
  6941                           
  6942                           ;Config register CONFIG5H @ 0x300009
  6943                           ;	Boot Block Code Protection bit
  6944                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6945                           ;	Data EEPROM Code Protection bit
  6946                           ;	CPD = OFF, Data EEPROM not code-protected
  6947   300009                     	org	3145737
  6948   300009  C0                 	db	192
  6949                           
  6950                           ;Config register CONFIG6L @ 0x30000A
  6951                           ;	Write Protection Block 0
  6952                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6953                           ;	Write Protection Block 1
  6954                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6955                           ;	Write Protection Block 2
  6956                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6957                           ;	Write Protection Block 3
  6958                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  6959   30000A                     	org	3145738
  6960   30000A  0F                 	db	15
  6961                           
  6962                           ;Config register CONFIG6H @ 0x30000B
  6963                           ;	Configuration Register Write Protection bit
  6964                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6965                           ;	Boot Block Write Protection bit
  6966                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6967                           ;	Data EEPROM Write Protection bit
  6968                           ;	WRTD = OFF, Data EEPROM not write-protected
  6969   30000B                     	org	3145739
  6970   30000B  E0                 	db	224
  6971                           
  6972                           ;Config register CONFIG7L @ 0x30000C
  6973                           ;	Table Read Protection Block 0
  6974                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6975                           ;	Table Read Protection Block 1
  6976                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6977                           ;	Table Read Protection Block 2
  6978                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6979                           ;	Table Read Protection Block 3
  6980                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6981   30000C                     	org	3145740
  6982   30000C  0F                 	db	15
  6983                           
  6984                           ;Config register CONFIG7H @ 0x30000D
  6985                           ;	Boot Block Table Read Protection bit
  6986                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6987   30000D                     	org	3145741
  6988   30000D  40                 	db	64
  6989                           tosu	equ	0xFFF
  6990                           tosh	equ	0xFFE
  6991                           tosl	equ	0xFFD
  6992                           stkptr	equ	0xFFC
  6993                           pclatu	equ	0xFFB
  6994                           pclath	equ	0xFFA
  6995                           pcl	equ	0xFF9
  6996                           tblptru	equ	0xFF8
  6997                           tblptrh	equ	0xFF7
  6998                           tblptrl	equ	0xFF6
  6999                           tablat	equ	0xFF5
  7000                           prodh	equ	0xFF4
  7001                           prodl	equ	0xFF3
  7002                           indf0	equ	0xFEF
  7003                           postinc0	equ	0xFEE
  7004                           postdec0	equ	0xFED
  7005                           preinc0	equ	0xFEC
  7006                           plusw0	equ	0xFEB
  7007                           fsr0h	equ	0xFEA
  7008                           fsr0l	equ	0xFE9
  7009                           wreg	equ	0xFE8
  7010                           indf1	equ	0xFE7
  7011                           postinc1	equ	0xFE6
  7012                           postdec1	equ	0xFE5
  7013                           preinc1	equ	0xFE4
  7014                           plusw1	equ	0xFE3
  7015                           fsr1h	equ	0xFE2
  7016                           fsr1l	equ	0xFE1
  7017                           bsr	equ	0xFE0
  7018                           indf2	equ	0xFDF
  7019                           postinc2	equ	0xFDE
  7020                           postdec2	equ	0xFDD
  7021                           preinc2	equ	0xFDC
  7022                           plusw2	equ	0xFDB
  7023                           fsr2h	equ	0xFDA
  7024                           fsr2l	equ	0xFD9
  7025                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    2048
    Data        0
    BSS         118
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      91
    BANK0           160     16     135
    BANK1           256     69      69
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(2) Largest target is 64
		 -> saveTimeToFlash@flashBuffer(BANK1[64]), 

    printString@str	PTR unsigned char  size(2) Largest target is 6
		 -> displayAlarmTime@displayString(BANK0[5]), displayTime@displayString(BANK0[5]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _triggerAlarm->_printString
    _clearDisplay->_flushBuffer
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _saveTimeToFlash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _displayTime->_printString
    _displayAlarmTime->_printString
    _printString->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_btGetData

Critical Paths under _main in BANK0

    _main->_checkButtons
    _processAlarm->_triggerAlarm
    _checkButtons->_displayAlarmTime
    _checkButtons->_displayTime

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_saveTimeToFlash
    _checkButtons->_saveTimeToFlash

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   40416
                                             14 BANK0      2     2      0
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                        _TMR0_Reload
                    _TMR0_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
                       _processAlarm
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _processAlarm                                         0     0      0    7457
                       _triggerAlarm
 ---------------------------------------------------------------------------------
 (2) _triggerAlarm                                         6     6      0    7457
                                              0 BANK0      6     6      0
                 _PWM2_LoadDutyValue
                       _clearDisplay
                        _printString
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         2     2      0    3344
                                             67 COMRAM     2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (3) _PWM2_LoadDutyValue                                   4     2      2     196
                                              3 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     537
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     537
                                              4 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0     698
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   18476
                                             12 BANK0      2     2      0
                            ___awmod
                         _clearAlarm
                   _displayAlarmTime
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _saveTimeToFlash                                     69    69      0    2396
                                              0 BANK1     69    69      0
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    15     9      6    1331
                                              8 COMRAM    15     9      6
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     5     1      4     217
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     633
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    7132
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _displayAlarmTime                                    12    12      0    7132
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (3) _printString                                         21    19      2    3846
                                             67 COMRAM    21    19      2
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (4) _flushBuffer                                         43    43      0    3276
                                             24 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (5) _max_write                                           13    10      3    1679
                                             11 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1212
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1816
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _clearAlarm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     196
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           2     2      0      66
                                              1 COMRAM     2     2      0
                          _btGetData
 ---------------------------------------------------------------------------------
 (8) _btGetData                                            1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _SPI_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Reload
   _TMR0_StartTimer
   _checkButtons
     ___awmod
     _clearAlarm
     _displayAlarmTime
       ___awdiv
       ___awmod
       _printString
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
     _displayTime
       ___awdiv
       ___awmod
       _printString
     _saveTimeToFlash
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _clearDisplay
     _flushBuffer
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit
   _processAlarm
     _triggerAlarm
       _PWM2_LoadDutyValue
       _clearDisplay
       _printString
   _saveTimeToFlash

 _INTERRUPT_InterruptManager (ROOT)
   _btGetData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      45       7       27.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      87       5       84.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5B       1       96.8%
BITBIGSFRlllll      1C      0       0      54        0.0%
BITBIGSFRhhlh       19      0       0      39        0.0%
BITBIGSFRlhhhh       A      0       0      43        0.0%
BITBIGSFRlllhh       7      0       0      51        0.0%
BITBIGSFRhhhh        7      0       0      37        0.0%
BITBIGSFRlhhlhh      7      0       0      45        0.0%
BITBIGSFRllhh        6      0       0      49        0.0%
BITBIGSFRllhl        6      0       0      50        0.0%
BITBIGSFRlhhlll      4      0       0      46        0.0%
BITBIGSFRhlhl        3      0       0      42        0.0%
BITBIGSFRhlhh        2      0       0      41        0.0%
BITBIGSFRlhhlll      2      0       0      47        0.0%
BITBIGSFRhhhl        2      0       0      38        0.0%
BITBIGSFRlhhhl       1      0       0      44        0.0%
BITBIGSFRllllh       1      0       0      53        0.0%
BITBIGSFRlllhl       1      0       0      52        0.0%
BITBIGSFRlhl         1      0       0      48        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127      14        0.0%
DATA                 0      0     127       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 11 03:10:24 2024

                __end_of_checkButtons 02FE         ?_EUSART_SetRxInterruptHandler 0004  
                      _SPI_Initialize 1048                          ?_displayTime 0001  
     __end_of_TMR0_HasOverflowOccured 1024                           _SSPSTATbits 0FC7  
                                  l20 100C                                    l21 100E  
                                  l15 1054                                    l18 0FFE  
                                  l72 0FB6                                    l75 1084  
                                  l98 0FD8                          ___awdiv@sign 0009  
                     _timer0ReloadVal 00C0                                   l212 109C  
                                 l300 1034                                   l152 0E9C  
                                 l240 1046                                   l224 107A  
                                 l312 07CA                                   l209 0F94  
                                 l322 0F3C                                   l227 1022  
                                 l316 0798                                   l317 0782  
                                 l318 0786                                   l191 108E  
                                 l351 10A0                                   l504 02FC  
                                 l194 1098                                   l266 1062  
                                 l514 0DAA                                   l443 06D6  
                                 l508 0D2C                                   l453 0AD4  
                                 l509 0D50                                   l269 0F6C  
                                 l470 089C                                   l615 0484  
                                 l463 0DFC                                   l560 05B2  
                                 l474 106E                                   l546 0A1E  
                                 l458 0B88                                   l467 07E2  
                                 l548 0A20                                   l572 0F08  
                                 l495 01EE                                   l567 0E4C  
                                 l569 0E4E                                   l577 0ED4  
                                 l862 0C38                                   l849 0960  
                                 _PR2 0FCB   EUSART_SetRxInterruptHandler@handler 0004  
                        ___awmod@sign 0009                       _TMR2_Initialize 1036  
                                 prod 0FF3                                   wreg 0FE8  
                                l2301 0982                                  l2303 09A4  
                                l2321 09F2                                  l2313 09AE  
                                l2305 09A4                                  l2401 0F3E  
                                l2251 0FF8                                  l2323 09F2  
                                l2315 09C6                                  l2307 09A6  
                                l3131 0F1A                                  l2253 0FFA  
                                l2261 08B8                                  l2325 09F8  
                                l2317 09E2                                  l2501 03F6  
                                l3141 0F26                                  l3133 0F1E  
                                l3125 0F0A                                  l2271 08DE  
                                l2263 08BC                                  l2255 089E  
                                l2327 09FE                                  l2319 09E8  
                                l2503 0402                                  l2511 042C  
                                l3151 1024                                  l3143 0F28  
                                l3135 0F20                                  l3127 0F12  
                                l3223 07CC                                  l2601 0E78  
                                l2521 0B8A                                  l2281 0914  
                                l2273 08F0                                  l2265 08CA  
                                l2257 08A2                                  l2329 0A02  
                                l2513 0430                                  l2505 0408  
                                l3153 1032                                  l3145 0F2C  
                                l3137 0F22                                  l3129 0F16  
                                l3241 0858                                  l3225 07F0  
                                l3233 0820                                  l2611 0E8E  
                                l2603 0E7C                                  l2531 0BB6  
                                l2523 0B8E                                  l2283 092A  
                                l2275 08F8                                  l2291 0940  
                                l2267 08D2                                  l2259 08B0  
                                l2507 040C                                  l3147 0F30  
                                l3139 0F24                                  l3251 0D52  
                                l3243 0864                                  l3235 082C  
                                l3227 080A                                  l2613 0E92  
                                l2605 0E80                                  l2541 0BEE  
                                l2533 0BBE                                  l2525 0B9C  
                                l2293 0950                                  l2285 0932  
                                l2277 0900                                  l2269 08D6  
                                l2381 054A                                  l2373 04BE  
                                l2365 049A                                  l2357 0486  
                                l2509 0410                                  l2517 0442  
                                l2621 0A8A                                  l3149 0F32  
                                l3253 0D6A                                  l2701 0E18  
                                l2461 0E9E                                  l3245 0880  
                                l3237 0838                                  l3229 0818  
                                l2615 0E96                                  l2607 0E84  
                                l2551 0C28                                  l2543 0C04  
                                l2535 0BD0                                  l2527 0BA4  
                                l2295 0958                                  l2287 0934  
                                l2279 090E                                  l2391 0572  
                                l2383 054E                                  l2375 04F6  
                                l2367 04B6                                  l2359 0492  
                                l2519 0480                                  l2631 0AAA  
                                l2623 0A8E                                  l3511 0D34  
                                l3255 0D92                                  l2711 0E30  
                                l2471 0EB4                                  l3239 0854  
                                l3247 0886                                  l3351 0DF2  
                                l3343 0DAC                                  l2617 0E9A  
                                l2609 0E88                                  l2561 0FB8  
                                l2553 0C30                                  l2545 0C0C  
                                l2537 0BD8                                  l2529 0BA8  
                                l2289 093A                                  l2393 0592  
                                l2385 056A                                  l2377 052A  
                                l2633 0AAE                                  l3505 0CEE  
                                l3521 00B0                                  l3513 0068  
                                l3257 0D96                                  l3249 0D52  
                                l2473 0ED0                                  l3353 0DF6  
                                l3345 0DBE                                  l2571 107C  
                                l2563 0FC4                                  l2547 0C12  
                                l2539 0BE0                                  l2299 0962  
                                l2395 0596                                  l2379 052E  
                                l2491 03B2                                  l2483 0322  
                                l2475 02FE                                  l2651 0AD6  
                                l2635 0ACA                                  l2619 0A22  
                                l3451 06FE                                  l3507 0D18  
                                l3531 0106                                  l3523 00CE  
                                l3515 0076                                  l3259 0DA6  
                                l2707 0E20                                  l2467 0EA6  
                                l3347 0DCE                                  l2397 1086  
                                l2565 0FC6                                  l2573 1056  
                                l2557 1048                                  l2581 1044  
                                l2741 0FA2                                  l2549 0C18  
                                l2493 03D0                                  l2477 0312  
                                l2661 0B4A                                  l2653 0B3E  
                                l2629 0A96                                  l3461 072E  
                                l3453 06FE                                  l3509 0D1C  
                                l3541 0166                                  l3533 0120  
                                l3525 00D6                                  l3517 0090  
                                l2709 0E2C                                  l2469 0EB0  
                                l3349 0DE0                                  l3621 05C8  
                                l3613 05B4                                  l2399 1090  
                                l2591 0E50                                  l2559 109E  
                                l2567 0FD4                                  l2575 105E  
                                l2583 0F6E                                  l2743 0FA6  
                                l2735 0F96                                  l2751 109A  
                                l2495 03D6                                  l2663 0B5E  
                                l2655 0B42                                  l3471 0756  
                                l3463 0742                                  l3455 0702  
                                l3447 06DE                                  l3551 01BA  
                                l3543 0184                                  l3535 012E  
                                l3527 00F4                                  l3519 009E  
                                l3631 05E8                                  l3623 05CA  
                                l3615 05BC                                  l2593 0E54  
                                l2569 0FD6                                  l2585 0F76  
                                l2577 1036                                  l2745 0FAA  
                                l2737 0F9A                                  l2753 1070  
                                l2497 03E4                                  l2489 032E  
                                l2665 0B62                                  l3481 077C  
                                l3465 0746                                  l3457 0706  
                                l3449 06F6                                  l3561 0216  
                                l3553 01D2                                  l3537 0140  
                                l3545 0188                                  l3529 00F8  
                                l3641 0612                                  l3633 05F8  
                                l3625 05CC                                  l3617 05C0  
                                l2595 0E6C                                  l2587 0F8E  
                                l2579 103E                                  l2747 0FAE  
                                l2739 0F9E                                  l2755 1076  
                                l2667 0B7E                                  l3491 07AA  
                                l3483 0784                                  l3467 074A  
                                l3563 0236                                  l3555 01E2  
                                l3547 0196                                  l3539 015E  
                                l3643 0614                                  l3635 05FC  
                                l3627 05E0                                  l3651 0632  
                                l3619 05C4                                  l2597 0E70  
                                l2589 0F90                                  l2749 0FB2  
                                l2757 1010                                  l3493 07AC  
                                l3485 0788                                  l3477 075A  
                                l3469 074E                                  l3581 02B6  
                                l3565 023A                                  l3573 0286  
                                l3557 01E6                                  l3549 01A0  
                                l3661 0662                                  l3653 0636  
                                l3645 0624                                  l3637 05FE  
                                l3629 05E4                                  l2599 0E74  
                                l2695 1064                                  l3495 07B6  
                                l3487 07A0                                  l3479 076A  
                                l3591 02EE                                  l3575 0294  
                                l3567 0248                                  l3559 01FC  
                                l3583 02BE                                  l2783 0ED6  
                                l3671 06BE                                  l3663 0674  
                                l3655 063A                                  l3639 060E  
                                l3647 0628                                  l3489 07A8  
                                l3497 07B8                                  l3585 02D6  
                                l3593 02F4                                  l3577 029E  
                                l3569 0262                                  l2697 0E00  
                                l3673 06C2                                  l3665 0686  
                                l3657 063E                                  l3649 062C  
                                l3499 0CD8                                  l3587 02D8  
                                l3579 02A6                                  l2699 0E16  
                                l3675 06C6                                  l3667 069E  
                                l3659 0650                                  l3589 02EA  
                                l3677 06CA                                  l3669 06AE  
                                l3679 06CE                                  STR_1 FFF9  
                        _triggerAlarm 07CC                                  u1200 08F0  
                                u1201 08EC                                  u1210 090E  
                                u1211 090A                                  u1220 092A  
                                u1221 0926                                  u1230 0950  
                                u1310 054A                                  u1231 094C  
                                u1311 0546                                  u1240 09C6  
                                u1320 056A                                  u1304 0512  
                                u1400 035C                                  u3000 0686  
                                u1241 09C2                                  u1321 0566  
                                u1305 050E                                  u3001 0682  
                                u1170 100C                                  u1250 0A1E  
                                u1330 05B2                                  u3010 06AE  
                                u1171 1008                                  u1251 0A1A  
                                u1331 05AE                                  u3011 06AA  
                                u1500 0B9C                                  u1180 08B0  
                                u1420 03B2                                  u3020 06BE  
                                u1501 0B98                                  u1181 08AC  
                                u1421 03AE                                  u3021 06BA  
                                _LATA 0F89                                  u1510 0BB6  
                                u1190 08CA                                  u1414 0398  
                                _LATB 0F8A                                  u1511 0BB2  
                                u1191 08C6                                  u1271 048C  
                                u1415 0394                                  u1407 0352  
                                _LATC 0F8B                                  u1520 0BD0  
                                u1440 03E4                                  u2400 0DA6  
                                u1521 0BCC                                  u1441 03E0  
                                u2401 0DA2                                  u1530 0BEE  
                                u1290 04F6                                  u1450 03F2  
                                u1434 03C6                                  u1531 0BEA  
                                u1291 04F2                                  u1451 03EE  
                                u1435 03C2                                  u3107 0254  
                                u1540 0C04                                  u1284 04DC  
                                u1460 042C                                  u1620 0E4C  
                                u1541 0C00                                  u1285 04D8  
                                u1461 0428                                  u1621 0E48  
                                u3037 07FC                                  u1550 0C28  
                                u1470 043E                                  u1390 0ED0  
                                u1551 0C24                                  u1471 043A  
                                u1391 0ECC                                  u3047 0844  
                                u1480 0470                                  u1560 0ACA  
                                u2360 07F0                                  u1561 0AC6  
                                u3057 0870                                  u2361 07EC  
                                u1650 1020                                  u1490 0480  
                                u2370 0818                                  u1651 101A  
                                u1491 047C                                  u3067 0082  
                                u2371 0814                                  u1580 0B7E  
                                u2380 089C                                  u1581 0B7A  
                                u3077 0112                                  u2381 0898  
                                u2710 072A                                  u2390 0D92  
                                u1487 0466                                  u2295 0F3A  
                                u2711 0726                                  u3087 01AC  
                                u2391 0D8E                                  u1656 1022  
                                u2296 0F3C                                  u2720 077C  
                                u2800 0106                                  u2560 0DBE  
                                u2721 0778                                  u3097 0208  
                                u2801 0102                                  u2561 0DBA  
                                u2730 0798                                  u2810 012E  
                                u2570 0DCE                                  u2731 0794  
                                u2811 012A                                  u2571 0DCA  
                                u2900 02D6                                  u2820 0140  
                                u2580 0DE0                                  u2901 02D2  
                                u2821 013C                                  u2581 0DDC  
                                u2750 07CA                                  u2910 02EA  
                                u2830 0196                                  u2590 0DF2  
                                u2751 07C6                                  u2911 02E6  
                                u2831 0192                                  u2591 0DEE  
                                u2760 0D2C                                  u2840 01D2  
                                u2745 07B4                                  u2761 0D28  
                                u2841 01CE                                  u2746 07B6  
                                u2850 01E2                                  u2770 0076  
                                u2930 05E0                                  u2851 01DE  
                                u2771 0072                                  u2931 05DC  
                                u2860 01FC                                  u2780 009E  
                                u2940 05F8                                  u2861 01F8  
                                u2781 009A                                  u2941 05F4  
                                u2870 0248                                  u2790 00B0  
                                u2950 060E                                  u2871 0244  
                                u2791 00AC                                  u2951 060A  
                                u2880 0294                                  u2960 0624  
                                u2881 0290                                  u2961 0620  
                                u2890 02B6                                  u2970 0650  
                                u2891 02B2                                  u2971 064C  
                                u2980 0662                                  u2981 065E  
                                u2990 0674                                  u2991 0670  
                                _TMR2 0FCC                                  _WPUB 0F7C  
                                _main 05B4                       _TMR0_StartTimer 109A  
                                fsr1h 0FE2                                  fsr2h 0FDA  
                                indf1 0FE7                                  indf2 0FDF  
                                fsr1l 0FE1                                  fsr2l 0FD9  
                                btemp 005C                          printString@i 0053  
                        printString@j 0057                          printString@k 0055  
                   ?_FLASH_WriteBlock 0009                                  prodl 0FF3  
                                start 0064                __end_of_SPI_Initialize 1056  
                        ?_flushBuffer 0001                    ??_FLASH_WriteBlock 000F  
                        ___param_bank 0000           saveTimeToFlash@flashAddress 0140  
                __end_of_clearDisplay 0ED6           checkButtons@button3HoldTime 00BA  
             __end_of_PWM2_Initialize 1064               __end_of_TMR0_Initialize 0F96  
       __end_of_OSCILLATOR_Initialize 1086                                 ?_main 0001  
                     __end_of___awdiv 0962                     ??_saveTimeToFlash 0018  
                               _EEADR 0FA9                       __end_of___awmod 0C3A  
                               _ANSEL 0F7E                                 _T0CON 0FD5  
                     ___awdiv@divisor 0006                                 _T2CON 0FCA  
                               i2l520 0CD6                                 i2l523 0CD6  
                               i2l356 0034                                 i2l359 0058  
                     ___awdiv@counter 0008                                 _RCREG 0FAE  
                               _RCSTA 0FAB                                 _TMR0H 0FD7  
                               _TMR0L 0FD6                                 _SPBRG 0FAF  
                               _TRISA 0F92                                 _TRISB 0F93  
                               _TRISC 0F94                                 _TXREG 0FAD  
                               _TXSTA 0FAC                                 _hours 00CE  
                        displayTime@i 00DD                      _button3PressTime 00BC  
                     max7219_cmd@Addr 0008                                 tablat 0FF5  
                     max7219_cmd@data 0005                                 ttemp5 005D  
                               ttemp6 0060                                 ttemp7 0064  
                               status 0FD8                                 wtemp8 005D  
                     ?_SPI_Initialize 0001                        _alarmTriggered 00C7  
                     __initialization 0FDA                          __end_of_main 06DE  
             FLASH_ReadByte@flashAddr 0004               __end_of_TMR2_Initialize 1048  
         ?_INTERRUPT_InterruptManager 0001        ??_EUSART_SetRxInterruptHandler 0006  
                              ??_main 0059                         __activetblptr 0003  
            __end_of_SPI_Exchange8bit 1010               __end_of_TMR0_StartTimer 109E  
           FLASH_WriteBlock@writeAddr 0009                                _EEADRH 0FAA  
                              _EEDATA 0FA8                                _CCPR2L 0FBB  
                              _EECON2 0FA7                      ___awdiv@dividend 0004  
                              _ANSELH 0F7F                                i2l3041 002E  
                              i2l3043 0042                                i2l3045 0050  
                              i2l3037 0012                                i2l3047 0056  
                              i2l3039 0020                                i2l2761 0C3C  
                              i2l2771 0C80                                i2l2763 0C4E  
                              i2l2781 0CC4                                i2l2773 0C90  
                              i2l2765 0C5E                                i2l2767 0C6A  
                              i2l2777 0CA0                                i2l2769 0C70  
                              i2l2779 0CB2                                _TABLAT 0FF5  
                              _OSCCON 0FD3                                _SPBRGH 0FB0  
                              _SSPADD 0FC8                                _SSPBUF 0FC9  
               triggerAlarm@numCycles 00D5                          ?_TMR0_Reload 0001  
                       main@hours_pom 00E1                             ??___awdiv 0008  
                           ??___awmod 0008                   _EUSART_Transmit_ISR 0000  
                    ?_TMR0_Initialize 0001                      ?_PWM2_Initialize 0001  
                              clear_0 0FE0                      ___awdiv@quotient 000A  
                     ___awmod@divisor 0006                                isa$std 0001  
                     ___awmod@counter 0008                      flushBuffer@F2573 0060  
               displayTime@timeString 00D8                        printString@str 0044  
                   displayAlarmTime@i 00DD           FLASH_WriteBlock@dataCounter 0016  
                   ?_displayAlarmTime 0001                          __mediumconst F7F8  
                              tblptrh 0FF7                                tblptrl 0FF6  
                              tblptru 0FF8                          _checkButtons 0068  
                  ??_displayAlarmTime 0059                          ?_printString 0044  
                   _SYSTEM_Initialize 0F96                            __accesstop 0060  
             __end_of__initialization 0FEC                    ?_SYSTEM_Initialize 0001  
          __end_of_PWM2_LoadDutyValue 0F6E                         ___rparam_used 0001  
__end_of_EUSART_SetTxInterruptHandler 1090          _EUSART_SetTxInterruptHandler 1086  
                      __pcstackCOMRAM 0001                   ??_SYSTEM_Initialize 0006  
                        _alarmMinutes 00CA                      ?_TMR2_Initialize 0001  
     __end_of_MAX7219_Dot_Matrix_font FFF9           FLASH_WriteBlock@GIEBitValue 0013  
                        _clearDisplay 0E9E                      ?_TMR0_StartTimer 0001  
           __end_of_SYSTEM_Initialize 0FB8                        flushBuffer@dev 003C  
                      flushBuffer@row 0040                            __pbssBANK0 0060  
                          _alarmHours 00CB                            _clearAlarm 1064  
       displayAlarmTime@displayString 00D3                          flushBuffer@i 0042  
                        flushBuffer@j 003E                       _saveTimeToFlash 0CD8  
       ?_EUSART_SetTxInterruptHandler 0004      _EUSART_TxDefaultInterruptHandler 00E5  
                          _blinkTimer 00BE                               _CCP2CON 0FBA  
                             _BAUDCON 0FB8                        _FLASH_ReadByte 1024  
                       _eusartRxCount 00CF                     __end_of_btGetData 0CD8  
                             _TBLPTRH 0FF7                               _TBLPTRL 0FF6  
                             _TBLPTRU 0FF8                               _OSCTUNE 0F9B  
                             _SSPCON1 0FC6                               _SSPSTAT 0FC7  
             _TMR0_HasOverflowOccured 1010                      _FLASH_EraseBlock 0F0A  
                    ??_SPI_Initialize 0004   EUSART_SetTxInterruptHandler@handler 0004  
                             __Hparam 0000                               __Lparam 0000  
                             ___awdiv 089E                               ___awmod 0B8A  
                    _isButton3Pressed 00C5                __end_of_FLASH_ReadByte 1036  
                             __pcinit 0FDA                               __ramtop 1000  
                          _matrixInit 0ED6                               __ptext0 05B4  
                             __ptext1 0DAC                               __ptext2 07CC  
                             __ptext3 0E9E                               __ptext4 0F3E  
                             __ptext5 0ED6                               __ptext6 0DFE  
                             __ptext7 0D52                               __ptext8 0068  
                             __ptext9 0CD8                             _T0CONbits 0FD5  
                       ??_max7219_cmd 0006                 _OSCILLATOR_Initialize 107C  
                           _T2CONbits 0FCA                      ___awmod@dividend 0004  
                   __end_of_max_write 0A22                               _minutes 00CD  
            ??_PIN_MANAGER_Initialize 0004                               _seconds 00CC  
                   ?_SPI_Exchange8bit 0001                  end_of_initialization 0FEC  
                     printString@data 0050                         triggerAlarm@i 00D7  
                  ??_SPI_Exchange8bit 0004                       printString@indx 004E  
                SPI_Exchange8bit@data 0004               __end_of_saveTimeToFlash 0D52  
                         ?_clearAlarm 0001                     _EUSART_Initialize 0E50  
                        max_write@dev 0015                            _uartBuffer 00A0  
                        btGetData@rcv 0001                    ?_EUSART_Initialize 0001  
                        max_write@row 000C                             _RCSTAbits 0FAB  
                             postinc0 0FEE                               postinc2 0FDE  
                     ?_FLASH_ReadByte 0004                   ??_EUSART_Initialize 0006  
                    saveTimeToFlash@i 0144        ??_EUSART_SetTxInterruptHandler 0006  
                   _loadTimeFromFlash 0D52                         ?_processAlarm 0001  
                           _PORTBbits 0F81                         clearDisplay@i 0044  
                  ?_loadTimeFromFlash 0001             ??_TMR0_HasOverflowOccured 0004  
       FLASH_WriteBlock@flashWrBufPtr 000D                   ??_loadTimeFromFlash 0008  
                 __end_of_max7219_cmd 0E50              FLASH_EraseBlock@baseAddr 0004  
           __end_of_EUSART_Initialize 0E9E                             _TXSTAbits 0FAC  
                   FLASH_WriteBlock@i 0017                     FLASH_WriteBlock@j 0014  
          saveTimeToFlash@flashBuffer 0100          __end_of_INTERRUPT_Initialize 10A2  
                       ??_displayTime 0059             __end_of_loadTimeFromFlash 0DAC  
                      ??_processAlarm 0059                    _PWM2_LoadDutyValue 0F3E  
                         ?_matrixInit 0001          checkButtons@alarmSettingMode 00C2  
                    _FLASH_WriteBlock 06DE                ?_OSCILLATOR_Initialize 0001  
                 start_initialization 0FDA                   ?_PWM2_LoadDutyValue 0004  
                       ?_triggerAlarm 0001                      ?_saveTimeToFlash 0001  
                  printString@strindx 0051                         ??_flushBuffer 0019  
                ??_PWM2_LoadDutyValue 0006           PWM2_LoadDutyValue@dutyValue 0004  
     displayAlarmTime@alarmTimeString 00D8           FLASH_EraseBlock@GIEBitValue 0008  
            __end_of_FLASH_EraseBlock 0F3E                   __end_of_displayTime 0AD6  
                         _max7219_cmd 0DFE                           __pbssCOMRAM 0059  
                         _alarmActive 00C8                         __pcstackBANK0 00D3  
                       __pcstackBANK1 0100                        ??_triggerAlarm 00D3  
                        max7219_cmd@i 000B                             _btGetData 0C3A  
    _EUSART_RxDefaultInterruptHandler 00E3               _MAX7219_Dot_Matrix_font F7F9  
                           __pnvBANK0 00E3                             _btTimeSet 00C4  
              _PIN_MANAGER_Initialize 0FB8                             __pintcode 0008  
                       __pmediumconst F7F8                              ?___awdiv 0004  
                            ?___awmod 0004                          _eusartRxHead 00D1  
                        _eusartTxHead 005B                          _eusartRxTail 00D0  
                 __end_of_flushBuffer 05B4                          _eusartTxTail 005A  
                           _bufferCol 0080          ??_INTERRUPT_InterruptManager 0002  
             _eusartTxBufferRemaining 00D2                             _max_write 0962  
                _INTERRUPT_Initialize 109E                            ?_btGetData 0001  
      FLASH_WriteBlock@blockStartAddr 000F                        _eusartRxBuffer 00AA  
                   ??_TMR0_Initialize 0004                     ??_PWM2_Initialize 0004  
                      _eusartTxBuffer 00B2                  __end_of_processAlarm 0DFE  
                            _LATCbits 0F8B                          ??_clearAlarm 0004  
                            _PIE1bits 0F9D                      _displayAlarmTime 0AD6  
                            i2u214_40 0020                              i2u214_41 001C  
                            i2u215_40 002E                              i2u215_41 002A  
                            i2u216_40 0042                              i2u216_41 003E  
                            i2u217_40 0050                              i2u217_41 004C  
                     max_write@offset 0011                              i2u170_40 0CB2  
                            i2u170_41 0CAE                              i2u171_40 0CC4  
                            i2u171_41 0CC0                              i2u166_40 0C4E  
                            i2u166_41 0C4A                              i2u167_40 0C5E  
                            i2u167_41 0C5A                              i2u168_40 0C80  
                            i2u168_41 0C7C                              i2u169_40 0C90  
                            i2u169_41 0C8C                              _PIR1bits 0F9E  
                    ??_FLASH_ReadByte 0008                              _PIR2bits 0FA1  
                       ??_TMR0_Reload 0004                              _RCONbits 0FD0  
                         _displayTime 0A22                    __end_of_clearAlarm 1070  
                       ?_checkButtons 0001                           _INTCON2bits 0FF1  
                          ?_max_write 000C                 ?_INTERRUPT_Initialize 0001  
                       ??_printString 0046                     ??_TMR2_Initialize 0004  
            __end_of_FLASH_WriteBlock 07CC                            _EECON1bits 0FA6  
                            __Hrparam 0000                           _flushBuffer 0486  
                            __Lrparam 0000                    max_write@devTarget 0013  
             ??_OSCILLATOR_Initialize 0004                  __end_of_triggerAlarm 089E  
                   ??_TMR0_StartTimer 0004                          ??_matrixInit 000D  
                 __end_of_TMR0_Reload 107C                       main@minutes_pom 00E2  
                            _alarmSet 00C9                        ??_checkButtons 00DF  
                       ?_clearDisplay 0001                              __ptext10 06DE  
                            __ptext11 0F0A                              __ptext20 0B8A  
                            __ptext12 1024                              __ptext21 1064  
                            __ptext13 0A22                              __ptext30 0FB8  
                            __ptext22 109A                              __ptext14 0AD6  
                            __ptext31 107C                              __ptext23 1070  
                            __ptext15 02FE                              __ptext32 109E  
                            __ptext24 1010                              __ptext16 0486  
                            __ptext33 0E50                              __ptext25 0F96  
                            __ptext17 0962                              __ptext34 1086  
                            __ptext26 1036                              __ptext18 089E  
                            __ptext35 1090                              __ptext27 0F6E  
                            __ptext19 0FF6                              __ptext28 1048  
                            __ptext37 0C3A                              __ptext29 1056  
                         ??_btGetData 0001                    __end_of_matrixInit 0F0A  
                 __end_of_printString 0486                  flushBuffer@bufferRow 001C  
                     _displayBlinking 00C6                              isa$xinst 0000  
                max7219_cmd@writeData 0009                              int$flags 005C  
  __end_of_INTERRUPT_InterruptManager 0064            _INTERRUPT_InterruptManager 0008  
                   ?_FLASH_EraseBlock 0004   FLASH_WriteBlock@numberOfWriteBlocks 0015  
            ?_TMR0_HasOverflowOccured 0001                          ?_max7219_cmd 0005  
                  ??_FLASH_EraseBlock 0008                            _INTCONbits 0FF2  
                     _uartBufferIndex 0059                        ??_clearDisplay 0044  
              ??_INTERRUPT_Initialize 0004                    max_write@writeData 0017  
                         ??_max_write 000F                              intlevel2 0000  
             ?_PIN_MANAGER_Initialize 0001  __end_of_EUSART_SetRxInterruptHandler 109A  
        _EUSART_SetRxInterruptHandler 1090                         max_write@data 000E  
                    _SPI_Exchange8bit 0FF6                           _TMR0_Reload 1070  
                  _EUSART_Receive_ISR 0000              displayTime@displayString 00D3  
                        _processAlarm 0DAC              __end_of_displayAlarmTime 0B8A  
                     _TMR0_Initialize 0F6E                       _PWM2_Initialize 1056  
       checkButtons@button3PressCount 00C3                           _SSPCON1bits 0FC6  
      __end_of_PIN_MANAGER_Initialize 0FDA                           _printString 02FE  
