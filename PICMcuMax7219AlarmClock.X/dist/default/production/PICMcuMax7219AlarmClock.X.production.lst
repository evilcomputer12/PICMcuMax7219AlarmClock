

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Wed Sep 11 02:27:51 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    51                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    52                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    53                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    54                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    55   000000                     
    56                           ; Generated 05/01/2024 GMT
    57                           ; 
    58                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution. Publication is not required when
    72                           ;        this file is used in an embedded application.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC18F26K20 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90   000000                     
    91 ;; Function _EUSART_Transmit_ISR is unused but had its address taken
    92   000000                     
    93 ;; Function _EUSART_Receive_ISR is unused but had its address taken
    94   000000                     
    95                           	psect	mediumconst
    96   00F7F8                     __pmediumconst:
    97                           	callstack 0
    98   00F7F8  00                 	db	0
    99   00F7F9                     _MAX7219_Dot_Matrix_font:
   100                           	callstack 0
   101   00F7F9  00                 	db	0
   102   00F7FA  00                 	db	0
   103   00F7FB  00                 	db	0
   104   00F7FC  00                 	db	0
   105   00F7FD  00                 	db	0
   106   00F7FE  00                 	db	0
   107   00F7FF  00                 	db	0
   108   00F800  00                 	db	0
   109   00F801  7E                 	db	126
   110   00F802  81                 	db	129
   111   00F803  95                 	db	149
   112   00F804  B1                 	db	177
   113   00F805  B1                 	db	177
   114   00F806  95                 	db	149
   115   00F807  81                 	db	129
   116   00F808  7E                 	db	126
   117   00F809  7E                 	db	126
   118   00F80A  FF                 	db	255
   119   00F80B  EB                 	db	235
   120   00F80C  CF                 	db	207
   121   00F80D  CF                 	db	207
   122   00F80E  EB                 	db	235
   123   00F80F  FF                 	db	255
   124   00F810  7E                 	db	126
   125   00F811  0E                 	db	14
   126   00F812  1F                 	db	31
   127   00F813  3F                 	db	63
   128   00F814  7E                 	db	126
   129   00F815  3F                 	db	63
   130   00F816  1F                 	db	31
   131   00F817  0E                 	db	14
   132   00F818  00                 	db	0
   133   00F819  08                 	db	8
   134   00F81A  1C                 	db	28
   135   00F81B  3E                 	db	62
   136   00F81C  7F                 	db	127
   137   00F81D  3E                 	db	62
   138   00F81E  1C                 	db	28
   139   00F81F  08                 	db	8
   140   00F820  00                 	db	0
   141   00F821  18                 	db	24
   142   00F822  BA                 	db	186
   143   00F823  FF                 	db	255
   144   00F824  FF                 	db	255
   145   00F825  FF                 	db	255
   146   00F826  BA                 	db	186
   147   00F827  18                 	db	24
   148   00F828  00                 	db	0
   149   00F829  10                 	db	16
   150   00F82A  B8                 	db	184
   151   00F82B  FC                 	db	252
   152   00F82C  FF                 	db	255
   153   00F82D  FC                 	db	252
   154   00F82E  B8                 	db	184
   155   00F82F  10                 	db	16
   156   00F830  00                 	db	0
   157   00F831  00                 	db	0
   158   00F832  00                 	db	0
   159   00F833  18                 	db	24
   160   00F834  3C                 	db	60
   161   00F835  3C                 	db	60
   162   00F836  18                 	db	24
   163   00F837  00                 	db	0
   164   00F838  00                 	db	0
   165   00F839  FF                 	db	255
   166   00F83A  FF                 	db	255
   167   00F83B  E7                 	db	231
   168   00F83C  C3                 	db	195
   169   00F83D  C3                 	db	195
   170   00F83E  E7                 	db	231
   171   00F83F  FF                 	db	255
   172   00F840  FF                 	db	255
   173   00F841  00                 	db	0
   174   00F842  3C                 	db	60
   175   00F843  66                 	db	102
   176   00F844  42                 	db	66
   177   00F845  42                 	db	66
   178   00F846  66                 	db	102
   179   00F847  3C                 	db	60
   180   00F848  00                 	db	0
   181   00F849  FF                 	db	255
   182   00F84A  C3                 	db	195
   183   00F84B  99                 	db	153
   184   00F84C  BD                 	db	189
   185   00F84D  BD                 	db	189
   186   00F84E  99                 	db	153
   187   00F84F  C3                 	db	195
   188   00F850  FF                 	db	255
   189   00F851  70                 	db	112
   190   00F852  F8                 	db	248
   191   00F853  88                 	db	136
   192   00F854  88                 	db	136
   193   00F855  FD                 	db	253
   194   00F856  7F                 	db	127
   195   00F857  07                 	db	7
   196   00F858  0F                 	db	15
   197   00F859  00                 	db	0
   198   00F85A  4E                 	db	78
   199   00F85B  5F                 	db	95
   200   00F85C  F1                 	db	241
   201   00F85D  F1                 	db	241
   202   00F85E  5F                 	db	95
   203   00F85F  4E                 	db	78
   204   00F860  00                 	db	0
   205   00F861  C0                 	db	192
   206   00F862  E0                 	db	224
   207   00F863  FF                 	db	255
   208   00F864  7F                 	db	127
   209   00F865  05                 	db	5
   210   00F866  05                 	db	5
   211   00F867  07                 	db	7
   212   00F868  07                 	db	7
   213   00F869  C0                 	db	192
   214   00F86A  FF                 	db	255
   215   00F86B  7F                 	db	127
   216   00F86C  05                 	db	5
   217   00F86D  05                 	db	5
   218   00F86E  65                 	db	101
   219   00F86F  7F                 	db	127
   220   00F870  3F                 	db	63
   221   00F871  99                 	db	153
   222   00F872  5A                 	db	90
   223   00F873  3C                 	db	60
   224   00F874  E7                 	db	231
   225   00F875  E7                 	db	231
   226   00F876  3C                 	db	60
   227   00F877  5A                 	db	90
   228   00F878  99                 	db	153
   229   00F879  7F                 	db	127
   230   00F87A  3E                 	db	62
   231   00F87B  3E                 	db	62
   232   00F87C  1C                 	db	28
   233   00F87D  1C                 	db	28
   234   00F87E  08                 	db	8
   235   00F87F  08                 	db	8
   236   00F880  00                 	db	0
   237   00F881  08                 	db	8
   238   00F882  08                 	db	8
   239   00F883  1C                 	db	28
   240   00F884  1C                 	db	28
   241   00F885  3E                 	db	62
   242   00F886  3E                 	db	62
   243   00F887  7F                 	db	127
   244   00F888  00                 	db	0
   245   00F889  00                 	db	0
   246   00F88A  24                 	db	36
   247   00F88B  66                 	db	102
   248   00F88C  FF                 	db	255
   249   00F88D  FF                 	db	255
   250   00F88E  66                 	db	102
   251   00F88F  24                 	db	36
   252   00F890  00                 	db	0
   253   00F891  00                 	db	0
   254   00F892  5F                 	db	95
   255   00F893  5F                 	db	95
   256   00F894  00                 	db	0
   257   00F895  00                 	db	0
   258   00F896  5F                 	db	95
   259   00F897  5F                 	db	95
   260   00F898  00                 	db	0
   261   00F899  06                 	db	6
   262   00F89A  0F                 	db	15
   263   00F89B  09                 	db	9
   264   00F89C  7F                 	db	127
   265   00F89D  7F                 	db	127
   266   00F89E  01                 	db	1
   267   00F89F  7F                 	db	127
   268   00F8A0  7F                 	db	127
   269   00F8A1  40                 	db	64
   270   00F8A2  DA                 	db	218
   271   00F8A3  BF                 	db	191
   272   00F8A4  A5                 	db	165
   273   00F8A5  FD                 	db	253
   274   00F8A6  59                 	db	89
   275   00F8A7  03                 	db	3
   276   00F8A8  02                 	db	2
   277   00F8A9  00                 	db	0
   278   00F8AA  70                 	db	112
   279   00F8AB  70                 	db	112
   280   00F8AC  70                 	db	112
   281   00F8AD  70                 	db	112
   282   00F8AE  70                 	db	112
   283   00F8AF  70                 	db	112
   284   00F8B0  00                 	db	0
   285   00F8B1  80                 	db	128
   286   00F8B2  94                 	db	148
   287   00F8B3  B6                 	db	182
   288   00F8B4  FF                 	db	255
   289   00F8B5  FF                 	db	255
   290   00F8B6  B6                 	db	182
   291   00F8B7  94                 	db	148
   292   00F8B8  80                 	db	128
   293   00F8B9  00                 	db	0
   294   00F8BA  04                 	db	4
   295   00F8BB  06                 	db	6
   296   00F8BC  7F                 	db	127
   297   00F8BD  7F                 	db	127
   298   00F8BE  06                 	db	6
   299   00F8BF  04                 	db	4
   300   00F8C0  00                 	db	0
   301   00F8C1  00                 	db	0
   302   00F8C2  10                 	db	16
   303   00F8C3  30                 	db	48
   304   00F8C4  7F                 	db	127
   305   00F8C5  7F                 	db	127
   306   00F8C6  30                 	db	48
   307   00F8C7  10                 	db	16
   308   00F8C8  00                 	db	0
   309   00F8C9  08                 	db	8
   310   00F8CA  08                 	db	8
   311   00F8CB  08                 	db	8
   312   00F8CC  2A                 	db	42
   313   00F8CD  3E                 	db	62
   314   00F8CE  1C                 	db	28
   315   00F8CF  08                 	db	8
   316   00F8D0  00                 	db	0
   317   00F8D1  08                 	db	8
   318   00F8D2  1C                 	db	28
   319   00F8D3  3E                 	db	62
   320   00F8D4  2A                 	db	42
   321   00F8D5  08                 	db	8
   322   00F8D6  08                 	db	8
   323   00F8D7  08                 	db	8
   324   00F8D8  00                 	db	0
   325   00F8D9  3C                 	db	60
   326   00F8DA  3C                 	db	60
   327   00F8DB  20                 	db	32
   328   00F8DC  20                 	db	32
   329   00F8DD  20                 	db	32
   330   00F8DE  20                 	db	32
   331   00F8DF  20                 	db	32
   332   00F8E0  00                 	db	0
   333   00F8E1  08                 	db	8
   334   00F8E2  1C                 	db	28
   335   00F8E3  3E                 	db	62
   336   00F8E4  08                 	db	8
   337   00F8E5  08                 	db	8
   338   00F8E6  3E                 	db	62
   339   00F8E7  1C                 	db	28
   340   00F8E8  08                 	db	8
   341   00F8E9  30                 	db	48
   342   00F8EA  38                 	db	56
   343   00F8EB  3C                 	db	60
   344   00F8EC  3E                 	db	62
   345   00F8ED  3E                 	db	62
   346   00F8EE  3C                 	db	60
   347   00F8EF  38                 	db	56
   348   00F8F0  30                 	db	48
   349   00F8F1  06                 	db	6
   350   00F8F2  0E                 	db	14
   351   00F8F3  1E                 	db	30
   352   00F8F4  3E                 	db	62
   353   00F8F5  3E                 	db	62
   354   00F8F6  1E                 	db	30
   355   00F8F7  0E                 	db	14
   356   00F8F8  06                 	db	6
   357   00F8F9  00                 	db	0
   358   00F8FA  00                 	db	0
   359   00F8FB  00                 	db	0
   360   00F8FC  00                 	db	0
   361   00F8FD  00                 	db	0
   362   00F8FE  00                 	db	0
   363   00F8FF  00                 	db	0
   364   00F900  00                 	db	0
   365   00F901  00                 	db	0
   366   00F902  06                 	db	6
   367   00F903  5F                 	db	95
   368   00F904  5F                 	db	95
   369   00F905  06                 	db	6
   370   00F906  00                 	db	0
   371   00F907  00                 	db	0
   372   00F908  00                 	db	0
   373   00F909  00                 	db	0
   374   00F90A  07                 	db	7
   375   00F90B  07                 	db	7
   376   00F90C  00                 	db	0
   377   00F90D  07                 	db	7
   378   00F90E  07                 	db	7
   379   00F90F  00                 	db	0
   380   00F910  00                 	db	0
   381   00F911  14                 	db	20
   382   00F912  7F                 	db	127
   383   00F913  7F                 	db	127
   384   00F914  14                 	db	20
   385   00F915  7F                 	db	127
   386   00F916  7F                 	db	127
   387   00F917  14                 	db	20
   388   00F918  00                 	db	0
   389   00F919  24                 	db	36
   390   00F91A  2E                 	db	46
   391   00F91B  6B                 	db	107
   392   00F91C  6B                 	db	107
   393   00F91D  3A                 	db	58
   394   00F91E  12                 	db	18
   395   00F91F  00                 	db	0
   396   00F920  00                 	db	0
   397   00F921  46                 	db	70
   398   00F922  66                 	db	102
   399   00F923  30                 	db	48
   400   00F924  18                 	db	24
   401   00F925  0C                 	db	12
   402   00F926  66                 	db	102
   403   00F927  62                 	db	98
   404   00F928  00                 	db	0
   405   00F929  30                 	db	48
   406   00F92A  7A                 	db	122
   407   00F92B  4F                 	db	79
   408   00F92C  5D                 	db	93
   409   00F92D  37                 	db	55
   410   00F92E  7A                 	db	122
   411   00F92F  48                 	db	72
   412   00F930  00                 	db	0
   413   00F931  04                 	db	4
   414   00F932  07                 	db	7
   415   00F933  03                 	db	3
   416   00F934  00                 	db	0
   417   00F935  00                 	db	0
   418   00F936  00                 	db	0
   419   00F937  00                 	db	0
   420   00F938  00                 	db	0
   421   00F939  00                 	db	0
   422   00F93A  1C                 	db	28
   423   00F93B  3E                 	db	62
   424   00F93C  63                 	db	99
   425   00F93D  41                 	db	65
   426   00F93E  00                 	db	0
   427   00F93F  00                 	db	0
   428   00F940  00                 	db	0
   429   00F941  00                 	db	0
   430   00F942  41                 	db	65
   431   00F943  63                 	db	99
   432   00F944  3E                 	db	62
   433   00F945  1C                 	db	28
   434   00F946  00                 	db	0
   435   00F947  00                 	db	0
   436   00F948  00                 	db	0
   437   00F949  08                 	db	8
   438   00F94A  2A                 	db	42
   439   00F94B  3E                 	db	62
   440   00F94C  1C                 	db	28
   441   00F94D  1C                 	db	28
   442   00F94E  3E                 	db	62
   443   00F94F  2A                 	db	42
   444   00F950  08                 	db	8
   445   00F951  08                 	db	8
   446   00F952  08                 	db	8
   447   00F953  3E                 	db	62
   448   00F954  3E                 	db	62
   449   00F955  08                 	db	8
   450   00F956  08                 	db	8
   451   00F957  00                 	db	0
   452   00F958  00                 	db	0
   453   00F959  00                 	db	0
   454   00F95A  80                 	db	128
   455   00F95B  E0                 	db	224
   456   00F95C  60                 	db	96
   457   00F95D  00                 	db	0
   458   00F95E  00                 	db	0
   459   00F95F  00                 	db	0
   460   00F960  00                 	db	0
   461   00F961  08                 	db	8
   462   00F962  08                 	db	8
   463   00F963  08                 	db	8
   464   00F964  08                 	db	8
   465   00F965  08                 	db	8
   466   00F966  08                 	db	8
   467   00F967  00                 	db	0
   468   00F968  00                 	db	0
   469   00F969  00                 	db	0
   470   00F96A  00                 	db	0
   471   00F96B  60                 	db	96
   472   00F96C  60                 	db	96
   473   00F96D  00                 	db	0
   474   00F96E  00                 	db	0
   475   00F96F  00                 	db	0
   476   00F970  00                 	db	0
   477   00F971  60                 	db	96
   478   00F972  30                 	db	48
   479   00F973  18                 	db	24
   480   00F974  0C                 	db	12
   481   00F975  06                 	db	6
   482   00F976  03                 	db	3
   483   00F977  01                 	db	1
   484   00F978  00                 	db	0
   485   00F979  3E                 	db	62
   486   00F97A  7F                 	db	127
   487   00F97B  71                 	db	113
   488   00F97C  59                 	db	89
   489   00F97D  4D                 	db	77
   490   00F97E  7F                 	db	127
   491   00F97F  3E                 	db	62
   492   00F980  00                 	db	0
   493   00F981  40                 	db	64
   494   00F982  42                 	db	66
   495   00F983  7F                 	db	127
   496   00F984  7F                 	db	127
   497   00F985  40                 	db	64
   498   00F986  40                 	db	64
   499   00F987  00                 	db	0
   500   00F988  00                 	db	0
   501   00F989  62                 	db	98
   502   00F98A  73                 	db	115
   503   00F98B  59                 	db	89
   504   00F98C  49                 	db	73
   505   00F98D  6F                 	db	111
   506   00F98E  66                 	db	102
   507   00F98F  00                 	db	0
   508   00F990  00                 	db	0
   509   00F991  22                 	db	34
   510   00F992  63                 	db	99
   511   00F993  49                 	db	73
   512   00F994  49                 	db	73
   513   00F995  7F                 	db	127
   514   00F996  36                 	db	54
   515   00F997  00                 	db	0
   516   00F998  00                 	db	0
   517   00F999  18                 	db	24
   518   00F99A  1C                 	db	28
   519   00F99B  16                 	db	22
   520   00F99C  53                 	db	83
   521   00F99D  7F                 	db	127
   522   00F99E  7F                 	db	127
   523   00F99F  50                 	db	80
   524   00F9A0  00                 	db	0
   525   00F9A1  27                 	db	39
   526   00F9A2  67                 	db	103
   527   00F9A3  45                 	db	69
   528   00F9A4  45                 	db	69
   529   00F9A5  7D                 	db	125
   530   00F9A6  39                 	db	57
   531   00F9A7  00                 	db	0
   532   00F9A8  00                 	db	0
   533   00F9A9  3C                 	db	60
   534   00F9AA  7E                 	db	126
   535   00F9AB  4B                 	db	75
   536   00F9AC  49                 	db	73
   537   00F9AD  79                 	db	121
   538   00F9AE  30                 	db	48
   539   00F9AF  00                 	db	0
   540   00F9B0  00                 	db	0
   541   00F9B1  03                 	db	3
   542   00F9B2  03                 	db	3
   543   00F9B3  71                 	db	113
   544   00F9B4  79                 	db	121
   545   00F9B5  0F                 	db	15
   546   00F9B6  07                 	db	7
   547   00F9B7  00                 	db	0
   548   00F9B8  00                 	db	0
   549   00F9B9  36                 	db	54
   550   00F9BA  7F                 	db	127
   551   00F9BB  49                 	db	73
   552   00F9BC  49                 	db	73
   553   00F9BD  7F                 	db	127
   554   00F9BE  36                 	db	54
   555   00F9BF  00                 	db	0
   556   00F9C0  00                 	db	0
   557   00F9C1  06                 	db	6
   558   00F9C2  4F                 	db	79
   559   00F9C3  49                 	db	73
   560   00F9C4  69                 	db	105
   561   00F9C5  3F                 	db	63
   562   00F9C6  1E                 	db	30
   563   00F9C7  00                 	db	0
   564   00F9C8  00                 	db	0
   565   00F9C9  00                 	db	0
   566   00F9CA  00                 	db	0
   567   00F9CB  66                 	db	102
   568   00F9CC  66                 	db	102
   569   00F9CD  00                 	db	0
   570   00F9CE  00                 	db	0
   571   00F9CF  00                 	db	0
   572   00F9D0  00                 	db	0
   573   00F9D1  00                 	db	0
   574   00F9D2  80                 	db	128
   575   00F9D3  E6                 	db	230
   576   00F9D4  66                 	db	102
   577   00F9D5  00                 	db	0
   578   00F9D6  00                 	db	0
   579   00F9D7  00                 	db	0
   580   00F9D8  00                 	db	0
   581   00F9D9  08                 	db	8
   582   00F9DA  1C                 	db	28
   583   00F9DB  36                 	db	54
   584   00F9DC  63                 	db	99
   585   00F9DD  41                 	db	65
   586   00F9DE  00                 	db	0
   587   00F9DF  00                 	db	0
   588   00F9E0  00                 	db	0
   589   00F9E1  24                 	db	36
   590   00F9E2  24                 	db	36
   591   00F9E3  24                 	db	36
   592   00F9E4  24                 	db	36
   593   00F9E5  24                 	db	36
   594   00F9E6  24                 	db	36
   595   00F9E7  00                 	db	0
   596   00F9E8  00                 	db	0
   597   00F9E9  00                 	db	0
   598   00F9EA  41                 	db	65
   599   00F9EB  63                 	db	99
   600   00F9EC  36                 	db	54
   601   00F9ED  1C                 	db	28
   602   00F9EE  08                 	db	8
   603   00F9EF  00                 	db	0
   604   00F9F0  00                 	db	0
   605   00F9F1  02                 	db	2
   606   00F9F2  03                 	db	3
   607   00F9F3  51                 	db	81
   608   00F9F4  59                 	db	89
   609   00F9F5  0F                 	db	15
   610   00F9F6  06                 	db	6
   611   00F9F7  00                 	db	0
   612   00F9F8  00                 	db	0
   613   00F9F9  3E                 	db	62
   614   00F9FA  7F                 	db	127
   615   00F9FB  41                 	db	65
   616   00F9FC  5D                 	db	93
   617   00F9FD  5D                 	db	93
   618   00F9FE  1F                 	db	31
   619   00F9FF  1E                 	db	30
   620   00FA00  00                 	db	0
   621   00FA01  7C                 	db	124
   622   00FA02  7E                 	db	126
   623   00FA03  13                 	db	19
   624   00FA04  13                 	db	19
   625   00FA05  7E                 	db	126
   626   00FA06  7C                 	db	124
   627   00FA07  00                 	db	0
   628   00FA08  00                 	db	0
   629   00FA09  41                 	db	65
   630   00FA0A  7F                 	db	127
   631   00FA0B  7F                 	db	127
   632   00FA0C  49                 	db	73
   633   00FA0D  49                 	db	73
   634   00FA0E  7F                 	db	127
   635   00FA0F  36                 	db	54
   636   00FA10  00                 	db	0
   637   00FA11  1C                 	db	28
   638   00FA12  3E                 	db	62
   639   00FA13  63                 	db	99
   640   00FA14  41                 	db	65
   641   00FA15  41                 	db	65
   642   00FA16  63                 	db	99
   643   00FA17  22                 	db	34
   644   00FA18  00                 	db	0
   645   00FA19  41                 	db	65
   646   00FA1A  7F                 	db	127
   647   00FA1B  7F                 	db	127
   648   00FA1C  41                 	db	65
   649   00FA1D  63                 	db	99
   650   00FA1E  3E                 	db	62
   651   00FA1F  1C                 	db	28
   652   00FA20  00                 	db	0
   653   00FA21  41                 	db	65
   654   00FA22  7F                 	db	127
   655   00FA23  7F                 	db	127
   656   00FA24  49                 	db	73
   657   00FA25  5D                 	db	93
   658   00FA26  41                 	db	65
   659   00FA27  63                 	db	99
   660   00FA28  00                 	db	0
   661   00FA29  41                 	db	65
   662   00FA2A  7F                 	db	127
   663   00FA2B  7F                 	db	127
   664   00FA2C  49                 	db	73
   665   00FA2D  1D                 	db	29
   666   00FA2E  01                 	db	1
   667   00FA2F  03                 	db	3
   668   00FA30  00                 	db	0
   669   00FA31  1C                 	db	28
   670   00FA32  3E                 	db	62
   671   00FA33  63                 	db	99
   672   00FA34  41                 	db	65
   673   00FA35  51                 	db	81
   674   00FA36  73                 	db	115
   675   00FA37  72                 	db	114
   676   00FA38  00                 	db	0
   677   00FA39  7F                 	db	127
   678   00FA3A  7F                 	db	127
   679   00FA3B  08                 	db	8
   680   00FA3C  08                 	db	8
   681   00FA3D  7F                 	db	127
   682   00FA3E  7F                 	db	127
   683   00FA3F  00                 	db	0
   684   00FA40  00                 	db	0
   685   00FA41  00                 	db	0
   686   00FA42  41                 	db	65
   687   00FA43  7F                 	db	127
   688   00FA44  7F                 	db	127
   689   00FA45  41                 	db	65
   690   00FA46  00                 	db	0
   691   00FA47  00                 	db	0
   692   00FA48  00                 	db	0
   693   00FA49  30                 	db	48
   694   00FA4A  70                 	db	112
   695   00FA4B  40                 	db	64
   696   00FA4C  41                 	db	65
   697   00FA4D  7F                 	db	127
   698   00FA4E  3F                 	db	63
   699   00FA4F  01                 	db	1
   700   00FA50  00                 	db	0
   701   00FA51  41                 	db	65
   702   00FA52  7F                 	db	127
   703   00FA53  7F                 	db	127
   704   00FA54  08                 	db	8
   705   00FA55  1C                 	db	28
   706   00FA56  77                 	db	119
   707   00FA57  63                 	db	99
   708   00FA58  00                 	db	0
   709   00FA59  41                 	db	65
   710   00FA5A  7F                 	db	127
   711   00FA5B  7F                 	db	127
   712   00FA5C  41                 	db	65
   713   00FA5D  40                 	db	64
   714   00FA5E  60                 	db	96
   715   00FA5F  70                 	db	112
   716   00FA60  00                 	db	0
   717   00FA61  00                 	db	0
   718   00FA62  7F                 	db	127
   719   00FA63  0E                 	db	14
   720   00FA64  1C                 	db	28
   721   00FA65  0E                 	db	14
   722   00FA66  7F                 	db	127
   723   00FA67  00                 	db	0
   724   00FA68  00                 	db	0
   725   00FA69  7F                 	db	127
   726   00FA6A  7F                 	db	127
   727   00FA6B  06                 	db	6
   728   00FA6C  0C                 	db	12
   729   00FA6D  18                 	db	24
   730   00FA6E  7F                 	db	127
   731   00FA6F  7F                 	db	127
   732   00FA70  00                 	db	0
   733   00FA71  1C                 	db	28
   734   00FA72  3E                 	db	62
   735   00FA73  63                 	db	99
   736   00FA74  41                 	db	65
   737   00FA75  63                 	db	99
   738   00FA76  3E                 	db	62
   739   00FA77  1C                 	db	28
   740   00FA78  00                 	db	0
   741   00FA79  41                 	db	65
   742   00FA7A  7F                 	db	127
   743   00FA7B  7F                 	db	127
   744   00FA7C  49                 	db	73
   745   00FA7D  09                 	db	9
   746   00FA7E  0F                 	db	15
   747   00FA7F  06                 	db	6
   748   00FA80  00                 	db	0
   749   00FA81  1E                 	db	30
   750   00FA82  3F                 	db	63
   751   00FA83  21                 	db	33
   752   00FA84  71                 	db	113
   753   00FA85  7F                 	db	127
   754   00FA86  5E                 	db	94
   755   00FA87  00                 	db	0
   756   00FA88  00                 	db	0
   757   00FA89  41                 	db	65
   758   00FA8A  7F                 	db	127
   759   00FA8B  7F                 	db	127
   760   00FA8C  09                 	db	9
   761   00FA8D  19                 	db	25
   762   00FA8E  7F                 	db	127
   763   00FA8F  66                 	db	102
   764   00FA90  00                 	db	0
   765   00FA91  26                 	db	38
   766   00FA92  6F                 	db	111
   767   00FA93  4D                 	db	77
   768   00FA94  59                 	db	89
   769   00FA95  73                 	db	115
   770   00FA96  32                 	db	50
   771   00FA97  00                 	db	0
   772   00FA98  00                 	db	0
   773   00FA99  03                 	db	3
   774   00FA9A  41                 	db	65
   775   00FA9B  7F                 	db	127
   776   00FA9C  7F                 	db	127
   777   00FA9D  41                 	db	65
   778   00FA9E  03                 	db	3
   779   00FA9F  00                 	db	0
   780   00FAA0  00                 	db	0
   781   00FAA1  7F                 	db	127
   782   00FAA2  7F                 	db	127
   783   00FAA3  40                 	db	64
   784   00FAA4  40                 	db	64
   785   00FAA5  7F                 	db	127
   786   00FAA6  7F                 	db	127
   787   00FAA7  00                 	db	0
   788   00FAA8  00                 	db	0
   789   00FAA9  1F                 	db	31
   790   00FAAA  3F                 	db	63
   791   00FAAB  60                 	db	96
   792   00FAAC  60                 	db	96
   793   00FAAD  3F                 	db	63
   794   00FAAE  1F                 	db	31
   795   00FAAF  00                 	db	0
   796   00FAB0  00                 	db	0
   797   00FAB1  7F                 	db	127
   798   00FAB2  7F                 	db	127
   799   00FAB3  30                 	db	48
   800   00FAB4  18                 	db	24
   801   00FAB5  30                 	db	48
   802   00FAB6  7F                 	db	127
   803   00FAB7  7F                 	db	127
   804   00FAB8  00                 	db	0
   805   00FAB9  43                 	db	67
   806   00FABA  67                 	db	103
   807   00FABB  3C                 	db	60
   808   00FABC  18                 	db	24
   809   00FABD  3C                 	db	60
   810   00FABE  67                 	db	103
   811   00FABF  43                 	db	67
   812   00FAC0  00                 	db	0
   813   00FAC1  07                 	db	7
   814   00FAC2  4F                 	db	79
   815   00FAC3  78                 	db	120
   816   00FAC4  78                 	db	120
   817   00FAC5  4F                 	db	79
   818   00FAC6  07                 	db	7
   819   00FAC7  00                 	db	0
   820   00FAC8  00                 	db	0
   821   00FAC9  47                 	db	71
   822   00FACA  63                 	db	99
   823   00FACB  71                 	db	113
   824   00FACC  59                 	db	89
   825   00FACD  4D                 	db	77
   826   00FACE  67                 	db	103
   827   00FACF  73                 	db	115
   828   00FAD0  00                 	db	0
   829   00FAD1  00                 	db	0
   830   00FAD2  7F                 	db	127
   831   00FAD3  7F                 	db	127
   832   00FAD4  41                 	db	65
   833   00FAD5  41                 	db	65
   834   00FAD6  00                 	db	0
   835   00FAD7  00                 	db	0
   836   00FAD8  00                 	db	0
   837   00FAD9  01                 	db	1
   838   00FADA  03                 	db	3
   839   00FADB  06                 	db	6
   840   00FADC  0C                 	db	12
   841   00FADD  18                 	db	24
   842   00FADE  30                 	db	48
   843   00FADF  60                 	db	96
   844   00FAE0  00                 	db	0
   845   00FAE1  00                 	db	0
   846   00FAE2  41                 	db	65
   847   00FAE3  41                 	db	65
   848   00FAE4  7F                 	db	127
   849   00FAE5  7F                 	db	127
   850   00FAE6  00                 	db	0
   851   00FAE7  00                 	db	0
   852   00FAE8  00                 	db	0
   853   00FAE9  08                 	db	8
   854   00FAEA  0C                 	db	12
   855   00FAEB  06                 	db	6
   856   00FAEC  03                 	db	3
   857   00FAED  06                 	db	6
   858   00FAEE  0C                 	db	12
   859   00FAEF  08                 	db	8
   860   00FAF0  00                 	db	0
   861   00FAF1  80                 	db	128
   862   00FAF2  80                 	db	128
   863   00FAF3  80                 	db	128
   864   00FAF4  80                 	db	128
   865   00FAF5  80                 	db	128
   866   00FAF6  80                 	db	128
   867   00FAF7  80                 	db	128
   868   00FAF8  80                 	db	128
   869   00FAF9  00                 	db	0
   870   00FAFA  00                 	db	0
   871   00FAFB  03                 	db	3
   872   00FAFC  07                 	db	7
   873   00FAFD  04                 	db	4
   874   00FAFE  00                 	db	0
   875   00FAFF  00                 	db	0
   876   00FB00  00                 	db	0
   877   00FB01  20                 	db	32
   878   00FB02  74                 	db	116
   879   00FB03  54                 	db	84
   880   00FB04  54                 	db	84
   881   00FB05  3C                 	db	60
   882   00FB06  78                 	db	120
   883   00FB07  40                 	db	64
   884   00FB08  00                 	db	0
   885   00FB09  41                 	db	65
   886   00FB0A  7F                 	db	127
   887   00FB0B  3F                 	db	63
   888   00FB0C  48                 	db	72
   889   00FB0D  48                 	db	72
   890   00FB0E  78                 	db	120
   891   00FB0F  30                 	db	48
   892   00FB10  00                 	db	0
   893   00FB11  38                 	db	56
   894   00FB12  7C                 	db	124
   895   00FB13  44                 	db	68
   896   00FB14  44                 	db	68
   897   00FB15  6C                 	db	108
   898   00FB16  28                 	db	40
   899   00FB17  00                 	db	0
   900   00FB18  00                 	db	0
   901   00FB19  30                 	db	48
   902   00FB1A  78                 	db	120
   903   00FB1B  48                 	db	72
   904   00FB1C  49                 	db	73
   905   00FB1D  3F                 	db	63
   906   00FB1E  7F                 	db	127
   907   00FB1F  40                 	db	64
   908   00FB20  00                 	db	0
   909   00FB21  38                 	db	56
   910   00FB22  7C                 	db	124
   911   00FB23  54                 	db	84
   912   00FB24  54                 	db	84
   913   00FB25  5C                 	db	92
   914   00FB26  18                 	db	24
   915   00FB27  00                 	db	0
   916   00FB28  00                 	db	0
   917   00FB29  48                 	db	72
   918   00FB2A  7E                 	db	126
   919   00FB2B  7F                 	db	127
   920   00FB2C  49                 	db	73
   921   00FB2D  03                 	db	3
   922   00FB2E  02                 	db	2
   923   00FB2F  00                 	db	0
   924   00FB30  00                 	db	0
   925   00FB31  98                 	db	152
   926   00FB32  BC                 	db	188
   927   00FB33  A4                 	db	164
   928   00FB34  A4                 	db	164
   929   00FB35  F8                 	db	248
   930   00FB36  7C                 	db	124
   931   00FB37  04                 	db	4
   932   00FB38  00                 	db	0
   933   00FB39  41                 	db	65
   934   00FB3A  7F                 	db	127
   935   00FB3B  7F                 	db	127
   936   00FB3C  08                 	db	8
   937   00FB3D  04                 	db	4
   938   00FB3E  7C                 	db	124
   939   00FB3F  78                 	db	120
   940   00FB40  00                 	db	0
   941   00FB41  00                 	db	0
   942   00FB42  44                 	db	68
   943   00FB43  7D                 	db	125
   944   00FB44  7D                 	db	125
   945   00FB45  40                 	db	64
   946   00FB46  00                 	db	0
   947   00FB47  00                 	db	0
   948   00FB48  00                 	db	0
   949   00FB49  60                 	db	96
   950   00FB4A  E0                 	db	224
   951   00FB4B  80                 	db	128
   952   00FB4C  80                 	db	128
   953   00FB4D  FD                 	db	253
   954   00FB4E  7D                 	db	125
   955   00FB4F  00                 	db	0
   956   00FB50  00                 	db	0
   957   00FB51  41                 	db	65
   958   00FB52  7F                 	db	127
   959   00FB53  7F                 	db	127
   960   00FB54  10                 	db	16
   961   00FB55  38                 	db	56
   962   00FB56  6C                 	db	108
   963   00FB57  44                 	db	68
   964   00FB58  00                 	db	0
   965   00FB59  00                 	db	0
   966   00FB5A  41                 	db	65
   967   00FB5B  7F                 	db	127
   968   00FB5C  7F                 	db	127
   969   00FB5D  40                 	db	64
   970   00FB5E  00                 	db	0
   971   00FB5F  00                 	db	0
   972   00FB60  00                 	db	0
   973   00FB61  7C                 	db	124
   974   00FB62  7C                 	db	124
   975   00FB63  18                 	db	24
   976   00FB64  38                 	db	56
   977   00FB65  1C                 	db	28
   978   00FB66  7C                 	db	124
   979   00FB67  78                 	db	120
   980   00FB68  00                 	db	0
   981   00FB69  7C                 	db	124
   982   00FB6A  7C                 	db	124
   983   00FB6B  04                 	db	4
   984   00FB6C  04                 	db	4
   985   00FB6D  7C                 	db	124
   986   00FB6E  78                 	db	120
   987   00FB6F  00                 	db	0
   988   00FB70  00                 	db	0
   989   00FB71  38                 	db	56
   990   00FB72  7C                 	db	124
   991   00FB73  44                 	db	68
   992   00FB74  44                 	db	68
   993   00FB75  7C                 	db	124
   994   00FB76  38                 	db	56
   995   00FB77  00                 	db	0
   996   00FB78  00                 	db	0
   997   00FB79  84                 	db	132
   998   00FB7A  FC                 	db	252
   999   00FB7B  F8                 	db	248
  1000   00FB7C  A4                 	db	164
  1001   00FB7D  24                 	db	36
  1002   00FB7E  3C                 	db	60
  1003   00FB7F  18                 	db	24
  1004   00FB80  00                 	db	0
  1005   00FB81  18                 	db	24
  1006   00FB82  3C                 	db	60
  1007   00FB83  24                 	db	36
  1008   00FB84  A4                 	db	164
  1009   00FB85  F8                 	db	248
  1010   00FB86  FC                 	db	252
  1011   00FB87  84                 	db	132
  1012   00FB88  00                 	db	0
  1013   00FB89  44                 	db	68
  1014   00FB8A  7C                 	db	124
  1015   00FB8B  78                 	db	120
  1016   00FB8C  4C                 	db	76
  1017   00FB8D  04                 	db	4
  1018   00FB8E  1C                 	db	28
  1019   00FB8F  18                 	db	24
  1020   00FB90  00                 	db	0
  1021   00FB91  48                 	db	72
  1022   00FB92  5C                 	db	92
  1023   00FB93  54                 	db	84
  1024   00FB94  54                 	db	84
  1025   00FB95  74                 	db	116
  1026   00FB96  24                 	db	36
  1027   00FB97  00                 	db	0
  1028   00FB98  00                 	db	0
  1029   00FB99  00                 	db	0
  1030   00FB9A  04                 	db	4
  1031   00FB9B  3E                 	db	62
  1032   00FB9C  7F                 	db	127
  1033   00FB9D  44                 	db	68
  1034   00FB9E  24                 	db	36
  1035   00FB9F  00                 	db	0
  1036   00FBA0  00                 	db	0
  1037   00FBA1  3C                 	db	60
  1038   00FBA2  7C                 	db	124
  1039   00FBA3  40                 	db	64
  1040   00FBA4  40                 	db	64
  1041   00FBA5  3C                 	db	60
  1042   00FBA6  7C                 	db	124
  1043   00FBA7  40                 	db	64
  1044   00FBA8  00                 	db	0
  1045   00FBA9  1C                 	db	28
  1046   00FBAA  3C                 	db	60
  1047   00FBAB  60                 	db	96
  1048   00FBAC  60                 	db	96
  1049   00FBAD  3C                 	db	60
  1050   00FBAE  1C                 	db	28
  1051   00FBAF  00                 	db	0
  1052   00FBB0  00                 	db	0
  1053   00FBB1  3C                 	db	60
  1054   00FBB2  7C                 	db	124
  1055   00FBB3  70                 	db	112
  1056   00FBB4  38                 	db	56
  1057   00FBB5  70                 	db	112
  1058   00FBB6  7C                 	db	124
  1059   00FBB7  3C                 	db	60
  1060   00FBB8  00                 	db	0
  1061   00FBB9  44                 	db	68
  1062   00FBBA  6C                 	db	108
  1063   00FBBB  38                 	db	56
  1064   00FBBC  10                 	db	16
  1065   00FBBD  38                 	db	56
  1066   00FBBE  6C                 	db	108
  1067   00FBBF  44                 	db	68
  1068   00FBC0  00                 	db	0
  1069   00FBC1  9C                 	db	156
  1070   00FBC2  BC                 	db	188
  1071   00FBC3  A0                 	db	160
  1072   00FBC4  A0                 	db	160
  1073   00FBC5  FC                 	db	252
  1074   00FBC6  7C                 	db	124
  1075   00FBC7  00                 	db	0
  1076   00FBC8  00                 	db	0
  1077   00FBC9  4C                 	db	76
  1078   00FBCA  64                 	db	100
  1079   00FBCB  74                 	db	116
  1080   00FBCC  5C                 	db	92
  1081   00FBCD  4C                 	db	76
  1082   00FBCE  64                 	db	100
  1083   00FBCF  00                 	db	0
  1084   00FBD0  00                 	db	0
  1085   00FBD1  08                 	db	8
  1086   00FBD2  08                 	db	8
  1087   00FBD3  3E                 	db	62
  1088   00FBD4  77                 	db	119
  1089   00FBD5  41                 	db	65
  1090   00FBD6  41                 	db	65
  1091   00FBD7  00                 	db	0
  1092   00FBD8  00                 	db	0
  1093   00FBD9  00                 	db	0
  1094   00FBDA  00                 	db	0
  1095   00FBDB  00                 	db	0
  1096   00FBDC  77                 	db	119
  1097   00FBDD  77                 	db	119
  1098   00FBDE  00                 	db	0
  1099   00FBDF  00                 	db	0
  1100   00FBE0  00                 	db	0
  1101   00FBE1  41                 	db	65
  1102   00FBE2  41                 	db	65
  1103   00FBE3  77                 	db	119
  1104   00FBE4  3E                 	db	62
  1105   00FBE5  08                 	db	8
  1106   00FBE6  08                 	db	8
  1107   00FBE7  00                 	db	0
  1108   00FBE8  00                 	db	0
  1109   00FBE9  02                 	db	2
  1110   00FBEA  03                 	db	3
  1111   00FBEB  01                 	db	1
  1112   00FBEC  03                 	db	3
  1113   00FBED  02                 	db	2
  1114   00FBEE  03                 	db	3
  1115   00FBEF  01                 	db	1
  1116   00FBF0  00                 	db	0
  1117   00FBF1  70                 	db	112
  1118   00FBF2  78                 	db	120
  1119   00FBF3  4C                 	db	76
  1120   00FBF4  46                 	db	70
  1121   00FBF5  4C                 	db	76
  1122   00FBF6  78                 	db	120
  1123   00FBF7  70                 	db	112
  1124   00FBF8  00                 	db	0
  1125   00FBF9  0E                 	db	14
  1126   00FBFA  9F                 	db	159
  1127   00FBFB  91                 	db	145
  1128   00FBFC  B1                 	db	177
  1129   00FBFD  FB                 	db	251
  1130   00FBFE  4A                 	db	74
  1131   00FBFF  00                 	db	0
  1132   00FC00  00                 	db	0
  1133   00FC01  3A                 	db	58
  1134   00FC02  7A                 	db	122
  1135   00FC03  40                 	db	64
  1136   00FC04  40                 	db	64
  1137   00FC05  7A                 	db	122
  1138   00FC06  7A                 	db	122
  1139   00FC07  40                 	db	64
  1140   00FC08  00                 	db	0
  1141   00FC09  38                 	db	56
  1142   00FC0A  7C                 	db	124
  1143   00FC0B  54                 	db	84
  1144   00FC0C  55                 	db	85
  1145   00FC0D  5D                 	db	93
  1146   00FC0E  19                 	db	25
  1147   00FC0F  00                 	db	0
  1148   00FC10  00                 	db	0
  1149   00FC11  02                 	db	2
  1150   00FC12  23                 	db	35
  1151   00FC13  75                 	db	117
  1152   00FC14  55                 	db	85
  1153   00FC15  55                 	db	85
  1154   00FC16  7D                 	db	125
  1155   00FC17  7B                 	db	123
  1156   00FC18  42                 	db	66
  1157   00FC19  21                 	db	33
  1158   00FC1A  75                 	db	117
  1159   00FC1B  54                 	db	84
  1160   00FC1C  54                 	db	84
  1161   00FC1D  7D                 	db	125
  1162   00FC1E  79                 	db	121
  1163   00FC1F  40                 	db	64
  1164   00FC20  00                 	db	0
  1165   00FC21  21                 	db	33
  1166   00FC22  75                 	db	117
  1167   00FC23  55                 	db	85
  1168   00FC24  54                 	db	84
  1169   00FC25  7C                 	db	124
  1170   00FC26  78                 	db	120
  1171   00FC27  40                 	db	64
  1172   00FC28  00                 	db	0
  1173   00FC29  20                 	db	32
  1174   00FC2A  74                 	db	116
  1175   00FC2B  57                 	db	87
  1176   00FC2C  57                 	db	87
  1177   00FC2D  7C                 	db	124
  1178   00FC2E  78                 	db	120
  1179   00FC2F  40                 	db	64
  1180   00FC30  00                 	db	0
  1181   00FC31  18                 	db	24
  1182   00FC32  3C                 	db	60
  1183   00FC33  A4                 	db	164
  1184   00FC34  A4                 	db	164
  1185   00FC35  E4                 	db	228
  1186   00FC36  40                 	db	64
  1187   00FC37  00                 	db	0
  1188   00FC38  00                 	db	0
  1189   00FC39  02                 	db	2
  1190   00FC3A  3B                 	db	59
  1191   00FC3B  7D                 	db	125
  1192   00FC3C  55                 	db	85
  1193   00FC3D  55                 	db	85
  1194   00FC3E  5D                 	db	93
  1195   00FC3F  1B                 	db	27
  1196   00FC40  02                 	db	2
  1197   00FC41  39                 	db	57
  1198   00FC42  7D                 	db	125
  1199   00FC43  54                 	db	84
  1200   00FC44  54                 	db	84
  1201   00FC45  5D                 	db	93
  1202   00FC46  19                 	db	25
  1203   00FC47  00                 	db	0
  1204   00FC48  00                 	db	0
  1205   00FC49  39                 	db	57
  1206   00FC4A  7D                 	db	125
  1207   00FC4B  55                 	db	85
  1208   00FC4C  54                 	db	84
  1209   00FC4D  5C                 	db	92
  1210   00FC4E  18                 	db	24
  1211   00FC4F  00                 	db	0
  1212   00FC50  00                 	db	0
  1213   00FC51  01                 	db	1
  1214   00FC52  45                 	db	69
  1215   00FC53  7C                 	db	124
  1216   00FC54  7C                 	db	124
  1217   00FC55  41                 	db	65
  1218   00FC56  01                 	db	1
  1219   00FC57  00                 	db	0
  1220   00FC58  00                 	db	0
  1221   00FC59  02                 	db	2
  1222   00FC5A  03                 	db	3
  1223   00FC5B  45                 	db	69
  1224   00FC5C  7D                 	db	125
  1225   00FC5D  7D                 	db	125
  1226   00FC5E  43                 	db	67
  1227   00FC5F  02                 	db	2
  1228   00FC60  00                 	db	0
  1229   00FC61  01                 	db	1
  1230   00FC62  45                 	db	69
  1231   00FC63  7D                 	db	125
  1232   00FC64  7C                 	db	124
  1233   00FC65  40                 	db	64
  1234   00FC66  00                 	db	0
  1235   00FC67  00                 	db	0
  1236   00FC68  00                 	db	0
  1237   00FC69  79                 	db	121
  1238   00FC6A  7D                 	db	125
  1239   00FC6B  16                 	db	22
  1240   00FC6C  12                 	db	18
  1241   00FC6D  16                 	db	22
  1242   00FC6E  7D                 	db	125
  1243   00FC6F  79                 	db	121
  1244   00FC70  00                 	db	0
  1245   00FC71  70                 	db	112
  1246   00FC72  78                 	db	120
  1247   00FC73  2B                 	db	43
  1248   00FC74  2B                 	db	43
  1249   00FC75  78                 	db	120
  1250   00FC76  70                 	db	112
  1251   00FC77  00                 	db	0
  1252   00FC78  00                 	db	0
  1253   00FC79  44                 	db	68
  1254   00FC7A  7C                 	db	124
  1255   00FC7B  7C                 	db	124
  1256   00FC7C  55                 	db	85
  1257   00FC7D  55                 	db	85
  1258   00FC7E  45                 	db	69
  1259   00FC7F  00                 	db	0
  1260   00FC80  00                 	db	0
  1261   00FC81  20                 	db	32
  1262   00FC82  74                 	db	116
  1263   00FC83  54                 	db	84
  1264   00FC84  54                 	db	84
  1265   00FC85  7C                 	db	124
  1266   00FC86  7C                 	db	124
  1267   00FC87  54                 	db	84
  1268   00FC88  54                 	db	84
  1269   00FC89  7C                 	db	124
  1270   00FC8A  7E                 	db	126
  1271   00FC8B  0B                 	db	11
  1272   00FC8C  09                 	db	9
  1273   00FC8D  7F                 	db	127
  1274   00FC8E  7F                 	db	127
  1275   00FC8F  49                 	db	73
  1276   00FC90  00                 	db	0
  1277   00FC91  32                 	db	50
  1278   00FC92  7B                 	db	123
  1279   00FC93  49                 	db	73
  1280   00FC94  49                 	db	73
  1281   00FC95  7B                 	db	123
  1282   00FC96  32                 	db	50
  1283   00FC97  00                 	db	0
  1284   00FC98  00                 	db	0
  1285   00FC99  32                 	db	50
  1286   00FC9A  7A                 	db	122
  1287   00FC9B  48                 	db	72
  1288   00FC9C  48                 	db	72
  1289   00FC9D  7A                 	db	122
  1290   00FC9E  32                 	db	50
  1291   00FC9F  00                 	db	0
  1292   00FCA0  00                 	db	0
  1293   00FCA1  32                 	db	50
  1294   00FCA2  7A                 	db	122
  1295   00FCA3  4A                 	db	74
  1296   00FCA4  48                 	db	72
  1297   00FCA5  78                 	db	120
  1298   00FCA6  30                 	db	48
  1299   00FCA7  00                 	db	0
  1300   00FCA8  00                 	db	0
  1301   00FCA9  3A                 	db	58
  1302   00FCAA  7B                 	db	123
  1303   00FCAB  41                 	db	65
  1304   00FCAC  41                 	db	65
  1305   00FCAD  7B                 	db	123
  1306   00FCAE  7A                 	db	122
  1307   00FCAF  40                 	db	64
  1308   00FCB0  00                 	db	0
  1309   00FCB1  3A                 	db	58
  1310   00FCB2  7A                 	db	122
  1311   00FCB3  42                 	db	66
  1312   00FCB4  40                 	db	64
  1313   00FCB5  78                 	db	120
  1314   00FCB6  78                 	db	120
  1315   00FCB7  40                 	db	64
  1316   00FCB8  00                 	db	0
  1317   00FCB9  9A                 	db	154
  1318   00FCBA  BA                 	db	186
  1319   00FCBB  A0                 	db	160
  1320   00FCBC  A0                 	db	160
  1321   00FCBD  FA                 	db	250
  1322   00FCBE  7A                 	db	122
  1323   00FCBF  00                 	db	0
  1324   00FCC0  00                 	db	0
  1325   00FCC1  01                 	db	1
  1326   00FCC2  19                 	db	25
  1327   00FCC3  3C                 	db	60
  1328   00FCC4  66                 	db	102
  1329   00FCC5  66                 	db	102
  1330   00FCC6  3C                 	db	60
  1331   00FCC7  19                 	db	25
  1332   00FCC8  01                 	db	1
  1333   00FCC9  3D                 	db	61
  1334   00FCCA  7D                 	db	125
  1335   00FCCB  40                 	db	64
  1336   00FCCC  40                 	db	64
  1337   00FCCD  7D                 	db	125
  1338   00FCCE  3D                 	db	61
  1339   00FCCF  00                 	db	0
  1340   00FCD0  00                 	db	0
  1341   00FCD1  18                 	db	24
  1342   00FCD2  3C                 	db	60
  1343   00FCD3  24                 	db	36
  1344   00FCD4  E7                 	db	231
  1345   00FCD5  E7                 	db	231
  1346   00FCD6  24                 	db	36
  1347   00FCD7  24                 	db	36
  1348   00FCD8  00                 	db	0
  1349   00FCD9  68                 	db	104
  1350   00FCDA  7E                 	db	126
  1351   00FCDB  7F                 	db	127
  1352   00FCDC  49                 	db	73
  1353   00FCDD  43                 	db	67
  1354   00FCDE  66                 	db	102
  1355   00FCDF  20                 	db	32
  1356   00FCE0  00                 	db	0
  1357   00FCE1  2B                 	db	43
  1358   00FCE2  2F                 	db	47
  1359   00FCE3  FC                 	db	252
  1360   00FCE4  FC                 	db	252
  1361   00FCE5  2F                 	db	47
  1362   00FCE6  2B                 	db	43
  1363   00FCE7  00                 	db	0
  1364   00FCE8  00                 	db	0
  1365   00FCE9  FF                 	db	255
  1366   00FCEA  FF                 	db	255
  1367   00FCEB  09                 	db	9
  1368   00FCEC  09                 	db	9
  1369   00FCED  2F                 	db	47
  1370   00FCEE  F6                 	db	246
  1371   00FCEF  F8                 	db	248
  1372   00FCF0  A0                 	db	160
  1373   00FCF1  40                 	db	64
  1374   00FCF2  C0                 	db	192
  1375   00FCF3  88                 	db	136
  1376   00FCF4  FE                 	db	254
  1377   00FCF5  7F                 	db	127
  1378   00FCF6  09                 	db	9
  1379   00FCF7  03                 	db	3
  1380   00FCF8  02                 	db	2
  1381   00FCF9  20                 	db	32
  1382   00FCFA  74                 	db	116
  1383   00FCFB  54                 	db	84
  1384   00FCFC  55                 	db	85
  1385   00FCFD  7D                 	db	125
  1386   00FCFE  79                 	db	121
  1387   00FCFF  40                 	db	64
  1388   00FD00  00                 	db	0
  1389   00FD01  00                 	db	0
  1390   00FD02  44                 	db	68
  1391   00FD03  7D                 	db	125
  1392   00FD04  7D                 	db	125
  1393   00FD05  41                 	db	65
  1394   00FD06  00                 	db	0
  1395   00FD07  00                 	db	0
  1396   00FD08  00                 	db	0
  1397   00FD09  30                 	db	48
  1398   00FD0A  78                 	db	120
  1399   00FD0B  48                 	db	72
  1400   00FD0C  4A                 	db	74
  1401   00FD0D  7A                 	db	122
  1402   00FD0E  32                 	db	50
  1403   00FD0F  00                 	db	0
  1404   00FD10  00                 	db	0
  1405   00FD11  38                 	db	56
  1406   00FD12  78                 	db	120
  1407   00FD13  40                 	db	64
  1408   00FD14  42                 	db	66
  1409   00FD15  7A                 	db	122
  1410   00FD16  7A                 	db	122
  1411   00FD17  40                 	db	64
  1412   00FD18  00                 	db	0
  1413   00FD19  7A                 	db	122
  1414   00FD1A  7A                 	db	122
  1415   00FD1B  0A                 	db	10
  1416   00FD1C  0A                 	db	10
  1417   00FD1D  7A                 	db	122
  1418   00FD1E  70                 	db	112
  1419   00FD1F  00                 	db	0
  1420   00FD20  00                 	db	0
  1421   00FD21  7D                 	db	125
  1422   00FD22  7D                 	db	125
  1423   00FD23  19                 	db	25
  1424   00FD24  31                 	db	49
  1425   00FD25  7D                 	db	125
  1426   00FD26  7D                 	db	125
  1427   00FD27  00                 	db	0
  1428   00FD28  00                 	db	0
  1429   00FD29  00                 	db	0
  1430   00FD2A  26                 	db	38
  1431   00FD2B  2F                 	db	47
  1432   00FD2C  29                 	db	41
  1433   00FD2D  2F                 	db	47
  1434   00FD2E  2F                 	db	47
  1435   00FD2F  28                 	db	40
  1436   00FD30  00                 	db	0
  1437   00FD31  00                 	db	0
  1438   00FD32  26                 	db	38
  1439   00FD33  2F                 	db	47
  1440   00FD34  29                 	db	41
  1441   00FD35  2F                 	db	47
  1442   00FD36  26                 	db	38
  1443   00FD37  00                 	db	0
  1444   00FD38  00                 	db	0
  1445   00FD39  30                 	db	48
  1446   00FD3A  78                 	db	120
  1447   00FD3B  4D                 	db	77
  1448   00FD3C  45                 	db	69
  1449   00FD3D  60                 	db	96
  1450   00FD3E  20                 	db	32
  1451   00FD3F  00                 	db	0
  1452   00FD40  00                 	db	0
  1453   00FD41  38                 	db	56
  1454   00FD42  38                 	db	56
  1455   00FD43  08                 	db	8
  1456   00FD44  08                 	db	8
  1457   00FD45  08                 	db	8
  1458   00FD46  08                 	db	8
  1459   00FD47  00                 	db	0
  1460   00FD48  00                 	db	0
  1461   00FD49  08                 	db	8
  1462   00FD4A  08                 	db	8
  1463   00FD4B  08                 	db	8
  1464   00FD4C  08                 	db	8
  1465   00FD4D  38                 	db	56
  1466   00FD4E  38                 	db	56
  1467   00FD4F  00                 	db	0
  1468   00FD50  00                 	db	0
  1469   00FD51  4F                 	db	79
  1470   00FD52  6F                 	db	111
  1471   00FD53  30                 	db	48
  1472   00FD54  18                 	db	24
  1473   00FD55  CC                 	db	204
  1474   00FD56  EE                 	db	238
  1475   00FD57  BB                 	db	187
  1476   00FD58  91                 	db	145
  1477   00FD59  4F                 	db	79
  1478   00FD5A  6F                 	db	111
  1479   00FD5B  30                 	db	48
  1480   00FD5C  18                 	db	24
  1481   00FD5D  6C                 	db	108
  1482   00FD5E  76                 	db	118
  1483   00FD5F  FB                 	db	251
  1484   00FD60  F9                 	db	249
  1485   00FD61  00                 	db	0
  1486   00FD62  00                 	db	0
  1487   00FD63  00                 	db	0
  1488   00FD64  7B                 	db	123
  1489   00FD65  7B                 	db	123
  1490   00FD66  00                 	db	0
  1491   00FD67  00                 	db	0
  1492   00FD68  00                 	db	0
  1493   00FD69  08                 	db	8
  1494   00FD6A  1C                 	db	28
  1495   00FD6B  36                 	db	54
  1496   00FD6C  22                 	db	34
  1497   00FD6D  08                 	db	8
  1498   00FD6E  1C                 	db	28
  1499   00FD6F  36                 	db	54
  1500   00FD70  22                 	db	34
  1501   00FD71  22                 	db	34
  1502   00FD72  36                 	db	54
  1503   00FD73  1C                 	db	28
  1504   00FD74  08                 	db	8
  1505   00FD75  22                 	db	34
  1506   00FD76  36                 	db	54
  1507   00FD77  1C                 	db	28
  1508   00FD78  08                 	db	8
  1509   00FD79  AA                 	db	170
  1510   00FD7A  00                 	db	0
  1511   00FD7B  55                 	db	85
  1512   00FD7C  00                 	db	0
  1513   00FD7D  AA                 	db	170
  1514   00FD7E  00                 	db	0
  1515   00FD7F  55                 	db	85
  1516   00FD80  00                 	db	0
  1517   00FD81  AA                 	db	170
  1518   00FD82  55                 	db	85
  1519   00FD83  AA                 	db	170
  1520   00FD84  55                 	db	85
  1521   00FD85  AA                 	db	170
  1522   00FD86  55                 	db	85
  1523   00FD87  AA                 	db	170
  1524   00FD88  55                 	db	85
  1525   00FD89  DD                 	db	221
  1526   00FD8A  FF                 	db	255
  1527   00FD8B  AA                 	db	170
  1528   00FD8C  77                 	db	119
  1529   00FD8D  DD                 	db	221
  1530   00FD8E  AA                 	db	170
  1531   00FD8F  FF                 	db	255
  1532   00FD90  77                 	db	119
  1533   00FD91  00                 	db	0
  1534   00FD92  00                 	db	0
  1535   00FD93  00                 	db	0
  1536   00FD94  FF                 	db	255
  1537   00FD95  FF                 	db	255
  1538   00FD96  00                 	db	0
  1539   00FD97  00                 	db	0
  1540   00FD98  00                 	db	0
  1541   00FD99  10                 	db	16
  1542   00FD9A  10                 	db	16
  1543   00FD9B  10                 	db	16
  1544   00FD9C  FF                 	db	255
  1545   00FD9D  FF                 	db	255
  1546   00FD9E  00                 	db	0
  1547   00FD9F  00                 	db	0
  1548   00FDA0  00                 	db	0
  1549   00FDA1  14                 	db	20
  1550   00FDA2  14                 	db	20
  1551   00FDA3  14                 	db	20
  1552   00FDA4  FF                 	db	255
  1553   00FDA5  FF                 	db	255
  1554   00FDA6  00                 	db	0
  1555   00FDA7  00                 	db	0
  1556   00FDA8  00                 	db	0
  1557   00FDA9  10                 	db	16
  1558   00FDAA  10                 	db	16
  1559   00FDAB  FF                 	db	255
  1560   00FDAC  FF                 	db	255
  1561   00FDAD  00                 	db	0
  1562   00FDAE  FF                 	db	255
  1563   00FDAF  FF                 	db	255
  1564   00FDB0  00                 	db	0
  1565   00FDB1  10                 	db	16
  1566   00FDB2  10                 	db	16
  1567   00FDB3  F0                 	db	240
  1568   00FDB4  F0                 	db	240
  1569   00FDB5  10                 	db	16
  1570   00FDB6  F0                 	db	240
  1571   00FDB7  F0                 	db	240
  1572   00FDB8  00                 	db	0
  1573   00FDB9  14                 	db	20
  1574   00FDBA  14                 	db	20
  1575   00FDBB  14                 	db	20
  1576   00FDBC  FC                 	db	252
  1577   00FDBD  FC                 	db	252
  1578   00FDBE  00                 	db	0
  1579   00FDBF  00                 	db	0
  1580   00FDC0  00                 	db	0
  1581   00FDC1  14                 	db	20
  1582   00FDC2  14                 	db	20
  1583   00FDC3  F7                 	db	247
  1584   00FDC4  F7                 	db	247
  1585   00FDC5  00                 	db	0
  1586   00FDC6  FF                 	db	255
  1587   00FDC7  FF                 	db	255
  1588   00FDC8  00                 	db	0
  1589   00FDC9  00                 	db	0
  1590   00FDCA  00                 	db	0
  1591   00FDCB  FF                 	db	255
  1592   00FDCC  FF                 	db	255
  1593   00FDCD  00                 	db	0
  1594   00FDCE  FF                 	db	255
  1595   00FDCF  FF                 	db	255
  1596   00FDD0  00                 	db	0
  1597   00FDD1  14                 	db	20
  1598   00FDD2  14                 	db	20
  1599   00FDD3  F4                 	db	244
  1600   00FDD4  F4                 	db	244
  1601   00FDD5  04                 	db	4
  1602   00FDD6  FC                 	db	252
  1603   00FDD7  FC                 	db	252
  1604   00FDD8  00                 	db	0
  1605   00FDD9  14                 	db	20
  1606   00FDDA  14                 	db	20
  1607   00FDDB  17                 	db	23
  1608   00FDDC  17                 	db	23
  1609   00FDDD  10                 	db	16
  1610   00FDDE  1F                 	db	31
  1611   00FDDF  1F                 	db	31
  1612   00FDE0  00                 	db	0
  1613   00FDE1  10                 	db	16
  1614   00FDE2  10                 	db	16
  1615   00FDE3  1F                 	db	31
  1616   00FDE4  1F                 	db	31
  1617   00FDE5  10                 	db	16
  1618   00FDE6  1F                 	db	31
  1619   00FDE7  1F                 	db	31
  1620   00FDE8  00                 	db	0
  1621   00FDE9  14                 	db	20
  1622   00FDEA  14                 	db	20
  1623   00FDEB  14                 	db	20
  1624   00FDEC  1F                 	db	31
  1625   00FDED  1F                 	db	31
  1626   00FDEE  00                 	db	0
  1627   00FDEF  00                 	db	0
  1628   00FDF0  00                 	db	0
  1629   00FDF1  10                 	db	16
  1630   00FDF2  10                 	db	16
  1631   00FDF3  10                 	db	16
  1632   00FDF4  F0                 	db	240
  1633   00FDF5  F0                 	db	240
  1634   00FDF6  00                 	db	0
  1635   00FDF7  00                 	db	0
  1636   00FDF8  00                 	db	0
  1637   00FDF9  00                 	db	0
  1638   00FDFA  00                 	db	0
  1639   00FDFB  00                 	db	0
  1640   00FDFC  1F                 	db	31
  1641   00FDFD  1F                 	db	31
  1642   00FDFE  10                 	db	16
  1643   00FDFF  10                 	db	16
  1644   00FE00  10                 	db	16
  1645   00FE01  10                 	db	16
  1646   00FE02  10                 	db	16
  1647   00FE03  10                 	db	16
  1648   00FE04  1F                 	db	31
  1649   00FE05  1F                 	db	31
  1650   00FE06  10                 	db	16
  1651   00FE07  10                 	db	16
  1652   00FE08  10                 	db	16
  1653   00FE09  10                 	db	16
  1654   00FE0A  10                 	db	16
  1655   00FE0B  10                 	db	16
  1656   00FE0C  F0                 	db	240
  1657   00FE0D  F0                 	db	240
  1658   00FE0E  10                 	db	16
  1659   00FE0F  10                 	db	16
  1660   00FE10  10                 	db	16
  1661   00FE11  00                 	db	0
  1662   00FE12  00                 	db	0
  1663   00FE13  00                 	db	0
  1664   00FE14  FF                 	db	255
  1665   00FE15  FF                 	db	255
  1666   00FE16  10                 	db	16
  1667   00FE17  10                 	db	16
  1668   00FE18  10                 	db	16
  1669   00FE19  10                 	db	16
  1670   00FE1A  10                 	db	16
  1671   00FE1B  10                 	db	16
  1672   00FE1C  10                 	db	16
  1673   00FE1D  10                 	db	16
  1674   00FE1E  10                 	db	16
  1675   00FE1F  10                 	db	16
  1676   00FE20  10                 	db	16
  1677   00FE21  10                 	db	16
  1678   00FE22  10                 	db	16
  1679   00FE23  10                 	db	16
  1680   00FE24  FF                 	db	255
  1681   00FE25  FF                 	db	255
  1682   00FE26  10                 	db	16
  1683   00FE27  10                 	db	16
  1684   00FE28  10                 	db	16
  1685   00FE29  00                 	db	0
  1686   00FE2A  00                 	db	0
  1687   00FE2B  00                 	db	0
  1688   00FE2C  FF                 	db	255
  1689   00FE2D  FF                 	db	255
  1690   00FE2E  14                 	db	20
  1691   00FE2F  14                 	db	20
  1692   00FE30  14                 	db	20
  1693   00FE31  00                 	db	0
  1694   00FE32  00                 	db	0
  1695   00FE33  FF                 	db	255
  1696   00FE34  FF                 	db	255
  1697   00FE35  00                 	db	0
  1698   00FE36  FF                 	db	255
  1699   00FE37  FF                 	db	255
  1700   00FE38  10                 	db	16
  1701   00FE39  00                 	db	0
  1702   00FE3A  00                 	db	0
  1703   00FE3B  1F                 	db	31
  1704   00FE3C  1F                 	db	31
  1705   00FE3D  10                 	db	16
  1706   00FE3E  17                 	db	23
  1707   00FE3F  17                 	db	23
  1708   00FE40  14                 	db	20
  1709   00FE41  00                 	db	0
  1710   00FE42  00                 	db	0
  1711   00FE43  FC                 	db	252
  1712   00FE44  FC                 	db	252
  1713   00FE45  04                 	db	4
  1714   00FE46  F4                 	db	244
  1715   00FE47  F4                 	db	244
  1716   00FE48  14                 	db	20
  1717   00FE49  14                 	db	20
  1718   00FE4A  14                 	db	20
  1719   00FE4B  17                 	db	23
  1720   00FE4C  17                 	db	23
  1721   00FE4D  10                 	db	16
  1722   00FE4E  17                 	db	23
  1723   00FE4F  17                 	db	23
  1724   00FE50  14                 	db	20
  1725   00FE51  14                 	db	20
  1726   00FE52  14                 	db	20
  1727   00FE53  F4                 	db	244
  1728   00FE54  F4                 	db	244
  1729   00FE55  04                 	db	4
  1730   00FE56  F4                 	db	244
  1731   00FE57  F4                 	db	244
  1732   00FE58  14                 	db	20
  1733   00FE59  00                 	db	0
  1734   00FE5A  00                 	db	0
  1735   00FE5B  FF                 	db	255
  1736   00FE5C  FF                 	db	255
  1737   00FE5D  00                 	db	0
  1738   00FE5E  F7                 	db	247
  1739   00FE5F  F7                 	db	247
  1740   00FE60  14                 	db	20
  1741   00FE61  14                 	db	20
  1742   00FE62  14                 	db	20
  1743   00FE63  14                 	db	20
  1744   00FE64  14                 	db	20
  1745   00FE65  14                 	db	20
  1746   00FE66  14                 	db	20
  1747   00FE67  14                 	db	20
  1748   00FE68  14                 	db	20
  1749   00FE69  14                 	db	20
  1750   00FE6A  14                 	db	20
  1751   00FE6B  F7                 	db	247
  1752   00FE6C  F7                 	db	247
  1753   00FE6D  00                 	db	0
  1754   00FE6E  F7                 	db	247
  1755   00FE6F  F7                 	db	247
  1756   00FE70  14                 	db	20
  1757   00FE71  14                 	db	20
  1758   00FE72  14                 	db	20
  1759   00FE73  14                 	db	20
  1760   00FE74  17                 	db	23
  1761   00FE75  17                 	db	23
  1762   00FE76  14                 	db	20
  1763   00FE77  14                 	db	20
  1764   00FE78  14                 	db	20
  1765   00FE79  10                 	db	16
  1766   00FE7A  10                 	db	16
  1767   00FE7B  1F                 	db	31
  1768   00FE7C  1F                 	db	31
  1769   00FE7D  10                 	db	16
  1770   00FE7E  1F                 	db	31
  1771   00FE7F  1F                 	db	31
  1772   00FE80  10                 	db	16
  1773   00FE81  14                 	db	20
  1774   00FE82  14                 	db	20
  1775   00FE83  14                 	db	20
  1776   00FE84  F4                 	db	244
  1777   00FE85  F4                 	db	244
  1778   00FE86  14                 	db	20
  1779   00FE87  14                 	db	20
  1780   00FE88  14                 	db	20
  1781   00FE89  10                 	db	16
  1782   00FE8A  10                 	db	16
  1783   00FE8B  F0                 	db	240
  1784   00FE8C  F0                 	db	240
  1785   00FE8D  10                 	db	16
  1786   00FE8E  F0                 	db	240
  1787   00FE8F  F0                 	db	240
  1788   00FE90  10                 	db	16
  1789   00FE91  00                 	db	0
  1790   00FE92  00                 	db	0
  1791   00FE93  1F                 	db	31
  1792   00FE94  1F                 	db	31
  1793   00FE95  10                 	db	16
  1794   00FE96  1F                 	db	31
  1795   00FE97  1F                 	db	31
  1796   00FE98  10                 	db	16
  1797   00FE99  00                 	db	0
  1798   00FE9A  00                 	db	0
  1799   00FE9B  00                 	db	0
  1800   00FE9C  1F                 	db	31
  1801   00FE9D  1F                 	db	31
  1802   00FE9E  14                 	db	20
  1803   00FE9F  14                 	db	20
  1804   00FEA0  14                 	db	20
  1805   00FEA1  00                 	db	0
  1806   00FEA2  00                 	db	0
  1807   00FEA3  00                 	db	0
  1808   00FEA4  FC                 	db	252
  1809   00FEA5  FC                 	db	252
  1810   00FEA6  14                 	db	20
  1811   00FEA7  14                 	db	20
  1812   00FEA8  14                 	db	20
  1813   00FEA9  00                 	db	0
  1814   00FEAA  00                 	db	0
  1815   00FEAB  F0                 	db	240
  1816   00FEAC  F0                 	db	240
  1817   00FEAD  10                 	db	16
  1818   00FEAE  F0                 	db	240
  1819   00FEAF  F0                 	db	240
  1820   00FEB0  10                 	db	16
  1821   00FEB1  10                 	db	16
  1822   00FEB2  10                 	db	16
  1823   00FEB3  FF                 	db	255
  1824   00FEB4  FF                 	db	255
  1825   00FEB5  10                 	db	16
  1826   00FEB6  FF                 	db	255
  1827   00FEB7  FF                 	db	255
  1828   00FEB8  10                 	db	16
  1829   00FEB9  14                 	db	20
  1830   00FEBA  14                 	db	20
  1831   00FEBB  14                 	db	20
  1832   00FEBC  FF                 	db	255
  1833   00FEBD  FF                 	db	255
  1834   00FEBE  14                 	db	20
  1835   00FEBF  14                 	db	20
  1836   00FEC0  14                 	db	20
  1837   00FEC1  10                 	db	16
  1838   00FEC2  10                 	db	16
  1839   00FEC3  10                 	db	16
  1840   00FEC4  1F                 	db	31
  1841   00FEC5  1F                 	db	31
  1842   00FEC6  00                 	db	0
  1843   00FEC7  00                 	db	0
  1844   00FEC8  00                 	db	0
  1845   00FEC9  00                 	db	0
  1846   00FECA  00                 	db	0
  1847   00FECB  00                 	db	0
  1848   00FECC  F0                 	db	240
  1849   00FECD  F0                 	db	240
  1850   00FECE  10                 	db	16
  1851   00FECF  10                 	db	16
  1852   00FED0  10                 	db	16
  1853   00FED1  FF                 	db	255
  1854   00FED2  FF                 	db	255
  1855   00FED3  FF                 	db	255
  1856   00FED4  FF                 	db	255
  1857   00FED5  FF                 	db	255
  1858   00FED6  FF                 	db	255
  1859   00FED7  FF                 	db	255
  1860   00FED8  FF                 	db	255
  1861   00FED9  F0                 	db	240
  1862   00FEDA  F0                 	db	240
  1863   00FEDB  F0                 	db	240
  1864   00FEDC  F0                 	db	240
  1865   00FEDD  F0                 	db	240
  1866   00FEDE  F0                 	db	240
  1867   00FEDF  F0                 	db	240
  1868   00FEE0  F0                 	db	240
  1869   00FEE1  FF                 	db	255
  1870   00FEE2  FF                 	db	255
  1871   00FEE3  FF                 	db	255
  1872   00FEE4  FF                 	db	255
  1873   00FEE5  00                 	db	0
  1874   00FEE6  00                 	db	0
  1875   00FEE7  00                 	db	0
  1876   00FEE8  00                 	db	0
  1877   00FEE9  00                 	db	0
  1878   00FEEA  00                 	db	0
  1879   00FEEB  00                 	db	0
  1880   00FEEC  00                 	db	0
  1881   00FEED  FF                 	db	255
  1882   00FEEE  FF                 	db	255
  1883   00FEEF  FF                 	db	255
  1884   00FEF0  FF                 	db	255
  1885   00FEF1  0F                 	db	15
  1886   00FEF2  0F                 	db	15
  1887   00FEF3  0F                 	db	15
  1888   00FEF4  0F                 	db	15
  1889   00FEF5  0F                 	db	15
  1890   00FEF6  0F                 	db	15
  1891   00FEF7  0F                 	db	15
  1892   00FEF8  0F                 	db	15
  1893   00FEF9  38                 	db	56
  1894   00FEFA  7C                 	db	124
  1895   00FEFB  44                 	db	68
  1896   00FEFC  6C                 	db	108
  1897   00FEFD  38                 	db	56
  1898   00FEFE  6C                 	db	108
  1899   00FEFF  44                 	db	68
  1900   00FF00  00                 	db	0
  1901   00FF01  FC                 	db	252
  1902   00FF02  FE                 	db	254
  1903   00FF03  2A                 	db	42
  1904   00FF04  2A                 	db	42
  1905   00FF05  3E                 	db	62
  1906   00FF06  14                 	db	20
  1907   00FF07  00                 	db	0
  1908   00FF08  00                 	db	0
  1909   00FF09  7E                 	db	126
  1910   00FF0A  7E                 	db	126
  1911   00FF0B  02                 	db	2
  1912   00FF0C  02                 	db	2
  1913   00FF0D  06                 	db	6
  1914   00FF0E  06                 	db	6
  1915   00FF0F  00                 	db	0
  1916   00FF10  00                 	db	0
  1917   00FF11  02                 	db	2
  1918   00FF12  7E                 	db	126
  1919   00FF13  7E                 	db	126
  1920   00FF14  02                 	db	2
  1921   00FF15  7E                 	db	126
  1922   00FF16  7E                 	db	126
  1923   00FF17  02                 	db	2
  1924   00FF18  00                 	db	0
  1925   00FF19  63                 	db	99
  1926   00FF1A  77                 	db	119
  1927   00FF1B  5D                 	db	93
  1928   00FF1C  49                 	db	73
  1929   00FF1D  63                 	db	99
  1930   00FF1E  63                 	db	99
  1931   00FF1F  00                 	db	0
  1932   00FF20  00                 	db	0
  1933   00FF21  38                 	db	56
  1934   00FF22  7C                 	db	124
  1935   00FF23  44                 	db	68
  1936   00FF24  7C                 	db	124
  1937   00FF25  3C                 	db	60
  1938   00FF26  04                 	db	4
  1939   00FF27  04                 	db	4
  1940   00FF28  00                 	db	0
  1941   00FF29  80                 	db	128
  1942   00FF2A  FE                 	db	254
  1943   00FF2B  7E                 	db	126
  1944   00FF2C  20                 	db	32
  1945   00FF2D  20                 	db	32
  1946   00FF2E  3E                 	db	62
  1947   00FF2F  1E                 	db	30
  1948   00FF30  00                 	db	0
  1949   00FF31  04                 	db	4
  1950   00FF32  06                 	db	6
  1951   00FF33  02                 	db	2
  1952   00FF34  7E                 	db	126
  1953   00FF35  7C                 	db	124
  1954   00FF36  06                 	db	6
  1955   00FF37  02                 	db	2
  1956   00FF38  00                 	db	0
  1957   00FF39  99                 	db	153
  1958   00FF3A  BD                 	db	189
  1959   00FF3B  E7                 	db	231
  1960   00FF3C  E7                 	db	231
  1961   00FF3D  BD                 	db	189
  1962   00FF3E  99                 	db	153
  1963   00FF3F  00                 	db	0
  1964   00FF40  00                 	db	0
  1965   00FF41  1C                 	db	28
  1966   00FF42  3E                 	db	62
  1967   00FF43  6B                 	db	107
  1968   00FF44  49                 	db	73
  1969   00FF45  6B                 	db	107
  1970   00FF46  3E                 	db	62
  1971   00FF47  1C                 	db	28
  1972   00FF48  00                 	db	0
  1973   00FF49  4C                 	db	76
  1974   00FF4A  7E                 	db	126
  1975   00FF4B  73                 	db	115
  1976   00FF4C  01                 	db	1
  1977   00FF4D  73                 	db	115
  1978   00FF4E  7E                 	db	126
  1979   00FF4F  4C                 	db	76
  1980   00FF50  00                 	db	0
  1981   00FF51  30                 	db	48
  1982   00FF52  78                 	db	120
  1983   00FF53  4A                 	db	74
  1984   00FF54  4F                 	db	79
  1985   00FF55  7D                 	db	125
  1986   00FF56  39                 	db	57
  1987   00FF57  00                 	db	0
  1988   00FF58  00                 	db	0
  1989   00FF59  18                 	db	24
  1990   00FF5A  3C                 	db	60
  1991   00FF5B  24                 	db	36
  1992   00FF5C  3C                 	db	60
  1993   00FF5D  3C                 	db	60
  1994   00FF5E  24                 	db	36
  1995   00FF5F  3C                 	db	60
  1996   00FF60  18                 	db	24
  1997   00FF61  98                 	db	152
  1998   00FF62  FC                 	db	252
  1999   00FF63  64                 	db	100
  2000   00FF64  3C                 	db	60
  2001   00FF65  3E                 	db	62
  2002   00FF66  27                 	db	39
  2003   00FF67  3D                 	db	61
  2004   00FF68  18                 	db	24
  2005   00FF69  1C                 	db	28
  2006   00FF6A  3E                 	db	62
  2007   00FF6B  6B                 	db	107
  2008   00FF6C  49                 	db	73
  2009   00FF6D  49                 	db	73
  2010   00FF6E  00                 	db	0
  2011   00FF6F  00                 	db	0
  2012   00FF70  00                 	db	0
  2013   00FF71  7E                 	db	126
  2014   00FF72  7F                 	db	127
  2015   00FF73  01                 	db	1
  2016   00FF74  01                 	db	1
  2017   00FF75  7F                 	db	127
  2018   00FF76  7E                 	db	126
  2019   00FF77  00                 	db	0
  2020   00FF78  00                 	db	0
  2021   00FF79  2A                 	db	42
  2022   00FF7A  2A                 	db	42
  2023   00FF7B  2A                 	db	42
  2024   00FF7C  2A                 	db	42
  2025   00FF7D  2A                 	db	42
  2026   00FF7E  2A                 	db	42
  2027   00FF7F  00                 	db	0
  2028   00FF80  00                 	db	0
  2029   00FF81  44                 	db	68
  2030   00FF82  44                 	db	68
  2031   00FF83  5F                 	db	95
  2032   00FF84  5F                 	db	95
  2033   00FF85  44                 	db	68
  2034   00FF86  44                 	db	68
  2035   00FF87  00                 	db	0
  2036   00FF88  00                 	db	0
  2037   00FF89  40                 	db	64
  2038   00FF8A  51                 	db	81
  2039   00FF8B  5B                 	db	91
  2040   00FF8C  4E                 	db	78
  2041   00FF8D  44                 	db	68
  2042   00FF8E  40                 	db	64
  2043   00FF8F  00                 	db	0
  2044   00FF90  00                 	db	0
  2045   00FF91  40                 	db	64
  2046   00FF92  44                 	db	68
  2047   00FF93  4E                 	db	78
  2048   00FF94  5B                 	db	91
  2049   00FF95  51                 	db	81
  2050   00FF96  40                 	db	64
  2051   00FF97  00                 	db	0
  2052   00FF98  00                 	db	0
  2053   00FF99  00                 	db	0
  2054   00FF9A  00                 	db	0
  2055   00FF9B  00                 	db	0
  2056   00FF9C  FE                 	db	254
  2057   00FF9D  FF                 	db	255
  2058   00FF9E  01                 	db	1
  2059   00FF9F  07                 	db	7
  2060   00FFA0  06                 	db	6
  2061   00FFA1  60                 	db	96
  2062   00FFA2  E0                 	db	224
  2063   00FFA3  80                 	db	128
  2064   00FFA4  FF                 	db	255
  2065   00FFA5  7F                 	db	127
  2066   00FFA6  00                 	db	0
  2067   00FFA7  00                 	db	0
  2068   00FFA8  00                 	db	0
  2069   00FFA9  08                 	db	8
  2070   00FFAA  08                 	db	8
  2071   00FFAB  6B                 	db	107
  2072   00FFAC  6B                 	db	107
  2073   00FFAD  08                 	db	8
  2074   00FFAE  08                 	db	8
  2075   00FFAF  00                 	db	0
  2076   00FFB0  00                 	db	0
  2077   00FFB1  24                 	db	36
  2078   00FFB2  36                 	db	54
  2079   00FFB3  12                 	db	18
  2080   00FFB4  36                 	db	54
  2081   00FFB5  24                 	db	36
  2082   00FFB6  36                 	db	54
  2083   00FFB7  12                 	db	18
  2084   00FFB8  00                 	db	0
  2085   00FFB9  00                 	db	0
  2086   00FFBA  06                 	db	6
  2087   00FFBB  0F                 	db	15
  2088   00FFBC  09                 	db	9
  2089   00FFBD  0F                 	db	15
  2090   00FFBE  06                 	db	6
  2091   00FFBF  00                 	db	0
  2092   00FFC0  00                 	db	0
  2093   00FFC1  00                 	db	0
  2094   00FFC2  00                 	db	0
  2095   00FFC3  00                 	db	0
  2096   00FFC4  18                 	db	24
  2097   00FFC5  18                 	db	24
  2098   00FFC6  00                 	db	0
  2099   00FFC7  00                 	db	0
  2100   00FFC8  00                 	db	0
  2101   00FFC9  00                 	db	0
  2102   00FFCA  00                 	db	0
  2103   00FFCB  00                 	db	0
  2104   00FFCC  10                 	db	16
  2105   00FFCD  10                 	db	16
  2106   00FFCE  00                 	db	0
  2107   00FFCF  00                 	db	0
  2108   00FFD0  00                 	db	0
  2109   00FFD1  10                 	db	16
  2110   00FFD2  30                 	db	48
  2111   00FFD3  70                 	db	112
  2112   00FFD4  C0                 	db	192
  2113   00FFD5  FF                 	db	255
  2114   00FFD6  FF                 	db	255
  2115   00FFD7  01                 	db	1
  2116   00FFD8  01                 	db	1
  2117   00FFD9  00                 	db	0
  2118   00FFDA  1F                 	db	31
  2119   00FFDB  1F                 	db	31
  2120   00FFDC  01                 	db	1
  2121   00FFDD  1F                 	db	31
  2122   00FFDE  1E                 	db	30
  2123   00FFDF  00                 	db	0
  2124   00FFE0  00                 	db	0
  2125   00FFE1  00                 	db	0
  2126   00FFE2  19                 	db	25
  2127   00FFE3  1D                 	db	29
  2128   00FFE4  17                 	db	23
  2129   00FFE5  12                 	db	18
  2130   00FFE6  00                 	db	0
  2131   00FFE7  00                 	db	0
  2132   00FFE8  00                 	db	0
  2133   00FFE9  00                 	db	0
  2134   00FFEA  00                 	db	0
  2135   00FFEB  3C                 	db	60
  2136   00FFEC  3C                 	db	60
  2137   00FFED  3C                 	db	60
  2138   00FFEE  3C                 	db	60
  2139   00FFEF  00                 	db	0
  2140   00FFF0  00                 	db	0
  2141   00FFF1  00                 	db	0
  2142   00FFF2  00                 	db	0
  2143   00FFF3  00                 	db	0
  2144   00FFF4  00                 	db	0
  2145   00FFF5  00                 	db	0
  2146   00FFF6  00                 	db	0
  2147   00FFF7  00                 	db	0
  2148   00FFF8  00                 	db	0
  2149   00FFF9                     __end_of_MAX7219_Dot_Matrix_font:
  2150                           	callstack 0
  2151   000000                     _EEDATA	set	4008
  2152   000000                     _EEADR	set	4009
  2153   000000                     _EEADRH	set	4010
  2154   000000                     _EECON2	set	4007
  2155   000000                     _T2CON	set	4042
  2156   000000                     _PR2	set	4043
  2157   000000                     _RCREG	set	4014
  2158   000000                     _TXREG	set	4013
  2159   000000                     _SPBRG	set	4015
  2160   000000                     _TXSTA	set	4012
  2161   000000                     _OSCCON	set	4051
  2162   000000                     _SSPBUF	set	4041
  2163   000000                     _SSPADD	set	4040
  2164   00FFF9                     STR_1:
  2165   00FFF9  41                 	db	65	;'A'
  2166   00FFFA  4C                 	db	76	;'L'
  2167   00FFFB  41                 	db	65	;'A'
  2168   00FFFC  52                 	db	82	;'R'
  2169   00FFFD  4D                 	db	77	;'M'
  2170   00FFFE  00                 	db	0
  2171   00FFFF  00                 	db	0	; dummy byte at the end
  2172   000000                     
  2173                           	psect	nvBANK0
  2174   0000E3                     __pnvBANK0:
  2175                           	callstack 0
  2176   0000E3                     _EUSART_RxDefaultInterruptHandler:
  2177                           	callstack 0
  2178   0000E3                     	ds	2
  2179   0000E5                     _EUSART_TxDefaultInterruptHandler:
  2180                           	callstack 0
  2181   0000E5                     	ds	2
  2182   000000                     _LATCbits	set	3979
  2183   000000                     _T2CONbits	set	4042
  2184   000000                     _T0CONbits	set	4053
  2185   000000                     _RCSTAbits	set	4011
  2186   000000                     _TXSTAbits	set	4012
  2187   000000                     _SSPSTATbits	set	4039
  2188   000000                     _SSPCON1bits	set	4038
  2189   000000                     _WPUB	set	3964
  2190   000000                     _ANSEL	set	3966
  2191   000000                     _ANSELH	set	3967
  2192   000000                     _LATA	set	3977
  2193   000000                     _OSCTUNE	set	3995
  2194   000000                     _SSPCON1	set	4038
  2195   000000                     _SSPSTAT	set	4039
  2196   000000                     _T0CON	set	4053
  2197   000000                     _TMR0L	set	4054
  2198   000000                     _TMR0H	set	4055
  2199   000000                     _INTCON2bits	set	4081
  2200   000000                     _PIE1bits	set	3997
  2201   000000                     _TRISA	set	3986
  2202   000000                     _LATC	set	3979
  2203   000000                     _LATB	set	3978
  2204   000000                     _TRISC	set	3988
  2205   000000                     _TRISB	set	3987
  2206   000000                     _PORTBbits	set	3969
  2207   000000                     _TABLAT	set	4085
  2208   000000                     _TBLPTRL	set	4086
  2209   000000                     _TBLPTRH	set	4087
  2210   000000                     _TBLPTRU	set	4088
  2211   000000                     _INTCONbits	set	4082
  2212   000000                     _PIR2bits	set	4001
  2213   000000                     _EECON1bits	set	4006
  2214   000000                     _PIR1bits	set	3998
  2215   000000                     _RCSTA	set	4011
  2216   000000                     _BAUDCON	set	4024
  2217   000000                     _CCP2CON	set	4026
  2218   000000                     _SPBRGH	set	4016
  2219   000000                     _RCONbits	set	4048
  2220   000000                     _TMR2	set	4044
  2221   000000                     _CCPR2H	set	4028
  2222   000000                     _CCPR2L	set	4027
  2223                           
  2224                           ; #config settings
  2225                           
  2226                           	psect	cinit
  2227   000F92                     __pcinit:
  2228                           	callstack 0
  2229   000F92                     start_initialization:
  2230                           	callstack 0
  2231   000F92                     __initialization:
  2232                           	callstack 0
  2233                           
  2234                           ; Clear objects allocated to BANK0 (115 bytes)
  2235   000F92  EE00  F060         	lfsr	0,__pbssBANK0
  2236   000F96  0E73               	movlw	115
  2237   000F98                     clear_0:
  2238   000F98  6AEE               	clrf	postinc0,c
  2239   000F9A  06E8               	decf	wreg,f,c
  2240   000F9C  E1FD               	bnz	clear_0
  2241                           
  2242                           ; Clear objects allocated to COMRAM (3 bytes)
  2243   000F9E  6A5B               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2244   000FA0  6A5A               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2245   000FA2  6A59               	clrf	__pbssCOMRAM& (0+255),c
  2246   000FA4                     end_of_initialization:
  2247                           	callstack 0
  2248   000FA4                     __end_of__initialization:
  2249                           	callstack 0
  2250   000FA4  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2251   000FA6  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2252   000FA8  0100               	movlb	0
  2253   000FAA  EFDA  F002         	goto	_main	;jump to C main() function
  2254                           
  2255                           	psect	bssCOMRAM
  2256   000059                     __pbssCOMRAM:
  2257                           	callstack 0
  2258   000059                     _uartBufferIndex:
  2259                           	callstack 0
  2260   000059                     	ds	1
  2261   00005A                     _eusartTxTail:
  2262                           	callstack 0
  2263   00005A                     	ds	1
  2264   00005B                     _eusartTxHead:
  2265                           	callstack 0
  2266   00005B                     	ds	1
  2267                           
  2268                           	psect	bssBANK0
  2269   000060                     __pbssBANK0:
  2270                           	callstack 0
  2271   000060                     	ds	32
  2272   000080                     _bufferCol:
  2273                           	callstack 0
  2274   000080                     	ds	32
  2275   0000A0                     _uartBuffer:
  2276                           	callstack 0
  2277   0000A0                     	ds	10
  2278   0000AA                     _eusartRxBuffer:
  2279                           	callstack 0
  2280   0000AA                     	ds	8
  2281   0000B2                     _eusartTxBuffer:
  2282                           	callstack 0
  2283   0000B2                     	ds	8
  2284   0000BA                     checkButtons@button3HoldTime:
  2285                           	callstack 0
  2286   0000BA                     	ds	2
  2287   0000BC                     _button3PressTime:
  2288                           	callstack 0
  2289   0000BC                     	ds	2
  2290   0000BE                     _blinkTimer:
  2291                           	callstack 0
  2292   0000BE                     	ds	2
  2293   0000C0                     _timer0ReloadVal:
  2294                           	callstack 0
  2295   0000C0                     	ds	2
  2296   0000C2                     checkButtons@alarmSettingMode:
  2297                           	callstack 0
  2298   0000C2                     	ds	1
  2299   0000C3                     checkButtons@button3PressCount:
  2300                           	callstack 0
  2301   0000C3                     	ds	1
  2302   0000C4                     _btTimeSet:
  2303                           	callstack 0
  2304   0000C4                     	ds	1
  2305   0000C5                     _isButton3Pressed:
  2306                           	callstack 0
  2307   0000C5                     	ds	1
  2308   0000C6                     _displayBlinking:
  2309                           	callstack 0
  2310   0000C6                     	ds	1
  2311   0000C7                     _alarmTriggered:
  2312                           	callstack 0
  2313   0000C7                     	ds	1
  2314   0000C8                     _alarmActive:
  2315                           	callstack 0
  2316   0000C8                     	ds	1
  2317   0000C9                     _alarmSet:
  2318                           	callstack 0
  2319   0000C9                     	ds	1
  2320   0000CA                     _alarmMinutes:
  2321                           	callstack 0
  2322   0000CA                     	ds	1
  2323   0000CB                     _alarmHours:
  2324                           	callstack 0
  2325   0000CB                     	ds	1
  2326   0000CC                     _seconds:
  2327                           	callstack 0
  2328   0000CC                     	ds	1
  2329   0000CD                     _minutes:
  2330                           	callstack 0
  2331   0000CD                     	ds	1
  2332   0000CE                     _hours:
  2333                           	callstack 0
  2334   0000CE                     	ds	1
  2335   0000CF                     _eusartRxCount:
  2336                           	callstack 0
  2337   0000CF                     	ds	1
  2338   0000D0                     _eusartRxTail:
  2339                           	callstack 0
  2340   0000D0                     	ds	1
  2341   0000D1                     _eusartRxHead:
  2342                           	callstack 0
  2343   0000D1                     	ds	1
  2344   0000D2                     _eusartTxBufferRemaining:
  2345                           	callstack 0
  2346   0000D2                     	ds	1
  2347                           
  2348                           	psect	cstackBANK1
  2349   000100                     __pcstackBANK1:
  2350                           	callstack 0
  2351   000100                     saveTimeToFlash@flashBuffer:
  2352                           	callstack 0
  2353                           
  2354                           ; 64 bytes @ 0x0
  2355   000100                     	ds	64
  2356   000140                     saveTimeToFlash@flashAddress:
  2357                           	callstack 0
  2358                           
  2359                           ; 4 bytes @ 0x40
  2360   000140                     	ds	4
  2361   000144                     saveTimeToFlash@i:
  2362                           	callstack 0
  2363                           
  2364                           ; 1 bytes @ 0x44
  2365   000144                     	ds	1
  2366                           
  2367                           	psect	cstackBANK0
  2368   0000D3                     __pcstackBANK0:
  2369                           	callstack 0
  2370   0000D3                     ??_triggerAlarm:
  2371   0000D3                     displayTime@displayString:
  2372                           	callstack 0
  2373   0000D3                     displayAlarmTime@displayString:
  2374                           	callstack 0
  2375                           
  2376                           ; 5 bytes @ 0x0
  2377   0000D3                     	ds	2
  2378   0000D5                     triggerAlarm@numCycles:
  2379                           	callstack 0
  2380                           
  2381                           ; 2 bytes @ 0x2
  2382   0000D5                     	ds	2
  2383   0000D7                     triggerAlarm@i:
  2384                           	callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x4
  2387   0000D7                     	ds	1
  2388   0000D8                     displayTime@timeString:
  2389                           	callstack 0
  2390   0000D8                     displayAlarmTime@alarmTimeString:
  2391                           	callstack 0
  2392                           
  2393                           ; 5 bytes @ 0x5
  2394   0000D8                     	ds	5
  2395   0000DD                     displayTime@i:
  2396                           	callstack 0
  2397   0000DD                     displayAlarmTime@i:
  2398                           	callstack 0
  2399                           
  2400                           ; 2 bytes @ 0xA
  2401   0000DD                     	ds	2
  2402   0000DF                     ??_checkButtons:
  2403                           
  2404                           ; 1 bytes @ 0xC
  2405   0000DF                     	ds	2
  2406   0000E1                     main@hours_pom:
  2407                           	callstack 0
  2408                           
  2409                           ; 1 bytes @ 0xE
  2410   0000E1                     	ds	1
  2411   0000E2                     main@minutes_pom:
  2412                           	callstack 0
  2413                           
  2414                           ; 1 bytes @ 0xF
  2415   0000E2                     	ds	1
  2416                           
  2417                           	psect	cstackCOMRAM
  2418   000001                     __pcstackCOMRAM:
  2419                           	callstack 0
  2420   000001                     btGetData@rcv:
  2421                           	callstack 0
  2422                           
  2423                           ; 1 bytes @ 0x0
  2424   000001                     	ds	1
  2425   000002                     ??_INTERRUPT_InterruptManager:
  2426                           
  2427                           ; 1 bytes @ 0x1
  2428   000002                     	ds	2
  2429   000004                     ??_TMR0_Initialize:
  2430   000004                     ?___awdiv:
  2431                           	callstack 0
  2432   000004                     ?___awmod:
  2433                           	callstack 0
  2434   000004                     SPI_Exchange8bit@data:
  2435                           	callstack 0
  2436   000004                     EUSART_SetTxInterruptHandler@handler:
  2437                           	callstack 0
  2438   000004                     EUSART_SetRxInterruptHandler@handler:
  2439                           	callstack 0
  2440   000004                     ___awdiv@dividend:
  2441                           	callstack 0
  2442   000004                     ___awmod@dividend:
  2443                           	callstack 0
  2444   000004                     FLASH_ReadByte@flashAddr:
  2445                           	callstack 0
  2446   000004                     FLASH_EraseBlock@baseAddr:
  2447                           	callstack 0
  2448                           
  2449                           ; 4 bytes @ 0x3
  2450   000004                     	ds	1
  2451   000005                     max7219_cmd@data:
  2452                           	callstack 0
  2453                           
  2454                           ; 1 bytes @ 0x4
  2455   000005                     	ds	1
  2456   000006                     ??_max7219_cmd:
  2457   000006                     ___awdiv@divisor:
  2458                           	callstack 0
  2459   000006                     ___awmod@divisor:
  2460                           	callstack 0
  2461                           
  2462                           ; 2 bytes @ 0x5
  2463   000006                     	ds	2
  2464   000008                     FLASH_EraseBlock@GIEBitValue:
  2465                           	callstack 0
  2466   000008                     max7219_cmd@Addr:
  2467                           	callstack 0
  2468   000008                     ___awdiv@counter:
  2469                           	callstack 0
  2470   000008                     ___awmod@counter:
  2471                           	callstack 0
  2472                           
  2473                           ; 1 bytes @ 0x7
  2474   000008                     	ds	1
  2475   000009                     ___awdiv@sign:
  2476                           	callstack 0
  2477   000009                     ___awmod@sign:
  2478                           	callstack 0
  2479   000009                     max7219_cmd@writeData:
  2480                           	callstack 0
  2481   000009                     FLASH_WriteBlock@writeAddr:
  2482                           	callstack 0
  2483                           
  2484                           ; 4 bytes @ 0x8
  2485   000009                     	ds	1
  2486   00000A                     ___awdiv@quotient:
  2487                           	callstack 0
  2488                           
  2489                           ; 2 bytes @ 0x9
  2490   00000A                     	ds	1
  2491   00000B                     max7219_cmd@i:
  2492                           	callstack 0
  2493                           
  2494                           ; 2 bytes @ 0xA
  2495   00000B                     	ds	1
  2496   00000C                     max_write@row:
  2497                           	callstack 0
  2498                           
  2499                           ; 2 bytes @ 0xB
  2500   00000C                     	ds	1
  2501   00000D                     FLASH_WriteBlock@flashWrBufPtr:
  2502                           	callstack 0
  2503                           
  2504                           ; 2 bytes @ 0xC
  2505   00000D                     	ds	1
  2506   00000E                     max_write@data:
  2507                           	callstack 0
  2508                           
  2509                           ; 1 bytes @ 0xD
  2510   00000E                     	ds	1
  2511   00000F                     ??_max_write:
  2512   00000F                     FLASH_WriteBlock@blockStartAddr:
  2513                           	callstack 0
  2514                           
  2515                           ; 4 bytes @ 0xE
  2516   00000F                     	ds	2
  2517   000011                     max_write@offset:
  2518                           	callstack 0
  2519                           
  2520                           ; 2 bytes @ 0x10
  2521   000011                     	ds	2
  2522   000013                     FLASH_WriteBlock@GIEBitValue:
  2523                           	callstack 0
  2524   000013                     max_write@devTarget:
  2525                           	callstack 0
  2526                           
  2527                           ; 2 bytes @ 0x12
  2528   000013                     	ds	1
  2529   000014                     FLASH_WriteBlock@j:
  2530                           	callstack 0
  2531                           
  2532                           ; 1 bytes @ 0x13
  2533   000014                     	ds	1
  2534   000015                     FLASH_WriteBlock@numberOfWriteBlocks:
  2535                           	callstack 0
  2536   000015                     max_write@dev:
  2537                           	callstack 0
  2538                           
  2539                           ; 2 bytes @ 0x14
  2540   000015                     	ds	1
  2541   000016                     FLASH_WriteBlock@dataCounter:
  2542                           	callstack 0
  2543                           
  2544                           ; 1 bytes @ 0x15
  2545   000016                     	ds	1
  2546   000017                     FLASH_WriteBlock@i:
  2547                           	callstack 0
  2548   000017                     max_write@writeData:
  2549                           	callstack 0
  2550                           
  2551                           ; 2 bytes @ 0x16
  2552   000017                     	ds	1
  2553   000018                     
  2554                           ; 1 bytes @ 0x17
  2555   000018                     	ds	1
  2556   000019                     ??_flushBuffer:
  2557                           
  2558                           ; 1 bytes @ 0x18
  2559   000019                     	ds	3
  2560   00001C                     flushBuffer@bufferRow:
  2561                           	callstack 0
  2562                           
  2563                           ; 32 bytes @ 0x1B
  2564   00001C                     	ds	32
  2565   00003C                     flushBuffer@dev:
  2566                           	callstack 0
  2567                           
  2568                           ; 2 bytes @ 0x3B
  2569   00003C                     	ds	2
  2570   00003E                     flushBuffer@j:
  2571                           	callstack 0
  2572                           
  2573                           ; 2 bytes @ 0x3D
  2574   00003E                     	ds	2
  2575   000040                     flushBuffer@row:
  2576                           	callstack 0
  2577                           
  2578                           ; 2 bytes @ 0x3F
  2579   000040                     	ds	2
  2580   000042                     flushBuffer@i:
  2581                           	callstack 0
  2582                           
  2583                           ; 2 bytes @ 0x41
  2584   000042                     	ds	2
  2585   000044                     clearDisplay@i:
  2586                           	callstack 0
  2587   000044                     printString@str:
  2588                           	callstack 0
  2589                           
  2590                           ; 2 bytes @ 0x43
  2591   000044                     	ds	2
  2592   000046                     ??_printString:
  2593                           
  2594                           ; 1 bytes @ 0x45
  2595   000046                     	ds	8
  2596   00004E                     printString@indx:
  2597                           	callstack 0
  2598                           
  2599                           ; 2 bytes @ 0x4D
  2600   00004E                     	ds	2
  2601   000050                     printString@data:
  2602                           	callstack 0
  2603                           
  2604                           ; 1 bytes @ 0x4F
  2605   000050                     	ds	1
  2606   000051                     printString@strindx:
  2607                           	callstack 0
  2608                           
  2609                           ; 2 bytes @ 0x50
  2610   000051                     	ds	2
  2611   000053                     printString@i:
  2612                           	callstack 0
  2613                           
  2614                           ; 2 bytes @ 0x52
  2615   000053                     	ds	2
  2616   000055                     printString@k:
  2617                           	callstack 0
  2618                           
  2619                           ; 2 bytes @ 0x54
  2620   000055                     	ds	2
  2621   000057                     printString@j:
  2622                           	callstack 0
  2623                           
  2624                           ; 2 bytes @ 0x56
  2625   000057                     	ds	2
  2626   000059                     
  2627                           ; 1 bytes @ 0x58
  2628 ;;
  2629 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2630 ;;
  2631 ;; *************** function _main *****************
  2632 ;; Defined at:
  2633 ;;		line 46 in file "main.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;		None
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  minutes_pom     1   15[BANK0 ] unsigned char 
  2638 ;;  hours_pom       1   14[BANK0 ] unsigned char 
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:        2 bytes
  2653 ;; Hardware stack levels required when called: 8
  2654 ;; This function calls:
  2655 ;;		_SYSTEM_Initialize
  2656 ;;		_TMR0_HasOverflowOccured
  2657 ;;		_TMR0_Reload
  2658 ;;		_TMR0_StartTimer
  2659 ;;		_checkButtons
  2660 ;;		_clearDisplay
  2661 ;;		_displayTime
  2662 ;;		_loadTimeFromFlash
  2663 ;;		_matrixInit
  2664 ;;		_processAlarm
  2665 ;;		_saveTimeToFlash
  2666 ;; This function is called by:
  2667 ;;		Startup code after reset
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text0
  2672   0005B4                     __ptext0:
  2673                           	callstack 0
  2674   0005B4                     _main:
  2675                           	callstack 23
  2676   0005B4                     
  2677                           ;main.c: 48:     SYSTEM_Initialize();
  2678   0005B4  ECA7  F007         	call	_SYSTEM_Initialize	;wreg free
  2679                           
  2680                           ;main.c: 49:     matrixInit();
  2681   0005B8  EC5F  F007         	call	_matrixInit	;wreg free
  2682   0005BC                     
  2683                           ;main.c: 50:     clearDisplay();
  2684   0005BC  EC43  F007         	call	_clearDisplay	;wreg free
  2685   0005C0                     
  2686                           ;main.c: 51:     loadTimeFromFlash();
  2687   0005C0  EC9D  F006         	call	_loadTimeFromFlash	;wreg free
  2688   0005C4                     
  2689                           ;main.c: 53:     TMR0_StartTimer();
  2690   0005C4  EC29  F008         	call	_TMR0_StartTimer	;wreg free
  2691   0005C8                     
  2692                           ;main.c: 55:     INTCONbits.GIE = 1;
  2693   0005C8  8EF2               	bsf	242,7,c	;volatile
  2694   0005CA                     
  2695                           ;main.c: 56:     INTCONbits.PEIE = 1;
  2696   0005CA  8CF2               	bsf	242,6,c	;volatile
  2697   0005CC                     l3607:
  2698                           
  2699                           ;main.c: 60:     {;main.c: 61:         if(TMR0_HasOverflowOccured())
  2700   0005CC  ECE4  F007         	call	_TMR0_HasOverflowOccured	;wreg free
  2701   0005D0  0900               	iorlw	0
  2702   0005D2  B4D8               	btfsc	status,2,c
  2703   0005D4  EFEE  F002         	goto	u2931
  2704   0005D8  EFF0  F002         	goto	u2930
  2705   0005DC                     u2931:
  2706   0005DC  EF19  F003         	goto	l3633
  2707   0005E0                     u2930:
  2708   0005E0                     
  2709                           ;main.c: 62:         {;main.c: 63:             displayTime();
  2710   0005E0  EC05  F005         	call	_displayTime	;wreg free
  2711   0005E4                     
  2712                           ;main.c: 65:             seconds++;
  2713   0005E4  0100               	movlb	0	; () banked
  2714   0005E6  2BCC               	incf	_seconds& (0+255),f,b
  2715   0005E8                     
  2716                           ; BSR set to: 0
  2717                           ;main.c: 66:             if (seconds >= 60) {
  2718   0005E8  0E3B               	movlw	59
  2719   0005EA  65CC               	cpfsgt	_seconds& (0+255),b
  2720   0005EC  EFFA  F002         	goto	u2941
  2721   0005F0  EFFC  F002         	goto	u2940
  2722   0005F4                     u2941:
  2723   0005F4  EF14  F003         	goto	l3629
  2724   0005F8                     u2940:
  2725   0005F8                     
  2726                           ; BSR set to: 0
  2727                           ;main.c: 67:                 seconds = 0;
  2728   0005F8  0E00               	movlw	0
  2729   0005FA  6FCC               	movwf	_seconds& (0+255),b
  2730   0005FC                     
  2731                           ; BSR set to: 0
  2732                           ;main.c: 68:                 minutes++;
  2733   0005FC  2BCD               	incf	_minutes& (0+255),f,b
  2734   0005FE                     
  2735                           ; BSR set to: 0
  2736                           ;main.c: 69:                 if (minutes >= 60) {
  2737   0005FE  0E3B               	movlw	59
  2738   000600  65CD               	cpfsgt	_minutes& (0+255),b
  2739   000602  EF05  F003         	goto	u2951
  2740   000606  EF07  F003         	goto	u2950
  2741   00060A                     u2951:
  2742   00060A  EF14  F003         	goto	l3629
  2743   00060E                     u2950:
  2744   00060E                     
  2745                           ; BSR set to: 0
  2746                           ;main.c: 70:                     minutes = 0;
  2747   00060E  0E00               	movlw	0
  2748   000610  6FCD               	movwf	_minutes& (0+255),b
  2749   000612                     
  2750                           ; BSR set to: 0
  2751                           ;main.c: 71:                     hours++;
  2752   000612  2BCE               	incf	_hours& (0+255),f,b
  2753   000614                     
  2754                           ; BSR set to: 0
  2755                           ;main.c: 72:                     if (hours >= 24) {
  2756   000614  0E17               	movlw	23
  2757   000616  65CE               	cpfsgt	_hours& (0+255),b
  2758   000618  EF10  F003         	goto	u2961
  2759   00061C  EF12  F003         	goto	u2960
  2760   000620                     u2961:
  2761   000620  EF14  F003         	goto	l3629
  2762   000624                     u2960:
  2763   000624                     
  2764                           ; BSR set to: 0
  2765                           ;main.c: 73:                         hours = 0;
  2766   000624  0E00               	movlw	0
  2767   000626  6FCE               	movwf	_hours& (0+255),b
  2768   000628                     l3629:
  2769                           
  2770                           ; BSR set to: 0
  2771                           ;main.c: 77:             TMR0_Reload();
  2772   000628  EC14  F008         	call	_TMR0_Reload	;wreg free
  2773   00062C                     
  2774                           ;main.c: 78:             INTCONbits.TMR0IF = 0;
  2775   00062C  94F2               	bcf	242,2,c	;volatile
  2776                           
  2777                           ;main.c: 79:             TMR0_StartTimer();
  2778   00062E  EC29  F008         	call	_TMR0_StartTimer	;wreg free
  2779   000632                     l3633:
  2780                           
  2781                           ;main.c: 81:         displayTime();
  2782   000632  EC05  F005         	call	_displayTime	;wreg free
  2783   000636                     
  2784                           ;main.c: 82:         checkButtons();
  2785   000636  EC34  F000         	call	_checkButtons	;wreg free
  2786   00063A                     
  2787                           ;main.c: 83:         processAlarm();
  2788   00063A  ECCA  F006         	call	_processAlarm	;wreg free
  2789   00063E                     
  2790                           ;main.c: 84:         if(btTimeSet) {
  2791   00063E  0100               	movlb	0	; () banked
  2792   000640  51C4               	movf	_btTimeSet& (0+255),w,b
  2793   000642  B4D8               	btfsc	status,2,c
  2794   000644  EF26  F003         	goto	u2971
  2795   000648  EF28  F003         	goto	u2970
  2796   00064C                     u2971:
  2797   00064C  EFE6  F002         	goto	l3607
  2798   000650                     u2970:
  2799   000650                     
  2800                           ; BSR set to: 0
  2801                           ;main.c: 86:             if (uartBuffer[0] == 'H' && uartBuffer[3] == 'M' && uartBuffer[
      +                          6] == ';')
  2802   000650  0E48               	movlw	72
  2803   000652  19A0               	xorwf	_uartBuffer& (0+255),w,b
  2804   000654  A4D8               	btfss	status,2,c
  2805   000656  EF2F  F003         	goto	u2981
  2806   00065A  EF31  F003         	goto	u2980
  2807   00065E                     u2981:
  2808   00065E  EFE6  F002         	goto	l3607
  2809   000662                     u2980:
  2810   000662                     
  2811                           ; BSR set to: 0
  2812   000662  0E4D               	movlw	77
  2813   000664  19A3               	xorwf	(_uartBuffer+3)& (0+255),w,b
  2814   000666  A4D8               	btfss	status,2,c
  2815   000668  EF38  F003         	goto	u2991
  2816   00066C  EF3A  F003         	goto	u2990
  2817   000670                     u2991:
  2818   000670  EFE6  F002         	goto	l3607
  2819   000674                     u2990:
  2820   000674                     
  2821                           ; BSR set to: 0
  2822   000674  0E3B               	movlw	59
  2823   000676  19A6               	xorwf	(_uartBuffer+6)& (0+255),w,b
  2824   000678  A4D8               	btfss	status,2,c
  2825   00067A  EF41  F003         	goto	u3001
  2826   00067E  EF43  F003         	goto	u3000
  2827   000682                     u3001:
  2828   000682  EFE6  F002         	goto	l3607
  2829   000686                     u3000:
  2830   000686                     
  2831                           ; BSR set to: 0
  2832                           ;main.c: 87:             {;main.c: 89:                 uint8_t hours_pom = (uartBuffer[1
      +                          ] - '0') * 10 + (uartBuffer[2] - '0');
  2833   000686  51A1               	movf	(_uartBuffer+1)& (0+255),w,b
  2834   000688  0D0A               	mullw	10
  2835   00068A  50F3               	movf	243,w,c
  2836   00068C  25A2               	addwf	(_uartBuffer+2)& (0+255),w,b
  2837   00068E  0FF0               	addlw	240
  2838   000690  6FE1               	movwf	main@hours_pom& (0+255),b
  2839                           
  2840                           ;main.c: 92:                 uint8_t minutes_pom = (uartBuffer[4] - '0') * 10 + (uartBuf
      +                          fer[5] - '0');
  2841   000692  51A4               	movf	(_uartBuffer+4)& (0+255),w,b
  2842   000694  0D0A               	mullw	10
  2843   000696  50F3               	movf	243,w,c
  2844   000698  25A5               	addwf	(_uartBuffer+5)& (0+255),w,b
  2845   00069A  0FF0               	addlw	240
  2846   00069C  6FE2               	movwf	main@minutes_pom& (0+255),b
  2847   00069E                     
  2848                           ; BSR set to: 0
  2849                           ;main.c: 95:                 if (hours_pom < 24 && minutes_pom < 60)
  2850   00069E  0E18               	movlw	24
  2851   0006A0  61E1               	cpfslt	main@hours_pom& (0+255),b
  2852   0006A2  EF55  F003         	goto	u3011
  2853   0006A6  EF57  F003         	goto	u3010
  2854   0006AA                     u3011:
  2855   0006AA  EF6B  F003         	goto	l443
  2856   0006AE                     u3010:
  2857   0006AE                     
  2858                           ; BSR set to: 0
  2859   0006AE  0E3C               	movlw	60
  2860   0006B0  61E2               	cpfslt	main@minutes_pom& (0+255),b
  2861   0006B2  EF5D  F003         	goto	u3021
  2862   0006B6  EF5F  F003         	goto	u3020
  2863   0006BA                     u3021:
  2864   0006BA  EF6B  F003         	goto	l443
  2865   0006BE                     u3020:
  2866   0006BE                     
  2867                           ; BSR set to: 0
  2868                           ;main.c: 96:                 {;main.c: 98:                     btTimeSet = 0;
  2869   0006BE  0E00               	movlw	0
  2870   0006C0  6FC4               	movwf	_btTimeSet& (0+255),b
  2871   0006C2                     
  2872                           ; BSR set to: 0
  2873                           ;main.c: 99:                     hours = hours_pom;
  2874   0006C2  C0E1  F0CE         	movff	main@hours_pom,_hours
  2875   0006C6                     
  2876                           ; BSR set to: 0
  2877                           ;main.c: 100:                     minutes = minutes_pom;
  2878   0006C6  C0E2  F0CD         	movff	main@minutes_pom,_minutes
  2879   0006CA                     
  2880                           ; BSR set to: 0
  2881                           ;main.c: 101:                     displayTime();
  2882   0006CA  EC05  F005         	call	_displayTime	;wreg free
  2883   0006CE                     
  2884                           ;main.c: 102:                     saveTimeToFlash();
  2885   0006CE  EC60  F006         	call	_saveTimeToFlash	;wreg free
  2886   0006D2  EFE6  F002         	goto	l3607
  2887   0006D6                     l443:
  2888                           
  2889                           ; BSR set to: 0
  2890   0006D6  EFE6  F002         	goto	l3607
  2891   0006DA  EF32  F000         	goto	start
  2892   0006DE                     __end_of_main:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _processAlarm *****************
  2896 ;; Defined at:
  2897 ;;		line 150 in file "main.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;		None
  2900 ;; Auto vars:     Size  Location     Type
  2901 ;;		None
  2902 ;; Return value:  Size  Location     Type
  2903 ;;                  1    wreg      void 
  2904 ;; Registers used:
  2905 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2906 ;; Tracked objects:
  2907 ;;		On entry : 0/0
  2908 ;;		On exit  : 0/0
  2909 ;;		Unchanged: 0/0
  2910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2911 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2912 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2913 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;Total ram usage:        0 bytes
  2916 ;; Hardware stack levels used: 1
  2917 ;; Hardware stack levels required when called: 7
  2918 ;; This function calls:
  2919 ;;		_triggerAlarm
  2920 ;; This function is called by:
  2921 ;;		_main
  2922 ;; This function uses a non-reentrant model
  2923 ;;
  2924                           
  2925                           	psect	text1
  2926   000D94                     __ptext1:
  2927                           	callstack 0
  2928   000D94                     _processAlarm:
  2929                           	callstack 23
  2930   000D94                     
  2931                           ;main.c: 153:     if (alarmSet && !alarmTriggered)
  2932   000D94  0100               	movlb	0	; () banked
  2933   000D96  51C9               	movf	_alarmSet& (0+255),w,b
  2934   000D98  B4D8               	btfsc	status,2,c
  2935   000D9A  EFD1  F006         	goto	u2561
  2936   000D9E  EFD3  F006         	goto	u2560
  2937   000DA2                     u2561:
  2938   000DA2  EFF2  F006         	goto	l463
  2939   000DA6                     u2560:
  2940   000DA6                     
  2941                           ; BSR set to: 0
  2942   000DA6  51C7               	movf	_alarmTriggered& (0+255),w,b
  2943   000DA8  A4D8               	btfss	status,2,c
  2944   000DAA  EFD9  F006         	goto	u2571
  2945   000DAE  EFDB  F006         	goto	u2570
  2946   000DB2                     u2571:
  2947   000DB2  EFF2  F006         	goto	l463
  2948   000DB6                     u2570:
  2949   000DB6                     
  2950                           ; BSR set to: 0
  2951                           ;main.c: 154:     {;main.c: 156:         if (hours == alarmHours && minutes == alarmMinu
      +                          tes)
  2952   000DB6  51CB               	movf	_alarmHours& (0+255),w,b
  2953   000DB8  19CE               	xorwf	_hours& (0+255),w,b
  2954   000DBA  A4D8               	btfss	status,2,c
  2955   000DBC  EFE2  F006         	goto	u2581
  2956   000DC0  EFE4  F006         	goto	u2580
  2957   000DC4                     u2581:
  2958   000DC4  EFF2  F006         	goto	l463
  2959   000DC8                     u2580:
  2960   000DC8                     
  2961                           ; BSR set to: 0
  2962   000DC8  51CA               	movf	_alarmMinutes& (0+255),w,b
  2963   000DCA  19CD               	xorwf	_minutes& (0+255),w,b
  2964   000DCC  A4D8               	btfss	status,2,c
  2965   000DCE  EFEB  F006         	goto	u2591
  2966   000DD2  EFED  F006         	goto	u2590
  2967   000DD6                     u2591:
  2968   000DD6  EFF2  F006         	goto	l463
  2969   000DDA                     u2590:
  2970   000DDA                     
  2971                           ; BSR set to: 0
  2972                           ;main.c: 157:         {;main.c: 158:             triggerAlarm();
  2973   000DDA  ECA8  F004         	call	_triggerAlarm	;wreg free
  2974   000DDE                     
  2975                           ;main.c: 159:             alarmTriggered = 1;
  2976   000DDE  0E01               	movlw	1
  2977   000DE0  0100               	movlb	0	; () banked
  2978   000DE2  6FC7               	movwf	_alarmTriggered& (0+255),b
  2979   000DE4                     l463:
  2980                           
  2981                           ; BSR set to: 0
  2982   000DE4  0012               	return		;funcret
  2983   000DE6                     __end_of_processAlarm:
  2984                           	callstack 0
  2985                           
  2986 ;; *************** function _triggerAlarm *****************
  2987 ;; Defined at:
  2988 ;;		line 165 in file "main.c"
  2989 ;; Parameters:    Size  Location     Type
  2990 ;;		None
  2991 ;; Auto vars:     Size  Location     Type
  2992 ;;  i               2    4[BANK0 ] unsigned int 
  2993 ;;  numCycles       2    2[BANK0 ] unsigned int 
  2994 ;; Return value:  Size  Location     Type
  2995 ;;                  1    wreg      void 
  2996 ;; Registers used:
  2997 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2998 ;; Tracked objects:
  2999 ;;		On entry : 0/0
  3000 ;;		On exit  : 0/0
  3001 ;;		Unchanged: 0/0
  3002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3004 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3005 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;Total ram usage:        6 bytes
  3008 ;; Hardware stack levels used: 1
  3009 ;; Hardware stack levels required when called: 6
  3010 ;; This function calls:
  3011 ;;		_clearDisplay
  3012 ;;		_printString
  3013 ;; This function is called by:
  3014 ;;		_processAlarm
  3015 ;; This function uses a non-reentrant model
  3016 ;;
  3017                           
  3018                           	psect	text2
  3019   000950                     __ptext2:
  3020                           	callstack 0
  3021   000950                     _triggerAlarm:
  3022                           	callstack 23
  3023   000950                     
  3024                           ;main.c: 172:     unsigned int numCycles = 60000 / (2 * 500);
  3025   000950  0E00               	movlw	0
  3026   000952  0100               	movlb	0	; () banked
  3027   000954  6FD6               	movwf	(triggerAlarm@numCycles+1)& (0+255),b
  3028   000956  0E3C               	movlw	60
  3029   000958  6FD5               	movwf	triggerAlarm@numCycles& (0+255),b
  3030                           
  3031                           ;main.c: 174:     for (unsigned int i = 0; i < numCycles; i++)
  3032   00095A  0E00               	movlw	0
  3033   00095C  6FD8               	movwf	(triggerAlarm@i+1)& (0+255),b
  3034   00095E  0E00               	movlw	0
  3035   000960  6FD7               	movwf	triggerAlarm@i& (0+255),b
  3036   000962  EFF9  F004         	goto	l3229
  3037   000966                     l467:
  3038                           
  3039                           ; BSR set to: 0
  3040                           ;main.c: 175:     {;main.c: 177:         if (!PORTBbits.RB2)
  3041   000966  B481               	btfsc	129,2,c	;volatile
  3042   000968  EFB8  F004         	goto	u2361
  3043   00096C  EFBA  F004         	goto	u2360
  3044   000970                     u2361:
  3045   000970  EFD2  F004         	goto	l3219
  3046   000974                     u2360:
  3047   000974                     
  3048                           ; BSR set to: 0
  3049                           ;main.c: 178:         {;main.c: 179:             _delay((unsigned long)((100)*(8000000/4
      +                          000.0)));
  3050   000974  0E02               	movlw	2
  3051   000976  0100               	movlb	0	; () banked
  3052   000978  6FD4               	movwf	(??_triggerAlarm+1)& (0+255),b
  3053   00097A  0E04               	movlw	4
  3054   00097C  6FD3               	movwf	??_triggerAlarm& (0+255),b
  3055   00097E  0EBA               	movlw	186
  3056   000980                     u3037:
  3057   000980  2EE8               	decfsz	wreg,f,c
  3058   000982  D7FE               	bra	u3037
  3059   000984  2FD3               	decfsz	??_triggerAlarm& (0+255),f,b
  3060   000986  D7FC               	bra	u3037
  3061   000988  2FD4               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3062   00098A  D7FA               	bra	u3037
  3063   00098C  0000               	nop	
  3064   00098E                     
  3065                           ;main.c: 180:             if (!PORTBbits.RB2)
  3066   00098E  B481               	btfsc	129,2,c	;volatile
  3067   000990  EFCC  F004         	goto	u2371
  3068   000994  EFCE  F004         	goto	u2370
  3069   000998                     u2371:
  3070   000998  EFD2  F004         	goto	l3219
  3071   00099C                     u2370:
  3072   00099C                     
  3073                           ;main.c: 181:             {;main.c: 182:                 clearDisplay();
  3074   00099C  EC43  F007         	call	_clearDisplay	;wreg free
  3075   0009A0  EF04  F005         	goto	l470
  3076   0009A4                     l3219:
  3077                           
  3078                           ;main.c: 188:         printString("ALARM");
  3079   0009A4  0EF9               	movlw	low STR_1
  3080   0009A6  6E44               	movwf	printString@str^0,c
  3081   0009A8  0EFF               	movlw	high STR_1
  3082   0009AA  6E45               	movwf	(printString@str+1)^0,c
  3083   0009AC  EC7F  F001         	call	_printString	;wreg free
  3084   0009B0                     
  3085                           ;main.c: 189:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3086   0009B0  0E06               	movlw	6
  3087   0009B2  0100               	movlb	0	; () banked
  3088   0009B4  6FD4               	movwf	(??_triggerAlarm+1)& (0+255),b
  3089   0009B6  0E13               	movlw	19
  3090   0009B8  6FD3               	movwf	??_triggerAlarm& (0+255),b
  3091   0009BA  0EAD               	movlw	173
  3092   0009BC                     u3047:
  3093   0009BC  2EE8               	decfsz	wreg,f,c
  3094   0009BE  D7FE               	bra	u3047
  3095   0009C0  2FD3               	decfsz	??_triggerAlarm& (0+255),f,b
  3096   0009C2  D7FC               	bra	u3047
  3097   0009C4  2FD4               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3098   0009C6  D7FA               	bra	u3047
  3099   0009C8  F000 F000          	nop2	
  3100   0009CC                     
  3101                           ;main.c: 190:         clearDisplay();
  3102   0009CC  EC43  F007         	call	_clearDisplay	;wreg free
  3103   0009D0                     
  3104                           ;main.c: 191:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3105   0009D0  0E06               	movlw	6
  3106   0009D2  0100               	movlb	0	; () banked
  3107   0009D4  6FD4               	movwf	(??_triggerAlarm+1)& (0+255),b
  3108   0009D6  0E13               	movlw	19
  3109   0009D8  6FD3               	movwf	??_triggerAlarm& (0+255),b
  3110   0009DA  0EAD               	movlw	173
  3111   0009DC                     u3057:
  3112   0009DC  2EE8               	decfsz	wreg,f,c
  3113   0009DE  D7FE               	bra	u3057
  3114   0009E0  2FD3               	decfsz	??_triggerAlarm& (0+255),f,b
  3115   0009E2  D7FC               	bra	u3057
  3116   0009E4  2FD4               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3117   0009E6  D7FA               	bra	u3057
  3118   0009E8  F000 F000          	nop2	
  3119   0009EC                     
  3120                           ;main.c: 192:     }
  3121   0009EC  0100               	movlb	0	; () banked
  3122   0009EE  4BD7               	infsnz	triggerAlarm@i& (0+255),f,b
  3123   0009F0  2BD8               	incf	(triggerAlarm@i+1)& (0+255),f,b
  3124   0009F2                     l3229:
  3125                           
  3126                           ; BSR set to: 0
  3127   0009F2  51D5               	movf	triggerAlarm@numCycles& (0+255),w,b
  3128   0009F4  5DD7               	subwf	triggerAlarm@i& (0+255),w,b
  3129   0009F6  51D6               	movf	(triggerAlarm@numCycles+1)& (0+255),w,b
  3130   0009F8  59D8               	subwfb	(triggerAlarm@i+1)& (0+255),w,b
  3131   0009FA  A0D8               	btfss	status,0,c
  3132   0009FC  EF02  F005         	goto	u2381
  3133   000A00  EF04  F005         	goto	u2380
  3134   000A04                     u2381:
  3135   000A04  EFB3  F004         	goto	l467
  3136   000A08                     u2380:
  3137   000A08                     l470:
  3138   000A08  0012               	return		;funcret
  3139   000A0A                     __end_of_triggerAlarm:
  3140                           	callstack 0
  3141                           
  3142 ;; *************** function _clearDisplay *****************
  3143 ;; Defined at:
  3144 ;;		line 105 in file "MAX7219.c"
  3145 ;; Parameters:    Size  Location     Type
  3146 ;;		None
  3147 ;; Auto vars:     Size  Location     Type
  3148 ;;  i               2   67[COMRAM] int 
  3149 ;; Return value:  Size  Location     Type
  3150 ;;                  1    wreg      void 
  3151 ;; Registers used:
  3152 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3153 ;; Tracked objects:
  3154 ;;		On entry : 0/0
  3155 ;;		On exit  : 0/0
  3156 ;;		Unchanged: 0/0
  3157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3162 ;;Total ram usage:        2 bytes
  3163 ;; Hardware stack levels used: 1
  3164 ;; Hardware stack levels required when called: 5
  3165 ;; This function calls:
  3166 ;;		_flushBuffer
  3167 ;; This function is called by:
  3168 ;;		_main
  3169 ;;		_triggerAlarm
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text3
  3174   000E86                     __ptext3:
  3175                           	callstack 0
  3176   000E86                     _clearDisplay:
  3177                           	callstack 23
  3178   000E86                     
  3179                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  3180   000E86  0E00               	movlw	0
  3181   000E88  6E45               	movwf	(clearDisplay@i+1)^0,c
  3182   000E8A  0E00               	movlw	0
  3183   000E8C  6E44               	movwf	clearDisplay@i^0,c
  3184   000E8E                     l2459:
  3185                           
  3186                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  3187   000E8E  5044               	movf	clearDisplay@i^0,w,c
  3188   000E90  0F80               	addlw	low _bufferCol
  3189   000E92  6ED9               	movwf	fsr2l,c
  3190   000E94  6ADA               	clrf	fsr2h,c
  3191   000E96  6ADF               	clrf	indf2,c
  3192   000E98                     
  3193                           ;MAX7219.c: 110:  }
  3194   000E98  4A44               	infsnz	clearDisplay@i^0,f,c
  3195   000E9A  2A45               	incf	(clearDisplay@i+1)^0,f,c
  3196   000E9C  BE45               	btfsc	(clearDisplay@i+1)^0,7,c
  3197   000E9E  EF5A  F007         	goto	u1391
  3198   000EA2  5045               	movf	(clearDisplay@i+1)^0,w,c
  3199   000EA4  E109               	bnz	u1390
  3200   000EA6  0E1F               	movlw	31
  3201   000EA8  5C44               	subwf	clearDisplay@i^0,w,c
  3202   000EAA  A0D8               	btfss	status,0,c
  3203   000EAC  EF5A  F007         	goto	u1391
  3204   000EB0  EF5C  F007         	goto	u1390
  3205   000EB4                     u1391:
  3206   000EB4  EF47  F007         	goto	l2459
  3207   000EB8                     u1390:
  3208   000EB8                     
  3209                           ;MAX7219.c: 111:  flushBuffer();
  3210   000EB8  EC43  F002         	call	_flushBuffer	;wreg free
  3211   000EBC  0012               	return		;funcret
  3212   000EBE                     __end_of_clearDisplay:
  3213                           	callstack 0
  3214                           
  3215 ;; *************** function _matrixInit *****************
  3216 ;; Defined at:
  3217 ;;		line 96 in file "MAX7219.c"
  3218 ;; Parameters:    Size  Location     Type
  3219 ;;		None
  3220 ;; Auto vars:     Size  Location     Type
  3221 ;;		None
  3222 ;; Return value:  Size  Location     Type
  3223 ;;                  1    wreg      void 
  3224 ;; Registers used:
  3225 ;;		wreg, status,2, status,0, cstack
  3226 ;; Tracked objects:
  3227 ;;		On entry : 0/0
  3228 ;;		On exit  : 0/0
  3229 ;;		Unchanged: 0/0
  3230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3231 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3235 ;;Total ram usage:        0 bytes
  3236 ;; Hardware stack levels used: 1
  3237 ;; Hardware stack levels required when called: 4
  3238 ;; This function calls:
  3239 ;;		_max7219_cmd
  3240 ;; This function is called by:
  3241 ;;		_main
  3242 ;; This function uses a non-reentrant model
  3243 ;;
  3244                           
  3245                           	psect	text4
  3246   000EBE                     __ptext4:
  3247                           	callstack 0
  3248   000EBE                     _matrixInit:
  3249                           	callstack 26
  3250   000EBE                     
  3251                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  3252   000EBE  0E00               	movlw	0
  3253   000EC0  6E05               	movwf	max7219_cmd@data^0,c
  3254   000EC2  0E09               	movlw	9
  3255   000EC4  ECF3  F006         	call	_max7219_cmd
  3256                           
  3257                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  3258   000EC8  0E01               	movlw	1
  3259   000ECA  6E05               	movwf	max7219_cmd@data^0,c
  3260   000ECC  0E0A               	movlw	10
  3261   000ECE  ECF3  F006         	call	_max7219_cmd
  3262                           
  3263                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  3264   000ED2  0E07               	movlw	7
  3265   000ED4  6E05               	movwf	max7219_cmd@data^0,c
  3266   000ED6  0E0B               	movlw	11
  3267   000ED8  ECF3  F006         	call	_max7219_cmd
  3268                           
  3269                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  3270   000EDC  0E01               	movlw	1
  3271   000EDE  6E05               	movwf	max7219_cmd@data^0,c
  3272   000EE0  0E0C               	movlw	12
  3273   000EE2  ECF3  F006         	call	_max7219_cmd
  3274                           
  3275                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  3276   000EE6  0E00               	movlw	0
  3277   000EE8  6E05               	movwf	max7219_cmd@data^0,c
  3278   000EEA  0E0F               	movlw	15
  3279   000EEC  ECF3  F006         	call	_max7219_cmd
  3280   000EF0  0012               	return		;funcret
  3281   000EF2                     __end_of_matrixInit:
  3282                           	callstack 0
  3283                           
  3284 ;; *************** function _max7219_cmd *****************
  3285 ;; Defined at:
  3286 ;;		line 76 in file "MAX7219.c"
  3287 ;; Parameters:    Size  Location     Type
  3288 ;;  Addr            1    wreg     unsigned char 
  3289 ;;  data            1    4[COMRAM] unsigned char 
  3290 ;; Auto vars:     Size  Location     Type
  3291 ;;  Addr            1    7[COMRAM] unsigned char 
  3292 ;;  i               2   10[COMRAM] int 
  3293 ;;  writeData       2    8[COMRAM] unsigned short 
  3294 ;; Return value:  Size  Location     Type
  3295 ;;                  1    wreg      void 
  3296 ;; Registers used:
  3297 ;;		wreg, status,2, status,0, cstack
  3298 ;; Tracked objects:
  3299 ;;		On entry : 0/0
  3300 ;;		On exit  : 0/0
  3301 ;;		Unchanged: 0/0
  3302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3303 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3304 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3305 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3306 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3307 ;;Total ram usage:        8 bytes
  3308 ;; Hardware stack levels used: 1
  3309 ;; Hardware stack levels required when called: 3
  3310 ;; This function calls:
  3311 ;;		_SPI_Exchange8bit
  3312 ;; This function is called by:
  3313 ;;		_matrixInit
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           
  3317                           	psect	text5
  3318   000DE6                     __ptext5:
  3319                           	callstack 0
  3320   000DE6                     _max7219_cmd:
  3321                           	callstack 26
  3322                           
  3323                           ;incstack = 0
  3324                           ;max7219_cmd@Addr stored from wreg
  3325   000DE6  6E08               	movwf	max7219_cmd@Addr^0,c
  3326   000DE8                     
  3327                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  3328   000DE8  5005               	movf	max7219_cmd@data^0,w,c
  3329   000DEA  C008  F006         	movff	max7219_cmd@Addr,??_max7219_cmd
  3330   000DEE  6A07               	clrf	(??_max7219_cmd+1)^0,c
  3331   000DF0  C006  F007         	movff	??_max7219_cmd,??_max7219_cmd+1
  3332   000DF4  6A06               	clrf	??_max7219_cmd^0,c
  3333   000DF6  1006               	iorwf	??_max7219_cmd^0,w,c
  3334   000DF8  6E09               	movwf	max7219_cmd@writeData^0,c
  3335   000DFA  5007               	movf	(??_max7219_cmd+1)^0,w,c
  3336   000DFC  6E0A               	movwf	(max7219_cmd@writeData+1)^0,c
  3337   000DFE  948B               	bcf	139,2,c	;volatile
  3338   000E00                     
  3339                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  3340   000E00  0E00               	movlw	0
  3341   000E02  6E0C               	movwf	(max7219_cmd@i+1)^0,c
  3342   000E04  0E00               	movlw	0
  3343   000E06  6E0B               	movwf	max7219_cmd@i^0,c
  3344   000E08                     l2693:
  3345                           
  3346                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  3347   000E08  500A               	movf	(max7219_cmd@writeData+1)^0,w,c
  3348   000E0A  ECD7  F007         	call	_SPI_Exchange8bit
  3349                           
  3350                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  3351   000E0E  5009               	movf	max7219_cmd@writeData^0,w,c
  3352   000E10  ECD7  F007         	call	_SPI_Exchange8bit
  3353   000E14                     
  3354                           ;MAX7219.c: 90:  }
  3355   000E14  4A0B               	infsnz	max7219_cmd@i^0,f,c
  3356   000E16  2A0C               	incf	(max7219_cmd@i+1)^0,f,c
  3357   000E18  BE0C               	btfsc	(max7219_cmd@i+1)^0,7,c
  3358   000E1A  EF18  F007         	goto	u1621
  3359   000E1E  500C               	movf	(max7219_cmd@i+1)^0,w,c
  3360   000E20  E109               	bnz	u1620
  3361   000E22  0E04               	movlw	4
  3362   000E24  5C0B               	subwf	max7219_cmd@i^0,w,c
  3363   000E26  A0D8               	btfss	status,0,c
  3364   000E28  EF18  F007         	goto	u1621
  3365   000E2C  EF1A  F007         	goto	u1620
  3366   000E30                     u1621:
  3367   000E30  EF04  F007         	goto	l2693
  3368   000E34                     u1620:
  3369   000E34  848B               	bsf	139,2,c	;volatile
  3370   000E36  0012               	return		;funcret
  3371   000E38                     __end_of_max7219_cmd:
  3372                           	callstack 0
  3373                           
  3374 ;; *************** function _loadTimeFromFlash *****************
  3375 ;; Defined at:
  3376 ;;		line 331 in file "main.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;  flashAddress    4    0        unsigned long 
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		wreg, status,2, status,0, cstack
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3390 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3392 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3393 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3394 ;;Total ram usage:        0 bytes
  3395 ;; Hardware stack levels used: 1
  3396 ;; Hardware stack levels required when called: 3
  3397 ;; This function calls:
  3398 ;;		_FLASH_ReadByte
  3399 ;; This function is called by:
  3400 ;;		_main
  3401 ;; This function uses a non-reentrant model
  3402 ;;
  3403                           
  3404                           	psect	text6
  3405   000D3A                     __ptext6:
  3406                           	callstack 0
  3407   000D3A                     _loadTimeFromFlash:
  3408                           	callstack 27
  3409   000D3A                     
  3410                           ;main.c: 334:     hours = FLASH_ReadByte(flashAddress);
  3411   000D3A  0E80               	movlw	128
  3412   000D3C  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  3413   000D3E  0E1F               	movlw	31
  3414   000D40  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3415   000D42  0E00               	movlw	0
  3416   000D44  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3417   000D46  0E00               	movlw	0
  3418   000D48  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3419   000D4A  ECEE  F007         	call	_FLASH_ReadByte	;wreg free
  3420   000D4E  0100               	movlb	0	; () banked
  3421   000D50  6FCE               	movwf	_hours& (0+255),b
  3422   000D52                     
  3423                           ; BSR set to: 0
  3424                           ;main.c: 335:     minutes = FLASH_ReadByte(flashAddress + 1);
  3425   000D52  0E81               	movlw	129
  3426   000D54  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  3427   000D56  0E1F               	movlw	31
  3428   000D58  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3429   000D5A  0E00               	movlw	0
  3430   000D5C  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3431   000D5E  0E00               	movlw	0
  3432   000D60  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3433   000D62  ECEE  F007         	call	_FLASH_ReadByte	;wreg free
  3434   000D66  0100               	movlb	0	; () banked
  3435   000D68  6FCD               	movwf	_minutes& (0+255),b
  3436                           
  3437                           ;main.c: 338:     if (hours >= 24) hours = 0;
  3438   000D6A  0E17               	movlw	23
  3439   000D6C  65CE               	cpfsgt	_hours& (0+255),b
  3440   000D6E  EFBB  F006         	goto	u2391
  3441   000D72  EFBD  F006         	goto	u2390
  3442   000D76                     u2391:
  3443   000D76  EFBF  F006         	goto	l3239
  3444   000D7A                     u2390:
  3445   000D7A                     
  3446                           ; BSR set to: 0
  3447   000D7A  0E00               	movlw	0
  3448   000D7C  6FCE               	movwf	_hours& (0+255),b
  3449   000D7E                     l3239:
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;main.c: 339:     if (minutes >= 60) minutes = 0;
  3453   000D7E  0E3B               	movlw	59
  3454   000D80  65CD               	cpfsgt	_minutes& (0+255),b
  3455   000D82  EFC5  F006         	goto	u2401
  3456   000D86  EFC7  F006         	goto	u2400
  3457   000D8A                     u2401:
  3458   000D8A  EFC9  F006         	goto	l514
  3459   000D8E                     u2400:
  3460   000D8E                     
  3461                           ; BSR set to: 0
  3462   000D8E  0E00               	movlw	0
  3463   000D90  6FCD               	movwf	_minutes& (0+255),b
  3464   000D92                     l514:
  3465                           
  3466                           ; BSR set to: 0
  3467   000D92  0012               	return		;funcret
  3468   000D94                     __end_of_loadTimeFromFlash:
  3469                           	callstack 0
  3470                           
  3471 ;; *************** function _checkButtons *****************
  3472 ;; Defined at:
  3473 ;;		line 209 in file "main.c"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;		None
  3476 ;; Auto vars:     Size  Location     Type
  3477 ;;		None
  3478 ;; Return value:  Size  Location     Type
  3479 ;;                  1    wreg      void 
  3480 ;; Registers used:
  3481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3482 ;; Tracked objects:
  3483 ;;		On entry : 0/0
  3484 ;;		On exit  : 0/0
  3485 ;;		Unchanged: 0/0
  3486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3489 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;Total ram usage:        2 bytes
  3492 ;; Hardware stack levels used: 1
  3493 ;; Hardware stack levels required when called: 7
  3494 ;; This function calls:
  3495 ;;		___awmod
  3496 ;;		_clearAlarm
  3497 ;;		_displayAlarmTime
  3498 ;;		_displayTime
  3499 ;;		_saveTimeToFlash
  3500 ;; This function is called by:
  3501 ;;		_main
  3502 ;; This function uses a non-reentrant model
  3503 ;;
  3504                           
  3505                           	psect	text7
  3506   000068                     __ptext7:
  3507                           	callstack 0
  3508   000068                     _checkButtons:
  3509                           	callstack 23
  3510   000068                     
  3511                           ;main.c: 211:     static uint8_t button3PressCount = 0;;main.c: 212:     static uint16_t
      +                           button3HoldTime = 0;;main.c: 213:     static _Bool alarmSettingMode = 0;;main.c: 216:  
      +                             if (!PORTBbits.RB0)
  3512   000068  B081               	btfsc	129,0,c	;volatile
  3513   00006A  EF39  F000         	goto	u2771
  3514   00006E  EF3B  F000         	goto	u2770
  3515   000072                     u2771:
  3516   000072  EF7C  F000         	goto	l3511
  3517   000076                     u2770:
  3518   000076                     
  3519                           ;main.c: 217:     {;main.c: 218:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3520   000076  0E02               	movlw	2
  3521   000078  0100               	movlb	0	; () banked
  3522   00007A  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3523   00007C  0E04               	movlw	4
  3524   00007E  6FDF               	movwf	??_checkButtons& (0+255),b
  3525   000080  0EBA               	movlw	186
  3526   000082                     u3067:
  3527   000082  2EE8               	decfsz	wreg,f,c
  3528   000084  D7FE               	bra	u3067
  3529   000086  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3530   000088  D7FC               	bra	u3067
  3531   00008A  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3532   00008C  D7FA               	bra	u3067
  3533   00008E  0000               	nop	
  3534   000090                     
  3535                           ;main.c: 219:         if (!PORTBbits.RB0)
  3536   000090  B081               	btfsc	129,0,c	;volatile
  3537   000092  EF4D  F000         	goto	u2781
  3538   000096  EF4F  F000         	goto	u2780
  3539   00009A                     u2781:
  3540   00009A  EF7C  F000         	goto	l3511
  3541   00009E                     u2780:
  3542   00009E                     
  3543                           ;main.c: 220:         {;main.c: 221:             if (alarmSettingMode)
  3544   00009E  0100               	movlb	0	; () banked
  3545   0000A0  51C2               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3546   0000A2  B4D8               	btfsc	status,2,c
  3547   0000A4  EF56  F000         	goto	u2791
  3548   0000A8  EF58  F000         	goto	u2790
  3549   0000AC                     u2791:
  3550   0000AC  EF6B  F000         	goto	l3507
  3551   0000B0                     u2790:
  3552   0000B0                     
  3553                           ; BSR set to: 0
  3554                           ;main.c: 222:             {;main.c: 223:                 alarmHours = (alarmHours + 1) %
      +                           24;
  3555   0000B0  0E01               	movlw	1
  3556   0000B2  25CB               	addwf	_alarmHours& (0+255),w,b
  3557   0000B4  6E04               	movwf	___awmod@dividend^0,c
  3558   0000B6  6A05               	clrf	(___awmod@dividend+1)^0,c
  3559   0000B8  0E00               	movlw	0
  3560   0000BA  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3561   0000BC  0E00               	movlw	0
  3562   0000BE  6E07               	movwf	(___awmod@divisor+1)^0,c
  3563   0000C0  0E18               	movlw	24
  3564   0000C2  6E06               	movwf	___awmod@divisor^0,c
  3565   0000C4  ECB9  F005         	call	___awmod	;wreg free
  3566   0000C8  5004               	movf	?___awmod^0,w,c
  3567   0000CA  0100               	movlb	0	; () banked
  3568   0000CC  6FCB               	movwf	_alarmHours& (0+255),b
  3569   0000CE                     
  3570                           ; BSR set to: 0
  3571                           ;main.c: 224:                 displayAlarmTime();
  3572   0000CE  EC5F  F005         	call	_displayAlarmTime	;wreg free
  3573                           
  3574                           ;main.c: 225:             }
  3575   0000D2  EF7C  F000         	goto	l3511
  3576   0000D6                     l3507:
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;main.c: 227:             {;main.c: 228:                 hours = (hours + 1) % 24;
  3580   0000D6  0E01               	movlw	1
  3581   0000D8  25CE               	addwf	_hours& (0+255),w,b
  3582   0000DA  6E04               	movwf	___awmod@dividend^0,c
  3583   0000DC  6A05               	clrf	(___awmod@dividend+1)^0,c
  3584   0000DE  0E00               	movlw	0
  3585   0000E0  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3586   0000E2  0E00               	movlw	0
  3587   0000E4  6E07               	movwf	(___awmod@divisor+1)^0,c
  3588   0000E6  0E18               	movlw	24
  3589   0000E8  6E06               	movwf	___awmod@divisor^0,c
  3590   0000EA  ECB9  F005         	call	___awmod	;wreg free
  3591   0000EE  5004               	movf	?___awmod^0,w,c
  3592   0000F0  0100               	movlb	0	; () banked
  3593   0000F2  6FCE               	movwf	_hours& (0+255),b
  3594   0000F4                     
  3595                           ; BSR set to: 0
  3596                           ;main.c: 229:                 displayTime();
  3597   0000F4  EC05  F005         	call	_displayTime	;wreg free
  3598   0000F8                     l3511:
  3599                           
  3600                           ;main.c: 235:     if (!PORTBbits.RB1)
  3601   0000F8  B281               	btfsc	129,1,c	;volatile
  3602   0000FA  EF81  F000         	goto	u2801
  3603   0000FE  EF83  F000         	goto	u2800
  3604   000102                     u2801:
  3605   000102  EFC4  F000         	goto	l3527
  3606   000106                     u2800:
  3607   000106                     
  3608                           ;main.c: 236:     {;main.c: 237:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3609   000106  0E02               	movlw	2
  3610   000108  0100               	movlb	0	; () banked
  3611   00010A  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3612   00010C  0E04               	movlw	4
  3613   00010E  6FDF               	movwf	??_checkButtons& (0+255),b
  3614   000110  0EBA               	movlw	186
  3615   000112                     u3077:
  3616   000112  2EE8               	decfsz	wreg,f,c
  3617   000114  D7FE               	bra	u3077
  3618   000116  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3619   000118  D7FC               	bra	u3077
  3620   00011A  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3621   00011C  D7FA               	bra	u3077
  3622   00011E  0000               	nop	
  3623   000120                     
  3624                           ;main.c: 238:         if (!PORTBbits.RB1)
  3625   000120  B281               	btfsc	129,1,c	;volatile
  3626   000122  EF95  F000         	goto	u2811
  3627   000126  EF97  F000         	goto	u2810
  3628   00012A                     u2811:
  3629   00012A  EFC4  F000         	goto	l3527
  3630   00012E                     u2810:
  3631   00012E                     
  3632                           ;main.c: 239:         {;main.c: 240:             if (alarmSettingMode)
  3633   00012E  0100               	movlb	0	; () banked
  3634   000130  51C2               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3635   000132  B4D8               	btfsc	status,2,c
  3636   000134  EF9E  F000         	goto	u2821
  3637   000138  EFA0  F000         	goto	u2820
  3638   00013C                     u2821:
  3639   00013C  EFB3  F000         	goto	l3523
  3640   000140                     u2820:
  3641   000140                     
  3642                           ; BSR set to: 0
  3643                           ;main.c: 241:             {;main.c: 242:                 alarmMinutes = (alarmMinutes + 
      +                          1) % 60;
  3644   000140  0E01               	movlw	1
  3645   000142  25CA               	addwf	_alarmMinutes& (0+255),w,b
  3646   000144  6E04               	movwf	___awmod@dividend^0,c
  3647   000146  6A05               	clrf	(___awmod@dividend+1)^0,c
  3648   000148  0E00               	movlw	0
  3649   00014A  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3650   00014C  0E00               	movlw	0
  3651   00014E  6E07               	movwf	(___awmod@divisor+1)^0,c
  3652   000150  0E3C               	movlw	60
  3653   000152  6E06               	movwf	___awmod@divisor^0,c
  3654   000154  ECB9  F005         	call	___awmod	;wreg free
  3655   000158  5004               	movf	?___awmod^0,w,c
  3656   00015A  0100               	movlb	0	; () banked
  3657   00015C  6FCA               	movwf	_alarmMinutes& (0+255),b
  3658   00015E                     
  3659                           ; BSR set to: 0
  3660                           ;main.c: 243:                 displayAlarmTime();
  3661   00015E  EC5F  F005         	call	_displayAlarmTime	;wreg free
  3662                           
  3663                           ;main.c: 244:             }
  3664   000162  EFC4  F000         	goto	l3527
  3665   000166                     l3523:
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;main.c: 246:             {;main.c: 247:                 minutes = (minutes + 1) % 60;
  3669   000166  0E01               	movlw	1
  3670   000168  25CD               	addwf	_minutes& (0+255),w,b
  3671   00016A  6E04               	movwf	___awmod@dividend^0,c
  3672   00016C  6A05               	clrf	(___awmod@dividend+1)^0,c
  3673   00016E  0E00               	movlw	0
  3674   000170  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3675   000172  0E00               	movlw	0
  3676   000174  6E07               	movwf	(___awmod@divisor+1)^0,c
  3677   000176  0E3C               	movlw	60
  3678   000178  6E06               	movwf	___awmod@divisor^0,c
  3679   00017A  ECB9  F005         	call	___awmod	;wreg free
  3680   00017E  5004               	movf	?___awmod^0,w,c
  3681   000180  0100               	movlb	0	; () banked
  3682   000182  6FCD               	movwf	_minutes& (0+255),b
  3683   000184                     
  3684                           ; BSR set to: 0
  3685                           ;main.c: 248:                 displayTime();
  3686   000184  EC05  F005         	call	_displayTime	;wreg free
  3687   000188                     l3527:
  3688                           
  3689                           ;main.c: 254:     if (!PORTBbits.RB2)
  3690   000188  B481               	btfsc	129,2,c	;volatile
  3691   00018A  EFC9  F000         	goto	u2831
  3692   00018E  EFCB  F000         	goto	u2830
  3693   000192                     u2831:
  3694   000192  EF5F  F001         	goto	l3565
  3695   000196                     u2830:
  3696   000196                     
  3697                           ;main.c: 255:     {;main.c: 256:         button3HoldTime += 100;
  3698   000196  0E64               	movlw	100
  3699   000198  0100               	movlb	0	; () banked
  3700   00019A  27BA               	addwf	checkButtons@button3HoldTime& (0+255),f,b
  3701   00019C  0E00               	movlw	0
  3702   00019E  23BB               	addwfc	(checkButtons@button3HoldTime+1)& (0+255),f,b
  3703   0001A0                     
  3704                           ; BSR set to: 0
  3705                           ;main.c: 257:         _delay((unsigned long)((100)*(8000000/4000.0)));
  3706   0001A0  0E02               	movlw	2
  3707   0001A2  0100               	movlb	0	; () banked
  3708   0001A4  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3709   0001A6  0E04               	movlw	4
  3710   0001A8  6FDF               	movwf	??_checkButtons& (0+255),b
  3711   0001AA  0EBA               	movlw	186
  3712   0001AC                     u3087:
  3713   0001AC  2EE8               	decfsz	wreg,f,c
  3714   0001AE  D7FE               	bra	u3087
  3715   0001B0  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3716   0001B2  D7FC               	bra	u3087
  3717   0001B4  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3718   0001B6  D7FA               	bra	u3087
  3719   0001B8  0000               	nop	
  3720   0001BA                     
  3721                           ;main.c: 259:         if (button3HoldTime >= 3000)
  3722   0001BA  0EB8               	movlw	184
  3723   0001BC  0100               	movlb	0	; () banked
  3724   0001BE  5DBA               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3725   0001C0  0E0B               	movlw	11
  3726   0001C2  59BB               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3727   0001C4  A0D8               	btfss	status,0,c
  3728   0001C6  EFE7  F000         	goto	u2841
  3729   0001CA  EFE9  F000         	goto	u2840
  3730   0001CE                     u2841:
  3731   0001CE  EF53  F001         	goto	l3561
  3732   0001D2                     u2840:
  3733   0001D2                     
  3734                           ; BSR set to: 0
  3735                           ;main.c: 260:         {;main.c: 261:             if (!alarmTriggered)
  3736   0001D2  51C7               	movf	_alarmTriggered& (0+255),w,b
  3737   0001D4  A4D8               	btfss	status,2,c
  3738   0001D6  EFEF  F000         	goto	u2851
  3739   0001DA  EFF1  F000         	goto	u2850
  3740   0001DE                     u2851:
  3741   0001DE  EF7E  F001         	goto	l504
  3742   0001E2                     u2850:
  3743   0001E2                     
  3744                           ; BSR set to: 0
  3745                           ;main.c: 262:             {;main.c: 263:                 alarmSettingMode = 1;
  3746   0001E2  0E01               	movlw	1
  3747   0001E4  6FC2               	movwf	checkButtons@alarmSettingMode& (0+255),b
  3748   0001E6                     l3539:
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;main.c: 264:                 displayAlarmTime();
  3752   0001E6  EC5F  F005         	call	_displayAlarmTime	;wreg free
  3753                           
  3754                           ;main.c: 266:                 while (!PORTBbits.RB2)
  3755   0001EA  EF43  F001         	goto	l3555
  3756   0001EE                     l495:
  3757                           
  3758                           ;main.c: 267:                 {;main.c: 268:                     if (!PORTBbits.RB0)
  3759   0001EE  B081               	btfsc	129,0,c	;volatile
  3760   0001F0  EFFC  F000         	goto	u2861
  3761   0001F4  EFFE  F000         	goto	u2860
  3762   0001F8                     u2861:
  3763   0001F8  EF1D  F001         	goto	l3547
  3764   0001FC                     u2860:
  3765   0001FC                     
  3766                           ;main.c: 269:                     {;main.c: 270:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3767   0001FC  0E02               	movlw	2
  3768   0001FE  0100               	movlb	0	; () banked
  3769   000200  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3770   000202  0E04               	movlw	4
  3771   000204  6FDF               	movwf	??_checkButtons& (0+255),b
  3772   000206  0EBA               	movlw	186
  3773   000208                     u3097:
  3774   000208  2EE8               	decfsz	wreg,f,c
  3775   00020A  D7FE               	bra	u3097
  3776   00020C  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3777   00020E  D7FC               	bra	u3097
  3778   000210  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3779   000212  D7FA               	bra	u3097
  3780   000214  0000               	nop	
  3781   000216                     
  3782                           ;main.c: 271:                         alarmHours = (alarmHours + 1) % 24;
  3783   000216  0E01               	movlw	1
  3784   000218  0100               	movlb	0	; () banked
  3785   00021A  25CB               	addwf	_alarmHours& (0+255),w,b
  3786   00021C  6E04               	movwf	___awmod@dividend^0,c
  3787   00021E  6A05               	clrf	(___awmod@dividend+1)^0,c
  3788   000220  0E00               	movlw	0
  3789   000222  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3790   000224  0E00               	movlw	0
  3791   000226  6E07               	movwf	(___awmod@divisor+1)^0,c
  3792   000228  0E18               	movlw	24
  3793   00022A  6E06               	movwf	___awmod@divisor^0,c
  3794   00022C  ECB9  F005         	call	___awmod	;wreg free
  3795   000230  5004               	movf	?___awmod^0,w,c
  3796   000232  0100               	movlb	0	; () banked
  3797   000234  6FCB               	movwf	_alarmHours& (0+255),b
  3798   000236                     
  3799                           ; BSR set to: 0
  3800                           ;main.c: 272:                         displayAlarmTime();
  3801   000236  EC5F  F005         	call	_displayAlarmTime	;wreg free
  3802   00023A                     l3547:
  3803                           
  3804                           ;main.c: 274:                     if (!PORTBbits.RB1)
  3805   00023A  B281               	btfsc	129,1,c	;volatile
  3806   00023C  EF22  F001         	goto	u2871
  3807   000240  EF24  F001         	goto	u2870
  3808   000244                     u2871:
  3809   000244  EF43  F001         	goto	l3555
  3810   000248                     u2870:
  3811   000248                     
  3812                           ;main.c: 275:                     {;main.c: 276:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3813   000248  0E02               	movlw	2
  3814   00024A  0100               	movlb	0	; () banked
  3815   00024C  6FE0               	movwf	(??_checkButtons+1)& (0+255),b
  3816   00024E  0E04               	movlw	4
  3817   000250  6FDF               	movwf	??_checkButtons& (0+255),b
  3818   000252  0EBA               	movlw	186
  3819   000254                     u3107:
  3820   000254  2EE8               	decfsz	wreg,f,c
  3821   000256  D7FE               	bra	u3107
  3822   000258  2FDF               	decfsz	??_checkButtons& (0+255),f,b
  3823   00025A  D7FC               	bra	u3107
  3824   00025C  2FE0               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3825   00025E  D7FA               	bra	u3107
  3826   000260  0000               	nop	
  3827   000262                     
  3828                           ;main.c: 277:                         alarmMinutes = (alarmMinutes + 1) % 60;
  3829   000262  0E01               	movlw	1
  3830   000264  0100               	movlb	0	; () banked
  3831   000266  25CA               	addwf	_alarmMinutes& (0+255),w,b
  3832   000268  6E04               	movwf	___awmod@dividend^0,c
  3833   00026A  6A05               	clrf	(___awmod@dividend+1)^0,c
  3834   00026C  0E00               	movlw	0
  3835   00026E  2205               	addwfc	(___awmod@dividend+1)^0,f,c
  3836   000270  0E00               	movlw	0
  3837   000272  6E07               	movwf	(___awmod@divisor+1)^0,c
  3838   000274  0E3C               	movlw	60
  3839   000276  6E06               	movwf	___awmod@divisor^0,c
  3840   000278  ECB9  F005         	call	___awmod	;wreg free
  3841   00027C  5004               	movf	?___awmod^0,w,c
  3842   00027E  0100               	movlb	0	; () banked
  3843   000280  6FCA               	movwf	_alarmMinutes& (0+255),b
  3844   000282  EFF3  F000         	goto	l3539
  3845   000286                     l3555:
  3846                           
  3847                           ;main.c: 266:                 while (!PORTBbits.RB2)
  3848   000286  A481               	btfss	129,2,c	;volatile
  3849   000288  EF48  F001         	goto	u2881
  3850   00028C  EF4A  F001         	goto	u2880
  3851   000290                     u2881:
  3852   000290  EFF7  F000         	goto	l495
  3853   000294                     u2880:
  3854   000294                     
  3855                           ;main.c: 282:                 alarmSettingMode = 0;
  3856   000294  0E00               	movlw	0
  3857   000296  0100               	movlb	0	; () banked
  3858   000298  6FC2               	movwf	checkButtons@alarmSettingMode& (0+255),b
  3859                           
  3860                           ;main.c: 283:                 alarmSet = 1;
  3861   00029A  0E01               	movlw	1
  3862   00029C  6FC9               	movwf	_alarmSet& (0+255),b
  3863   00029E                     
  3864                           ; BSR set to: 0
  3865                           ;main.c: 284:                 displayTime();
  3866   00029E  EC05  F005         	call	_displayTime	;wreg free
  3867   0002A2  EF7E  F001         	goto	l504
  3868   0002A6                     l3561:
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;main.c: 288:         {;main.c: 289:             if (alarmTriggered)
  3872   0002A6  51C7               	movf	_alarmTriggered& (0+255),w,b
  3873   0002A8  B4D8               	btfsc	status,2,c
  3874   0002AA  EF59  F001         	goto	u2891
  3875   0002AE  EF5B  F001         	goto	u2890
  3876   0002B2                     u2891:
  3877   0002B2  EF7E  F001         	goto	l504
  3878   0002B6                     u2890:
  3879   0002B6                     
  3880                           ; BSR set to: 0
  3881                           ;main.c: 290:             {;main.c: 291:                 clearAlarm();
  3882   0002B6  EC0E  F008         	call	_clearAlarm	;wreg free
  3883   0002BA  EF7E  F001         	goto	l504
  3884   0002BE                     l3565:
  3885                           
  3886                           ;main.c: 296:     {;main.c: 297:         if (button3HoldTime < 3000)
  3887   0002BE  0EB8               	movlw	184
  3888   0002C0  0100               	movlb	0	; () banked
  3889   0002C2  5DBA               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3890   0002C4  0E0B               	movlw	11
  3891   0002C6  59BB               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3892   0002C8  B0D8               	btfsc	status,0,c
  3893   0002CA  EF69  F001         	goto	u2901
  3894   0002CE  EF6B  F001         	goto	u2900
  3895   0002D2                     u2901:
  3896   0002D2  EF7A  F001         	goto	l3575
  3897   0002D6                     u2900:
  3898   0002D6                     
  3899                           ; BSR set to: 0
  3900                           ;main.c: 298:         {;main.c: 299:             button3PressCount++;
  3901   0002D6  2BC3               	incf	checkButtons@button3PressCount& (0+255),f,b
  3902   0002D8                     
  3903                           ; BSR set to: 0
  3904                           ;main.c: 300:             if (button3PressCount == 5)
  3905   0002D8  0E05               	movlw	5
  3906   0002DA  19C3               	xorwf	checkButtons@button3PressCount& (0+255),w,b
  3907   0002DC  A4D8               	btfss	status,2,c
  3908   0002DE  EF73  F001         	goto	u2911
  3909   0002E2  EF75  F001         	goto	u2910
  3910   0002E6                     u2911:
  3911   0002E6  EF7A  F001         	goto	l3575
  3912   0002EA                     u2910:
  3913   0002EA                     
  3914                           ; BSR set to: 0
  3915                           ;main.c: 301:             {;main.c: 302:                 saveTimeToFlash();
  3916   0002EA  EC60  F006         	call	_saveTimeToFlash	;wreg free
  3917   0002EE                     
  3918                           ;main.c: 303:                 button3PressCount = 0;
  3919   0002EE  0E00               	movlw	0
  3920   0002F0  0100               	movlb	0	; () banked
  3921   0002F2  6FC3               	movwf	checkButtons@button3PressCount& (0+255),b
  3922   0002F4                     l3575:
  3923                           
  3924                           ; BSR set to: 0
  3925                           ;main.c: 306:         button3HoldTime = 0;
  3926   0002F4  0E00               	movlw	0
  3927   0002F6  6FBB               	movwf	(checkButtons@button3HoldTime+1)& (0+255),b
  3928   0002F8  0E00               	movlw	0
  3929   0002FA  6FBA               	movwf	checkButtons@button3HoldTime& (0+255),b
  3930   0002FC                     l504:
  3931   0002FC  0012               	return		;funcret
  3932   0002FE                     __end_of_checkButtons:
  3933                           	callstack 0
  3934                           
  3935 ;; *************** function _saveTimeToFlash *****************
  3936 ;; Defined at:
  3937 ;;		line 312 in file "main.c"
  3938 ;; Parameters:    Size  Location     Type
  3939 ;;		None
  3940 ;; Auto vars:     Size  Location     Type
  3941 ;;  i               1   68[BANK1 ] unsigned char 
  3942 ;;  flashBuffer    64    0[BANK1 ] unsigned char [64]
  3943 ;;  flashAddress    4   64[BANK1 ] unsigned long 
  3944 ;; Return value:  Size  Location     Type
  3945 ;;                  1    wreg      void 
  3946 ;; Registers used:
  3947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3948 ;; Tracked objects:
  3949 ;;		On entry : 0/0
  3950 ;;		On exit  : 0/0
  3951 ;;		Unchanged: 0/0
  3952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3954 ;;      Locals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3955 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3956 ;;      Totals:         0       0      69       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3957 ;;Total ram usage:       69 bytes
  3958 ;; Hardware stack levels used: 1
  3959 ;; Hardware stack levels required when called: 4
  3960 ;; This function calls:
  3961 ;;		_FLASH_ReadByte
  3962 ;;		_FLASH_WriteBlock
  3963 ;; This function is called by:
  3964 ;;		_main
  3965 ;;		_checkButtons
  3966 ;; This function uses a non-reentrant model
  3967 ;;
  3968                           
  3969                           	psect	text8
  3970   000CC0                     __ptext8:
  3971                           	callstack 0
  3972   000CC0                     _saveTimeToFlash:
  3973                           	callstack 26
  3974   000CC0                     
  3975                           ;main.c: 314:     uint32_t flashAddress = 0x1F80;
  3976   000CC0  0E80               	movlw	128
  3977   000CC2  0101               	movlb	1	; () banked
  3978   000CC4  6F40               	movwf	saveTimeToFlash@flashAddress& (0+255),b
  3979   000CC6  0E1F               	movlw	31
  3980   000CC8  6F41               	movwf	(saveTimeToFlash@flashAddress+1)& (0+255),b
  3981   000CCA  0E00               	movlw	0
  3982   000CCC  6F42               	movwf	(saveTimeToFlash@flashAddress+2)& (0+255),b
  3983   000CCE  0E00               	movlw	0
  3984   000CD0  6F43               	movwf	(saveTimeToFlash@flashAddress+3)& (0+255),b
  3985                           
  3986                           ;main.c: 315:     uint8_t flashBuffer[64];;main.c: 318:     for (uint8_t i = 0; i < 64; 
      +                          i++) {
  3987   000CD2  0E00               	movlw	0
  3988   000CD4  6F44               	movwf	saveTimeToFlash@i& (0+255),b
  3989   000CD6                     l3487:
  3990                           
  3991                           ; BSR set to: 1
  3992                           ;main.c: 319:         flashBuffer[i] = FLASH_ReadByte(flashAddress + i);
  3993   000CD6  0E00               	movlw	low saveTimeToFlash@flashBuffer
  3994   000CD8  2544               	addwf	saveTimeToFlash@i& (0+255),w,b
  3995   000CDA  6ED9               	movwf	fsr2l,c
  3996   000CDC  6ADA               	clrf	fsr2h,c
  3997   000CDE  0E01               	movlw	high saveTimeToFlash@flashBuffer
  3998   000CE0  22DA               	addwfc	fsr2h,f,c
  3999   000CE2  5144               	movf	saveTimeToFlash@i& (0+255),w,b
  4000   000CE4  2540               	addwf	saveTimeToFlash@flashAddress& (0+255),w,b
  4001   000CE6  6E04               	movwf	FLASH_ReadByte@flashAddr^0,c
  4002   000CE8  0E00               	movlw	0
  4003   000CEA  2141               	addwfc	(saveTimeToFlash@flashAddress+1)& (0+255),w,b
  4004   000CEC  6E05               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  4005   000CEE  0E00               	movlw	0
  4006   000CF0  2142               	addwfc	(saveTimeToFlash@flashAddress+2)& (0+255),w,b
  4007   000CF2  6E06               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  4008   000CF4  0E00               	movlw	0
  4009   000CF6  2143               	addwfc	(saveTimeToFlash@flashAddress+3)& (0+255),w,b
  4010   000CF8  6E07               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  4011   000CFA  ECEE  F007         	call	_FLASH_ReadByte	;wreg free
  4012   000CFE  6EDF               	movwf	indf2,c
  4013   000D00                     
  4014                           ;main.c: 320:     }
  4015   000D00  0101               	movlb	1	; () banked
  4016   000D02  2B44               	incf	saveTimeToFlash@i& (0+255),f,b
  4017   000D04                     
  4018                           ; BSR set to: 1
  4019   000D04  0E3F               	movlw	63
  4020   000D06  6544               	cpfsgt	saveTimeToFlash@i& (0+255),b
  4021   000D08  EF88  F006         	goto	u2761
  4022   000D0C  EF8A  F006         	goto	u2760
  4023   000D10                     u2761:
  4024   000D10  EF6B  F006         	goto	l3487
  4025   000D14                     u2760:
  4026   000D14                     
  4027                           ; BSR set to: 1
  4028                           ;main.c: 323:     flashBuffer[0] = hours;
  4029   000D14  C0CE  F100         	movff	_hours,saveTimeToFlash@flashBuffer
  4030                           
  4031                           ;main.c: 324:     flashBuffer[1] = minutes;
  4032   000D18  C0CD  F101         	movff	_minutes,saveTimeToFlash@flashBuffer+1
  4033   000D1C                     
  4034                           ; BSR set to: 1
  4035                           ;main.c: 327:     FLASH_WriteBlock(flashAddress, flashBuffer);
  4036   000D1C  C140  F009         	movff	saveTimeToFlash@flashAddress,FLASH_WriteBlock@writeAddr
  4037   000D20  C141  F00A         	movff	saveTimeToFlash@flashAddress+1,FLASH_WriteBlock@writeAddr+1
  4038   000D24  C142  F00B         	movff	saveTimeToFlash@flashAddress+2,FLASH_WriteBlock@writeAddr+2
  4039   000D28  C143  F00C         	movff	saveTimeToFlash@flashAddress+3,FLASH_WriteBlock@writeAddr+3
  4040   000D2C  0E00               	movlw	low saveTimeToFlash@flashBuffer
  4041   000D2E  6E0D               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  4042   000D30  0E01               	movlw	high saveTimeToFlash@flashBuffer
  4043   000D32  6E0E               	movwf	(FLASH_WriteBlock@flashWrBufPtr+1)^0,c
  4044   000D34  EC6F  F003         	call	_FLASH_WriteBlock	;wreg free
  4045   000D38  0012               	return		;funcret
  4046   000D3A                     __end_of_saveTimeToFlash:
  4047                           	callstack 0
  4048                           
  4049 ;; *************** function _FLASH_WriteBlock *****************
  4050 ;; Defined at:
  4051 ;;		line 93 in file "mcc_generated_files/memory.c"
  4052 ;; Parameters:    Size  Location     Type
  4053 ;;  writeAddr       4    8[COMRAM] unsigned long 
  4054 ;;  flashWrBufPt    2   12[COMRAM] PTR unsigned char 
  4055 ;;		 -> saveTimeToFlash@flashBuffer(64), 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;  blockStartAd    4   14[COMRAM] unsigned long 
  4058 ;;  i               1   22[COMRAM] unsigned char 
  4059 ;;  dataCounter     1   21[COMRAM] unsigned char 
  4060 ;;  numberOfWrit    1   20[COMRAM] unsigned char 
  4061 ;;  j               1   19[COMRAM] unsigned char 
  4062 ;;  GIEBitValue     1   18[COMRAM] unsigned char 
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  1    wreg      char 
  4065 ;; Registers used:
  4066 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4072 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4073 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4074 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4075 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4076 ;;Total ram usage:       15 bytes
  4077 ;; Hardware stack levels used: 1
  4078 ;; Hardware stack levels required when called: 3
  4079 ;; This function calls:
  4080 ;;		_FLASH_EraseBlock
  4081 ;; This function is called by:
  4082 ;;		_saveTimeToFlash
  4083 ;;		_FLASH_WriteByte
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           
  4087                           	psect	text9
  4088   0006DE                     __ptext9:
  4089                           	callstack 0
  4090   0006DE                     _FLASH_WriteBlock:
  4091                           	callstack 26
  4092   0006DE                     
  4093                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  4094   0006DE  0EC0               	movlw	192
  4095   0006E0  1409               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  4096   0006E2  6E0F               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  4097   0006E4  0EFF               	movlw	255
  4098   0006E6  140A               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4099   0006E8  6E10               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  4100   0006EA  0E00               	movlw	0
  4101   0006EC  140B               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4102   0006EE  6E11               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  4103   0006F0  0E00               	movlw	0
  4104   0006F2  140C               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4105   0006F4  6E12               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  4106   0006F6                     
  4107                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  4108   0006F6  0E00               	movlw	0
  4109   0006F8  BEF2               	btfsc	242,7,c	;volatile
  4110   0006FA  0E01               	movlw	1
  4111   0006FC  6E13               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  4112   0006FE  0E00               	movlw	0
  4113   000700  6E16               	movwf	FLASH_WriteBlock@dataCounter^0,c
  4114   000702                     
  4115                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  4116   000702  0E01               	movlw	1
  4117   000704  6E15               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  4118   000706                     
  4119                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  4120   000706  500F               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  4121   000708  1809               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  4122   00070A  E10F               	bnz	u2710
  4123   00070C  5010               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  4124   00070E  180A               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4125   000710  E10C               	bnz	u2710
  4126   000712  5011               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  4127   000714  180B               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4128   000716  E109               	bnz	u2710
  4129   000718  5012               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  4130   00071A  180C               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4131   00071C  B4D8               	btfsc	status,2,c
  4132   00071E  EF93  F003         	goto	u2711
  4133   000722  EF95  F003         	goto	u2710
  4134   000726                     u2711:
  4135   000726  EF97  F003         	goto	l3443
  4136   00072A                     u2710:
  4137   00072A  EFE5  F003         	goto	l314
  4138   00072E                     l3443:
  4139                           
  4140                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  4141   00072E  C009  F004         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  4142   000732  C00A  F005         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  4143   000736  C00B  F006         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  4144   00073A  C00C  F007         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  4145   00073E  EC79  F007         	call	_FLASH_EraseBlock	;wreg free
  4146   000742                     
  4147                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  4148   000742  C00B  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  4149   000746                     
  4150                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  4151   000746  C00A  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  4152   00074A                     
  4153                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  4154   00074A  C009  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  4155   00074E                     
  4156                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  4157   00074E  0E00               	movlw	0
  4158   000750  6E14               	movwf	FLASH_WriteBlock@j^0,c
  4159   000752  EFDC  F003         	goto	l3479
  4160   000756                     l3453:
  4161                           
  4162                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  4163   000756  0E00               	movlw	0
  4164   000758  6E17               	movwf	FLASH_WriteBlock@i^0,c
  4165   00075A                     l3459:
  4166                           
  4167                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  4168   00075A  5016               	movf	FLASH_WriteBlock@dataCounter^0,w,c
  4169   00075C  240D               	addwf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  4170   00075E  6ED9               	movwf	fsr2l,c
  4171   000760  0E00               	movlw	0
  4172   000762  200E               	addwfc	(FLASH_WriteBlock@flashWrBufPtr+1)^0,w,c
  4173   000764  6EDA               	movwf	fsr2h,c
  4174   000766  50DF               	movf	indf2,w,c
  4175   000768  6EF5               	movwf	245,c	;volatile
  4176   00076A                     
  4177                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  4178   00076A  0E3F               	movlw	63
  4179   00076C  1817               	xorwf	FLASH_WriteBlock@i^0,w,c
  4180   00076E  A4D8               	btfss	status,2,c
  4181   000770  EFBC  F003         	goto	u2721
  4182   000774  EFBE  F003         	goto	u2720
  4183   000778                     u2721:
  4184   000778  EFC1  F003         	goto	l319
  4185   00077C                     u2720:
  4186   00077C  000C               	tblwt		*	;# 
  4187                           
  4188                           ;mcc_generated_files/memory.c: 124:    }
  4189   00077E  EFC3  F003         	goto	l320
  4190   000782                     l319:
  4191   000782  000D               	tblwt		*+	;# 
  4192   000784                     
  4193                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  4194   000784  2A16               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  4195   000786                     l320:
  4196                           
  4197                           ;mcc_generated_files/memory.c: 130:   }
  4198   000786  2A17               	incf	FLASH_WriteBlock@i^0,f,c
  4199   000788  0E3F               	movlw	63
  4200   00078A  6417               	cpfsgt	FLASH_WriteBlock@i^0,c
  4201   00078C  EFCA  F003         	goto	u2731
  4202   000790  EFCC  F003         	goto	u2730
  4203   000794                     u2731:
  4204   000794  EFAD  F003         	goto	l3459
  4205   000798                     u2730:
  4206   000798                     
  4207                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  4208   000798  8EA6               	bsf	166,7,c	;volsfr
  4209                           
  4210                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  4211   00079A  9CA6               	bcf	166,6,c	;volsfr
  4212                           
  4213                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  4214   00079C  84A6               	bsf	166,2,c	;volsfr
  4215                           
  4216                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  4217   00079E  9EF2               	bcf	242,7,c	;volatile
  4218   0007A0                     
  4219                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  4220   0007A0  0E55               	movlw	85
  4221   0007A2  6EA7               	movwf	167,c	;volsfr
  4222                           
  4223                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  4224   0007A4  0EAA               	movlw	170
  4225   0007A6  6EA7               	movwf	167,c	;volsfr
  4226   0007A8                     
  4227                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  4228   0007A8  82A6               	bsf	166,1,c	;volsfr
  4229   0007AA                     
  4230                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  4231   0007AA  94A6               	bcf	166,2,c	;volsfr
  4232   0007AC                     
  4233                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  4234   0007AC  B013               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  4235   0007AE  D002               	bra	u2745
  4236   0007B0  9EF2               	bcf	242,7,c	;volatile
  4237   0007B2  D001               	bra	u2746
  4238   0007B4                     u2745:
  4239   0007B4  8EF2               	bsf	242,7,c	;volatile
  4240   0007B6                     u2746:
  4241   0007B6                     
  4242                           ;mcc_generated_files/memory.c: 142:  }
  4243   0007B6  2A14               	incf	FLASH_WriteBlock@j^0,f,c
  4244   0007B8                     l3479:
  4245   0007B8  5015               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  4246   0007BA  5C14               	subwf	FLASH_WriteBlock@j^0,w,c
  4247   0007BC  A0D8               	btfss	status,0,c
  4248   0007BE  EFE3  F003         	goto	u2751
  4249   0007C2  EFE5  F003         	goto	u2750
  4250   0007C6                     u2751:
  4251   0007C6  EFAB  F003         	goto	l3453
  4252   0007CA                     u2750:
  4253   0007CA                     l314:
  4254   0007CA  0012               	return		;funcret
  4255   0007CC                     __end_of_FLASH_WriteBlock:
  4256                           	callstack 0
  4257                           
  4258 ;; *************** function _FLASH_EraseBlock *****************
  4259 ;; Defined at:
  4260 ;;		line 147 in file "mcc_generated_files/memory.c"
  4261 ;; Parameters:    Size  Location     Type
  4262 ;;  baseAddr        4    3[COMRAM] unsigned long 
  4263 ;; Auto vars:     Size  Location     Type
  4264 ;;  GIEBitValue     1    7[COMRAM] unsigned char 
  4265 ;; Return value:  Size  Location     Type
  4266 ;;                  1    wreg      void 
  4267 ;; Registers used:
  4268 ;;		wreg, status,2
  4269 ;; Tracked objects:
  4270 ;;		On entry : 0/0
  4271 ;;		On exit  : 0/0
  4272 ;;		Unchanged: 0/0
  4273 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4274 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4275 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4276 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4277 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4278 ;;Total ram usage:        5 bytes
  4279 ;; Hardware stack levels used: 1
  4280 ;; Hardware stack levels required when called: 2
  4281 ;; This function calls:
  4282 ;;		Nothing
  4283 ;; This function is called by:
  4284 ;;		_FLASH_WriteBlock
  4285 ;; This function uses a non-reentrant model
  4286 ;;
  4287                           
  4288                           	psect	text10
  4289   000EF2                     __ptext10:
  4290                           	callstack 0
  4291   000EF2                     _FLASH_EraseBlock:
  4292                           	callstack 26
  4293   000EF2                     
  4294                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  4295   000EF2  0E00               	movlw	0
  4296   000EF4  BEF2               	btfsc	242,7,c	;volatile
  4297   000EF6  0E01               	movlw	1
  4298   000EF8  6E08               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  4299   000EFA                     
  4300                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  4301   000EFA  C006  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  4302   000EFE                     
  4303                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  4304   000EFE  C005  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  4305   000F02                     
  4306                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  4307   000F02  C004  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  4308   000F06                     
  4309                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  4310   000F06  8EA6               	bsf	166,7,c	;volsfr
  4311   000F08                     
  4312                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  4313   000F08  9CA6               	bcf	166,6,c	;volsfr
  4314   000F0A                     
  4315                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  4316   000F0A  84A6               	bsf	166,2,c	;volsfr
  4317   000F0C                     
  4318                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  4319   000F0C  88A6               	bsf	166,4,c	;volsfr
  4320   000F0E                     
  4321                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  4322   000F0E  9EF2               	bcf	242,7,c	;volatile
  4323   000F10                     
  4324                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  4325   000F10  0E55               	movlw	85
  4326   000F12  6EA7               	movwf	167,c	;volsfr
  4327   000F14                     
  4328                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  4329   000F14  0EAA               	movlw	170
  4330   000F16  6EA7               	movwf	167,c	;volsfr
  4331   000F18                     
  4332                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  4333   000F18  82A6               	bsf	166,1,c	;volsfr
  4334   000F1A                     
  4335                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  4336   000F1A  B008               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  4337   000F1C  D002               	bra	u2295
  4338   000F1E  9EF2               	bcf	242,7,c	;volatile
  4339   000F20  D001               	bra	u2296
  4340   000F22                     u2295:
  4341   000F22  8EF2               	bsf	242,7,c	;volatile
  4342   000F24                     u2296:
  4343   000F24  0012               	return		;funcret
  4344   000F26                     __end_of_FLASH_EraseBlock:
  4345                           	callstack 0
  4346                           
  4347 ;; *************** function _FLASH_ReadByte *****************
  4348 ;; Defined at:
  4349 ;;		line 58 in file "mcc_generated_files/memory.c"
  4350 ;; Parameters:    Size  Location     Type
  4351 ;;  flashAddr       4    3[COMRAM] unsigned long 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;		None
  4354 ;; Return value:  Size  Location     Type
  4355 ;;                  1    wreg      unsigned char 
  4356 ;; Registers used:
  4357 ;;		wreg, status,2
  4358 ;; Tracked objects:
  4359 ;;		On entry : 0/0
  4360 ;;		On exit  : 0/0
  4361 ;;		Unchanged: 0/0
  4362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4363 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4364 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4365 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4366 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4367 ;;Total ram usage:        4 bytes
  4368 ;; Hardware stack levels used: 1
  4369 ;; Hardware stack levels required when called: 2
  4370 ;; This function calls:
  4371 ;;		Nothing
  4372 ;; This function is called by:
  4373 ;;		_saveTimeToFlash
  4374 ;;		_loadTimeFromFlash
  4375 ;;		_FLASH_ReadWord
  4376 ;;		_FLASH_WriteByte
  4377 ;; This function uses a non-reentrant model
  4378 ;;
  4379                           
  4380                           	psect	text11
  4381   000FDC                     __ptext11:
  4382                           	callstack 0
  4383   000FDC                     _FLASH_ReadByte:
  4384                           	callstack 27
  4385   000FDC                     
  4386                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  4387   000FDC  C006  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  4388                           
  4389                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  4390   000FE0  C005  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  4391                           
  4392                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  4393   000FE4  C004  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  4394   000FE8  0008               	tblrd		*	;# 
  4395   000FEA                     
  4396                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  4397   000FEA  50F5               	movf	245,w,c	;volatile
  4398   000FEC  0012               	return		;funcret
  4399   000FEE                     __end_of_FLASH_ReadByte:
  4400                           	callstack 0
  4401                           
  4402 ;; *************** function _displayTime *****************
  4403 ;; Defined at:
  4404 ;;		line 110 in file "main.c"
  4405 ;; Parameters:    Size  Location     Type
  4406 ;;		None
  4407 ;; Auto vars:     Size  Location     Type
  4408 ;;  i               2   10[BANK0 ] int 
  4409 ;;  timeString      5    5[BANK0 ] unsigned char [5]
  4410 ;;  displayStrin    5    0[BANK0 ] unsigned char [5]
  4411 ;; Return value:  Size  Location     Type
  4412 ;;                  1    wreg      void 
  4413 ;; Registers used:
  4414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4415 ;; Tracked objects:
  4416 ;;		On entry : 0/0
  4417 ;;		On exit  : 0/0
  4418 ;;		Unchanged: 0/0
  4419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4420 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4421 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4423 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4424 ;;Total ram usage:       12 bytes
  4425 ;; Hardware stack levels used: 1
  4426 ;; Hardware stack levels required when called: 6
  4427 ;; This function calls:
  4428 ;;		___awdiv
  4429 ;;		___awmod
  4430 ;;		_printString
  4431 ;; This function is called by:
  4432 ;;		_main
  4433 ;;		_checkButtons
  4434 ;; This function uses a non-reentrant model
  4435 ;;
  4436                           
  4437                           	psect	text12
  4438   000A0A                     __ptext12:
  4439                           	callstack 0
  4440   000A0A                     _displayTime:
  4441                           	callstack 24
  4442   000A0A                     
  4443                           ;main.c: 112:     char timeString[5];;main.c: 115:     timeString[0] = (hours / 10) + '0
      +                          ';
  4444   000A0A  C0CE  F004         	movff	_hours,___awdiv@dividend
  4445   000A0E  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4446   000A10  0E00               	movlw	0
  4447   000A12  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4448   000A14  0E0A               	movlw	10
  4449   000A16  6E06               	movwf	___awdiv@divisor^0,c
  4450   000A18  ECE6  F003         	call	___awdiv	;wreg free
  4451   000A1C  5004               	movf	?___awdiv^0,w,c
  4452   000A1E  0F30               	addlw	48
  4453   000A20  0100               	movlb	0	; () banked
  4454   000A22  6FD8               	movwf	displayTime@timeString& (0+255),b
  4455                           
  4456                           ;main.c: 116:     timeString[1] = (hours % 10) + '0';
  4457   000A24  C0CE  F004         	movff	_hours,___awmod@dividend
  4458   000A28  6A05               	clrf	(___awmod@dividend+1)^0,c
  4459   000A2A  0E00               	movlw	0
  4460   000A2C  6E07               	movwf	(___awmod@divisor+1)^0,c
  4461   000A2E  0E0A               	movlw	10
  4462   000A30  6E06               	movwf	___awmod@divisor^0,c
  4463   000A32  ECB9  F005         	call	___awmod	;wreg free
  4464   000A36  5004               	movf	?___awmod^0,w,c
  4465   000A38  0F30               	addlw	48
  4466   000A3A  0100               	movlb	0	; () banked
  4467   000A3C  6FD9               	movwf	(displayTime@timeString+1)& (0+255),b
  4468                           
  4469                           ;main.c: 117:     timeString[2] = (minutes / 10) + '0';
  4470   000A3E  C0CD  F004         	movff	_minutes,___awdiv@dividend
  4471   000A42  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4472   000A44  0E00               	movlw	0
  4473   000A46  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4474   000A48  0E0A               	movlw	10
  4475   000A4A  6E06               	movwf	___awdiv@divisor^0,c
  4476   000A4C  ECE6  F003         	call	___awdiv	;wreg free
  4477   000A50  5004               	movf	?___awdiv^0,w,c
  4478   000A52  0F30               	addlw	48
  4479   000A54  0100               	movlb	0	; () banked
  4480   000A56  6FDA               	movwf	(displayTime@timeString+2)& (0+255),b
  4481                           
  4482                           ;main.c: 118:     timeString[3] = (minutes % 10) + '0';
  4483   000A58  C0CD  F004         	movff	_minutes,___awmod@dividend
  4484   000A5C  6A05               	clrf	(___awmod@dividend+1)^0,c
  4485   000A5E  0E00               	movlw	0
  4486   000A60  6E07               	movwf	(___awmod@divisor+1)^0,c
  4487   000A62  0E0A               	movlw	10
  4488   000A64  6E06               	movwf	___awmod@divisor^0,c
  4489   000A66  ECB9  F005         	call	___awmod	;wreg free
  4490   000A6A  5004               	movf	?___awmod^0,w,c
  4491   000A6C  0F30               	addlw	48
  4492   000A6E  0100               	movlb	0	; () banked
  4493   000A70  6FDB               	movwf	(displayTime@timeString+3)& (0+255),b
  4494   000A72                     
  4495                           ; BSR set to: 0
  4496                           ;main.c: 119:     timeString[4] = '\0';
  4497   000A72  0E00               	movlw	0
  4498   000A74  6FDC               	movwf	(displayTime@timeString+4)& (0+255),b
  4499   000A76                     
  4500                           ; BSR set to: 0
  4501                           ;main.c: 122:     uint8_t displayString[5];;main.c: 123:     for (int i = 0; i < 5; i++)
      +                           {
  4502   000A76  0E00               	movlw	0
  4503   000A78  6FDE               	movwf	(displayTime@i+1)& (0+255),b
  4504   000A7A  0E00               	movlw	0
  4505   000A7C  6FDD               	movwf	displayTime@i& (0+255),b
  4506   000A7E                     l2619:
  4507                           
  4508                           ; BSR set to: 0
  4509                           ;main.c: 124:         displayString[i] = (uint8_t)timeString[i];
  4510   000A7E  51DD               	movf	displayTime@i& (0+255),w,b
  4511   000A80  0FD8               	addlw	low displayTime@timeString
  4512   000A82  6ED9               	movwf	fsr2l,c
  4513   000A84  6ADA               	clrf	fsr2h,c
  4514   000A86  51DD               	movf	displayTime@i& (0+255),w,b
  4515   000A88  0FD3               	addlw	low displayTime@displayString
  4516   000A8A  6EE1               	movwf	fsr1l,c
  4517   000A8C  6AE2               	clrf	fsr1h,c
  4518   000A8E  CFDF FFE7          	movff	indf2,indf1
  4519   000A92                     
  4520                           ; BSR set to: 0
  4521                           ;main.c: 125:     }
  4522   000A92  4BDD               	infsnz	displayTime@i& (0+255),f,b
  4523   000A94  2BDE               	incf	(displayTime@i+1)& (0+255),f,b
  4524   000A96                     
  4525                           ; BSR set to: 0
  4526   000A96  BFDE               	btfsc	(displayTime@i+1)& (0+255),7,b
  4527   000A98  EF57  F005         	goto	u1561
  4528   000A9C  51DE               	movf	(displayTime@i+1)& (0+255),w,b
  4529   000A9E  E109               	bnz	u1560
  4530   000AA0  0E05               	movlw	5
  4531   000AA2  5DDD               	subwf	displayTime@i& (0+255),w,b
  4532   000AA4  A0D8               	btfss	status,0,c
  4533   000AA6  EF57  F005         	goto	u1561
  4534   000AAA  EF59  F005         	goto	u1560
  4535   000AAE                     u1561:
  4536   000AAE  EF3F  F005         	goto	l2619
  4537   000AB2                     u1560:
  4538   000AB2                     
  4539                           ; BSR set to: 0
  4540                           ;main.c: 127:     printString(displayString);
  4541   000AB2  0ED3               	movlw	low displayTime@displayString
  4542   000AB4  6E44               	movwf	printString@str^0,c
  4543   000AB6  6A45               	clrf	(printString@str+1)^0,c
  4544   000AB8  EC7F  F001         	call	_printString	;wreg free
  4545   000ABC  0012               	return		;funcret
  4546   000ABE                     __end_of_displayTime:
  4547                           	callstack 0
  4548                           
  4549 ;; *************** function _displayAlarmTime *****************
  4550 ;; Defined at:
  4551 ;;		line 130 in file "main.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;  i               2   10[BANK0 ] int 
  4556 ;;  alarmTimeStr    5    5[BANK0 ] unsigned char [5]
  4557 ;;  displayStrin    5    0[BANK0 ] unsigned char [5]
  4558 ;; Return value:  Size  Location     Type
  4559 ;;                  1    wreg      void 
  4560 ;; Registers used:
  4561 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4562 ;; Tracked objects:
  4563 ;;		On entry : 0/0
  4564 ;;		On exit  : 0/0
  4565 ;;		Unchanged: 0/0
  4566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4568 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4570 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4571 ;;Total ram usage:       12 bytes
  4572 ;; Hardware stack levels used: 1
  4573 ;; Hardware stack levels required when called: 6
  4574 ;; This function calls:
  4575 ;;		___awdiv
  4576 ;;		___awmod
  4577 ;;		_printString
  4578 ;; This function is called by:
  4579 ;;		_checkButtons
  4580 ;; This function uses a non-reentrant model
  4581 ;;
  4582                           
  4583                           	psect	text13
  4584   000ABE                     __ptext13:
  4585                           	callstack 0
  4586   000ABE                     _displayAlarmTime:
  4587                           	callstack 23
  4588   000ABE                     
  4589                           ;main.c: 132:     char alarmTimeString[5];;main.c: 135:     alarmTimeString[0] = (alarmH
      +                          ours / 10) + '0';
  4590   000ABE  C0CB  F004         	movff	_alarmHours,___awdiv@dividend
  4591   000AC2  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4592   000AC4  0E00               	movlw	0
  4593   000AC6  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4594   000AC8  0E0A               	movlw	10
  4595   000ACA  6E06               	movwf	___awdiv@divisor^0,c
  4596   000ACC  ECE6  F003         	call	___awdiv	;wreg free
  4597   000AD0  5004               	movf	?___awdiv^0,w,c
  4598   000AD2  0F30               	addlw	48
  4599   000AD4  0100               	movlb	0	; () banked
  4600   000AD6  6FD8               	movwf	displayAlarmTime@alarmTimeString& (0+255),b
  4601                           
  4602                           ;main.c: 136:     alarmTimeString[1] = (alarmHours % 10) + '0';
  4603   000AD8  C0CB  F004         	movff	_alarmHours,___awmod@dividend
  4604   000ADC  6A05               	clrf	(___awmod@dividend+1)^0,c
  4605   000ADE  0E00               	movlw	0
  4606   000AE0  6E07               	movwf	(___awmod@divisor+1)^0,c
  4607   000AE2  0E0A               	movlw	10
  4608   000AE4  6E06               	movwf	___awmod@divisor^0,c
  4609   000AE6  ECB9  F005         	call	___awmod	;wreg free
  4610   000AEA  5004               	movf	?___awmod^0,w,c
  4611   000AEC  0F30               	addlw	48
  4612   000AEE  0100               	movlb	0	; () banked
  4613   000AF0  6FD9               	movwf	(displayAlarmTime@alarmTimeString+1)& (0+255),b
  4614                           
  4615                           ;main.c: 137:     alarmTimeString[2] = (alarmMinutes / 10) + '0';
  4616   000AF2  C0CA  F004         	movff	_alarmMinutes,___awdiv@dividend
  4617   000AF6  6A05               	clrf	(___awdiv@dividend+1)^0,c
  4618   000AF8  0E00               	movlw	0
  4619   000AFA  6E07               	movwf	(___awdiv@divisor+1)^0,c
  4620   000AFC  0E0A               	movlw	10
  4621   000AFE  6E06               	movwf	___awdiv@divisor^0,c
  4622   000B00  ECE6  F003         	call	___awdiv	;wreg free
  4623   000B04  5004               	movf	?___awdiv^0,w,c
  4624   000B06  0F30               	addlw	48
  4625   000B08  0100               	movlb	0	; () banked
  4626   000B0A  6FDA               	movwf	(displayAlarmTime@alarmTimeString+2)& (0+255),b
  4627                           
  4628                           ;main.c: 138:     alarmTimeString[3] = (alarmMinutes % 10) + '0';
  4629   000B0C  C0CA  F004         	movff	_alarmMinutes,___awmod@dividend
  4630   000B10  6A05               	clrf	(___awmod@dividend+1)^0,c
  4631   000B12  0E00               	movlw	0
  4632   000B14  6E07               	movwf	(___awmod@divisor+1)^0,c
  4633   000B16  0E0A               	movlw	10
  4634   000B18  6E06               	movwf	___awmod@divisor^0,c
  4635   000B1A  ECB9  F005         	call	___awmod	;wreg free
  4636   000B1E  5004               	movf	?___awmod^0,w,c
  4637   000B20  0F30               	addlw	48
  4638   000B22  0100               	movlb	0	; () banked
  4639   000B24  6FDB               	movwf	(displayAlarmTime@alarmTimeString+3)& (0+255),b
  4640   000B26                     
  4641                           ; BSR set to: 0
  4642                           ;main.c: 139:     alarmTimeString[4] = '\0';
  4643   000B26  0E00               	movlw	0
  4644   000B28  6FDC               	movwf	(displayAlarmTime@alarmTimeString+4)& (0+255),b
  4645   000B2A                     
  4646                           ; BSR set to: 0
  4647                           ;main.c: 142:     uint8_t displayString[5];;main.c: 143:     for (int i = 0; i < 5; i++)
      +                           {
  4648   000B2A  0E00               	movlw	0
  4649   000B2C  6FDE               	movwf	(displayAlarmTime@i+1)& (0+255),b
  4650   000B2E  0E00               	movlw	0
  4651   000B30  6FDD               	movwf	displayAlarmTime@i& (0+255),b
  4652   000B32                     l2651:
  4653                           
  4654                           ; BSR set to: 0
  4655                           ;main.c: 144:         displayString[i] = (uint8_t)alarmTimeString[i];
  4656   000B32  51DD               	movf	displayAlarmTime@i& (0+255),w,b
  4657   000B34  0FD8               	addlw	low displayAlarmTime@alarmTimeString
  4658   000B36  6ED9               	movwf	fsr2l,c
  4659   000B38  6ADA               	clrf	fsr2h,c
  4660   000B3A  51DD               	movf	displayAlarmTime@i& (0+255),w,b
  4661   000B3C  0FD3               	addlw	low displayAlarmTime@displayString
  4662   000B3E  6EE1               	movwf	fsr1l,c
  4663   000B40  6AE2               	clrf	fsr1h,c
  4664   000B42  CFDF FFE7          	movff	indf2,indf1
  4665   000B46                     
  4666                           ; BSR set to: 0
  4667                           ;main.c: 145:     }
  4668   000B46  4BDD               	infsnz	displayAlarmTime@i& (0+255),f,b
  4669   000B48  2BDE               	incf	(displayAlarmTime@i+1)& (0+255),f,b
  4670   000B4A                     
  4671                           ; BSR set to: 0
  4672   000B4A  BFDE               	btfsc	(displayAlarmTime@i+1)& (0+255),7,b
  4673   000B4C  EFB1  F005         	goto	u1581
  4674   000B50  51DE               	movf	(displayAlarmTime@i+1)& (0+255),w,b
  4675   000B52  E109               	bnz	u1580
  4676   000B54  0E05               	movlw	5
  4677   000B56  5DDD               	subwf	displayAlarmTime@i& (0+255),w,b
  4678   000B58  A0D8               	btfss	status,0,c
  4679   000B5A  EFB1  F005         	goto	u1581
  4680   000B5E  EFB3  F005         	goto	u1580
  4681   000B62                     u1581:
  4682   000B62  EF99  F005         	goto	l2651
  4683   000B66                     u1580:
  4684   000B66                     
  4685                           ; BSR set to: 0
  4686                           ;main.c: 147:     printString(displayString);
  4687   000B66  0ED3               	movlw	low displayAlarmTime@displayString
  4688   000B68  6E44               	movwf	printString@str^0,c
  4689   000B6A  6A45               	clrf	(printString@str+1)^0,c
  4690   000B6C  EC7F  F001         	call	_printString	;wreg free
  4691   000B70  0012               	return		;funcret
  4692   000B72                     __end_of_displayAlarmTime:
  4693                           	callstack 0
  4694                           
  4695 ;; *************** function _printString *****************
  4696 ;; Defined at:
  4697 ;;		line 161 in file "MAX7219.c"
  4698 ;; Parameters:    Size  Location     Type
  4699 ;;  str             2   67[COMRAM] PTR unsigned char 
  4700 ;;		 -> STR_1(6), displayAlarmTime@displayString(5), displayTime@displayString(5), 
  4701 ;; Auto vars:     Size  Location     Type
  4702 ;;  j               2   86[COMRAM] int 
  4703 ;;  data            1   79[COMRAM] unsigned char 
  4704 ;;  i               2   82[COMRAM] int 
  4705 ;;  indx            2   77[COMRAM] int 
  4706 ;;  k               2   84[COMRAM] int 
  4707 ;;  strindx         2   80[COMRAM] int 
  4708 ;; Return value:  Size  Location     Type
  4709 ;;                  1    wreg      void 
  4710 ;; Registers used:
  4711 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4712 ;; Tracked objects:
  4713 ;;		On entry : 0/0
  4714 ;;		On exit  : 0/0
  4715 ;;		Unchanged: 0/0
  4716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4717 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4718 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4719 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4720 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4721 ;;Total ram usage:       21 bytes
  4722 ;; Hardware stack levels used: 1
  4723 ;; Hardware stack levels required when called: 5
  4724 ;; This function calls:
  4725 ;;		_flushBuffer
  4726 ;; This function is called by:
  4727 ;;		_displayTime
  4728 ;;		_displayAlarmTime
  4729 ;;		_triggerAlarm
  4730 ;; This function uses a non-reentrant model
  4731 ;;
  4732                           
  4733                           	psect	text14
  4734   0002FE                     __ptext14:
  4735                           	callstack 0
  4736   0002FE                     _printString:
  4737                           	callstack 23
  4738   0002FE                     
  4739                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  4740   0002FE  0E00               	movlw	0
  4741   000300  6E52               	movwf	(printString@strindx+1)^0,c
  4742   000302  0E00               	movlw	0
  4743   000304  6E51               	movwf	printString@strindx^0,c
  4744                           
  4745                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  4746   000306  0E00               	movlw	0
  4747   000308  6E56               	movwf	(printString@k+1)^0,c
  4748   00030A  0E1F               	movlw	31
  4749   00030C  6E55               	movwf	printString@k^0,c
  4750                           
  4751                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  4752   00030E  EF21  F002         	goto	l2509
  4753   000312                     l2469:
  4754                           
  4755                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  4756   000312  0E00               	movlw	0
  4757   000314  6E4F               	movwf	(printString@indx+1)^0,c
  4758   000316  0E00               	movlw	0
  4759   000318  6E4E               	movwf	printString@indx^0,c
  4760                           
  4761                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  4762   00031A  0E00               	movlw	0
  4763   00031C  6E54               	movwf	(printString@i+1)^0,c
  4764   00031E  0E00               	movlw	0
  4765   000320  6E53               	movwf	printString@i^0,c
  4766   000322                     l2475:
  4767                           
  4768                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  4769   000322  0E00               	movlw	0
  4770   000324  6E50               	movwf	printString@data^0,c
  4771                           
  4772                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  4773   000326  0E00               	movlw	0
  4774   000328  6E58               	movwf	(printString@j+1)^0,c
  4775   00032A  0E07               	movlw	7
  4776   00032C  6E57               	movwf	printString@j^0,c
  4777   00032E                     l2481:
  4778                           
  4779                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  4780   00032E  5051               	movf	printString@strindx^0,w,c
  4781   000330  2444               	addwf	printString@str^0,w,c
  4782   000332  6E46               	movwf	??_printString^0,c
  4783   000334  5052               	movf	(printString@strindx+1)^0,w,c
  4784   000336  2045               	addwfc	(printString@str+1)^0,w,c
  4785   000338  6E47               	movwf	(??_printString+1)^0,c
  4786   00033A  C046  FFF6         	movff	??_printString,tblptrl
  4787   00033E  C047  FFF7         	movff	??_printString+1,tblptrh
  4788   000342  0E00               	movlw	low (__mediumconst shr (0+16))
  4789   000344  6EF8               	movwf	tblptru,c
  4790   000346  0E0F               	movlw	(high __ramtop+-1)
  4791   000348  64F7               	cpfsgt	tblptrh,c
  4792   00034A  D003               	bra	u1407
  4793   00034C  0008               	tblrd		*
  4794   00034E  50F5               	movf	tablat,w,c
  4795   000350  D005               	bra	u1400
  4796   000352                     u1407:
  4797   000352  CFF6 FFE1          	movff	tblptrl,fsr1l
  4798   000356  CFF7 FFE2          	movff	tblptrh,fsr1h
  4799   00035A  50E7               	movf	indf1,w,c
  4800   00035C                     u1400:
  4801   00035C  6E48               	movwf	(??_printString+2)^0,c
  4802   00035E  5048               	movf	(??_printString+2)^0,w,c
  4803   000360  0D08               	mullw	8
  4804   000362  0EF9               	movlw	low _MAX7219_Dot_Matrix_font
  4805   000364  24F3               	addwf	243,w,c
  4806   000366  6E49               	movwf	(??_printString+3)^0,c
  4807   000368  0EF7               	movlw	high _MAX7219_Dot_Matrix_font
  4808   00036A  20F4               	addwfc	prodh,w,c
  4809   00036C  6E4A               	movwf	(??_printString+4)^0,c
  4810   00036E  504E               	movf	printString@indx^0,w,c
  4811   000370  2649               	addwf	(??_printString+3)^0,f,c
  4812   000372  504F               	movf	(printString@indx+1)^0,w,c
  4813   000374  224A               	addwfc	(??_printString+4)^0,f,c
  4814   000376  C049  FFF6         	movff	??_printString+3,tblptrl
  4815   00037A  C04A  FFF7         	movff	??_printString+4,tblptrh
  4816   00037E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  4817   00037E  6AF8               	clrf	tblptru,c
  4818   000380                     	endif
  4819   000380                     	if	0	;tblptru may be non-zero
  4820   000380                     	endif
  4821   000380  0008               	tblrd		*
  4822   000382  CFF5 F04B          	movff	tablat,??_printString+5
  4823   000386  C057  F04C         	movff	printString@j,??_printString+6
  4824   00038A  0E01               	movlw	1
  4825   00038C  6E4D               	movwf	(??_printString+7)^0,c
  4826   00038E  2A4C               	incf	(??_printString+6)^0,f,c
  4827   000390  EFCC  F001         	goto	u1414
  4828   000394                     u1415:
  4829   000394  90D8               	bcf	status,0,c
  4830   000396  364D               	rlcf	(??_printString+7)^0,f,c
  4831   000398                     u1414:
  4832   000398  2E4C               	decfsz	(??_printString+6)^0,f,c
  4833   00039A  EFCA  F001         	goto	u1415
  4834   00039E  504D               	movf	(??_printString+7)^0,w,c
  4835   0003A0  144B               	andwf	(??_printString+5)^0,w,c
  4836   0003A2  0900               	iorlw	0
  4837   0003A4  B4D8               	btfsc	status,2,c
  4838   0003A6  EFD7  F001         	goto	u1421
  4839   0003AA  EFD9  F001         	goto	u1420
  4840   0003AE                     u1421:
  4841   0003AE  EFE8  F001         	goto	l2485
  4842   0003B2                     u1420:
  4843   0003B2                     
  4844                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  4845   0003B2  5057               	movf	printString@j^0,w,c
  4846   0003B4  0807               	sublw	7
  4847   0003B6  6E46               	movwf	??_printString^0,c
  4848   0003B8  0E01               	movlw	1
  4849   0003BA  6E47               	movwf	(??_printString+1)^0,c
  4850   0003BC  2A46               	incf	??_printString^0,f,c
  4851   0003BE  EFE3  F001         	goto	u1434
  4852   0003C2                     u1435:
  4853   0003C2  90D8               	bcf	status,0,c
  4854   0003C4  3647               	rlcf	(??_printString+1)^0,f,c
  4855   0003C6                     u1434:
  4856   0003C6  2E46               	decfsz	??_printString^0,f,c
  4857   0003C8  EFE1  F001         	goto	u1435
  4858   0003CC  5047               	movf	(??_printString+1)^0,w,c
  4859   0003CE  1250               	iorwf	printString@data^0,f,c
  4860   0003D0                     l2485:
  4861                           
  4862                           ;MAX7219.c: 179:             }
  4863   0003D0  0657               	decf	printString@j^0,f,c
  4864   0003D2  A0D8               	btfss	status,0,c
  4865   0003D4  0658               	decf	(printString@j+1)^0,f,c
  4866   0003D6  BE58               	btfsc	(printString@j+1)^0,7,c
  4867   0003D8  EFF2  F001         	goto	u1440
  4868   0003DC  EFF0  F001         	goto	u1441
  4869   0003E0                     u1441:
  4870   0003E0  EF97  F001         	goto	l2481
  4871   0003E4                     u1440:
  4872   0003E4                     
  4873                           ;MAX7219.c: 180:             if (k < 0) break;
  4874   0003E4  BE56               	btfsc	(printString@k+1)^0,7,c
  4875   0003E6  EFF9  F001         	goto	u1450
  4876   0003EA  EFF7  F001         	goto	u1451
  4877   0003EE                     u1451:
  4878   0003EE  EFFB  F001         	goto	l2493
  4879   0003F2                     u1450:
  4880   0003F2  EF16  F002         	goto	l2503
  4881   0003F6                     l2493:
  4882                           
  4883                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  4884   0003F6  5055               	movf	printString@k^0,w,c
  4885   0003F8  0F80               	addlw	low _bufferCol
  4886   0003FA  6ED9               	movwf	fsr2l,c
  4887   0003FC  6ADA               	clrf	fsr2h,c
  4888   0003FE  C050  FFDF         	movff	printString@data,indf2
  4889   000402  0655               	decf	printString@k^0,f,c
  4890   000404  A0D8               	btfss	status,0,c
  4891   000406  0656               	decf	(printString@k+1)^0,f,c
  4892   000408                     
  4893                           ;MAX7219.c: 182:             indx++;
  4894   000408  4A4E               	infsnz	printString@indx^0,f,c
  4895   00040A  2A4F               	incf	(printString@indx+1)^0,f,c
  4896   00040C                     
  4897                           ;MAX7219.c: 183:         }
  4898   00040C  4A53               	infsnz	printString@i^0,f,c
  4899   00040E  2A54               	incf	(printString@i+1)^0,f,c
  4900   000410  BE54               	btfsc	(printString@i+1)^0,7,c
  4901   000412  EF14  F002         	goto	u1461
  4902   000416  5054               	movf	(printString@i+1)^0,w,c
  4903   000418  E109               	bnz	u1460
  4904   00041A  0E08               	movlw	8
  4905   00041C  5C53               	subwf	printString@i^0,w,c
  4906   00041E  A0D8               	btfss	status,0,c
  4907   000420  EF14  F002         	goto	u1461
  4908   000424  EF16  F002         	goto	u1460
  4909   000428                     u1461:
  4910   000428  EF91  F001         	goto	l2475
  4911   00042C                     u1460:
  4912   00042C                     l2503:
  4913                           
  4914                           ;MAX7219.c: 184:         strindx++;
  4915   00042C  4A51               	infsnz	printString@strindx^0,f,c
  4916   00042E  2A52               	incf	(printString@strindx+1)^0,f,c
  4917   000430                     
  4918                           ;MAX7219.c: 185:         if (k < 0) break;
  4919   000430  BE56               	btfsc	(printString@k+1)^0,7,c
  4920   000432  EF1F  F002         	goto	u1470
  4921   000436  EF1D  F002         	goto	u1471
  4922   00043A                     u1471:
  4923   00043A  EF21  F002         	goto	l2509
  4924   00043E                     u1470:
  4925   00043E  EF40  F002         	goto	l2511
  4926   000442                     l2509:
  4927                           
  4928                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  4929   000442  5051               	movf	printString@strindx^0,w,c
  4930   000444  2444               	addwf	printString@str^0,w,c
  4931   000446  6E46               	movwf	??_printString^0,c
  4932   000448  5052               	movf	(printString@strindx+1)^0,w,c
  4933   00044A  2045               	addwfc	(printString@str+1)^0,w,c
  4934   00044C  6E47               	movwf	(??_printString+1)^0,c
  4935   00044E  C046  FFF6         	movff	??_printString,tblptrl
  4936   000452  C047  FFF7         	movff	??_printString+1,tblptrh
  4937   000456  0E00               	movlw	low (__mediumconst shr (0+16))
  4938   000458  6EF8               	movwf	tblptru,c
  4939   00045A  0E0F               	movlw	(high __ramtop+-1)
  4940   00045C  64F7               	cpfsgt	tblptrh,c
  4941   00045E  D003               	bra	u1487
  4942   000460  0008               	tblrd		*
  4943   000462  50F5               	movf	tablat,w,c
  4944   000464  D005               	bra	u1480
  4945   000466                     u1487:
  4946   000466  CFF6 FFE1          	movff	tblptrl,fsr1l
  4947   00046A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4948   00046E  50E7               	movf	indf1,w,c
  4949   000470                     u1480:
  4950   000470  0900               	iorlw	0
  4951   000472  A4D8               	btfss	status,2,c
  4952   000474  EF3E  F002         	goto	u1491
  4953   000478  EF40  F002         	goto	u1490
  4954   00047C                     u1491:
  4955   00047C  EF89  F001         	goto	l2469
  4956   000480                     u1490:
  4957   000480                     l2511:
  4958                           
  4959                           ;MAX7219.c: 188:     flushBuffer();
  4960   000480  EC43  F002         	call	_flushBuffer	;wreg free
  4961   000484  0012               	return		;funcret
  4962   000486                     __end_of_printString:
  4963                           	callstack 0
  4964                           
  4965 ;; *************** function _flushBuffer *****************
  4966 ;; Defined at:
  4967 ;;		line 52 in file "MAX7219.c"
  4968 ;; Parameters:    Size  Location     Type
  4969 ;;		None
  4970 ;; Auto vars:     Size  Location     Type
  4971 ;;  j               2   61[COMRAM] int 
  4972 ;;  dev             2   59[COMRAM] int 
  4973 ;;  row             2   63[COMRAM] int 
  4974 ;;  i               2   65[COMRAM] int 
  4975 ;;  bufferRow      32   27[COMRAM] unsigned char [32]
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  1    wreg      void 
  4978 ;; Registers used:
  4979 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4986 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4987 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;Total ram usage:       43 bytes
  4990 ;; Hardware stack levels used: 1
  4991 ;; Hardware stack levels required when called: 4
  4992 ;; This function calls:
  4993 ;;		___awdiv
  4994 ;;		_max_write
  4995 ;; This function is called by:
  4996 ;;		_clearDisplay
  4997 ;;		_printString
  4998 ;;		_shiftLeft
  4999 ;;		_shiftchar
  5000 ;; This function uses a non-reentrant model
  5001 ;;
  5002                           
  5003                           	psect	text15
  5004   000486                     __ptext15:
  5005                           	callstack 0
  5006   000486                     _flushBuffer:
  5007                           	callstack 23
  5008   000486                     
  5009                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  5010   000486  EE20  F01C         	lfsr	2,flushBuffer@bufferRow
  5011   00048A  0E1F               	movlw	31
  5012   00048C                     u1271:
  5013   00048C  6ADE               	clrf	postinc2,c
  5014   00048E  06E8               	decf	wreg,f,c
  5015   000490  E2FD               	bc	u1271
  5016   000492                     
  5017                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  5018   000492  0E00               	movlw	0
  5019   000494  6E43               	movwf	(flushBuffer@i+1)^0,c
  5020   000496  0E00               	movlw	0
  5021   000498  6E42               	movwf	flushBuffer@i^0,c
  5022   00049A                     l2359:
  5023                           
  5024                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  5025   00049A  C042  F004         	movff	flushBuffer@i,___awdiv@dividend
  5026   00049E  C043  F005         	movff	flushBuffer@i+1,___awdiv@dividend+1
  5027   0004A2  0E00               	movlw	0
  5028   0004A4  6E07               	movwf	(___awdiv@divisor+1)^0,c
  5029   0004A6  0E08               	movlw	8
  5030   0004A8  6E06               	movwf	___awdiv@divisor^0,c
  5031   0004AA  ECE6  F003         	call	___awdiv	;wreg free
  5032   0004AE  C004  F03C         	movff	?___awdiv,flushBuffer@dev
  5033   0004B2  C005  F03D         	movff	?___awdiv+1,flushBuffer@dev+1
  5034   0004B6                     
  5035                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  5036   0004B6  0E00               	movlw	0
  5037   0004B8  6E3F               	movwf	(flushBuffer@j+1)^0,c
  5038   0004BA  0E00               	movlw	0
  5039   0004BC  6E3E               	movwf	flushBuffer@j^0,c
  5040   0004BE                     l2367:
  5041                           
  5042                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  5043   0004BE  5042               	movf	flushBuffer@i^0,w,c
  5044   0004C0  0F80               	addlw	low _bufferCol
  5045   0004C2  6ED9               	movwf	fsr2l,c
  5046   0004C4  6ADA               	clrf	fsr2h,c
  5047   0004C6  50DF               	movf	indf2,w,c
  5048   0004C8  6E19               	movwf	??_flushBuffer^0,c
  5049   0004CA  C03E  F01A         	movff	flushBuffer@j,??_flushBuffer+1
  5050   0004CE  0E01               	movlw	1
  5051   0004D0  6E1B               	movwf	(??_flushBuffer+2)^0,c
  5052   0004D2  2A1A               	incf	(??_flushBuffer+1)^0,f,c
  5053   0004D4  EF6E  F002         	goto	u1284
  5054   0004D8                     u1285:
  5055   0004D8  90D8               	bcf	status,0,c
  5056   0004DA  361B               	rlcf	(??_flushBuffer+2)^0,f,c
  5057   0004DC                     u1284:
  5058   0004DC  2E1A               	decfsz	(??_flushBuffer+1)^0,f,c
  5059   0004DE  EF6C  F002         	goto	u1285
  5060   0004E2  501B               	movf	(??_flushBuffer+2)^0,w,c
  5061   0004E4  1419               	andwf	??_flushBuffer^0,w,c
  5062   0004E6  0900               	iorlw	0
  5063   0004E8  B4D8               	btfsc	status,2,c
  5064   0004EA  EF79  F002         	goto	u1291
  5065   0004EE  EF7B  F002         	goto	u1290
  5066   0004F2                     u1291:
  5067   0004F2  EF95  F002         	goto	l2371
  5068   0004F6                     u1290:
  5069   0004F6                     
  5070                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  5071   0004F6  503C               	movf	flushBuffer@dev^0,w,c
  5072   0004F8  0D08               	mullw	8
  5073   0004FA  5042               	movf	flushBuffer@i^0,w,c
  5074   0004FC  5CF3               	subwf	243,w,c
  5075   0004FE  6E19               	movwf	??_flushBuffer^0,c
  5076   000500  0E07               	movlw	7
  5077   000502  2619               	addwf	??_flushBuffer^0,f,c
  5078   000504  0E01               	movlw	1
  5079   000506  6E1A               	movwf	(??_flushBuffer+1)^0,c
  5080   000508  2A19               	incf	??_flushBuffer^0,f,c
  5081   00050A  EF89  F002         	goto	u1304
  5082   00050E                     u1305:
  5083   00050E  90D8               	bcf	status,0,c
  5084   000510  361A               	rlcf	(??_flushBuffer+1)^0,f,c
  5085   000512                     u1304:
  5086   000512  2E19               	decfsz	??_flushBuffer^0,f,c
  5087   000514  EF87  F002         	goto	u1305
  5088   000518  503C               	movf	flushBuffer@dev^0,w,c
  5089   00051A  0D08               	mullw	8
  5090   00051C  50F3               	movf	243,w,c
  5091   00051E  0F1C               	addlw	low flushBuffer@bufferRow
  5092   000520  243E               	addwf	flushBuffer@j^0,w,c
  5093   000522  6ED9               	movwf	fsr2l,c
  5094   000524  6ADA               	clrf	fsr2h,c
  5095   000526  501A               	movf	(??_flushBuffer+1)^0,w,c
  5096   000528  12DF               	iorwf	indf2,f,c
  5097   00052A                     l2371:
  5098                           
  5099                           ;MAX7219.c: 66:   }
  5100   00052A  4A3E               	infsnz	flushBuffer@j^0,f,c
  5101   00052C  2A3F               	incf	(flushBuffer@j+1)^0,f,c
  5102   00052E  BE3F               	btfsc	(flushBuffer@j+1)^0,7,c
  5103   000530  EFA3  F002         	goto	u1311
  5104   000534  503F               	movf	(flushBuffer@j+1)^0,w,c
  5105   000536  E109               	bnz	u1310
  5106   000538  0E08               	movlw	8
  5107   00053A  5C3E               	subwf	flushBuffer@j^0,w,c
  5108   00053C  A0D8               	btfss	status,0,c
  5109   00053E  EFA3  F002         	goto	u1311
  5110   000542  EFA5  F002         	goto	u1310
  5111   000546                     u1311:
  5112   000546  EF5F  F002         	goto	l2367
  5113   00054A                     u1310:
  5114   00054A                     
  5115                           ;MAX7219.c: 67:  }
  5116   00054A  4A42               	infsnz	flushBuffer@i^0,f,c
  5117   00054C  2A43               	incf	(flushBuffer@i+1)^0,f,c
  5118   00054E  BE43               	btfsc	(flushBuffer@i+1)^0,7,c
  5119   000550  EFB3  F002         	goto	u1321
  5120   000554  5043               	movf	(flushBuffer@i+1)^0,w,c
  5121   000556  E109               	bnz	u1320
  5122   000558  0E20               	movlw	32
  5123   00055A  5C42               	subwf	flushBuffer@i^0,w,c
  5124   00055C  A0D8               	btfss	status,0,c
  5125   00055E  EFB3  F002         	goto	u1321
  5126   000562  EFB5  F002         	goto	u1320
  5127   000566                     u1321:
  5128   000566  EF4D  F002         	goto	l2359
  5129   00056A                     u1320:
  5130   00056A                     
  5131                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  5132   00056A  0E00               	movlw	0
  5133   00056C  6E41               	movwf	(flushBuffer@row+1)^0,c
  5134   00056E  0E01               	movlw	1
  5135   000570  6E40               	movwf	flushBuffer@row^0,c
  5136   000572                     l2385:
  5137                           
  5138                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  5139   000572  C040  F00C         	movff	flushBuffer@row,max_write@row
  5140   000576  C041  F00D         	movff	flushBuffer@row+1,max_write@row+1
  5141   00057A  C040  F019         	movff	flushBuffer@row,??_flushBuffer
  5142   00057E  0EFF               	movlw	255
  5143   000580  2619               	addwf	??_flushBuffer^0,f,c
  5144   000582  5019               	movf	??_flushBuffer^0,w,c
  5145   000584  0F1C               	addlw	low flushBuffer@bufferRow
  5146   000586  6ED9               	movwf	fsr2l,c
  5147   000588  6ADA               	clrf	fsr2h,c
  5148   00058A  50DF               	movf	indf2,w,c
  5149   00058C  6E0E               	movwf	max_write@data^0,c
  5150   00058E  EC48  F004         	call	_max_write	;wreg free
  5151   000592                     
  5152                           ;MAX7219.c: 73:  }
  5153   000592  4A40               	infsnz	flushBuffer@row^0,f,c
  5154   000594  2A41               	incf	(flushBuffer@row+1)^0,f,c
  5155   000596  BE41               	btfsc	(flushBuffer@row+1)^0,7,c
  5156   000598  EFD7  F002         	goto	u1331
  5157   00059C  5041               	movf	(flushBuffer@row+1)^0,w,c
  5158   00059E  E109               	bnz	u1330
  5159   0005A0  0E21               	movlw	33
  5160   0005A2  5C40               	subwf	flushBuffer@row^0,w,c
  5161   0005A4  A0D8               	btfss	status,0,c
  5162   0005A6  EFD7  F002         	goto	u1331
  5163   0005AA  EFD9  F002         	goto	u1330
  5164   0005AE                     u1331:
  5165   0005AE  EFB9  F002         	goto	l2385
  5166   0005B2                     u1330:
  5167   0005B2  0012               	return		;funcret
  5168   0005B4                     __end_of_flushBuffer:
  5169                           	callstack 0
  5170                           
  5171 ;; *************** function _max_write *****************
  5172 ;; Defined at:
  5173 ;;		line 10 in file "MAX7219.c"
  5174 ;; Parameters:    Size  Location     Type
  5175 ;;  row             2   11[COMRAM] int 
  5176 ;;  data            1   13[COMRAM] unsigned char 
  5177 ;; Auto vars:     Size  Location     Type
  5178 ;;  dev             2   20[COMRAM] int 
  5179 ;;  writeData       2   22[COMRAM] unsigned short 
  5180 ;;  devTarget       2   18[COMRAM] int 
  5181 ;;  offset          2   16[COMRAM] int 
  5182 ;; Return value:  Size  Location     Type
  5183 ;;                  1    wreg      void 
  5184 ;; Registers used:
  5185 ;;		wreg, status,2, status,0, cstack
  5186 ;; Tracked objects:
  5187 ;;		On entry : 0/0
  5188 ;;		On exit  : 0/0
  5189 ;;		Unchanged: 0/0
  5190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5191 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5192 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5193 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5194 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5195 ;;Total ram usage:       13 bytes
  5196 ;; Hardware stack levels used: 1
  5197 ;; Hardware stack levels required when called: 3
  5198 ;; This function calls:
  5199 ;;		_SPI_Exchange8bit
  5200 ;;		___awdiv
  5201 ;; This function is called by:
  5202 ;;		_flushBuffer
  5203 ;; This function uses a non-reentrant model
  5204 ;;
  5205                           
  5206                           	psect	text16
  5207   000890                     __ptext16:
  5208                           	callstack 0
  5209   000890                     _max_write:
  5210                           	callstack 23
  5211   000890                     
  5212                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  5213   000890  0EFF               	movlw	255
  5214   000892  240C               	addwf	max_write@row^0,w,c
  5215   000894  6E04               	movwf	___awdiv@dividend^0,c
  5216   000896  0EFF               	movlw	255
  5217   000898  200D               	addwfc	(max_write@row+1)^0,w,c
  5218   00089A  6E05               	movwf	(___awdiv@dividend+1)^0,c
  5219   00089C  0E00               	movlw	0
  5220   00089E  6E07               	movwf	(___awdiv@divisor+1)^0,c
  5221   0008A0  0E08               	movlw	8
  5222   0008A2  6E06               	movwf	___awdiv@divisor^0,c
  5223   0008A4  ECE6  F003         	call	___awdiv	;wreg free
  5224   0008A8  C004  F013         	movff	?___awdiv,max_write@devTarget
  5225   0008AC  C005  F014         	movff	?___awdiv+1,max_write@devTarget+1
  5226   0008B0                     
  5227                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  5228   0008B0  C013  F00F         	movff	max_write@devTarget,??_max_write
  5229   0008B4  C014  F010         	movff	max_write@devTarget+1,??_max_write+1
  5230   0008B8  90D8               	bcf	status,0,c
  5231   0008BA  360F               	rlcf	??_max_write^0,f,c
  5232   0008BC  3610               	rlcf	(??_max_write+1)^0,f,c
  5233   0008BE  90D8               	bcf	status,0,c
  5234   0008C0  360F               	rlcf	??_max_write^0,f,c
  5235   0008C2  3610               	rlcf	(??_max_write+1)^0,f,c
  5236   0008C4  90D8               	bcf	status,0,c
  5237   0008C6  360F               	rlcf	??_max_write^0,f,c
  5238   0008C8  3610               	rlcf	(??_max_write+1)^0,f,c
  5239   0008CA  C00F  F011         	movff	??_max_write,max_write@offset
  5240   0008CE  C010  F012         	movff	??_max_write+1,max_write@offset+1
  5241   0008D2  948B               	bcf	139,2,c	;volatile
  5242   0008D4                     
  5243                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  5244   0008D4  0E00               	movlw	0
  5245   0008D6  6E16               	movwf	(max_write@dev+1)^0,c
  5246   0008D8  0E00               	movlw	0
  5247   0008DA  6E15               	movwf	max_write@dev^0,c
  5248   0008DC                     l2307:
  5249                           
  5250                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  5251   0008DC  5013               	movf	max_write@devTarget^0,w,c
  5252   0008DE  1815               	xorwf	max_write@dev^0,w,c
  5253   0008E0  E107               	bnz	u1241
  5254   0008E2  5014               	movf	(max_write@devTarget+1)^0,w,c
  5255   0008E4  1816               	xorwf	(max_write@dev+1)^0,w,c
  5256   0008E6  A4D8               	btfss	status,2,c
  5257   0008E8  EF78  F004         	goto	u1241
  5258   0008EC  EF7A  F004         	goto	u1240
  5259   0008F0                     u1241:
  5260   0008F0  EF90  F004         	goto	l2315
  5261   0008F4                     u1240:
  5262   0008F4                     
  5263                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  5264   0008F4  5011               	movf	max_write@offset^0,w,c
  5265   0008F6  5C0C               	subwf	max_write@row^0,w,c
  5266   0008F8  6E0F               	movwf	??_max_write^0,c
  5267   0008FA  5012               	movf	(max_write@offset+1)^0,w,c
  5268   0008FC  580D               	subwfb	(max_write@row+1)^0,w,c
  5269   0008FE  6E10               	movwf	(??_max_write+1)^0,c
  5270   000900  C00F  F010         	movff	??_max_write,??_max_write+1
  5271   000904  6A0F               	clrf	??_max_write^0,c
  5272   000906  500E               	movf	max_write@data^0,w,c
  5273   000908  100F               	iorwf	??_max_write^0,w,c
  5274   00090A  6E17               	movwf	max_write@writeData^0,c
  5275   00090C  5010               	movf	(??_max_write+1)^0,w,c
  5276   00090E  6E18               	movwf	(max_write@writeData+1)^0,c
  5277   000910                     
  5278                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5279   000910  5018               	movf	(max_write@writeData+1)^0,w,c
  5280   000912  ECD7  F007         	call	_SPI_Exchange8bit
  5281   000916                     
  5282                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  5283   000916  5017               	movf	max_write@writeData^0,w,c
  5284   000918  ECD7  F007         	call	_SPI_Exchange8bit
  5285                           
  5286                           ;MAX7219.c: 31:   }
  5287   00091C  EF96  F004         	goto	l2321
  5288   000920                     l2315:
  5289   000920                     
  5290                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5291   000920  0E00               	movlw	0
  5292   000922  ECD7  F007         	call	_SPI_Exchange8bit
  5293   000926                     
  5294                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  5295   000926  0E00               	movlw	0
  5296   000928  ECD7  F007         	call	_SPI_Exchange8bit
  5297   00092C                     l2321:
  5298                           
  5299                           ;MAX7219.c: 46:  }
  5300   00092C  4A15               	infsnz	max_write@dev^0,f,c
  5301   00092E  2A16               	incf	(max_write@dev+1)^0,f,c
  5302   000930  BE16               	btfsc	(max_write@dev+1)^0,7,c
  5303   000932  EFA4  F004         	goto	u1251
  5304   000936  5016               	movf	(max_write@dev+1)^0,w,c
  5305   000938  E109               	bnz	u1250
  5306   00093A  0E04               	movlw	4
  5307   00093C  5C15               	subwf	max_write@dev^0,w,c
  5308   00093E  A0D8               	btfss	status,0,c
  5309   000940  EFA4  F004         	goto	u1251
  5310   000944  EFA6  F004         	goto	u1250
  5311   000948                     u1251:
  5312   000948  EF6E  F004         	goto	l2307
  5313   00094C                     u1250:
  5314   00094C  848B               	bsf	139,2,c	;volatile
  5315   00094E  0012               	return		;funcret
  5316   000950                     __end_of_max_write:
  5317                           	callstack 0
  5318                           
  5319 ;; *************** function ___awdiv *****************
  5320 ;; Defined at:
  5321 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5322 ;; Parameters:    Size  Location     Type
  5323 ;;  dividend        2    3[COMRAM] int 
  5324 ;;  divisor         2    5[COMRAM] int 
  5325 ;; Auto vars:     Size  Location     Type
  5326 ;;  quotient        2    9[COMRAM] int 
  5327 ;;  sign            1    8[COMRAM] unsigned char 
  5328 ;;  counter         1    7[COMRAM] unsigned char 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  2    3[COMRAM] int 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5339 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5341 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5342 ;;Total ram usage:        8 bytes
  5343 ;; Hardware stack levels used: 1
  5344 ;; Hardware stack levels required when called: 2
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_displayTime
  5349 ;;		_displayAlarmTime
  5350 ;;		_max_write
  5351 ;;		_flushBuffer
  5352 ;; This function uses a non-reentrant model
  5353 ;;
  5354                           
  5355                           	psect	text17
  5356   0007CC                     __ptext17:
  5357                           	callstack 0
  5358   0007CC                     ___awdiv:
  5359                           	callstack 23
  5360   0007CC  0E00               	movlw	0
  5361   0007CE  6E09               	movwf	___awdiv@sign^0,c
  5362   0007D0  BE07               	btfsc	(___awdiv@divisor+1)^0,7,c
  5363   0007D2  EFEF  F003         	goto	u1180
  5364   0007D6  EFED  F003         	goto	u1181
  5365   0007DA                     u1181:
  5366   0007DA  EFF5  F003         	goto	l2257
  5367   0007DE                     u1180:
  5368   0007DE  6C06               	negf	___awdiv@divisor^0,c
  5369   0007E0  1E07               	comf	(___awdiv@divisor+1)^0,f,c
  5370   0007E2  B0D8               	btfsc	status,0,c
  5371   0007E4  2A07               	incf	(___awdiv@divisor+1)^0,f,c
  5372   0007E6  0E01               	movlw	1
  5373   0007E8  6E09               	movwf	___awdiv@sign^0,c
  5374   0007EA                     l2257:
  5375   0007EA  BE05               	btfsc	(___awdiv@dividend+1)^0,7,c
  5376   0007EC  EFFC  F003         	goto	u1190
  5377   0007F0  EFFA  F003         	goto	u1191
  5378   0007F4                     u1191:
  5379   0007F4  EF02  F004         	goto	l2263
  5380   0007F8                     u1190:
  5381   0007F8  6C04               	negf	___awdiv@dividend^0,c
  5382   0007FA  1E05               	comf	(___awdiv@dividend+1)^0,f,c
  5383   0007FC  B0D8               	btfsc	status,0,c
  5384   0007FE  2A05               	incf	(___awdiv@dividend+1)^0,f,c
  5385   000800  0E01               	movlw	1
  5386   000802  1A09               	xorwf	___awdiv@sign^0,f,c
  5387   000804                     l2263:
  5388   000804  0E00               	movlw	0
  5389   000806  6E0B               	movwf	(___awdiv@quotient+1)^0,c
  5390   000808  0E00               	movlw	0
  5391   00080A  6E0A               	movwf	___awdiv@quotient^0,c
  5392   00080C  5006               	movf	___awdiv@divisor^0,w,c
  5393   00080E  1007               	iorwf	(___awdiv@divisor+1)^0,w,c
  5394   000810  B4D8               	btfsc	status,2,c
  5395   000812  EF0D  F004         	goto	u1201
  5396   000816  EF0F  F004         	goto	u1200
  5397   00081A                     u1201:
  5398   00081A  EF37  F004         	goto	l2285
  5399   00081E                     u1200:
  5400   00081E  0E01               	movlw	1
  5401   000820  6E08               	movwf	___awdiv@counter^0,c
  5402   000822  EF17  F004         	goto	l2271
  5403   000826                     l2269:
  5404   000826  90D8               	bcf	status,0,c
  5405   000828  3606               	rlcf	___awdiv@divisor^0,f,c
  5406   00082A  3607               	rlcf	(___awdiv@divisor+1)^0,f,c
  5407   00082C  2A08               	incf	___awdiv@counter^0,f,c
  5408   00082E                     l2271:
  5409   00082E  AE07               	btfss	(___awdiv@divisor+1)^0,7,c
  5410   000830  EF1C  F004         	goto	u1211
  5411   000834  EF1E  F004         	goto	u1210
  5412   000838                     u1211:
  5413   000838  EF13  F004         	goto	l2269
  5414   00083C                     u1210:
  5415   00083C                     l2273:
  5416   00083C  90D8               	bcf	status,0,c
  5417   00083E  360A               	rlcf	___awdiv@quotient^0,f,c
  5418   000840  360B               	rlcf	(___awdiv@quotient+1)^0,f,c
  5419   000842  5006               	movf	___awdiv@divisor^0,w,c
  5420   000844  5C04               	subwf	___awdiv@dividend^0,w,c
  5421   000846  5007               	movf	(___awdiv@divisor+1)^0,w,c
  5422   000848  5805               	subwfb	(___awdiv@dividend+1)^0,w,c
  5423   00084A  A0D8               	btfss	status,0,c
  5424   00084C  EF2A  F004         	goto	u1221
  5425   000850  EF2C  F004         	goto	u1220
  5426   000854                     u1221:
  5427   000854  EF31  F004         	goto	l2281
  5428   000858                     u1220:
  5429   000858  5006               	movf	___awdiv@divisor^0,w,c
  5430   00085A  5E04               	subwf	___awdiv@dividend^0,f,c
  5431   00085C  5007               	movf	(___awdiv@divisor+1)^0,w,c
  5432   00085E  5A05               	subwfb	(___awdiv@dividend+1)^0,f,c
  5433   000860  800A               	bsf	___awdiv@quotient^0,0,c
  5434   000862                     l2281:
  5435   000862  90D8               	bcf	status,0,c
  5436   000864  3207               	rrcf	(___awdiv@divisor+1)^0,f,c
  5437   000866  3206               	rrcf	___awdiv@divisor^0,f,c
  5438   000868  2E08               	decfsz	___awdiv@counter^0,f,c
  5439   00086A  EF1E  F004         	goto	l2273
  5440   00086E                     l2285:
  5441   00086E  5009               	movf	___awdiv@sign^0,w,c
  5442   000870  B4D8               	btfsc	status,2,c
  5443   000872  EF3D  F004         	goto	u1231
  5444   000876  EF3F  F004         	goto	u1230
  5445   00087A                     u1231:
  5446   00087A  EF43  F004         	goto	l2289
  5447   00087E                     u1230:
  5448   00087E  6C0A               	negf	___awdiv@quotient^0,c
  5449   000880  1E0B               	comf	(___awdiv@quotient+1)^0,f,c
  5450   000882  B0D8               	btfsc	status,0,c
  5451   000884  2A0B               	incf	(___awdiv@quotient+1)^0,f,c
  5452   000886                     l2289:
  5453   000886  C00A  F004         	movff	___awdiv@quotient,?___awdiv
  5454   00088A  C00B  F005         	movff	___awdiv@quotient+1,?___awdiv+1
  5455   00088E  0012               	return		;funcret
  5456   000890                     __end_of___awdiv:
  5457                           	callstack 0
  5458                           
  5459 ;; *************** function _SPI_Exchange8bit *****************
  5460 ;; Defined at:
  5461 ;;		line 77 in file "mcc_generated_files/spi.c"
  5462 ;; Parameters:    Size  Location     Type
  5463 ;;  data            1    wreg     unsigned char 
  5464 ;; Auto vars:     Size  Location     Type
  5465 ;;  data            1    3[COMRAM] unsigned char 
  5466 ;; Return value:  Size  Location     Type
  5467 ;;                  1    wreg      unsigned char 
  5468 ;; Registers used:
  5469 ;;		wreg, status,2
  5470 ;; Tracked objects:
  5471 ;;		On entry : 0/0
  5472 ;;		On exit  : 0/0
  5473 ;;		Unchanged: 0/0
  5474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5475 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5476 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5477 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5478 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5479 ;;Total ram usage:        1 bytes
  5480 ;; Hardware stack levels used: 1
  5481 ;; Hardware stack levels required when called: 2
  5482 ;; This function calls:
  5483 ;;		Nothing
  5484 ;; This function is called by:
  5485 ;;		_max_write
  5486 ;;		_max7219_cmd
  5487 ;;		_SPI_Exchange8bitBuffer
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text18
  5492   000FAE                     __ptext18:
  5493                           	callstack 0
  5494   000FAE                     _SPI_Exchange8bit:
  5495                           	callstack 23
  5496                           
  5497                           ;incstack = 0
  5498                           ;SPI_Exchange8bit@data stored from wreg
  5499   000FAE  6E04               	movwf	SPI_Exchange8bit@data^0,c
  5500   000FB0                     
  5501                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  5502   000FB0  9EC6               	bcf	198,7,c	;volatile
  5503   000FB2                     
  5504                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  5505   000FB2  C004  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  5506   000FB6                     l18:
  5507                           
  5508                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  5509   000FB6  A0C7               	btfss	199,0,c	;volatile
  5510   000FB8  EFE0  F007         	goto	u1171
  5511   000FBC  EFE2  F007         	goto	u1170
  5512   000FC0                     u1171:
  5513   000FC0  EFDB  F007         	goto	l18
  5514   000FC4                     u1170:
  5515   000FC4                     
  5516                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  5517   000FC4  50C9               	movf	201,w,c	;volatile
  5518   000FC6  0012               	return		;funcret
  5519   000FC8                     __end_of_SPI_Exchange8bit:
  5520                           	callstack 0
  5521                           
  5522 ;; *************** function ___awmod *****************
  5523 ;; Defined at:
  5524 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5525 ;; Parameters:    Size  Location     Type
  5526 ;;  dividend        2    3[COMRAM] int 
  5527 ;;  divisor         2    5[COMRAM] int 
  5528 ;; Auto vars:     Size  Location     Type
  5529 ;;  sign            1    8[COMRAM] unsigned char 
  5530 ;;  counter         1    7[COMRAM] unsigned char 
  5531 ;; Return value:  Size  Location     Type
  5532 ;;                  2    3[COMRAM] int 
  5533 ;; Registers used:
  5534 ;;		wreg, status,2, status,0
  5535 ;; Tracked objects:
  5536 ;;		On entry : 0/0
  5537 ;;		On exit  : 0/0
  5538 ;;		Unchanged: 0/0
  5539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5540 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5541 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5543 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5544 ;;Total ram usage:        6 bytes
  5545 ;; Hardware stack levels used: 1
  5546 ;; Hardware stack levels required when called: 2
  5547 ;; This function calls:
  5548 ;;		Nothing
  5549 ;; This function is called by:
  5550 ;;		_displayTime
  5551 ;;		_displayAlarmTime
  5552 ;;		_checkButtons
  5553 ;; This function uses a non-reentrant model
  5554 ;;
  5555                           
  5556                           	psect	text19
  5557   000B72                     __ptext19:
  5558                           	callstack 0
  5559   000B72                     ___awmod:
  5560                           	callstack 27
  5561   000B72  0E00               	movlw	0
  5562   000B74  6E09               	movwf	___awmod@sign^0,c
  5563   000B76  BE05               	btfsc	(___awmod@dividend+1)^0,7,c
  5564   000B78  EFC2  F005         	goto	u1500
  5565   000B7C  EFC0  F005         	goto	u1501
  5566   000B80                     u1501:
  5567   000B80  EFC8  F005         	goto	l2521
  5568   000B84                     u1500:
  5569   000B84  6C04               	negf	___awmod@dividend^0,c
  5570   000B86  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5571   000B88  B0D8               	btfsc	status,0,c
  5572   000B8A  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5573   000B8C  0E01               	movlw	1
  5574   000B8E  6E09               	movwf	___awmod@sign^0,c
  5575   000B90                     l2521:
  5576   000B90  BE07               	btfsc	(___awmod@divisor+1)^0,7,c
  5577   000B92  EFCF  F005         	goto	u1510
  5578   000B96  EFCD  F005         	goto	u1511
  5579   000B9A                     u1511:
  5580   000B9A  EFD3  F005         	goto	l2525
  5581   000B9E                     u1510:
  5582   000B9E  6C06               	negf	___awmod@divisor^0,c
  5583   000BA0  1E07               	comf	(___awmod@divisor+1)^0,f,c
  5584   000BA2  B0D8               	btfsc	status,0,c
  5585   000BA4  2A07               	incf	(___awmod@divisor+1)^0,f,c
  5586   000BA6                     l2525:
  5587   000BA6  5006               	movf	___awmod@divisor^0,w,c
  5588   000BA8  1007               	iorwf	(___awmod@divisor+1)^0,w,c
  5589   000BAA  B4D8               	btfsc	status,2,c
  5590   000BAC  EFDA  F005         	goto	u1521
  5591   000BB0  EFDC  F005         	goto	u1520
  5592   000BB4                     u1521:
  5593   000BB4  EF00  F006         	goto	l2541
  5594   000BB8                     u1520:
  5595   000BB8  0E01               	movlw	1
  5596   000BBA  6E08               	movwf	___awmod@counter^0,c
  5597   000BBC  EFE4  F005         	goto	l2531
  5598   000BC0                     l2529:
  5599   000BC0  90D8               	bcf	status,0,c
  5600   000BC2  3606               	rlcf	___awmod@divisor^0,f,c
  5601   000BC4  3607               	rlcf	(___awmod@divisor+1)^0,f,c
  5602   000BC6  2A08               	incf	___awmod@counter^0,f,c
  5603   000BC8                     l2531:
  5604   000BC8  AE07               	btfss	(___awmod@divisor+1)^0,7,c
  5605   000BCA  EFE9  F005         	goto	u1531
  5606   000BCE  EFEB  F005         	goto	u1530
  5607   000BD2                     u1531:
  5608   000BD2  EFE0  F005         	goto	l2529
  5609   000BD6                     u1530:
  5610   000BD6                     l2533:
  5611   000BD6  5006               	movf	___awmod@divisor^0,w,c
  5612   000BD8  5C04               	subwf	___awmod@dividend^0,w,c
  5613   000BDA  5007               	movf	(___awmod@divisor+1)^0,w,c
  5614   000BDC  5805               	subwfb	(___awmod@dividend+1)^0,w,c
  5615   000BDE  A0D8               	btfss	status,0,c
  5616   000BE0  EFF4  F005         	goto	u1541
  5617   000BE4  EFF6  F005         	goto	u1540
  5618   000BE8                     u1541:
  5619   000BE8  EFFA  F005         	goto	l2537
  5620   000BEC                     u1540:
  5621   000BEC  5006               	movf	___awmod@divisor^0,w,c
  5622   000BEE  5E04               	subwf	___awmod@dividend^0,f,c
  5623   000BF0  5007               	movf	(___awmod@divisor+1)^0,w,c
  5624   000BF2  5A05               	subwfb	(___awmod@dividend+1)^0,f,c
  5625   000BF4                     l2537:
  5626   000BF4  90D8               	bcf	status,0,c
  5627   000BF6  3207               	rrcf	(___awmod@divisor+1)^0,f,c
  5628   000BF8  3206               	rrcf	___awmod@divisor^0,f,c
  5629   000BFA  2E08               	decfsz	___awmod@counter^0,f,c
  5630   000BFC  EFEB  F005         	goto	l2533
  5631   000C00                     l2541:
  5632   000C00  5009               	movf	___awmod@sign^0,w,c
  5633   000C02  B4D8               	btfsc	status,2,c
  5634   000C04  EF06  F006         	goto	u1551
  5635   000C08  EF08  F006         	goto	u1550
  5636   000C0C                     u1551:
  5637   000C0C  EF0C  F006         	goto	l2545
  5638   000C10                     u1550:
  5639   000C10  6C04               	negf	___awmod@dividend^0,c
  5640   000C12  1E05               	comf	(___awmod@dividend+1)^0,f,c
  5641   000C14  B0D8               	btfsc	status,0,c
  5642   000C16  2A05               	incf	(___awmod@dividend+1)^0,f,c
  5643   000C18                     l2545:
  5644   000C18  C004  F004         	movff	___awmod@dividend,?___awmod
  5645   000C1C  C005  F005         	movff	___awmod@dividend+1,?___awmod+1
  5646   000C20  0012               	return		;funcret
  5647   000C22                     __end_of___awmod:
  5648                           	callstack 0
  5649                           
  5650 ;; *************** function _clearAlarm *****************
  5651 ;; Defined at:
  5652 ;;		line 198 in file "main.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;		None
  5655 ;; Auto vars:     Size  Location     Type
  5656 ;;		None
  5657 ;; Return value:  Size  Location     Type
  5658 ;;                  1    wreg      void 
  5659 ;; Registers used:
  5660 ;;		wreg, status,2
  5661 ;; Tracked objects:
  5662 ;;		On entry : 0/0
  5663 ;;		On exit  : 0/0
  5664 ;;		Unchanged: 0/0
  5665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5670 ;;Total ram usage:        0 bytes
  5671 ;; Hardware stack levels used: 1
  5672 ;; Hardware stack levels required when called: 2
  5673 ;; This function calls:
  5674 ;;		Nothing
  5675 ;; This function is called by:
  5676 ;;		_checkButtons
  5677 ;; This function uses a non-reentrant model
  5678 ;;
  5679                           
  5680                           	psect	text20
  5681   00101C                     __ptext20:
  5682                           	callstack 0
  5683   00101C                     _clearAlarm:
  5684                           	callstack 27
  5685   00101C                     
  5686                           ;main.c: 200:     alarmTriggered = 0;
  5687   00101C  0E00               	movlw	0
  5688   00101E  0100               	movlb	0	; () banked
  5689   001020  6FC7               	movwf	_alarmTriggered& (0+255),b
  5690                           
  5691                           ;main.c: 201:     alarmSet = 0;
  5692   001022  0E00               	movlw	0
  5693   001024  6FC9               	movwf	_alarmSet& (0+255),b
  5694   001026                     
  5695                           ; BSR set to: 0
  5696   001026  0012               	return		;funcret
  5697   001028                     __end_of_clearAlarm:
  5698                           	callstack 0
  5699                           
  5700 ;; *************** function _TMR0_StartTimer *****************
  5701 ;; Defined at:
  5702 ;;		line 86 in file "mcc_generated_files/tmr0.c"
  5703 ;; Parameters:    Size  Location     Type
  5704 ;;		None
  5705 ;; Auto vars:     Size  Location     Type
  5706 ;;		None
  5707 ;; Return value:  Size  Location     Type
  5708 ;;                  1    wreg      void 
  5709 ;; Registers used:
  5710 ;;		None
  5711 ;; Tracked objects:
  5712 ;;		On entry : 0/0
  5713 ;;		On exit  : 0/0
  5714 ;;		Unchanged: 0/0
  5715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5716 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5717 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5718 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5719 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5720 ;;Total ram usage:        0 bytes
  5721 ;; Hardware stack levels used: 1
  5722 ;; Hardware stack levels required when called: 2
  5723 ;; This function calls:
  5724 ;;		Nothing
  5725 ;; This function is called by:
  5726 ;;		_main
  5727 ;; This function uses a non-reentrant model
  5728 ;;
  5729                           
  5730                           	psect	text21
  5731   001052                     __ptext21:
  5732                           	callstack 0
  5733   001052                     _TMR0_StartTimer:
  5734                           	callstack 28
  5735   001052                     
  5736                           ;mcc_generated_files/tmr0.c: 89:     T0CONbits.TMR0ON = 1;
  5737   001052  8ED5               	bsf	213,7,c	;volatile
  5738   001054  0012               	return		;funcret
  5739   001056                     __end_of_TMR0_StartTimer:
  5740                           	callstack 0
  5741                           
  5742 ;; *************** function _TMR0_Reload *****************
  5743 ;; Defined at:
  5744 ;;		line 118 in file "mcc_generated_files/tmr0.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;		None
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      void 
  5751 ;; Registers used:
  5752 ;;		wreg, status,2
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5761 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5762 ;;Total ram usage:        0 bytes
  5763 ;; Hardware stack levels used: 1
  5764 ;; Hardware stack levels required when called: 2
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		_main
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           	psect	text22
  5773   001028                     __ptext22:
  5774                           	callstack 0
  5775   001028                     _TMR0_Reload:
  5776                           	callstack 28
  5777   001028                     
  5778                           ;mcc_generated_files/tmr0.c: 121:     TMR0H = timer0ReloadVal >> 8;
  5779   001028  0100               	movlb	0	; () banked
  5780   00102A  51C1               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  5781   00102C  6ED7               	movwf	215,c	;volatile
  5782   00102E                     
  5783                           ; BSR set to: 0
  5784                           ;mcc_generated_files/tmr0.c: 122:     TMR0L = (uint8_t) timer0ReloadVal;
  5785   00102E  C0C0  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5786   001032                     
  5787                           ; BSR set to: 0
  5788   001032  0012               	return		;funcret
  5789   001034                     __end_of_TMR0_Reload:
  5790                           	callstack 0
  5791                           
  5792 ;; *************** function _TMR0_HasOverflowOccured *****************
  5793 ;; Defined at:
  5794 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  5795 ;; Parameters:    Size  Location     Type
  5796 ;;		None
  5797 ;; Auto vars:     Size  Location     Type
  5798 ;;		None
  5799 ;; Return value:  Size  Location     Type
  5800 ;;                  1    wreg      _Bool 
  5801 ;; Registers used:
  5802 ;;		wreg
  5803 ;; Tracked objects:
  5804 ;;		On entry : 0/0
  5805 ;;		On exit  : 0/0
  5806 ;;		Unchanged: 0/0
  5807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5810 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5811 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5812 ;;Total ram usage:        0 bytes
  5813 ;; Hardware stack levels used: 1
  5814 ;; Hardware stack levels required when called: 2
  5815 ;; This function calls:
  5816 ;;		Nothing
  5817 ;; This function is called by:
  5818 ;;		_main
  5819 ;; This function uses a non-reentrant model
  5820 ;;
  5821                           
  5822                           	psect	text23
  5823   000FC8                     __ptext23:
  5824                           	callstack 0
  5825   000FC8                     _TMR0_HasOverflowOccured:
  5826                           	callstack 28
  5827   000FC8                     
  5828                           ;mcc_generated_files/tmr0.c: 128:     return(INTCONbits.TMR0IF);
  5829   000FC8  B4F2               	btfsc	242,2,c	;volatile
  5830   000FCA  EFE9  F007         	goto	u1651
  5831   000FCE  EFEC  F007         	goto	u1650
  5832   000FD2                     u1651:
  5833   000FD2  0E01               	movlw	1
  5834   000FD4  EFED  F007         	goto	u1656
  5835   000FD8                     u1650:
  5836   000FD8  0E00               	movlw	0
  5837   000FDA                     u1656:
  5838   000FDA  0012               	return		;funcret
  5839   000FDC                     __end_of_TMR0_HasOverflowOccured:
  5840                           	callstack 0
  5841                           
  5842 ;; *************** function _SYSTEM_Initialize *****************
  5843 ;; Defined at:
  5844 ;;		line 108 in file "mcc_generated_files/mcc.c"
  5845 ;; Parameters:    Size  Location     Type
  5846 ;;		None
  5847 ;; Auto vars:     Size  Location     Type
  5848 ;;		None
  5849 ;; Return value:  Size  Location     Type
  5850 ;;                  1    wreg      void 
  5851 ;; Registers used:
  5852 ;;		wreg, status,2, status,0, cstack
  5853 ;; Tracked objects:
  5854 ;;		On entry : 0/0
  5855 ;;		On exit  : 0/0
  5856 ;;		Unchanged: 0/0
  5857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5859 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5861 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5862 ;;Total ram usage:        0 bytes
  5863 ;; Hardware stack levels used: 1
  5864 ;; Hardware stack levels required when called: 4
  5865 ;; This function calls:
  5866 ;;		_EUSART_Initialize
  5867 ;;		_INTERRUPT_Initialize
  5868 ;;		_OSCILLATOR_Initialize
  5869 ;;		_PIN_MANAGER_Initialize
  5870 ;;		_PWM2_Initialize
  5871 ;;		_SPI_Initialize
  5872 ;;		_TMR0_Initialize
  5873 ;;		_TMR2_Initialize
  5874 ;; This function is called by:
  5875 ;;		_main
  5876 ;; This function uses a non-reentrant model
  5877 ;;
  5878                           
  5879                           	psect	text24
  5880   000F4E                     __ptext24:
  5881                           	callstack 0
  5882   000F4E                     _SYSTEM_Initialize:
  5883                           	callstack 26
  5884   000F4E                     
  5885                           ;mcc_generated_files/mcc.c: 110:     INTERRUPT_Initialize();
  5886   000F4E  EC2B  F008         	call	_INTERRUPT_Initialize	;wreg free
  5887   000F52                     
  5888                           ;mcc_generated_files/mcc.c: 111:     PIN_MANAGER_Initialize();
  5889   000F52  ECB8  F007         	call	_PIN_MANAGER_Initialize	;wreg free
  5890   000F56                     
  5891                           ;mcc_generated_files/mcc.c: 112:     OSCILLATOR_Initialize();
  5892   000F56  EC1A  F008         	call	_OSCILLATOR_Initialize	;wreg free
  5893   000F5A                     
  5894                           ;mcc_generated_files/mcc.c: 113:     SPI_Initialize();
  5895   000F5A  EC00  F008         	call	_SPI_Initialize	;wreg free
  5896   000F5E                     
  5897                           ;mcc_generated_files/mcc.c: 114:     PWM2_Initialize();
  5898   000F5E  EC07  F008         	call	_PWM2_Initialize	;wreg free
  5899   000F62                     
  5900                           ;mcc_generated_files/mcc.c: 115:     TMR2_Initialize();
  5901   000F62  ECF7  F007         	call	_TMR2_Initialize	;wreg free
  5902   000F66                     
  5903                           ;mcc_generated_files/mcc.c: 116:     TMR0_Initialize();
  5904   000F66  EC93  F007         	call	_TMR0_Initialize	;wreg free
  5905   000F6A                     
  5906                           ;mcc_generated_files/mcc.c: 117:     EUSART_Initialize();
  5907   000F6A  EC1C  F007         	call	_EUSART_Initialize	;wreg free
  5908   000F6E  0012               	return		;funcret
  5909   000F70                     __end_of_SYSTEM_Initialize:
  5910                           	callstack 0
  5911                           
  5912 ;; *************** function _TMR2_Initialize *****************
  5913 ;; Defined at:
  5914 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  5915 ;; Parameters:    Size  Location     Type
  5916 ;;		None
  5917 ;; Auto vars:     Size  Location     Type
  5918 ;;		None
  5919 ;; Return value:  Size  Location     Type
  5920 ;;                  1    wreg      void 
  5921 ;; Registers used:
  5922 ;;		wreg, status,2
  5923 ;; Tracked objects:
  5924 ;;		On entry : 0/0
  5925 ;;		On exit  : 0/0
  5926 ;;		Unchanged: 0/0
  5927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5928 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5929 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5931 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5932 ;;Total ram usage:        0 bytes
  5933 ;; Hardware stack levels used: 1
  5934 ;; Hardware stack levels required when called: 2
  5935 ;; This function calls:
  5936 ;;		Nothing
  5937 ;; This function is called by:
  5938 ;;		_SYSTEM_Initialize
  5939 ;; This function uses a non-reentrant model
  5940 ;;
  5941                           
  5942                           	psect	text25
  5943   000FEE                     __ptext25:
  5944                           	callstack 0
  5945   000FEE                     _TMR2_Initialize:
  5946                           	callstack 27
  5947   000FEE                     
  5948                           ;mcc_generated_files/tmr2.c: 66:     PR2 = 0x7C;
  5949   000FEE  0E7C               	movlw	124
  5950   000FF0  6ECB               	movwf	203,c	;volatile
  5951                           
  5952                           ;mcc_generated_files/tmr2.c: 69:     TMR2 = 0x00;
  5953   000FF2  0E00               	movlw	0
  5954   000FF4  6ECC               	movwf	204,c	;volatile
  5955   000FF6                     
  5956                           ;mcc_generated_files/tmr2.c: 72:     PIR1bits.TMR2IF = 0;
  5957   000FF6  929E               	bcf	158,1,c	;volatile
  5958                           
  5959                           ;mcc_generated_files/tmr2.c: 75:     T2CON = 0x1D;
  5960   000FF8  0E1D               	movlw	29
  5961   000FFA  6ECA               	movwf	202,c	;volatile
  5962   000FFC                     
  5963                           ;mcc_generated_files/tmr2.c: 77:     T2CONbits.TMR2ON = 1;
  5964   000FFC  84CA               	bsf	202,2,c	;volatile
  5965   000FFE  0012               	return		;funcret
  5966   001000                     __end_of_TMR2_Initialize:
  5967                           	callstack 0
  5968                           
  5969 ;; *************** function _TMR0_Initialize *****************
  5970 ;; Defined at:
  5971 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  5972 ;; Parameters:    Size  Location     Type
  5973 ;;		None
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;		None
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  1    wreg      void 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5985 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5987 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5988 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5989 ;;Total ram usage:        2 bytes
  5990 ;; Hardware stack levels used: 1
  5991 ;; Hardware stack levels required when called: 2
  5992 ;; This function calls:
  5993 ;;		Nothing
  5994 ;; This function is called by:
  5995 ;;		_SYSTEM_Initialize
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text26
  6000   000F26                     __ptext26:
  6001                           	callstack 0
  6002   000F26                     _TMR0_Initialize:
  6003                           	callstack 27
  6004   000F26                     
  6005                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0x0B;
  6006   000F26  0E0B               	movlw	11
  6007   000F28  6ED7               	movwf	215,c	;volatile
  6008                           
  6009                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0xDB;
  6010   000F2A  0EDB               	movlw	219
  6011   000F2C  6ED6               	movwf	214,c	;volatile
  6012   000F2E                     
  6013                           ;mcc_generated_files/tmr0.c: 77:     timer0ReloadVal = (TMR0H << 8) | TMR0L;
  6014   000F2E  50D6               	movf	214,w,c	;volatile
  6015   000F30  CFD7 F004          	movff	4055,??_TMR0_Initialize	;volatile
  6016   000F34  6A05               	clrf	(??_TMR0_Initialize+1)^0,c
  6017   000F36  C004  F005         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  6018   000F3A  6A04               	clrf	??_TMR0_Initialize^0,c
  6019   000F3C  1004               	iorwf	??_TMR0_Initialize^0,w,c
  6020   000F3E  0100               	movlb	0	; () banked
  6021   000F40  6FC0               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  6022   000F42  5005               	movf	(??_TMR0_Initialize+1)^0,w,c
  6023   000F44  6FC1               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  6024   000F46                     
  6025                           ; BSR set to: 0
  6026                           ;mcc_generated_files/tmr0.c: 80:     INTCONbits.TMR0IF = 0;
  6027   000F46  94F2               	bcf	242,2,c	;volatile
  6028   000F48                     
  6029                           ; BSR set to: 0
  6030                           ;mcc_generated_files/tmr0.c: 83:     T0CON = 0x94;
  6031   000F48  0E94               	movlw	148
  6032   000F4A  6ED5               	movwf	213,c	;volatile
  6033   000F4C                     
  6034                           ; BSR set to: 0
  6035   000F4C  0012               	return		;funcret
  6036   000F4E                     __end_of_TMR0_Initialize:
  6037                           	callstack 0
  6038                           
  6039 ;; *************** function _SPI_Initialize *****************
  6040 ;; Defined at:
  6041 ;;		line 63 in file "mcc_generated_files/spi.c"
  6042 ;; Parameters:    Size  Location     Type
  6043 ;;		None
  6044 ;; Auto vars:     Size  Location     Type
  6045 ;;		None
  6046 ;; Return value:  Size  Location     Type
  6047 ;;                  1    wreg      void 
  6048 ;; Registers used:
  6049 ;;		wreg, status,2
  6050 ;; Tracked objects:
  6051 ;;		On entry : 0/0
  6052 ;;		On exit  : 0/0
  6053 ;;		Unchanged: 0/0
  6054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6055 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6056 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6057 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6058 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6059 ;;Total ram usage:        0 bytes
  6060 ;; Hardware stack levels used: 1
  6061 ;; Hardware stack levels required when called: 2
  6062 ;; This function calls:
  6063 ;;		Nothing
  6064 ;; This function is called by:
  6065 ;;		_SYSTEM_Initialize
  6066 ;; This function uses a non-reentrant model
  6067 ;;
  6068                           
  6069                           	psect	text27
  6070   001000                     __ptext27:
  6071                           	callstack 0
  6072   001000                     _SPI_Initialize:
  6073                           	callstack 27
  6074   001000                     
  6075                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  6076   001000  0EC0               	movlw	192
  6077   001002  6EC7               	movwf	199,c	;volatile
  6078                           
  6079                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  6080   001004  0E30               	movlw	48
  6081   001006  6EC6               	movwf	198,c	;volatile
  6082                           
  6083                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  6084   001008  0E00               	movlw	0
  6085   00100A  6EC8               	movwf	200,c	;volatile
  6086   00100C  0012               	return		;funcret
  6087   00100E                     __end_of_SPI_Initialize:
  6088                           	callstack 0
  6089                           
  6090 ;; *************** function _PWM2_Initialize *****************
  6091 ;; Defined at:
  6092 ;;		line 63 in file "mcc_generated_files/pwm2.c"
  6093 ;; Parameters:    Size  Location     Type
  6094 ;;		None
  6095 ;; Auto vars:     Size  Location     Type
  6096 ;;		None
  6097 ;; Return value:  Size  Location     Type
  6098 ;;                  1    wreg      void 
  6099 ;; Registers used:
  6100 ;;		wreg, status,2
  6101 ;; Tracked objects:
  6102 ;;		On entry : 0/0
  6103 ;;		On exit  : 0/0
  6104 ;;		Unchanged: 0/0
  6105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6106 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6107 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6109 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6110 ;;Total ram usage:        0 bytes
  6111 ;; Hardware stack levels used: 1
  6112 ;; Hardware stack levels required when called: 2
  6113 ;; This function calls:
  6114 ;;		Nothing
  6115 ;; This function is called by:
  6116 ;;		_SYSTEM_Initialize
  6117 ;; This function uses a non-reentrant model
  6118 ;;
  6119                           
  6120                           	psect	text28
  6121   00100E                     __ptext28:
  6122                           	callstack 0
  6123   00100E                     _PWM2_Initialize:
  6124                           	callstack 27
  6125   00100E                     
  6126                           ;mcc_generated_files/pwm2.c: 68:     CCP2CON = 0x1C;
  6127   00100E  0E1C               	movlw	28
  6128   001010  6EBA               	movwf	186,c	;volatile
  6129                           
  6130                           ;mcc_generated_files/pwm2.c: 71:     CCPR2L = 0x3E;
  6131   001012  0E3E               	movlw	62
  6132   001014  6EBB               	movwf	187,c	;volatile
  6133                           
  6134                           ;mcc_generated_files/pwm2.c: 74:     CCPR2H = 0x00;
  6135   001016  0E00               	movlw	0
  6136   001018  6EBC               	movwf	188,c	;volatile
  6137   00101A  0012               	return		;funcret
  6138   00101C                     __end_of_PWM2_Initialize:
  6139                           	callstack 0
  6140                           
  6141 ;; *************** function _PIN_MANAGER_Initialize *****************
  6142 ;; Defined at:
  6143 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6144 ;; Parameters:    Size  Location     Type
  6145 ;;		None
  6146 ;; Auto vars:     Size  Location     Type
  6147 ;;		None
  6148 ;; Return value:  Size  Location     Type
  6149 ;;                  1    wreg      void 
  6150 ;; Registers used:
  6151 ;;		wreg, status,2
  6152 ;; Tracked objects:
  6153 ;;		On entry : 0/0
  6154 ;;		On exit  : 0/0
  6155 ;;		Unchanged: 0/0
  6156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6161 ;;Total ram usage:        0 bytes
  6162 ;; Hardware stack levels used: 1
  6163 ;; Hardware stack levels required when called: 2
  6164 ;; This function calls:
  6165 ;;		Nothing
  6166 ;; This function is called by:
  6167 ;;		_SYSTEM_Initialize
  6168 ;; This function uses a non-reentrant model
  6169 ;;
  6170                           
  6171                           	psect	text29
  6172   000F70                     __ptext29:
  6173                           	callstack 0
  6174   000F70                     _PIN_MANAGER_Initialize:
  6175                           	callstack 27
  6176   000F70                     
  6177                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  6178   000F70  0E00               	movlw	0
  6179   000F72  6E89               	movwf	137,c	;volatile
  6180                           
  6181                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  6182   000F74  0E00               	movlw	0
  6183   000F76  6E8A               	movwf	138,c	;volatile
  6184                           
  6185                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  6186   000F78  0E2C               	movlw	44
  6187   000F7A  6E8B               	movwf	139,c	;volatile
  6188   000F7C                     
  6189                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  6190   000F7C  6892               	setf	146,c	;volatile
  6191   000F7E                     
  6192                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  6193   000F7E  6893               	setf	147,c	;volatile
  6194                           
  6195                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x91;
  6196   000F80  0E91               	movlw	145
  6197   000F82  6E94               	movwf	148,c	;volatile
  6198                           
  6199                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  6200   000F84  0E0A               	movlw	10
  6201   000F86  6E7F               	movwf	127,c	;volatile
  6202                           
  6203                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  6204   000F88  0E1F               	movlw	31
  6205   000F8A  6E7E               	movwf	126,c	;volatile
  6206   000F8C                     
  6207                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  6208   000F8C  687C               	setf	124,c	;volatile
  6209   000F8E                     
  6210                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  6211   000F8E  9EF1               	bcf	241,7,c	;volatile
  6212   000F90  0012               	return		;funcret
  6213   000F92                     __end_of_PIN_MANAGER_Initialize:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _OSCILLATOR_Initialize *****************
  6217 ;; Defined at:
  6218 ;;		line 120 in file "mcc_generated_files/mcc.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;		None
  6221 ;; Auto vars:     Size  Location     Type
  6222 ;;		None
  6223 ;; Return value:  Size  Location     Type
  6224 ;;                  1    wreg      void 
  6225 ;; Registers used:
  6226 ;;		wreg, status,2
  6227 ;; Tracked objects:
  6228 ;;		On entry : 0/0
  6229 ;;		On exit  : 0/0
  6230 ;;		Unchanged: 0/0
  6231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6233 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;Total ram usage:        0 bytes
  6237 ;; Hardware stack levels used: 1
  6238 ;; Hardware stack levels required when called: 2
  6239 ;; This function calls:
  6240 ;;		Nothing
  6241 ;; This function is called by:
  6242 ;;		_SYSTEM_Initialize
  6243 ;; This function uses a non-reentrant model
  6244 ;;
  6245                           
  6246                           	psect	text30
  6247   001034                     __ptext30:
  6248                           	callstack 0
  6249   001034                     _OSCILLATOR_Initialize:
  6250                           	callstack 27
  6251   001034                     
  6252                           ;mcc_generated_files/mcc.c: 123:     OSCCON = 0x62;
  6253   001034  0E62               	movlw	98
  6254   001036  6ED3               	movwf	211,c	;volatile
  6255                           
  6256                           ;mcc_generated_files/mcc.c: 125:     OSCTUNE = 0x00;
  6257   001038  0E00               	movlw	0
  6258   00103A  6E9B               	movwf	155,c	;volatile
  6259   00103C  0012               	return		;funcret
  6260   00103E                     __end_of_OSCILLATOR_Initialize:
  6261                           	callstack 0
  6262                           
  6263 ;; *************** function _INTERRUPT_Initialize *****************
  6264 ;; Defined at:
  6265 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6266 ;; Parameters:    Size  Location     Type
  6267 ;;		None
  6268 ;; Auto vars:     Size  Location     Type
  6269 ;;		None
  6270 ;; Return value:  Size  Location     Type
  6271 ;;                  1    wreg      void 
  6272 ;; Registers used:
  6273 ;;		None
  6274 ;; Tracked objects:
  6275 ;;		On entry : 0/0
  6276 ;;		On exit  : 0/0
  6277 ;;		Unchanged: 0/0
  6278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6279 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6282 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6283 ;;Total ram usage:        0 bytes
  6284 ;; Hardware stack levels used: 1
  6285 ;; Hardware stack levels required when called: 2
  6286 ;; This function calls:
  6287 ;;		Nothing
  6288 ;; This function is called by:
  6289 ;;		_SYSTEM_Initialize
  6290 ;; This function uses a non-reentrant model
  6291 ;;
  6292                           
  6293                           	psect	text31
  6294   001056                     __ptext31:
  6295                           	callstack 0
  6296   001056                     _INTERRUPT_Initialize:
  6297                           	callstack 27
  6298   001056                     
  6299                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6300   001056  9ED0               	bcf	208,7,c	;volatile
  6301   001058  0012               	return		;funcret
  6302   00105A                     __end_of_INTERRUPT_Initialize:
  6303                           	callstack 0
  6304                           
  6305 ;; *************** function _EUSART_Initialize *****************
  6306 ;; Defined at:
  6307 ;;		line 75 in file "mcc_generated_files/eusart.c"
  6308 ;; Parameters:    Size  Location     Type
  6309 ;;		None
  6310 ;; Auto vars:     Size  Location     Type
  6311 ;;		None
  6312 ;; Return value:  Size  Location     Type
  6313 ;;                  1    wreg      void 
  6314 ;; Registers used:
  6315 ;;		wreg, status,2, status,0, cstack
  6316 ;; Tracked objects:
  6317 ;;		On entry : 0/0
  6318 ;;		On exit  : 0/0
  6319 ;;		Unchanged: 0/0
  6320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6321 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6322 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6323 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6324 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6325 ;;Total ram usage:        0 bytes
  6326 ;; Hardware stack levels used: 1
  6327 ;; Hardware stack levels required when called: 3
  6328 ;; This function calls:
  6329 ;;		_EUSART_SetRxInterruptHandler
  6330 ;;		_EUSART_SetTxInterruptHandler
  6331 ;; This function is called by:
  6332 ;;		_SYSTEM_Initialize
  6333 ;; This function uses a non-reentrant model
  6334 ;;
  6335                           
  6336                           	psect	text32
  6337   000E38                     __ptext32:
  6338                           	callstack 0
  6339   000E38                     _EUSART_Initialize:
  6340                           	callstack 26
  6341   000E38                     
  6342                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RC1IE = 0;
  6343   000E38  9A9D               	bcf	157,5,c	;volatile
  6344                           
  6345                           ;mcc_generated_files/eusart.c: 79:     PIE1bits.TX1IE = 0;
  6346   000E3A  989D               	bcf	157,4,c	;volatile
  6347   000E3C                     
  6348                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6349   000E3C  0E00               	movlw	0
  6350   000E3E  6E04               	movwf	EUSART_SetTxInterruptHandler@handler^0,c
  6351   000E40  0E00               	movlw	0
  6352   000E42  6E05               	movwf	(EUSART_SetTxInterruptHandler@handler+1)^0,c
  6353   000E44  EC1F  F008         	call	_EUSART_SetTxInterruptHandler	;wreg free
  6354                           
  6355                           ;mcc_generated_files/eusart.c: 82:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6356   000E48  0E00               	movlw	0
  6357   000E4A  6E04               	movwf	EUSART_SetRxInterruptHandler@handler^0,c
  6358   000E4C  0E00               	movlw	0
  6359   000E4E  6E05               	movwf	(EUSART_SetRxInterruptHandler@handler+1)^0,c
  6360   000E50  EC24  F008         	call	_EUSART_SetRxInterruptHandler	;wreg free
  6361   000E54                     
  6362                           ;mcc_generated_files/eusart.c: 87:     BAUDCON = 0x08;
  6363   000E54  0E08               	movlw	8
  6364   000E56  6EB8               	movwf	184,c	;volatile
  6365   000E58                     
  6366                           ;mcc_generated_files/eusart.c: 90:     RCSTA = 0x90;
  6367   000E58  0E90               	movlw	144
  6368   000E5A  6EAB               	movwf	171,c	;volatile
  6369   000E5C                     
  6370                           ;mcc_generated_files/eusart.c: 93:     TXSTA = 0x24;
  6371   000E5C  0E24               	movlw	36
  6372   000E5E  6EAC               	movwf	172,c	;volatile
  6373   000E60                     
  6374                           ;mcc_generated_files/eusart.c: 96:     SPBRG = 0xCF;
  6375   000E60  0ECF               	movlw	207
  6376   000E62  6EAF               	movwf	175,c	;volatile
  6377   000E64                     
  6378                           ;mcc_generated_files/eusart.c: 99:     SPBRGH = 0x00;
  6379   000E64  0E00               	movlw	0
  6380   000E66  6EB0               	movwf	176,c	;volatile
  6381   000E68                     
  6382                           ;mcc_generated_files/eusart.c: 103:     eusartTxHead = 0;
  6383   000E68  0E00               	movlw	0
  6384   000E6A  6E5B               	movwf	_eusartTxHead^0,c	;volatile
  6385   000E6C                     
  6386                           ;mcc_generated_files/eusart.c: 104:     eusartTxTail = 0;
  6387   000E6C  0E00               	movlw	0
  6388   000E6E  6E5A               	movwf	_eusartTxTail^0,c	;volatile
  6389   000E70                     
  6390                           ;mcc_generated_files/eusart.c: 105:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6391   000E70  0E08               	movlw	8
  6392   000E72  0100               	movlb	0	; () banked
  6393   000E74  6FD2               	movwf	_eusartTxBufferRemaining& (0+255),b	;volatile
  6394   000E76                     
  6395                           ; BSR set to: 0
  6396                           ;mcc_generated_files/eusart.c: 107:     eusartRxHead = 0;
  6397   000E76  0E00               	movlw	0
  6398   000E78  6FD1               	movwf	_eusartRxHead& (0+255),b	;volatile
  6399   000E7A                     
  6400                           ; BSR set to: 0
  6401                           ;mcc_generated_files/eusart.c: 108:     eusartRxTail = 0;
  6402   000E7A  0E00               	movlw	0
  6403   000E7C  6FD0               	movwf	_eusartRxTail& (0+255),b	;volatile
  6404   000E7E                     
  6405                           ; BSR set to: 0
  6406                           ;mcc_generated_files/eusart.c: 109:     eusartRxCount = 0;
  6407   000E7E  0E00               	movlw	0
  6408   000E80  6FCF               	movwf	_eusartRxCount& (0+255),b	;volatile
  6409   000E82                     
  6410                           ; BSR set to: 0
  6411                           ;mcc_generated_files/eusart.c: 112:     PIE1bits.RC1IE = 1;
  6412   000E82  8A9D               	bsf	157,5,c	;volatile
  6413   000E84                     
  6414                           ; BSR set to: 0
  6415   000E84  0012               	return		;funcret
  6416   000E86                     __end_of_EUSART_Initialize:
  6417                           	callstack 0
  6418                           
  6419 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6420 ;; Defined at:
  6421 ;;		line 212 in file "mcc_generated_files/eusart.c"
  6422 ;; Parameters:    Size  Location     Type
  6423 ;;  handler         2    3[COMRAM] PTR void 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;		None
  6426 ;; Return value:  Size  Location     Type
  6427 ;;                  1    wreg      void 
  6428 ;; Registers used:
  6429 ;;		wreg, status,2, status,0
  6430 ;; Tracked objects:
  6431 ;;		On entry : 0/0
  6432 ;;		On exit  : 0/0
  6433 ;;		Unchanged: 0/0
  6434 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6435 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6436 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;Total ram usage:        2 bytes
  6440 ;; Hardware stack levels used: 1
  6441 ;; Hardware stack levels required when called: 2
  6442 ;; This function calls:
  6443 ;;		Nothing
  6444 ;; This function is called by:
  6445 ;;		_EUSART_Initialize
  6446 ;; This function uses a non-reentrant model
  6447 ;;
  6448                           
  6449                           	psect	text33
  6450   00103E                     __ptext33:
  6451                           	callstack 0
  6452   00103E                     _EUSART_SetTxInterruptHandler:
  6453                           	callstack 26
  6454   00103E                     
  6455                           ;mcc_generated_files/eusart.c: 213:     EUSART_TxDefaultInterruptHandler = handler;
  6456   00103E  C004  F0E5         	movff	EUSART_SetTxInterruptHandler@handler,_EUSART_TxDefaultInterruptHandler
  6457   001042  C005  F0E6         	movff	EUSART_SetTxInterruptHandler@handler+1,_EUSART_TxDefaultInterruptHandler+1
  6458   001046  0012               	return		;funcret
  6459   001048                     __end_of_EUSART_SetTxInterruptHandler:
  6460                           	callstack 0
  6461                           
  6462 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6463 ;; Defined at:
  6464 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6465 ;; Parameters:    Size  Location     Type
  6466 ;;  handler         2    3[COMRAM] PTR void 
  6467 ;; Auto vars:     Size  Location     Type
  6468 ;;		None
  6469 ;; Return value:  Size  Location     Type
  6470 ;;                  1    wreg      void 
  6471 ;; Registers used:
  6472 ;;		wreg, status,2, status,0
  6473 ;; Tracked objects:
  6474 ;;		On entry : 0/0
  6475 ;;		On exit  : 0/0
  6476 ;;		Unchanged: 0/0
  6477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6478 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6479 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6480 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6481 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6482 ;;Total ram usage:        2 bytes
  6483 ;; Hardware stack levels used: 1
  6484 ;; Hardware stack levels required when called: 2
  6485 ;; This function calls:
  6486 ;;		Nothing
  6487 ;; This function is called by:
  6488 ;;		_EUSART_Initialize
  6489 ;; This function uses a non-reentrant model
  6490 ;;
  6491                           
  6492                           	psect	text34
  6493   001048                     __ptext34:
  6494                           	callstack 0
  6495   001048                     _EUSART_SetRxInterruptHandler:
  6496                           	callstack 26
  6497   001048                     
  6498                           ;mcc_generated_files/eusart.c: 217:     EUSART_RxDefaultInterruptHandler = handler;
  6499   001048  C004  F0E3         	movff	EUSART_SetRxInterruptHandler@handler,_EUSART_RxDefaultInterruptHandler
  6500   00104C  C005  F0E4         	movff	EUSART_SetRxInterruptHandler@handler+1,_EUSART_RxDefaultInterruptHandler+1
  6501   001050  0012               	return		;funcret
  6502   001052                     __end_of_EUSART_SetRxInterruptHandler:
  6503                           	callstack 0
  6504                           
  6505 ;; *************** function _INTERRUPT_InterruptManager *****************
  6506 ;; Defined at:
  6507 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;Total ram usage:        2 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 1
  6528 ;; This function calls:
  6529 ;;		_btGetData
  6530 ;; This function is called by:
  6531 ;;		Interrupt level 2
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	intcode
  6536   000008                     __pintcode:
  6537                           	callstack 0
  6538   000008                     _INTERRUPT_InterruptManager:
  6539                           	callstack 23
  6540                           
  6541                           ;incstack = 0
  6542   000008  825C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6543   00000A  CFD9 F002          	movff	fsr2l,??_INTERRUPT_InterruptManager
  6544   00000E  CFDA F003          	movff	fsr2h,??_INTERRUPT_InterruptManager+1
  6545   000012                     
  6546                           ;mcc_generated_files/interrupt_manager.c: 75:     if (PIE1bits.TX1IE && PIR1bits.TX1IF)
  6547   000012  A89D               	btfss	157,4,c	;volatile
  6548   000014  EF0E  F000         	goto	i2u214_41
  6549   000018  EF10  F000         	goto	i2u214_40
  6550   00001C                     i2u214_41:
  6551   00001C  EF1A  F000         	goto	i2l358
  6552   000020                     i2u214_40:
  6553   000020                     
  6554                           ;mcc_generated_files/interrupt_manager.c: 76:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 78:         EUSART_TxDefaultInterruptHandler();
  6555   000020  A89E               	btfss	158,4,c	;volatile
  6556   000022  EF15  F000         	goto	i2u215_41
  6557   000026  EF17  F000         	goto	i2u215_40
  6558   00002A                     i2u215_41:
  6559   00002A  EF1A  F000         	goto	i2l358
  6560   00002E                     i2u215_40:
  6561   00002E                     
  6562                           ;mcc_generated_files/interrupt_manager.c: 81:         PIR1bits.TX1IF = 0;
  6563   00002E  989E               	bcf	158,4,c	;volatile
  6564                           
  6565                           ;mcc_generated_files/interrupt_manager.c: 82:     }
  6566   000030  EF2C  F000         	goto	i2l361
  6567   000034                     i2l358:
  6568   000034  AA9D               	btfss	157,5,c	;volatile
  6569   000036  EF1F  F000         	goto	i2u216_41
  6570   00003A  EF21  F000         	goto	i2u216_40
  6571   00003E                     i2u216_41:
  6572   00003E  EF2C  F000         	goto	i2l361
  6573   000042                     i2u216_40:
  6574   000042  AA9E               	btfss	158,5,c	;volatile
  6575   000044  EF26  F000         	goto	i2u217_41
  6576   000048  EF28  F000         	goto	i2u217_40
  6577   00004C                     i2u217_41:
  6578   00004C  EF2C  F000         	goto	i2l361
  6579   000050                     i2u217_40:
  6580   000050                     
  6581                           ;mcc_generated_files/interrupt_manager.c: 86:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 88:         btGetData(RCREG);
  6582   000050  50AE               	movf	174,w,c	;volatile
  6583   000052  EC11  F006         	call	_btGetData
  6584   000056                     
  6585                           ;mcc_generated_files/interrupt_manager.c: 91:         PIR1bits.RC1IF = 0;
  6586   000056  9A9E               	bcf	158,5,c	;volatile
  6587   000058                     i2l361:
  6588   000058  C003  FFDA         	movff	??_INTERRUPT_InterruptManager+1,fsr2h
  6589   00005C  C002  FFD9         	movff	??_INTERRUPT_InterruptManager,fsr2l
  6590   000060  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6591   000062  0011               	retfie		f
  6592   000064                     __end_of_INTERRUPT_InterruptManager:
  6593                           	callstack 0
  6594                           
  6595 ;; *************** function _btGetData *****************
  6596 ;; Defined at:
  6597 ;;		line 342 in file "main.c"
  6598 ;; Parameters:    Size  Location     Type
  6599 ;;  rcv             1    wreg     unsigned char 
  6600 ;; Auto vars:     Size  Location     Type
  6601 ;;  rcv             1    0[COMRAM] unsigned char 
  6602 ;; Return value:  Size  Location     Type
  6603 ;;                  1    wreg      void 
  6604 ;; Registers used:
  6605 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6606 ;; Tracked objects:
  6607 ;;		On entry : 0/0
  6608 ;;		On exit  : 0/0
  6609 ;;		Unchanged: 0/0
  6610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6611 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6612 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6613 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6614 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6615 ;;Total ram usage:        1 bytes
  6616 ;; Hardware stack levels used: 1
  6617 ;; This function calls:
  6618 ;;		Nothing
  6619 ;; This function is called by:
  6620 ;;		_INTERRUPT_InterruptManager
  6621 ;; This function uses a non-reentrant model
  6622 ;;
  6623                           
  6624                           	psect	text36
  6625   000C22                     __ptext36:
  6626                           	callstack 0
  6627   000C22                     _btGetData:
  6628                           	callstack 23
  6629                           
  6630                           ;incstack = 0
  6631                           ;btGetData@rcv stored from wreg
  6632   000C22  6E01               	movwf	btGetData@rcv^0,c
  6633   000C24                     
  6634                           ;main.c: 343:     if(rcv == 'H' && uartBufferIndex == 0) {
  6635   000C24  0E48               	movlw	72
  6636   000C26  1801               	xorwf	btGetData@rcv^0,w,c
  6637   000C28  A4D8               	btfss	status,2,c
  6638   000C2A  EF19  F006         	goto	i2u166_41
  6639   000C2E  EF1B  F006         	goto	i2u166_40
  6640   000C32                     i2u166_41:
  6641   000C32  EF2C  F006         	goto	i2l2755
  6642   000C36                     i2u166_40:
  6643   000C36  5059               	movf	_uartBufferIndex^0,w,c
  6644   000C38  A4D8               	btfss	status,2,c
  6645   000C3A  EF21  F006         	goto	i2u167_41
  6646   000C3E  EF23  F006         	goto	i2u167_40
  6647   000C42                     i2u167_41:
  6648   000C42  EF2C  F006         	goto	i2l2755
  6649   000C46                     i2u167_40:
  6650   000C46                     
  6651                           ;main.c: 344:         uartBuffer[uartBufferIndex] = 'H';
  6652   000C46  5059               	movf	_uartBufferIndex^0,w,c
  6653   000C48  0FA0               	addlw	low _uartBuffer
  6654   000C4A  6ED9               	movwf	fsr2l,c
  6655   000C4C  6ADA               	clrf	fsr2h,c
  6656   000C4E  0E48               	movlw	72
  6657   000C50  6EDF               	movwf	indf2,c
  6658   000C52                     i2l2753:
  6659                           
  6660                           ;main.c: 345:         uartBufferIndex++;
  6661   000C52  2A59               	incf	_uartBufferIndex^0,f,c
  6662                           
  6663                           ;main.c: 346:     }
  6664   000C54  EF5F  F006         	goto	i2l523
  6665   000C58                     i2l2755:
  6666   000C58  5059               	movf	_uartBufferIndex^0,w,c
  6667   000C5A  B4D8               	btfsc	status,2,c
  6668   000C5C  EF32  F006         	goto	i2u168_41
  6669   000C60  EF34  F006         	goto	i2u168_40
  6670   000C64                     i2u168_41:
  6671   000C64  EF44  F006         	goto	i2l2763
  6672   000C68                     i2u168_40:
  6673   000C68  0E07               	movlw	7
  6674   000C6A  6059               	cpfslt	_uartBufferIndex^0,c
  6675   000C6C  EF3A  F006         	goto	i2u169_41
  6676   000C70  EF3C  F006         	goto	i2u169_40
  6677   000C74                     i2u169_41:
  6678   000C74  EF44  F006         	goto	i2l2763
  6679   000C78                     i2u169_40:
  6680   000C78                     
  6681                           ;main.c: 348:         uartBuffer[uartBufferIndex++] = rcv;
  6682   000C78  5059               	movf	_uartBufferIndex^0,w,c
  6683   000C7A  0FA0               	addlw	low _uartBuffer
  6684   000C7C  6ED9               	movwf	fsr2l,c
  6685   000C7E  6ADA               	clrf	fsr2h,c
  6686   000C80  C001  FFDF         	movff	btGetData@rcv,indf2
  6687   000C84  EF29  F006         	goto	i2l2753
  6688   000C88                     i2l2763:
  6689   000C88  0E07               	movlw	7
  6690   000C8A  1859               	xorwf	_uartBufferIndex^0,w,c
  6691   000C8C  A4D8               	btfss	status,2,c
  6692   000C8E  EF4B  F006         	goto	i2u170_41
  6693   000C92  EF4D  F006         	goto	i2u170_40
  6694   000C96                     i2u170_41:
  6695   000C96  EF5F  F006         	goto	i2l523
  6696   000C9A                     i2u170_40:
  6697   000C9A                     
  6698                           ;main.c: 351:         if(rcv == ';') {
  6699   000C9A  0E3B               	movlw	59
  6700   000C9C  1801               	xorwf	btGetData@rcv^0,w,c
  6701   000C9E  A4D8               	btfss	status,2,c
  6702   000CA0  EF54  F006         	goto	i2u171_41
  6703   000CA4  EF56  F006         	goto	i2u171_40
  6704   000CA8                     i2u171_41:
  6705   000CA8  EF5F  F006         	goto	i2l520
  6706   000CAC                     i2u171_40:
  6707   000CAC                     
  6708                           ;main.c: 352:             uartBuffer[6] = ';';
  6709   000CAC  0E3B               	movlw	59
  6710   000CAE  0100               	movlb	0	; () banked
  6711   000CB0  6FA6               	movwf	(_uartBuffer+6)& (0+255),b
  6712                           
  6713                           ;main.c: 353:             uartBufferIndex = 0;
  6714   000CB2  0E00               	movlw	0
  6715   000CB4  6E59               	movwf	_uartBufferIndex^0,c
  6716                           
  6717                           ;main.c: 354:             btTimeSet = 1;
  6718   000CB6  0E01               	movlw	1
  6719   000CB8  6FC4               	movwf	_btTimeSet& (0+255),b
  6720   000CBA  EF5F  F006         	goto	i2l523
  6721   000CBE                     i2l520:
  6722   000CBE                     i2l523:
  6723   000CBE  0012               	return		;funcret
  6724   000CC0                     __end_of_btGetData:
  6725                           	callstack 0
  6726                           
  6727                           	psect	rparam
  6728   000000                     
  6729                           	psect	temp
  6730   00005C                     btemp:
  6731                           	callstack 0
  6732   00005C                     	ds	1
  6733   000000                     int$flags	set	btemp
  6734   000000                     wtemp8	set	btemp+1
  6735   000000                     ttemp5	set	btemp+1
  6736   000000                     ttemp6	set	btemp+4
  6737   000000                     ttemp7	set	btemp+8
  6738                           
  6739                           	psect	idloc
  6740                           
  6741                           ;Config register IDLOC0 @ 0x200000
  6742                           ;	unspecified, using default values
  6743   200000                     	org	2097152
  6744   200000  FF                 	db	255
  6745                           
  6746                           ;Config register IDLOC1 @ 0x200001
  6747                           ;	unspecified, using default values
  6748   200001                     	org	2097153
  6749   200001  FF                 	db	255
  6750                           
  6751                           ;Config register IDLOC2 @ 0x200002
  6752                           ;	unspecified, using default values
  6753   200002                     	org	2097154
  6754   200002  FF                 	db	255
  6755                           
  6756                           ;Config register IDLOC3 @ 0x200003
  6757                           ;	unspecified, using default values
  6758   200003                     	org	2097155
  6759   200003  FF                 	db	255
  6760                           
  6761                           ;Config register IDLOC4 @ 0x200004
  6762                           ;	unspecified, using default values
  6763   200004                     	org	2097156
  6764   200004  FF                 	db	255
  6765                           
  6766                           ;Config register IDLOC5 @ 0x200005
  6767                           ;	unspecified, using default values
  6768   200005                     	org	2097157
  6769   200005  FF                 	db	255
  6770                           
  6771                           ;Config register IDLOC6 @ 0x200006
  6772                           ;	unspecified, using default values
  6773   200006                     	org	2097158
  6774   200006  FF                 	db	255
  6775                           
  6776                           ;Config register IDLOC7 @ 0x200007
  6777                           ;	unspecified, using default values
  6778   200007                     	org	2097159
  6779   200007  FF                 	db	255
  6780                           
  6781                           	psect	config
  6782                           
  6783                           ; Padding undefined space
  6784   300000                     	org	3145728
  6785   300000  FF                 	db	255
  6786                           
  6787                           ;Config register CONFIG1H @ 0x300001
  6788                           ;	Oscillator Selection bits
  6789                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  6790                           ;	Fail-Safe Clock Monitor Enable bit
  6791                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6792                           ;	Internal/External Oscillator Switchover bit
  6793                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6794   300001                     	org	3145729
  6795   300001  08                 	db	8
  6796                           
  6797                           ;Config register CONFIG2L @ 0x300002
  6798                           ;	Power-up Timer Enable bit
  6799                           ;	PWRTEN = OFF, PWRT disabled
  6800                           ;	Brown-out Reset Enable bits
  6801                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6802                           ;	Brown Out Reset Voltage bits
  6803                           ;	BORV = 18, VBOR set to 1.8 V nominal
  6804   300002                     	org	3145730
  6805   300002  1F                 	db	31
  6806                           
  6807                           ;Config register CONFIG2H @ 0x300003
  6808                           ;	Watchdog Timer Enable bit
  6809                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  6810                           ;	Watchdog Timer Postscale Select bits
  6811                           ;	WDTPS = 32768, 1:32768
  6812   300003                     	org	3145731
  6813   300003  1E                 	db	30
  6814                           
  6815                           ; Padding undefined space
  6816   300004                     	org	3145732
  6817   300004  FF                 	db	255
  6818                           
  6819                           ;Config register CONFIG3H @ 0x300005
  6820                           ;	CCP2 MUX bit
  6821                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6822                           ;	PORTB A/D Enable bit
  6823                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6824                           ;	Low-Power Timer1 Oscillator Enable bit
  6825                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6826                           ;	HFINTOSC Fast Start-up
  6827                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  6828                           ;	MCLR Pin Enable bit
  6829                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  6830   300005                     	org	3145733
  6831   300005  09                 	db	9
  6832                           
  6833                           ;Config register CONFIG4L @ 0x300006
  6834                           ;	Stack Full/Underflow Reset Enable bit
  6835                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6836                           ;	Single-Supply ICSP Enable bit
  6837                           ;	LVP = OFF, Single-Supply ICSP disabled
  6838                           ;	Extended Instruction Set Enable bit
  6839                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6840                           ;	Background Debugger Enable bit
  6841                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6842   300006                     	org	3145734
  6843   300006  81                 	db	129
  6844                           
  6845                           ; Padding undefined space
  6846   300007                     	org	3145735
  6847   300007  FF                 	db	255
  6848                           
  6849                           ;Config register CONFIG5L @ 0x300008
  6850                           ;	Code Protection Block 0
  6851                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6852                           ;	Code Protection Block 1
  6853                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6854                           ;	Code Protection Block 2
  6855                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6856                           ;	Code Protection Block 3
  6857                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6858   300008                     	org	3145736
  6859   300008  0F                 	db	15
  6860                           
  6861                           ;Config register CONFIG5H @ 0x300009
  6862                           ;	Boot Block Code Protection bit
  6863                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6864                           ;	Data EEPROM Code Protection bit
  6865                           ;	CPD = OFF, Data EEPROM not code-protected
  6866   300009                     	org	3145737
  6867   300009  C0                 	db	192
  6868                           
  6869                           ;Config register CONFIG6L @ 0x30000A
  6870                           ;	Write Protection Block 0
  6871                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6872                           ;	Write Protection Block 1
  6873                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6874                           ;	Write Protection Block 2
  6875                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6876                           ;	Write Protection Block 3
  6877                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  6878   30000A                     	org	3145738
  6879   30000A  0F                 	db	15
  6880                           
  6881                           ;Config register CONFIG6H @ 0x30000B
  6882                           ;	Configuration Register Write Protection bit
  6883                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6884                           ;	Boot Block Write Protection bit
  6885                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6886                           ;	Data EEPROM Write Protection bit
  6887                           ;	WRTD = OFF, Data EEPROM not write-protected
  6888   30000B                     	org	3145739
  6889   30000B  E0                 	db	224
  6890                           
  6891                           ;Config register CONFIG7L @ 0x30000C
  6892                           ;	Table Read Protection Block 0
  6893                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6894                           ;	Table Read Protection Block 1
  6895                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6896                           ;	Table Read Protection Block 2
  6897                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6898                           ;	Table Read Protection Block 3
  6899                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6900   30000C                     	org	3145740
  6901   30000C  0F                 	db	15
  6902                           
  6903                           ;Config register CONFIG7H @ 0x30000D
  6904                           ;	Boot Block Table Read Protection bit
  6905                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6906   30000D                     	org	3145741
  6907   30000D  40                 	db	64
  6908                           tosu	equ	0xFFF
  6909                           tosh	equ	0xFFE
  6910                           tosl	equ	0xFFD
  6911                           stkptr	equ	0xFFC
  6912                           pclatu	equ	0xFFB
  6913                           pclath	equ	0xFFA
  6914                           pcl	equ	0xFF9
  6915                           tblptru	equ	0xFF8
  6916                           tblptrh	equ	0xFF7
  6917                           tblptrl	equ	0xFF6
  6918                           tablat	equ	0xFF5
  6919                           prodh	equ	0xFF4
  6920                           prodl	equ	0xFF3
  6921                           indf0	equ	0xFEF
  6922                           postinc0	equ	0xFEE
  6923                           postdec0	equ	0xFED
  6924                           preinc0	equ	0xFEC
  6925                           plusw0	equ	0xFEB
  6926                           fsr0h	equ	0xFEA
  6927                           fsr0l	equ	0xFE9
  6928                           wreg	equ	0xFE8
  6929                           indf1	equ	0xFE7
  6930                           postinc1	equ	0xFE6
  6931                           postdec1	equ	0xFE5
  6932                           preinc1	equ	0xFE4
  6933                           plusw1	equ	0xFE3
  6934                           fsr1h	equ	0xFE2
  6935                           fsr1l	equ	0xFE1
  6936                           bsr	equ	0xFE0
  6937                           indf2	equ	0xFDF
  6938                           postinc2	equ	0xFDE
  6939                           postdec2	equ	0xFDD
  6940                           preinc2	equ	0xFDC
  6941                           plusw2	equ	0xFDB
  6942                           fsr2h	equ	0xFDA
  6943                           fsr2l	equ	0xFD9
  6944                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    2048
    Data        0
    BSS         118
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     88      91
    BANK0           160     16     135
    BANK1           256     69      69
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(2) Largest target is 64
		 -> saveTimeToFlash@flashBuffer(BANK1[64]), 

    printString@str	PTR unsigned char  size(2) Largest target is 6
		 -> displayAlarmTime@displayString(BANK0[5]), displayTime@displayString(BANK0[5]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _triggerAlarm->_printString
    _clearDisplay->_flushBuffer
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _saveTimeToFlash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _displayTime->_printString
    _displayAlarmTime->_printString
    _printString->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _INTERRUPT_InterruptManager->_btGetData

Critical Paths under _main in BANK0

    _main->_checkButtons
    _processAlarm->_triggerAlarm
    _checkButtons->_displayAlarmTime
    _checkButtons->_displayTime

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_saveTimeToFlash
    _checkButtons->_saveTimeToFlash

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   40220
                                             14 BANK0      2     2      0
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                        _TMR0_Reload
                    _TMR0_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
                       _processAlarm
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _processAlarm                                         0     0      0    7261
                       _triggerAlarm
 ---------------------------------------------------------------------------------
 (2) _triggerAlarm                                         6     6      0    7261
                                              0 BANK0      6     6      0
                       _clearDisplay
                        _printString
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         2     2      0    3344
                                             67 COMRAM     2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     537
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     537
                                              4 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0     698
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   18476
                                             12 BANK0      2     2      0
                            ___awmod
                         _clearAlarm
                   _displayAlarmTime
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _saveTimeToFlash                                     69    69      0    2396
                                              0 BANK1     69    69      0
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    15     9      6    1331
                                              8 COMRAM    15     9      6
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     5     1      4     217
                                              3 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     633
                                              3 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    7132
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _displayAlarmTime                                    12    12      0    7132
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (3) _printString                                         21    19      2    3846
                                             67 COMRAM    21    19      2
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (4) _flushBuffer                                         43    43      0    3276
                                             24 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (5) _max_write                                           13    10      3    1679
                                             11 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1212
                                              3 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      22
                                              3 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1816
                                              3 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _clearAlarm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     196
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              3 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     196
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                              3 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           2     2      0      66
                                              1 COMRAM     2     2      0
                          _btGetData
 ---------------------------------------------------------------------------------
 (8) _btGetData                                            1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _SPI_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Reload
   _TMR0_StartTimer
   _checkButtons
     ___awmod
     _clearAlarm
     _displayAlarmTime
       ___awdiv
       ___awmod
       _printString
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
     _displayTime
       ___awdiv
       ___awmod
       _printString
     _saveTimeToFlash
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _clearDisplay
     _flushBuffer
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit
   _processAlarm
     _triggerAlarm
       _clearDisplay
       _printString
   _saveTimeToFlash

 _INTERRUPT_InterruptManager (ROOT)
   _btGetData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      55        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     45      45       7       27.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      87       5       84.4%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     58      5B       1       96.8%
BITBIGSFRlllll      1C      0       0      54        0.0%
BITBIGSFRhhlh       19      0       0      39        0.0%
BITBIGSFRlhhhh       9      0       0      43        0.0%
BITBIGSFRlllhh       7      0       0      51        0.0%
BITBIGSFRhhhh        7      0       0      37        0.0%
BITBIGSFRlhhlhh      7      0       0      45        0.0%
BITBIGSFRllhh        6      0       0      49        0.0%
BITBIGSFRllhl        6      0       0      50        0.0%
BITBIGSFRlhhlll      4      0       0      46        0.0%
BITBIGSFRhlhl        3      0       0      42        0.0%
BITBIGSFRhlhh        2      0       0      41        0.0%
BITBIGSFRlhhlll      2      0       0      47        0.0%
BITBIGSFRhhhl        2      0       0      38        0.0%
BITBIGSFRlhhhl       1      0       0      44        0.0%
BITBIGSFRllllh       1      0       0      53        0.0%
BITBIGSFRlllhl       1      0       0      52        0.0%
BITBIGSFRlhl         1      0       0      48        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     127      14        0.0%
DATA                 0      0     127       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Wed Sep 11 02:27:51 2024

                __end_of_checkButtons 02FE         ?_EUSART_SetRxInterruptHandler 0004  
                      _SPI_Initialize 1000                          ?_displayTime 0001  
     __end_of_TMR0_HasOverflowOccured 0FDC                           _SSPSTATbits 0FC7  
                                  l20 0FC4                                    l21 0FC6  
                                  l15 100C                                    l18 0FB6  
                                  l72 0F6E                                    l75 103C  
                                  l98 0F90                          ___awdiv@sign 0009  
                     _timer0ReloadVal 00C0                                   l212 1054  
                                 l302 0FEC                                   l152 0E84  
                                 l240 0FFE                                   l224 1032  
                                 l320 0786                                   l209 0F4C  
                                 l314 07CA                                   l227 0FDA  
                                 l324 0F24                                   l318 0798  
                                 l191 1046                                   l319 0782  
                                 l504 02FC                                   l353 1058  
                                 l194 1050                                   l514 0D92  
                                 l443 06D6                                   l268 101A  
                                 l508 0D14                                   l453 0ABC  
                                 l509 0D38                                   l470 0A08  
                                 l615 0484                                   l463 0DE4  
                                 l560 05B2                                   l474 1026  
                                 l546 094C                                   l458 0B70  
                                 l467 0966                                   l548 094E  
                                 l572 0EF0                                   l495 01EE  
                                 l567 0E34                                   l569 0E36  
                                 l577 0EBC                                   l862 0C20  
                                 l849 088E                                   _PR2 0FCB  
 EUSART_SetRxInterruptHandler@handler 0004                          ___awmod@sign 0009  
                     _TMR2_Initialize 0FEE                                   prod 0FF3  
                                 wreg 0FE8                                  l2301 08D4  
                                l2311 0910                                  l3111 0EF2  
                                l2321 092C                                  l2313 0916  
                                l3121 0F08                                  l3113 0EFA  
                                l2251 07D0                                  l2323 0930  
                                l2315 0920                                  l2307 08DC  
                                l3131 0F14                                  l3123 0F0A  
                                l3115 0EFE                                  l3211 0974  
                                l2245 0FB0                                  l2261 0800  
                                l2253 07DE                                  l2317 0920  
                                l2309 08F4                                  l2501 0410  
                                l3133 0F18                                  l3125 0F0C  
                                l3117 0F02                                  l3221 09B0  
                                l3213 098E                                  l2247 0FB2  
                                l2271 082E                                  l2263 0804  
                                l2255 07E6                                  l2319 0926  
                                l2351 0486                                  l2511 0480  
                                l2503 042C                                  l3135 0F1A  
                                l3127 0F0E                                  l3119 0F06  
                                l3231 0D3A                                  l3223 09CC  
                                l3215 099C                                  l2601 0E76  
                                l2521 0B90                                  l2513 0B72  
                                l2281 0862                                  l2273 083C  
                                l2265 080C                                  l2257 07EA  
                                l2249 07CC                                  l2361 04B6  
                                l2353 0492                                  l2505 0430  
                                l3137 0FDC                                  l3129 0F10  
                                l3241 0D8E                                  l3233 0D3A  
                                l3225 09D0                                  l3209 0950  
                                l2603 0E7A                                  l2531 0BC8  
                                l2523 0B9E                                  l2515 0B76  
                                l2283 0868                                  l2275 0842  
                                l2267 081E                                  l2259 07F8  
                                l2371 052A                                  l2611 0A72  
                                l3139 0FEA                                  l3235 0D52  
                                l3227 09EC                                  l3219 09A4  
                                l3331 0DC8                                  l2605 0E7E  
                                l2533 0BD6                                  l2541 0C00  
                                l2525 0BA6                                  l2517 0B84  
                                l2277 0858                                  l2269 0826  
                                l2285 086E                                  l2293 0890  
                                l2373 052E                                  l2509 0442  
                                l2621 0A92                                  l2613 0A76  
                                l3501 009E                                  l3237 0D7A  
                                l2461 0E98                                  l2453 0E86  
                                l3229 09F2                                  l3333 0DDA  
                                l3325 0D94                                  l2391 103E  
                                l2607 0E82                                  l2551 1056  
                                l2543 0C10                                  l2535 0BEC  
                                l2527 0BB8                                  l2519 0B8C  
                                l2287 087E                                  l2279 0860  
                                l2295 08B0                                  l2375 054A  
                                l2367 04BE                                  l2359 049A  
                                l2623 0A96                                  l3431 06F6  
                                l3503 00B0                                  l3511 00F8  
                                l3239 0D7E                                  l2463 0E9C  
                                l3335 0DDE                                  l3327 0DA6  
                                l2393 1048                                  l2561 0F8E  
                                l2553 0F70                                  l2721 0F4E  
                                l2545 0C18                                  l2537 0BF4  
                                l2529 0BC0                                  l2289 0886  
                                l2297 08D2                                  l2385 0572  
                                l2377 054E                                  l2369 04F6  
                                l2481 032E                                  l2641 0ABE  
                                l2625 0AB2                                  l2609 0A0A  
                                l3433 06FE                                  l3521 015E  
                                l3513 0106                                  l3505 00CE  
                                l2465 0EB8                                  l3329 0DB6  
                                l3601 05C4                                  l2563 1034  
                                l2555 0F7C                                  l2571 0FFC  
                                l2731 0F62                                  l2723 0F52  
                                l2539 0BFA                                  l2299 08D2  
                                l2387 0592                                  l2379 056A  
                                l2483 03B2                                  l2475 0322  
                                l2467 02FE                                  l2651 0B32  
                                l2643 0B26                                  l2619 0A7E  
                                l3451 074E                                  l3443 072E  
                                l3435 06FE                                  l3531 01A0  
                                l3523 0166                                  l3515 0120  
                                l3507 00D6                                  l2459 0E8E  
                                l3611 05E4                                  l3603 05C8  
                                l2581 0E38                                  l2557 0F7E  
                                l2565 100E                                  l2549 1000  
                                l2573 0F26                                  l2733 0F66  
                                l2725 0F56                                  l2741 102E  
                                l2389 0596                                  l2493 03F6  
                                l2485 03D0                                  l2469 0312  
                                l2653 0B46                                  l2645 0B2A  
                                l3461 076A                                  l3453 0756  
                                l3445 0742                                  l3437 0702  
                                l3429 06DE                                  l3541 01FC  
                                l3533 01BA                                  l3525 0184  
                                l3517 012E                                  l3509 00F4  
                                l3621 060E                                  l3613 05E8  
                                l3605 05CA                                  l2591 0E60  
                                l2583 0E3C                                  l2559 0F8C  
                                l2575 0F2E                                  l2567 0FEE  
                                l2735 0F6A                                  l2727 0F5A  
                                l2743 0FC8                                  l2495 0402  
                                l2487 03D6                                  l2655 0B4A  
                                l3471 07A8                                  l3463 077C  
                                l3447 0746                                  l3439 0706  
                                l3551 0262                                  l3543 0216  
                                l3535 01D2                                  l3519 0140  
                                l3527 0188                                  l3631 062C  
                                l3623 0612                                  l3615 05F8  
                                l3607 05CC                                  l2593 0E64  
                                l2585 0E54                                  l2577 0F46  
                                l2569 0FF6                                  l2729 0F5E  
                                l2737 1052                                  l2681 101C  
                                l2497 0408                                  l2489 03E4  
                                l2657 0B66                                  l3473 07AA  
                                l3465 0784                                  l3449 074A  
                                l3481 0CC0                                  l3545 0236  
                                l3537 01E2                                  l3561 02A6  
                                l3529 0196                                  l3641 0650  
                                l3625 0614                                  l3617 05FC  
                                l3609 05E0                                  l3633 0632  
                                l2595 0E68                                  l2587 0E58  
                                l2579 0F48                                  l2739 1028  
                                l2499 040C                                  l3475 07AC  
                                l3467 0788                                  l3459 075A  
                                l3491 0D04                                  l3571 02EA  
                                l3563 02B6                                  l3547 023A  
                                l3555 0286                                  l3539 01E6  
                                l2683 0DE8                                  l3651 06AE  
                                l3643 0662                                  l3635 0636  
                                l3627 0624                                  l3619 05FE  
                                l2597 0E6C                                  l2589 0E5C  
                                l3477 07B6                                  l3469 07A0  
                                l3493 0D1C                                  l3573 02EE  
                                l3557 0294                                  l3549 0248  
                                l3565 02BE                                  l2693 0E08  
                                l2685 0DFE                                  l3661 06CE  
                                l3653 06BE                                  l3645 0674  
                                l3637 063A                                  l3629 0628  
                                l2599 0E70                                  l3479 07B8  
                                l3487 0CD6                                  l3567 02D6  
                                l3575 02F4                                  l3559 029E  
                                l3495 0068                                  l2695 0E14  
                                l2687 0E00                                  l3655 06C2  
                                l3647 0686                                  l3639 063E  
                                l3489 0D00                                  l3569 02D8  
                                l3497 0076                                  l2697 0E18  
                                l2769 0EBE                                  l3657 06C6  
                                l3649 069E                                  l3499 0090  
                                l3659 06CA                                  l3595 05B4  
                                l3597 05BC                                  l3599 05C0  
                                STR_1 FFF9                          _triggerAlarm 0950  
                                u1200 081E                                  u1201 081A  
                                u1210 083C                                  u1211 0838  
                                u1220 0858                                  u1221 0854  
                                u1230 087E                                  u1310 054A  
                                u1231 087A                                  u1311 0546  
                                u1240 08F4                                  u1320 056A  
                                u1304 0512                                  u1400 035C  
                                u3000 0686                                  u1241 08F0  
                                u1321 0566                                  u1305 050E  
                                u3001 0682                                  u1170 0FC4  
                                u1250 094C                                  u1330 05B2  
                                u3010 06AE                                  u1171 0FC0  
                                u1251 0948                                  u1331 05AE  
                                u3011 06AA                                  u1500 0B84  
                                u1180 07DE                                  u1420 03B2  
                                u3020 06BE                                  u1501 0B80  
                                u1181 07DA                                  u1421 03AE  
                                u3021 06BA                                  _LATA 0F89  
                                u1510 0B9E                                  u1190 07F8  
                                u1414 0398                                  _LATB 0F8A  
                                u1511 0B9A                                  u1191 07F4  
                                u1271 048C                                  u1415 0394  
                                u1407 0352                                  _LATC 0F8B  
                                u1520 0BB8                                  u1440 03E4  
                                u2400 0D8E                                  u1521 0BB4  
                                u1441 03E0                                  u2401 0D8A  
                                u1530 0BD6                                  u1290 04F6  
                                u1450 03F2                                  u1434 03C6  
                                u1531 0BD2                                  u1291 04F2  
                                u1451 03EE                                  u1435 03C2  
                                u3107 0254                                  u1540 0BEC  
                                u1284 04DC                                  u1460 042C  
                                u1620 0E34                                  u1541 0BE8  
                                u1285 04D8                                  u1461 0428  
                                u1621 0E30                                  u3037 0980  
                                u1550 0C10                                  u1470 043E  
                                u1390 0EB8                                  u1551 0C0C  
                                u1471 043A                                  u1391 0EB4  
                                u3047 09BC                                  u1480 0470  
                                u1560 0AB2                                  u2360 0974  
                                u1561 0AAE                                  u3057 09DC  
                                u2361 0970                                  u1650 0FD8  
                                u1490 0480                                  u2370 099C  
                                u1651 0FD2                                  u1491 047C  
                                u3067 0082                                  u2371 0998  
                                u1580 0B66                                  u2380 0A08  
                                u1581 0B62                                  u3077 0112  
                                u2381 0A04                                  u2710 072A  
                                u2390 0D7A                                  u1487 0466  
                                u2295 0F22                                  u2711 0726  
                                u3087 01AC                                  u2391 0D76  
                                u1656 0FDA                                  u2296 0F24  
                                u2720 077C                                  u2800 0106  
                                u2560 0DA6                                  u2721 0778  
                                u3097 0208                                  u2801 0102  
                                u2561 0DA2                                  u2730 0798  
                                u2810 012E                                  u2570 0DB6  
                                u2731 0794                                  u2811 012A  
                                u2571 0DB2                                  u2900 02D6  
                                u2820 0140                                  u2580 0DC8  
                                u2901 02D2                                  u2821 013C  
                                u2581 0DC4                                  u2750 07CA  
                                u2910 02EA                                  u2830 0196  
                                u2590 0DDA                                  u2751 07C6  
                                u2911 02E6                                  u2831 0192  
                                u2591 0DD6                                  u2760 0D14  
                                u2840 01D2                                  u2745 07B4  
                                u2761 0D10                                  u2841 01CE  
                                u2746 07B6                                  u2850 01E2  
                                u2770 0076                                  u2930 05E0  
                                u2851 01DE                                  u2771 0072  
                                u2931 05DC                                  u2860 01FC  
                                u2780 009E                                  u2940 05F8  
                                u2861 01F8                                  u2781 009A  
                                u2941 05F4                                  u2870 0248  
                                u2790 00B0                                  u2950 060E  
                                u2871 0244                                  u2791 00AC  
                                u2951 060A                                  u2880 0294  
                                u2960 0624                                  u2881 0290  
                                u2961 0620                                  u2890 02B6  
                                u2970 0650                                  u2891 02B2  
                                u2971 064C                                  u2980 0662  
                                u2981 065E                                  u2990 0674  
                                u2991 0670                                  _TMR2 0FCC  
                                _WPUB 0F7C                                  _main 05B4  
                     _TMR0_StartTimer 1052                                  fsr1h 0FE2  
                                fsr2h 0FDA                                  indf1 0FE7  
                                indf2 0FDF                                  fsr1l 0FE1  
                                fsr2l 0FD9                                  btemp 005C  
                        printString@i 0053                          printString@j 0057  
                        printString@k 0055                     ?_FLASH_WriteBlock 0009  
                                prodl 0FF3                                  start 0064  
              __end_of_SPI_Initialize 100E                          ?_flushBuffer 0001  
                  ??_FLASH_WriteBlock 000F                          ___param_bank 0000  
         saveTimeToFlash@flashAddress 0140                  __end_of_clearDisplay 0EBE  
         checkButtons@button3HoldTime 00BA               __end_of_PWM2_Initialize 101C  
             __end_of_TMR0_Initialize 0F4E         __end_of_OSCILLATOR_Initialize 103E  
                               ?_main 0001                       __end_of___awdiv 0890  
                   ??_saveTimeToFlash 0018                                 _EEADR 0FA9  
                     __end_of___awmod 0C22                                 _ANSEL 0F7E  
                               _T0CON 0FD5                       ___awdiv@divisor 0006  
                               _T2CON 0FCA                                 i2l520 0CBE  
                               i2l361 0058                                 i2l523 0CBE  
                               i2l358 0034                       ___awdiv@counter 0008  
                               _RCREG 0FAE                                 _RCSTA 0FAB  
                               _TMR0H 0FD7                                 _TMR0L 0FD6  
                               _SPBRG 0FAF                                 _TRISA 0F92  
                               _TRISB 0F93                                 _TRISC 0F94  
                               _TXREG 0FAD                                 _TXSTA 0FAC  
                               _hours 00CE                          displayTime@i 00DD  
                    _button3PressTime 00BC                       max7219_cmd@Addr 0008  
                               tablat 0FF5                       max7219_cmd@data 0005  
                               ttemp5 005D                                 ttemp6 0060  
                               ttemp7 0064                                 status 0FD8  
                               wtemp8 005D                       ?_SPI_Initialize 0001  
                      _alarmTriggered 00C7                       __initialization 0F92  
                        __end_of_main 06DE               FLASH_ReadByte@flashAddr 0004  
             __end_of_TMR2_Initialize 1000           ?_INTERRUPT_InterruptManager 0001  
      ??_EUSART_SetRxInterruptHandler 0006                                ??_main 0059  
                       __activetblptr 0003              __end_of_SPI_Exchange8bit 0FC8  
             __end_of_TMR0_StartTimer 1056             FLASH_WriteBlock@writeAddr 0009  
                              _EEADRH 0FAA                                _EEDATA 0FA8  
                              _CCPR2H 0FBC                                _CCPR2L 0FBB  
                              _EECON2 0FA7                      ___awdiv@dividend 0004  
                              _ANSELH 0F7F                                i2l3031 0050  
                              i2l3023 0012                                i2l3033 0056  
                              i2l3025 0020                                i2l3027 002E  
                              i2l3029 0042                                i2l2751 0C46  
                              i2l2753 0C52                                i2l2763 0C88  
                              i2l2755 0C58                                i2l2747 0C24  
                              i2l2765 0C9A                                i2l2757 0C68  
                              i2l2749 0C36                                i2l2767 0CAC  
                              i2l2759 0C78                                _TABLAT 0FF5  
                              _OSCCON 0FD3                                _SPBRGH 0FB0  
                              _SSPADD 0FC8                                _SSPBUF 0FC9  
               triggerAlarm@numCycles 00D5                          ?_TMR0_Reload 0001  
                       main@hours_pom 00E1                             ??___awdiv 0008  
                           ??___awmod 0008                   _EUSART_Transmit_ISR 0000  
                    ?_TMR0_Initialize 0001                      ?_PWM2_Initialize 0001  
                              clear_0 0F98                      ___awdiv@quotient 000A  
                     ___awmod@divisor 0006                                isa$std 0001  
                     ___awmod@counter 0008                      flushBuffer@F2573 0060  
               displayTime@timeString 00D8                        printString@str 0044  
                   displayAlarmTime@i 00DD           FLASH_WriteBlock@dataCounter 0016  
                   ?_displayAlarmTime 0001                          __mediumconst F7F8  
                              tblptrh 0FF7                                tblptrl 0FF6  
                              tblptru 0FF8                          _checkButtons 0068  
                  ??_displayAlarmTime 0059                          ?_printString 0044  
                   _SYSTEM_Initialize 0F4E                            __accesstop 0060  
             __end_of__initialization 0FA4                    ?_SYSTEM_Initialize 0001  
                       ___rparam_used 0001  __end_of_EUSART_SetTxInterruptHandler 1048  
        _EUSART_SetTxInterruptHandler 103E                        __pcstackCOMRAM 0001  
                 ??_SYSTEM_Initialize 0006                          _alarmMinutes 00CA  
                    ?_TMR2_Initialize 0001       __end_of_MAX7219_Dot_Matrix_font FFF9  
         FLASH_WriteBlock@GIEBitValue 0013                          _clearDisplay 0E86  
                    ?_TMR0_StartTimer 0001             __end_of_SYSTEM_Initialize 0F70  
                      flushBuffer@dev 003C                        flushBuffer@row 0040  
                          __pbssBANK0 0060                            _alarmHours 00CB  
                          _clearAlarm 101C         displayAlarmTime@displayString 00D3  
                        flushBuffer@i 0042                          flushBuffer@j 003E  
                     _saveTimeToFlash 0CC0         ?_EUSART_SetTxInterruptHandler 0004  
    _EUSART_TxDefaultInterruptHandler 00E5                            _blinkTimer 00BE  
                             _CCP2CON 0FBA                               _BAUDCON 0FB8  
                      _FLASH_ReadByte 0FDC                         _eusartRxCount 00CF  
                   __end_of_btGetData 0CC0                               _TBLPTRH 0FF7  
                             _TBLPTRL 0FF6                               _TBLPTRU 0FF8  
                             _OSCTUNE 0F9B                               _SSPCON1 0FC6  
                             _SSPSTAT 0FC7               _TMR0_HasOverflowOccured 0FC8  
                    _FLASH_EraseBlock 0EF2                      ??_SPI_Initialize 0004  
 EUSART_SetTxInterruptHandler@handler 0004                               __Hparam 0000  
                             __Lparam 0000                               ___awdiv 07CC  
                             ___awmod 0B72                      _isButton3Pressed 00C5  
              __end_of_FLASH_ReadByte 0FEE                               __pcinit 0F92  
                             __ramtop 1000                            _matrixInit 0EBE  
                             __ptext0 05B4                               __ptext1 0D94  
                             __ptext2 0950                               __ptext3 0E86  
                             __ptext4 0EBE                               __ptext5 0DE6  
                             __ptext6 0D3A                               __ptext7 0068  
                             __ptext8 0CC0                               __ptext9 06DE  
                           _T0CONbits 0FD5                         ??_max7219_cmd 0006  
               _OSCILLATOR_Initialize 1034                             _T2CONbits 0FCA  
                    ___awmod@dividend 0004                     __end_of_max_write 0950  
                             _minutes 00CD              ??_PIN_MANAGER_Initialize 0004  
                             _seconds 00CC                     ?_SPI_Exchange8bit 0001  
                end_of_initialization 0FA4                       printString@data 0050  
                       triggerAlarm@i 00D7                    ??_SPI_Exchange8bit 0004  
                     printString@indx 004E                  SPI_Exchange8bit@data 0004  
             __end_of_saveTimeToFlash 0D3A                           ?_clearAlarm 0001  
                   _EUSART_Initialize 0E38                          max_write@dev 0015  
                          _uartBuffer 00A0                          btGetData@rcv 0001  
                  ?_EUSART_Initialize 0001                          max_write@row 000C  
                           _RCSTAbits 0FAB                               postinc0 0FEE  
                             postinc2 0FDE                       ?_FLASH_ReadByte 0004  
                 ??_EUSART_Initialize 0006                      saveTimeToFlash@i 0144  
      ??_EUSART_SetTxInterruptHandler 0006                     _loadTimeFromFlash 0D3A  
                       ?_processAlarm 0001                             _PORTBbits 0F81  
                       clearDisplay@i 0044                    ?_loadTimeFromFlash 0001  
           ??_TMR0_HasOverflowOccured 0004         FLASH_WriteBlock@flashWrBufPtr 000D  
                 ??_loadTimeFromFlash 0008                   __end_of_max7219_cmd 0E38  
            FLASH_EraseBlock@baseAddr 0004             __end_of_EUSART_Initialize 0E86  
                           _TXSTAbits 0FAC                     FLASH_WriteBlock@i 0017  
                   FLASH_WriteBlock@j 0014            saveTimeToFlash@flashBuffer 0100  
        __end_of_INTERRUPT_Initialize 105A                         ??_displayTime 0059  
           __end_of_loadTimeFromFlash 0D94                        ??_processAlarm 0059  
                         ?_matrixInit 0001          checkButtons@alarmSettingMode 00C2  
                    _FLASH_WriteBlock 06DE                ?_OSCILLATOR_Initialize 0001  
                 start_initialization 0F92                         ?_triggerAlarm 0001  
                    ?_saveTimeToFlash 0001                    printString@strindx 0051  
                       ??_flushBuffer 0019       displayAlarmTime@alarmTimeString 00D8  
         FLASH_EraseBlock@GIEBitValue 0008              __end_of_FLASH_EraseBlock 0F26  
                 __end_of_displayTime 0ABE                           _max7219_cmd 0DE6  
                         __pbssCOMRAM 0059                           _alarmActive 00C8  
                       __pcstackBANK0 00D3                         __pcstackBANK1 0100  
                      ??_triggerAlarm 00D3                          max7219_cmd@i 000B  
                           _btGetData 0C22      _EUSART_RxDefaultInterruptHandler 00E3  
             _MAX7219_Dot_Matrix_font F7F9                             __pnvBANK0 00E3  
                           _btTimeSet 00C4                _PIN_MANAGER_Initialize 0F70  
                           __pintcode 0008                         __pmediumconst F7F8  
                            ?___awdiv 0004                              ?___awmod 0004  
                        _eusartRxHead 00D1                          _eusartTxHead 005B  
                        _eusartRxTail 00D0                   __end_of_flushBuffer 05B4  
                        _eusartTxTail 005A                             _bufferCol 0080  
        ??_INTERRUPT_InterruptManager 0002               _eusartTxBufferRemaining 00D2  
                           _max_write 0890                  _INTERRUPT_Initialize 1056  
                          ?_btGetData 0001        FLASH_WriteBlock@blockStartAddr 000F  
                      _eusartRxBuffer 00AA                     ??_TMR0_Initialize 0004  
                   ??_PWM2_Initialize 0004                        _eusartTxBuffer 00B2  
                __end_of_processAlarm 0DE6                              _LATCbits 0F8B  
                        ??_clearAlarm 0004                              _PIE1bits 0F9D  
                    _displayAlarmTime 0ABE                              i2u214_40 0020  
                            i2u214_41 001C                              i2u215_40 002E  
                            i2u215_41 002A                              i2u216_40 0042  
                            i2u216_41 003E                              i2u217_40 0050  
                            i2u217_41 004C                       max_write@offset 0011  
                            i2u170_40 0C9A                              i2u170_41 0C96  
                            i2u171_40 0CAC                              i2u171_41 0CA8  
                            i2u166_40 0C36                              i2u166_41 0C32  
                            i2u167_40 0C46                              i2u167_41 0C42  
                            i2u168_40 0C68                              i2u168_41 0C64  
                            i2u169_40 0C78                              i2u169_41 0C74  
                            _PIR1bits 0F9E                      ??_FLASH_ReadByte 0008  
                            _PIR2bits 0FA1                         ??_TMR0_Reload 0004  
                            _RCONbits 0FD0                           _displayTime 0A0A  
                  __end_of_clearAlarm 1028                         ?_checkButtons 0001  
                         _INTCON2bits 0FF1                            ?_max_write 000C  
               ?_INTERRUPT_Initialize 0001                         ??_printString 0046  
                   ??_TMR2_Initialize 0004              __end_of_FLASH_WriteBlock 07CC  
                          _EECON1bits 0FA6                              __Hrparam 0000  
                         _flushBuffer 0486                              __Lrparam 0000  
                  max_write@devTarget 0013               ??_OSCILLATOR_Initialize 0004  
                __end_of_triggerAlarm 0A0A                     ??_TMR0_StartTimer 0004  
                        ??_matrixInit 000D                   __end_of_TMR0_Reload 1034  
                     main@minutes_pom 00E2                              _alarmSet 00C9  
                      ??_checkButtons 00DF                         ?_clearDisplay 0001  
                            __ptext10 0EF2                              __ptext11 0FDC  
                            __ptext20 101C                              __ptext12 0A0A  
                            __ptext21 1052                              __ptext13 0ABE  
                            __ptext30 1034                              __ptext22 1028  
                            __ptext14 02FE                              __ptext31 1056  
                            __ptext23 0FC8                              __ptext15 0486  
                            __ptext32 0E38                              __ptext24 0F4E  
                            __ptext16 0890                              __ptext33 103E  
                            __ptext25 0FEE                              __ptext17 07CC  
                            __ptext34 1048                              __ptext26 0F26  
                            __ptext18 0FAE                              __ptext27 1000  
                            __ptext19 0B72                              __ptext36 0C22  
                            __ptext28 100E                              __ptext29 0F70  
                         ??_btGetData 0001                    __end_of_matrixInit 0EF2  
                 __end_of_printString 0486                  flushBuffer@bufferRow 001C  
                     _displayBlinking 00C6                              isa$xinst 0000  
                max7219_cmd@writeData 0009                              int$flags 005C  
  __end_of_INTERRUPT_InterruptManager 0064            _INTERRUPT_InterruptManager 0008  
                   ?_FLASH_EraseBlock 0004   FLASH_WriteBlock@numberOfWriteBlocks 0015  
            ?_TMR0_HasOverflowOccured 0001                          ?_max7219_cmd 0005  
                  ??_FLASH_EraseBlock 0008                            _INTCONbits 0FF2  
                     _uartBufferIndex 0059                        ??_clearDisplay 0044  
              ??_INTERRUPT_Initialize 0004                    max_write@writeData 0017  
                         ??_max_write 000F                              intlevel2 0000  
             ?_PIN_MANAGER_Initialize 0001  __end_of_EUSART_SetRxInterruptHandler 1052  
        _EUSART_SetRxInterruptHandler 1048                         max_write@data 000E  
                    _SPI_Exchange8bit 0FAE                           _TMR0_Reload 1028  
                  _EUSART_Receive_ISR 0000              displayTime@displayString 00D3  
                        _processAlarm 0D94              __end_of_displayAlarmTime 0B72  
                     _TMR0_Initialize 0F26                       _PWM2_Initialize 100E  
       checkButtons@button3PressCount 00C3                           _SSPCON1bits 0FC6  
      __end_of_PIN_MANAGER_Initialize 0F92                           _printString 02FE  
