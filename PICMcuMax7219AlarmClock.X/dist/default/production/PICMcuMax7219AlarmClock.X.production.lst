

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sun Sep 15 10:51:56 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    55                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    56                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    57                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Generated 05/01/2024 GMT
    61                           ; 
    62                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F26K20 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000000                     
    95 ;; Function _EUSART_Transmit_ISR is unused but had its address taken
    96   000000                     
    97 ;; Function _EUSART_Receive_ISR is unused but had its address taken
    98   000000                     
    99                           	psect	mediumconst
   100   00F7F8                     __pmediumconst:
   101                           	callstack 0
   102   00F7F8  00                 	db	0
   103   00F7F9                     _MAX7219_Dot_Matrix_font:
   104                           	callstack 0
   105   00F7F9  00                 	db	0
   106   00F7FA  00                 	db	0
   107   00F7FB  00                 	db	0
   108   00F7FC  00                 	db	0
   109   00F7FD  00                 	db	0
   110   00F7FE  00                 	db	0
   111   00F7FF  00                 	db	0
   112   00F800  00                 	db	0
   113   00F801  7E                 	db	126
   114   00F802  81                 	db	129
   115   00F803  95                 	db	149
   116   00F804  B1                 	db	177
   117   00F805  B1                 	db	177
   118   00F806  95                 	db	149
   119   00F807  81                 	db	129
   120   00F808  7E                 	db	126
   121   00F809  7E                 	db	126
   122   00F80A  FF                 	db	255
   123   00F80B  EB                 	db	235
   124   00F80C  CF                 	db	207
   125   00F80D  CF                 	db	207
   126   00F80E  EB                 	db	235
   127   00F80F  FF                 	db	255
   128   00F810  7E                 	db	126
   129   00F811  0E                 	db	14
   130   00F812  1F                 	db	31
   131   00F813  3F                 	db	63
   132   00F814  7E                 	db	126
   133   00F815  3F                 	db	63
   134   00F816  1F                 	db	31
   135   00F817  0E                 	db	14
   136   00F818  00                 	db	0
   137   00F819  08                 	db	8
   138   00F81A  1C                 	db	28
   139   00F81B  3E                 	db	62
   140   00F81C  7F                 	db	127
   141   00F81D  3E                 	db	62
   142   00F81E  1C                 	db	28
   143   00F81F  08                 	db	8
   144   00F820  00                 	db	0
   145   00F821  18                 	db	24
   146   00F822  BA                 	db	186
   147   00F823  FF                 	db	255
   148   00F824  FF                 	db	255
   149   00F825  FF                 	db	255
   150   00F826  BA                 	db	186
   151   00F827  18                 	db	24
   152   00F828  00                 	db	0
   153   00F829  10                 	db	16
   154   00F82A  B8                 	db	184
   155   00F82B  FC                 	db	252
   156   00F82C  FF                 	db	255
   157   00F82D  FC                 	db	252
   158   00F82E  B8                 	db	184
   159   00F82F  10                 	db	16
   160   00F830  00                 	db	0
   161   00F831  00                 	db	0
   162   00F832  00                 	db	0
   163   00F833  18                 	db	24
   164   00F834  3C                 	db	60
   165   00F835  3C                 	db	60
   166   00F836  18                 	db	24
   167   00F837  00                 	db	0
   168   00F838  00                 	db	0
   169   00F839  FF                 	db	255
   170   00F83A  FF                 	db	255
   171   00F83B  E7                 	db	231
   172   00F83C  C3                 	db	195
   173   00F83D  C3                 	db	195
   174   00F83E  E7                 	db	231
   175   00F83F  FF                 	db	255
   176   00F840  FF                 	db	255
   177   00F841  00                 	db	0
   178   00F842  3C                 	db	60
   179   00F843  66                 	db	102
   180   00F844  42                 	db	66
   181   00F845  42                 	db	66
   182   00F846  66                 	db	102
   183   00F847  3C                 	db	60
   184   00F848  00                 	db	0
   185   00F849  FF                 	db	255
   186   00F84A  C3                 	db	195
   187   00F84B  99                 	db	153
   188   00F84C  BD                 	db	189
   189   00F84D  BD                 	db	189
   190   00F84E  99                 	db	153
   191   00F84F  C3                 	db	195
   192   00F850  FF                 	db	255
   193   00F851  70                 	db	112
   194   00F852  F8                 	db	248
   195   00F853  88                 	db	136
   196   00F854  88                 	db	136
   197   00F855  FD                 	db	253
   198   00F856  7F                 	db	127
   199   00F857  07                 	db	7
   200   00F858  0F                 	db	15
   201   00F859  00                 	db	0
   202   00F85A  4E                 	db	78
   203   00F85B  5F                 	db	95
   204   00F85C  F1                 	db	241
   205   00F85D  F1                 	db	241
   206   00F85E  5F                 	db	95
   207   00F85F  4E                 	db	78
   208   00F860  00                 	db	0
   209   00F861  C0                 	db	192
   210   00F862  E0                 	db	224
   211   00F863  FF                 	db	255
   212   00F864  7F                 	db	127
   213   00F865  05                 	db	5
   214   00F866  05                 	db	5
   215   00F867  07                 	db	7
   216   00F868  07                 	db	7
   217   00F869  C0                 	db	192
   218   00F86A  FF                 	db	255
   219   00F86B  7F                 	db	127
   220   00F86C  05                 	db	5
   221   00F86D  05                 	db	5
   222   00F86E  65                 	db	101
   223   00F86F  7F                 	db	127
   224   00F870  3F                 	db	63
   225   00F871  99                 	db	153
   226   00F872  5A                 	db	90
   227   00F873  3C                 	db	60
   228   00F874  E7                 	db	231
   229   00F875  E7                 	db	231
   230   00F876  3C                 	db	60
   231   00F877  5A                 	db	90
   232   00F878  99                 	db	153
   233   00F879  7F                 	db	127
   234   00F87A  3E                 	db	62
   235   00F87B  3E                 	db	62
   236   00F87C  1C                 	db	28
   237   00F87D  1C                 	db	28
   238   00F87E  08                 	db	8
   239   00F87F  08                 	db	8
   240   00F880  00                 	db	0
   241   00F881  08                 	db	8
   242   00F882  08                 	db	8
   243   00F883  1C                 	db	28
   244   00F884  1C                 	db	28
   245   00F885  3E                 	db	62
   246   00F886  3E                 	db	62
   247   00F887  7F                 	db	127
   248   00F888  00                 	db	0
   249   00F889  00                 	db	0
   250   00F88A  24                 	db	36
   251   00F88B  66                 	db	102
   252   00F88C  FF                 	db	255
   253   00F88D  FF                 	db	255
   254   00F88E  66                 	db	102
   255   00F88F  24                 	db	36
   256   00F890  00                 	db	0
   257   00F891  00                 	db	0
   258   00F892  5F                 	db	95
   259   00F893  5F                 	db	95
   260   00F894  00                 	db	0
   261   00F895  00                 	db	0
   262   00F896  5F                 	db	95
   263   00F897  5F                 	db	95
   264   00F898  00                 	db	0
   265   00F899  06                 	db	6
   266   00F89A  0F                 	db	15
   267   00F89B  09                 	db	9
   268   00F89C  7F                 	db	127
   269   00F89D  7F                 	db	127
   270   00F89E  01                 	db	1
   271   00F89F  7F                 	db	127
   272   00F8A0  7F                 	db	127
   273   00F8A1  40                 	db	64
   274   00F8A2  DA                 	db	218
   275   00F8A3  BF                 	db	191
   276   00F8A4  A5                 	db	165
   277   00F8A5  FD                 	db	253
   278   00F8A6  59                 	db	89
   279   00F8A7  03                 	db	3
   280   00F8A8  02                 	db	2
   281   00F8A9  00                 	db	0
   282   00F8AA  70                 	db	112
   283   00F8AB  70                 	db	112
   284   00F8AC  70                 	db	112
   285   00F8AD  70                 	db	112
   286   00F8AE  70                 	db	112
   287   00F8AF  70                 	db	112
   288   00F8B0  00                 	db	0
   289   00F8B1  80                 	db	128
   290   00F8B2  94                 	db	148
   291   00F8B3  B6                 	db	182
   292   00F8B4  FF                 	db	255
   293   00F8B5  FF                 	db	255
   294   00F8B6  B6                 	db	182
   295   00F8B7  94                 	db	148
   296   00F8B8  80                 	db	128
   297   00F8B9  00                 	db	0
   298   00F8BA  04                 	db	4
   299   00F8BB  06                 	db	6
   300   00F8BC  7F                 	db	127
   301   00F8BD  7F                 	db	127
   302   00F8BE  06                 	db	6
   303   00F8BF  04                 	db	4
   304   00F8C0  00                 	db	0
   305   00F8C1  00                 	db	0
   306   00F8C2  10                 	db	16
   307   00F8C3  30                 	db	48
   308   00F8C4  7F                 	db	127
   309   00F8C5  7F                 	db	127
   310   00F8C6  30                 	db	48
   311   00F8C7  10                 	db	16
   312   00F8C8  00                 	db	0
   313   00F8C9  08                 	db	8
   314   00F8CA  08                 	db	8
   315   00F8CB  08                 	db	8
   316   00F8CC  2A                 	db	42
   317   00F8CD  3E                 	db	62
   318   00F8CE  1C                 	db	28
   319   00F8CF  08                 	db	8
   320   00F8D0  00                 	db	0
   321   00F8D1  08                 	db	8
   322   00F8D2  1C                 	db	28
   323   00F8D3  3E                 	db	62
   324   00F8D4  2A                 	db	42
   325   00F8D5  08                 	db	8
   326   00F8D6  08                 	db	8
   327   00F8D7  08                 	db	8
   328   00F8D8  00                 	db	0
   329   00F8D9  3C                 	db	60
   330   00F8DA  3C                 	db	60
   331   00F8DB  20                 	db	32
   332   00F8DC  20                 	db	32
   333   00F8DD  20                 	db	32
   334   00F8DE  20                 	db	32
   335   00F8DF  20                 	db	32
   336   00F8E0  00                 	db	0
   337   00F8E1  08                 	db	8
   338   00F8E2  1C                 	db	28
   339   00F8E3  3E                 	db	62
   340   00F8E4  08                 	db	8
   341   00F8E5  08                 	db	8
   342   00F8E6  3E                 	db	62
   343   00F8E7  1C                 	db	28
   344   00F8E8  08                 	db	8
   345   00F8E9  30                 	db	48
   346   00F8EA  38                 	db	56
   347   00F8EB  3C                 	db	60
   348   00F8EC  3E                 	db	62
   349   00F8ED  3E                 	db	62
   350   00F8EE  3C                 	db	60
   351   00F8EF  38                 	db	56
   352   00F8F0  30                 	db	48
   353   00F8F1  06                 	db	6
   354   00F8F2  0E                 	db	14
   355   00F8F3  1E                 	db	30
   356   00F8F4  3E                 	db	62
   357   00F8F5  3E                 	db	62
   358   00F8F6  1E                 	db	30
   359   00F8F7  0E                 	db	14
   360   00F8F8  06                 	db	6
   361   00F8F9  00                 	db	0
   362   00F8FA  00                 	db	0
   363   00F8FB  00                 	db	0
   364   00F8FC  00                 	db	0
   365   00F8FD  00                 	db	0
   366   00F8FE  00                 	db	0
   367   00F8FF  00                 	db	0
   368   00F900  00                 	db	0
   369   00F901  00                 	db	0
   370   00F902  06                 	db	6
   371   00F903  5F                 	db	95
   372   00F904  5F                 	db	95
   373   00F905  06                 	db	6
   374   00F906  00                 	db	0
   375   00F907  00                 	db	0
   376   00F908  00                 	db	0
   377   00F909  00                 	db	0
   378   00F90A  07                 	db	7
   379   00F90B  07                 	db	7
   380   00F90C  00                 	db	0
   381   00F90D  07                 	db	7
   382   00F90E  07                 	db	7
   383   00F90F  00                 	db	0
   384   00F910  00                 	db	0
   385   00F911  14                 	db	20
   386   00F912  7F                 	db	127
   387   00F913  7F                 	db	127
   388   00F914  14                 	db	20
   389   00F915  7F                 	db	127
   390   00F916  7F                 	db	127
   391   00F917  14                 	db	20
   392   00F918  00                 	db	0
   393   00F919  24                 	db	36
   394   00F91A  2E                 	db	46
   395   00F91B  6B                 	db	107
   396   00F91C  6B                 	db	107
   397   00F91D  3A                 	db	58
   398   00F91E  12                 	db	18
   399   00F91F  00                 	db	0
   400   00F920  00                 	db	0
   401   00F921  46                 	db	70
   402   00F922  66                 	db	102
   403   00F923  30                 	db	48
   404   00F924  18                 	db	24
   405   00F925  0C                 	db	12
   406   00F926  66                 	db	102
   407   00F927  62                 	db	98
   408   00F928  00                 	db	0
   409   00F929  30                 	db	48
   410   00F92A  7A                 	db	122
   411   00F92B  4F                 	db	79
   412   00F92C  5D                 	db	93
   413   00F92D  37                 	db	55
   414   00F92E  7A                 	db	122
   415   00F92F  48                 	db	72
   416   00F930  00                 	db	0
   417   00F931  04                 	db	4
   418   00F932  07                 	db	7
   419   00F933  03                 	db	3
   420   00F934  00                 	db	0
   421   00F935  00                 	db	0
   422   00F936  00                 	db	0
   423   00F937  00                 	db	0
   424   00F938  00                 	db	0
   425   00F939  00                 	db	0
   426   00F93A  1C                 	db	28
   427   00F93B  3E                 	db	62
   428   00F93C  63                 	db	99
   429   00F93D  41                 	db	65
   430   00F93E  00                 	db	0
   431   00F93F  00                 	db	0
   432   00F940  00                 	db	0
   433   00F941  00                 	db	0
   434   00F942  41                 	db	65
   435   00F943  63                 	db	99
   436   00F944  3E                 	db	62
   437   00F945  1C                 	db	28
   438   00F946  00                 	db	0
   439   00F947  00                 	db	0
   440   00F948  00                 	db	0
   441   00F949  08                 	db	8
   442   00F94A  2A                 	db	42
   443   00F94B  3E                 	db	62
   444   00F94C  1C                 	db	28
   445   00F94D  1C                 	db	28
   446   00F94E  3E                 	db	62
   447   00F94F  2A                 	db	42
   448   00F950  08                 	db	8
   449   00F951  08                 	db	8
   450   00F952  08                 	db	8
   451   00F953  3E                 	db	62
   452   00F954  3E                 	db	62
   453   00F955  08                 	db	8
   454   00F956  08                 	db	8
   455   00F957  00                 	db	0
   456   00F958  00                 	db	0
   457   00F959  00                 	db	0
   458   00F95A  80                 	db	128
   459   00F95B  E0                 	db	224
   460   00F95C  60                 	db	96
   461   00F95D  00                 	db	0
   462   00F95E  00                 	db	0
   463   00F95F  00                 	db	0
   464   00F960  00                 	db	0
   465   00F961  08                 	db	8
   466   00F962  08                 	db	8
   467   00F963  08                 	db	8
   468   00F964  08                 	db	8
   469   00F965  08                 	db	8
   470   00F966  08                 	db	8
   471   00F967  00                 	db	0
   472   00F968  00                 	db	0
   473   00F969  00                 	db	0
   474   00F96A  00                 	db	0
   475   00F96B  60                 	db	96
   476   00F96C  60                 	db	96
   477   00F96D  00                 	db	0
   478   00F96E  00                 	db	0
   479   00F96F  00                 	db	0
   480   00F970  00                 	db	0
   481   00F971  60                 	db	96
   482   00F972  30                 	db	48
   483   00F973  18                 	db	24
   484   00F974  0C                 	db	12
   485   00F975  06                 	db	6
   486   00F976  03                 	db	3
   487   00F977  01                 	db	1
   488   00F978  00                 	db	0
   489   00F979  3E                 	db	62
   490   00F97A  7F                 	db	127
   491   00F97B  71                 	db	113
   492   00F97C  59                 	db	89
   493   00F97D  4D                 	db	77
   494   00F97E  7F                 	db	127
   495   00F97F  3E                 	db	62
   496   00F980  00                 	db	0
   497   00F981  40                 	db	64
   498   00F982  42                 	db	66
   499   00F983  7F                 	db	127
   500   00F984  7F                 	db	127
   501   00F985  40                 	db	64
   502   00F986  40                 	db	64
   503   00F987  00                 	db	0
   504   00F988  00                 	db	0
   505   00F989  62                 	db	98
   506   00F98A  73                 	db	115
   507   00F98B  59                 	db	89
   508   00F98C  49                 	db	73
   509   00F98D  6F                 	db	111
   510   00F98E  66                 	db	102
   511   00F98F  00                 	db	0
   512   00F990  00                 	db	0
   513   00F991  22                 	db	34
   514   00F992  63                 	db	99
   515   00F993  49                 	db	73
   516   00F994  49                 	db	73
   517   00F995  7F                 	db	127
   518   00F996  36                 	db	54
   519   00F997  00                 	db	0
   520   00F998  00                 	db	0
   521   00F999  18                 	db	24
   522   00F99A  1C                 	db	28
   523   00F99B  16                 	db	22
   524   00F99C  53                 	db	83
   525   00F99D  7F                 	db	127
   526   00F99E  7F                 	db	127
   527   00F99F  50                 	db	80
   528   00F9A0  00                 	db	0
   529   00F9A1  27                 	db	39
   530   00F9A2  67                 	db	103
   531   00F9A3  45                 	db	69
   532   00F9A4  45                 	db	69
   533   00F9A5  7D                 	db	125
   534   00F9A6  39                 	db	57
   535   00F9A7  00                 	db	0
   536   00F9A8  00                 	db	0
   537   00F9A9  3C                 	db	60
   538   00F9AA  7E                 	db	126
   539   00F9AB  4B                 	db	75
   540   00F9AC  49                 	db	73
   541   00F9AD  79                 	db	121
   542   00F9AE  30                 	db	48
   543   00F9AF  00                 	db	0
   544   00F9B0  00                 	db	0
   545   00F9B1  03                 	db	3
   546   00F9B2  03                 	db	3
   547   00F9B3  71                 	db	113
   548   00F9B4  79                 	db	121
   549   00F9B5  0F                 	db	15
   550   00F9B6  07                 	db	7
   551   00F9B7  00                 	db	0
   552   00F9B8  00                 	db	0
   553   00F9B9  36                 	db	54
   554   00F9BA  7F                 	db	127
   555   00F9BB  49                 	db	73
   556   00F9BC  49                 	db	73
   557   00F9BD  7F                 	db	127
   558   00F9BE  36                 	db	54
   559   00F9BF  00                 	db	0
   560   00F9C0  00                 	db	0
   561   00F9C1  06                 	db	6
   562   00F9C2  4F                 	db	79
   563   00F9C3  49                 	db	73
   564   00F9C4  69                 	db	105
   565   00F9C5  3F                 	db	63
   566   00F9C6  1E                 	db	30
   567   00F9C7  00                 	db	0
   568   00F9C8  00                 	db	0
   569   00F9C9  00                 	db	0
   570   00F9CA  00                 	db	0
   571   00F9CB  66                 	db	102
   572   00F9CC  66                 	db	102
   573   00F9CD  00                 	db	0
   574   00F9CE  00                 	db	0
   575   00F9CF  00                 	db	0
   576   00F9D0  00                 	db	0
   577   00F9D1  00                 	db	0
   578   00F9D2  80                 	db	128
   579   00F9D3  E6                 	db	230
   580   00F9D4  66                 	db	102
   581   00F9D5  00                 	db	0
   582   00F9D6  00                 	db	0
   583   00F9D7  00                 	db	0
   584   00F9D8  00                 	db	0
   585   00F9D9  08                 	db	8
   586   00F9DA  1C                 	db	28
   587   00F9DB  36                 	db	54
   588   00F9DC  63                 	db	99
   589   00F9DD  41                 	db	65
   590   00F9DE  00                 	db	0
   591   00F9DF  00                 	db	0
   592   00F9E0  00                 	db	0
   593   00F9E1  24                 	db	36
   594   00F9E2  24                 	db	36
   595   00F9E3  24                 	db	36
   596   00F9E4  24                 	db	36
   597   00F9E5  24                 	db	36
   598   00F9E6  24                 	db	36
   599   00F9E7  00                 	db	0
   600   00F9E8  00                 	db	0
   601   00F9E9  00                 	db	0
   602   00F9EA  41                 	db	65
   603   00F9EB  63                 	db	99
   604   00F9EC  36                 	db	54
   605   00F9ED  1C                 	db	28
   606   00F9EE  08                 	db	8
   607   00F9EF  00                 	db	0
   608   00F9F0  00                 	db	0
   609   00F9F1  02                 	db	2
   610   00F9F2  03                 	db	3
   611   00F9F3  51                 	db	81
   612   00F9F4  59                 	db	89
   613   00F9F5  0F                 	db	15
   614   00F9F6  06                 	db	6
   615   00F9F7  00                 	db	0
   616   00F9F8  00                 	db	0
   617   00F9F9  3E                 	db	62
   618   00F9FA  7F                 	db	127
   619   00F9FB  41                 	db	65
   620   00F9FC  5D                 	db	93
   621   00F9FD  5D                 	db	93
   622   00F9FE  1F                 	db	31
   623   00F9FF  1E                 	db	30
   624   00FA00  00                 	db	0
   625   00FA01  7C                 	db	124
   626   00FA02  7E                 	db	126
   627   00FA03  13                 	db	19
   628   00FA04  13                 	db	19
   629   00FA05  7E                 	db	126
   630   00FA06  7C                 	db	124
   631   00FA07  00                 	db	0
   632   00FA08  00                 	db	0
   633   00FA09  41                 	db	65
   634   00FA0A  7F                 	db	127
   635   00FA0B  7F                 	db	127
   636   00FA0C  49                 	db	73
   637   00FA0D  49                 	db	73
   638   00FA0E  7F                 	db	127
   639   00FA0F  36                 	db	54
   640   00FA10  00                 	db	0
   641   00FA11  1C                 	db	28
   642   00FA12  3E                 	db	62
   643   00FA13  63                 	db	99
   644   00FA14  41                 	db	65
   645   00FA15  41                 	db	65
   646   00FA16  63                 	db	99
   647   00FA17  22                 	db	34
   648   00FA18  00                 	db	0
   649   00FA19  41                 	db	65
   650   00FA1A  7F                 	db	127
   651   00FA1B  7F                 	db	127
   652   00FA1C  41                 	db	65
   653   00FA1D  63                 	db	99
   654   00FA1E  3E                 	db	62
   655   00FA1F  1C                 	db	28
   656   00FA20  00                 	db	0
   657   00FA21  41                 	db	65
   658   00FA22  7F                 	db	127
   659   00FA23  7F                 	db	127
   660   00FA24  49                 	db	73
   661   00FA25  5D                 	db	93
   662   00FA26  41                 	db	65
   663   00FA27  63                 	db	99
   664   00FA28  00                 	db	0
   665   00FA29  41                 	db	65
   666   00FA2A  7F                 	db	127
   667   00FA2B  7F                 	db	127
   668   00FA2C  49                 	db	73
   669   00FA2D  1D                 	db	29
   670   00FA2E  01                 	db	1
   671   00FA2F  03                 	db	3
   672   00FA30  00                 	db	0
   673   00FA31  1C                 	db	28
   674   00FA32  3E                 	db	62
   675   00FA33  63                 	db	99
   676   00FA34  41                 	db	65
   677   00FA35  51                 	db	81
   678   00FA36  73                 	db	115
   679   00FA37  72                 	db	114
   680   00FA38  00                 	db	0
   681   00FA39  7F                 	db	127
   682   00FA3A  7F                 	db	127
   683   00FA3B  08                 	db	8
   684   00FA3C  08                 	db	8
   685   00FA3D  7F                 	db	127
   686   00FA3E  7F                 	db	127
   687   00FA3F  00                 	db	0
   688   00FA40  00                 	db	0
   689   00FA41  00                 	db	0
   690   00FA42  41                 	db	65
   691   00FA43  7F                 	db	127
   692   00FA44  7F                 	db	127
   693   00FA45  41                 	db	65
   694   00FA46  00                 	db	0
   695   00FA47  00                 	db	0
   696   00FA48  00                 	db	0
   697   00FA49  30                 	db	48
   698   00FA4A  70                 	db	112
   699   00FA4B  40                 	db	64
   700   00FA4C  41                 	db	65
   701   00FA4D  7F                 	db	127
   702   00FA4E  3F                 	db	63
   703   00FA4F  01                 	db	1
   704   00FA50  00                 	db	0
   705   00FA51  41                 	db	65
   706   00FA52  7F                 	db	127
   707   00FA53  7F                 	db	127
   708   00FA54  08                 	db	8
   709   00FA55  1C                 	db	28
   710   00FA56  77                 	db	119
   711   00FA57  63                 	db	99
   712   00FA58  00                 	db	0
   713   00FA59  41                 	db	65
   714   00FA5A  7F                 	db	127
   715   00FA5B  7F                 	db	127
   716   00FA5C  41                 	db	65
   717   00FA5D  40                 	db	64
   718   00FA5E  60                 	db	96
   719   00FA5F  70                 	db	112
   720   00FA60  00                 	db	0
   721   00FA61  00                 	db	0
   722   00FA62  7F                 	db	127
   723   00FA63  0E                 	db	14
   724   00FA64  1C                 	db	28
   725   00FA65  0E                 	db	14
   726   00FA66  7F                 	db	127
   727   00FA67  00                 	db	0
   728   00FA68  00                 	db	0
   729   00FA69  7F                 	db	127
   730   00FA6A  7F                 	db	127
   731   00FA6B  06                 	db	6
   732   00FA6C  0C                 	db	12
   733   00FA6D  18                 	db	24
   734   00FA6E  7F                 	db	127
   735   00FA6F  7F                 	db	127
   736   00FA70  00                 	db	0
   737   00FA71  1C                 	db	28
   738   00FA72  3E                 	db	62
   739   00FA73  63                 	db	99
   740   00FA74  41                 	db	65
   741   00FA75  63                 	db	99
   742   00FA76  3E                 	db	62
   743   00FA77  1C                 	db	28
   744   00FA78  00                 	db	0
   745   00FA79  41                 	db	65
   746   00FA7A  7F                 	db	127
   747   00FA7B  7F                 	db	127
   748   00FA7C  49                 	db	73
   749   00FA7D  09                 	db	9
   750   00FA7E  0F                 	db	15
   751   00FA7F  06                 	db	6
   752   00FA80  00                 	db	0
   753   00FA81  1E                 	db	30
   754   00FA82  3F                 	db	63
   755   00FA83  21                 	db	33
   756   00FA84  71                 	db	113
   757   00FA85  7F                 	db	127
   758   00FA86  5E                 	db	94
   759   00FA87  00                 	db	0
   760   00FA88  00                 	db	0
   761   00FA89  41                 	db	65
   762   00FA8A  7F                 	db	127
   763   00FA8B  7F                 	db	127
   764   00FA8C  09                 	db	9
   765   00FA8D  19                 	db	25
   766   00FA8E  7F                 	db	127
   767   00FA8F  66                 	db	102
   768   00FA90  00                 	db	0
   769   00FA91  26                 	db	38
   770   00FA92  6F                 	db	111
   771   00FA93  4D                 	db	77
   772   00FA94  59                 	db	89
   773   00FA95  73                 	db	115
   774   00FA96  32                 	db	50
   775   00FA97  00                 	db	0
   776   00FA98  00                 	db	0
   777   00FA99  03                 	db	3
   778   00FA9A  41                 	db	65
   779   00FA9B  7F                 	db	127
   780   00FA9C  7F                 	db	127
   781   00FA9D  41                 	db	65
   782   00FA9E  03                 	db	3
   783   00FA9F  00                 	db	0
   784   00FAA0  00                 	db	0
   785   00FAA1  7F                 	db	127
   786   00FAA2  7F                 	db	127
   787   00FAA3  40                 	db	64
   788   00FAA4  40                 	db	64
   789   00FAA5  7F                 	db	127
   790   00FAA6  7F                 	db	127
   791   00FAA7  00                 	db	0
   792   00FAA8  00                 	db	0
   793   00FAA9  1F                 	db	31
   794   00FAAA  3F                 	db	63
   795   00FAAB  60                 	db	96
   796   00FAAC  60                 	db	96
   797   00FAAD  3F                 	db	63
   798   00FAAE  1F                 	db	31
   799   00FAAF  00                 	db	0
   800   00FAB0  00                 	db	0
   801   00FAB1  7F                 	db	127
   802   00FAB2  7F                 	db	127
   803   00FAB3  30                 	db	48
   804   00FAB4  18                 	db	24
   805   00FAB5  30                 	db	48
   806   00FAB6  7F                 	db	127
   807   00FAB7  7F                 	db	127
   808   00FAB8  00                 	db	0
   809   00FAB9  43                 	db	67
   810   00FABA  67                 	db	103
   811   00FABB  3C                 	db	60
   812   00FABC  18                 	db	24
   813   00FABD  3C                 	db	60
   814   00FABE  67                 	db	103
   815   00FABF  43                 	db	67
   816   00FAC0  00                 	db	0
   817   00FAC1  07                 	db	7
   818   00FAC2  4F                 	db	79
   819   00FAC3  78                 	db	120
   820   00FAC4  78                 	db	120
   821   00FAC5  4F                 	db	79
   822   00FAC6  07                 	db	7
   823   00FAC7  00                 	db	0
   824   00FAC8  00                 	db	0
   825   00FAC9  47                 	db	71
   826   00FACA  63                 	db	99
   827   00FACB  71                 	db	113
   828   00FACC  59                 	db	89
   829   00FACD  4D                 	db	77
   830   00FACE  67                 	db	103
   831   00FACF  73                 	db	115
   832   00FAD0  00                 	db	0
   833   00FAD1  00                 	db	0
   834   00FAD2  7F                 	db	127
   835   00FAD3  7F                 	db	127
   836   00FAD4  41                 	db	65
   837   00FAD5  41                 	db	65
   838   00FAD6  00                 	db	0
   839   00FAD7  00                 	db	0
   840   00FAD8  00                 	db	0
   841   00FAD9  01                 	db	1
   842   00FADA  03                 	db	3
   843   00FADB  06                 	db	6
   844   00FADC  0C                 	db	12
   845   00FADD  18                 	db	24
   846   00FADE  30                 	db	48
   847   00FADF  60                 	db	96
   848   00FAE0  00                 	db	0
   849   00FAE1  00                 	db	0
   850   00FAE2  41                 	db	65
   851   00FAE3  41                 	db	65
   852   00FAE4  7F                 	db	127
   853   00FAE5  7F                 	db	127
   854   00FAE6  00                 	db	0
   855   00FAE7  00                 	db	0
   856   00FAE8  00                 	db	0
   857   00FAE9  08                 	db	8
   858   00FAEA  0C                 	db	12
   859   00FAEB  06                 	db	6
   860   00FAEC  03                 	db	3
   861   00FAED  06                 	db	6
   862   00FAEE  0C                 	db	12
   863   00FAEF  08                 	db	8
   864   00FAF0  00                 	db	0
   865   00FAF1  80                 	db	128
   866   00FAF2  80                 	db	128
   867   00FAF3  80                 	db	128
   868   00FAF4  80                 	db	128
   869   00FAF5  80                 	db	128
   870   00FAF6  80                 	db	128
   871   00FAF7  80                 	db	128
   872   00FAF8  80                 	db	128
   873   00FAF9  00                 	db	0
   874   00FAFA  00                 	db	0
   875   00FAFB  03                 	db	3
   876   00FAFC  07                 	db	7
   877   00FAFD  04                 	db	4
   878   00FAFE  00                 	db	0
   879   00FAFF  00                 	db	0
   880   00FB00  00                 	db	0
   881   00FB01  20                 	db	32
   882   00FB02  74                 	db	116
   883   00FB03  54                 	db	84
   884   00FB04  54                 	db	84
   885   00FB05  3C                 	db	60
   886   00FB06  78                 	db	120
   887   00FB07  40                 	db	64
   888   00FB08  00                 	db	0
   889   00FB09  41                 	db	65
   890   00FB0A  7F                 	db	127
   891   00FB0B  3F                 	db	63
   892   00FB0C  48                 	db	72
   893   00FB0D  48                 	db	72
   894   00FB0E  78                 	db	120
   895   00FB0F  30                 	db	48
   896   00FB10  00                 	db	0
   897   00FB11  38                 	db	56
   898   00FB12  7C                 	db	124
   899   00FB13  44                 	db	68
   900   00FB14  44                 	db	68
   901   00FB15  6C                 	db	108
   902   00FB16  28                 	db	40
   903   00FB17  00                 	db	0
   904   00FB18  00                 	db	0
   905   00FB19  30                 	db	48
   906   00FB1A  78                 	db	120
   907   00FB1B  48                 	db	72
   908   00FB1C  49                 	db	73
   909   00FB1D  3F                 	db	63
   910   00FB1E  7F                 	db	127
   911   00FB1F  40                 	db	64
   912   00FB20  00                 	db	0
   913   00FB21  38                 	db	56
   914   00FB22  7C                 	db	124
   915   00FB23  54                 	db	84
   916   00FB24  54                 	db	84
   917   00FB25  5C                 	db	92
   918   00FB26  18                 	db	24
   919   00FB27  00                 	db	0
   920   00FB28  00                 	db	0
   921   00FB29  48                 	db	72
   922   00FB2A  7E                 	db	126
   923   00FB2B  7F                 	db	127
   924   00FB2C  49                 	db	73
   925   00FB2D  03                 	db	3
   926   00FB2E  02                 	db	2
   927   00FB2F  00                 	db	0
   928   00FB30  00                 	db	0
   929   00FB31  98                 	db	152
   930   00FB32  BC                 	db	188
   931   00FB33  A4                 	db	164
   932   00FB34  A4                 	db	164
   933   00FB35  F8                 	db	248
   934   00FB36  7C                 	db	124
   935   00FB37  04                 	db	4
   936   00FB38  00                 	db	0
   937   00FB39  41                 	db	65
   938   00FB3A  7F                 	db	127
   939   00FB3B  7F                 	db	127
   940   00FB3C  08                 	db	8
   941   00FB3D  04                 	db	4
   942   00FB3E  7C                 	db	124
   943   00FB3F  78                 	db	120
   944   00FB40  00                 	db	0
   945   00FB41  00                 	db	0
   946   00FB42  44                 	db	68
   947   00FB43  7D                 	db	125
   948   00FB44  7D                 	db	125
   949   00FB45  40                 	db	64
   950   00FB46  00                 	db	0
   951   00FB47  00                 	db	0
   952   00FB48  00                 	db	0
   953   00FB49  60                 	db	96
   954   00FB4A  E0                 	db	224
   955   00FB4B  80                 	db	128
   956   00FB4C  80                 	db	128
   957   00FB4D  FD                 	db	253
   958   00FB4E  7D                 	db	125
   959   00FB4F  00                 	db	0
   960   00FB50  00                 	db	0
   961   00FB51  41                 	db	65
   962   00FB52  7F                 	db	127
   963   00FB53  7F                 	db	127
   964   00FB54  10                 	db	16
   965   00FB55  38                 	db	56
   966   00FB56  6C                 	db	108
   967   00FB57  44                 	db	68
   968   00FB58  00                 	db	0
   969   00FB59  00                 	db	0
   970   00FB5A  41                 	db	65
   971   00FB5B  7F                 	db	127
   972   00FB5C  7F                 	db	127
   973   00FB5D  40                 	db	64
   974   00FB5E  00                 	db	0
   975   00FB5F  00                 	db	0
   976   00FB60  00                 	db	0
   977   00FB61  7C                 	db	124
   978   00FB62  7C                 	db	124
   979   00FB63  18                 	db	24
   980   00FB64  38                 	db	56
   981   00FB65  1C                 	db	28
   982   00FB66  7C                 	db	124
   983   00FB67  78                 	db	120
   984   00FB68  00                 	db	0
   985   00FB69  7C                 	db	124
   986   00FB6A  7C                 	db	124
   987   00FB6B  04                 	db	4
   988   00FB6C  04                 	db	4
   989   00FB6D  7C                 	db	124
   990   00FB6E  78                 	db	120
   991   00FB6F  00                 	db	0
   992   00FB70  00                 	db	0
   993   00FB71  38                 	db	56
   994   00FB72  7C                 	db	124
   995   00FB73  44                 	db	68
   996   00FB74  44                 	db	68
   997   00FB75  7C                 	db	124
   998   00FB76  38                 	db	56
   999   00FB77  00                 	db	0
  1000   00FB78  00                 	db	0
  1001   00FB79  84                 	db	132
  1002   00FB7A  FC                 	db	252
  1003   00FB7B  F8                 	db	248
  1004   00FB7C  A4                 	db	164
  1005   00FB7D  24                 	db	36
  1006   00FB7E  3C                 	db	60
  1007   00FB7F  18                 	db	24
  1008   00FB80  00                 	db	0
  1009   00FB81  18                 	db	24
  1010   00FB82  3C                 	db	60
  1011   00FB83  24                 	db	36
  1012   00FB84  A4                 	db	164
  1013   00FB85  F8                 	db	248
  1014   00FB86  FC                 	db	252
  1015   00FB87  84                 	db	132
  1016   00FB88  00                 	db	0
  1017   00FB89  44                 	db	68
  1018   00FB8A  7C                 	db	124
  1019   00FB8B  78                 	db	120
  1020   00FB8C  4C                 	db	76
  1021   00FB8D  04                 	db	4
  1022   00FB8E  1C                 	db	28
  1023   00FB8F  18                 	db	24
  1024   00FB90  00                 	db	0
  1025   00FB91  48                 	db	72
  1026   00FB92  5C                 	db	92
  1027   00FB93  54                 	db	84
  1028   00FB94  54                 	db	84
  1029   00FB95  74                 	db	116
  1030   00FB96  24                 	db	36
  1031   00FB97  00                 	db	0
  1032   00FB98  00                 	db	0
  1033   00FB99  00                 	db	0
  1034   00FB9A  04                 	db	4
  1035   00FB9B  3E                 	db	62
  1036   00FB9C  7F                 	db	127
  1037   00FB9D  44                 	db	68
  1038   00FB9E  24                 	db	36
  1039   00FB9F  00                 	db	0
  1040   00FBA0  00                 	db	0
  1041   00FBA1  3C                 	db	60
  1042   00FBA2  7C                 	db	124
  1043   00FBA3  40                 	db	64
  1044   00FBA4  40                 	db	64
  1045   00FBA5  3C                 	db	60
  1046   00FBA6  7C                 	db	124
  1047   00FBA7  40                 	db	64
  1048   00FBA8  00                 	db	0
  1049   00FBA9  1C                 	db	28
  1050   00FBAA  3C                 	db	60
  1051   00FBAB  60                 	db	96
  1052   00FBAC  60                 	db	96
  1053   00FBAD  3C                 	db	60
  1054   00FBAE  1C                 	db	28
  1055   00FBAF  00                 	db	0
  1056   00FBB0  00                 	db	0
  1057   00FBB1  3C                 	db	60
  1058   00FBB2  7C                 	db	124
  1059   00FBB3  70                 	db	112
  1060   00FBB4  38                 	db	56
  1061   00FBB5  70                 	db	112
  1062   00FBB6  7C                 	db	124
  1063   00FBB7  3C                 	db	60
  1064   00FBB8  00                 	db	0
  1065   00FBB9  44                 	db	68
  1066   00FBBA  6C                 	db	108
  1067   00FBBB  38                 	db	56
  1068   00FBBC  10                 	db	16
  1069   00FBBD  38                 	db	56
  1070   00FBBE  6C                 	db	108
  1071   00FBBF  44                 	db	68
  1072   00FBC0  00                 	db	0
  1073   00FBC1  9C                 	db	156
  1074   00FBC2  BC                 	db	188
  1075   00FBC3  A0                 	db	160
  1076   00FBC4  A0                 	db	160
  1077   00FBC5  FC                 	db	252
  1078   00FBC6  7C                 	db	124
  1079   00FBC7  00                 	db	0
  1080   00FBC8  00                 	db	0
  1081   00FBC9  4C                 	db	76
  1082   00FBCA  64                 	db	100
  1083   00FBCB  74                 	db	116
  1084   00FBCC  5C                 	db	92
  1085   00FBCD  4C                 	db	76
  1086   00FBCE  64                 	db	100
  1087   00FBCF  00                 	db	0
  1088   00FBD0  00                 	db	0
  1089   00FBD1  08                 	db	8
  1090   00FBD2  08                 	db	8
  1091   00FBD3  3E                 	db	62
  1092   00FBD4  77                 	db	119
  1093   00FBD5  41                 	db	65
  1094   00FBD6  41                 	db	65
  1095   00FBD7  00                 	db	0
  1096   00FBD8  00                 	db	0
  1097   00FBD9  00                 	db	0
  1098   00FBDA  00                 	db	0
  1099   00FBDB  00                 	db	0
  1100   00FBDC  77                 	db	119
  1101   00FBDD  77                 	db	119
  1102   00FBDE  00                 	db	0
  1103   00FBDF  00                 	db	0
  1104   00FBE0  00                 	db	0
  1105   00FBE1  41                 	db	65
  1106   00FBE2  41                 	db	65
  1107   00FBE3  77                 	db	119
  1108   00FBE4  3E                 	db	62
  1109   00FBE5  08                 	db	8
  1110   00FBE6  08                 	db	8
  1111   00FBE7  00                 	db	0
  1112   00FBE8  00                 	db	0
  1113   00FBE9  02                 	db	2
  1114   00FBEA  03                 	db	3
  1115   00FBEB  01                 	db	1
  1116   00FBEC  03                 	db	3
  1117   00FBED  02                 	db	2
  1118   00FBEE  03                 	db	3
  1119   00FBEF  01                 	db	1
  1120   00FBF0  00                 	db	0
  1121   00FBF1  70                 	db	112
  1122   00FBF2  78                 	db	120
  1123   00FBF3  4C                 	db	76
  1124   00FBF4  46                 	db	70
  1125   00FBF5  4C                 	db	76
  1126   00FBF6  78                 	db	120
  1127   00FBF7  70                 	db	112
  1128   00FBF8  00                 	db	0
  1129   00FBF9  0E                 	db	14
  1130   00FBFA  9F                 	db	159
  1131   00FBFB  91                 	db	145
  1132   00FBFC  B1                 	db	177
  1133   00FBFD  FB                 	db	251
  1134   00FBFE  4A                 	db	74
  1135   00FBFF  00                 	db	0
  1136   00FC00  00                 	db	0
  1137   00FC01  3A                 	db	58
  1138   00FC02  7A                 	db	122
  1139   00FC03  40                 	db	64
  1140   00FC04  40                 	db	64
  1141   00FC05  7A                 	db	122
  1142   00FC06  7A                 	db	122
  1143   00FC07  40                 	db	64
  1144   00FC08  00                 	db	0
  1145   00FC09  38                 	db	56
  1146   00FC0A  7C                 	db	124
  1147   00FC0B  54                 	db	84
  1148   00FC0C  55                 	db	85
  1149   00FC0D  5D                 	db	93
  1150   00FC0E  19                 	db	25
  1151   00FC0F  00                 	db	0
  1152   00FC10  00                 	db	0
  1153   00FC11  02                 	db	2
  1154   00FC12  23                 	db	35
  1155   00FC13  75                 	db	117
  1156   00FC14  55                 	db	85
  1157   00FC15  55                 	db	85
  1158   00FC16  7D                 	db	125
  1159   00FC17  7B                 	db	123
  1160   00FC18  42                 	db	66
  1161   00FC19  21                 	db	33
  1162   00FC1A  75                 	db	117
  1163   00FC1B  54                 	db	84
  1164   00FC1C  54                 	db	84
  1165   00FC1D  7D                 	db	125
  1166   00FC1E  79                 	db	121
  1167   00FC1F  40                 	db	64
  1168   00FC20  00                 	db	0
  1169   00FC21  21                 	db	33
  1170   00FC22  75                 	db	117
  1171   00FC23  55                 	db	85
  1172   00FC24  54                 	db	84
  1173   00FC25  7C                 	db	124
  1174   00FC26  78                 	db	120
  1175   00FC27  40                 	db	64
  1176   00FC28  00                 	db	0
  1177   00FC29  20                 	db	32
  1178   00FC2A  74                 	db	116
  1179   00FC2B  57                 	db	87
  1180   00FC2C  57                 	db	87
  1181   00FC2D  7C                 	db	124
  1182   00FC2E  78                 	db	120
  1183   00FC2F  40                 	db	64
  1184   00FC30  00                 	db	0
  1185   00FC31  18                 	db	24
  1186   00FC32  3C                 	db	60
  1187   00FC33  A4                 	db	164
  1188   00FC34  A4                 	db	164
  1189   00FC35  E4                 	db	228
  1190   00FC36  40                 	db	64
  1191   00FC37  00                 	db	0
  1192   00FC38  00                 	db	0
  1193   00FC39  02                 	db	2
  1194   00FC3A  3B                 	db	59
  1195   00FC3B  7D                 	db	125
  1196   00FC3C  55                 	db	85
  1197   00FC3D  55                 	db	85
  1198   00FC3E  5D                 	db	93
  1199   00FC3F  1B                 	db	27
  1200   00FC40  02                 	db	2
  1201   00FC41  39                 	db	57
  1202   00FC42  7D                 	db	125
  1203   00FC43  54                 	db	84
  1204   00FC44  54                 	db	84
  1205   00FC45  5D                 	db	93
  1206   00FC46  19                 	db	25
  1207   00FC47  00                 	db	0
  1208   00FC48  00                 	db	0
  1209   00FC49  39                 	db	57
  1210   00FC4A  7D                 	db	125
  1211   00FC4B  55                 	db	85
  1212   00FC4C  54                 	db	84
  1213   00FC4D  5C                 	db	92
  1214   00FC4E  18                 	db	24
  1215   00FC4F  00                 	db	0
  1216   00FC50  00                 	db	0
  1217   00FC51  01                 	db	1
  1218   00FC52  45                 	db	69
  1219   00FC53  7C                 	db	124
  1220   00FC54  7C                 	db	124
  1221   00FC55  41                 	db	65
  1222   00FC56  01                 	db	1
  1223   00FC57  00                 	db	0
  1224   00FC58  00                 	db	0
  1225   00FC59  02                 	db	2
  1226   00FC5A  03                 	db	3
  1227   00FC5B  45                 	db	69
  1228   00FC5C  7D                 	db	125
  1229   00FC5D  7D                 	db	125
  1230   00FC5E  43                 	db	67
  1231   00FC5F  02                 	db	2
  1232   00FC60  00                 	db	0
  1233   00FC61  01                 	db	1
  1234   00FC62  45                 	db	69
  1235   00FC63  7D                 	db	125
  1236   00FC64  7C                 	db	124
  1237   00FC65  40                 	db	64
  1238   00FC66  00                 	db	0
  1239   00FC67  00                 	db	0
  1240   00FC68  00                 	db	0
  1241   00FC69  79                 	db	121
  1242   00FC6A  7D                 	db	125
  1243   00FC6B  16                 	db	22
  1244   00FC6C  12                 	db	18
  1245   00FC6D  16                 	db	22
  1246   00FC6E  7D                 	db	125
  1247   00FC6F  79                 	db	121
  1248   00FC70  00                 	db	0
  1249   00FC71  70                 	db	112
  1250   00FC72  78                 	db	120
  1251   00FC73  2B                 	db	43
  1252   00FC74  2B                 	db	43
  1253   00FC75  78                 	db	120
  1254   00FC76  70                 	db	112
  1255   00FC77  00                 	db	0
  1256   00FC78  00                 	db	0
  1257   00FC79  44                 	db	68
  1258   00FC7A  7C                 	db	124
  1259   00FC7B  7C                 	db	124
  1260   00FC7C  55                 	db	85
  1261   00FC7D  55                 	db	85
  1262   00FC7E  45                 	db	69
  1263   00FC7F  00                 	db	0
  1264   00FC80  00                 	db	0
  1265   00FC81  20                 	db	32
  1266   00FC82  74                 	db	116
  1267   00FC83  54                 	db	84
  1268   00FC84  54                 	db	84
  1269   00FC85  7C                 	db	124
  1270   00FC86  7C                 	db	124
  1271   00FC87  54                 	db	84
  1272   00FC88  54                 	db	84
  1273   00FC89  7C                 	db	124
  1274   00FC8A  7E                 	db	126
  1275   00FC8B  0B                 	db	11
  1276   00FC8C  09                 	db	9
  1277   00FC8D  7F                 	db	127
  1278   00FC8E  7F                 	db	127
  1279   00FC8F  49                 	db	73
  1280   00FC90  00                 	db	0
  1281   00FC91  32                 	db	50
  1282   00FC92  7B                 	db	123
  1283   00FC93  49                 	db	73
  1284   00FC94  49                 	db	73
  1285   00FC95  7B                 	db	123
  1286   00FC96  32                 	db	50
  1287   00FC97  00                 	db	0
  1288   00FC98  00                 	db	0
  1289   00FC99  32                 	db	50
  1290   00FC9A  7A                 	db	122
  1291   00FC9B  48                 	db	72
  1292   00FC9C  48                 	db	72
  1293   00FC9D  7A                 	db	122
  1294   00FC9E  32                 	db	50
  1295   00FC9F  00                 	db	0
  1296   00FCA0  00                 	db	0
  1297   00FCA1  32                 	db	50
  1298   00FCA2  7A                 	db	122
  1299   00FCA3  4A                 	db	74
  1300   00FCA4  48                 	db	72
  1301   00FCA5  78                 	db	120
  1302   00FCA6  30                 	db	48
  1303   00FCA7  00                 	db	0
  1304   00FCA8  00                 	db	0
  1305   00FCA9  3A                 	db	58
  1306   00FCAA  7B                 	db	123
  1307   00FCAB  41                 	db	65
  1308   00FCAC  41                 	db	65
  1309   00FCAD  7B                 	db	123
  1310   00FCAE  7A                 	db	122
  1311   00FCAF  40                 	db	64
  1312   00FCB0  00                 	db	0
  1313   00FCB1  3A                 	db	58
  1314   00FCB2  7A                 	db	122
  1315   00FCB3  42                 	db	66
  1316   00FCB4  40                 	db	64
  1317   00FCB5  78                 	db	120
  1318   00FCB6  78                 	db	120
  1319   00FCB7  40                 	db	64
  1320   00FCB8  00                 	db	0
  1321   00FCB9  9A                 	db	154
  1322   00FCBA  BA                 	db	186
  1323   00FCBB  A0                 	db	160
  1324   00FCBC  A0                 	db	160
  1325   00FCBD  FA                 	db	250
  1326   00FCBE  7A                 	db	122
  1327   00FCBF  00                 	db	0
  1328   00FCC0  00                 	db	0
  1329   00FCC1  01                 	db	1
  1330   00FCC2  19                 	db	25
  1331   00FCC3  3C                 	db	60
  1332   00FCC4  66                 	db	102
  1333   00FCC5  66                 	db	102
  1334   00FCC6  3C                 	db	60
  1335   00FCC7  19                 	db	25
  1336   00FCC8  01                 	db	1
  1337   00FCC9  3D                 	db	61
  1338   00FCCA  7D                 	db	125
  1339   00FCCB  40                 	db	64
  1340   00FCCC  40                 	db	64
  1341   00FCCD  7D                 	db	125
  1342   00FCCE  3D                 	db	61
  1343   00FCCF  00                 	db	0
  1344   00FCD0  00                 	db	0
  1345   00FCD1  18                 	db	24
  1346   00FCD2  3C                 	db	60
  1347   00FCD3  24                 	db	36
  1348   00FCD4  E7                 	db	231
  1349   00FCD5  E7                 	db	231
  1350   00FCD6  24                 	db	36
  1351   00FCD7  24                 	db	36
  1352   00FCD8  00                 	db	0
  1353   00FCD9  68                 	db	104
  1354   00FCDA  7E                 	db	126
  1355   00FCDB  7F                 	db	127
  1356   00FCDC  49                 	db	73
  1357   00FCDD  43                 	db	67
  1358   00FCDE  66                 	db	102
  1359   00FCDF  20                 	db	32
  1360   00FCE0  00                 	db	0
  1361   00FCE1  2B                 	db	43
  1362   00FCE2  2F                 	db	47
  1363   00FCE3  FC                 	db	252
  1364   00FCE4  FC                 	db	252
  1365   00FCE5  2F                 	db	47
  1366   00FCE6  2B                 	db	43
  1367   00FCE7  00                 	db	0
  1368   00FCE8  00                 	db	0
  1369   00FCE9  FF                 	db	255
  1370   00FCEA  FF                 	db	255
  1371   00FCEB  09                 	db	9
  1372   00FCEC  09                 	db	9
  1373   00FCED  2F                 	db	47
  1374   00FCEE  F6                 	db	246
  1375   00FCEF  F8                 	db	248
  1376   00FCF0  A0                 	db	160
  1377   00FCF1  40                 	db	64
  1378   00FCF2  C0                 	db	192
  1379   00FCF3  88                 	db	136
  1380   00FCF4  FE                 	db	254
  1381   00FCF5  7F                 	db	127
  1382   00FCF6  09                 	db	9
  1383   00FCF7  03                 	db	3
  1384   00FCF8  02                 	db	2
  1385   00FCF9  20                 	db	32
  1386   00FCFA  74                 	db	116
  1387   00FCFB  54                 	db	84
  1388   00FCFC  55                 	db	85
  1389   00FCFD  7D                 	db	125
  1390   00FCFE  79                 	db	121
  1391   00FCFF  40                 	db	64
  1392   00FD00  00                 	db	0
  1393   00FD01  00                 	db	0
  1394   00FD02  44                 	db	68
  1395   00FD03  7D                 	db	125
  1396   00FD04  7D                 	db	125
  1397   00FD05  41                 	db	65
  1398   00FD06  00                 	db	0
  1399   00FD07  00                 	db	0
  1400   00FD08  00                 	db	0
  1401   00FD09  30                 	db	48
  1402   00FD0A  78                 	db	120
  1403   00FD0B  48                 	db	72
  1404   00FD0C  4A                 	db	74
  1405   00FD0D  7A                 	db	122
  1406   00FD0E  32                 	db	50
  1407   00FD0F  00                 	db	0
  1408   00FD10  00                 	db	0
  1409   00FD11  38                 	db	56
  1410   00FD12  78                 	db	120
  1411   00FD13  40                 	db	64
  1412   00FD14  42                 	db	66
  1413   00FD15  7A                 	db	122
  1414   00FD16  7A                 	db	122
  1415   00FD17  40                 	db	64
  1416   00FD18  00                 	db	0
  1417   00FD19  7A                 	db	122
  1418   00FD1A  7A                 	db	122
  1419   00FD1B  0A                 	db	10
  1420   00FD1C  0A                 	db	10
  1421   00FD1D  7A                 	db	122
  1422   00FD1E  70                 	db	112
  1423   00FD1F  00                 	db	0
  1424   00FD20  00                 	db	0
  1425   00FD21  7D                 	db	125
  1426   00FD22  7D                 	db	125
  1427   00FD23  19                 	db	25
  1428   00FD24  31                 	db	49
  1429   00FD25  7D                 	db	125
  1430   00FD26  7D                 	db	125
  1431   00FD27  00                 	db	0
  1432   00FD28  00                 	db	0
  1433   00FD29  00                 	db	0
  1434   00FD2A  26                 	db	38
  1435   00FD2B  2F                 	db	47
  1436   00FD2C  29                 	db	41
  1437   00FD2D  2F                 	db	47
  1438   00FD2E  2F                 	db	47
  1439   00FD2F  28                 	db	40
  1440   00FD30  00                 	db	0
  1441   00FD31  00                 	db	0
  1442   00FD32  26                 	db	38
  1443   00FD33  2F                 	db	47
  1444   00FD34  29                 	db	41
  1445   00FD35  2F                 	db	47
  1446   00FD36  26                 	db	38
  1447   00FD37  00                 	db	0
  1448   00FD38  00                 	db	0
  1449   00FD39  30                 	db	48
  1450   00FD3A  78                 	db	120
  1451   00FD3B  4D                 	db	77
  1452   00FD3C  45                 	db	69
  1453   00FD3D  60                 	db	96
  1454   00FD3E  20                 	db	32
  1455   00FD3F  00                 	db	0
  1456   00FD40  00                 	db	0
  1457   00FD41  38                 	db	56
  1458   00FD42  38                 	db	56
  1459   00FD43  08                 	db	8
  1460   00FD44  08                 	db	8
  1461   00FD45  08                 	db	8
  1462   00FD46  08                 	db	8
  1463   00FD47  00                 	db	0
  1464   00FD48  00                 	db	0
  1465   00FD49  08                 	db	8
  1466   00FD4A  08                 	db	8
  1467   00FD4B  08                 	db	8
  1468   00FD4C  08                 	db	8
  1469   00FD4D  38                 	db	56
  1470   00FD4E  38                 	db	56
  1471   00FD4F  00                 	db	0
  1472   00FD50  00                 	db	0
  1473   00FD51  4F                 	db	79
  1474   00FD52  6F                 	db	111
  1475   00FD53  30                 	db	48
  1476   00FD54  18                 	db	24
  1477   00FD55  CC                 	db	204
  1478   00FD56  EE                 	db	238
  1479   00FD57  BB                 	db	187
  1480   00FD58  91                 	db	145
  1481   00FD59  4F                 	db	79
  1482   00FD5A  6F                 	db	111
  1483   00FD5B  30                 	db	48
  1484   00FD5C  18                 	db	24
  1485   00FD5D  6C                 	db	108
  1486   00FD5E  76                 	db	118
  1487   00FD5F  FB                 	db	251
  1488   00FD60  F9                 	db	249
  1489   00FD61  00                 	db	0
  1490   00FD62  00                 	db	0
  1491   00FD63  00                 	db	0
  1492   00FD64  7B                 	db	123
  1493   00FD65  7B                 	db	123
  1494   00FD66  00                 	db	0
  1495   00FD67  00                 	db	0
  1496   00FD68  00                 	db	0
  1497   00FD69  08                 	db	8
  1498   00FD6A  1C                 	db	28
  1499   00FD6B  36                 	db	54
  1500   00FD6C  22                 	db	34
  1501   00FD6D  08                 	db	8
  1502   00FD6E  1C                 	db	28
  1503   00FD6F  36                 	db	54
  1504   00FD70  22                 	db	34
  1505   00FD71  22                 	db	34
  1506   00FD72  36                 	db	54
  1507   00FD73  1C                 	db	28
  1508   00FD74  08                 	db	8
  1509   00FD75  22                 	db	34
  1510   00FD76  36                 	db	54
  1511   00FD77  1C                 	db	28
  1512   00FD78  08                 	db	8
  1513   00FD79  AA                 	db	170
  1514   00FD7A  00                 	db	0
  1515   00FD7B  55                 	db	85
  1516   00FD7C  00                 	db	0
  1517   00FD7D  AA                 	db	170
  1518   00FD7E  00                 	db	0
  1519   00FD7F  55                 	db	85
  1520   00FD80  00                 	db	0
  1521   00FD81  AA                 	db	170
  1522   00FD82  55                 	db	85
  1523   00FD83  AA                 	db	170
  1524   00FD84  55                 	db	85
  1525   00FD85  AA                 	db	170
  1526   00FD86  55                 	db	85
  1527   00FD87  AA                 	db	170
  1528   00FD88  55                 	db	85
  1529   00FD89  DD                 	db	221
  1530   00FD8A  FF                 	db	255
  1531   00FD8B  AA                 	db	170
  1532   00FD8C  77                 	db	119
  1533   00FD8D  DD                 	db	221
  1534   00FD8E  AA                 	db	170
  1535   00FD8F  FF                 	db	255
  1536   00FD90  77                 	db	119
  1537   00FD91  00                 	db	0
  1538   00FD92  00                 	db	0
  1539   00FD93  00                 	db	0
  1540   00FD94  FF                 	db	255
  1541   00FD95  FF                 	db	255
  1542   00FD96  00                 	db	0
  1543   00FD97  00                 	db	0
  1544   00FD98  00                 	db	0
  1545   00FD99  10                 	db	16
  1546   00FD9A  10                 	db	16
  1547   00FD9B  10                 	db	16
  1548   00FD9C  FF                 	db	255
  1549   00FD9D  FF                 	db	255
  1550   00FD9E  00                 	db	0
  1551   00FD9F  00                 	db	0
  1552   00FDA0  00                 	db	0
  1553   00FDA1  14                 	db	20
  1554   00FDA2  14                 	db	20
  1555   00FDA3  14                 	db	20
  1556   00FDA4  FF                 	db	255
  1557   00FDA5  FF                 	db	255
  1558   00FDA6  00                 	db	0
  1559   00FDA7  00                 	db	0
  1560   00FDA8  00                 	db	0
  1561   00FDA9  10                 	db	16
  1562   00FDAA  10                 	db	16
  1563   00FDAB  FF                 	db	255
  1564   00FDAC  FF                 	db	255
  1565   00FDAD  00                 	db	0
  1566   00FDAE  FF                 	db	255
  1567   00FDAF  FF                 	db	255
  1568   00FDB0  00                 	db	0
  1569   00FDB1  10                 	db	16
  1570   00FDB2  10                 	db	16
  1571   00FDB3  F0                 	db	240
  1572   00FDB4  F0                 	db	240
  1573   00FDB5  10                 	db	16
  1574   00FDB6  F0                 	db	240
  1575   00FDB7  F0                 	db	240
  1576   00FDB8  00                 	db	0
  1577   00FDB9  14                 	db	20
  1578   00FDBA  14                 	db	20
  1579   00FDBB  14                 	db	20
  1580   00FDBC  FC                 	db	252
  1581   00FDBD  FC                 	db	252
  1582   00FDBE  00                 	db	0
  1583   00FDBF  00                 	db	0
  1584   00FDC0  00                 	db	0
  1585   00FDC1  14                 	db	20
  1586   00FDC2  14                 	db	20
  1587   00FDC3  F7                 	db	247
  1588   00FDC4  F7                 	db	247
  1589   00FDC5  00                 	db	0
  1590   00FDC6  FF                 	db	255
  1591   00FDC7  FF                 	db	255
  1592   00FDC8  00                 	db	0
  1593   00FDC9  00                 	db	0
  1594   00FDCA  00                 	db	0
  1595   00FDCB  FF                 	db	255
  1596   00FDCC  FF                 	db	255
  1597   00FDCD  00                 	db	0
  1598   00FDCE  FF                 	db	255
  1599   00FDCF  FF                 	db	255
  1600   00FDD0  00                 	db	0
  1601   00FDD1  14                 	db	20
  1602   00FDD2  14                 	db	20
  1603   00FDD3  F4                 	db	244
  1604   00FDD4  F4                 	db	244
  1605   00FDD5  04                 	db	4
  1606   00FDD6  FC                 	db	252
  1607   00FDD7  FC                 	db	252
  1608   00FDD8  00                 	db	0
  1609   00FDD9  14                 	db	20
  1610   00FDDA  14                 	db	20
  1611   00FDDB  17                 	db	23
  1612   00FDDC  17                 	db	23
  1613   00FDDD  10                 	db	16
  1614   00FDDE  1F                 	db	31
  1615   00FDDF  1F                 	db	31
  1616   00FDE0  00                 	db	0
  1617   00FDE1  10                 	db	16
  1618   00FDE2  10                 	db	16
  1619   00FDE3  1F                 	db	31
  1620   00FDE4  1F                 	db	31
  1621   00FDE5  10                 	db	16
  1622   00FDE6  1F                 	db	31
  1623   00FDE7  1F                 	db	31
  1624   00FDE8  00                 	db	0
  1625   00FDE9  14                 	db	20
  1626   00FDEA  14                 	db	20
  1627   00FDEB  14                 	db	20
  1628   00FDEC  1F                 	db	31
  1629   00FDED  1F                 	db	31
  1630   00FDEE  00                 	db	0
  1631   00FDEF  00                 	db	0
  1632   00FDF0  00                 	db	0
  1633   00FDF1  10                 	db	16
  1634   00FDF2  10                 	db	16
  1635   00FDF3  10                 	db	16
  1636   00FDF4  F0                 	db	240
  1637   00FDF5  F0                 	db	240
  1638   00FDF6  00                 	db	0
  1639   00FDF7  00                 	db	0
  1640   00FDF8  00                 	db	0
  1641   00FDF9  00                 	db	0
  1642   00FDFA  00                 	db	0
  1643   00FDFB  00                 	db	0
  1644   00FDFC  1F                 	db	31
  1645   00FDFD  1F                 	db	31
  1646   00FDFE  10                 	db	16
  1647   00FDFF  10                 	db	16
  1648   00FE00  10                 	db	16
  1649   00FE01  10                 	db	16
  1650   00FE02  10                 	db	16
  1651   00FE03  10                 	db	16
  1652   00FE04  1F                 	db	31
  1653   00FE05  1F                 	db	31
  1654   00FE06  10                 	db	16
  1655   00FE07  10                 	db	16
  1656   00FE08  10                 	db	16
  1657   00FE09  10                 	db	16
  1658   00FE0A  10                 	db	16
  1659   00FE0B  10                 	db	16
  1660   00FE0C  F0                 	db	240
  1661   00FE0D  F0                 	db	240
  1662   00FE0E  10                 	db	16
  1663   00FE0F  10                 	db	16
  1664   00FE10  10                 	db	16
  1665   00FE11  00                 	db	0
  1666   00FE12  00                 	db	0
  1667   00FE13  00                 	db	0
  1668   00FE14  FF                 	db	255
  1669   00FE15  FF                 	db	255
  1670   00FE16  10                 	db	16
  1671   00FE17  10                 	db	16
  1672   00FE18  10                 	db	16
  1673   00FE19  10                 	db	16
  1674   00FE1A  10                 	db	16
  1675   00FE1B  10                 	db	16
  1676   00FE1C  10                 	db	16
  1677   00FE1D  10                 	db	16
  1678   00FE1E  10                 	db	16
  1679   00FE1F  10                 	db	16
  1680   00FE20  10                 	db	16
  1681   00FE21  10                 	db	16
  1682   00FE22  10                 	db	16
  1683   00FE23  10                 	db	16
  1684   00FE24  FF                 	db	255
  1685   00FE25  FF                 	db	255
  1686   00FE26  10                 	db	16
  1687   00FE27  10                 	db	16
  1688   00FE28  10                 	db	16
  1689   00FE29  00                 	db	0
  1690   00FE2A  00                 	db	0
  1691   00FE2B  00                 	db	0
  1692   00FE2C  FF                 	db	255
  1693   00FE2D  FF                 	db	255
  1694   00FE2E  14                 	db	20
  1695   00FE2F  14                 	db	20
  1696   00FE30  14                 	db	20
  1697   00FE31  00                 	db	0
  1698   00FE32  00                 	db	0
  1699   00FE33  FF                 	db	255
  1700   00FE34  FF                 	db	255
  1701   00FE35  00                 	db	0
  1702   00FE36  FF                 	db	255
  1703   00FE37  FF                 	db	255
  1704   00FE38  10                 	db	16
  1705   00FE39  00                 	db	0
  1706   00FE3A  00                 	db	0
  1707   00FE3B  1F                 	db	31
  1708   00FE3C  1F                 	db	31
  1709   00FE3D  10                 	db	16
  1710   00FE3E  17                 	db	23
  1711   00FE3F  17                 	db	23
  1712   00FE40  14                 	db	20
  1713   00FE41  00                 	db	0
  1714   00FE42  00                 	db	0
  1715   00FE43  FC                 	db	252
  1716   00FE44  FC                 	db	252
  1717   00FE45  04                 	db	4
  1718   00FE46  F4                 	db	244
  1719   00FE47  F4                 	db	244
  1720   00FE48  14                 	db	20
  1721   00FE49  14                 	db	20
  1722   00FE4A  14                 	db	20
  1723   00FE4B  17                 	db	23
  1724   00FE4C  17                 	db	23
  1725   00FE4D  10                 	db	16
  1726   00FE4E  17                 	db	23
  1727   00FE4F  17                 	db	23
  1728   00FE50  14                 	db	20
  1729   00FE51  14                 	db	20
  1730   00FE52  14                 	db	20
  1731   00FE53  F4                 	db	244
  1732   00FE54  F4                 	db	244
  1733   00FE55  04                 	db	4
  1734   00FE56  F4                 	db	244
  1735   00FE57  F4                 	db	244
  1736   00FE58  14                 	db	20
  1737   00FE59  00                 	db	0
  1738   00FE5A  00                 	db	0
  1739   00FE5B  FF                 	db	255
  1740   00FE5C  FF                 	db	255
  1741   00FE5D  00                 	db	0
  1742   00FE5E  F7                 	db	247
  1743   00FE5F  F7                 	db	247
  1744   00FE60  14                 	db	20
  1745   00FE61  14                 	db	20
  1746   00FE62  14                 	db	20
  1747   00FE63  14                 	db	20
  1748   00FE64  14                 	db	20
  1749   00FE65  14                 	db	20
  1750   00FE66  14                 	db	20
  1751   00FE67  14                 	db	20
  1752   00FE68  14                 	db	20
  1753   00FE69  14                 	db	20
  1754   00FE6A  14                 	db	20
  1755   00FE6B  F7                 	db	247
  1756   00FE6C  F7                 	db	247
  1757   00FE6D  00                 	db	0
  1758   00FE6E  F7                 	db	247
  1759   00FE6F  F7                 	db	247
  1760   00FE70  14                 	db	20
  1761   00FE71  14                 	db	20
  1762   00FE72  14                 	db	20
  1763   00FE73  14                 	db	20
  1764   00FE74  17                 	db	23
  1765   00FE75  17                 	db	23
  1766   00FE76  14                 	db	20
  1767   00FE77  14                 	db	20
  1768   00FE78  14                 	db	20
  1769   00FE79  10                 	db	16
  1770   00FE7A  10                 	db	16
  1771   00FE7B  1F                 	db	31
  1772   00FE7C  1F                 	db	31
  1773   00FE7D  10                 	db	16
  1774   00FE7E  1F                 	db	31
  1775   00FE7F  1F                 	db	31
  1776   00FE80  10                 	db	16
  1777   00FE81  14                 	db	20
  1778   00FE82  14                 	db	20
  1779   00FE83  14                 	db	20
  1780   00FE84  F4                 	db	244
  1781   00FE85  F4                 	db	244
  1782   00FE86  14                 	db	20
  1783   00FE87  14                 	db	20
  1784   00FE88  14                 	db	20
  1785   00FE89  10                 	db	16
  1786   00FE8A  10                 	db	16
  1787   00FE8B  F0                 	db	240
  1788   00FE8C  F0                 	db	240
  1789   00FE8D  10                 	db	16
  1790   00FE8E  F0                 	db	240
  1791   00FE8F  F0                 	db	240
  1792   00FE90  10                 	db	16
  1793   00FE91  00                 	db	0
  1794   00FE92  00                 	db	0
  1795   00FE93  1F                 	db	31
  1796   00FE94  1F                 	db	31
  1797   00FE95  10                 	db	16
  1798   00FE96  1F                 	db	31
  1799   00FE97  1F                 	db	31
  1800   00FE98  10                 	db	16
  1801   00FE99  00                 	db	0
  1802   00FE9A  00                 	db	0
  1803   00FE9B  00                 	db	0
  1804   00FE9C  1F                 	db	31
  1805   00FE9D  1F                 	db	31
  1806   00FE9E  14                 	db	20
  1807   00FE9F  14                 	db	20
  1808   00FEA0  14                 	db	20
  1809   00FEA1  00                 	db	0
  1810   00FEA2  00                 	db	0
  1811   00FEA3  00                 	db	0
  1812   00FEA4  FC                 	db	252
  1813   00FEA5  FC                 	db	252
  1814   00FEA6  14                 	db	20
  1815   00FEA7  14                 	db	20
  1816   00FEA8  14                 	db	20
  1817   00FEA9  00                 	db	0
  1818   00FEAA  00                 	db	0
  1819   00FEAB  F0                 	db	240
  1820   00FEAC  F0                 	db	240
  1821   00FEAD  10                 	db	16
  1822   00FEAE  F0                 	db	240
  1823   00FEAF  F0                 	db	240
  1824   00FEB0  10                 	db	16
  1825   00FEB1  10                 	db	16
  1826   00FEB2  10                 	db	16
  1827   00FEB3  FF                 	db	255
  1828   00FEB4  FF                 	db	255
  1829   00FEB5  10                 	db	16
  1830   00FEB6  FF                 	db	255
  1831   00FEB7  FF                 	db	255
  1832   00FEB8  10                 	db	16
  1833   00FEB9  14                 	db	20
  1834   00FEBA  14                 	db	20
  1835   00FEBB  14                 	db	20
  1836   00FEBC  FF                 	db	255
  1837   00FEBD  FF                 	db	255
  1838   00FEBE  14                 	db	20
  1839   00FEBF  14                 	db	20
  1840   00FEC0  14                 	db	20
  1841   00FEC1  10                 	db	16
  1842   00FEC2  10                 	db	16
  1843   00FEC3  10                 	db	16
  1844   00FEC4  1F                 	db	31
  1845   00FEC5  1F                 	db	31
  1846   00FEC6  00                 	db	0
  1847   00FEC7  00                 	db	0
  1848   00FEC8  00                 	db	0
  1849   00FEC9  00                 	db	0
  1850   00FECA  00                 	db	0
  1851   00FECB  00                 	db	0
  1852   00FECC  F0                 	db	240
  1853   00FECD  F0                 	db	240
  1854   00FECE  10                 	db	16
  1855   00FECF  10                 	db	16
  1856   00FED0  10                 	db	16
  1857   00FED1  FF                 	db	255
  1858   00FED2  FF                 	db	255
  1859   00FED3  FF                 	db	255
  1860   00FED4  FF                 	db	255
  1861   00FED5  FF                 	db	255
  1862   00FED6  FF                 	db	255
  1863   00FED7  FF                 	db	255
  1864   00FED8  FF                 	db	255
  1865   00FED9  F0                 	db	240
  1866   00FEDA  F0                 	db	240
  1867   00FEDB  F0                 	db	240
  1868   00FEDC  F0                 	db	240
  1869   00FEDD  F0                 	db	240
  1870   00FEDE  F0                 	db	240
  1871   00FEDF  F0                 	db	240
  1872   00FEE0  F0                 	db	240
  1873   00FEE1  FF                 	db	255
  1874   00FEE2  FF                 	db	255
  1875   00FEE3  FF                 	db	255
  1876   00FEE4  FF                 	db	255
  1877   00FEE5  00                 	db	0
  1878   00FEE6  00                 	db	0
  1879   00FEE7  00                 	db	0
  1880   00FEE8  00                 	db	0
  1881   00FEE9  00                 	db	0
  1882   00FEEA  00                 	db	0
  1883   00FEEB  00                 	db	0
  1884   00FEEC  00                 	db	0
  1885   00FEED  FF                 	db	255
  1886   00FEEE  FF                 	db	255
  1887   00FEEF  FF                 	db	255
  1888   00FEF0  FF                 	db	255
  1889   00FEF1  0F                 	db	15
  1890   00FEF2  0F                 	db	15
  1891   00FEF3  0F                 	db	15
  1892   00FEF4  0F                 	db	15
  1893   00FEF5  0F                 	db	15
  1894   00FEF6  0F                 	db	15
  1895   00FEF7  0F                 	db	15
  1896   00FEF8  0F                 	db	15
  1897   00FEF9  38                 	db	56
  1898   00FEFA  7C                 	db	124
  1899   00FEFB  44                 	db	68
  1900   00FEFC  6C                 	db	108
  1901   00FEFD  38                 	db	56
  1902   00FEFE  6C                 	db	108
  1903   00FEFF  44                 	db	68
  1904   00FF00  00                 	db	0
  1905   00FF01  FC                 	db	252
  1906   00FF02  FE                 	db	254
  1907   00FF03  2A                 	db	42
  1908   00FF04  2A                 	db	42
  1909   00FF05  3E                 	db	62
  1910   00FF06  14                 	db	20
  1911   00FF07  00                 	db	0
  1912   00FF08  00                 	db	0
  1913   00FF09  7E                 	db	126
  1914   00FF0A  7E                 	db	126
  1915   00FF0B  02                 	db	2
  1916   00FF0C  02                 	db	2
  1917   00FF0D  06                 	db	6
  1918   00FF0E  06                 	db	6
  1919   00FF0F  00                 	db	0
  1920   00FF10  00                 	db	0
  1921   00FF11  02                 	db	2
  1922   00FF12  7E                 	db	126
  1923   00FF13  7E                 	db	126
  1924   00FF14  02                 	db	2
  1925   00FF15  7E                 	db	126
  1926   00FF16  7E                 	db	126
  1927   00FF17  02                 	db	2
  1928   00FF18  00                 	db	0
  1929   00FF19  63                 	db	99
  1930   00FF1A  77                 	db	119
  1931   00FF1B  5D                 	db	93
  1932   00FF1C  49                 	db	73
  1933   00FF1D  63                 	db	99
  1934   00FF1E  63                 	db	99
  1935   00FF1F  00                 	db	0
  1936   00FF20  00                 	db	0
  1937   00FF21  38                 	db	56
  1938   00FF22  7C                 	db	124
  1939   00FF23  44                 	db	68
  1940   00FF24  7C                 	db	124
  1941   00FF25  3C                 	db	60
  1942   00FF26  04                 	db	4
  1943   00FF27  04                 	db	4
  1944   00FF28  00                 	db	0
  1945   00FF29  80                 	db	128
  1946   00FF2A  FE                 	db	254
  1947   00FF2B  7E                 	db	126
  1948   00FF2C  20                 	db	32
  1949   00FF2D  20                 	db	32
  1950   00FF2E  3E                 	db	62
  1951   00FF2F  1E                 	db	30
  1952   00FF30  00                 	db	0
  1953   00FF31  04                 	db	4
  1954   00FF32  06                 	db	6
  1955   00FF33  02                 	db	2
  1956   00FF34  7E                 	db	126
  1957   00FF35  7C                 	db	124
  1958   00FF36  06                 	db	6
  1959   00FF37  02                 	db	2
  1960   00FF38  00                 	db	0
  1961   00FF39  99                 	db	153
  1962   00FF3A  BD                 	db	189
  1963   00FF3B  E7                 	db	231
  1964   00FF3C  E7                 	db	231
  1965   00FF3D  BD                 	db	189
  1966   00FF3E  99                 	db	153
  1967   00FF3F  00                 	db	0
  1968   00FF40  00                 	db	0
  1969   00FF41  1C                 	db	28
  1970   00FF42  3E                 	db	62
  1971   00FF43  6B                 	db	107
  1972   00FF44  49                 	db	73
  1973   00FF45  6B                 	db	107
  1974   00FF46  3E                 	db	62
  1975   00FF47  1C                 	db	28
  1976   00FF48  00                 	db	0
  1977   00FF49  4C                 	db	76
  1978   00FF4A  7E                 	db	126
  1979   00FF4B  73                 	db	115
  1980   00FF4C  01                 	db	1
  1981   00FF4D  73                 	db	115
  1982   00FF4E  7E                 	db	126
  1983   00FF4F  4C                 	db	76
  1984   00FF50  00                 	db	0
  1985   00FF51  30                 	db	48
  1986   00FF52  78                 	db	120
  1987   00FF53  4A                 	db	74
  1988   00FF54  4F                 	db	79
  1989   00FF55  7D                 	db	125
  1990   00FF56  39                 	db	57
  1991   00FF57  00                 	db	0
  1992   00FF58  00                 	db	0
  1993   00FF59  18                 	db	24
  1994   00FF5A  3C                 	db	60
  1995   00FF5B  24                 	db	36
  1996   00FF5C  3C                 	db	60
  1997   00FF5D  3C                 	db	60
  1998   00FF5E  24                 	db	36
  1999   00FF5F  3C                 	db	60
  2000   00FF60  18                 	db	24
  2001   00FF61  98                 	db	152
  2002   00FF62  FC                 	db	252
  2003   00FF63  64                 	db	100
  2004   00FF64  3C                 	db	60
  2005   00FF65  3E                 	db	62
  2006   00FF66  27                 	db	39
  2007   00FF67  3D                 	db	61
  2008   00FF68  18                 	db	24
  2009   00FF69  1C                 	db	28
  2010   00FF6A  3E                 	db	62
  2011   00FF6B  6B                 	db	107
  2012   00FF6C  49                 	db	73
  2013   00FF6D  49                 	db	73
  2014   00FF6E  00                 	db	0
  2015   00FF6F  00                 	db	0
  2016   00FF70  00                 	db	0
  2017   00FF71  7E                 	db	126
  2018   00FF72  7F                 	db	127
  2019   00FF73  01                 	db	1
  2020   00FF74  01                 	db	1
  2021   00FF75  7F                 	db	127
  2022   00FF76  7E                 	db	126
  2023   00FF77  00                 	db	0
  2024   00FF78  00                 	db	0
  2025   00FF79  2A                 	db	42
  2026   00FF7A  2A                 	db	42
  2027   00FF7B  2A                 	db	42
  2028   00FF7C  2A                 	db	42
  2029   00FF7D  2A                 	db	42
  2030   00FF7E  2A                 	db	42
  2031   00FF7F  00                 	db	0
  2032   00FF80  00                 	db	0
  2033   00FF81  44                 	db	68
  2034   00FF82  44                 	db	68
  2035   00FF83  5F                 	db	95
  2036   00FF84  5F                 	db	95
  2037   00FF85  44                 	db	68
  2038   00FF86  44                 	db	68
  2039   00FF87  00                 	db	0
  2040   00FF88  00                 	db	0
  2041   00FF89  40                 	db	64
  2042   00FF8A  51                 	db	81
  2043   00FF8B  5B                 	db	91
  2044   00FF8C  4E                 	db	78
  2045   00FF8D  44                 	db	68
  2046   00FF8E  40                 	db	64
  2047   00FF8F  00                 	db	0
  2048   00FF90  00                 	db	0
  2049   00FF91  40                 	db	64
  2050   00FF92  44                 	db	68
  2051   00FF93  4E                 	db	78
  2052   00FF94  5B                 	db	91
  2053   00FF95  51                 	db	81
  2054   00FF96  40                 	db	64
  2055   00FF97  00                 	db	0
  2056   00FF98  00                 	db	0
  2057   00FF99  00                 	db	0
  2058   00FF9A  00                 	db	0
  2059   00FF9B  00                 	db	0
  2060   00FF9C  FE                 	db	254
  2061   00FF9D  FF                 	db	255
  2062   00FF9E  01                 	db	1
  2063   00FF9F  07                 	db	7
  2064   00FFA0  06                 	db	6
  2065   00FFA1  60                 	db	96
  2066   00FFA2  E0                 	db	224
  2067   00FFA3  80                 	db	128
  2068   00FFA4  FF                 	db	255
  2069   00FFA5  7F                 	db	127
  2070   00FFA6  00                 	db	0
  2071   00FFA7  00                 	db	0
  2072   00FFA8  00                 	db	0
  2073   00FFA9  08                 	db	8
  2074   00FFAA  08                 	db	8
  2075   00FFAB  6B                 	db	107
  2076   00FFAC  6B                 	db	107
  2077   00FFAD  08                 	db	8
  2078   00FFAE  08                 	db	8
  2079   00FFAF  00                 	db	0
  2080   00FFB0  00                 	db	0
  2081   00FFB1  24                 	db	36
  2082   00FFB2  36                 	db	54
  2083   00FFB3  12                 	db	18
  2084   00FFB4  36                 	db	54
  2085   00FFB5  24                 	db	36
  2086   00FFB6  36                 	db	54
  2087   00FFB7  12                 	db	18
  2088   00FFB8  00                 	db	0
  2089   00FFB9  00                 	db	0
  2090   00FFBA  06                 	db	6
  2091   00FFBB  0F                 	db	15
  2092   00FFBC  09                 	db	9
  2093   00FFBD  0F                 	db	15
  2094   00FFBE  06                 	db	6
  2095   00FFBF  00                 	db	0
  2096   00FFC0  00                 	db	0
  2097   00FFC1  00                 	db	0
  2098   00FFC2  00                 	db	0
  2099   00FFC3  00                 	db	0
  2100   00FFC4  18                 	db	24
  2101   00FFC5  18                 	db	24
  2102   00FFC6  00                 	db	0
  2103   00FFC7  00                 	db	0
  2104   00FFC8  00                 	db	0
  2105   00FFC9  00                 	db	0
  2106   00FFCA  00                 	db	0
  2107   00FFCB  00                 	db	0
  2108   00FFCC  10                 	db	16
  2109   00FFCD  10                 	db	16
  2110   00FFCE  00                 	db	0
  2111   00FFCF  00                 	db	0
  2112   00FFD0  00                 	db	0
  2113   00FFD1  10                 	db	16
  2114   00FFD2  30                 	db	48
  2115   00FFD3  70                 	db	112
  2116   00FFD4  C0                 	db	192
  2117   00FFD5  FF                 	db	255
  2118   00FFD6  FF                 	db	255
  2119   00FFD7  01                 	db	1
  2120   00FFD8  01                 	db	1
  2121   00FFD9  00                 	db	0
  2122   00FFDA  1F                 	db	31
  2123   00FFDB  1F                 	db	31
  2124   00FFDC  01                 	db	1
  2125   00FFDD  1F                 	db	31
  2126   00FFDE  1E                 	db	30
  2127   00FFDF  00                 	db	0
  2128   00FFE0  00                 	db	0
  2129   00FFE1  00                 	db	0
  2130   00FFE2  19                 	db	25
  2131   00FFE3  1D                 	db	29
  2132   00FFE4  17                 	db	23
  2133   00FFE5  12                 	db	18
  2134   00FFE6  00                 	db	0
  2135   00FFE7  00                 	db	0
  2136   00FFE8  00                 	db	0
  2137   00FFE9  00                 	db	0
  2138   00FFEA  00                 	db	0
  2139   00FFEB  3C                 	db	60
  2140   00FFEC  3C                 	db	60
  2141   00FFED  3C                 	db	60
  2142   00FFEE  3C                 	db	60
  2143   00FFEF  00                 	db	0
  2144   00FFF0  00                 	db	0
  2145   00FFF1  00                 	db	0
  2146   00FFF2  00                 	db	0
  2147   00FFF3  00                 	db	0
  2148   00FFF4  00                 	db	0
  2149   00FFF5  00                 	db	0
  2150   00FFF6  00                 	db	0
  2151   00FFF7  00                 	db	0
  2152   00FFF8  00                 	db	0
  2153   00FFF9                     __end_of_MAX7219_Dot_Matrix_font:
  2154                           	callstack 0
  2155   000000                     _EEDATA	set	4008
  2156   000000                     _EEADR	set	4009
  2157   000000                     _EEADRH	set	4010
  2158   000000                     _EECON2	set	4007
  2159   000000                     _RCREG	set	4014
  2160   000000                     _TXREG	set	4013
  2161   000000                     _SPBRG	set	4015
  2162   000000                     _TXSTA	set	4012
  2163   00FFF9                     STR_1:
  2164                           
  2165                           ; BSR set to: 0
  2166   00FFF9  41                 	db	65	;'A'
  2167   00FFFA  4C                 	db	76	;'L'
  2168   00FFFB  41                 	db	65	;'A'
  2169   00FFFC  52                 	db	82	;'R'
  2170   00FFFD  4D                 	db	77	;'M'
  2171   00FFFE  00                 	db	0
  2172   00FFFF  00                 	db	0	; dummy byte at the end
  2173   000000                     
  2174                           	psect	nvBANK0
  2175   0000F5                     __pnvBANK0:
  2176                           	callstack 0
  2177   0000F5                     _TMR1_InterruptHandler:
  2178                           	callstack 0
  2179   0000F5                     	ds	2
  2180   0000F7                     _EUSART_RxDefaultInterruptHandler:
  2181                           	callstack 0
  2182   0000F7                     	ds	2
  2183   0000F9                     _EUSART_TxDefaultInterruptHandler:
  2184                           	callstack 0
  2185   0000F9                     	ds	2
  2186   000000                     _TMR1	set	4046
  2187   000000                     _LATCbits	set	3979
  2188   000000                     _LATBbits	set	3978
  2189   000000                     _TRISBbits	set	3987
  2190   000000                     _T1CONbits	set	4045
  2191   000000                     _RCSTAbits	set	4011
  2192   000000                     _TXSTAbits	set	4012
  2193   000000                     _SSPSTATbits	set	4039
  2194   000000                     _SSPCON1bits	set	4038
  2195   000000                     _WPUB	set	3964
  2196   000000                     _ANSEL	set	3966
  2197   000000                     _ANSELH	set	3967
  2198   000000                     _LATA	set	3977
  2199   000000                     _OSCTUNE	set	3995
  2200   000000                     _SSPCON1	set	4038
  2201   000000                     _SSPSTAT	set	4039
  2202   000000                     _T1CON	set	4045
  2203   000000                     _TMR1L	set	4046
  2204   000000                     _TMR1H	set	4047
  2205   000000                     _RCONbits	set	4048
  2206   000000                     _OSCCON	set	4051
  2207   000000                     _SSPBUF	set	4041
  2208   000000                     _SSPADD	set	4040
  2209   000000                     _INTCON2bits	set	4081
  2210   000000                     _PIE1bits	set	3997
  2211   000000                     _TRISA	set	3986
  2212   000000                     _LATC	set	3979
  2213   000000                     _LATB	set	3978
  2214   000000                     _TRISC	set	3988
  2215   000000                     _TRISB	set	3987
  2216   000000                     _PORTBbits	set	3969
  2217   000000                     _INTCONbits	set	4082
  2218   000000                     _TABLAT	set	4085
  2219   000000                     _TBLPTRL	set	4086
  2220   000000                     _TBLPTRH	set	4087
  2221   000000                     _TBLPTRU	set	4088
  2222   000000                     _PIR1bits	set	3998
  2223   000000                     _PIR2bits	set	4001
  2224   000000                     _EECON1bits	set	4006
  2225   000000                     _RCSTA	set	4011
  2226   000000                     _BAUDCON	set	4024
  2227   000000                     _SPBRGH	set	4016
  2228                           
  2229                           ; #config settings
  2230                           
  2231                           	psect	cinit
  2232   001170                     __pcinit:
  2233                           	callstack 0
  2234   001170                     start_initialization:
  2235                           	callstack 0
  2236   001170                     __initialization:
  2237                           	callstack 0
  2238                           
  2239                           ; Clear objects allocated to BANK1 (32 bytes)
  2240   001170  EE01  F000         	lfsr	0,__pbssBANK1
  2241   001174  0E20               	movlw	32
  2242   001176                     clear_0:
  2243   001176  6AEE               	clrf	postinc0,c
  2244   001178  06E8               	decf	wreg,f,c
  2245   00117A  E1FD               	bnz	clear_0
  2246                           
  2247                           ; Clear objects allocated to BANK0 (76 bytes)
  2248   00117C  EE00  F060         	lfsr	0,__pbssBANK0
  2249   001180  0E4C               	movlw	76
  2250   001182                     clear_1:
  2251   001182  6AEE               	clrf	postinc0,c
  2252   001184  06E8               	decf	wreg,f,c
  2253   001186  E1FD               	bnz	clear_1
  2254                           
  2255                           ; Clear objects allocated to COMRAM (10 bytes)
  2256   001188  EE00  F04B         	lfsr	0,__pbssCOMRAM
  2257   00118C  0E0A               	movlw	10
  2258   00118E                     clear_2:
  2259   00118E  6AEE               	clrf	postinc0,c
  2260   001190  06E8               	decf	wreg,f,c
  2261   001192  E1FD               	bnz	clear_2
  2262   001194                     end_of_initialization:
  2263                           	callstack 0
  2264   001194                     __end_of__initialization:
  2265                           	callstack 0
  2266   001194  9055               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2267   001196  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2268   001198  0100               	movlb	0
  2269   00119A  EF77  F003         	goto	_main	;jump to C main() function
  2270                           
  2271                           	psect	bssCOMRAM
  2272   00004B                     __pbssCOMRAM:
  2273                           	callstack 0
  2274   00004B                     _timer1ReloadVal:
  2275                           	callstack 0
  2276   00004B                     	ds	2
  2277   00004D                     _uartBufferIndex:
  2278                           	callstack 0
  2279   00004D                     	ds	1
  2280   00004E                     _seconds:
  2281                           	callstack 0
  2282   00004E                     	ds	1
  2283   00004F                     _eusartRxCount:
  2284                           	callstack 0
  2285   00004F                     	ds	1
  2286   000050                     _eusartRxTail:
  2287                           	callstack 0
  2288   000050                     	ds	1
  2289   000051                     _eusartRxHead:
  2290                           	callstack 0
  2291   000051                     	ds	1
  2292   000052                     _eusartTxBufferRemaining:
  2293                           	callstack 0
  2294   000052                     	ds	1
  2295   000053                     _eusartTxTail:
  2296                           	callstack 0
  2297   000053                     	ds	1
  2298   000054                     _eusartTxHead:
  2299                           	callstack 0
  2300   000054                     	ds	1
  2301                           
  2302                           	psect	bssBANK0
  2303   000060                     __pbssBANK0:
  2304                           	callstack 0
  2305   000060                     _bufferCol:
  2306                           	callstack 0
  2307   000060                     	ds	32
  2308   000080                     _uartBuffer:
  2309                           	callstack 0
  2310   000080                     	ds	10
  2311   00008A                     _eusartRxBuffer:
  2312                           	callstack 0
  2313   00008A                     	ds	8
  2314   000092                     _eusartTxBuffer:
  2315                           	callstack 0
  2316   000092                     	ds	8
  2317   00009A                     checkButtons@button3HoldTime:
  2318                           	callstack 0
  2319   00009A                     	ds	2
  2320   00009C                     _button3PressTime:
  2321                           	callstack 0
  2322   00009C                     	ds	2
  2323   00009E                     _blinkTimer:
  2324                           	callstack 0
  2325   00009E                     	ds	2
  2326   0000A0                     checkButtons@alarmSettingMode:
  2327                           	callstack 0
  2328   0000A0                     	ds	1
  2329   0000A1                     checkButtons@button3PressCount:
  2330                           	callstack 0
  2331   0000A1                     	ds	1
  2332   0000A2                     _btTimeSet:
  2333                           	callstack 0
  2334   0000A2                     	ds	1
  2335   0000A3                     _isButton3Pressed:
  2336                           	callstack 0
  2337   0000A3                     	ds	1
  2338   0000A4                     _displayBlinking:
  2339                           	callstack 0
  2340   0000A4                     	ds	1
  2341   0000A5                     _alarmTriggered:
  2342                           	callstack 0
  2343   0000A5                     	ds	1
  2344   0000A6                     _alarmActive:
  2345                           	callstack 0
  2346   0000A6                     	ds	1
  2347   0000A7                     _alarmSet:
  2348                           	callstack 0
  2349   0000A7                     	ds	1
  2350   0000A8                     _alarmMinutes:
  2351                           	callstack 0
  2352   0000A8                     	ds	1
  2353   0000A9                     _alarmHours:
  2354                           	callstack 0
  2355   0000A9                     	ds	1
  2356   0000AA                     _minutes:
  2357                           	callstack 0
  2358   0000AA                     	ds	1
  2359   0000AB                     _hours:
  2360                           	callstack 0
  2361   0000AB                     	ds	1
  2362                           
  2363                           	psect	bssBANK1
  2364   000100                     __pbssBANK1:
  2365                           	callstack 0
  2366   000100                     	ds	32
  2367                           
  2368                           	psect	cstackBANK0
  2369   0000AC                     __pcstackBANK0:
  2370                           	callstack 0
  2371   0000AC                     clearDisplay@i:
  2372                           	callstack 0
  2373   0000AC                     printString@str:
  2374                           	callstack 0
  2375   0000AC                     saveTimeToFlash@flashBuffer:
  2376                           	callstack 0
  2377                           
  2378                           ; 64 bytes @ 0x0
  2379   0000AC                     	ds	2
  2380   0000AE                     ??_printString:
  2381                           
  2382                           ; 1 bytes @ 0x2
  2383   0000AE                     	ds	8
  2384   0000B6                     printString@indx:
  2385                           	callstack 0
  2386                           
  2387                           ; 2 bytes @ 0xA
  2388   0000B6                     	ds	2
  2389   0000B8                     printString@data:
  2390                           	callstack 0
  2391                           
  2392                           ; 1 bytes @ 0xC
  2393   0000B8                     	ds	1
  2394   0000B9                     printString@strindx:
  2395                           	callstack 0
  2396                           
  2397                           ; 2 bytes @ 0xD
  2398   0000B9                     	ds	2
  2399   0000BB                     printString@i:
  2400                           	callstack 0
  2401                           
  2402                           ; 2 bytes @ 0xF
  2403   0000BB                     	ds	2
  2404   0000BD                     printString@k:
  2405                           	callstack 0
  2406                           
  2407                           ; 2 bytes @ 0x11
  2408   0000BD                     	ds	2
  2409   0000BF                     printString@j:
  2410                           	callstack 0
  2411                           
  2412                           ; 2 bytes @ 0x13
  2413   0000BF                     	ds	2
  2414   0000C1                     ??_triggerAlarm:
  2415   0000C1                     displayTime@displayString:
  2416                           	callstack 0
  2417   0000C1                     displayAlarmTime@displayString:
  2418                           	callstack 0
  2419                           
  2420                           ; 5 bytes @ 0x15
  2421   0000C1                     	ds	2
  2422   0000C3                     triggerAlarm@numCycles:
  2423                           	callstack 0
  2424                           
  2425                           ; 2 bytes @ 0x17
  2426   0000C3                     	ds	2
  2427   0000C5                     triggerAlarm@i:
  2428                           	callstack 0
  2429                           
  2430                           ; 2 bytes @ 0x19
  2431   0000C5                     	ds	1
  2432   0000C6                     displayTime@timeString:
  2433                           	callstack 0
  2434   0000C6                     displayAlarmTime@alarmTimeString:
  2435                           	callstack 0
  2436                           
  2437                           ; 5 bytes @ 0x1A
  2438   0000C6                     	ds	5
  2439   0000CB                     displayTime@i:
  2440                           	callstack 0
  2441   0000CB                     displayAlarmTime@i:
  2442                           	callstack 0
  2443                           
  2444                           ; 2 bytes @ 0x1F
  2445   0000CB                     	ds	33
  2446   0000EC                     saveTimeToFlash@flashAddress:
  2447                           	callstack 0
  2448                           
  2449                           ; 4 bytes @ 0x40
  2450   0000EC                     	ds	4
  2451   0000F0                     saveTimeToFlash@i:
  2452                           	callstack 0
  2453                           
  2454                           ; 1 bytes @ 0x44
  2455   0000F0                     	ds	1
  2456   0000F1                     ??_checkButtons:
  2457                           
  2458                           ; 1 bytes @ 0x45
  2459   0000F1                     	ds	2
  2460   0000F3                     main@hours_pom:
  2461                           	callstack 0
  2462                           
  2463                           ; 1 bytes @ 0x47
  2464   0000F3                     	ds	1
  2465   0000F4                     main@minutes_pom:
  2466                           	callstack 0
  2467                           
  2468                           ; 1 bytes @ 0x48
  2469   0000F4                     	ds	1
  2470                           
  2471                           	psect	cstackCOMRAM
  2472   000001                     __pcstackCOMRAM:
  2473                           	callstack 0
  2474   000001                     btGetData@rcv:
  2475                           	callstack 0
  2476   000001                     _calculateTime$1332:
  2477                           	callstack 0
  2478                           
  2479                           ; 2 bytes @ 0x0
  2480   000001                     	ds	2
  2481   000003                     _calculateTime$1333:
  2482                           	callstack 0
  2483                           
  2484                           ; 2 bytes @ 0x2
  2485   000003                     	ds	2
  2486   000005                     _calculateTime$1334:
  2487                           	callstack 0
  2488                           
  2489                           ; 2 bytes @ 0x4
  2490   000005                     	ds	2
  2491   000007                     ??_INTERRUPT_InterruptManager:
  2492                           
  2493                           ; 1 bytes @ 0x6
  2494   000007                     	ds	4
  2495   00000B                     ?___wmul:
  2496                           	callstack 0
  2497   00000B                     ?___awdiv:
  2498                           	callstack 0
  2499   00000B                     ?___awmod:
  2500                           	callstack 0
  2501   00000B                     SPI_Exchange8bit@data:
  2502                           	callstack 0
  2503   00000B                     EUSART_SetTxInterruptHandler@handler:
  2504                           	callstack 0
  2505   00000B                     EUSART_SetRxInterruptHandler@handler:
  2506                           	callstack 0
  2507   00000B                     TMR1_SetInterruptHandler@InterruptHandler:
  2508                           	callstack 0
  2509   00000B                     delayMicroseconds@microseconds:
  2510                           	callstack 0
  2511   00000B                     ___wmul@multiplier:
  2512                           	callstack 0
  2513   00000B                     ___awdiv@dividend:
  2514                           	callstack 0
  2515   00000B                     ___awmod@dividend:
  2516                           	callstack 0
  2517   00000B                     FLASH_ReadByte@flashAddr:
  2518                           	callstack 0
  2519   00000B                     FLASH_EraseBlock@baseAddr:
  2520                           	callstack 0
  2521                           
  2522                           ; 4 bytes @ 0xA
  2523   00000B                     	ds	1
  2524   00000C                     max7219_cmd@data:
  2525                           	callstack 0
  2526                           
  2527                           ; 1 bytes @ 0xB
  2528   00000C                     	ds	1
  2529   00000D                     ??_max7219_cmd:
  2530   00000D                     delayMicroseconds@i:
  2531                           	callstack 0
  2532   00000D                     ___wmul@multiplicand:
  2533                           	callstack 0
  2534   00000D                     ___awdiv@divisor:
  2535                           	callstack 0
  2536   00000D                     ___awmod@divisor:
  2537                           	callstack 0
  2538                           
  2539                           ; 2 bytes @ 0xC
  2540   00000D                     	ds	2
  2541   00000F                     FLASH_EraseBlock@GIEBitValue:
  2542                           	callstack 0
  2543   00000F                     max7219_cmd@Addr:
  2544                           	callstack 0
  2545   00000F                     ___awdiv@counter:
  2546                           	callstack 0
  2547   00000F                     ___awmod@counter:
  2548                           	callstack 0
  2549   00000F                     ___wmul@product:
  2550                           	callstack 0
  2551                           
  2552                           ; 2 bytes @ 0xE
  2553   00000F                     	ds	1
  2554   000010                     ___awdiv@sign:
  2555                           	callstack 0
  2556   000010                     ___awmod@sign:
  2557                           	callstack 0
  2558   000010                     max7219_cmd@writeData:
  2559                           	callstack 0
  2560   000010                     FLASH_WriteBlock@writeAddr:
  2561                           	callstack 0
  2562                           
  2563                           ; 4 bytes @ 0xF
  2564   000010                     	ds	1
  2565   000011                     ?___lwdiv:
  2566                           	callstack 0
  2567   000011                     ___awdiv@quotient:
  2568                           	callstack 0
  2569   000011                     ___lwdiv@dividend:
  2570                           	callstack 0
  2571                           
  2572                           ; 2 bytes @ 0x10
  2573   000011                     	ds	1
  2574   000012                     max7219_cmd@i:
  2575                           	callstack 0
  2576                           
  2577                           ; 2 bytes @ 0x11
  2578   000012                     	ds	1
  2579   000013                     max_write@row:
  2580                           	callstack 0
  2581   000013                     ___lwdiv@divisor:
  2582                           	callstack 0
  2583                           
  2584                           ; 2 bytes @ 0x12
  2585   000013                     	ds	1
  2586   000014                     FLASH_WriteBlock@flashWrBufPtr:
  2587                           	callstack 0
  2588                           
  2589                           ; 1 bytes @ 0x13
  2590   000014                     	ds	1
  2591   000015                     max_write@data:
  2592                           	callstack 0
  2593   000015                     ___lwdiv@quotient:
  2594                           	callstack 0
  2595   000015                     FLASH_WriteBlock@blockStartAddr:
  2596                           	callstack 0
  2597                           
  2598                           ; 4 bytes @ 0x14
  2599   000015                     	ds	1
  2600   000016                     ??_max_write:
  2601                           
  2602                           ; 1 bytes @ 0x15
  2603   000016                     	ds	1
  2604   000017                     ___lwdiv@counter:
  2605                           	callstack 0
  2606                           
  2607                           ; 1 bytes @ 0x16
  2608   000017                     	ds	1
  2609   000018                     generateBeep@duration_ms:
  2610                           	callstack 0
  2611   000018                     max_write@offset:
  2612                           	callstack 0
  2613                           
  2614                           ; 2 bytes @ 0x17
  2615   000018                     	ds	1
  2616   000019                     FLASH_WriteBlock@GIEBitValue:
  2617                           	callstack 0
  2618                           
  2619                           ; 1 bytes @ 0x18
  2620   000019                     	ds	1
  2621   00001A                     FLASH_WriteBlock@j:
  2622                           	callstack 0
  2623   00001A                     generateBeep@cycles:
  2624                           	callstack 0
  2625   00001A                     max_write@devTarget:
  2626                           	callstack 0
  2627                           
  2628                           ; 2 bytes @ 0x19
  2629   00001A                     	ds	1
  2630   00001B                     FLASH_WriteBlock@numberOfWriteBlocks:
  2631                           	callstack 0
  2632                           
  2633                           ; 1 bytes @ 0x1A
  2634   00001B                     	ds	1
  2635   00001C                     FLASH_WriteBlock@dataCounter:
  2636                           	callstack 0
  2637   00001C                     generateBeep@i:
  2638                           	callstack 0
  2639   00001C                     max_write@dev:
  2640                           	callstack 0
  2641                           
  2642                           ; 2 bytes @ 0x1B
  2643   00001C                     	ds	1
  2644   00001D                     FLASH_WriteBlock@i:
  2645                           	callstack 0
  2646                           
  2647                           ; 1 bytes @ 0x1C
  2648   00001D                     	ds	1
  2649   00001E                     max_write@writeData:
  2650                           	callstack 0
  2651                           
  2652                           ; 2 bytes @ 0x1D
  2653   00001E                     	ds	2
  2654   000020                     ??_flushBuffer:
  2655                           
  2656                           ; 1 bytes @ 0x1F
  2657   000020                     	ds	3
  2658   000023                     flushBuffer@bufferRow:
  2659                           	callstack 0
  2660                           
  2661                           ; 32 bytes @ 0x22
  2662   000023                     	ds	32
  2663   000043                     flushBuffer@dev:
  2664                           	callstack 0
  2665                           
  2666                           ; 2 bytes @ 0x42
  2667   000043                     	ds	2
  2668   000045                     flushBuffer@j:
  2669                           	callstack 0
  2670                           
  2671                           ; 2 bytes @ 0x44
  2672   000045                     	ds	2
  2673   000047                     flushBuffer@row:
  2674                           	callstack 0
  2675                           
  2676                           ; 2 bytes @ 0x46
  2677   000047                     	ds	2
  2678   000049                     flushBuffer@i:
  2679                           	callstack 0
  2680                           
  2681                           ; 2 bytes @ 0x48
  2682   000049                     	ds	2
  2683   00004B                     
  2684                           ; 1 bytes @ 0x4A
  2685 ;;
  2686 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2687 ;;
  2688 ;; *************** function _main *****************
  2689 ;; Defined at:
  2690 ;;		line 46 in file "main.c"
  2691 ;; Parameters:    Size  Location     Type
  2692 ;;		None
  2693 ;; Auto vars:     Size  Location     Type
  2694 ;;  minutes_pom     1   72[BANK0 ] unsigned char 
  2695 ;;  hours_pom       1   71[BANK0 ] unsigned char 
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2706 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2708 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2709 ;;Total ram usage:        2 bytes
  2710 ;; Hardware stack levels required when called: 10
  2711 ;; This function calls:
  2712 ;;		_SYSTEM_Initialize
  2713 ;;		_TMR1_StartTimer
  2714 ;;		_checkButtons
  2715 ;;		_clearDisplay
  2716 ;;		_displayTime
  2717 ;;		_loadTimeFromFlash
  2718 ;;		_matrixInit
  2719 ;;		_processAlarm
  2720 ;;		_saveTimeToFlash
  2721 ;; This function is called by:
  2722 ;;		Startup code after reset
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text0
  2727   0006EE                     __ptext0:
  2728                           	callstack 0
  2729   0006EE                     _main:
  2730                           	callstack 21
  2731   0006EE                     
  2732                           ;main.c: 48:     SYSTEM_Initialize();
  2733   0006EE  EC28  F009         	call	_SYSTEM_Initialize	;wreg free
  2734   0006F2                     
  2735                           ;main.c: 50:     hours = 0;
  2736   0006F2  0E00               	movlw	0
  2737   0006F4  0100               	movlb	0	; () banked
  2738   0006F6  6FAB               	movwf	_hours& (0+255),b	;volatile
  2739   0006F8                     
  2740                           ; BSR set to: 0
  2741                           ;main.c: 51:     minutes = 0;
  2742   0006F8  0E00               	movlw	0
  2743   0006FA  6FAA               	movwf	_minutes& (0+255),b	;volatile
  2744   0006FC                     
  2745                           ; BSR set to: 0
  2746                           ;main.c: 52:     seconds = 0;
  2747   0006FC  0E00               	movlw	0
  2748   0006FE  6E4E               	movwf	_seconds^0,c	;volatile
  2749   000700                     
  2750                           ; BSR set to: 0
  2751                           ;main.c: 53:     alarmHours = 0;
  2752   000700  0E00               	movlw	0
  2753   000702  6FA9               	movwf	_alarmHours& (0+255),b	;volatile
  2754   000704                     
  2755                           ; BSR set to: 0
  2756                           ;main.c: 54:     alarmMinutes = 0;
  2757   000704  0E00               	movlw	0
  2758   000706  6FA8               	movwf	_alarmMinutes& (0+255),b	;volatile
  2759   000708                     
  2760                           ; BSR set to: 0
  2761                           ;main.c: 56:     matrixInit();
  2762   000708  EC84  F008         	call	_matrixInit	;wreg free
  2763   00070C                     
  2764                           ;main.c: 57:     clearDisplay();
  2765   00070C  EC4B  F008         	call	_clearDisplay	;wreg free
  2766   000710                     
  2767                           ;main.c: 58:     loadTimeFromFlash();
  2768   000710  EC6A  F005         	call	_loadTimeFromFlash	;wreg free
  2769   000714                     
  2770                           ;main.c: 61:     TRISBbits.RB3 = 0;
  2771   000714  9693               	bcf	147,3,c	;volatile
  2772   000716                     
  2773                           ;main.c: 62:     INTCONbits.GIE = 1;
  2774   000716  8EF2               	bsf	242,7,c	;volatile
  2775   000718                     
  2776                           ;main.c: 63:     INTCONbits.PEIE = 1;
  2777   000718  8CF2               	bsf	242,6,c	;volatile
  2778   00071A                     
  2779                           ;main.c: 65:     TMR1_StartTimer();
  2780   00071A  EC62  F009         	call	_TMR1_StartTimer	;wreg free
  2781   00071E                     l3736:
  2782                           
  2783                           ;main.c: 67:     {;main.c: 68:         displayTime();
  2784   00071E  ECC5  F005         	call	_displayTime	;wreg free
  2785   000722                     
  2786                           ;main.c: 69:         checkButtons();
  2787   000722  EC57  F000         	call	_checkButtons	;wreg free
  2788   000726                     
  2789                           ;main.c: 70:         processAlarm();
  2790   000726  ECD3  F007         	call	_processAlarm	;wreg free
  2791   00072A                     
  2792                           ;main.c: 71:         if(btTimeSet) {
  2793   00072A  0100               	movlb	0	; () banked
  2794   00072C  51A2               	movf	_btTimeSet& (0+255),w,b
  2795   00072E  B4D8               	btfsc	status,2,c
  2796   000730  EF9C  F003         	goto	u3181
  2797   000734  EF9E  F003         	goto	u3180
  2798   000738                     u3181:
  2799   000738  EF8F  F003         	goto	l3736
  2800   00073C                     u3180:
  2801   00073C                     
  2802                           ; BSR set to: 0
  2803                           ;main.c: 73:             if (uartBuffer[0] == 'H' && uartBuffer[3] == 'M' && uartBuffer[
      +                          6] == ';')
  2804   00073C  0E48               	movlw	72
  2805   00073E  1980               	xorwf	_uartBuffer& (0+255),w,b
  2806   000740  A4D8               	btfss	status,2,c
  2807   000742  EFA5  F003         	goto	u3191
  2808   000746  EFA7  F003         	goto	u3190
  2809   00074A                     u3191:
  2810   00074A  EF8F  F003         	goto	l3736
  2811   00074E                     u3190:
  2812   00074E                     
  2813                           ; BSR set to: 0
  2814   00074E  0E4D               	movlw	77
  2815   000750  1983               	xorwf	(_uartBuffer+3)& (0+255),w,b
  2816   000752  A4D8               	btfss	status,2,c
  2817   000754  EFAE  F003         	goto	u3201
  2818   000758  EFB0  F003         	goto	u3200
  2819   00075C                     u3201:
  2820   00075C  EF8F  F003         	goto	l3736
  2821   000760                     u3200:
  2822   000760                     
  2823                           ; BSR set to: 0
  2824   000760  0E3B               	movlw	59
  2825   000762  1986               	xorwf	(_uartBuffer+6)& (0+255),w,b
  2826   000764  A4D8               	btfss	status,2,c
  2827   000766  EFB7  F003         	goto	u3211
  2828   00076A  EFB9  F003         	goto	u3210
  2829   00076E                     u3211:
  2830   00076E  EF8F  F003         	goto	l3736
  2831   000772                     u3210:
  2832   000772                     
  2833                           ; BSR set to: 0
  2834                           ;main.c: 74:             {;main.c: 76:                 uint8_t hours_pom = (uartBuffer[1
      +                          ] - '0') * 10 + (uartBuffer[2] - '0');
  2835   000772  5181               	movf	(_uartBuffer+1)& (0+255),w,b
  2836   000774  0D0A               	mullw	10
  2837   000776  50F3               	movf	243,w,c
  2838   000778  2582               	addwf	(_uartBuffer+2)& (0+255),w,b
  2839   00077A  0FF0               	addlw	240
  2840   00077C  6FF3               	movwf	main@hours_pom& (0+255),b
  2841                           
  2842                           ;main.c: 79:                 uint8_t minutes_pom = (uartBuffer[4] - '0') * 10 + (uartBuf
      +                          fer[5] - '0');
  2843   00077E  5184               	movf	(_uartBuffer+4)& (0+255),w,b
  2844   000780  0D0A               	mullw	10
  2845   000782  50F3               	movf	243,w,c
  2846   000784  2585               	addwf	(_uartBuffer+5)& (0+255),w,b
  2847   000786  0FF0               	addlw	240
  2848   000788  6FF4               	movwf	main@minutes_pom& (0+255),b
  2849   00078A                     
  2850                           ; BSR set to: 0
  2851                           ;main.c: 82:                 if (hours_pom < 24 && minutes_pom < 60)
  2852   00078A  0E18               	movlw	24
  2853   00078C  61F3               	cpfslt	main@hours_pom& (0+255),b
  2854   00078E  EFCB  F003         	goto	u3221
  2855   000792  EFCD  F003         	goto	u3220
  2856   000796                     u3221:
  2857   000796  EFE1  F003         	goto	l426
  2858   00079A                     u3220:
  2859   00079A                     
  2860                           ; BSR set to: 0
  2861   00079A  0E3C               	movlw	60
  2862   00079C  61F4               	cpfslt	main@minutes_pom& (0+255),b
  2863   00079E  EFD3  F003         	goto	u3231
  2864   0007A2  EFD5  F003         	goto	u3230
  2865   0007A6                     u3231:
  2866   0007A6  EFE1  F003         	goto	l426
  2867   0007AA                     u3230:
  2868   0007AA                     
  2869                           ; BSR set to: 0
  2870                           ;main.c: 83:                 {;main.c: 85:                     btTimeSet = 0;
  2871   0007AA  0E00               	movlw	0
  2872   0007AC  6FA2               	movwf	_btTimeSet& (0+255),b
  2873   0007AE                     
  2874                           ; BSR set to: 0
  2875                           ;main.c: 86:                     hours = hours_pom;
  2876   0007AE  C0F3  F0AB         	movff	main@hours_pom,_hours	;volatile
  2877   0007B2                     
  2878                           ; BSR set to: 0
  2879                           ;main.c: 87:                     minutes = minutes_pom;
  2880   0007B2  C0F4  F0AA         	movff	main@minutes_pom,_minutes	;volatile
  2881   0007B6                     
  2882                           ; BSR set to: 0
  2883                           ;main.c: 88:                     displayTime();
  2884   0007B6  ECC5  F005         	call	_displayTime	;wreg free
  2885   0007BA                     
  2886                           ;main.c: 89:                     saveTimeToFlash();
  2887   0007BA  EC20  F007         	call	_saveTimeToFlash	;wreg free
  2888   0007BE  EF8F  F003         	goto	l3736
  2889   0007C2                     l426:
  2890                           
  2891                           ; BSR set to: 0
  2892   0007C2  EF8F  F003         	goto	l3736
  2893   0007C6  EF55  F000         	goto	start
  2894   0007CA                     __end_of_main:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function _processAlarm *****************
  2898 ;; Defined at:
  2899 ;;		line 181 in file "main.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;Total ram usage:        0 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 9
  2920 ;; This function calls:
  2921 ;;		_triggerAlarm
  2922 ;; This function is called by:
  2923 ;;		_main
  2924 ;; This function uses a non-reentrant model
  2925 ;;
  2926                           
  2927                           	psect	text1
  2928   000FA6                     __ptext1:
  2929                           	callstack 0
  2930   000FA6                     _processAlarm:
  2931                           	callstack 21
  2932   000FA6                     
  2933                           ;main.c: 184:     if (alarmSet && !alarmTriggered)
  2934   000FA6  0100               	movlb	0	; () banked
  2935   000FA8  51A7               	movf	_alarmSet& (0+255),w,b
  2936   000FAA  B4D8               	btfsc	status,2,c
  2937   000FAC  EFDA  F007         	goto	u3031
  2938   000FB0  EFDC  F007         	goto	u3030
  2939   000FB4                     u3031:
  2940   000FB4  EFFB  F007         	goto	l476
  2941   000FB8                     u3030:
  2942   000FB8                     
  2943                           ; BSR set to: 0
  2944   000FB8  51A5               	movf	_alarmTriggered& (0+255),w,b
  2945   000FBA  A4D8               	btfss	status,2,c
  2946   000FBC  EFE2  F007         	goto	u3041
  2947   000FC0  EFE4  F007         	goto	u3040
  2948   000FC4                     u3041:
  2949   000FC4  EFFB  F007         	goto	l476
  2950   000FC8                     u3040:
  2951   000FC8                     
  2952                           ; BSR set to: 0
  2953                           ;main.c: 185:     {;main.c: 187:         if (hours == alarmHours && minutes == alarmMinu
      +                          tes)
  2954   000FC8  51A9               	movf	_alarmHours& (0+255),w,b	;volatile
  2955   000FCA  19AB               	xorwf	_hours& (0+255),w,b	;volatile
  2956   000FCC  A4D8               	btfss	status,2,c
  2957   000FCE  EFEB  F007         	goto	u3051
  2958   000FD2  EFED  F007         	goto	u3050
  2959   000FD6                     u3051:
  2960   000FD6  EFFB  F007         	goto	l476
  2961   000FDA                     u3050:
  2962   000FDA                     
  2963                           ; BSR set to: 0
  2964   000FDA  51A8               	movf	_alarmMinutes& (0+255),w,b	;volatile
  2965   000FDC  19AA               	xorwf	_minutes& (0+255),w,b	;volatile
  2966   000FDE  A4D8               	btfss	status,2,c
  2967   000FE0  EFF4  F007         	goto	u3061
  2968   000FE4  EFF6  F007         	goto	u3060
  2969   000FE8                     u3061:
  2970   000FE8  EFFB  F007         	goto	l476
  2971   000FEC                     u3060:
  2972   000FEC                     
  2973                           ; BSR set to: 0
  2974                           ;main.c: 188:         {;main.c: 189:             triggerAlarm();
  2975   000FEC  ECE5  F003         	call	_triggerAlarm	;wreg free
  2976   000FF0                     
  2977                           ;main.c: 190:             alarmTriggered = 1;
  2978   000FF0  0E01               	movlw	1
  2979   000FF2  0100               	movlb	0	; () banked
  2980   000FF4  6FA5               	movwf	_alarmTriggered& (0+255),b
  2981   000FF6                     l476:
  2982                           
  2983                           ; BSR set to: 0
  2984   000FF6  0012               	return		;funcret
  2985   000FF8                     __end_of_processAlarm:
  2986                           	callstack 0
  2987                           
  2988 ;; *************** function _triggerAlarm *****************
  2989 ;; Defined at:
  2990 ;;		line 196 in file "main.c"
  2991 ;; Parameters:    Size  Location     Type
  2992 ;;		None
  2993 ;; Auto vars:     Size  Location     Type
  2994 ;;  i               2   25[BANK0 ] unsigned int 
  2995 ;;  numCycles       2   23[BANK0 ] unsigned int 
  2996 ;; Return value:  Size  Location     Type
  2997 ;;                  1    wreg      void 
  2998 ;; Registers used:
  2999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3000 ;; Tracked objects:
  3001 ;;		On entry : 0/0
  3002 ;;		On exit  : 0/0
  3003 ;;		Unchanged: 0/0
  3004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3006 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3007 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3008 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3009 ;;Total ram usage:        6 bytes
  3010 ;; Hardware stack levels used: 1
  3011 ;; Hardware stack levels required when called: 8
  3012 ;; This function calls:
  3013 ;;		_clearAlarm
  3014 ;;		_clearDisplay
  3015 ;;		_generateBeep
  3016 ;;		_printString
  3017 ;; This function is called by:
  3018 ;;		_processAlarm
  3019 ;; This function uses a non-reentrant model
  3020 ;;
  3021                           
  3022                           	psect	text2
  3023   0007CA                     __ptext2:
  3024                           	callstack 0
  3025   0007CA                     _triggerAlarm:
  3026                           	callstack 21
  3027   0007CA                     
  3028                           ;main.c: 203:     unsigned int numCycles = 60000 / (2 * 500);
  3029   0007CA  0E00               	movlw	0
  3030   0007CC  0100               	movlb	0	; () banked
  3031   0007CE  6FC4               	movwf	(triggerAlarm@numCycles+1)& (0+255),b
  3032   0007D0  0E3C               	movlw	60
  3033   0007D2  6FC3               	movwf	triggerAlarm@numCycles& (0+255),b
  3034                           
  3035                           ;main.c: 205:     for (unsigned int i = 0; i < numCycles; i++)
  3036   0007D4  0E00               	movlw	0
  3037   0007D6  6FC6               	movwf	(triggerAlarm@i+1)& (0+255),b
  3038   0007D8  0E00               	movlw	0
  3039   0007DA  6FC5               	movwf	triggerAlarm@i& (0+255),b
  3040   0007DC  EF3F  F004         	goto	l3522
  3041   0007E0                     l480:
  3042                           
  3043                           ; BSR set to: 0
  3044                           ;main.c: 206:     {;main.c: 208:         if (!PORTBbits.RB2)
  3045   0007E0  B481               	btfsc	129,2,c	;volatile
  3046   0007E2  EFF5  F003         	goto	u2831
  3047   0007E6  EFF7  F003         	goto	u2830
  3048   0007EA                     u2831:
  3049   0007EA  EF11  F004         	goto	l3510
  3050   0007EE                     u2830:
  3051   0007EE                     
  3052                           ; BSR set to: 0
  3053                           ;main.c: 209:         {;main.c: 210:             _delay((unsigned long)((100)*(8000000/4
      +                          000.0)));
  3054   0007EE  0E02               	movlw	2
  3055   0007F0  0100               	movlb	0	; () banked
  3056   0007F2  6FC2               	movwf	(??_triggerAlarm+1)& (0+255),b
  3057   0007F4  0E04               	movlw	4
  3058   0007F6  6FC1               	movwf	??_triggerAlarm& (0+255),b
  3059   0007F8  0EBA               	movlw	186
  3060   0007FA                     u3257:
  3061   0007FA  2EE8               	decfsz	wreg,f,c
  3062   0007FC  D7FE               	bra	u3257
  3063   0007FE  2FC1               	decfsz	??_triggerAlarm& (0+255),f,b
  3064   000800  D7FC               	bra	u3257
  3065   000802  2FC2               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3066   000804  D7FA               	bra	u3257
  3067   000806  0000               	nop	
  3068   000808                     
  3069                           ;main.c: 211:             if (!PORTBbits.RB2)
  3070   000808  B481               	btfsc	129,2,c	;volatile
  3071   00080A  EF09  F004         	goto	u2841
  3072   00080E  EF0B  F004         	goto	u2840
  3073   000812                     u2841:
  3074   000812  EF11  F004         	goto	l3510
  3075   000816                     u2840:
  3076   000816                     
  3077                           ;main.c: 212:             {;main.c: 213:                 clearDisplay();
  3078   000816  EC4B  F008         	call	_clearDisplay	;wreg free
  3079   00081A                     
  3080                           ;main.c: 214:                 clearAlarm();
  3081   00081A  EC45  F009         	call	_clearAlarm	;wreg free
  3082   00081E  EF4A  F004         	goto	l483
  3083   000822                     l3510:
  3084                           
  3085                           ;main.c: 220:         printString("ALARM");
  3086   000822  0EF9               	movlw	low STR_1
  3087   000824  0100               	movlb	0	; () banked
  3088   000826  6FAC               	movwf	printString@str& (0+255),b
  3089   000828  0EFF               	movlw	high STR_1
  3090   00082A  6FAD               	movwf	(printString@str+1)& (0+255),b
  3091   00082C  ECA2  F001         	call	_printString	;wreg free
  3092   000830                     
  3093                           ;main.c: 222:         generateBeep(500);
  3094   000830  0E01               	movlw	1
  3095   000832  6E19               	movwf	(generateBeep@duration_ms+1)^0,c
  3096   000834  0EF4               	movlw	244
  3097   000836  6E18               	movwf	generateBeep@duration_ms^0,c
  3098   000838  EC5F  F007         	call	_generateBeep	;wreg free
  3099   00083C                     
  3100                           ;main.c: 223:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3101   00083C  0E06               	movlw	6
  3102   00083E  0100               	movlb	0	; () banked
  3103   000840  6FC2               	movwf	(??_triggerAlarm+1)& (0+255),b
  3104   000842  0E13               	movlw	19
  3105   000844  6FC1               	movwf	??_triggerAlarm& (0+255),b
  3106   000846  0EAD               	movlw	173
  3107   000848                     u3267:
  3108   000848  2EE8               	decfsz	wreg,f,c
  3109   00084A  D7FE               	bra	u3267
  3110   00084C  2FC1               	decfsz	??_triggerAlarm& (0+255),f,b
  3111   00084E  D7FC               	bra	u3267
  3112   000850  2FC2               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3113   000852  D7FA               	bra	u3267
  3114   000854  F000 F000          	nop2	
  3115   000858                     
  3116                           ;main.c: 224:         clearDisplay();
  3117   000858  EC4B  F008         	call	_clearDisplay	;wreg free
  3118   00085C                     
  3119                           ;main.c: 226:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3120   00085C  0E06               	movlw	6
  3121   00085E  0100               	movlb	0	; () banked
  3122   000860  6FC2               	movwf	(??_triggerAlarm+1)& (0+255),b
  3123   000862  0E13               	movlw	19
  3124   000864  6FC1               	movwf	??_triggerAlarm& (0+255),b
  3125   000866  0EAD               	movlw	173
  3126   000868                     u3277:
  3127   000868  2EE8               	decfsz	wreg,f,c
  3128   00086A  D7FE               	bra	u3277
  3129   00086C  2FC1               	decfsz	??_triggerAlarm& (0+255),f,b
  3130   00086E  D7FC               	bra	u3277
  3131   000870  2FC2               	decfsz	(??_triggerAlarm+1)& (0+255),f,b
  3132   000872  D7FA               	bra	u3277
  3133   000874  F000 F000          	nop2	
  3134   000878                     
  3135                           ;main.c: 227:     }
  3136   000878  0100               	movlb	0	; () banked
  3137   00087A  4BC5               	infsnz	triggerAlarm@i& (0+255),f,b
  3138   00087C  2BC6               	incf	(triggerAlarm@i+1)& (0+255),f,b
  3139   00087E                     l3522:
  3140                           
  3141                           ; BSR set to: 0
  3142   00087E  51C3               	movf	triggerAlarm@numCycles& (0+255),w,b
  3143   000880  5DC5               	subwf	triggerAlarm@i& (0+255),w,b
  3144   000882  51C4               	movf	(triggerAlarm@numCycles+1)& (0+255),w,b
  3145   000884  59C6               	subwfb	(triggerAlarm@i+1)& (0+255),w,b
  3146   000886  A0D8               	btfss	status,0,c
  3147   000888  EF48  F004         	goto	u2851
  3148   00088C  EF4A  F004         	goto	u2850
  3149   000890                     u2851:
  3150   000890  EFF0  F003         	goto	l480
  3151   000894                     u2850:
  3152   000894                     l483:
  3153   000894  0012               	return		;funcret
  3154   000896                     __end_of_triggerAlarm:
  3155                           	callstack 0
  3156                           
  3157 ;; *************** function _generateBeep *****************
  3158 ;; Defined at:
  3159 ;;		line 106 in file "main.c"
  3160 ;; Parameters:    Size  Location     Type
  3161 ;;  duration_ms     2   23[COMRAM] unsigned int 
  3162 ;; Auto vars:     Size  Location     Type
  3163 ;;  i               2   27[COMRAM] unsigned int 
  3164 ;;  cycles          2   25[COMRAM] unsigned int 
  3165 ;; Return value:  Size  Location     Type
  3166 ;;                  1    wreg      void 
  3167 ;; Registers used:
  3168 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3169 ;; Tracked objects:
  3170 ;;		On entry : 0/0
  3171 ;;		On exit  : 0/0
  3172 ;;		Unchanged: 0/0
  3173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3174 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3175 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3177 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3178 ;;Total ram usage:        6 bytes
  3179 ;; Hardware stack levels used: 1
  3180 ;; Hardware stack levels required when called: 5
  3181 ;; This function calls:
  3182 ;;		___lwdiv
  3183 ;;		___wmul
  3184 ;;		_delayMicroseconds
  3185 ;; This function is called by:
  3186 ;;		_triggerAlarm
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text3
  3191   000EBE                     __ptext3:
  3192                           	callstack 0
  3193   000EBE                     _generateBeep:
  3194                           	callstack 23
  3195   000EBE                     
  3196                           ;main.c: 107:     unsigned int i;;main.c: 108:     unsigned int cycles = (duration_ms * 
      +                          1000) / 244;
  3197   000EBE  C018  F00B         	movff	generateBeep@duration_ms,___wmul@multiplier
  3198   000EC2  C019  F00C         	movff	generateBeep@duration_ms+1,___wmul@multiplier+1
  3199   000EC6  0E03               	movlw	3
  3200   000EC8  6E0E               	movwf	(___wmul@multiplicand+1)^0,c
  3201   000ECA  0EE8               	movlw	232
  3202   000ECC  6E0D               	movwf	___wmul@multiplicand^0,c
  3203   000ECE  ECE4  F008         	call	___wmul	;wreg free
  3204   000ED2  C00B  F011         	movff	?___wmul,___lwdiv@dividend
  3205   000ED6  C00C  F012         	movff	?___wmul+1,___lwdiv@dividend+1
  3206   000EDA  0E00               	movlw	0
  3207   000EDC  6E14               	movwf	(___lwdiv@divisor+1)^0,c
  3208   000EDE  0EF4               	movlw	244
  3209   000EE0  6E13               	movwf	___lwdiv@divisor^0,c
  3210   000EE2  EC99  F007         	call	___lwdiv	;wreg free
  3211   000EE6  C011  F01A         	movff	?___lwdiv,generateBeep@cycles
  3212   000EEA  C012  F01B         	movff	?___lwdiv+1,generateBeep@cycles+1
  3213   000EEE                     
  3214                           ;main.c: 109:     for (i = 0; i < cycles; i++) {
  3215   000EEE  0E00               	movlw	0
  3216   000EF0  6E1D               	movwf	(generateBeep@i+1)^0,c
  3217   000EF2  0E00               	movlw	0
  3218   000EF4  6E1C               	movwf	generateBeep@i^0,c
  3219   000EF6  EF8D  F007         	goto	l2634
  3220   000EFA                     l441:
  3221                           
  3222                           ;main.c: 110:         LATBbits.LATB3 = 1;
  3223   000EFA  868A               	bsf	138,3,c	;volatile
  3224   000EFC                     
  3225                           ;main.c: 111:         delayMicroseconds(122);
  3226   000EFC  0E00               	movlw	0
  3227   000EFE  6E0C               	movwf	(delayMicroseconds@microseconds+1)^0,c
  3228   000F00  0E7A               	movlw	122
  3229   000F02  6E0B               	movwf	delayMicroseconds@microseconds^0,c
  3230   000F04  ECCF  F008         	call	_delayMicroseconds	;wreg free
  3231   000F08                     
  3232                           ;main.c: 112:         LATBbits.LATB3 = 0;
  3233   000F08  968A               	bcf	138,3,c	;volatile
  3234                           
  3235                           ;main.c: 113:         delayMicroseconds(122);
  3236   000F0A  0E00               	movlw	0
  3237   000F0C  6E0C               	movwf	(delayMicroseconds@microseconds+1)^0,c
  3238   000F0E  0E7A               	movlw	122
  3239   000F10  6E0B               	movwf	delayMicroseconds@microseconds^0,c
  3240   000F12  ECCF  F008         	call	_delayMicroseconds	;wreg free
  3241   000F16                     
  3242                           ;main.c: 114:     }
  3243   000F16  4A1C               	infsnz	generateBeep@i^0,f,c
  3244   000F18  2A1D               	incf	(generateBeep@i+1)^0,f,c
  3245   000F1A                     l2634:
  3246   000F1A  501A               	movf	generateBeep@cycles^0,w,c
  3247   000F1C  5C1C               	subwf	generateBeep@i^0,w,c
  3248   000F1E  501B               	movf	(generateBeep@cycles+1)^0,w,c
  3249   000F20  581D               	subwfb	(generateBeep@i+1)^0,w,c
  3250   000F22  A0D8               	btfss	status,0,c
  3251   000F24  EF96  F007         	goto	u1621
  3252   000F28  EF98  F007         	goto	u1620
  3253   000F2C                     u1621:
  3254   000F2C  EF7D  F007         	goto	l441
  3255   000F30                     u1620:
  3256   000F30  0012               	return		;funcret
  3257   000F32                     __end_of_generateBeep:
  3258                           	callstack 0
  3259                           
  3260 ;; *************** function _delayMicroseconds *****************
  3261 ;; Defined at:
  3262 ;;		line 96 in file "main.c"
  3263 ;; Parameters:    Size  Location     Type
  3264 ;;  microseconds    2   10[COMRAM] unsigned int 
  3265 ;; Auto vars:     Size  Location     Type
  3266 ;;  i               2   12[COMRAM] unsigned int 
  3267 ;; Return value:  Size  Location     Type
  3268 ;;                  1    wreg      void 
  3269 ;; Registers used:
  3270 ;;		wreg, status,2, status,0
  3271 ;; Tracked objects:
  3272 ;;		On entry : 0/0
  3273 ;;		On exit  : 0/0
  3274 ;;		Unchanged: 0/0
  3275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3276 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3277 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3279 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3280 ;;Total ram usage:        4 bytes
  3281 ;; Hardware stack levels used: 1
  3282 ;; Hardware stack levels required when called: 4
  3283 ;; This function calls:
  3284 ;;		Nothing
  3285 ;; This function is called by:
  3286 ;;		_generateBeep
  3287 ;; This function uses a non-reentrant model
  3288 ;;
  3289                           
  3290                           	psect	text4
  3291   00119E                     __ptext4:
  3292                           	callstack 0
  3293   00119E                     _delayMicroseconds:
  3294                           	callstack 23
  3295   00119E                     
  3296                           ;main.c: 98:     unsigned int i;;main.c: 99:     for (i = 0; i < microseconds; i++) {
  3297   00119E  0E00               	movlw	0
  3298   0011A0  6E0E               	movwf	(delayMicroseconds@i+1)^0,c
  3299   0011A2  0E00               	movlw	0
  3300   0011A4  6E0D               	movwf	delayMicroseconds@i^0,c
  3301   0011A6  EFD8  F008         	goto	l2446
  3302   0011AA                     l435:
  3303   0011AA  0000               	nop		;# 
  3304   0011AC                     
  3305                           ;main.c: 103:     }
  3306   0011AC  4A0D               	infsnz	delayMicroseconds@i^0,f,c
  3307   0011AE  2A0E               	incf	(delayMicroseconds@i+1)^0,f,c
  3308   0011B0                     l2446:
  3309   0011B0  500B               	movf	delayMicroseconds@microseconds^0,w,c
  3310   0011B2  5C0D               	subwf	delayMicroseconds@i^0,w,c
  3311   0011B4  500C               	movf	(delayMicroseconds@microseconds+1)^0,w,c
  3312   0011B6  580E               	subwfb	(delayMicroseconds@i+1)^0,w,c
  3313   0011B8  A0D8               	btfss	status,0,c
  3314   0011BA  EFE1  F008         	goto	u1391
  3315   0011BE  EFE3  F008         	goto	u1390
  3316   0011C2                     u1391:
  3317   0011C2  EFD5  F008         	goto	l435
  3318   0011C6                     u1390:
  3319   0011C6  0012               	return		;funcret
  3320   0011C8                     __end_of_delayMicroseconds:
  3321                           	callstack 0
  3322                           
  3323 ;; *************** function ___wmul *****************
  3324 ;; Defined at:
  3325 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3326 ;; Parameters:    Size  Location     Type
  3327 ;;  multiplier      2   10[COMRAM] unsigned int 
  3328 ;;  multiplicand    2   12[COMRAM] unsigned int 
  3329 ;; Auto vars:     Size  Location     Type
  3330 ;;  product         2   14[COMRAM] unsigned int 
  3331 ;; Return value:  Size  Location     Type
  3332 ;;                  2   10[COMRAM] unsigned int 
  3333 ;; Registers used:
  3334 ;;		wreg, status,2, status,0, prodl, prodh
  3335 ;; Tracked objects:
  3336 ;;		On entry : 0/0
  3337 ;;		On exit  : 0/0
  3338 ;;		Unchanged: 0/0
  3339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3340 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3341 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3343 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3344 ;;Total ram usage:        6 bytes
  3345 ;; Hardware stack levels used: 1
  3346 ;; Hardware stack levels required when called: 4
  3347 ;; This function calls:
  3348 ;;		Nothing
  3349 ;; This function is called by:
  3350 ;;		_generateBeep
  3351 ;; This function uses a non-reentrant model
  3352 ;;
  3353                           
  3354                           	psect	text5
  3355   0011C8                     __ptext5:
  3356                           	callstack 0
  3357   0011C8                     ___wmul:
  3358                           	callstack 23
  3359   0011C8  500B               	movf	___wmul@multiplier^0,w,c
  3360   0011CA  020D               	mulwf	___wmul@multiplicand^0,c
  3361   0011CC  CFF3 F00F          	movff	prodl,___wmul@product
  3362   0011D0  CFF4 F010          	movff	prodh,___wmul@product+1
  3363   0011D4  500B               	movf	___wmul@multiplier^0,w,c
  3364   0011D6  020E               	mulwf	(___wmul@multiplicand+1)^0,c
  3365   0011D8  50F3               	movf	243,w,c
  3366   0011DA  2610               	addwf	(___wmul@product+1)^0,f,c
  3367   0011DC  500C               	movf	(___wmul@multiplier+1)^0,w,c
  3368   0011DE  020D               	mulwf	___wmul@multiplicand^0,c
  3369   0011E0  50F3               	movf	243,w,c
  3370   0011E2  2610               	addwf	(___wmul@product+1)^0,f,c
  3371   0011E4  C00F  F00B         	movff	___wmul@product,?___wmul
  3372   0011E8  C010  F00C         	movff	___wmul@product+1,?___wmul+1
  3373   0011EC  0012               	return		;funcret
  3374   0011EE                     __end_of___wmul:
  3375                           	callstack 0
  3376                           
  3377 ;; *************** function ___lwdiv *****************
  3378 ;; Defined at:
  3379 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3380 ;; Parameters:    Size  Location     Type
  3381 ;;  dividend        2   16[COMRAM] unsigned int 
  3382 ;;  divisor         2   18[COMRAM] unsigned int 
  3383 ;; Auto vars:     Size  Location     Type
  3384 ;;  quotient        2   20[COMRAM] unsigned int 
  3385 ;;  counter         1   22[COMRAM] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  2   16[COMRAM] unsigned int 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3395 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3396 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3398 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3399 ;;Total ram usage:        7 bytes
  3400 ;; Hardware stack levels used: 1
  3401 ;; Hardware stack levels required when called: 4
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_generateBeep
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text6
  3410   000F32                     __ptext6:
  3411                           	callstack 0
  3412   000F32                     ___lwdiv:
  3413                           	callstack 23
  3414   000F32  0E00               	movlw	0
  3415   000F34  6E16               	movwf	(___lwdiv@quotient+1)^0,c
  3416   000F36  0E00               	movlw	0
  3417   000F38  6E15               	movwf	___lwdiv@quotient^0,c
  3418   000F3A  5013               	movf	___lwdiv@divisor^0,w,c
  3419   000F3C  1014               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3420   000F3E  B4D8               	btfsc	status,2,c
  3421   000F40  EFA4  F007         	goto	u1471
  3422   000F44  EFA6  F007         	goto	u1470
  3423   000F48                     u1471:
  3424   000F48  EFCE  F007         	goto	l1122
  3425   000F4C                     u1470:
  3426   000F4C  0E01               	movlw	1
  3427   000F4E  6E17               	movwf	___lwdiv@counter^0,c
  3428   000F50  EFAE  F007         	goto	l2502
  3429   000F54                     l2500:
  3430   000F54  90D8               	bcf	status,0,c
  3431   000F56  3613               	rlcf	___lwdiv@divisor^0,f,c
  3432   000F58  3614               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3433   000F5A  2A17               	incf	___lwdiv@counter^0,f,c
  3434   000F5C                     l2502:
  3435   000F5C  AE14               	btfss	(___lwdiv@divisor+1)^0,7,c
  3436   000F5E  EFB3  F007         	goto	u1481
  3437   000F62  EFB5  F007         	goto	u1480
  3438   000F66                     u1481:
  3439   000F66  EFAA  F007         	goto	l2500
  3440   000F6A                     u1480:
  3441   000F6A                     l2504:
  3442   000F6A  90D8               	bcf	status,0,c
  3443   000F6C  3615               	rlcf	___lwdiv@quotient^0,f,c
  3444   000F6E  3616               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3445   000F70  5013               	movf	___lwdiv@divisor^0,w,c
  3446   000F72  5C11               	subwf	___lwdiv@dividend^0,w,c
  3447   000F74  5014               	movf	(___lwdiv@divisor+1)^0,w,c
  3448   000F76  5812               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3449   000F78  A0D8               	btfss	status,0,c
  3450   000F7A  EFC1  F007         	goto	u1491
  3451   000F7E  EFC3  F007         	goto	u1490
  3452   000F82                     u1491:
  3453   000F82  EFC8  F007         	goto	l2512
  3454   000F86                     u1490:
  3455   000F86  5013               	movf	___lwdiv@divisor^0,w,c
  3456   000F88  5E11               	subwf	___lwdiv@dividend^0,f,c
  3457   000F8A  5014               	movf	(___lwdiv@divisor+1)^0,w,c
  3458   000F8C  5A12               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3459   000F8E  8015               	bsf	___lwdiv@quotient^0,0,c
  3460   000F90                     l2512:
  3461   000F90  90D8               	bcf	status,0,c
  3462   000F92  3214               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3463   000F94  3213               	rrcf	___lwdiv@divisor^0,f,c
  3464   000F96  2E17               	decfsz	___lwdiv@counter^0,f,c
  3465   000F98  EFB5  F007         	goto	l2504
  3466   000F9C                     l1122:
  3467   000F9C  C015  F011         	movff	___lwdiv@quotient,?___lwdiv
  3468   000FA0  C016  F012         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3469   000FA4  0012               	return		;funcret
  3470   000FA6                     __end_of___lwdiv:
  3471                           	callstack 0
  3472                           
  3473 ;; *************** function _clearDisplay *****************
  3474 ;; Defined at:
  3475 ;;		line 105 in file "MAX7219.c"
  3476 ;; Parameters:    Size  Location     Type
  3477 ;;		None
  3478 ;; Auto vars:     Size  Location     Type
  3479 ;;  i               2    0[BANK0 ] int 
  3480 ;; Return value:  Size  Location     Type
  3481 ;;                  1    wreg      void 
  3482 ;; Registers used:
  3483 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3484 ;; Tracked objects:
  3485 ;;		On entry : 0/0
  3486 ;;		On exit  : 0/0
  3487 ;;		Unchanged: 0/0
  3488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3489 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3490 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3491 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3492 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3493 ;;Total ram usage:        2 bytes
  3494 ;; Hardware stack levels used: 1
  3495 ;; Hardware stack levels required when called: 7
  3496 ;; This function calls:
  3497 ;;		_flushBuffer
  3498 ;; This function is called by:
  3499 ;;		_main
  3500 ;;		_triggerAlarm
  3501 ;; This function uses a non-reentrant model
  3502 ;;
  3503                           
  3504                           	psect	text7
  3505   001096                     __ptext7:
  3506                           	callstack 0
  3507   001096                     _clearDisplay:
  3508                           	callstack 21
  3509   001096                     
  3510                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  3511   001096  0E00               	movlw	0
  3512   001098  0100               	movlb	0	; () banked
  3513   00109A  6FAD               	movwf	(clearDisplay@i+1)& (0+255),b
  3514   00109C  0E00               	movlw	0
  3515   00109E  6FAC               	movwf	clearDisplay@i& (0+255),b
  3516   0010A0                     l3408:
  3517                           
  3518                           ; BSR set to: 0
  3519                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  3520   0010A0  51AC               	movf	clearDisplay@i& (0+255),w,b
  3521   0010A2  0F60               	addlw	low _bufferCol
  3522   0010A4  6ED9               	movwf	fsr2l,c
  3523   0010A6  6ADA               	clrf	fsr2h,c
  3524   0010A8  6ADF               	clrf	indf2,c
  3525   0010AA                     
  3526                           ; BSR set to: 0
  3527                           ;MAX7219.c: 110:  }
  3528   0010AA  4BAC               	infsnz	clearDisplay@i& (0+255),f,b
  3529   0010AC  2BAD               	incf	(clearDisplay@i+1)& (0+255),f,b
  3530   0010AE                     
  3531                           ; BSR set to: 0
  3532   0010AE  BFAD               	btfsc	(clearDisplay@i+1)& (0+255),7,b
  3533   0010B0  EF63  F008         	goto	u2701
  3534   0010B4  51AD               	movf	(clearDisplay@i+1)& (0+255),w,b
  3535   0010B6  E109               	bnz	u2700
  3536   0010B8  0E1F               	movlw	31
  3537   0010BA  5DAC               	subwf	clearDisplay@i& (0+255),w,b
  3538   0010BC  A0D8               	btfss	status,0,c
  3539   0010BE  EF63  F008         	goto	u2701
  3540   0010C2  EF65  F008         	goto	u2700
  3541   0010C6                     u2701:
  3542   0010C6  EF50  F008         	goto	l3408
  3543   0010CA                     u2700:
  3544   0010CA                     
  3545                           ; BSR set to: 0
  3546                           ;MAX7219.c: 111:  flushBuffer();
  3547   0010CA  EC6B  F002         	call	_flushBuffer	;wreg free
  3548   0010CE  0012               	return		;funcret
  3549   0010D0                     __end_of_clearDisplay:
  3550                           	callstack 0
  3551                           
  3552 ;; *************** function _matrixInit *****************
  3553 ;; Defined at:
  3554 ;;		line 96 in file "MAX7219.c"
  3555 ;; Parameters:    Size  Location     Type
  3556 ;;		None
  3557 ;; Auto vars:     Size  Location     Type
  3558 ;;		None
  3559 ;; Return value:  Size  Location     Type
  3560 ;;                  1    wreg      void 
  3561 ;; Registers used:
  3562 ;;		wreg, status,2, status,0, cstack
  3563 ;; Tracked objects:
  3564 ;;		On entry : 0/0
  3565 ;;		On exit  : 0/0
  3566 ;;		Unchanged: 0/0
  3567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3568 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3571 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3572 ;;Total ram usage:        0 bytes
  3573 ;; Hardware stack levels used: 1
  3574 ;; Hardware stack levels required when called: 6
  3575 ;; This function calls:
  3576 ;;		_max7219_cmd
  3577 ;; This function is called by:
  3578 ;;		_main
  3579 ;; This function uses a non-reentrant model
  3580 ;;
  3581                           
  3582                           	psect	text8
  3583   001108                     __ptext8:
  3584                           	callstack 0
  3585   001108                     _matrixInit:
  3586                           	callstack 24
  3587   001108                     
  3588                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  3589   001108  0E00               	movlw	0
  3590   00110A  6E0C               	movwf	max7219_cmd@data^0,c
  3591   00110C  0E09               	movlw	9
  3592   00110E  ECFC  F007         	call	_max7219_cmd
  3593                           
  3594                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  3595   001112  0E01               	movlw	1
  3596   001114  6E0C               	movwf	max7219_cmd@data^0,c
  3597   001116  0E0A               	movlw	10
  3598   001118  ECFC  F007         	call	_max7219_cmd
  3599                           
  3600                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  3601   00111C  0E07               	movlw	7
  3602   00111E  6E0C               	movwf	max7219_cmd@data^0,c
  3603   001120  0E0B               	movlw	11
  3604   001122  ECFC  F007         	call	_max7219_cmd
  3605                           
  3606                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  3607   001126  0E01               	movlw	1
  3608   001128  6E0C               	movwf	max7219_cmd@data^0,c
  3609   00112A  0E0C               	movlw	12
  3610   00112C  ECFC  F007         	call	_max7219_cmd
  3611                           
  3612                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  3613   001130  0E00               	movlw	0
  3614   001132  6E0C               	movwf	max7219_cmd@data^0,c
  3615   001134  0E0F               	movlw	15
  3616   001136  ECFC  F007         	call	_max7219_cmd
  3617   00113A  0012               	return		;funcret
  3618   00113C                     __end_of_matrixInit:
  3619                           	callstack 0
  3620                           
  3621 ;; *************** function _max7219_cmd *****************
  3622 ;; Defined at:
  3623 ;;		line 76 in file "MAX7219.c"
  3624 ;; Parameters:    Size  Location     Type
  3625 ;;  Addr            1    wreg     unsigned char 
  3626 ;;  data            1   11[COMRAM] unsigned char 
  3627 ;; Auto vars:     Size  Location     Type
  3628 ;;  Addr            1   14[COMRAM] unsigned char 
  3629 ;;  i               2   17[COMRAM] int 
  3630 ;;  writeData       2   15[COMRAM] unsigned short 
  3631 ;; Return value:  Size  Location     Type
  3632 ;;                  1    wreg      void 
  3633 ;; Registers used:
  3634 ;;		wreg, status,2, status,0, cstack
  3635 ;; Tracked objects:
  3636 ;;		On entry : 0/0
  3637 ;;		On exit  : 0/0
  3638 ;;		Unchanged: 0/0
  3639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3640 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3643 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;Total ram usage:        8 bytes
  3645 ;; Hardware stack levels used: 1
  3646 ;; Hardware stack levels required when called: 5
  3647 ;; This function calls:
  3648 ;;		_SPI_Exchange8bit
  3649 ;; This function is called by:
  3650 ;;		_matrixInit
  3651 ;; This function uses a non-reentrant model
  3652 ;;
  3653                           
  3654                           	psect	text9
  3655   000FF8                     __ptext9:
  3656                           	callstack 0
  3657   000FF8                     _max7219_cmd:
  3658                           	callstack 24
  3659                           
  3660                           ;incstack = 0
  3661                           ;max7219_cmd@Addr stored from wreg
  3662   000FF8  6E0F               	movwf	max7219_cmd@Addr^0,c
  3663   000FFA                     
  3664                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  3665   000FFA  500C               	movf	max7219_cmd@data^0,w,c
  3666   000FFC  C00F  F00D         	movff	max7219_cmd@Addr,??_max7219_cmd
  3667   001000  6A0E               	clrf	(??_max7219_cmd+1)^0,c
  3668   001002  C00D  F00E         	movff	??_max7219_cmd,??_max7219_cmd+1
  3669   001006  6A0D               	clrf	??_max7219_cmd^0,c
  3670   001008  100D               	iorwf	??_max7219_cmd^0,w,c
  3671   00100A  6E10               	movwf	max7219_cmd@writeData^0,c
  3672   00100C  500E               	movf	(??_max7219_cmd+1)^0,w,c
  3673   00100E  6E11               	movwf	(max7219_cmd@writeData+1)^0,c
  3674   001010  948B               	bcf	139,2,c	;volatile
  3675   001012                     
  3676                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  3677   001012  0E00               	movlw	0
  3678   001014  6E13               	movwf	(max7219_cmd@i+1)^0,c
  3679   001016  0E00               	movlw	0
  3680   001018  6E12               	movwf	max7219_cmd@i^0,c
  3681   00101A                     l3534:
  3682                           
  3683                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  3684   00101A  5011               	movf	(max7219_cmd@writeData+1)^0,w,c
  3685   00101C  EC1B  F009         	call	_SPI_Exchange8bit
  3686                           
  3687                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  3688   001020  5010               	movf	max7219_cmd@writeData^0,w,c
  3689   001022  EC1B  F009         	call	_SPI_Exchange8bit
  3690   001026                     
  3691                           ;MAX7219.c: 90:  }
  3692   001026  4A12               	infsnz	max7219_cmd@i^0,f,c
  3693   001028  2A13               	incf	(max7219_cmd@i+1)^0,f,c
  3694   00102A  BE13               	btfsc	(max7219_cmd@i+1)^0,7,c
  3695   00102C  EF21  F008         	goto	u2861
  3696   001030  5013               	movf	(max7219_cmd@i+1)^0,w,c
  3697   001032  E109               	bnz	u2860
  3698   001034  0E04               	movlw	4
  3699   001036  5C12               	subwf	max7219_cmd@i^0,w,c
  3700   001038  A0D8               	btfss	status,0,c
  3701   00103A  EF21  F008         	goto	u2861
  3702   00103E  EF23  F008         	goto	u2860
  3703   001042                     u2861:
  3704   001042  EF0D  F008         	goto	l3534
  3705   001046                     u2860:
  3706   001046  848B               	bsf	139,2,c	;volatile
  3707   001048  0012               	return		;funcret
  3708   00104A                     __end_of_max7219_cmd:
  3709                           	callstack 0
  3710                           
  3711 ;; *************** function _loadTimeFromFlash *****************
  3712 ;; Defined at:
  3713 ;;		line 367 in file "main.c"
  3714 ;; Parameters:    Size  Location     Type
  3715 ;;		None
  3716 ;; Auto vars:     Size  Location     Type
  3717 ;;  flashAddress    4    0        unsigned long 
  3718 ;; Return value:  Size  Location     Type
  3719 ;;                  1    wreg      void 
  3720 ;; Registers used:
  3721 ;;		wreg, status,2, status,0, cstack
  3722 ;; Tracked objects:
  3723 ;;		On entry : 0/0
  3724 ;;		On exit  : 0/0
  3725 ;;		Unchanged: 0/0
  3726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3727 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3730 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3731 ;;Total ram usage:        0 bytes
  3732 ;; Hardware stack levels used: 1
  3733 ;; Hardware stack levels required when called: 5
  3734 ;; This function calls:
  3735 ;;		_FLASH_ReadByte
  3736 ;; This function is called by:
  3737 ;;		_main
  3738 ;; This function uses a non-reentrant model
  3739 ;;
  3740                           
  3741                           	psect	text10
  3742   000AD4                     __ptext10:
  3743                           	callstack 0
  3744   000AD4                     _loadTimeFromFlash:
  3745                           	callstack 25
  3746   000AD4                     
  3747                           ;main.c: 370:     hours = FLASH_ReadByte(flashAddress);
  3748   000AD4  0E80               	movlw	128
  3749   000AD6  6E0B               	movwf	FLASH_ReadByte@flashAddr^0,c
  3750   000AD8  0E1F               	movlw	31
  3751   000ADA  6E0C               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3752   000ADC  0E00               	movlw	0
  3753   000ADE  6E0D               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3754   000AE0  0E00               	movlw	0
  3755   000AE2  6E0E               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3756   000AE4  EC35  F009         	call	_FLASH_ReadByte	;wreg free
  3757   000AE8  0100               	movlb	0	; () banked
  3758   000AEA  6FAB               	movwf	_hours& (0+255),b	;volatile
  3759   000AEC                     
  3760                           ; BSR set to: 0
  3761                           ;main.c: 371:     minutes = FLASH_ReadByte(flashAddress + 1);
  3762   000AEC  0E81               	movlw	129
  3763   000AEE  6E0B               	movwf	FLASH_ReadByte@flashAddr^0,c
  3764   000AF0  0E1F               	movlw	31
  3765   000AF2  6E0C               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3766   000AF4  0E00               	movlw	0
  3767   000AF6  6E0D               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3768   000AF8  0E00               	movlw	0
  3769   000AFA  6E0E               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3770   000AFC  EC35  F009         	call	_FLASH_ReadByte	;wreg free
  3771   000B00  0100               	movlb	0	; () banked
  3772   000B02  6FAA               	movwf	_minutes& (0+255),b	;volatile
  3773   000B04                     
  3774                           ; BSR set to: 0
  3775                           ;main.c: 372:     alarmHours = FLASH_ReadByte(flashAddress + 2);
  3776   000B04  0E82               	movlw	130
  3777   000B06  6E0B               	movwf	FLASH_ReadByte@flashAddr^0,c
  3778   000B08  0E1F               	movlw	31
  3779   000B0A  6E0C               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3780   000B0C  0E00               	movlw	0
  3781   000B0E  6E0D               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3782   000B10  0E00               	movlw	0
  3783   000B12  6E0E               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3784   000B14  EC35  F009         	call	_FLASH_ReadByte	;wreg free
  3785   000B18  0100               	movlb	0	; () banked
  3786   000B1A  6FA9               	movwf	_alarmHours& (0+255),b	;volatile
  3787   000B1C                     
  3788                           ; BSR set to: 0
  3789                           ;main.c: 373:     alarmMinutes = FLASH_ReadByte(flashAddress + 3);
  3790   000B1C  0E83               	movlw	131
  3791   000B1E  6E0B               	movwf	FLASH_ReadByte@flashAddr^0,c
  3792   000B20  0E1F               	movlw	31
  3793   000B22  6E0C               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3794   000B24  0E00               	movlw	0
  3795   000B26  6E0D               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3796   000B28  0E00               	movlw	0
  3797   000B2A  6E0E               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3798   000B2C  EC35  F009         	call	_FLASH_ReadByte	;wreg free
  3799   000B30  0100               	movlb	0	; () banked
  3800   000B32  6FA8               	movwf	_alarmMinutes& (0+255),b	;volatile
  3801   000B34                     
  3802                           ; BSR set to: 0
  3803                           ;main.c: 374:     alarmSet = FLASH_ReadByte(flashAddress + 4);
  3804   000B34  0E84               	movlw	132
  3805   000B36  6E0B               	movwf	FLASH_ReadByte@flashAddr^0,c
  3806   000B38  0E1F               	movlw	31
  3807   000B3A  6E0C               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3808   000B3C  0E00               	movlw	0
  3809   000B3E  6E0D               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3810   000B40  0E00               	movlw	0
  3811   000B42  6E0E               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3812   000B44  EC35  F009         	call	_FLASH_ReadByte	;wreg free
  3813   000B48  0900               	iorlw	0
  3814   000B4A  A4D8               	btfss	status,2,c
  3815   000B4C  EFAA  F005         	goto	u1961
  3816   000B50  EFAD  F005         	goto	u1960
  3817   000B54                     u1961:
  3818   000B54  0E01               	movlw	1
  3819   000B56  EFAE  F005         	goto	u1970
  3820   000B5A                     u1960:
  3821   000B5A  0E00               	movlw	0
  3822   000B5C                     u1970:
  3823   000B5C  0100               	movlb	0	; () banked
  3824   000B5E  6FA7               	movwf	_alarmSet& (0+255),b
  3825   000B60                     
  3826                           ; BSR set to: 0
  3827                           ;main.c: 376:     if (hours >= 24) hours = 0;
  3828   000B60  0E17               	movlw	23
  3829   000B62  65AB               	cpfsgt	_hours& (0+255),b	;volatile
  3830   000B64  EFB6  F005         	goto	u1981
  3831   000B68  EFB8  F005         	goto	u1980
  3832   000B6C                     u1981:
  3833   000B6C  EFBA  F005         	goto	l2956
  3834   000B70                     u1980:
  3835   000B70                     
  3836                           ; BSR set to: 0
  3837   000B70  0E00               	movlw	0
  3838   000B72  6FAB               	movwf	_hours& (0+255),b	;volatile
  3839   000B74                     l2956:
  3840                           
  3841                           ; BSR set to: 0
  3842                           ;main.c: 377:     if (minutes >= 60) minutes = 0;
  3843   000B74  0E3B               	movlw	59
  3844   000B76  65AA               	cpfsgt	_minutes& (0+255),b	;volatile
  3845   000B78  EFC0  F005         	goto	u1991
  3846   000B7C  EFC2  F005         	goto	u1990
  3847   000B80                     u1991:
  3848   000B80  EFC4  F005         	goto	l527
  3849   000B84                     u1990:
  3850   000B84                     
  3851                           ; BSR set to: 0
  3852   000B84  0E00               	movlw	0
  3853   000B86  6FAA               	movwf	_minutes& (0+255),b	;volatile
  3854   000B88                     l527:
  3855                           
  3856                           ; BSR set to: 0
  3857   000B88  0012               	return		;funcret
  3858   000B8A                     __end_of_loadTimeFromFlash:
  3859                           	callstack 0
  3860                           
  3861 ;; *************** function _checkButtons *****************
  3862 ;; Defined at:
  3863 ;;		line 243 in file "main.c"
  3864 ;; Parameters:    Size  Location     Type
  3865 ;;		None
  3866 ;; Auto vars:     Size  Location     Type
  3867 ;;		None
  3868 ;; Return value:  Size  Location     Type
  3869 ;;                  1    wreg      void 
  3870 ;; Registers used:
  3871 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3872 ;; Tracked objects:
  3873 ;;		On entry : 0/0
  3874 ;;		On exit  : 0/0
  3875 ;;		Unchanged: 0/0
  3876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3877 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3881 ;;Total ram usage:        2 bytes
  3882 ;; Hardware stack levels used: 1
  3883 ;; Hardware stack levels required when called: 9
  3884 ;; This function calls:
  3885 ;;		___awmod
  3886 ;;		_clearAlarm
  3887 ;;		_displayAlarmTime
  3888 ;;		_displayTime
  3889 ;;		_saveTimeToFlash
  3890 ;; This function is called by:
  3891 ;;		_main
  3892 ;; This function uses a non-reentrant model
  3893 ;;
  3894                           
  3895                           	psect	text11
  3896   0000AE                     __ptext11:
  3897                           	callstack 0
  3898   0000AE                     _checkButtons:
  3899                           	callstack 21
  3900   0000AE                     
  3901                           ;main.c: 245:     static uint8_t button3PressCount = 0;;main.c: 246:     static uint16_t
      +                           button3HoldTime = 0;;main.c: 247:     static _Bool alarmSettingMode = 0;;main.c: 250:  
      +                             if (!PORTBbits.RB0)
  3902   0000AE  B081               	btfsc	129,0,c	;volatile
  3903   0000B0  EF5C  F000         	goto	u2881
  3904   0000B4  EF5E  F000         	goto	u2880
  3905   0000B8                     u2881:
  3906   0000B8  EF9F  F000         	goto	l3574
  3907   0000BC                     u2880:
  3908   0000BC                     
  3909                           ;main.c: 251:     {;main.c: 252:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3910   0000BC  0E02               	movlw	2
  3911   0000BE  0100               	movlb	0	; () banked
  3912   0000C0  6FF2               	movwf	(??_checkButtons+1)& (0+255),b
  3913   0000C2  0E04               	movlw	4
  3914   0000C4  6FF1               	movwf	??_checkButtons& (0+255),b
  3915   0000C6  0EBA               	movlw	186
  3916   0000C8                     u3287:
  3917   0000C8  2EE8               	decfsz	wreg,f,c
  3918   0000CA  D7FE               	bra	u3287
  3919   0000CC  2FF1               	decfsz	??_checkButtons& (0+255),f,b
  3920   0000CE  D7FC               	bra	u3287
  3921   0000D0  2FF2               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3922   0000D2  D7FA               	bra	u3287
  3923   0000D4  0000               	nop	
  3924   0000D6                     
  3925                           ;main.c: 253:         if (!PORTBbits.RB0)
  3926   0000D6  B081               	btfsc	129,0,c	;volatile
  3927   0000D8  EF70  F000         	goto	u2891
  3928   0000DC  EF72  F000         	goto	u2890
  3929   0000E0                     u2891:
  3930   0000E0  EF9F  F000         	goto	l3574
  3931   0000E4                     u2890:
  3932   0000E4                     
  3933                           ;main.c: 254:         {;main.c: 255:             if (alarmSettingMode)
  3934   0000E4  0100               	movlb	0	; () banked
  3935   0000E6  51A0               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  3936   0000E8  B4D8               	btfsc	status,2,c
  3937   0000EA  EF79  F000         	goto	u2901
  3938   0000EE  EF7B  F000         	goto	u2900
  3939   0000F2                     u2901:
  3940   0000F2  EF8E  F000         	goto	l3570
  3941   0000F6                     u2900:
  3942   0000F6                     
  3943                           ; BSR set to: 0
  3944                           ;main.c: 256:             {;main.c: 257:                 alarmHours = (alarmHours + 1) %
      +                           24;
  3945   0000F6  0E01               	movlw	1
  3946   0000F8  25A9               	addwf	_alarmHours& (0+255),w,b	;volatile
  3947   0000FA  6E0B               	movwf	___awmod@dividend^0,c
  3948   0000FC  6A0C               	clrf	(___awmod@dividend+1)^0,c
  3949   0000FE  0E00               	movlw	0
  3950   000100  220C               	addwfc	(___awmod@dividend+1)^0,f,c
  3951   000102  0E00               	movlw	0
  3952   000104  6E0E               	movwf	(___awmod@divisor+1)^0,c
  3953   000106  0E18               	movlw	24
  3954   000108  6E0D               	movwf	___awmod@divisor^0,c
  3955   00010A  EC79  F006         	call	___awmod	;wreg free
  3956   00010E  500B               	movf	?___awmod^0,w,c
  3957   000110  0100               	movlb	0	; () banked
  3958   000112  6FA9               	movwf	_alarmHours& (0+255),b	;volatile
  3959   000114                     
  3960                           ; BSR set to: 0
  3961                           ;main.c: 258:                 displayAlarmTime();
  3962   000114  EC1F  F006         	call	_displayAlarmTime	;wreg free
  3963                           
  3964                           ;main.c: 259:             }
  3965   000118  EF9F  F000         	goto	l3574
  3966   00011C                     l3570:
  3967                           
  3968                           ; BSR set to: 0
  3969                           ;main.c: 261:             {;main.c: 262:                 hours = (hours + 1) % 24;
  3970   00011C  0E01               	movlw	1
  3971   00011E  25AB               	addwf	_hours& (0+255),w,b	;volatile
  3972   000120  6E0B               	movwf	___awmod@dividend^0,c
  3973   000122  6A0C               	clrf	(___awmod@dividend+1)^0,c
  3974   000124  0E00               	movlw	0
  3975   000126  220C               	addwfc	(___awmod@dividend+1)^0,f,c
  3976   000128  0E00               	movlw	0
  3977   00012A  6E0E               	movwf	(___awmod@divisor+1)^0,c
  3978   00012C  0E18               	movlw	24
  3979   00012E  6E0D               	movwf	___awmod@divisor^0,c
  3980   000130  EC79  F006         	call	___awmod	;wreg free
  3981   000134  500B               	movf	?___awmod^0,w,c
  3982   000136  0100               	movlb	0	; () banked
  3983   000138  6FAB               	movwf	_hours& (0+255),b	;volatile
  3984   00013A                     
  3985                           ; BSR set to: 0
  3986                           ;main.c: 263:                 displayTime();
  3987   00013A  ECC5  F005         	call	_displayTime	;wreg free
  3988   00013E                     l3574:
  3989                           
  3990                           ;main.c: 269:     if (!PORTBbits.RB1)
  3991   00013E  B281               	btfsc	129,1,c	;volatile
  3992   000140  EFA4  F000         	goto	u2911
  3993   000144  EFA6  F000         	goto	u2910
  3994   000148                     u2911:
  3995   000148  EFE7  F000         	goto	l3590
  3996   00014C                     u2910:
  3997   00014C                     
  3998                           ;main.c: 270:     {;main.c: 271:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3999   00014C  0E02               	movlw	2
  4000   00014E  0100               	movlb	0	; () banked
  4001   000150  6FF2               	movwf	(??_checkButtons+1)& (0+255),b
  4002   000152  0E04               	movlw	4
  4003   000154  6FF1               	movwf	??_checkButtons& (0+255),b
  4004   000156  0EBA               	movlw	186
  4005   000158                     u3297:
  4006   000158  2EE8               	decfsz	wreg,f,c
  4007   00015A  D7FE               	bra	u3297
  4008   00015C  2FF1               	decfsz	??_checkButtons& (0+255),f,b
  4009   00015E  D7FC               	bra	u3297
  4010   000160  2FF2               	decfsz	(??_checkButtons+1)& (0+255),f,b
  4011   000162  D7FA               	bra	u3297
  4012   000164  0000               	nop	
  4013   000166                     
  4014                           ;main.c: 272:         if (!PORTBbits.RB1)
  4015   000166  B281               	btfsc	129,1,c	;volatile
  4016   000168  EFB8  F000         	goto	u2921
  4017   00016C  EFBA  F000         	goto	u2920
  4018   000170                     u2921:
  4019   000170  EFE7  F000         	goto	l3590
  4020   000174                     u2920:
  4021   000174                     
  4022                           ;main.c: 273:         {;main.c: 274:             if (alarmSettingMode)
  4023   000174  0100               	movlb	0	; () banked
  4024   000176  51A0               	movf	checkButtons@alarmSettingMode& (0+255),w,b
  4025   000178  B4D8               	btfsc	status,2,c
  4026   00017A  EFC1  F000         	goto	u2931
  4027   00017E  EFC3  F000         	goto	u2930
  4028   000182                     u2931:
  4029   000182  EFD6  F000         	goto	l3586
  4030   000186                     u2930:
  4031   000186                     
  4032                           ; BSR set to: 0
  4033                           ;main.c: 275:             {;main.c: 276:                 alarmMinutes = (alarmMinutes + 
      +                          1) % 60;
  4034   000186  0E01               	movlw	1
  4035   000188  25A8               	addwf	_alarmMinutes& (0+255),w,b	;volatile
  4036   00018A  6E0B               	movwf	___awmod@dividend^0,c
  4037   00018C  6A0C               	clrf	(___awmod@dividend+1)^0,c
  4038   00018E  0E00               	movlw	0
  4039   000190  220C               	addwfc	(___awmod@dividend+1)^0,f,c
  4040   000192  0E00               	movlw	0
  4041   000194  6E0E               	movwf	(___awmod@divisor+1)^0,c
  4042   000196  0E3C               	movlw	60
  4043   000198  6E0D               	movwf	___awmod@divisor^0,c
  4044   00019A  EC79  F006         	call	___awmod	;wreg free
  4045   00019E  500B               	movf	?___awmod^0,w,c
  4046   0001A0  0100               	movlb	0	; () banked
  4047   0001A2  6FA8               	movwf	_alarmMinutes& (0+255),b	;volatile
  4048   0001A4                     
  4049                           ; BSR set to: 0
  4050                           ;main.c: 277:                 displayAlarmTime();
  4051   0001A4  EC1F  F006         	call	_displayAlarmTime	;wreg free
  4052                           
  4053                           ;main.c: 278:             }
  4054   0001A8  EFE7  F000         	goto	l3590
  4055   0001AC                     l3586:
  4056                           
  4057                           ; BSR set to: 0
  4058                           ;main.c: 280:             {;main.c: 281:                 minutes = (minutes + 1) % 60;
  4059   0001AC  0E01               	movlw	1
  4060   0001AE  25AA               	addwf	_minutes& (0+255),w,b	;volatile
  4061   0001B0  6E0B               	movwf	___awmod@dividend^0,c
  4062   0001B2  6A0C               	clrf	(___awmod@dividend+1)^0,c
  4063   0001B4  0E00               	movlw	0
  4064   0001B6  220C               	addwfc	(___awmod@dividend+1)^0,f,c
  4065   0001B8  0E00               	movlw	0
  4066   0001BA  6E0E               	movwf	(___awmod@divisor+1)^0,c
  4067   0001BC  0E3C               	movlw	60
  4068   0001BE  6E0D               	movwf	___awmod@divisor^0,c
  4069   0001C0  EC79  F006         	call	___awmod	;wreg free
  4070   0001C4  500B               	movf	?___awmod^0,w,c
  4071   0001C6  0100               	movlb	0	; () banked
  4072   0001C8  6FAA               	movwf	_minutes& (0+255),b	;volatile
  4073   0001CA                     
  4074                           ; BSR set to: 0
  4075                           ;main.c: 282:                 displayTime();
  4076   0001CA  ECC5  F005         	call	_displayTime	;wreg free
  4077   0001CE                     l3590:
  4078                           
  4079                           ;main.c: 288:     if (!PORTBbits.RB2)
  4080   0001CE  B481               	btfsc	129,2,c	;volatile
  4081   0001D0  EFEC  F000         	goto	u2941
  4082   0001D4  EFEE  F000         	goto	u2940
  4083   0001D8                     u2941:
  4084   0001D8  EF82  F001         	goto	l3628
  4085   0001DC                     u2940:
  4086   0001DC                     
  4087                           ;main.c: 289:     {;main.c: 290:         button3HoldTime += 100;
  4088   0001DC  0E64               	movlw	100
  4089   0001DE  0100               	movlb	0	; () banked
  4090   0001E0  279A               	addwf	checkButtons@button3HoldTime& (0+255),f,b
  4091   0001E2  0E00               	movlw	0
  4092   0001E4  239B               	addwfc	(checkButtons@button3HoldTime+1)& (0+255),f,b
  4093   0001E6                     
  4094                           ; BSR set to: 0
  4095                           ;main.c: 291:         _delay((unsigned long)((100)*(8000000/4000.0)));
  4096   0001E6  0E02               	movlw	2
  4097   0001E8  0100               	movlb	0	; () banked
  4098   0001EA  6FF2               	movwf	(??_checkButtons+1)& (0+255),b
  4099   0001EC  0E04               	movlw	4
  4100   0001EE  6FF1               	movwf	??_checkButtons& (0+255),b
  4101   0001F0  0EBA               	movlw	186
  4102   0001F2                     u3307:
  4103   0001F2  2EE8               	decfsz	wreg,f,c
  4104   0001F4  D7FE               	bra	u3307
  4105   0001F6  2FF1               	decfsz	??_checkButtons& (0+255),f,b
  4106   0001F8  D7FC               	bra	u3307
  4107   0001FA  2FF2               	decfsz	(??_checkButtons+1)& (0+255),f,b
  4108   0001FC  D7FA               	bra	u3307
  4109   0001FE  0000               	nop	
  4110   000200                     
  4111                           ;main.c: 293:         if (button3HoldTime >= 1000)
  4112   000200  0EE8               	movlw	232
  4113   000202  0100               	movlb	0	; () banked
  4114   000204  5D9A               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  4115   000206  0E03               	movlw	3
  4116   000208  599B               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  4117   00020A  A0D8               	btfss	status,0,c
  4118   00020C  EF0A  F001         	goto	u2951
  4119   000210  EF0C  F001         	goto	u2950
  4120   000214                     u2951:
  4121   000214  EF76  F001         	goto	l3624
  4122   000218                     u2950:
  4123   000218                     
  4124                           ; BSR set to: 0
  4125                           ;main.c: 294:         {;main.c: 295:             if (!alarmTriggered)
  4126   000218  51A5               	movf	_alarmTriggered& (0+255),w,b
  4127   00021A  A4D8               	btfss	status,2,c
  4128   00021C  EF12  F001         	goto	u2961
  4129   000220  EF14  F001         	goto	u2960
  4130   000224                     u2961:
  4131   000224  EFA1  F001         	goto	l517
  4132   000228                     u2960:
  4133   000228                     
  4134                           ; BSR set to: 0
  4135                           ;main.c: 296:             {;main.c: 297:                 alarmSettingMode = 1;
  4136   000228  0E01               	movlw	1
  4137   00022A  6FA0               	movwf	checkButtons@alarmSettingMode& (0+255),b
  4138   00022C                     l3602:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;main.c: 298:                 displayAlarmTime();
  4142   00022C  EC1F  F006         	call	_displayAlarmTime	;wreg free
  4143                           
  4144                           ;main.c: 300:                 while (!PORTBbits.RB2)
  4145   000230  EF66  F001         	goto	l3618
  4146   000234                     l508:
  4147                           
  4148                           ;main.c: 301:                 {;main.c: 302:                     if (!PORTBbits.RB0)
  4149   000234  B081               	btfsc	129,0,c	;volatile
  4150   000236  EF1F  F001         	goto	u2971
  4151   00023A  EF21  F001         	goto	u2970
  4152   00023E                     u2971:
  4153   00023E  EF40  F001         	goto	l3610
  4154   000242                     u2970:
  4155   000242                     
  4156                           ;main.c: 303:                     {;main.c: 304:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  4157   000242  0E02               	movlw	2
  4158   000244  0100               	movlb	0	; () banked
  4159   000246  6FF2               	movwf	(??_checkButtons+1)& (0+255),b
  4160   000248  0E04               	movlw	4
  4161   00024A  6FF1               	movwf	??_checkButtons& (0+255),b
  4162   00024C  0EBA               	movlw	186
  4163   00024E                     u3317:
  4164   00024E  2EE8               	decfsz	wreg,f,c
  4165   000250  D7FE               	bra	u3317
  4166   000252  2FF1               	decfsz	??_checkButtons& (0+255),f,b
  4167   000254  D7FC               	bra	u3317
  4168   000256  2FF2               	decfsz	(??_checkButtons+1)& (0+255),f,b
  4169   000258  D7FA               	bra	u3317
  4170   00025A  0000               	nop	
  4171   00025C                     
  4172                           ;main.c: 305:                         alarmHours = (alarmHours + 1) % 24;
  4173   00025C  0E01               	movlw	1
  4174   00025E  0100               	movlb	0	; () banked
  4175   000260  25A9               	addwf	_alarmHours& (0+255),w,b	;volatile
  4176   000262  6E0B               	movwf	___awmod@dividend^0,c
  4177   000264  6A0C               	clrf	(___awmod@dividend+1)^0,c
  4178   000266  0E00               	movlw	0
  4179   000268  220C               	addwfc	(___awmod@dividend+1)^0,f,c
  4180   00026A  0E00               	movlw	0
  4181   00026C  6E0E               	movwf	(___awmod@divisor+1)^0,c
  4182   00026E  0E18               	movlw	24
  4183   000270  6E0D               	movwf	___awmod@divisor^0,c
  4184   000272  EC79  F006         	call	___awmod	;wreg free
  4185   000276  500B               	movf	?___awmod^0,w,c
  4186   000278  0100               	movlb	0	; () banked
  4187   00027A  6FA9               	movwf	_alarmHours& (0+255),b	;volatile
  4188   00027C                     
  4189                           ; BSR set to: 0
  4190                           ;main.c: 306:                         displayAlarmTime();
  4191   00027C  EC1F  F006         	call	_displayAlarmTime	;wreg free
  4192   000280                     l3610:
  4193                           
  4194                           ;main.c: 308:                     if (!PORTBbits.RB1)
  4195   000280  B281               	btfsc	129,1,c	;volatile
  4196   000282  EF45  F001         	goto	u2981
  4197   000286  EF47  F001         	goto	u2980
  4198   00028A                     u2981:
  4199   00028A  EF66  F001         	goto	l3618
  4200   00028E                     u2980:
  4201   00028E                     
  4202                           ;main.c: 309:                     {;main.c: 310:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  4203   00028E  0E02               	movlw	2
  4204   000290  0100               	movlb	0	; () banked
  4205   000292  6FF2               	movwf	(??_checkButtons+1)& (0+255),b
  4206   000294  0E04               	movlw	4
  4207   000296  6FF1               	movwf	??_checkButtons& (0+255),b
  4208   000298  0EBA               	movlw	186
  4209   00029A                     u3327:
  4210   00029A  2EE8               	decfsz	wreg,f,c
  4211   00029C  D7FE               	bra	u3327
  4212   00029E  2FF1               	decfsz	??_checkButtons& (0+255),f,b
  4213   0002A0  D7FC               	bra	u3327
  4214   0002A2  2FF2               	decfsz	(??_checkButtons+1)& (0+255),f,b
  4215   0002A4  D7FA               	bra	u3327
  4216   0002A6  0000               	nop	
  4217   0002A8                     
  4218                           ;main.c: 311:                         alarmMinutes = (alarmMinutes + 1) % 60;
  4219   0002A8  0E01               	movlw	1
  4220   0002AA  0100               	movlb	0	; () banked
  4221   0002AC  25A8               	addwf	_alarmMinutes& (0+255),w,b	;volatile
  4222   0002AE  6E0B               	movwf	___awmod@dividend^0,c
  4223   0002B0  6A0C               	clrf	(___awmod@dividend+1)^0,c
  4224   0002B2  0E00               	movlw	0
  4225   0002B4  220C               	addwfc	(___awmod@dividend+1)^0,f,c
  4226   0002B6  0E00               	movlw	0
  4227   0002B8  6E0E               	movwf	(___awmod@divisor+1)^0,c
  4228   0002BA  0E3C               	movlw	60
  4229   0002BC  6E0D               	movwf	___awmod@divisor^0,c
  4230   0002BE  EC79  F006         	call	___awmod	;wreg free
  4231   0002C2  500B               	movf	?___awmod^0,w,c
  4232   0002C4  0100               	movlb	0	; () banked
  4233   0002C6  6FA8               	movwf	_alarmMinutes& (0+255),b	;volatile
  4234   0002C8  EF16  F001         	goto	l3602
  4235   0002CC                     l3618:
  4236                           
  4237                           ;main.c: 300:                 while (!PORTBbits.RB2)
  4238   0002CC  A481               	btfss	129,2,c	;volatile
  4239   0002CE  EF6B  F001         	goto	u2991
  4240   0002D2  EF6D  F001         	goto	u2990
  4241   0002D6                     u2991:
  4242   0002D6  EF1A  F001         	goto	l508
  4243   0002DA                     u2990:
  4244   0002DA                     
  4245                           ;main.c: 315:                 alarmSettingMode = 0;
  4246   0002DA  0E00               	movlw	0
  4247   0002DC  0100               	movlb	0	; () banked
  4248   0002DE  6FA0               	movwf	checkButtons@alarmSettingMode& (0+255),b
  4249                           
  4250                           ;main.c: 316:                 alarmSet = 1;
  4251   0002E0  0E01               	movlw	1
  4252   0002E2  6FA7               	movwf	_alarmSet& (0+255),b
  4253   0002E4                     
  4254                           ; BSR set to: 0
  4255                           ;main.c: 317:                 displayTime();
  4256   0002E4  ECC5  F005         	call	_displayTime	;wreg free
  4257   0002E8  EFA1  F001         	goto	l517
  4258   0002EC                     l3624:
  4259                           
  4260                           ; BSR set to: 0
  4261                           ;main.c: 321:         {;main.c: 322:             if (alarmTriggered)
  4262   0002EC  51A5               	movf	_alarmTriggered& (0+255),w,b
  4263   0002EE  B4D8               	btfsc	status,2,c
  4264   0002F0  EF7C  F001         	goto	u3001
  4265   0002F4  EF7E  F001         	goto	u3000
  4266   0002F8                     u3001:
  4267   0002F8  EFA1  F001         	goto	l517
  4268   0002FC                     u3000:
  4269   0002FC                     
  4270                           ; BSR set to: 0
  4271                           ;main.c: 323:             {;main.c: 324:                 clearAlarm();
  4272   0002FC  EC45  F009         	call	_clearAlarm	;wreg free
  4273   000300  EFA1  F001         	goto	l517
  4274   000304                     l3628:
  4275                           
  4276                           ;main.c: 329:     {;main.c: 330:         if (button3HoldTime < 1000)
  4277   000304  0EE8               	movlw	232
  4278   000306  0100               	movlb	0	; () banked
  4279   000308  5D9A               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  4280   00030A  0E03               	movlw	3
  4281   00030C  599B               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  4282   00030E  B0D8               	btfsc	status,0,c
  4283   000310  EF8C  F001         	goto	u3011
  4284   000314  EF8E  F001         	goto	u3010
  4285   000318                     u3011:
  4286   000318  EF9D  F001         	goto	l3638
  4287   00031C                     u3010:
  4288   00031C                     
  4289                           ; BSR set to: 0
  4290                           ;main.c: 331:         {;main.c: 332:             button3PressCount++;
  4291   00031C  2BA1               	incf	checkButtons@button3PressCount& (0+255),f,b
  4292   00031E                     
  4293                           ; BSR set to: 0
  4294                           ;main.c: 333:             if (button3PressCount == 5)
  4295   00031E  0E05               	movlw	5
  4296   000320  19A1               	xorwf	checkButtons@button3PressCount& (0+255),w,b
  4297   000322  A4D8               	btfss	status,2,c
  4298   000324  EF96  F001         	goto	u3021
  4299   000328  EF98  F001         	goto	u3020
  4300   00032C                     u3021:
  4301   00032C  EF9D  F001         	goto	l3638
  4302   000330                     u3020:
  4303   000330                     
  4304                           ; BSR set to: 0
  4305                           ;main.c: 334:             {;main.c: 335:                 saveTimeToFlash();
  4306   000330  EC20  F007         	call	_saveTimeToFlash	;wreg free
  4307   000334                     
  4308                           ;main.c: 336:                 button3PressCount = 0;
  4309   000334  0E00               	movlw	0
  4310   000336  0100               	movlb	0	; () banked
  4311   000338  6FA1               	movwf	checkButtons@button3PressCount& (0+255),b
  4312   00033A                     l3638:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;main.c: 339:         button3HoldTime = 0;
  4316   00033A  0E00               	movlw	0
  4317   00033C  6F9B               	movwf	(checkButtons@button3HoldTime+1)& (0+255),b
  4318   00033E  0E00               	movlw	0
  4319   000340  6F9A               	movwf	checkButtons@button3HoldTime& (0+255),b
  4320   000342                     l517:
  4321   000342  0012               	return		;funcret
  4322   000344                     __end_of_checkButtons:
  4323                           	callstack 0
  4324                           
  4325 ;; *************** function _saveTimeToFlash *****************
  4326 ;; Defined at:
  4327 ;;		line 345 in file "main.c"
  4328 ;; Parameters:    Size  Location     Type
  4329 ;;		None
  4330 ;; Auto vars:     Size  Location     Type
  4331 ;;  i               1   68[BANK0 ] unsigned char 
  4332 ;;  flashBuffer    64    0[BANK0 ] unsigned char [64]
  4333 ;;  flashAddress    4   64[BANK0 ] unsigned long 
  4334 ;; Return value:  Size  Location     Type
  4335 ;;                  1    wreg      void 
  4336 ;; Registers used:
  4337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4338 ;; Tracked objects:
  4339 ;;		On entry : 0/0
  4340 ;;		On exit  : 0/0
  4341 ;;		Unchanged: 0/0
  4342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4344 ;;      Locals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4346 ;;      Totals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4347 ;;Total ram usage:       69 bytes
  4348 ;; Hardware stack levels used: 1
  4349 ;; Hardware stack levels required when called: 6
  4350 ;; This function calls:
  4351 ;;		_FLASH_ReadByte
  4352 ;;		_FLASH_WriteBlock
  4353 ;; This function is called by:
  4354 ;;		_main
  4355 ;;		_checkButtons
  4356 ;; This function uses a non-reentrant model
  4357 ;;
  4358                           
  4359                           	psect	text12
  4360   000E40                     __ptext12:
  4361                           	callstack 0
  4362   000E40                     _saveTimeToFlash:
  4363                           	callstack 24
  4364   000E40                     
  4365                           ;main.c: 347:     uint32_t flashAddress = 0x1F80;
  4366   000E40  0E80               	movlw	128
  4367   000E42  0100               	movlb	0	; () banked
  4368   000E44  6FEC               	movwf	saveTimeToFlash@flashAddress& (0+255),b
  4369   000E46  0E1F               	movlw	31
  4370   000E48  6FED               	movwf	(saveTimeToFlash@flashAddress+1)& (0+255),b
  4371   000E4A  0E00               	movlw	0
  4372   000E4C  6FEE               	movwf	(saveTimeToFlash@flashAddress+2)& (0+255),b
  4373   000E4E  0E00               	movlw	0
  4374   000E50  6FEF               	movwf	(saveTimeToFlash@flashAddress+3)& (0+255),b
  4375                           
  4376                           ;main.c: 348:     uint8_t flashBuffer[64];;main.c: 351:     for (uint8_t i = 0; i < 64; 
      +                          i++) {
  4377   000E52  0E00               	movlw	0
  4378   000E54  6FF0               	movwf	saveTimeToFlash@i& (0+255),b
  4379   000E56                     l2802:
  4380                           
  4381                           ; BSR set to: 0
  4382                           ;main.c: 352:         flashBuffer[i] = FLASH_ReadByte(flashAddress + i);
  4383   000E56  51F0               	movf	saveTimeToFlash@i& (0+255),w,b
  4384   000E58  0FAC               	addlw	low saveTimeToFlash@flashBuffer
  4385   000E5A  6ED9               	movwf	fsr2l,c
  4386   000E5C  6ADA               	clrf	fsr2h,c
  4387   000E5E  51F0               	movf	saveTimeToFlash@i& (0+255),w,b
  4388   000E60  25EC               	addwf	saveTimeToFlash@flashAddress& (0+255),w,b
  4389   000E62  6E0B               	movwf	FLASH_ReadByte@flashAddr^0,c
  4390   000E64  0E00               	movlw	0
  4391   000E66  21ED               	addwfc	(saveTimeToFlash@flashAddress+1)& (0+255),w,b
  4392   000E68  6E0C               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  4393   000E6A  0E00               	movlw	0
  4394   000E6C  21EE               	addwfc	(saveTimeToFlash@flashAddress+2)& (0+255),w,b
  4395   000E6E  6E0D               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  4396   000E70  0E00               	movlw	0
  4397   000E72  21EF               	addwfc	(saveTimeToFlash@flashAddress+3)& (0+255),w,b
  4398   000E74  6E0E               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  4399   000E76  EC35  F009         	call	_FLASH_ReadByte	;wreg free
  4400   000E7A  6EDF               	movwf	indf2,c
  4401   000E7C                     
  4402                           ;main.c: 353:     }
  4403   000E7C  0100               	movlb	0	; () banked
  4404   000E7E  2BF0               	incf	saveTimeToFlash@i& (0+255),f,b
  4405   000E80                     
  4406                           ; BSR set to: 0
  4407   000E80  0E3F               	movlw	63
  4408   000E82  65F0               	cpfsgt	saveTimeToFlash@i& (0+255),b
  4409   000E84  EF46  F007         	goto	u1801
  4410   000E88  EF48  F007         	goto	u1800
  4411   000E8C                     u1801:
  4412   000E8C  EF2B  F007         	goto	l2802
  4413   000E90                     u1800:
  4414   000E90                     
  4415                           ; BSR set to: 0
  4416                           ;main.c: 356:     flashBuffer[0] = hours;
  4417   000E90  C0AB  F0AC         	movff	_hours,saveTimeToFlash@flashBuffer	;volatile
  4418                           
  4419                           ;main.c: 357:     flashBuffer[1] = minutes;
  4420   000E94  C0AA  F0AD         	movff	_minutes,saveTimeToFlash@flashBuffer+1	;volatile
  4421                           
  4422                           ;main.c: 358:     flashBuffer[2] = alarmHours;
  4423   000E98  C0A9  F0AE         	movff	_alarmHours,saveTimeToFlash@flashBuffer+2	;volatile
  4424                           
  4425                           ;main.c: 359:     flashBuffer[3] = alarmMinutes;
  4426   000E9C  C0A8  F0AF         	movff	_alarmMinutes,saveTimeToFlash@flashBuffer+3	;volatile
  4427                           
  4428                           ;main.c: 360:     flashBuffer[4] = alarmSet;
  4429   000EA0  C0A7  F0B0         	movff	_alarmSet,saveTimeToFlash@flashBuffer+4
  4430   000EA4                     
  4431                           ; BSR set to: 0
  4432                           ;main.c: 363:     FLASH_WriteBlock(flashAddress, flashBuffer);
  4433   000EA4  C0EC  F010         	movff	saveTimeToFlash@flashAddress,FLASH_WriteBlock@writeAddr
  4434   000EA8  C0ED  F011         	movff	saveTimeToFlash@flashAddress+1,FLASH_WriteBlock@writeAddr+1
  4435   000EAC  C0EE  F012         	movff	saveTimeToFlash@flashAddress+2,FLASH_WriteBlock@writeAddr+2
  4436   000EB0  C0EF  F013         	movff	saveTimeToFlash@flashAddress+3,FLASH_WriteBlock@writeAddr+3
  4437   000EB4  0EAC               	movlw	low saveTimeToFlash@flashBuffer
  4438   000EB6  6E14               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  4439   000EB8  EC02  F003         	call	_FLASH_WriteBlock	;wreg free
  4440   000EBC  0012               	return		;funcret
  4441   000EBE                     __end_of_saveTimeToFlash:
  4442                           	callstack 0
  4443                           
  4444 ;; *************** function _FLASH_WriteBlock *****************
  4445 ;; Defined at:
  4446 ;;		line 93 in file "mcc_generated_files/memory.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  writeAddr       4   15[COMRAM] unsigned long 
  4449 ;;  flashWrBufPt    1   19[COMRAM] PTR unsigned char 
  4450 ;;		 -> saveTimeToFlash@flashBuffer(64), 
  4451 ;; Auto vars:     Size  Location     Type
  4452 ;;  blockStartAd    4   20[COMRAM] unsigned long 
  4453 ;;  i               1   28[COMRAM] unsigned char 
  4454 ;;  dataCounter     1   27[COMRAM] unsigned char 
  4455 ;;  numberOfWrit    1   26[COMRAM] unsigned char 
  4456 ;;  j               1   25[COMRAM] unsigned char 
  4457 ;;  GIEBitValue     1   24[COMRAM] unsigned char 
  4458 ;; Return value:  Size  Location     Type
  4459 ;;                  1    wreg      char 
  4460 ;; Registers used:
  4461 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4462 ;; Tracked objects:
  4463 ;;		On entry : 0/0
  4464 ;;		On exit  : 0/0
  4465 ;;		Unchanged: 0/0
  4466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4467 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4471 ;;Total ram usage:       14 bytes
  4472 ;; Hardware stack levels used: 1
  4473 ;; Hardware stack levels required when called: 5
  4474 ;; This function calls:
  4475 ;;		_FLASH_EraseBlock
  4476 ;; This function is called by:
  4477 ;;		_saveTimeToFlash
  4478 ;;		_FLASH_WriteByte
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text13
  4483   000604                     __ptext13:
  4484                           	callstack 0
  4485   000604                     _FLASH_WriteBlock:
  4486                           	callstack 24
  4487   000604                     
  4488                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  4489   000604  0EC0               	movlw	192
  4490   000606  1410               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  4491   000608  6E15               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  4492   00060A  0EFF               	movlw	255
  4493   00060C  1411               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4494   00060E  6E16               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  4495   000610  0E00               	movlw	0
  4496   000612  1412               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4497   000614  6E17               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  4498   000616  0E00               	movlw	0
  4499   000618  1413               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4500   00061A  6E18               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  4501   00061C                     
  4502                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  4503   00061C  0E00               	movlw	0
  4504   00061E  BEF2               	btfsc	242,7,c	;volatile
  4505   000620  0E01               	movlw	1
  4506   000622  6E19               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  4507   000624  0E00               	movlw	0
  4508   000626  6E1C               	movwf	FLASH_WriteBlock@dataCounter^0,c
  4509   000628                     
  4510                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  4511   000628  0E01               	movlw	1
  4512   00062A  6E1B               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  4513   00062C                     
  4514                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  4515   00062C  5015               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  4516   00062E  1810               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  4517   000630  E10F               	bnz	u1500
  4518   000632  5016               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  4519   000634  1811               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4520   000636  E10C               	bnz	u1500
  4521   000638  5017               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  4522   00063A  1812               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4523   00063C  E109               	bnz	u1500
  4524   00063E  5018               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  4525   000640  1813               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4526   000642  B4D8               	btfsc	status,2,c
  4527   000644  EF26  F003         	goto	u1501
  4528   000648  EF28  F003         	goto	u1500
  4529   00064C                     u1501:
  4530   00064C  EF2A  F003         	goto	l2540
  4531   000650                     u1500:
  4532   000650  EF76  F003         	goto	l233
  4533   000654                     l2540:
  4534                           
  4535                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  4536   000654  C010  F00B         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  4537   000658  C011  F00C         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  4538   00065C  C012  F00D         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  4539   000660  C013  F00E         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  4540   000664  EC9E  F008         	call	_FLASH_EraseBlock	;wreg free
  4541   000668                     
  4542                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  4543   000668  C012  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  4544   00066C                     
  4545                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  4546   00066C  C011  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  4547   000670                     
  4548                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  4549   000670  C010  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  4550   000674                     
  4551                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  4552   000674  0E00               	movlw	0
  4553   000676  6E1A               	movwf	FLASH_WriteBlock@j^0,c
  4554   000678  EF6D  F003         	goto	l2576
  4555   00067C                     l2550:
  4556                           
  4557                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  4558   00067C  0E00               	movlw	0
  4559   00067E  6E1D               	movwf	FLASH_WriteBlock@i^0,c
  4560   000680                     l2556:
  4561                           
  4562                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  4563   000680  5014               	movf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  4564   000682  241C               	addwf	FLASH_WriteBlock@dataCounter^0,w,c
  4565   000684  6ED9               	movwf	fsr2l,c
  4566   000686  6ADA               	clrf	fsr2h,c
  4567   000688  50DF               	movf	indf2,w,c
  4568   00068A  6EF5               	movwf	245,c	;volatile
  4569   00068C                     
  4570                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  4571   00068C  0E3F               	movlw	63
  4572   00068E  181D               	xorwf	FLASH_WriteBlock@i^0,w,c
  4573   000690  A4D8               	btfss	status,2,c
  4574   000692  EF4D  F003         	goto	u1511
  4575   000696  EF4F  F003         	goto	u1510
  4576   00069A                     u1511:
  4577   00069A  EF52  F003         	goto	l238
  4578   00069E                     u1510:
  4579   00069E  000C               	tblwt		*	;# 
  4580                           
  4581                           ;mcc_generated_files/memory.c: 124:    }
  4582   0006A0  EF54  F003         	goto	l239
  4583   0006A4                     l238:
  4584   0006A4  000D               	tblwt		*+	;# 
  4585   0006A6                     
  4586                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  4587   0006A6  2A1C               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  4588   0006A8                     l239:
  4589                           
  4590                           ;mcc_generated_files/memory.c: 130:   }
  4591   0006A8  2A1D               	incf	FLASH_WriteBlock@i^0,f,c
  4592   0006AA  0E3F               	movlw	63
  4593   0006AC  641D               	cpfsgt	FLASH_WriteBlock@i^0,c
  4594   0006AE  EF5B  F003         	goto	u1521
  4595   0006B2  EF5D  F003         	goto	u1520
  4596   0006B6                     u1521:
  4597   0006B6  EF40  F003         	goto	l2556
  4598   0006BA                     u1520:
  4599   0006BA                     
  4600                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  4601   0006BA  8EA6               	bsf	166,7,c	;volsfr
  4602                           
  4603                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  4604   0006BC  9CA6               	bcf	166,6,c	;volsfr
  4605                           
  4606                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  4607   0006BE  84A6               	bsf	166,2,c	;volsfr
  4608                           
  4609                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  4610   0006C0  9EF2               	bcf	242,7,c	;volatile
  4611   0006C2                     
  4612                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  4613   0006C2  0E55               	movlw	85
  4614   0006C4  6EA7               	movwf	167,c	;volsfr
  4615                           
  4616                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  4617   0006C6  0EAA               	movlw	170
  4618   0006C8  6EA7               	movwf	167,c	;volsfr
  4619   0006CA                     
  4620                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  4621   0006CA  82A6               	bsf	166,1,c	;volsfr
  4622   0006CC                     
  4623                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  4624   0006CC  94A6               	bcf	166,2,c	;volsfr
  4625   0006CE                     
  4626                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  4627   0006CE  B019               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  4628   0006D0  D002               	bra	u1535
  4629   0006D2  9EF2               	bcf	242,7,c	;volatile
  4630   0006D4  D001               	bra	u1536
  4631   0006D6                     u1535:
  4632   0006D6  8EF2               	bsf	242,7,c	;volatile
  4633   0006D8                     u1536:
  4634   0006D8                     
  4635                           ;mcc_generated_files/memory.c: 142:  }
  4636   0006D8  2A1A               	incf	FLASH_WriteBlock@j^0,f,c
  4637   0006DA                     l2576:
  4638   0006DA  501B               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  4639   0006DC  5C1A               	subwf	FLASH_WriteBlock@j^0,w,c
  4640   0006DE  A0D8               	btfss	status,0,c
  4641   0006E0  EF74  F003         	goto	u1541
  4642   0006E4  EF76  F003         	goto	u1540
  4643   0006E8                     u1541:
  4644   0006E8  EF3E  F003         	goto	l2550
  4645   0006EC                     u1540:
  4646   0006EC                     l233:
  4647   0006EC  0012               	return		;funcret
  4648   0006EE                     __end_of_FLASH_WriteBlock:
  4649                           	callstack 0
  4650                           
  4651 ;; *************** function _FLASH_EraseBlock *****************
  4652 ;; Defined at:
  4653 ;;		line 147 in file "mcc_generated_files/memory.c"
  4654 ;; Parameters:    Size  Location     Type
  4655 ;;  baseAddr        4   10[COMRAM] unsigned long 
  4656 ;; Auto vars:     Size  Location     Type
  4657 ;;  GIEBitValue     1   14[COMRAM] unsigned char 
  4658 ;; Return value:  Size  Location     Type
  4659 ;;                  1    wreg      void 
  4660 ;; Registers used:
  4661 ;;		wreg, status,2
  4662 ;; Tracked objects:
  4663 ;;		On entry : 0/0
  4664 ;;		On exit  : 0/0
  4665 ;;		Unchanged: 0/0
  4666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4667 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4668 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4669 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4670 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4671 ;;Total ram usage:        5 bytes
  4672 ;; Hardware stack levels used: 1
  4673 ;; Hardware stack levels required when called: 4
  4674 ;; This function calls:
  4675 ;;		Nothing
  4676 ;; This function is called by:
  4677 ;;		_FLASH_WriteBlock
  4678 ;; This function uses a non-reentrant model
  4679 ;;
  4680                           
  4681                           	psect	text14
  4682   00113C                     __ptext14:
  4683                           	callstack 0
  4684   00113C                     _FLASH_EraseBlock:
  4685                           	callstack 24
  4686   00113C                     
  4687                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  4688   00113C  0E00               	movlw	0
  4689   00113E  BEF2               	btfsc	242,7,c	;volatile
  4690   001140  0E01               	movlw	1
  4691   001142  6E0F               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  4692   001144                     
  4693                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  4694   001144  C00D  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  4695   001148                     
  4696                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  4697   001148  C00C  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  4698   00114C                     
  4699                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  4700   00114C  C00B  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  4701   001150                     
  4702                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  4703   001150  8EA6               	bsf	166,7,c	;volsfr
  4704   001152                     
  4705                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  4706   001152  9CA6               	bcf	166,6,c	;volsfr
  4707   001154                     
  4708                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  4709   001154  84A6               	bsf	166,2,c	;volsfr
  4710   001156                     
  4711                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  4712   001156  88A6               	bsf	166,4,c	;volsfr
  4713   001158                     
  4714                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  4715   001158  9EF2               	bcf	242,7,c	;volatile
  4716   00115A                     
  4717                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  4718   00115A  0E55               	movlw	85
  4719   00115C  6EA7               	movwf	167,c	;volsfr
  4720   00115E                     
  4721                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  4722   00115E  0EAA               	movlw	170
  4723   001160  6EA7               	movwf	167,c	;volsfr
  4724   001162                     
  4725                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  4726   001162  82A6               	bsf	166,1,c	;volsfr
  4727   001164                     
  4728                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  4729   001164  B00F               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  4730   001166  D002               	bra	u1385
  4731   001168  9EF2               	bcf	242,7,c	;volatile
  4732   00116A  D001               	bra	u1386
  4733   00116C                     u1385:
  4734   00116C  8EF2               	bsf	242,7,c	;volatile
  4735   00116E                     u1386:
  4736   00116E  0012               	return		;funcret
  4737   001170                     __end_of_FLASH_EraseBlock:
  4738                           	callstack 0
  4739                           
  4740 ;; *************** function _FLASH_ReadByte *****************
  4741 ;; Defined at:
  4742 ;;		line 58 in file "mcc_generated_files/memory.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  flashAddr       4   10[COMRAM] unsigned long 
  4745 ;; Auto vars:     Size  Location     Type
  4746 ;;		None
  4747 ;; Return value:  Size  Location     Type
  4748 ;;                  1    wreg      unsigned char 
  4749 ;; Registers used:
  4750 ;;		wreg, status,2
  4751 ;; Tracked objects:
  4752 ;;		On entry : 0/0
  4753 ;;		On exit  : 0/0
  4754 ;;		Unchanged: 0/0
  4755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4756 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4759 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4760 ;;Total ram usage:        4 bytes
  4761 ;; Hardware stack levels used: 1
  4762 ;; Hardware stack levels required when called: 4
  4763 ;; This function calls:
  4764 ;;		Nothing
  4765 ;; This function is called by:
  4766 ;;		_saveTimeToFlash
  4767 ;;		_loadTimeFromFlash
  4768 ;;		_FLASH_ReadWord
  4769 ;;		_FLASH_WriteByte
  4770 ;; This function uses a non-reentrant model
  4771 ;;
  4772                           
  4773                           	psect	text15
  4774   00126A                     __ptext15:
  4775                           	callstack 0
  4776   00126A                     _FLASH_ReadByte:
  4777                           	callstack 25
  4778   00126A                     
  4779                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  4780   00126A  C00D  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  4781                           
  4782                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  4783   00126E  C00C  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  4784                           
  4785                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  4786   001272  C00B  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  4787   001276  0008               	tblrd		*	;# 
  4788   001278                     
  4789                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  4790   001278  50F5               	movf	245,w,c	;volatile
  4791   00127A  0012               	return		;funcret
  4792   00127C                     __end_of_FLASH_ReadByte:
  4793                           	callstack 0
  4794                           
  4795 ;; *************** function _displayTime *****************
  4796 ;; Defined at:
  4797 ;;		line 118 in file "main.c"
  4798 ;; Parameters:    Size  Location     Type
  4799 ;;		None
  4800 ;; Auto vars:     Size  Location     Type
  4801 ;;  i               2   31[BANK0 ] int 
  4802 ;;  timeString      5   26[BANK0 ] unsigned char [5]
  4803 ;;  displayStrin    5   21[BANK0 ] unsigned char [5]
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  1    wreg      void 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4813 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4814 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4816 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4817 ;;Total ram usage:       12 bytes
  4818 ;; Hardware stack levels used: 1
  4819 ;; Hardware stack levels required when called: 8
  4820 ;; This function calls:
  4821 ;;		___awdiv
  4822 ;;		___awmod
  4823 ;;		_printString
  4824 ;; This function is called by:
  4825 ;;		_main
  4826 ;;		_checkButtons
  4827 ;; This function uses a non-reentrant model
  4828 ;;
  4829                           
  4830                           	psect	text16
  4831   000B8A                     __ptext16:
  4832                           	callstack 0
  4833   000B8A                     _displayTime:
  4834                           	callstack 22
  4835   000B8A                     
  4836                           ;main.c: 120:     char timeString[5];;main.c: 123:     timeString[0] = (hours / 10) + '0
      +                          ';
  4837   000B8A  C0AB  F00B         	movff	_hours,___awdiv@dividend	;volatile
  4838   000B8E  6A0C               	clrf	(___awdiv@dividend+1)^0,c
  4839   000B90  0E00               	movlw	0
  4840   000B92  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  4841   000B94  0E0A               	movlw	10
  4842   000B96  6E0D               	movwf	___awdiv@divisor^0,c
  4843   000B98  EC4B  F004         	call	___awdiv	;wreg free
  4844   000B9C  500B               	movf	?___awdiv^0,w,c
  4845   000B9E  0F30               	addlw	48
  4846   000BA0  0100               	movlb	0	; () banked
  4847   000BA2  6FC6               	movwf	displayTime@timeString& (0+255),b
  4848                           
  4849                           ;main.c: 124:     timeString[1] = (hours % 10) + '0';
  4850   000BA4  C0AB  F00B         	movff	_hours,___awmod@dividend	;volatile
  4851   000BA8  6A0C               	clrf	(___awmod@dividend+1)^0,c
  4852   000BAA  0E00               	movlw	0
  4853   000BAC  6E0E               	movwf	(___awmod@divisor+1)^0,c
  4854   000BAE  0E0A               	movlw	10
  4855   000BB0  6E0D               	movwf	___awmod@divisor^0,c
  4856   000BB2  EC79  F006         	call	___awmod	;wreg free
  4857   000BB6  500B               	movf	?___awmod^0,w,c
  4858   000BB8  0F30               	addlw	48
  4859   000BBA  0100               	movlb	0	; () banked
  4860   000BBC  6FC7               	movwf	(displayTime@timeString+1)& (0+255),b
  4861                           
  4862                           ;main.c: 125:     timeString[2] = (minutes / 10) + '0';
  4863   000BBE  C0AA  F00B         	movff	_minutes,___awdiv@dividend	;volatile
  4864   000BC2  6A0C               	clrf	(___awdiv@dividend+1)^0,c
  4865   000BC4  0E00               	movlw	0
  4866   000BC6  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  4867   000BC8  0E0A               	movlw	10
  4868   000BCA  6E0D               	movwf	___awdiv@divisor^0,c
  4869   000BCC  EC4B  F004         	call	___awdiv	;wreg free
  4870   000BD0  500B               	movf	?___awdiv^0,w,c
  4871   000BD2  0F30               	addlw	48
  4872   000BD4  0100               	movlb	0	; () banked
  4873   000BD6  6FC8               	movwf	(displayTime@timeString+2)& (0+255),b
  4874                           
  4875                           ;main.c: 126:     timeString[3] = (minutes % 10) + '0';
  4876   000BD8  C0AA  F00B         	movff	_minutes,___awmod@dividend	;volatile
  4877   000BDC  6A0C               	clrf	(___awmod@dividend+1)^0,c
  4878   000BDE  0E00               	movlw	0
  4879   000BE0  6E0E               	movwf	(___awmod@divisor+1)^0,c
  4880   000BE2  0E0A               	movlw	10
  4881   000BE4  6E0D               	movwf	___awmod@divisor^0,c
  4882   000BE6  EC79  F006         	call	___awmod	;wreg free
  4883   000BEA  500B               	movf	?___awmod^0,w,c
  4884   000BEC  0F30               	addlw	48
  4885   000BEE  0100               	movlb	0	; () banked
  4886   000BF0  6FC9               	movwf	(displayTime@timeString+3)& (0+255),b
  4887   000BF2                     
  4888                           ; BSR set to: 0
  4889                           ;main.c: 127:     timeString[4] = '\0';
  4890   000BF2  0E00               	movlw	0
  4891   000BF4  6FCA               	movwf	(displayTime@timeString+4)& (0+255),b
  4892   000BF6                     
  4893                           ; BSR set to: 0
  4894                           ;main.c: 130:     uint8_t displayString[5];;main.c: 131:     for (int i = 0; i < 5; i++)
      +                           {
  4895   000BF6  0E00               	movlw	0
  4896   000BF8  6FCC               	movwf	(displayTime@i+1)& (0+255),b
  4897   000BFA  0E00               	movlw	0
  4898   000BFC  6FCB               	movwf	displayTime@i& (0+255),b
  4899   000BFE                     l3472:
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;main.c: 132:         displayString[i] = (uint8_t)timeString[i];
  4903   000BFE  51CB               	movf	displayTime@i& (0+255),w,b
  4904   000C00  0FC6               	addlw	low displayTime@timeString
  4905   000C02  6ED9               	movwf	fsr2l,c
  4906   000C04  6ADA               	clrf	fsr2h,c
  4907   000C06  51CB               	movf	displayTime@i& (0+255),w,b
  4908   000C08  0FC1               	addlw	low displayTime@displayString
  4909   000C0A  6EE1               	movwf	fsr1l,c
  4910   000C0C  6AE2               	clrf	fsr1h,c
  4911   000C0E  CFDF FFE7          	movff	indf2,indf1
  4912   000C12                     
  4913                           ; BSR set to: 0
  4914                           ;main.c: 133:     }
  4915   000C12  4BCB               	infsnz	displayTime@i& (0+255),f,b
  4916   000C14  2BCC               	incf	(displayTime@i+1)& (0+255),f,b
  4917   000C16                     
  4918                           ; BSR set to: 0
  4919   000C16  BFCC               	btfsc	(displayTime@i+1)& (0+255),7,b
  4920   000C18  EF17  F006         	goto	u2811
  4921   000C1C  51CC               	movf	(displayTime@i+1)& (0+255),w,b
  4922   000C1E  E109               	bnz	u2810
  4923   000C20  0E05               	movlw	5
  4924   000C22  5DCB               	subwf	displayTime@i& (0+255),w,b
  4925   000C24  A0D8               	btfss	status,0,c
  4926   000C26  EF17  F006         	goto	u2811
  4927   000C2A  EF19  F006         	goto	u2810
  4928   000C2E                     u2811:
  4929   000C2E  EFFF  F005         	goto	l3472
  4930   000C32                     u2810:
  4931   000C32                     
  4932                           ; BSR set to: 0
  4933                           ;main.c: 135:     printString(displayString);
  4934   000C32  0EC1               	movlw	low displayTime@displayString
  4935   000C34  6FAC               	movwf	printString@str& (0+255),b
  4936   000C36  6BAD               	clrf	(printString@str+1)& (0+255),b
  4937   000C38  ECA2  F001         	call	_printString	;wreg free
  4938   000C3C  0012               	return		;funcret
  4939   000C3E                     __end_of_displayTime:
  4940                           	callstack 0
  4941                           
  4942 ;; *************** function _displayAlarmTime *****************
  4943 ;; Defined at:
  4944 ;;		line 161 in file "main.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;		None
  4947 ;; Auto vars:     Size  Location     Type
  4948 ;;  i               2   31[BANK0 ] int 
  4949 ;;  alarmTimeStr    5   26[BANK0 ] unsigned char [5]
  4950 ;;  displayStrin    5   21[BANK0 ] unsigned char [5]
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4961 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4963 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4964 ;;Total ram usage:       12 bytes
  4965 ;; Hardware stack levels used: 1
  4966 ;; Hardware stack levels required when called: 8
  4967 ;; This function calls:
  4968 ;;		___awdiv
  4969 ;;		___awmod
  4970 ;;		_printString
  4971 ;; This function is called by:
  4972 ;;		_checkButtons
  4973 ;; This function uses a non-reentrant model
  4974 ;;
  4975                           
  4976                           	psect	text17
  4977   000C3E                     __ptext17:
  4978                           	callstack 0
  4979   000C3E                     _displayAlarmTime:
  4980                           	callstack 21
  4981   000C3E                     
  4982                           ;main.c: 163:     char alarmTimeString[5];;main.c: 166:     alarmTimeString[0] = (alarmH
      +                          ours / 10) + '0';
  4983   000C3E  C0A9  F00B         	movff	_alarmHours,___awdiv@dividend	;volatile
  4984   000C42  6A0C               	clrf	(___awdiv@dividend+1)^0,c
  4985   000C44  0E00               	movlw	0
  4986   000C46  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  4987   000C48  0E0A               	movlw	10
  4988   000C4A  6E0D               	movwf	___awdiv@divisor^0,c
  4989   000C4C  EC4B  F004         	call	___awdiv	;wreg free
  4990   000C50  500B               	movf	?___awdiv^0,w,c
  4991   000C52  0F30               	addlw	48
  4992   000C54  0100               	movlb	0	; () banked
  4993   000C56  6FC6               	movwf	displayAlarmTime@alarmTimeString& (0+255),b
  4994                           
  4995                           ;main.c: 167:     alarmTimeString[1] = (alarmHours % 10) + '0';
  4996   000C58  C0A9  F00B         	movff	_alarmHours,___awmod@dividend	;volatile
  4997   000C5C  6A0C               	clrf	(___awmod@dividend+1)^0,c
  4998   000C5E  0E00               	movlw	0
  4999   000C60  6E0E               	movwf	(___awmod@divisor+1)^0,c
  5000   000C62  0E0A               	movlw	10
  5001   000C64  6E0D               	movwf	___awmod@divisor^0,c
  5002   000C66  EC79  F006         	call	___awmod	;wreg free
  5003   000C6A  500B               	movf	?___awmod^0,w,c
  5004   000C6C  0F30               	addlw	48
  5005   000C6E  0100               	movlb	0	; () banked
  5006   000C70  6FC7               	movwf	(displayAlarmTime@alarmTimeString+1)& (0+255),b
  5007                           
  5008                           ;main.c: 168:     alarmTimeString[2] = (alarmMinutes / 10) + '0';
  5009   000C72  C0A8  F00B         	movff	_alarmMinutes,___awdiv@dividend	;volatile
  5010   000C76  6A0C               	clrf	(___awdiv@dividend+1)^0,c
  5011   000C78  0E00               	movlw	0
  5012   000C7A  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  5013   000C7C  0E0A               	movlw	10
  5014   000C7E  6E0D               	movwf	___awdiv@divisor^0,c
  5015   000C80  EC4B  F004         	call	___awdiv	;wreg free
  5016   000C84  500B               	movf	?___awdiv^0,w,c
  5017   000C86  0F30               	addlw	48
  5018   000C88  0100               	movlb	0	; () banked
  5019   000C8A  6FC8               	movwf	(displayAlarmTime@alarmTimeString+2)& (0+255),b
  5020                           
  5021                           ;main.c: 169:     alarmTimeString[3] = (alarmMinutes % 10) + '0';
  5022   000C8C  C0A8  F00B         	movff	_alarmMinutes,___awmod@dividend	;volatile
  5023   000C90  6A0C               	clrf	(___awmod@dividend+1)^0,c
  5024   000C92  0E00               	movlw	0
  5025   000C94  6E0E               	movwf	(___awmod@divisor+1)^0,c
  5026   000C96  0E0A               	movlw	10
  5027   000C98  6E0D               	movwf	___awmod@divisor^0,c
  5028   000C9A  EC79  F006         	call	___awmod	;wreg free
  5029   000C9E  500B               	movf	?___awmod^0,w,c
  5030   000CA0  0F30               	addlw	48
  5031   000CA2  0100               	movlb	0	; () banked
  5032   000CA4  6FC9               	movwf	(displayAlarmTime@alarmTimeString+3)& (0+255),b
  5033   000CA6                     
  5034                           ; BSR set to: 0
  5035                           ;main.c: 170:     alarmTimeString[4] = '\0';
  5036   000CA6  0E00               	movlw	0
  5037   000CA8  6FCA               	movwf	(displayAlarmTime@alarmTimeString+4)& (0+255),b
  5038   000CAA                     
  5039                           ; BSR set to: 0
  5040                           ;main.c: 173:     uint8_t displayString[5];;main.c: 174:     for (int i = 0; i < 5; i++)
      +                           {
  5041   000CAA  0E00               	movlw	0
  5042   000CAC  6FCC               	movwf	(displayAlarmTime@i+1)& (0+255),b
  5043   000CAE  0E00               	movlw	0
  5044   000CB0  6FCB               	movwf	displayAlarmTime@i& (0+255),b
  5045   000CB2                     l3490:
  5046                           
  5047                           ; BSR set to: 0
  5048                           ;main.c: 175:         displayString[i] = (uint8_t)alarmTimeString[i];
  5049   000CB2  51CB               	movf	displayAlarmTime@i& (0+255),w,b
  5050   000CB4  0FC6               	addlw	low displayAlarmTime@alarmTimeString
  5051   000CB6  6ED9               	movwf	fsr2l,c
  5052   000CB8  6ADA               	clrf	fsr2h,c
  5053   000CBA  51CB               	movf	displayAlarmTime@i& (0+255),w,b
  5054   000CBC  0FC1               	addlw	low displayAlarmTime@displayString
  5055   000CBE  6EE1               	movwf	fsr1l,c
  5056   000CC0  6AE2               	clrf	fsr1h,c
  5057   000CC2  CFDF FFE7          	movff	indf2,indf1
  5058   000CC6                     
  5059                           ; BSR set to: 0
  5060                           ;main.c: 176:     }
  5061   000CC6  4BCB               	infsnz	displayAlarmTime@i& (0+255),f,b
  5062   000CC8  2BCC               	incf	(displayAlarmTime@i+1)& (0+255),f,b
  5063   000CCA                     
  5064                           ; BSR set to: 0
  5065   000CCA  BFCC               	btfsc	(displayAlarmTime@i+1)& (0+255),7,b
  5066   000CCC  EF71  F006         	goto	u2821
  5067   000CD0  51CC               	movf	(displayAlarmTime@i+1)& (0+255),w,b
  5068   000CD2  E109               	bnz	u2820
  5069   000CD4  0E05               	movlw	5
  5070   000CD6  5DCB               	subwf	displayAlarmTime@i& (0+255),w,b
  5071   000CD8  A0D8               	btfss	status,0,c
  5072   000CDA  EF71  F006         	goto	u2821
  5073   000CDE  EF73  F006         	goto	u2820
  5074   000CE2                     u2821:
  5075   000CE2  EF59  F006         	goto	l3490
  5076   000CE6                     u2820:
  5077   000CE6                     
  5078                           ; BSR set to: 0
  5079                           ;main.c: 178:     printString(displayString);
  5080   000CE6  0EC1               	movlw	low displayAlarmTime@displayString
  5081   000CE8  6FAC               	movwf	printString@str& (0+255),b
  5082   000CEA  6BAD               	clrf	(printString@str+1)& (0+255),b
  5083   000CEC  ECA2  F001         	call	_printString	;wreg free
  5084   000CF0  0012               	return		;funcret
  5085   000CF2                     __end_of_displayAlarmTime:
  5086                           	callstack 0
  5087                           
  5088 ;; *************** function _printString *****************
  5089 ;; Defined at:
  5090 ;;		line 161 in file "MAX7219.c"
  5091 ;; Parameters:    Size  Location     Type
  5092 ;;  str             2    0[BANK0 ] PTR unsigned char 
  5093 ;;		 -> STR_1(6), displayAlarmTime@displayString(5), displayTime@displayString(5), 
  5094 ;; Auto vars:     Size  Location     Type
  5095 ;;  j               2   19[BANK0 ] int 
  5096 ;;  data            1   12[BANK0 ] unsigned char 
  5097 ;;  i               2   15[BANK0 ] int 
  5098 ;;  indx            2   10[BANK0 ] int 
  5099 ;;  k               2   17[BANK0 ] int 
  5100 ;;  strindx         2   13[BANK0 ] int 
  5101 ;; Return value:  Size  Location     Type
  5102 ;;                  1    wreg      void 
  5103 ;; Registers used:
  5104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5105 ;; Tracked objects:
  5106 ;;		On entry : 0/0
  5107 ;;		On exit  : 0/0
  5108 ;;		Unchanged: 0/0
  5109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5110 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5111 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5112 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5113 ;;      Totals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5114 ;;Total ram usage:       21 bytes
  5115 ;; Hardware stack levels used: 1
  5116 ;; Hardware stack levels required when called: 7
  5117 ;; This function calls:
  5118 ;;		_flushBuffer
  5119 ;; This function is called by:
  5120 ;;		_displayTime
  5121 ;;		_displayAlarmTime
  5122 ;;		_triggerAlarm
  5123 ;; This function uses a non-reentrant model
  5124 ;;
  5125                           
  5126                           	psect	text18
  5127   000344                     __ptext18:
  5128                           	callstack 0
  5129   000344                     _printString:
  5130                           	callstack 21
  5131   000344                     
  5132                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  5133   000344  0E00               	movlw	0
  5134   000346  0100               	movlb	0	; () banked
  5135   000348  6FBA               	movwf	(printString@strindx+1)& (0+255),b
  5136   00034A  0E00               	movlw	0
  5137   00034C  6FB9               	movwf	printString@strindx& (0+255),b
  5138                           
  5139                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  5140   00034E  0E00               	movlw	0
  5141   000350  6FBE               	movwf	(printString@k+1)& (0+255),b
  5142   000352  0E1F               	movlw	31
  5143   000354  6FBD               	movwf	printString@k& (0+255),b
  5144                           
  5145                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5146   000356  EF49  F002         	goto	l3458
  5147   00035A                     l3418:
  5148                           
  5149                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  5150   00035A  0E00               	movlw	0
  5151   00035C  0100               	movlb	0	; () banked
  5152   00035E  6FB7               	movwf	(printString@indx+1)& (0+255),b
  5153   000360  0E00               	movlw	0
  5154   000362  6FB6               	movwf	printString@indx& (0+255),b
  5155                           
  5156                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  5157   000364  0E00               	movlw	0
  5158   000366  6FBC               	movwf	(printString@i+1)& (0+255),b
  5159   000368  0E00               	movlw	0
  5160   00036A  6FBB               	movwf	printString@i& (0+255),b
  5161   00036C                     l3424:
  5162                           
  5163                           ; BSR set to: 0
  5164                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  5165   00036C  0E00               	movlw	0
  5166   00036E  6FB8               	movwf	printString@data& (0+255),b
  5167                           
  5168                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  5169   000370  0E00               	movlw	0
  5170   000372  6FC0               	movwf	(printString@j+1)& (0+255),b
  5171   000374  0E07               	movlw	7
  5172   000376  6FBF               	movwf	printString@j& (0+255),b
  5173   000378                     l3430:
  5174                           
  5175                           ; BSR set to: 0
  5176                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  5177   000378  51B9               	movf	printString@strindx& (0+255),w,b
  5178   00037A  25AC               	addwf	printString@str& (0+255),w,b
  5179   00037C  6FAE               	movwf	??_printString& (0+255),b
  5180   00037E  51BA               	movf	(printString@strindx+1)& (0+255),w,b
  5181   000380  21AD               	addwfc	(printString@str+1)& (0+255),w,b
  5182   000382  6FAF               	movwf	(??_printString+1)& (0+255),b
  5183   000384  C0AE  FFF6         	movff	??_printString,tblptrl
  5184   000388  C0AF  FFF7         	movff	??_printString+1,tblptrh
  5185   00038C  0E00               	movlw	low (__mediumconst shr (0+16))
  5186   00038E  6EF8               	movwf	tblptru,c
  5187   000390  0E0F               	movlw	(high __ramtop+-1)
  5188   000392  64F7               	cpfsgt	tblptrh,c
  5189   000394  D003               	bra	u2717
  5190   000396  0008               	tblrd		*
  5191   000398  50F5               	movf	tablat,w,c
  5192   00039A  D005               	bra	u2710
  5193   00039C                     u2717:
  5194   00039C  CFF6 FFE1          	movff	tblptrl,fsr1l
  5195   0003A0  CFF7 FFE2          	movff	tblptrh,fsr1h
  5196   0003A4  50E7               	movf	indf1,w,c
  5197   0003A6                     u2710:
  5198   0003A6  0100               	movlb	0	; () banked
  5199   0003A8  6FB0               	movwf	(??_printString+2)& (0+255),b
  5200   0003AA  51B0               	movf	(??_printString+2)& (0+255),w,b
  5201   0003AC  0D08               	mullw	8
  5202   0003AE  0EF9               	movlw	low _MAX7219_Dot_Matrix_font
  5203   0003B0  24F3               	addwf	243,w,c
  5204   0003B2  6FB1               	movwf	(??_printString+3)& (0+255),b
  5205   0003B4  0EF7               	movlw	high _MAX7219_Dot_Matrix_font
  5206   0003B6  20F4               	addwfc	prodh,w,c
  5207   0003B8  6FB2               	movwf	(??_printString+4)& (0+255),b
  5208   0003BA  51B6               	movf	printString@indx& (0+255),w,b
  5209   0003BC  27B1               	addwf	(??_printString+3)& (0+255),f,b
  5210   0003BE  51B7               	movf	(printString@indx+1)& (0+255),w,b
  5211   0003C0  23B2               	addwfc	(??_printString+4)& (0+255),f,b
  5212   0003C2  C0B1  FFF6         	movff	??_printString+3,tblptrl
  5213   0003C6  C0B2  FFF7         	movff	??_printString+4,tblptrh
  5214   0003CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5215   0003CA  6AF8               	clrf	tblptru,c
  5216   0003CC                     	endif
  5217   0003CC                     	if	0	;tblptru may be non-zero
  5218   0003CC                     	endif
  5219   0003CC  0008               	tblrd		*
  5220   0003CE  CFF5 F0B3          	movff	tablat,??_printString+5
  5221   0003D2  C0BF  F0B4         	movff	printString@j,??_printString+6
  5222   0003D6  0E01               	movlw	1
  5223   0003D8  6FB5               	movwf	(??_printString+7)& (0+255),b
  5224   0003DA  2BB4               	incf	(??_printString+6)& (0+255),f,b
  5225   0003DC  EFF2  F001         	goto	u2724
  5226   0003E0                     u2725:
  5227   0003E0  90D8               	bcf	status,0,c
  5228   0003E2  37B5               	rlcf	(??_printString+7)& (0+255),f,b
  5229   0003E4                     u2724:
  5230   0003E4  2FB4               	decfsz	(??_printString+6)& (0+255),f,b
  5231   0003E6  EFF0  F001         	goto	u2725
  5232   0003EA  0100               	movlb	0	; () banked
  5233   0003EC  51B5               	movf	(??_printString+7)& (0+255),w,b
  5234   0003EE  15B3               	andwf	(??_printString+5)& (0+255),w,b
  5235   0003F0  0900               	iorlw	0
  5236   0003F2  B4D8               	btfsc	status,2,c
  5237   0003F4  EFFE  F001         	goto	u2731
  5238   0003F8  EF00  F002         	goto	u2730
  5239   0003FC                     u2731:
  5240   0003FC  EF10  F002         	goto	l3434
  5241   000400                     u2730:
  5242   000400                     
  5243                           ; BSR set to: 0
  5244                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  5245   000400  51BF               	movf	printString@j& (0+255),w,b
  5246   000402  0807               	sublw	7
  5247   000404  6FAE               	movwf	??_printString& (0+255),b
  5248   000406  0E01               	movlw	1
  5249   000408  6FAF               	movwf	(??_printString+1)& (0+255),b
  5250   00040A  2BAE               	incf	??_printString& (0+255),f,b
  5251   00040C  EF0A  F002         	goto	u2744
  5252   000410                     u2745:
  5253   000410  90D8               	bcf	status,0,c
  5254   000412  37AF               	rlcf	(??_printString+1)& (0+255),f,b
  5255   000414                     u2744:
  5256   000414  2FAE               	decfsz	??_printString& (0+255),f,b
  5257   000416  EF08  F002         	goto	u2745
  5258   00041A  0100               	movlb	0	; () banked
  5259   00041C  51AF               	movf	(??_printString+1)& (0+255),w,b
  5260   00041E  13B8               	iorwf	printString@data& (0+255),f,b
  5261   000420                     l3434:
  5262                           
  5263                           ; BSR set to: 0
  5264                           ;MAX7219.c: 179:             }
  5265   000420  07BF               	decf	printString@j& (0+255),f,b
  5266   000422  A0D8               	btfss	status,0,c
  5267   000424  07C0               	decf	(printString@j+1)& (0+255),f,b
  5268   000426                     
  5269                           ; BSR set to: 0
  5270   000426  BFC0               	btfsc	(printString@j+1)& (0+255),7,b
  5271   000428  EF1A  F002         	goto	u2750
  5272   00042C  EF18  F002         	goto	u2751
  5273   000430                     u2751:
  5274   000430  EFBC  F001         	goto	l3430
  5275   000434                     u2750:
  5276   000434                     
  5277                           ; BSR set to: 0
  5278                           ;MAX7219.c: 180:             if (k < 0) break;
  5279   000434  BFBE               	btfsc	(printString@k+1)& (0+255),7,b
  5280   000436  EF21  F002         	goto	u2760
  5281   00043A  EF1F  F002         	goto	u2761
  5282   00043E                     u2761:
  5283   00043E  EF23  F002         	goto	l3442
  5284   000442                     u2760:
  5285   000442  EF3E  F002         	goto	l3452
  5286   000446                     l3442:
  5287                           
  5288                           ; BSR set to: 0
  5289                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  5290   000446  51BD               	movf	printString@k& (0+255),w,b
  5291   000448  0F60               	addlw	low _bufferCol
  5292   00044A  6ED9               	movwf	fsr2l,c
  5293   00044C  6ADA               	clrf	fsr2h,c
  5294   00044E  C0B8  FFDF         	movff	printString@data,indf2
  5295   000452                     
  5296                           ; BSR set to: 0
  5297   000452  07BD               	decf	printString@k& (0+255),f,b
  5298   000454  A0D8               	btfss	status,0,c
  5299   000456  07BE               	decf	(printString@k+1)& (0+255),f,b
  5300   000458                     
  5301                           ; BSR set to: 0
  5302                           ;MAX7219.c: 182:             indx++;
  5303   000458  4BB6               	infsnz	printString@indx& (0+255),f,b
  5304   00045A  2BB7               	incf	(printString@indx+1)& (0+255),f,b
  5305   00045C                     
  5306                           ; BSR set to: 0
  5307                           ;MAX7219.c: 183:         }
  5308   00045C  4BBB               	infsnz	printString@i& (0+255),f,b
  5309   00045E  2BBC               	incf	(printString@i+1)& (0+255),f,b
  5310   000460                     
  5311                           ; BSR set to: 0
  5312   000460  BFBC               	btfsc	(printString@i+1)& (0+255),7,b
  5313   000462  EF3C  F002         	goto	u2771
  5314   000466  51BC               	movf	(printString@i+1)& (0+255),w,b
  5315   000468  E109               	bnz	u2770
  5316   00046A  0E08               	movlw	8
  5317   00046C  5DBB               	subwf	printString@i& (0+255),w,b
  5318   00046E  A0D8               	btfss	status,0,c
  5319   000470  EF3C  F002         	goto	u2771
  5320   000474  EF3E  F002         	goto	u2770
  5321   000478                     u2771:
  5322   000478  EFB6  F001         	goto	l3424
  5323   00047C                     u2770:
  5324   00047C                     l3452:
  5325                           
  5326                           ; BSR set to: 0
  5327                           ;MAX7219.c: 184:         strindx++;
  5328   00047C  4BB9               	infsnz	printString@strindx& (0+255),f,b
  5329   00047E  2BBA               	incf	(printString@strindx+1)& (0+255),f,b
  5330   000480                     
  5331                           ; BSR set to: 0
  5332                           ;MAX7219.c: 185:         if (k < 0) break;
  5333   000480  BFBE               	btfsc	(printString@k+1)& (0+255),7,b
  5334   000482  EF47  F002         	goto	u2780
  5335   000486  EF45  F002         	goto	u2781
  5336   00048A                     u2781:
  5337   00048A  EF49  F002         	goto	l3458
  5338   00048E                     u2780:
  5339   00048E  EF68  F002         	goto	l3460
  5340   000492                     l3458:
  5341                           
  5342                           ; BSR set to: 0
  5343                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5344   000492  51B9               	movf	printString@strindx& (0+255),w,b
  5345   000494  25AC               	addwf	printString@str& (0+255),w,b
  5346   000496  6FAE               	movwf	??_printString& (0+255),b
  5347   000498  51BA               	movf	(printString@strindx+1)& (0+255),w,b
  5348   00049A  21AD               	addwfc	(printString@str+1)& (0+255),w,b
  5349   00049C  6FAF               	movwf	(??_printString+1)& (0+255),b
  5350   00049E  C0AE  FFF6         	movff	??_printString,tblptrl
  5351   0004A2  C0AF  FFF7         	movff	??_printString+1,tblptrh
  5352   0004A6  0E00               	movlw	low (__mediumconst shr (0+16))
  5353   0004A8  6EF8               	movwf	tblptru,c
  5354   0004AA  0E0F               	movlw	(high __ramtop+-1)
  5355   0004AC  64F7               	cpfsgt	tblptrh,c
  5356   0004AE  D003               	bra	u2797
  5357   0004B0  0008               	tblrd		*
  5358   0004B2  50F5               	movf	tablat,w,c
  5359   0004B4  D005               	bra	u2790
  5360   0004B6                     u2797:
  5361   0004B6  CFF6 FFE1          	movff	tblptrl,fsr1l
  5362   0004BA  CFF7 FFE2          	movff	tblptrh,fsr1h
  5363   0004BE  50E7               	movf	indf1,w,c
  5364   0004C0                     u2790:
  5365   0004C0  0900               	iorlw	0
  5366   0004C2  A4D8               	btfss	status,2,c
  5367   0004C4  EF66  F002         	goto	u2801
  5368   0004C8  EF68  F002         	goto	u2800
  5369   0004CC                     u2801:
  5370   0004CC  EFAD  F001         	goto	l3418
  5371   0004D0                     u2800:
  5372   0004D0                     l3460:
  5373                           
  5374                           ;MAX7219.c: 188:     flushBuffer();
  5375   0004D0  EC6B  F002         	call	_flushBuffer	;wreg free
  5376   0004D4  0012               	return		;funcret
  5377   0004D6                     __end_of_printString:
  5378                           	callstack 0
  5379                           
  5380 ;; *************** function _flushBuffer *****************
  5381 ;; Defined at:
  5382 ;;		line 52 in file "MAX7219.c"
  5383 ;; Parameters:    Size  Location     Type
  5384 ;;		None
  5385 ;; Auto vars:     Size  Location     Type
  5386 ;;  j               2   68[COMRAM] int 
  5387 ;;  dev             2   66[COMRAM] int 
  5388 ;;  row             2   70[COMRAM] int 
  5389 ;;  i               2   72[COMRAM] int 
  5390 ;;  bufferRow      32   34[COMRAM] unsigned char [32]
  5391 ;; Return value:  Size  Location     Type
  5392 ;;                  1    wreg      void 
  5393 ;; Registers used:
  5394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5395 ;; Tracked objects:
  5396 ;;		On entry : 0/0
  5397 ;;		On exit  : 0/0
  5398 ;;		Unchanged: 0/0
  5399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5401 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;Total ram usage:       43 bytes
  5405 ;; Hardware stack levels used: 1
  5406 ;; Hardware stack levels required when called: 6
  5407 ;; This function calls:
  5408 ;;		___awdiv
  5409 ;;		_max_write
  5410 ;; This function is called by:
  5411 ;;		_clearDisplay
  5412 ;;		_printString
  5413 ;;		_shiftLeft
  5414 ;;		_shiftchar
  5415 ;; This function uses a non-reentrant model
  5416 ;;
  5417                           
  5418                           	psect	text19
  5419   0004D6                     __ptext19:
  5420                           	callstack 0
  5421   0004D6                     _flushBuffer:
  5422                           	callstack 21
  5423   0004D6                     
  5424                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  5425   0004D6  EE20  F023         	lfsr	2,flushBuffer@bufferRow
  5426   0004DA  0E1F               	movlw	31
  5427   0004DC                     u2631:
  5428   0004DC  6ADE               	clrf	postinc2,c
  5429   0004DE  06E8               	decf	wreg,f,c
  5430   0004E0  E2FD               	bc	u2631
  5431   0004E2                     
  5432                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  5433   0004E2  0E00               	movlw	0
  5434   0004E4  6E4A               	movwf	(flushBuffer@i+1)^0,c
  5435   0004E6  0E00               	movlw	0
  5436   0004E8  6E49               	movwf	flushBuffer@i^0,c
  5437   0004EA                     l3370:
  5438                           
  5439                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  5440   0004EA  C049  F00B         	movff	flushBuffer@i,___awdiv@dividend
  5441   0004EE  C04A  F00C         	movff	flushBuffer@i+1,___awdiv@dividend+1
  5442   0004F2  0E00               	movlw	0
  5443   0004F4  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  5444   0004F6  0E08               	movlw	8
  5445   0004F8  6E0D               	movwf	___awdiv@divisor^0,c
  5446   0004FA  EC4B  F004         	call	___awdiv	;wreg free
  5447   0004FE  C00B  F043         	movff	?___awdiv,flushBuffer@dev
  5448   000502  C00C  F044         	movff	?___awdiv+1,flushBuffer@dev+1
  5449   000506                     
  5450                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  5451   000506  0E00               	movlw	0
  5452   000508  6E46               	movwf	(flushBuffer@j+1)^0,c
  5453   00050A  0E00               	movlw	0
  5454   00050C  6E45               	movwf	flushBuffer@j^0,c
  5455   00050E                     l3378:
  5456                           
  5457                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  5458   00050E  5049               	movf	flushBuffer@i^0,w,c
  5459   000510  0F60               	addlw	low _bufferCol
  5460   000512  6ED9               	movwf	fsr2l,c
  5461   000514  6ADA               	clrf	fsr2h,c
  5462   000516  50DF               	movf	indf2,w,c
  5463   000518  6E20               	movwf	??_flushBuffer^0,c
  5464   00051A  C045  F021         	movff	flushBuffer@j,??_flushBuffer+1
  5465   00051E  0E01               	movlw	1
  5466   000520  6E22               	movwf	(??_flushBuffer+2)^0,c
  5467   000522  2A21               	incf	(??_flushBuffer+1)^0,f,c
  5468   000524  EF96  F002         	goto	u2644
  5469   000528                     u2645:
  5470   000528  90D8               	bcf	status,0,c
  5471   00052A  3622               	rlcf	(??_flushBuffer+2)^0,f,c
  5472   00052C                     u2644:
  5473   00052C  2E21               	decfsz	(??_flushBuffer+1)^0,f,c
  5474   00052E  EF94  F002         	goto	u2645
  5475   000532  5022               	movf	(??_flushBuffer+2)^0,w,c
  5476   000534  1420               	andwf	??_flushBuffer^0,w,c
  5477   000536  0900               	iorlw	0
  5478   000538  B4D8               	btfsc	status,2,c
  5479   00053A  EFA1  F002         	goto	u2651
  5480   00053E  EFA3  F002         	goto	u2650
  5481   000542                     u2651:
  5482   000542  EFBD  F002         	goto	l3382
  5483   000546                     u2650:
  5484   000546                     
  5485                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  5486   000546  5043               	movf	flushBuffer@dev^0,w,c
  5487   000548  0D08               	mullw	8
  5488   00054A  5049               	movf	flushBuffer@i^0,w,c
  5489   00054C  5CF3               	subwf	243,w,c
  5490   00054E  6E20               	movwf	??_flushBuffer^0,c
  5491   000550  0E07               	movlw	7
  5492   000552  2620               	addwf	??_flushBuffer^0,f,c
  5493   000554  0E01               	movlw	1
  5494   000556  6E21               	movwf	(??_flushBuffer+1)^0,c
  5495   000558  2A20               	incf	??_flushBuffer^0,f,c
  5496   00055A  EFB1  F002         	goto	u2664
  5497   00055E                     u2665:
  5498   00055E  90D8               	bcf	status,0,c
  5499   000560  3621               	rlcf	(??_flushBuffer+1)^0,f,c
  5500   000562                     u2664:
  5501   000562  2E20               	decfsz	??_flushBuffer^0,f,c
  5502   000564  EFAF  F002         	goto	u2665
  5503   000568  5043               	movf	flushBuffer@dev^0,w,c
  5504   00056A  0D08               	mullw	8
  5505   00056C  50F3               	movf	243,w,c
  5506   00056E  0F23               	addlw	low flushBuffer@bufferRow
  5507   000570  2445               	addwf	flushBuffer@j^0,w,c
  5508   000572  6ED9               	movwf	fsr2l,c
  5509   000574  6ADA               	clrf	fsr2h,c
  5510   000576  5021               	movf	(??_flushBuffer+1)^0,w,c
  5511   000578  12DF               	iorwf	indf2,f,c
  5512   00057A                     l3382:
  5513                           
  5514                           ;MAX7219.c: 66:   }
  5515   00057A  4A45               	infsnz	flushBuffer@j^0,f,c
  5516   00057C  2A46               	incf	(flushBuffer@j+1)^0,f,c
  5517   00057E  BE46               	btfsc	(flushBuffer@j+1)^0,7,c
  5518   000580  EFCB  F002         	goto	u2671
  5519   000584  5046               	movf	(flushBuffer@j+1)^0,w,c
  5520   000586  E109               	bnz	u2670
  5521   000588  0E08               	movlw	8
  5522   00058A  5C45               	subwf	flushBuffer@j^0,w,c
  5523   00058C  A0D8               	btfss	status,0,c
  5524   00058E  EFCB  F002         	goto	u2671
  5525   000592  EFCD  F002         	goto	u2670
  5526   000596                     u2671:
  5527   000596  EF87  F002         	goto	l3378
  5528   00059A                     u2670:
  5529   00059A                     
  5530                           ;MAX7219.c: 67:  }
  5531   00059A  4A49               	infsnz	flushBuffer@i^0,f,c
  5532   00059C  2A4A               	incf	(flushBuffer@i+1)^0,f,c
  5533   00059E  BE4A               	btfsc	(flushBuffer@i+1)^0,7,c
  5534   0005A0  EFDB  F002         	goto	u2681
  5535   0005A4  504A               	movf	(flushBuffer@i+1)^0,w,c
  5536   0005A6  E109               	bnz	u2680
  5537   0005A8  0E20               	movlw	32
  5538   0005AA  5C49               	subwf	flushBuffer@i^0,w,c
  5539   0005AC  A0D8               	btfss	status,0,c
  5540   0005AE  EFDB  F002         	goto	u2681
  5541   0005B2  EFDD  F002         	goto	u2680
  5542   0005B6                     u2681:
  5543   0005B6  EF75  F002         	goto	l3370
  5544   0005BA                     u2680:
  5545   0005BA                     
  5546                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  5547   0005BA  0E00               	movlw	0
  5548   0005BC  6E48               	movwf	(flushBuffer@row+1)^0,c
  5549   0005BE  0E01               	movlw	1
  5550   0005C0  6E47               	movwf	flushBuffer@row^0,c
  5551   0005C2                     l3396:
  5552                           
  5553                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  5554   0005C2  C047  F013         	movff	flushBuffer@row,max_write@row
  5555   0005C6  C048  F014         	movff	flushBuffer@row+1,max_write@row+1
  5556   0005CA  C047  F020         	movff	flushBuffer@row,??_flushBuffer
  5557   0005CE  0EFF               	movlw	255
  5558   0005D0  2620               	addwf	??_flushBuffer^0,f,c
  5559   0005D2  5020               	movf	??_flushBuffer^0,w,c
  5560   0005D4  0F23               	addlw	low flushBuffer@bufferRow
  5561   0005D6  6ED9               	movwf	fsr2l,c
  5562   0005D8  6ADA               	clrf	fsr2h,c
  5563   0005DA  50DF               	movf	indf2,w,c
  5564   0005DC  6E15               	movwf	max_write@data^0,c
  5565   0005DE  ECAD  F004         	call	_max_write	;wreg free
  5566   0005E2                     
  5567                           ;MAX7219.c: 73:  }
  5568   0005E2  4A47               	infsnz	flushBuffer@row^0,f,c
  5569   0005E4  2A48               	incf	(flushBuffer@row+1)^0,f,c
  5570   0005E6  BE48               	btfsc	(flushBuffer@row+1)^0,7,c
  5571   0005E8  EFFF  F002         	goto	u2691
  5572   0005EC  5048               	movf	(flushBuffer@row+1)^0,w,c
  5573   0005EE  E109               	bnz	u2690
  5574   0005F0  0E21               	movlw	33
  5575   0005F2  5C47               	subwf	flushBuffer@row^0,w,c
  5576   0005F4  A0D8               	btfss	status,0,c
  5577   0005F6  EFFF  F002         	goto	u2691
  5578   0005FA  EF01  F003         	goto	u2690
  5579   0005FE                     u2691:
  5580   0005FE  EFE1  F002         	goto	l3396
  5581   000602                     u2690:
  5582   000602  0012               	return		;funcret
  5583   000604                     __end_of_flushBuffer:
  5584                           	callstack 0
  5585                           
  5586 ;; *************** function _max_write *****************
  5587 ;; Defined at:
  5588 ;;		line 10 in file "MAX7219.c"
  5589 ;; Parameters:    Size  Location     Type
  5590 ;;  row             2   18[COMRAM] int 
  5591 ;;  data            1   20[COMRAM] unsigned char 
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;  dev             2   27[COMRAM] int 
  5594 ;;  writeData       2   29[COMRAM] unsigned short 
  5595 ;;  devTarget       2   25[COMRAM] int 
  5596 ;;  offset          2   23[COMRAM] int 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  1    wreg      void 
  5599 ;; Registers used:
  5600 ;;		wreg, status,2, status,0, cstack
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5606 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5607 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5608 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5609 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5610 ;;Total ram usage:       13 bytes
  5611 ;; Hardware stack levels used: 1
  5612 ;; Hardware stack levels required when called: 5
  5613 ;; This function calls:
  5614 ;;		_SPI_Exchange8bit
  5615 ;;		___awdiv
  5616 ;; This function is called by:
  5617 ;;		_flushBuffer
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text20
  5622   00095A                     __ptext20:
  5623                           	callstack 0
  5624   00095A                     _max_write:
  5625                           	callstack 21
  5626   00095A                     
  5627                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  5628   00095A  0EFF               	movlw	255
  5629   00095C  2413               	addwf	max_write@row^0,w,c
  5630   00095E  6E0B               	movwf	___awdiv@dividend^0,c
  5631   000960  0EFF               	movlw	255
  5632   000962  2014               	addwfc	(max_write@row+1)^0,w,c
  5633   000964  6E0C               	movwf	(___awdiv@dividend+1)^0,c
  5634   000966  0E00               	movlw	0
  5635   000968  6E0E               	movwf	(___awdiv@divisor+1)^0,c
  5636   00096A  0E08               	movlw	8
  5637   00096C  6E0D               	movwf	___awdiv@divisor^0,c
  5638   00096E  EC4B  F004         	call	___awdiv	;wreg free
  5639   000972  C00B  F01A         	movff	?___awdiv,max_write@devTarget
  5640   000976  C00C  F01B         	movff	?___awdiv+1,max_write@devTarget+1
  5641   00097A                     
  5642                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  5643   00097A  C01A  F016         	movff	max_write@devTarget,??_max_write
  5644   00097E  C01B  F017         	movff	max_write@devTarget+1,??_max_write+1
  5645   000982  90D8               	bcf	status,0,c
  5646   000984  3616               	rlcf	??_max_write^0,f,c
  5647   000986  3617               	rlcf	(??_max_write+1)^0,f,c
  5648   000988  90D8               	bcf	status,0,c
  5649   00098A  3616               	rlcf	??_max_write^0,f,c
  5650   00098C  3617               	rlcf	(??_max_write+1)^0,f,c
  5651   00098E  90D8               	bcf	status,0,c
  5652   000990  3616               	rlcf	??_max_write^0,f,c
  5653   000992  3617               	rlcf	(??_max_write+1)^0,f,c
  5654   000994  C016  F018         	movff	??_max_write,max_write@offset
  5655   000998  C017  F019         	movff	??_max_write+1,max_write@offset+1
  5656   00099C  948B               	bcf	139,2,c	;volatile
  5657   00099E                     
  5658                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  5659   00099E  0E00               	movlw	0
  5660   0009A0  6E1D               	movwf	(max_write@dev+1)^0,c
  5661   0009A2  0E00               	movlw	0
  5662   0009A4  6E1C               	movwf	max_write@dev^0,c
  5663   0009A6                     l3344:
  5664                           
  5665                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  5666   0009A6  501A               	movf	max_write@devTarget^0,w,c
  5667   0009A8  181C               	xorwf	max_write@dev^0,w,c
  5668   0009AA  E107               	bnz	u2611
  5669   0009AC  501B               	movf	(max_write@devTarget+1)^0,w,c
  5670   0009AE  181D               	xorwf	(max_write@dev+1)^0,w,c
  5671   0009B0  A4D8               	btfss	status,2,c
  5672   0009B2  EFDD  F004         	goto	u2611
  5673   0009B6  EFDF  F004         	goto	u2610
  5674   0009BA                     u2611:
  5675   0009BA  EFF5  F004         	goto	l3352
  5676   0009BE                     u2610:
  5677   0009BE                     
  5678                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  5679   0009BE  5018               	movf	max_write@offset^0,w,c
  5680   0009C0  5C13               	subwf	max_write@row^0,w,c
  5681   0009C2  6E16               	movwf	??_max_write^0,c
  5682   0009C4  5019               	movf	(max_write@offset+1)^0,w,c
  5683   0009C6  5814               	subwfb	(max_write@row+1)^0,w,c
  5684   0009C8  6E17               	movwf	(??_max_write+1)^0,c
  5685   0009CA  C016  F017         	movff	??_max_write,??_max_write+1
  5686   0009CE  6A16               	clrf	??_max_write^0,c
  5687   0009D0  5015               	movf	max_write@data^0,w,c
  5688   0009D2  1016               	iorwf	??_max_write^0,w,c
  5689   0009D4  6E1E               	movwf	max_write@writeData^0,c
  5690   0009D6  5017               	movf	(??_max_write+1)^0,w,c
  5691   0009D8  6E1F               	movwf	(max_write@writeData+1)^0,c
  5692   0009DA                     
  5693                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5694   0009DA  501F               	movf	(max_write@writeData+1)^0,w,c
  5695   0009DC  EC1B  F009         	call	_SPI_Exchange8bit
  5696   0009E0                     
  5697                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  5698   0009E0  501E               	movf	max_write@writeData^0,w,c
  5699   0009E2  EC1B  F009         	call	_SPI_Exchange8bit
  5700                           
  5701                           ;MAX7219.c: 31:   }
  5702   0009E6  EFFB  F004         	goto	l3358
  5703   0009EA                     l3352:
  5704   0009EA                     
  5705                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5706   0009EA  0E00               	movlw	0
  5707   0009EC  EC1B  F009         	call	_SPI_Exchange8bit
  5708   0009F0                     
  5709                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  5710   0009F0  0E00               	movlw	0
  5711   0009F2  EC1B  F009         	call	_SPI_Exchange8bit
  5712   0009F6                     l3358:
  5713                           
  5714                           ;MAX7219.c: 46:  }
  5715   0009F6  4A1C               	infsnz	max_write@dev^0,f,c
  5716   0009F8  2A1D               	incf	(max_write@dev+1)^0,f,c
  5717   0009FA  BE1D               	btfsc	(max_write@dev+1)^0,7,c
  5718   0009FC  EF09  F005         	goto	u2621
  5719   000A00  501D               	movf	(max_write@dev+1)^0,w,c
  5720   000A02  E109               	bnz	u2620
  5721   000A04  0E04               	movlw	4
  5722   000A06  5C1C               	subwf	max_write@dev^0,w,c
  5723   000A08  A0D8               	btfss	status,0,c
  5724   000A0A  EF09  F005         	goto	u2621
  5725   000A0E  EF0B  F005         	goto	u2620
  5726   000A12                     u2621:
  5727   000A12  EFD3  F004         	goto	l3344
  5728   000A16                     u2620:
  5729   000A16  848B               	bsf	139,2,c	;volatile
  5730   000A18  0012               	return		;funcret
  5731   000A1A                     __end_of_max_write:
  5732                           	callstack 0
  5733                           
  5734 ;; *************** function ___awdiv *****************
  5735 ;; Defined at:
  5736 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5737 ;; Parameters:    Size  Location     Type
  5738 ;;  dividend        2   10[COMRAM] int 
  5739 ;;  divisor         2   12[COMRAM] int 
  5740 ;; Auto vars:     Size  Location     Type
  5741 ;;  quotient        2   16[COMRAM] int 
  5742 ;;  sign            1   15[COMRAM] unsigned char 
  5743 ;;  counter         1   14[COMRAM] unsigned char 
  5744 ;; Return value:  Size  Location     Type
  5745 ;;                  2   10[COMRAM] int 
  5746 ;; Registers used:
  5747 ;;		wreg, status,2, status,0
  5748 ;; Tracked objects:
  5749 ;;		On entry : 0/0
  5750 ;;		On exit  : 0/0
  5751 ;;		Unchanged: 0/0
  5752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5753 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5754 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5756 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5757 ;;Total ram usage:        8 bytes
  5758 ;; Hardware stack levels used: 1
  5759 ;; Hardware stack levels required when called: 4
  5760 ;; This function calls:
  5761 ;;		Nothing
  5762 ;; This function is called by:
  5763 ;;		_displayTime
  5764 ;;		_displayAlarmTime
  5765 ;;		_max_write
  5766 ;;		_flushBuffer
  5767 ;; This function uses a non-reentrant model
  5768 ;;
  5769                           
  5770                           	psect	text21
  5771   000896                     __ptext21:
  5772                           	callstack 0
  5773   000896                     ___awdiv:
  5774                           	callstack 21
  5775   000896  0E00               	movlw	0
  5776   000898  6E10               	movwf	___awdiv@sign^0,c
  5777   00089A  BE0E               	btfsc	(___awdiv@divisor+1)^0,7,c
  5778   00089C  EF54  F004         	goto	u2550
  5779   0008A0  EF52  F004         	goto	u2551
  5780   0008A4                     u2551:
  5781   0008A4  EF5A  F004         	goto	l3294
  5782   0008A8                     u2550:
  5783   0008A8  6C0D               	negf	___awdiv@divisor^0,c
  5784   0008AA  1E0E               	comf	(___awdiv@divisor+1)^0,f,c
  5785   0008AC  B0D8               	btfsc	status,0,c
  5786   0008AE  2A0E               	incf	(___awdiv@divisor+1)^0,f,c
  5787   0008B0  0E01               	movlw	1
  5788   0008B2  6E10               	movwf	___awdiv@sign^0,c
  5789   0008B4                     l3294:
  5790   0008B4  BE0C               	btfsc	(___awdiv@dividend+1)^0,7,c
  5791   0008B6  EF61  F004         	goto	u2560
  5792   0008BA  EF5F  F004         	goto	u2561
  5793   0008BE                     u2561:
  5794   0008BE  EF67  F004         	goto	l3300
  5795   0008C2                     u2560:
  5796   0008C2  6C0B               	negf	___awdiv@dividend^0,c
  5797   0008C4  1E0C               	comf	(___awdiv@dividend+1)^0,f,c
  5798   0008C6  B0D8               	btfsc	status,0,c
  5799   0008C8  2A0C               	incf	(___awdiv@dividend+1)^0,f,c
  5800   0008CA  0E01               	movlw	1
  5801   0008CC  1A10               	xorwf	___awdiv@sign^0,f,c
  5802   0008CE                     l3300:
  5803   0008CE  0E00               	movlw	0
  5804   0008D0  6E12               	movwf	(___awdiv@quotient+1)^0,c
  5805   0008D2  0E00               	movlw	0
  5806   0008D4  6E11               	movwf	___awdiv@quotient^0,c
  5807   0008D6  500D               	movf	___awdiv@divisor^0,w,c
  5808   0008D8  100E               	iorwf	(___awdiv@divisor+1)^0,w,c
  5809   0008DA  B4D8               	btfsc	status,2,c
  5810   0008DC  EF72  F004         	goto	u2571
  5811   0008E0  EF74  F004         	goto	u2570
  5812   0008E4                     u2571:
  5813   0008E4  EF9C  F004         	goto	l3322
  5814   0008E8                     u2570:
  5815   0008E8  0E01               	movlw	1
  5816   0008EA  6E0F               	movwf	___awdiv@counter^0,c
  5817   0008EC  EF7C  F004         	goto	l3308
  5818   0008F0                     l3306:
  5819   0008F0  90D8               	bcf	status,0,c
  5820   0008F2  360D               	rlcf	___awdiv@divisor^0,f,c
  5821   0008F4  360E               	rlcf	(___awdiv@divisor+1)^0,f,c
  5822   0008F6  2A0F               	incf	___awdiv@counter^0,f,c
  5823   0008F8                     l3308:
  5824   0008F8  AE0E               	btfss	(___awdiv@divisor+1)^0,7,c
  5825   0008FA  EF81  F004         	goto	u2581
  5826   0008FE  EF83  F004         	goto	u2580
  5827   000902                     u2581:
  5828   000902  EF78  F004         	goto	l3306
  5829   000906                     u2580:
  5830   000906                     l3310:
  5831   000906  90D8               	bcf	status,0,c
  5832   000908  3611               	rlcf	___awdiv@quotient^0,f,c
  5833   00090A  3612               	rlcf	(___awdiv@quotient+1)^0,f,c
  5834   00090C  500D               	movf	___awdiv@divisor^0,w,c
  5835   00090E  5C0B               	subwf	___awdiv@dividend^0,w,c
  5836   000910  500E               	movf	(___awdiv@divisor+1)^0,w,c
  5837   000912  580C               	subwfb	(___awdiv@dividend+1)^0,w,c
  5838   000914  A0D8               	btfss	status,0,c
  5839   000916  EF8F  F004         	goto	u2591
  5840   00091A  EF91  F004         	goto	u2590
  5841   00091E                     u2591:
  5842   00091E  EF96  F004         	goto	l3318
  5843   000922                     u2590:
  5844   000922  500D               	movf	___awdiv@divisor^0,w,c
  5845   000924  5E0B               	subwf	___awdiv@dividend^0,f,c
  5846   000926  500E               	movf	(___awdiv@divisor+1)^0,w,c
  5847   000928  5A0C               	subwfb	(___awdiv@dividend+1)^0,f,c
  5848   00092A  8011               	bsf	___awdiv@quotient^0,0,c
  5849   00092C                     l3318:
  5850   00092C  90D8               	bcf	status,0,c
  5851   00092E  320E               	rrcf	(___awdiv@divisor+1)^0,f,c
  5852   000930  320D               	rrcf	___awdiv@divisor^0,f,c
  5853   000932  2E0F               	decfsz	___awdiv@counter^0,f,c
  5854   000934  EF83  F004         	goto	l3310
  5855   000938                     l3322:
  5856   000938  5010               	movf	___awdiv@sign^0,w,c
  5857   00093A  B4D8               	btfsc	status,2,c
  5858   00093C  EFA2  F004         	goto	u2601
  5859   000940  EFA4  F004         	goto	u2600
  5860   000944                     u2601:
  5861   000944  EFA8  F004         	goto	l3326
  5862   000948                     u2600:
  5863   000948  6C11               	negf	___awdiv@quotient^0,c
  5864   00094A  1E12               	comf	(___awdiv@quotient+1)^0,f,c
  5865   00094C  B0D8               	btfsc	status,0,c
  5866   00094E  2A12               	incf	(___awdiv@quotient+1)^0,f,c
  5867   000950                     l3326:
  5868   000950  C011  F00B         	movff	___awdiv@quotient,?___awdiv
  5869   000954  C012  F00C         	movff	___awdiv@quotient+1,?___awdiv+1
  5870   000958  0012               	return		;funcret
  5871   00095A                     __end_of___awdiv:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _SPI_Exchange8bit *****************
  5875 ;; Defined at:
  5876 ;;		line 77 in file "mcc_generated_files/spi.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;  data            1    wreg     unsigned char 
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;  data            1   10[COMRAM] unsigned char 
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      unsigned char 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;Total ram usage:        1 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; Hardware stack levels required when called: 4
  5897 ;; This function calls:
  5898 ;;		Nothing
  5899 ;; This function is called by:
  5900 ;;		_max_write
  5901 ;;		_max7219_cmd
  5902 ;;		_SPI_Exchange8bitBuffer
  5903 ;; This function uses a non-reentrant model
  5904 ;;
  5905                           
  5906                           	psect	text22
  5907   001236                     __ptext22:
  5908                           	callstack 0
  5909   001236                     _SPI_Exchange8bit:
  5910                           	callstack 21
  5911                           
  5912                           ;incstack = 0
  5913                           ;SPI_Exchange8bit@data stored from wreg
  5914   001236  6E0B               	movwf	SPI_Exchange8bit@data^0,c
  5915   001238                     
  5916                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  5917   001238  9EC6               	bcf	198,7,c	;volatile
  5918   00123A                     
  5919                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  5920   00123A  C00B  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  5921   00123E                     l18:
  5922                           
  5923                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  5924   00123E  A0C7               	btfss	199,0,c	;volatile
  5925   001240  EF24  F009         	goto	u2541
  5926   001244  EF26  F009         	goto	u2540
  5927   001248                     u2541:
  5928   001248  EF1F  F009         	goto	l18
  5929   00124C                     u2540:
  5930   00124C                     
  5931                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  5932   00124C  50C9               	movf	201,w,c	;volatile
  5933   00124E  0012               	return		;funcret
  5934   001250                     __end_of_SPI_Exchange8bit:
  5935                           	callstack 0
  5936                           
  5937 ;; *************** function ___awmod *****************
  5938 ;; Defined at:
  5939 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5940 ;; Parameters:    Size  Location     Type
  5941 ;;  dividend        2   10[COMRAM] int 
  5942 ;;  divisor         2   12[COMRAM] int 
  5943 ;; Auto vars:     Size  Location     Type
  5944 ;;  sign            1   15[COMRAM] unsigned char 
  5945 ;;  counter         1   14[COMRAM] unsigned char 
  5946 ;; Return value:  Size  Location     Type
  5947 ;;                  2   10[COMRAM] int 
  5948 ;; Registers used:
  5949 ;;		wreg, status,2, status,0
  5950 ;; Tracked objects:
  5951 ;;		On entry : 0/0
  5952 ;;		On exit  : 0/0
  5953 ;;		Unchanged: 0/0
  5954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5955 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5956 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5958 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;Total ram usage:        6 bytes
  5960 ;; Hardware stack levels used: 1
  5961 ;; Hardware stack levels required when called: 4
  5962 ;; This function calls:
  5963 ;;		Nothing
  5964 ;; This function is called by:
  5965 ;;		_displayTime
  5966 ;;		_displayAlarmTime
  5967 ;;		_checkButtons
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text23
  5972   000CF2                     __ptext23:
  5973                           	callstack 0
  5974   000CF2                     ___awmod:
  5975                           	callstack 25
  5976   000CF2  0E00               	movlw	0
  5977   000CF4  6E10               	movwf	___awmod@sign^0,c
  5978   000CF6  BE0C               	btfsc	(___awmod@dividend+1)^0,7,c
  5979   000CF8  EF82  F006         	goto	u1730
  5980   000CFC  EF80  F006         	goto	u1731
  5981   000D00                     u1731:
  5982   000D00  EF88  F006         	goto	l2692
  5983   000D04                     u1730:
  5984   000D04  6C0B               	negf	___awmod@dividend^0,c
  5985   000D06  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  5986   000D08  B0D8               	btfsc	status,0,c
  5987   000D0A  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  5988   000D0C  0E01               	movlw	1
  5989   000D0E  6E10               	movwf	___awmod@sign^0,c
  5990   000D10                     l2692:
  5991   000D10  BE0E               	btfsc	(___awmod@divisor+1)^0,7,c
  5992   000D12  EF8F  F006         	goto	u1740
  5993   000D16  EF8D  F006         	goto	u1741
  5994   000D1A                     u1741:
  5995   000D1A  EF93  F006         	goto	l2696
  5996   000D1E                     u1740:
  5997   000D1E  6C0D               	negf	___awmod@divisor^0,c
  5998   000D20  1E0E               	comf	(___awmod@divisor+1)^0,f,c
  5999   000D22  B0D8               	btfsc	status,0,c
  6000   000D24  2A0E               	incf	(___awmod@divisor+1)^0,f,c
  6001   000D26                     l2696:
  6002   000D26  500D               	movf	___awmod@divisor^0,w,c
  6003   000D28  100E               	iorwf	(___awmod@divisor+1)^0,w,c
  6004   000D2A  B4D8               	btfsc	status,2,c
  6005   000D2C  EF9A  F006         	goto	u1751
  6006   000D30  EF9C  F006         	goto	u1750
  6007   000D34                     u1751:
  6008   000D34  EFC0  F006         	goto	l2712
  6009   000D38                     u1750:
  6010   000D38  0E01               	movlw	1
  6011   000D3A  6E0F               	movwf	___awmod@counter^0,c
  6012   000D3C  EFA4  F006         	goto	l2702
  6013   000D40                     l2700:
  6014   000D40  90D8               	bcf	status,0,c
  6015   000D42  360D               	rlcf	___awmod@divisor^0,f,c
  6016   000D44  360E               	rlcf	(___awmod@divisor+1)^0,f,c
  6017   000D46  2A0F               	incf	___awmod@counter^0,f,c
  6018   000D48                     l2702:
  6019   000D48  AE0E               	btfss	(___awmod@divisor+1)^0,7,c
  6020   000D4A  EFA9  F006         	goto	u1761
  6021   000D4E  EFAB  F006         	goto	u1760
  6022   000D52                     u1761:
  6023   000D52  EFA0  F006         	goto	l2700
  6024   000D56                     u1760:
  6025   000D56                     l2704:
  6026   000D56  500D               	movf	___awmod@divisor^0,w,c
  6027   000D58  5C0B               	subwf	___awmod@dividend^0,w,c
  6028   000D5A  500E               	movf	(___awmod@divisor+1)^0,w,c
  6029   000D5C  580C               	subwfb	(___awmod@dividend+1)^0,w,c
  6030   000D5E  A0D8               	btfss	status,0,c
  6031   000D60  EFB4  F006         	goto	u1771
  6032   000D64  EFB6  F006         	goto	u1770
  6033   000D68                     u1771:
  6034   000D68  EFBA  F006         	goto	l2708
  6035   000D6C                     u1770:
  6036   000D6C  500D               	movf	___awmod@divisor^0,w,c
  6037   000D6E  5E0B               	subwf	___awmod@dividend^0,f,c
  6038   000D70  500E               	movf	(___awmod@divisor+1)^0,w,c
  6039   000D72  5A0C               	subwfb	(___awmod@dividend+1)^0,f,c
  6040   000D74                     l2708:
  6041   000D74  90D8               	bcf	status,0,c
  6042   000D76  320E               	rrcf	(___awmod@divisor+1)^0,f,c
  6043   000D78  320D               	rrcf	___awmod@divisor^0,f,c
  6044   000D7A  2E0F               	decfsz	___awmod@counter^0,f,c
  6045   000D7C  EFAB  F006         	goto	l2704
  6046   000D80                     l2712:
  6047   000D80  5010               	movf	___awmod@sign^0,w,c
  6048   000D82  B4D8               	btfsc	status,2,c
  6049   000D84  EFC6  F006         	goto	u1781
  6050   000D88  EFC8  F006         	goto	u1780
  6051   000D8C                     u1781:
  6052   000D8C  EFCC  F006         	goto	l2716
  6053   000D90                     u1780:
  6054   000D90  6C0B               	negf	___awmod@dividend^0,c
  6055   000D92  1E0C               	comf	(___awmod@dividend+1)^0,f,c
  6056   000D94  B0D8               	btfsc	status,0,c
  6057   000D96  2A0C               	incf	(___awmod@dividend+1)^0,f,c
  6058   000D98                     l2716:
  6059   000D98  C00B  F00B         	movff	___awmod@dividend,?___awmod
  6060   000D9C  C00C  F00C         	movff	___awmod@dividend+1,?___awmod+1
  6061   000DA0  0012               	return		;funcret
  6062   000DA2                     __end_of___awmod:
  6063                           	callstack 0
  6064                           
  6065 ;; *************** function _clearAlarm *****************
  6066 ;; Defined at:
  6067 ;;		line 233 in file "main.c"
  6068 ;; Parameters:    Size  Location     Type
  6069 ;;		None
  6070 ;; Auto vars:     Size  Location     Type
  6071 ;;		None
  6072 ;; Return value:  Size  Location     Type
  6073 ;;                  1    wreg      void 
  6074 ;; Registers used:
  6075 ;;		wreg, status,2
  6076 ;; Tracked objects:
  6077 ;;		On entry : 0/0
  6078 ;;		On exit  : 0/0
  6079 ;;		Unchanged: 0/0
  6080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6085 ;;Total ram usage:        0 bytes
  6086 ;; Hardware stack levels used: 1
  6087 ;; Hardware stack levels required when called: 4
  6088 ;; This function calls:
  6089 ;;		Nothing
  6090 ;; This function is called by:
  6091 ;;		_triggerAlarm
  6092 ;;		_checkButtons
  6093 ;; This function uses a non-reentrant model
  6094 ;;
  6095                           
  6096                           	psect	text24
  6097   00128A                     __ptext24:
  6098                           	callstack 0
  6099   00128A                     _clearAlarm:
  6100                           	callstack 24
  6101   00128A                     
  6102                           ;main.c: 235:     alarmTriggered = 0;
  6103   00128A  0E00               	movlw	0
  6104   00128C  0100               	movlb	0	; () banked
  6105   00128E  6FA5               	movwf	_alarmTriggered& (0+255),b
  6106                           
  6107                           ;main.c: 236:     alarmSet = 0;
  6108   001290  0E00               	movlw	0
  6109   001292  6FA7               	movwf	_alarmSet& (0+255),b
  6110   001294                     
  6111                           ; BSR set to: 0
  6112   001294  0012               	return		;funcret
  6113   001296                     __end_of_clearAlarm:
  6114                           	callstack 0
  6115                           
  6116 ;; *************** function _TMR1_StartTimer *****************
  6117 ;; Defined at:
  6118 ;;		line 91 in file "mcc_generated_files/tmr1.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;		None
  6121 ;; Auto vars:     Size  Location     Type
  6122 ;;		None
  6123 ;; Return value:  Size  Location     Type
  6124 ;;                  1    wreg      void 
  6125 ;; Registers used:
  6126 ;;		None
  6127 ;; Tracked objects:
  6128 ;;		On entry : 0/0
  6129 ;;		On exit  : 0/0
  6130 ;;		Unchanged: 0/0
  6131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6133 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6135 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6136 ;;Total ram usage:        0 bytes
  6137 ;; Hardware stack levels used: 1
  6138 ;; Hardware stack levels required when called: 4
  6139 ;; This function calls:
  6140 ;;		Nothing
  6141 ;; This function is called by:
  6142 ;;		_main
  6143 ;; This function uses a non-reentrant model
  6144 ;;
  6145                           
  6146                           	psect	text25
  6147   0012C4                     __ptext25:
  6148                           	callstack 0
  6149   0012C4                     _TMR1_StartTimer:
  6150                           	callstack 26
  6151   0012C4                     
  6152                           ;mcc_generated_files/tmr1.c: 94:     T1CONbits.TMR1ON = 1;
  6153   0012C4  80CD               	bsf	205,0,c	;volatile
  6154   0012C6  0012               	return		;funcret
  6155   0012C8                     __end_of_TMR1_StartTimer:
  6156                           	callstack 0
  6157                           
  6158 ;; *************** function _SYSTEM_Initialize *****************
  6159 ;; Defined at:
  6160 ;;		line 108 in file "mcc_generated_files/mcc.c"
  6161 ;; Parameters:    Size  Location     Type
  6162 ;;		None
  6163 ;; Auto vars:     Size  Location     Type
  6164 ;;		None
  6165 ;; Return value:  Size  Location     Type
  6166 ;;                  1    wreg      void 
  6167 ;; Registers used:
  6168 ;;		wreg, status,2, status,0, cstack
  6169 ;; Tracked objects:
  6170 ;;		On entry : 0/0
  6171 ;;		On exit  : 0/0
  6172 ;;		Unchanged: 0/0
  6173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6175 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6176 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6177 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6178 ;;Total ram usage:        0 bytes
  6179 ;; Hardware stack levels used: 1
  6180 ;; Hardware stack levels required when called: 6
  6181 ;; This function calls:
  6182 ;;		_EUSART_Initialize
  6183 ;;		_INTERRUPT_Initialize
  6184 ;;		_OSCILLATOR_Initialize
  6185 ;;		_PIN_MANAGER_Initialize
  6186 ;;		_SPI_Initialize
  6187 ;;		_TMR1_Initialize
  6188 ;; This function is called by:
  6189 ;;		_main
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           	psect	text26
  6194   001250                     __ptext26:
  6195                           	callstack 0
  6196   001250                     _SYSTEM_Initialize:
  6197                           	callstack 24
  6198   001250                     
  6199                           ;mcc_generated_files/mcc.c: 110:     INTERRUPT_Initialize();
  6200   001250  EC64  F009         	call	_INTERRUPT_Initialize	;wreg free
  6201   001254                     
  6202                           ;mcc_generated_files/mcc.c: 111:     PIN_MANAGER_Initialize();
  6203   001254  EC0A  F009         	call	_PIN_MANAGER_Initialize	;wreg free
  6204   001258                     
  6205                           ;mcc_generated_files/mcc.c: 112:     OSCILLATOR_Initialize();
  6206   001258  EC50  F009         	call	_OSCILLATOR_Initialize	;wreg free
  6207   00125C                     
  6208                           ;mcc_generated_files/mcc.c: 113:     SPI_Initialize();
  6209   00125C  EC3E  F009         	call	_SPI_Initialize	;wreg free
  6210   001260                     
  6211                           ;mcc_generated_files/mcc.c: 114:     TMR1_Initialize();
  6212   001260  ECF7  F008         	call	_TMR1_Initialize	;wreg free
  6213   001264                     
  6214                           ;mcc_generated_files/mcc.c: 115:     EUSART_Initialize();
  6215   001264  EC25  F008         	call	_EUSART_Initialize	;wreg free
  6216   001268  0012               	return		;funcret
  6217   00126A                     __end_of_SYSTEM_Initialize:
  6218                           	callstack 0
  6219                           
  6220 ;; *************** function _TMR1_Initialize *****************
  6221 ;; Defined at:
  6222 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6223 ;; Parameters:    Size  Location     Type
  6224 ;;		None
  6225 ;; Auto vars:     Size  Location     Type
  6226 ;;		None
  6227 ;; Return value:  Size  Location     Type
  6228 ;;                  1    wreg      void 
  6229 ;; Registers used:
  6230 ;;		wreg, status,2, status,0, cstack
  6231 ;; Tracked objects:
  6232 ;;		On entry : 0/0
  6233 ;;		On exit  : 0/0
  6234 ;;		Unchanged: 0/0
  6235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6239 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6240 ;;Total ram usage:        0 bytes
  6241 ;; Hardware stack levels used: 1
  6242 ;; Hardware stack levels required when called: 5
  6243 ;; This function calls:
  6244 ;;		_TMR1_SetInterruptHandler
  6245 ;; This function is called by:
  6246 ;;		_SYSTEM_Initialize
  6247 ;; This function uses a non-reentrant model
  6248 ;;
  6249                           
  6250                           	psect	text27
  6251   0011EE                     __ptext27:
  6252                           	callstack 0
  6253   0011EE                     _TMR1_Initialize:
  6254                           	callstack 24
  6255   0011EE                     
  6256                           ;mcc_generated_files/tmr1.c: 70:   TMR1H = 0x7F;
  6257   0011EE  0E7F               	movlw	127
  6258   0011F0  6ECF               	movwf	207,c	;volatile
  6259                           
  6260                           ;mcc_generated_files/tmr1.c: 73:   TMR1L = 0x3E;
  6261   0011F2  0E3E               	movlw	62
  6262   0011F4  6ECE               	movwf	206,c	;volatile
  6263   0011F6                     
  6264                           ;mcc_generated_files/tmr1.c: 76:     timer1ReloadVal=TMR1;
  6265   0011F6  CFCE F04B          	movff	4046,_timer1ReloadVal	;volatile
  6266   0011FA  CFCF F04C          	movff	4047,_timer1ReloadVal+1	;volatile
  6267   0011FE                     
  6268                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  6269   0011FE  909E               	bcf	158,0,c	;volatile
  6270   001200                     
  6271                           ;mcc_generated_files/tmr1.c: 82:     PIE1bits.TMR1IE = 1;
  6272   001200  809D               	bsf	157,0,c	;volatile
  6273   001202                     
  6274                           ;mcc_generated_files/tmr1.c: 85:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6275   001202  0EBE               	movlw	low _TMR1_DefaultInterruptHandler
  6276   001204  6E0B               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  6277   001206  0E12               	movlw	high _TMR1_DefaultInterruptHandler
  6278   001208  6E0C               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  6279   00120A  EC4B  F009         	call	_TMR1_SetInterruptHandler	;wreg free
  6280   00120E                     
  6281                           ;mcc_generated_files/tmr1.c: 88:     T1CON = 0x0E;
  6282   00120E  0E0E               	movlw	14
  6283   001210  6ECD               	movwf	205,c	;volatile
  6284   001212  0012               	return		;funcret
  6285   001214                     __end_of_TMR1_Initialize:
  6286                           	callstack 0
  6287                           
  6288 ;; *************** function _TMR1_SetInterruptHandler *****************
  6289 ;; Defined at:
  6290 ;;		line 163 in file "mcc_generated_files/tmr1.c"
  6291 ;; Parameters:    Size  Location     Type
  6292 ;;  InterruptHan    2   10[COMRAM] PTR FTN()void 
  6293 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  6294 ;; Auto vars:     Size  Location     Type
  6295 ;;		None
  6296 ;; Return value:  Size  Location     Type
  6297 ;;                  1    wreg      void 
  6298 ;; Registers used:
  6299 ;;		wreg, status,2, status,0
  6300 ;; Tracked objects:
  6301 ;;		On entry : 0/0
  6302 ;;		On exit  : 0/0
  6303 ;;		Unchanged: 0/0
  6304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6306 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6308 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6309 ;;Total ram usage:        2 bytes
  6310 ;; Hardware stack levels used: 1
  6311 ;; Hardware stack levels required when called: 4
  6312 ;; This function calls:
  6313 ;;		Nothing
  6314 ;; This function is called by:
  6315 ;;		_TMR1_Initialize
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text28
  6320   001296                     __ptext28:
  6321                           	callstack 0
  6322   001296                     _TMR1_SetInterruptHandler:
  6323                           	callstack 24
  6324   001296                     
  6325                           ;mcc_generated_files/tmr1.c: 164:     TMR1_InterruptHandler = InterruptHandler;
  6326   001296  C00B  F0F5         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  6327   00129A  C00C  F0F6         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  6328   00129E  0012               	return		;funcret
  6329   0012A0                     __end_of_TMR1_SetInterruptHandler:
  6330                           	callstack 0
  6331                           
  6332 ;; *************** function _SPI_Initialize *****************
  6333 ;; Defined at:
  6334 ;;		line 63 in file "mcc_generated_files/spi.c"
  6335 ;; Parameters:    Size  Location     Type
  6336 ;;		None
  6337 ;; Auto vars:     Size  Location     Type
  6338 ;;		None
  6339 ;; Return value:  Size  Location     Type
  6340 ;;                  1    wreg      void 
  6341 ;; Registers used:
  6342 ;;		wreg, status,2
  6343 ;; Tracked objects:
  6344 ;;		On entry : 0/0
  6345 ;;		On exit  : 0/0
  6346 ;;		Unchanged: 0/0
  6347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;Total ram usage:        0 bytes
  6353 ;; Hardware stack levels used: 1
  6354 ;; Hardware stack levels required when called: 4
  6355 ;; This function calls:
  6356 ;;		Nothing
  6357 ;; This function is called by:
  6358 ;;		_SYSTEM_Initialize
  6359 ;; This function uses a non-reentrant model
  6360 ;;
  6361                           
  6362                           	psect	text29
  6363   00127C                     __ptext29:
  6364                           	callstack 0
  6365   00127C                     _SPI_Initialize:
  6366                           	callstack 25
  6367   00127C                     
  6368                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  6369   00127C  0EC0               	movlw	192
  6370   00127E  6EC7               	movwf	199,c	;volatile
  6371                           
  6372                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  6373   001280  0E30               	movlw	48
  6374   001282  6EC6               	movwf	198,c	;volatile
  6375                           
  6376                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  6377   001284  0E00               	movlw	0
  6378   001286  6EC8               	movwf	200,c	;volatile
  6379   001288  0012               	return		;funcret
  6380   00128A                     __end_of_SPI_Initialize:
  6381                           	callstack 0
  6382                           
  6383 ;; *************** function _PIN_MANAGER_Initialize *****************
  6384 ;; Defined at:
  6385 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6386 ;; Parameters:    Size  Location     Type
  6387 ;;		None
  6388 ;; Auto vars:     Size  Location     Type
  6389 ;;		None
  6390 ;; Return value:  Size  Location     Type
  6391 ;;                  1    wreg      void 
  6392 ;; Registers used:
  6393 ;;		wreg, status,2
  6394 ;; Tracked objects:
  6395 ;;		On entry : 0/0
  6396 ;;		On exit  : 0/0
  6397 ;;		Unchanged: 0/0
  6398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6399 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6400 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6401 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6402 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;Total ram usage:        0 bytes
  6404 ;; Hardware stack levels used: 1
  6405 ;; Hardware stack levels required when called: 4
  6406 ;; This function calls:
  6407 ;;		Nothing
  6408 ;; This function is called by:
  6409 ;;		_SYSTEM_Initialize
  6410 ;; This function uses a non-reentrant model
  6411 ;;
  6412                           
  6413                           	psect	text30
  6414   001214                     __ptext30:
  6415                           	callstack 0
  6416   001214                     _PIN_MANAGER_Initialize:
  6417                           	callstack 25
  6418   001214                     
  6419                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  6420   001214  0E00               	movlw	0
  6421   001216  6E89               	movwf	137,c	;volatile
  6422                           
  6423                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  6424   001218  0E00               	movlw	0
  6425   00121A  6E8A               	movwf	138,c	;volatile
  6426                           
  6427                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  6428   00121C  0E2C               	movlw	44
  6429   00121E  6E8B               	movwf	139,c	;volatile
  6430   001220                     
  6431                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  6432   001220  6892               	setf	146,c	;volatile
  6433   001222                     
  6434                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  6435   001222  6893               	setf	147,c	;volatile
  6436                           
  6437                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x92;
  6438   001224  0E92               	movlw	146
  6439   001226  6E94               	movwf	148,c	;volatile
  6440                           
  6441                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  6442   001228  0E0A               	movlw	10
  6443   00122A  6E7F               	movwf	127,c	;volatile
  6444                           
  6445                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  6446   00122C  0E1F               	movlw	31
  6447   00122E  6E7E               	movwf	126,c	;volatile
  6448   001230                     
  6449                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  6450   001230  687C               	setf	124,c	;volatile
  6451   001232                     
  6452                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  6453   001232  9EF1               	bcf	241,7,c	;volatile
  6454   001234  0012               	return		;funcret
  6455   001236                     __end_of_PIN_MANAGER_Initialize:
  6456                           	callstack 0
  6457                           
  6458 ;; *************** function _OSCILLATOR_Initialize *****************
  6459 ;; Defined at:
  6460 ;;		line 118 in file "mcc_generated_files/mcc.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;		None
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;		None
  6465 ;; Return value:  Size  Location     Type
  6466 ;;                  1    wreg      void 
  6467 ;; Registers used:
  6468 ;;		wreg, status,2
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6476 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6477 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6478 ;;Total ram usage:        0 bytes
  6479 ;; Hardware stack levels used: 1
  6480 ;; Hardware stack levels required when called: 4
  6481 ;; This function calls:
  6482 ;;		Nothing
  6483 ;; This function is called by:
  6484 ;;		_SYSTEM_Initialize
  6485 ;; This function uses a non-reentrant model
  6486 ;;
  6487                           
  6488                           	psect	text31
  6489   0012A0                     __ptext31:
  6490                           	callstack 0
  6491   0012A0                     _OSCILLATOR_Initialize:
  6492                           	callstack 25
  6493   0012A0                     
  6494                           ;mcc_generated_files/mcc.c: 121:     OSCCON = 0x6A;
  6495   0012A0  0E6A               	movlw	106
  6496   0012A2  6ED3               	movwf	211,c	;volatile
  6497                           
  6498                           ;mcc_generated_files/mcc.c: 123:     OSCTUNE = 0x00;
  6499   0012A4  0E00               	movlw	0
  6500   0012A6  6E9B               	movwf	155,c	;volatile
  6501   0012A8  0012               	return		;funcret
  6502   0012AA                     __end_of_OSCILLATOR_Initialize:
  6503                           	callstack 0
  6504                           
  6505 ;; *************** function _INTERRUPT_Initialize *****************
  6506 ;; Defined at:
  6507 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;		None
  6510 ;; Auto vars:     Size  Location     Type
  6511 ;;		None
  6512 ;; Return value:  Size  Location     Type
  6513 ;;                  1    wreg      void 
  6514 ;; Registers used:
  6515 ;;		None
  6516 ;; Tracked objects:
  6517 ;;		On entry : 0/0
  6518 ;;		On exit  : 0/0
  6519 ;;		Unchanged: 0/0
  6520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;Total ram usage:        0 bytes
  6526 ;; Hardware stack levels used: 1
  6527 ;; Hardware stack levels required when called: 4
  6528 ;; This function calls:
  6529 ;;		Nothing
  6530 ;; This function is called by:
  6531 ;;		_SYSTEM_Initialize
  6532 ;; This function uses a non-reentrant model
  6533 ;;
  6534                           
  6535                           	psect	text32
  6536   0012C8                     __ptext32:
  6537                           	callstack 0
  6538   0012C8                     _INTERRUPT_Initialize:
  6539                           	callstack 25
  6540   0012C8                     
  6541                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6542   0012C8  9ED0               	bcf	208,7,c	;volatile
  6543   0012CA  0012               	return		;funcret
  6544   0012CC                     __end_of_INTERRUPT_Initialize:
  6545                           	callstack 0
  6546                           
  6547 ;; *************** function _EUSART_Initialize *****************
  6548 ;; Defined at:
  6549 ;;		line 75 in file "mcc_generated_files/eusart.c"
  6550 ;; Parameters:    Size  Location     Type
  6551 ;;		None
  6552 ;; Auto vars:     Size  Location     Type
  6553 ;;		None
  6554 ;; Return value:  Size  Location     Type
  6555 ;;                  1    wreg      void 
  6556 ;; Registers used:
  6557 ;;		wreg, status,2, status,0, cstack
  6558 ;; Tracked objects:
  6559 ;;		On entry : 0/0
  6560 ;;		On exit  : 0/0
  6561 ;;		Unchanged: 0/0
  6562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6567 ;;Total ram usage:        0 bytes
  6568 ;; Hardware stack levels used: 1
  6569 ;; Hardware stack levels required when called: 5
  6570 ;; This function calls:
  6571 ;;		_EUSART_SetRxInterruptHandler
  6572 ;;		_EUSART_SetTxInterruptHandler
  6573 ;; This function is called by:
  6574 ;;		_SYSTEM_Initialize
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text33
  6579   00104A                     __ptext33:
  6580                           	callstack 0
  6581   00104A                     _EUSART_Initialize:
  6582                           	callstack 24
  6583   00104A                     
  6584                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RC1IE = 0;
  6585   00104A  9A9D               	bcf	157,5,c	;volatile
  6586                           
  6587                           ;mcc_generated_files/eusart.c: 79:     PIE1bits.TX1IE = 0;
  6588   00104C  989D               	bcf	157,4,c	;volatile
  6589   00104E                     
  6590                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6591   00104E  0E00               	movlw	0
  6592   001050  6E0B               	movwf	EUSART_SetTxInterruptHandler@handler^0,c
  6593   001052  0E00               	movlw	0
  6594   001054  6E0C               	movwf	(EUSART_SetTxInterruptHandler@handler+1)^0,c
  6595   001056  EC55  F009         	call	_EUSART_SetTxInterruptHandler	;wreg free
  6596                           
  6597                           ;mcc_generated_files/eusart.c: 82:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6598   00105A  0E00               	movlw	0
  6599   00105C  6E0B               	movwf	EUSART_SetRxInterruptHandler@handler^0,c
  6600   00105E  0E00               	movlw	0
  6601   001060  6E0C               	movwf	(EUSART_SetRxInterruptHandler@handler+1)^0,c
  6602   001062  EC5A  F009         	call	_EUSART_SetRxInterruptHandler	;wreg free
  6603   001066                     
  6604                           ;mcc_generated_files/eusart.c: 87:     BAUDCON = 0x08;
  6605   001066  0E08               	movlw	8
  6606   001068  6EB8               	movwf	184,c	;volatile
  6607   00106A                     
  6608                           ;mcc_generated_files/eusart.c: 90:     RCSTA = 0x90;
  6609   00106A  0E90               	movlw	144
  6610   00106C  6EAB               	movwf	171,c	;volatile
  6611   00106E                     
  6612                           ;mcc_generated_files/eusart.c: 93:     TXSTA = 0x24;
  6613   00106E  0E24               	movlw	36
  6614   001070  6EAC               	movwf	172,c	;volatile
  6615   001072                     
  6616                           ;mcc_generated_files/eusart.c: 96:     SPBRG = 0xCF;
  6617   001072  0ECF               	movlw	207
  6618   001074  6EAF               	movwf	175,c	;volatile
  6619   001076                     
  6620                           ;mcc_generated_files/eusart.c: 99:     SPBRGH = 0x00;
  6621   001076  0E00               	movlw	0
  6622   001078  6EB0               	movwf	176,c	;volatile
  6623   00107A                     
  6624                           ;mcc_generated_files/eusart.c: 103:     eusartTxHead = 0;
  6625   00107A  0E00               	movlw	0
  6626   00107C  6E54               	movwf	_eusartTxHead^0,c	;volatile
  6627   00107E                     
  6628                           ;mcc_generated_files/eusart.c: 104:     eusartTxTail = 0;
  6629   00107E  0E00               	movlw	0
  6630   001080  6E53               	movwf	_eusartTxTail^0,c	;volatile
  6631   001082                     
  6632                           ;mcc_generated_files/eusart.c: 105:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6633   001082  0E08               	movlw	8
  6634   001084  6E52               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  6635   001086                     
  6636                           ;mcc_generated_files/eusart.c: 107:     eusartRxHead = 0;
  6637   001086  0E00               	movlw	0
  6638   001088  6E51               	movwf	_eusartRxHead^0,c	;volatile
  6639   00108A                     
  6640                           ;mcc_generated_files/eusart.c: 108:     eusartRxTail = 0;
  6641   00108A  0E00               	movlw	0
  6642   00108C  6E50               	movwf	_eusartRxTail^0,c	;volatile
  6643   00108E                     
  6644                           ;mcc_generated_files/eusart.c: 109:     eusartRxCount = 0;
  6645   00108E  0E00               	movlw	0
  6646   001090  6E4F               	movwf	_eusartRxCount^0,c	;volatile
  6647   001092                     
  6648                           ;mcc_generated_files/eusart.c: 112:     PIE1bits.RC1IE = 1;
  6649   001092  8A9D               	bsf	157,5,c	;volatile
  6650   001094  0012               	return		;funcret
  6651   001096                     __end_of_EUSART_Initialize:
  6652                           	callstack 0
  6653                           
  6654 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6655 ;; Defined at:
  6656 ;;		line 212 in file "mcc_generated_files/eusart.c"
  6657 ;; Parameters:    Size  Location     Type
  6658 ;;  handler         2   10[COMRAM] PTR void 
  6659 ;; Auto vars:     Size  Location     Type
  6660 ;;		None
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  1    wreg      void 
  6663 ;; Registers used:
  6664 ;;		wreg, status,2, status,0
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;Total ram usage:        2 bytes
  6675 ;; Hardware stack levels used: 1
  6676 ;; Hardware stack levels required when called: 4
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_EUSART_Initialize
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text34
  6685   0012AA                     __ptext34:
  6686                           	callstack 0
  6687   0012AA                     _EUSART_SetTxInterruptHandler:
  6688                           	callstack 24
  6689   0012AA                     
  6690                           ;mcc_generated_files/eusart.c: 213:     EUSART_TxDefaultInterruptHandler = handler;
  6691   0012AA  C00B  F0F9         	movff	EUSART_SetTxInterruptHandler@handler,_EUSART_TxDefaultInterruptHandler
  6692   0012AE  C00C  F0FA         	movff	EUSART_SetTxInterruptHandler@handler+1,_EUSART_TxDefaultInterruptHandler+1
  6693   0012B2  0012               	return		;funcret
  6694   0012B4                     __end_of_EUSART_SetTxInterruptHandler:
  6695                           	callstack 0
  6696                           
  6697 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6698 ;; Defined at:
  6699 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6700 ;; Parameters:    Size  Location     Type
  6701 ;;  handler         2   10[COMRAM] PTR void 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;		None
  6704 ;; Return value:  Size  Location     Type
  6705 ;;                  1    wreg      void 
  6706 ;; Registers used:
  6707 ;;		wreg, status,2, status,0
  6708 ;; Tracked objects:
  6709 ;;		On entry : 0/0
  6710 ;;		On exit  : 0/0
  6711 ;;		Unchanged: 0/0
  6712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6716 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6717 ;;Total ram usage:        2 bytes
  6718 ;; Hardware stack levels used: 1
  6719 ;; Hardware stack levels required when called: 4
  6720 ;; This function calls:
  6721 ;;		Nothing
  6722 ;; This function is called by:
  6723 ;;		_EUSART_Initialize
  6724 ;; This function uses a non-reentrant model
  6725 ;;
  6726                           
  6727                           	psect	text35
  6728   0012B4                     __ptext35:
  6729                           	callstack 0
  6730   0012B4                     _EUSART_SetRxInterruptHandler:
  6731                           	callstack 24
  6732   0012B4                     
  6733                           ;mcc_generated_files/eusart.c: 217:     EUSART_RxDefaultInterruptHandler = handler;
  6734   0012B4  C00B  F0F7         	movff	EUSART_SetRxInterruptHandler@handler,_EUSART_RxDefaultInterruptHandler
  6735   0012B8  C00C  F0F8         	movff	EUSART_SetRxInterruptHandler@handler+1,_EUSART_RxDefaultInterruptHandler+1
  6736   0012BC  0012               	return		;funcret
  6737   0012BE                     __end_of_EUSART_SetRxInterruptHandler:
  6738                           	callstack 0
  6739                           
  6740 ;; *************** function _INTERRUPT_InterruptManager *****************
  6741 ;; Defined at:
  6742 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6743 ;; Parameters:    Size  Location     Type
  6744 ;;		None
  6745 ;; Auto vars:     Size  Location     Type
  6746 ;;		None
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  1    wreg      void 
  6749 ;; Registers used:
  6750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6758 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6759 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6760 ;;Total ram usage:        4 bytes
  6761 ;; Hardware stack levels used: 1
  6762 ;; Hardware stack levels required when called: 3
  6763 ;; This function calls:
  6764 ;;		_TMR1_ISR
  6765 ;;		_btGetData
  6766 ;; This function is called by:
  6767 ;;		Interrupt level 2
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	intcode
  6772   000008                     __pintcode:
  6773                           	callstack 0
  6774   000008                     _INTERRUPT_InterruptManager:
  6775                           	callstack 21
  6776                           
  6777                           ;incstack = 0
  6778   000008  8255               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6779   00000A  CFFA F007          	movff	pclath,??_INTERRUPT_InterruptManager
  6780   00000E  CFFB F008          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6781   000012  CFD9 F009          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6782   000016  CFDA F00A          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6783   00001A                     
  6784                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6785   00001A  ACF2               	btfss	242,6,c	;volatile
  6786   00001C  EF12  F000         	goto	i2u240_41
  6787   000020  EF14  F000         	goto	i2u240_40
  6788   000024                     i2u240_41:
  6789   000024  EF4B  F000         	goto	i2l288
  6790   000028                     i2u240_40:
  6791   000028                     
  6792                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6793   000028  A09D               	btfss	157,0,c	;volatile
  6794   00002A  EF19  F000         	goto	i2u241_41
  6795   00002E  EF1B  F000         	goto	i2u241_40
  6796   000032                     i2u241_41:
  6797   000032  EF26  F000         	goto	i2l282
  6798   000036                     i2u241_40:
  6799   000036  A09E               	btfss	158,0,c	;volatile
  6800   000038  EF20  F000         	goto	i2u242_41
  6801   00003C  EF22  F000         	goto	i2u242_40
  6802   000040                     i2u242_41:
  6803   000040  EF26  F000         	goto	i2l282
  6804   000044                     i2u242_40:
  6805   000044                     
  6806                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  6807   000044  EC68  F008         	call	_TMR1_ISR	;wreg free
  6808                           
  6809                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6810   000048  EF4B  F000         	goto	i2l288
  6811   00004C                     i2l282:
  6812   00004C  A89D               	btfss	157,4,c	;volatile
  6813   00004E  EF2B  F000         	goto	i2u243_41
  6814   000052  EF2D  F000         	goto	i2u243_40
  6815   000056                     i2u243_41:
  6816   000056  EF37  F000         	goto	i2l284
  6817   00005A                     i2u243_40:
  6818   00005A                     
  6819                           ;mcc_generated_files/interrupt_manager.c: 69:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_TxDefaultInterruptHandler();
  6820   00005A  A89E               	btfss	158,4,c	;volatile
  6821   00005C  EF32  F000         	goto	i2u244_41
  6822   000060  EF34  F000         	goto	i2u244_40
  6823   000064                     i2u244_41:
  6824   000064  EF37  F000         	goto	i2l284
  6825   000068                     i2u244_40:
  6826   000068                     
  6827                           ;mcc_generated_files/interrupt_manager.c: 74:             PIR1bits.TX1IF = 0;
  6828   000068  989E               	bcf	158,4,c	;volatile
  6829                           
  6830                           ;mcc_generated_files/interrupt_manager.c: 75:         }
  6831   00006A  EF4B  F000         	goto	i2l288
  6832   00006E                     i2l284:
  6833   00006E  AA9D               	btfss	157,5,c	;volatile
  6834   000070  EF3C  F000         	goto	i2u245_41
  6835   000074  EF3E  F000         	goto	i2u245_40
  6836   000078                     i2u245_41:
  6837   000078  EF4B  F000         	goto	i2l283
  6838   00007C                     i2u245_40:
  6839   00007C  AA9E               	btfss	158,5,c	;volatile
  6840   00007E  EF43  F000         	goto	i2u246_41
  6841   000082  EF45  F000         	goto	i2u246_40
  6842   000086                     i2u246_41:
  6843   000086  EF4B  F000         	goto	i2l283
  6844   00008A                     i2u246_40:
  6845   00008A                     
  6846                           ;mcc_generated_files/interrupt_manager.c: 79:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             btGetData(RCREG);
  6847   00008A  50AE               	movf	174,w,c	;volatile
  6848   00008C  ECD1  F006         	call	_btGetData
  6849   000090                     
  6850                           ;mcc_generated_files/interrupt_manager.c: 84:             PIR1bits.RC1IF = 0;
  6851   000090  9A9E               	bcf	158,5,c	;volatile
  6852   000092  EF4B  F000         	goto	i2l288
  6853   000096                     i2l283:
  6854   000096                     i2l288:
  6855   000096  C00A  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6856   00009A  C009  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6857   00009E  C008  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6858   0000A2  C007  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6859   0000A6  9255               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6860   0000A8  0011               	retfie		f
  6861   0000AA                     __end_of_INTERRUPT_InterruptManager:
  6862                           	callstack 0
  6863                           
  6864 ;; *************** function _btGetData *****************
  6865 ;; Defined at:
  6866 ;;		line 380 in file "main.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  rcv             1    wreg     unsigned char 
  6869 ;; Auto vars:     Size  Location     Type
  6870 ;;  rcv             1    0[COMRAM] unsigned char 
  6871 ;; Return value:  Size  Location     Type
  6872 ;;                  1    wreg      void 
  6873 ;; Registers used:
  6874 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6875 ;; Tracked objects:
  6876 ;;		On entry : 0/0
  6877 ;;		On exit  : 0/0
  6878 ;;		Unchanged: 0/0
  6879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6881 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6882 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6883 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6884 ;;Total ram usage:        1 bytes
  6885 ;; Hardware stack levels used: 1
  6886 ;; This function calls:
  6887 ;;		Nothing
  6888 ;; This function is called by:
  6889 ;;		_INTERRUPT_InterruptManager
  6890 ;; This function uses a non-reentrant model
  6891 ;;
  6892                           
  6893                           	psect	text37
  6894   000DA2                     __ptext37:
  6895                           	callstack 0
  6896   000DA2                     _btGetData:
  6897                           	callstack 23
  6898                           
  6899                           ;incstack = 0
  6900                           ;btGetData@rcv stored from wreg
  6901   000DA2  6E01               	movwf	btGetData@rcv^0,c
  6902   000DA4                     
  6903                           ;main.c: 381:     if(rcv == 'H' && uartBufferIndex == 0) {
  6904   000DA4  0E48               	movlw	72
  6905   000DA6  1801               	xorwf	btGetData@rcv^0,w,c
  6906   000DA8  A4D8               	btfss	status,2,c
  6907   000DAA  EFD9  F006         	goto	i2u190_41
  6908   000DAE  EFDB  F006         	goto	i2u190_40
  6909   000DB2                     i2u190_41:
  6910   000DB2  EFEC  F006         	goto	i2l2922
  6911   000DB6                     i2u190_40:
  6912   000DB6  504D               	movf	_uartBufferIndex^0,w,c
  6913   000DB8  A4D8               	btfss	status,2,c
  6914   000DBA  EFE1  F006         	goto	i2u191_41
  6915   000DBE  EFE3  F006         	goto	i2u191_40
  6916   000DC2                     i2u191_41:
  6917   000DC2  EFEC  F006         	goto	i2l2922
  6918   000DC6                     i2u191_40:
  6919   000DC6                     
  6920                           ;main.c: 382:         uartBuffer[uartBufferIndex] = 'H';
  6921   000DC6  504D               	movf	_uartBufferIndex^0,w,c
  6922   000DC8  0F80               	addlw	low _uartBuffer
  6923   000DCA  6ED9               	movwf	fsr2l,c
  6924   000DCC  6ADA               	clrf	fsr2h,c
  6925   000DCE  0E48               	movlw	72
  6926   000DD0  6EDF               	movwf	indf2,c
  6927   000DD2                     i2l2920:
  6928                           
  6929                           ;main.c: 383:         uartBufferIndex++;
  6930   000DD2  2A4D               	incf	_uartBufferIndex^0,f,c
  6931                           
  6932                           ;main.c: 384:     }
  6933   000DD4  EF1F  F007         	goto	i2l536
  6934   000DD8                     i2l2922:
  6935   000DD8  504D               	movf	_uartBufferIndex^0,w,c
  6936   000DDA  B4D8               	btfsc	status,2,c
  6937   000DDC  EFF2  F006         	goto	i2u192_41
  6938   000DE0  EFF4  F006         	goto	i2u192_40
  6939   000DE4                     i2u192_41:
  6940   000DE4  EF04  F007         	goto	i2l2930
  6941   000DE8                     i2u192_40:
  6942   000DE8  0E07               	movlw	7
  6943   000DEA  604D               	cpfslt	_uartBufferIndex^0,c
  6944   000DEC  EFFA  F006         	goto	i2u193_41
  6945   000DF0  EFFC  F006         	goto	i2u193_40
  6946   000DF4                     i2u193_41:
  6947   000DF4  EF04  F007         	goto	i2l2930
  6948   000DF8                     i2u193_40:
  6949   000DF8                     
  6950                           ;main.c: 386:         uartBuffer[uartBufferIndex++] = rcv;
  6951   000DF8  504D               	movf	_uartBufferIndex^0,w,c
  6952   000DFA  0F80               	addlw	low _uartBuffer
  6953   000DFC  6ED9               	movwf	fsr2l,c
  6954   000DFE  6ADA               	clrf	fsr2h,c
  6955   000E00  C001  FFDF         	movff	btGetData@rcv,indf2
  6956   000E04  EFE9  F006         	goto	i2l2920
  6957   000E08                     i2l2930:
  6958   000E08  0E07               	movlw	7
  6959   000E0A  184D               	xorwf	_uartBufferIndex^0,w,c
  6960   000E0C  A4D8               	btfss	status,2,c
  6961   000E0E  EF0B  F007         	goto	i2u194_41
  6962   000E12  EF0D  F007         	goto	i2u194_40
  6963   000E16                     i2u194_41:
  6964   000E16  EF1F  F007         	goto	i2l536
  6965   000E1A                     i2u194_40:
  6966   000E1A                     
  6967                           ;main.c: 389:         if(rcv == ';') {
  6968   000E1A  0E3B               	movlw	59
  6969   000E1C  1801               	xorwf	btGetData@rcv^0,w,c
  6970   000E1E  A4D8               	btfss	status,2,c
  6971   000E20  EF14  F007         	goto	i2u195_41
  6972   000E24  EF16  F007         	goto	i2u195_40
  6973   000E28                     i2u195_41:
  6974   000E28  EF1F  F007         	goto	i2l533
  6975   000E2C                     i2u195_40:
  6976   000E2C                     
  6977                           ;main.c: 390:             uartBuffer[6] = ';';
  6978   000E2C  0E3B               	movlw	59
  6979   000E2E  0100               	movlb	0	; () banked
  6980   000E30  6F86               	movwf	(_uartBuffer+6)& (0+255),b
  6981                           
  6982                           ;main.c: 391:             uartBufferIndex = 0;
  6983   000E32  0E00               	movlw	0
  6984   000E34  6E4D               	movwf	_uartBufferIndex^0,c
  6985                           
  6986                           ;main.c: 392:             btTimeSet = 1;
  6987   000E36  0E01               	movlw	1
  6988   000E38  6FA2               	movwf	_btTimeSet& (0+255),b
  6989   000E3A  EF1F  F007         	goto	i2l536
  6990   000E3E                     i2l533:
  6991   000E3E                     i2l536:
  6992   000E3E  0012               	return		;funcret
  6993   000E40                     __end_of_btGetData:
  6994                           	callstack 0
  6995                           
  6996 ;; *************** function _TMR1_ISR *****************
  6997 ;; Defined at:
  6998 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;		None
  7001 ;; Auto vars:     Size  Location     Type
  7002 ;;		None
  7003 ;; Return value:  Size  Location     Type
  7004 ;;                  1    wreg      void 
  7005 ;; Registers used:
  7006 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7007 ;; Tracked objects:
  7008 ;;		On entry : 0/0
  7009 ;;		On exit  : 0/0
  7010 ;;		Unchanged: 0/0
  7011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7012 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7015 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7016 ;;Total ram usage:        0 bytes
  7017 ;; Hardware stack levels used: 1
  7018 ;; Hardware stack levels required when called: 2
  7019 ;; This function calls:
  7020 ;;		NULL
  7021 ;;		_TMR1_DefaultInterruptHandler
  7022 ;; This function is called by:
  7023 ;;		_INTERRUPT_InterruptManager
  7024 ;; This function uses a non-reentrant model
  7025 ;;
  7026                           
  7027                           	psect	text38
  7028   0010D0                     __ptext38:
  7029                           	callstack 0
  7030   0010D0                     _TMR1_ISR:
  7031                           	callstack 21
  7032   0010D0                     
  7033                           ;mcc_generated_files/tmr1.c: 150:     PIR1bits.TMR1IF = 0;
  7034   0010D0  909E               	bcf	158,0,c	;volatile
  7035   0010D2                     
  7036                           ;mcc_generated_files/tmr1.c: 153:      TMR1H = (timer1ReloadVal >> 8);
  7037   0010D2  504C               	movf	(_timer1ReloadVal+1)^0,w,c	;volatile
  7038   0010D4  6ECF               	movwf	207,c	;volatile
  7039   0010D6                     
  7040                           ;mcc_generated_files/tmr1.c: 154:      TMR1L = (uint8_t) timer1ReloadVal;
  7041   0010D6  C04B  FFCE         	movff	_timer1ReloadVal,4046	;volatile
  7042   0010DA                     
  7043                           ;mcc_generated_files/tmr1.c: 156:     if(TMR1_InterruptHandler)
  7044   0010DA  0100               	movlb	0	; () banked
  7045   0010DC  51F5               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7046   0010DE  11F6               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7047   0010E0  B4D8               	btfsc	status,2,c
  7048   0010E2  EF75  F008         	goto	i2u188_41
  7049   0010E6  EF77  F008         	goto	i2u188_40
  7050   0010EA                     i2u188_41:
  7051   0010EA  EF83  F008         	goto	i2l340
  7052   0010EE                     i2u188_40:
  7053   0010EE                     
  7054                           ; BSR set to: 0
  7055                           ;mcc_generated_files/tmr1.c: 157:     {;mcc_generated_files/tmr1.c: 158:         TMR1_In
      +                          terruptHandler();
  7056   0010EE  D802               	call	i2u189_48
  7057   0010F0  EF83  F008         	goto	i2u189_49
  7058   0010F4                     i2u189_48:
  7059   0010F4  0005               	push	
  7060   0010F6  6EFA               	movwf	pclath,c
  7061   0010F8  51F5               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7062   0010FA  6EFD               	movwf	tosl,c
  7063   0010FC  51F6               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7064   0010FE  6EFE               	movwf	tosh,c
  7065   001100  6AFF               	clrf	tosu,c
  7066   001102  50FA               	movf	pclath,w,c
  7067   001104  0012               	return		;indir
  7068   001106                     i2u189_49:
  7069   001106                     i2l340:
  7070   001106  0012               	return		;funcret
  7071   001108                     __end_of_TMR1_ISR:
  7072                           	callstack 0
  7073                           
  7074 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7075 ;; Defined at:
  7076 ;;		line 167 in file "mcc_generated_files/tmr1.c"
  7077 ;; Parameters:    Size  Location     Type
  7078 ;;		None
  7079 ;; Auto vars:     Size  Location     Type
  7080 ;;		None
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  1    wreg      void 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0, cstack
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7091 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7092 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7093 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7094 ;;Total ram usage:        0 bytes
  7095 ;; Hardware stack levels used: 1
  7096 ;; Hardware stack levels required when called: 1
  7097 ;; This function calls:
  7098 ;;		_calculateTime
  7099 ;; This function is called by:
  7100 ;;		_TMR1_Initialize
  7101 ;;		_TMR1_ISR
  7102 ;; This function uses a non-reentrant model
  7103 ;;
  7104                           
  7105                           	psect	text39
  7106   0012BE                     __ptext39:
  7107                           	callstack 0
  7108   0012BE                     _TMR1_DefaultInterruptHandler:
  7109                           	callstack 21
  7110   0012BE                     
  7111                           ;mcc_generated_files/tmr1.c: 170:     calculateTime();
  7112   0012BE  EC0D  F005         	call	_calculateTime	;wreg free
  7113   0012C2  0012               	return		;funcret
  7114   0012C4                     __end_of_TMR1_DefaultInterruptHandler:
  7115                           	callstack 0
  7116                           
  7117 ;; *************** function _calculateTime *****************
  7118 ;; Defined at:
  7119 ;;		line 137 in file "main.c"
  7120 ;; Parameters:    Size  Location     Type
  7121 ;;		None
  7122 ;; Auto vars:     Size  Location     Type
  7123 ;;		None
  7124 ;; Return value:  Size  Location     Type
  7125 ;;                  1    wreg      void 
  7126 ;; Registers used:
  7127 ;;		wreg, status,2, status,0
  7128 ;; Tracked objects:
  7129 ;;		On entry : 0/0
  7130 ;;		On exit  : 0/0
  7131 ;;		Unchanged: 0/0
  7132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;Total ram usage:        6 bytes
  7138 ;; Hardware stack levels used: 1
  7139 ;; This function calls:
  7140 ;;		Nothing
  7141 ;; This function is called by:
  7142 ;;		_TMR1_DefaultInterruptHandler
  7143 ;; This function uses a non-reentrant model
  7144 ;;
  7145                           
  7146                           	psect	text40
  7147   000A1A                     __ptext40:
  7148                           	callstack 0
  7149   000A1A                     _calculateTime:
  7150                           	callstack 21
  7151   000A1A                     
  7152                           ;main.c: 139:     seconds++;
  7153   000A1A  2A4E               	incf	_seconds^0,f,c	;volatile
  7154   000A1C                     
  7155                           ;main.c: 140:     if (seconds >= 60) {
  7156   000A1C  0E3B               	movlw	59
  7157   000A1E  644E               	cpfsgt	_seconds^0,c	;volatile
  7158   000A20  EF14  F005         	goto	i2u155_41
  7159   000A24  EF16  F005         	goto	i2u155_40
  7160   000A28                     i2u155_41:
  7161   000A28  EF2F  F005         	goto	i2l2598
  7162   000A2C                     i2u155_40:
  7163   000A2C                     
  7164                           ;main.c: 141:         seconds = 0;
  7165   000A2C  0E00               	movlw	0
  7166   000A2E  6E4E               	movwf	_seconds^0,c	;volatile
  7167   000A30                     
  7168                           ;main.c: 144:         minutes++;
  7169   000A30  0100               	movlb	0	; () banked
  7170   000A32  2BAA               	incf	_minutes& (0+255),f,b	;volatile
  7171   000A34                     
  7172                           ; BSR set to: 0
  7173                           ;main.c: 145:         if (minutes >= 60) {
  7174   000A34  0E3B               	movlw	59
  7175   000A36  65AA               	cpfsgt	_minutes& (0+255),b	;volatile
  7176   000A38  EF20  F005         	goto	i2u156_41
  7177   000A3C  EF22  F005         	goto	i2u156_40
  7178   000A40                     i2u156_41:
  7179   000A40  EF2F  F005         	goto	i2l2598
  7180   000A44                     i2u156_40:
  7181   000A44                     
  7182                           ; BSR set to: 0
  7183                           ;main.c: 146:             minutes = 0;
  7184   000A44  0E00               	movlw	0
  7185   000A46  6FAA               	movwf	_minutes& (0+255),b	;volatile
  7186   000A48                     
  7187                           ; BSR set to: 0
  7188                           ;main.c: 149:             hours++;
  7189   000A48  2BAB               	incf	_hours& (0+255),f,b	;volatile
  7190   000A4A                     
  7191                           ; BSR set to: 0
  7192                           ;main.c: 150:             if (hours >= 24) {
  7193   000A4A  0E17               	movlw	23
  7194   000A4C  65AB               	cpfsgt	_hours& (0+255),b	;volatile
  7195   000A4E  EF2B  F005         	goto	i2u157_41
  7196   000A52  EF2D  F005         	goto	i2u157_40
  7197   000A56                     i2u157_41:
  7198   000A56  EF2F  F005         	goto	i2l2598
  7199   000A5A                     i2u157_40:
  7200   000A5A                     
  7201                           ; BSR set to: 0
  7202                           ;main.c: 151:                 hours = 0;
  7203   000A5A  0E00               	movlw	0
  7204   000A5C  6FAB               	movwf	_hours& (0+255),b	;volatile
  7205   000A5E                     i2l2598:
  7206                           
  7207                           ;main.c: 157:     seconds = (seconds < 60) ? seconds : 0;
  7208   000A5E  0E3B               	movlw	59
  7209   000A60  644E               	cpfsgt	_seconds^0,c	;volatile
  7210   000A62  EF35  F005         	goto	i2u158_41
  7211   000A66  EF37  F005         	goto	i2u158_40
  7212   000A6A                     i2u158_41:
  7213   000A6A  EF3D  F005         	goto	i2l455
  7214   000A6E                     i2u158_40:
  7215   000A6E  0E00               	movlw	0
  7216   000A70  6E02               	movwf	(_calculateTime$1332+1)^0,c
  7217   000A72  0E00               	movlw	0
  7218   000A74  6E01               	movwf	_calculateTime$1332^0,c
  7219   000A76  EF40  F005         	goto	i2l457
  7220   000A7A                     i2l455:
  7221   000A7A  C04E  F001         	movff	_seconds,_calculateTime$1332	;volatile
  7222   000A7E  6A02               	clrf	(_calculateTime$1332+1)^0,c
  7223   000A80                     i2l457:
  7224   000A80  C001  F04E         	movff	_calculateTime$1332,_seconds	;volatile
  7225   000A84                     
  7226                           ;main.c: 158:     minutes = (minutes < 60) ? minutes : 0;
  7227   000A84  0E3B               	movlw	59
  7228   000A86  0100               	movlb	0	; () banked
  7229   000A88  65AA               	cpfsgt	_minutes& (0+255),b	;volatile
  7230   000A8A  EF49  F005         	goto	i2u159_41
  7231   000A8E  EF4B  F005         	goto	i2u159_40
  7232   000A92                     i2u159_41:
  7233   000A92  EF51  F005         	goto	i2l459
  7234   000A96                     i2u159_40:
  7235   000A96                     
  7236                           ; BSR set to: 0
  7237   000A96  0E00               	movlw	0
  7238   000A98  6E04               	movwf	(_calculateTime$1333+1)^0,c
  7239   000A9A  0E00               	movlw	0
  7240   000A9C  6E03               	movwf	_calculateTime$1333^0,c
  7241   000A9E  EF54  F005         	goto	i2l461
  7242   000AA2                     i2l459:
  7243                           
  7244                           ; BSR set to: 0
  7245   000AA2  C0AA  F003         	movff	_minutes,_calculateTime$1333	;volatile
  7246   000AA6  6A04               	clrf	(_calculateTime$1333+1)^0,c
  7247   000AA8                     i2l461:
  7248                           
  7249                           ; BSR set to: 0
  7250   000AA8  C003  F0AA         	movff	_calculateTime$1333,_minutes	;volatile
  7251   000AAC                     
  7252                           ; BSR set to: 0
  7253                           ;main.c: 159:     hours = (hours < 24) ? hours : 0;
  7254   000AAC  0E17               	movlw	23
  7255   000AAE  65AB               	cpfsgt	_hours& (0+255),b	;volatile
  7256   000AB0  EF5C  F005         	goto	i2u160_41
  7257   000AB4  EF5E  F005         	goto	i2u160_40
  7258   000AB8                     i2u160_41:
  7259   000AB8  EF64  F005         	goto	i2l463
  7260   000ABC                     i2u160_40:
  7261   000ABC                     
  7262                           ; BSR set to: 0
  7263   000ABC  0E00               	movlw	0
  7264   000ABE  6E06               	movwf	(_calculateTime$1334+1)^0,c
  7265   000AC0  0E00               	movlw	0
  7266   000AC2  6E05               	movwf	_calculateTime$1334^0,c
  7267   000AC4  EF67  F005         	goto	i2l465
  7268   000AC8                     i2l463:
  7269                           
  7270                           ; BSR set to: 0
  7271   000AC8  C0AB  F005         	movff	_hours,_calculateTime$1334	;volatile
  7272   000ACC  6A06               	clrf	(_calculateTime$1334+1)^0,c
  7273   000ACE                     i2l465:
  7274                           
  7275                           ; BSR set to: 0
  7276   000ACE  C005  F0AB         	movff	_calculateTime$1334,_hours	;volatile
  7277   000AD2                     
  7278                           ; BSR set to: 0
  7279   000AD2  0012               	return		;funcret
  7280   000AD4                     __end_of_calculateTime:
  7281                           	callstack 0
  7282                           
  7283                           	psect	rparam
  7284   000000                     
  7285                           	psect	temp
  7286   000055                     btemp:
  7287                           	callstack 0
  7288   000055                     	ds	1
  7289   000000                     int$flags	set	btemp
  7290   000000                     wtemp8	set	btemp+1
  7291   000000                     ttemp5	set	btemp+1
  7292   000000                     ttemp6	set	btemp+4
  7293   000000                     ttemp7	set	btemp+8
  7294                           
  7295                           	psect	idloc
  7296                           
  7297                           ;Config register IDLOC0 @ 0x200000
  7298                           ;	unspecified, using default values
  7299   200000                     	org	2097152
  7300   200000  FF                 	db	255
  7301                           
  7302                           ;Config register IDLOC1 @ 0x200001
  7303                           ;	unspecified, using default values
  7304   200001                     	org	2097153
  7305   200001  FF                 	db	255
  7306                           
  7307                           ;Config register IDLOC2 @ 0x200002
  7308                           ;	unspecified, using default values
  7309   200002                     	org	2097154
  7310   200002  FF                 	db	255
  7311                           
  7312                           ;Config register IDLOC3 @ 0x200003
  7313                           ;	unspecified, using default values
  7314   200003                     	org	2097155
  7315   200003  FF                 	db	255
  7316                           
  7317                           ;Config register IDLOC4 @ 0x200004
  7318                           ;	unspecified, using default values
  7319   200004                     	org	2097156
  7320   200004  FF                 	db	255
  7321                           
  7322                           ;Config register IDLOC5 @ 0x200005
  7323                           ;	unspecified, using default values
  7324   200005                     	org	2097157
  7325   200005  FF                 	db	255
  7326                           
  7327                           ;Config register IDLOC6 @ 0x200006
  7328                           ;	unspecified, using default values
  7329   200006                     	org	2097158
  7330   200006  FF                 	db	255
  7331                           
  7332                           ;Config register IDLOC7 @ 0x200007
  7333                           ;	unspecified, using default values
  7334   200007                     	org	2097159
  7335   200007  FF                 	db	255
  7336                           
  7337                           	psect	config
  7338                           
  7339                           ; Padding undefined space
  7340   300000                     	org	3145728
  7341   300000  FF                 	db	255
  7342                           
  7343                           ;Config register CONFIG1H @ 0x300001
  7344                           ;	Oscillator Selection bits
  7345                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7346                           ;	Fail-Safe Clock Monitor Enable bit
  7347                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7348                           ;	Internal/External Oscillator Switchover bit
  7349                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7350   300001                     	org	3145729
  7351   300001  08                 	db	8
  7352                           
  7353                           ;Config register CONFIG2L @ 0x300002
  7354                           ;	Power-up Timer Enable bit
  7355                           ;	PWRTEN = OFF, PWRT disabled
  7356                           ;	Brown-out Reset Enable bits
  7357                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7358                           ;	Brown Out Reset Voltage bits
  7359                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7360   300002                     	org	3145730
  7361   300002  1F                 	db	31
  7362                           
  7363                           ;Config register CONFIG2H @ 0x300003
  7364                           ;	Watchdog Timer Enable bit
  7365                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7366                           ;	Watchdog Timer Postscale Select bits
  7367                           ;	WDTPS = 32768, 1:32768
  7368   300003                     	org	3145731
  7369   300003  1E                 	db	30
  7370                           
  7371                           ; Padding undefined space
  7372   300004                     	org	3145732
  7373   300004  FF                 	db	255
  7374                           
  7375                           ;Config register CONFIG3H @ 0x300005
  7376                           ;	CCP2 MUX bit
  7377                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7378                           ;	PORTB A/D Enable bit
  7379                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7380                           ;	Low-Power Timer1 Oscillator Enable bit
  7381                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7382                           ;	HFINTOSC Fast Start-up
  7383                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7384                           ;	MCLR Pin Enable bit
  7385                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  7386   300005                     	org	3145733
  7387   300005  09                 	db	9
  7388                           
  7389                           ;Config register CONFIG4L @ 0x300006
  7390                           ;	Stack Full/Underflow Reset Enable bit
  7391                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7392                           ;	Single-Supply ICSP Enable bit
  7393                           ;	LVP = OFF, Single-Supply ICSP disabled
  7394                           ;	Extended Instruction Set Enable bit
  7395                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7396                           ;	Background Debugger Enable bit
  7397                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7398   300006                     	org	3145734
  7399   300006  81                 	db	129
  7400                           
  7401                           ; Padding undefined space
  7402   300007                     	org	3145735
  7403   300007  FF                 	db	255
  7404                           
  7405                           ;Config register CONFIG5L @ 0x300008
  7406                           ;	Code Protection Block 0
  7407                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7408                           ;	Code Protection Block 1
  7409                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7410                           ;	Code Protection Block 2
  7411                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7412                           ;	Code Protection Block 3
  7413                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7414   300008                     	org	3145736
  7415   300008  0F                 	db	15
  7416                           
  7417                           ;Config register CONFIG5H @ 0x300009
  7418                           ;	Boot Block Code Protection bit
  7419                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7420                           ;	Data EEPROM Code Protection bit
  7421                           ;	CPD = OFF, Data EEPROM not code-protected
  7422   300009                     	org	3145737
  7423   300009  C0                 	db	192
  7424                           
  7425                           ;Config register CONFIG6L @ 0x30000A
  7426                           ;	Write Protection Block 0
  7427                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7428                           ;	Write Protection Block 1
  7429                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7430                           ;	Write Protection Block 2
  7431                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7432                           ;	Write Protection Block 3
  7433                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7434   30000A                     	org	3145738
  7435   30000A  0F                 	db	15
  7436                           
  7437                           ;Config register CONFIG6H @ 0x30000B
  7438                           ;	Configuration Register Write Protection bit
  7439                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7440                           ;	Boot Block Write Protection bit
  7441                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7442                           ;	Data EEPROM Write Protection bit
  7443                           ;	WRTD = OFF, Data EEPROM not write-protected
  7444   30000B                     	org	3145739
  7445   30000B  E0                 	db	224
  7446                           
  7447                           ;Config register CONFIG7L @ 0x30000C
  7448                           ;	Table Read Protection Block 0
  7449                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7450                           ;	Table Read Protection Block 1
  7451                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7452                           ;	Table Read Protection Block 2
  7453                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7454                           ;	Table Read Protection Block 3
  7455                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7456   30000C                     	org	3145740
  7457   30000C  0F                 	db	15
  7458                           
  7459                           ;Config register CONFIG7H @ 0x30000D
  7460                           ;	Boot Block Table Read Protection bit
  7461                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7462   30000D                     	org	3145741
  7463   30000D  40                 	db	64
  7464                           tosu	equ	0xFFF
  7465                           tosh	equ	0xFFE
  7466                           tosl	equ	0xFFD
  7467                           stkptr	equ	0xFFC
  7468                           pclatu	equ	0xFFB
  7469                           pclath	equ	0xFFA
  7470                           pcl	equ	0xFF9
  7471                           tblptru	equ	0xFF8
  7472                           tblptrh	equ	0xFF7
  7473                           tblptrl	equ	0xFF6
  7474                           tablat	equ	0xFF5
  7475                           prodh	equ	0xFF4
  7476                           prodl	equ	0xFF3
  7477                           indf0	equ	0xFEF
  7478                           postinc0	equ	0xFEE
  7479                           postdec0	equ	0xFED
  7480                           preinc0	equ	0xFEC
  7481                           plusw0	equ	0xFEB
  7482                           fsr0h	equ	0xFEA
  7483                           fsr0l	equ	0xFE9
  7484                           wreg	equ	0xFE8
  7485                           indf1	equ	0xFE7
  7486                           postinc1	equ	0xFE6
  7487                           postdec1	equ	0xFE5
  7488                           preinc1	equ	0xFE4
  7489                           plusw1	equ	0xFE3
  7490                           fsr1h	equ	0xFE2
  7491                           fsr1l	equ	0xFE1
  7492                           bsr	equ	0xFE0
  7493                           indf2	equ	0xFDF
  7494                           postinc2	equ	0xFDE
  7495                           postdec2	equ	0xFDD
  7496                           preinc2	equ	0xFDC
  7497                           plusw2	equ	0xFDB
  7498                           fsr2h	equ	0xFDA
  7499                           fsr2l	equ	0xFD9
  7500                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    2048
    Data        0
    BSS         118
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     74      84
    BANK0           160     73     155
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(1) Largest target is 64
		 -> saveTimeToFlash@flashBuffer(BANK0[64]), 

    printString@str	PTR unsigned char  size(2) Largest target is 6
		 -> displayAlarmTime@displayString(BANK0[5]), displayTime@displayString(BANK0[5]), STR_1(CODE[6]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _generateBeep->___lwdiv
    ___lwdiv->___wmul
    _clearDisplay->_flushBuffer
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _saveTimeToFlash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _printString->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_DefaultInterruptHandler->_calculateTime

Critical Paths under _main in BANK0

    _main->_checkButtons
    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _checkButtons->_saveTimeToFlash
    _displayTime->_printString
    _displayAlarmTime->_printString

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   48434
                                             71 BANK0      2     2      0
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
                       _processAlarm
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _processAlarm                                         0     0      0   10399
                       _triggerAlarm
 ---------------------------------------------------------------------------------
 (2) _triggerAlarm                                         6     6      0   10399
                                             21 BANK0      6     6      0
                         _clearAlarm
                       _clearDisplay
                       _generateBeep
                        _printString
 ---------------------------------------------------------------------------------
 (3) _generateBeep                                         6     4      2     968
                                             23 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
                  _delayMicroseconds
 ---------------------------------------------------------------------------------
 (4) _delayMicroseconds                                    4     2      2     198
                                             10 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     311
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     314
                                             16 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         2     2      0    4344
                                              0 BANK0      2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     676
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     676
                                             11 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0     861
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   21146
                                             69 BANK0      2     2      0
                            ___awmod
                         _clearAlarm
                   _displayAlarmTime
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _saveTimeToFlash                                     69    69      0    1838
                                              0 BANK0     69    69      0
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    14     9      5     809
                                             15 COMRAM    14     9      5
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     5     1      4     165
                                             10 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     750
                                             10 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    8746
                                             21 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _displayAlarmTime                                    12    12      0    8746
                                             21 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (3) _printString                                         21    19      2    5016
                                              0 BANK0     21    19      2
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (4) _flushBuffer                                         43    43      0    4245
                                             31 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (5) _max_write                                           13    10      3    2160
                                             18 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1525
                                             10 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                             10 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1816
                                             10 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _clearAlarm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     294
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0      98
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     196
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2      98
                                             10 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           4     4      0     138
                                              6 COMRAM     4     4      0
                           _TMR1_ISR
                          _btGetData
 ---------------------------------------------------------------------------------
 (8) _btGetData                                            1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0      72
                                NULL *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (9) _TMR1_DefaultInterruptHandler                         0     0      0      72
                      _calculateTime
 ---------------------------------------------------------------------------------
 (10) _calculateTime                                       6     6      0      72
                                              0 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (9) NULL(Fake)                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _checkButtons
     ___awmod
     _clearAlarm
     _displayAlarmTime
       ___awdiv
       ___awmod
       _printString
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
     _displayTime
       ___awdiv
       ___awmod
       _printString
     _saveTimeToFlash
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _clearDisplay
     _flushBuffer
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit
   _processAlarm
     _triggerAlarm
       _clearAlarm
       _clearDisplay
       _generateBeep
         ___lwdiv
           ___wmul (ARG)
         ___wmul
         _delayMicroseconds
       _printString
   _saveTimeToFlash

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     NULL(Fake) *
     _TMR1_DefaultInterruptHandler *
       _calculateTime
   _btGetData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      53        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      9B       5       96.9%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     4A      54       1       89.4%
BITBIGSFRhhl        1D      0       0      38        0.0%
BITBIGSFRlllll      1C      0       0      51        0.0%
BITBIGSFRlhhh        D      0       0      41        0.0%
BITBIGSFRlllhh       7      0       0      48        0.0%
BITBIGSFRhhhh        7      0       0      36        0.0%
BITBIGSFRlhhlhh      7      0       0      42        0.0%
BITBIGSFRllhh        6      0       0      46        0.0%
BITBIGSFRllhl        6      0       0      47        0.0%
BITBIGSFRlhhlll      4      0       0      43        0.0%
BITBIGSFRhll         3      0       0      40        0.0%
BITBIGSFRhlh         2      0       0      39        0.0%
BITBIGSFRlhhlll      2      0       0      44        0.0%
BITBIGSFRhhhl        2      0       0      37        0.0%
BITBIGSFRllllh       1      0       0      50        0.0%
BITBIGSFRlllhl       1      0       0      49        0.0%
BITBIGSFRlhl         1      0       0      45        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10F      52        0.0%
DATA                 0      0     10F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sun Sep 15 10:51:56 2024

                    __end_of_checkButtons 0344             ?_EUSART_SetRxInterruptHandler 000B  
                          _SPI_Initialize 127C                              ?_displayTime 0001  
                             _SSPSTATbits 0FC7                                        l20 124C  
                                      l21 124E                                        l15 1288  
                                      l18 123E                                        l71 12A8  
                                      l68 1268                                        l94 1234  
                            ___awdiv@sign 0010                       ___wmul@multiplicand 000D  
                                     l221 127A                                       l233 06EC  
                                     l322 12C6                                       l243 116E  
                                     l148 1094                                       l237 06BA  
                                     l190 12BC                                       l238 06A4  
                                     l343 129E                                       l319 1212  
                                     l239 06A8                                       l521 0E90  
                                     l441 0EFA                                       l522 0EBC  
                                     l426 07C2                                       l187 12B2  
                                     l435 11AA                                       l443 0F30  
                                     l276 12CA                                       l508 0234  
                                     l517 0342                                       l437 11C6  
                                     l471 0CF0                                       l527 0B88  
                                     l631 11EC                                       l448 0C3C  
                                     l480 07E0                                       l561 0A18  
                                     l483 0894                                       l628 04D4  
                                     l580 1046                                       l476 0FF6  
                                     l573 0602                                       l582 1048  
                                     l590 10CE                                       l487 1294  
                                     l559 0A16                                       l585 113A  
                                     l862 0958                                       l875 0DA0  
     EUSART_SetRxInterruptHandler@handler 000B                           _timer1ReloadVal 004B  
                            ___awmod@sign 0010                                       prod 0FF3  
                                     tosl 0FFD                                       wreg 0FE8  
                          ??_generateBeep 001A                             generateBeep@i 001C  
                                    l1122 0F9C                                      l1129 0FA4  
                                    l3300 08CE                                      l2420 1148  
                                    l2500 0F54                                      l3310 0906  
                                    l3302 08D6                                      l2430 1156  
                                    l2422 114C                                      l2510 0F8E  
                                    l2502 0F5C                                      l3320 0932  
                                    l3312 090C                                      l3304 08E8  
                                    l3400 05E6                                      l2520 126A  
                                    l2440 1164                                      l2432 1158  
                                    l2424 1150                                      l2416 113C  
                                    l2512 0F90                                      l2504 0F6A  
                                    l3314 0922                                      l3306 08F0  
                                    l3322 0938                                      l3330 095A  
                                    l2522 1278                                      l2434 115A  
                                    l2426 1152                                      l2418 1144  
                                    l2530 0624                                      l3410 10AA  
                                    l3402 1096                                      l2514 0F96  
                                    l2506 0F70                                      l2442 119E  
                                    l2516 12AA                                      l2700 0D40  
                                    l3324 0948                                      l3316 092A  
                                    l3308 08F8                                      l3332 097A  
                                    l2436 115E                                      l2428 1154  
                                    l2540 0654                                      l2532 0624  
                                    l3412 10AE                                      l2508 0F86  
                                    l2444 11AC                                      l3500 07EE  
                                    l2518 12B4                                      l2710 0D7A  
                                    l2702 0D48                                      l3326 0950  
                                    l3318 092C                                      l3350 09E0  
                                    l3334 099C                                      l3430 0378  
                                    l2438 1162                                      l2550 067C  
                                    l2542 0668                                      l2534 0628  
                                    l2526 0604                                      l3414 10CA  
                                    l2446 11B0                                      l2630 0F08  
                                    l3502 0808                                      l3510 0822  
                                    l2720 127C                                      l2704 0D56  
                                    l2712 0D80                                      l3360 09FA  
                                    l3352 09EA                                      l3344 09A6  
                                    l3336 099C                                      l3432 0400  
                                    l3424 036C                                      l3416 0344  
                                    l2560 069E                                      l2544 066C  
                                    l2536 062C                                      l2528 061C  
                                    l3600 0228                                      l3408 10A0  
                                    l2632 0F16                                      l2624 0EBE  
                                    l3520 0878                                      l3512 0830  
                                    l3504 0816                                      l2722 12C8  
                                    l2730 1230                                      l2714 0D90  
                                    l2706 0D6C                                      l3282 1238  
                                    l3290 08A8                                      l3354 09EA  
                                    l3346 09BE                                      l3338 099E  
                                    l3370 04EA                                      l3362 04D6  
                                    l3450 0460                                      l3442 0446  
                                    l3434 0420                                      l3418 035A  
                                    l2570 06CC                                      l2562 06A6  
                                    l2546 0670                                      l2802 0E56  
                                    l3610 0280                                      l3602 022C  
                                    l2490 11E4                                      l2634 0F1A  
                                    l2626 0EEE                                      l3514 083C  
                                    l3506 081A                                      l3522 087E  
                                    l2732 1232                                      l2724 1214  
                                    l2740 11FE                                      l2900 1260  
                                    l2716 0D98                                      l2708 0D74  
                                    l3284 123A                                      l3292 08B0  
                                    l3356 09F0                                      l3348 09DA  
                                    l3380 0546                                      l3372 0506  
                                    l3364 04E2                                      l3460 04D0  
                                    l3444 0452                                      l3452 047C  
                                    l3436 0426                                      l2572 06CE  
                                    l2564 06AA                                      l2556 0680  
                                    l2548 0674                                      l2804 0E7C  
                                    l3620 02DA                                      l3612 028E  
                                    l3604 0242                                      l3524 0FFA  
                                    l2628 0EFC                                      l3516 0858  
                                    l2750 104E                                      l2734 12A0  
                                    l2726 1220                                      l2742 1200  
                                    l2902 1264                                      l3294 08B4  
                                    l3286 0896                                      l3358 09F6  
                                    l3390 05BA                                      l3382 057A  
                                    l3454 0480                                      l3446 0458  
                                    l3438 0434                                      l3462 0B8A  
                                    l2574 06D8                                      l2566 06C2  
                                    l2558 068C                                      l2806 0E80  
                                    l3630 031C                                      l3622 02E4  
                                    l3614 02A8                                      l3606 025C  
                                    l3534 101A                                      l3526 1010  
                                    l2494 0F32                                      l3518 085C  
                                    l3710 06EE                                      l2760 1076  
                                    l2752 1066                                      l2728 1222  
                                    l2744 1202                                      l2736 11EE  
                                    l3296 08C2                                      l3288 089A  
                                    l3384 057E                                      l3448 045C  
                                    l3480 0C3E                                      l3472 0BFE  
                                    l3464 0BF2                                      l2568 06CA  
                                    l2576 06DA                                      l2808 0EA4  
                                    l3632 031E                                      l3608 027C  
                                    l3624 02EC                                      l3560 00BC  
                                    l3536 1026                                      l3528 1012  
                                    l2496 0F3A                                      l2488 11C8  
                                    l3640 0FA6                                      l3720 0704  
                                    l3712 06F2                                      l2770 108A  
                                    l2762 107A                                      l2754 106A  
                                    l2578 1296                                      l2746 120E  
                                    l2738 11F6                                      l2682 128A  
                                    l2690 0D0C                                      l3298 08CA  
                                    l3386 059A                                      l3378 050E  
                                    l3458 0492                                      l3490 0CB2  
                                    l3482 0CA6                                      l3474 0C12  
                                    l3466 0BF6                                      l3634 0330  
                                    l3626 02FC                                      l3618 02CC  
                                    l3570 011C                                      l3562 00D6  
                                    l3538 102A                                      l2498 0F4C  
                                    l3650 0FF0                                      l3642 0FB8  
                                    l3730 0716                                      l3722 0708  
                                    l3714 06F8                                      l2772 108E  
                                    l2764 107E                                      l2756 106E  
                                    l2748 104A                                      l2692 0D10  
                                    l2684 0CF2                                      l3396 05C2  
                                    l3388 059E                                      l3492 0CC6  
                                    l3484 0CAA                                      l3476 0C16  
                                    l3636 0334                                      l3628 0304  
                                    l3580 0174                                      l3572 013A  
                                    l3564 00E4                                      l2940 0AD4  
                                    l3556 1108                                      l3644 0FC8  
                                    l3740 0726                                      l3732 0718  
                                    l3724 070C                                      l3716 06FC  
                                    l2774 1092                                      l2766 1082  
                                    l2758 1072                                      l2694 0D1E  
                                    l2686 0CF6                                      l3398 05E2  
                                    l3494 0CCA                                      l3478 0C32  
                                    l3638 033A                                      l3582 0186  
                                    l3590 01CE                                      l3566 00F6  
                                    l3574 013E                                      l3558 00AE  
                                    l2950 0B34                                      l2942 0AD4  
                                    l3646 0FDA                                      l3750 0772  
                                    l3742 072A                                      l3734 071A  
                                    l3726 0710                                      l3718 0700  
                                    l2768 1086                                      l2936 12C4  
                                    l2696 0D26                                      l2688 0D04  
                                    l3496 0CE6                                      l3592 01DC  
                                    l3584 01A4                                      l3576 014C  
                                    l3568 0114                                      l2952 0B60  
                                    l2944 0AEC                                      l3648 0FEC  
                                    l3760 07B2                                      l3752 078A  
                                    l3744 073C                                      l3736 071E  
                                    l3728 0714                                      l2698 0D38  
                                    l3594 01E6                                      l3586 01AC  
                                    l3578 0166                                      l2954 0B70  
                                    l2946 0B04                                      l3498 07CA  
                                    l3762 07B6                                      l3754 079A  
                                    l3746 074E                                      l3738 0722  
                                    l2892 1250                                      l2796 0E40  
                                    l3596 0200                                      l3588 01CA  
                                    l2956 0B74                                      l2948 0B1C  
                                    l3764 07BA                                      l3756 07AA  
                                    l3748 0760                                      l2894 1254  
                                    l3598 0218                                      l2958 0B84  
                                    l3758 07AE                                      l2896 1258  
                                    l2898 125C                                      STR_1 FFF9  
                            _triggerAlarm 07CA                                      u3000 02FC  
                                    u3001 02F8                                      u3010 031C  
                                    u3011 0318                                      u1500 0650  
                                    u3020 0330                                      u1501 064C  
                                    u3021 032C                                      _LATA 0F89  
                                    u1510 069E                                      u3030 0FB8  
                                    _LATB 0F8A                                      u1511 069A  
                                    u3031 0FB4                                      _LATC 0F8B  
                                    u1520 06BA                                      u3040 0FC8  
                                    u3200 0760                                      u1521 06B6  
                                    u3041 0FC4                                      u3201 075C  
                                    u3050 0FDA                                      u3210 0772  
                                    u3051 0FD6                                      u3211 076E  
                                    u1540 06EC                                      u1620 0F30  
                                    u3060 0FEC                                      u3220 079A  
                                    u1541 06E8                                      u1621 0F2C  
                                    u3061 0FE8                                      u3221 0796  
                                    u1470 0F4C                                      u1390 11C6  
                                    u3230 07AA                                      u1535 06D6  
                                    u1471 0F48                                      u1391 11C2  
                                    u3231 07A6                                      u2600 0948  
                                    u1536 06D8                                      u1800 0E90  
                                    u1480 0F6A                                      u2601 0944  
                                    u1385 116C                                      u1801 0E8C  
                                    u1481 0F66                                      u1730 0D04  
                                    u2610 09BE                                      u1386 116E  
                                    u1490 0F86                                      u1731 0D00  
                                    u2611 09BA                                      u3307 01F2  
                                    u1491 0F82                                      u1740 0D1E  
                                    u2540 124C                                      u2620 0A16  
                                    u2700 10CA                                      u3180 073C  
                                    u1741 0D1A                                      u2541 1248  
                                    u2621 0A12                                      u3317 024E  
                                    u2701 10C6                                      u3181 0738  
                                    u1750 0D38                                      u2550 08A8  
                                    u2710 03A6                                      u3190 074E  
                                    u1751 0D34                                      u2551 08A4  
                                    u2631 04DC                                      u3327 029A  
                                    u3191 074A                                      u1760 0D56  
                                    u2560 08C2                                      u2800 04D0  
                                    u1761 0D52                                      u2561 08BE  
                                    u2801 04CC                                      u3257 07FA  
                                    u1770 0D6C                                      u2570 08E8  
                                    u2650 0546                                      u2730 0400  
                                    u2810 0C32                                      u1771 0D68  
                                    u2571 08E4                                      u2651 0542  
                                    u2731 03FC                                      u2811 0C2E  
                                    u3267 0848                                      u1780 0D90  
                                    u2580 0906                                      u2644 052C  
                                    u2724 03E4                                      u2820 0CE6  
                                    u2900 00F6                                      u1781 0D8C  
                                    u2581 0902                                      u2645 0528  
                                    u2725 03E0                                      u2717 039C  
                                    u2821 0CE2                                      u2901 00F2  
                                    u3277 0868                                      u2590 0922  
                                    u2670 059A                                      u2750 0434  
                                    u2910 014C                                      u2830 07EE  
                                    u2591 091E                                      u2671 0596  
                                    u2751 0430                                      u2911 0148  
                                    u3287 00C8                                      u2831 07EA  
                                    u2680 05BA                                      u2664 0562  
                                    u2760 0442                                      u2744 0414  
                                    u2920 0174                                      u1960 0B5A  
                                    u2840 0816                                      u2681 05B6  
                                    u2665 055E                                      u2761 043E  
                                    u2745 0410                                      u2921 0170  
                                    u3297 0158                                      u1961 0B54  
                                    u2841 0812                                      u2690 0602  
                                    u2770 047C                                      u2930 0186  
                                    u1970 0B5C                                      u2850 0894  
                                    u2691 05FE                                      u2771 0478  
                                    u2931 0182                                      u2851 0890  
                                    u2780 048E                                      u2940 01DC  
                                    u1980 0B70                                      u2860 1046  
                                    u2781 048A                                      u2941 01D8  
                                    u1981 0B6C                                      u2861 1042  
                                    u2790 04C0                                      u2950 0218  
                                    u1990 0B84                                      u2951 0214  
                                    u1991 0B80                                      u2960 0228  
                                    u2880 00BC                                      u2961 0224  
                                    u2881 00B8                                      u2970 0242  
                                    u2890 00E4                                      u2971 023E  
                                    u2891 00E0                                      u2980 028E  
                                    u2797 04B6                                      u2981 028A  
                                    u2990 02DA                                      u2991 02D6  
                                    _TMR1 0FCE                                      _WPUB 0F7C  
                                    _main 06EE                                      fsr1h 0FE2  
                                    fsr2h 0FDA                                      indf1 0FE7  
                                    indf2 0FDF                                      fsr1l 0FE1  
                                    fsr2l 0FD9                                      btemp 0055  
                            printString@i 00BB                              printString@j 00BF  
                            printString@k 00BD                         ?_FLASH_WriteBlock 0010  
                                    prodh 0FF4                                      prodl 0FF3  
                                    start 00AA                    __end_of_SPI_Initialize 128A  
                            ?_flushBuffer 0001                        ??_FLASH_WriteBlock 0015  
              ??_TMR1_SetInterruptHandler 000D                              ___param_bank 0000  
             saveTimeToFlash@flashAddress 00EC                      __end_of_clearDisplay 10D0  
             checkButtons@button3HoldTime 009A             __end_of_OSCILLATOR_Initialize 12AA  
                                   ?_main 0001                           __end_of___awdiv 095A  
                       ??_saveTimeToFlash 001E                                     _EEADR 0FA9  
                         __end_of___awmod 0DA2                           _TMR1_StartTimer 12C4  
                                   _ANSEL 0F7E                           ___awdiv@divisor 000D  
                                   _T1CON 0FCD                           __end_of___lwdiv 0FA6  
                                   i2l340 1106                                     i2l346 12C2  
                                   i2l282 004C                                     i2l283 0096  
                                   i2l284 006E                                     i2l461 0AA8  
                                   i2l533 0E3E                                     i2l463 0AC8  
                                   i2l455 0A7A                                     i2l536 0E3E  
                                   i2l288 0096                                     i2l465 0ACE  
                                   i2l457 0A80                                     i2l466 0AD2  
                                   i2l459 0AA2                           ___awdiv@counter 000F  
                                   _RCREG 0FAE                                     _RCSTA 0FAB  
                                   _TMR1H 0FCF                                     _TMR1L 0FCE  
                                   _SPBRG 0FAF                                     _TRISA 0F92  
                                   _TRISB 0F93                                     _TRISC 0F94  
                                   _TXREG 0FAD                                     _TXSTA 0FAC  
                        __end_of_TMR1_ISR 1108                                     _hours 00AB  
                            displayTime@i 00CB                          _button3PressTime 009C  
                 __end_of_TMR1_Initialize 1214                           max7219_cmd@Addr 000F  
                                   pclath 0FFA                                     pclatu 0FFB  
                                   tablat 0FF5                           max7219_cmd@data 000C  
                                   ttemp5 0056                                     ttemp6 0059  
                                   ttemp7 005D                                     status 0FD8  
                                   wtemp8 0056                           ?_SPI_Initialize 0001  
                          _alarmTriggered 00A5                           __initialization 1170  
                            __end_of_main 07CA                   FLASH_ReadByte@flashAddr 000B  
             ?_INTERRUPT_InterruptManager 0001            ??_EUSART_SetRxInterruptHandler 000D  
                                  ??_main 004B                             __activetblptr 0003  
                      generateBeep@cycles 001A                  __end_of_SPI_Exchange8bit 1250  
               FLASH_WriteBlock@writeAddr 0010                                    _EEADRH 0FAA  
                                  _EEDATA 0FA8                                    _EECON2 0FA7  
                        ___awdiv@dividend 000B                                    _ANSELH 0F7F  
                                  i2l3200 001A                                    i2l3210 0068  
                                  i2l3202 0028                                    i2l3212 007C  
                                  i2l3204 0036                                    i2l3214 008A  
                                  i2l3206 0044                                    i2l2600 0A6E  
                                  i2l3216 0090                                    i2l3208 005A  
                                  i2l2602 0A84                                    i2l2604 0A96  
                                  i2l2606 0AAC                                    i2l2608 0ABC  
                                  i2l2580 0A1A                                    i2l2590 0A44  
                                  i2l2582 0A1C                                    i2l2910 10DA  
                                  i2l2592 0A48                                    i2l2584 0A2C  
                                  i2l2912 10EE                                    i2l2904 10D0  
                                  i2l2920 0DD2                                    i2l2594 0A4A  
                                  i2l2586 0A30                                    i2l2906 10D2  
                                  i2l2930 0E08                                    i2l2922 0DD8  
                                  i2l2914 0DA4                                    i2l2596 0A5A  
                                  i2l2588 0A34                                    i2l2908 10D6  
                                  i2l2932 0E1A                                    i2l2924 0DE8  
                                  i2l2916 0DB6                                    i2l2598 0A5E  
                                  i2l2934 0E2C                                    i2l2926 0DF8  
                                  i2l2918 0DC6                                    i2l2776 12BE  
                                  _TABLAT 0FF5                        delayMicroseconds@i 000D  
                                  _OSCCON 0FD3                                    _SPBRGH 0FB0  
                                  _SSPADD 0FC8                                    _SSPBUF 0FC9  
                   triggerAlarm@numCycles 00C3      __end_of_TMR1_DefaultInterruptHandler 12C4  
            _TMR1_DefaultInterruptHandler 12BE                             main@hours_pom 00F3  
                 __end_of_TMR1_StartTimer 12C8                                    ___wmul 11C8  
                    __end_of_generateBeep 0F32                                 ??___awdiv 000F  
                               ??___awmod 000F                                 ??___lwdiv 0015  
                     _EUSART_Transmit_ISR 0000                                    clear_0 1176  
                                  clear_1 1182                                    clear_2 118E  
                        ___awdiv@quotient 0011                           ___awmod@divisor 000D  
                                  isa$std 0001                           ___awmod@counter 000F  
                        flushBuffer@F2568 0100                     displayTime@timeString 00C6  
                          printString@str 00AC                         displayAlarmTime@i 00CB  
             FLASH_WriteBlock@dataCounter 001C                         ?_displayAlarmTime 0001  
                            __mediumconst F7F8                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                            _checkButtons 00AE                        ??_displayAlarmTime 004B  
TMR1_SetInterruptHandler@InterruptHandler 000B                              ?_printString 00AC  
                        ?_TMR1_Initialize 0001                         _SYSTEM_Initialize 1250  
                              __accesstop 0060                   __end_of__initialization 1194  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 0001  
    __end_of_EUSART_SetTxInterruptHandler 12B4              _EUSART_SetTxInterruptHandler 12AA  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 000D  
                               ?_TMR1_ISR 0001             ?_TMR1_DefaultInterruptHandler 0001  
                            _alarmMinutes 00A8           __end_of_MAX7219_Dot_Matrix_font FFF9  
             FLASH_WriteBlock@GIEBitValue 0019                              _clearDisplay 1096  
               __end_of_SYSTEM_Initialize 126A                            flushBuffer@dev 0043  
                          flushBuffer@row 0047                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                _alarmHours 00A9  
           delayMicroseconds@microseconds 000B                                _clearAlarm 128A  
           displayAlarmTime@displayString 00C1                              flushBuffer@i 0049  
                            flushBuffer@j 0045                           _saveTimeToFlash 0E40  
           ?_EUSART_SetTxInterruptHandler 000B          _EUSART_TxDefaultInterruptHandler 00F9  
                                 ?___wmul 000B                          ?_TMR1_StartTimer 0001  
                              _blinkTimer 009E                                ??_TMR1_ISR 0007  
                                 _BAUDCON 0FB8                            _FLASH_ReadByte 126A  
                           _eusartRxCount 004F                         __end_of_btGetData 0E40  
                                 _TBLPTRH 0FF7                                   _TBLPTRL 0FF6  
                                 _TBLPTRU 0FF8                                   _OSCTUNE 0F9B  
                                 _SSPCON1 0FC6                                   _SSPSTAT 0FC7  
                        _FLASH_EraseBlock 113C                          ??_SPI_Initialize 000B  
     EUSART_SetTxInterruptHandler@handler 000B                   generateBeep@duration_ms 0018  
                                 __Hparam 0000                                   __Lparam 0000  
                                 ___awdiv 0896                                   ___awmod 0CF2  
                        _isButton3Pressed 00A3                                   ___lwdiv 0F32  
                  __end_of_FLASH_ReadByte 127C                                   __pcinit 1170  
                                 __ramtop 1000                                _matrixInit 1108  
                                 __ptext0 06EE                                   __ptext1 0FA6  
                                 __ptext2 07CA                                   __ptext3 0EBE  
                                 __ptext4 119E                                   __ptext5 11C8  
                                 __ptext6 0F32                                   __ptext7 1096  
                                 __ptext8 1108                                   __ptext9 0FF8  
          ??_TMR1_DefaultInterruptHandler 0007                             ??_max7219_cmd 000D  
                               _T1CONbits 0FCD                     _OSCILLATOR_Initialize 12A0  
                        ___awmod@dividend 000B                         __end_of_max_write 0A1A  
                                 _minutes 00AA                  ??_PIN_MANAGER_Initialize 000B  
                                 _seconds 004E                 ?_TMR1_SetInterruptHandler 000B  
                       ?_SPI_Exchange8bit 0001                              _generateBeep 0EBE  
                    end_of_initialization 1194                           printString@data 00B8  
                           triggerAlarm@i 00C5                        ??_SPI_Exchange8bit 000B  
                         printString@indx 00B6                      SPI_Exchange8bit@data 000B  
                 __end_of_saveTimeToFlash 0EBE                             _calculateTime 0A1A  
                             ?_clearAlarm 0001                         _EUSART_Initialize 104A  
                            max_write@dev 001C                                _uartBuffer 0080  
                            btGetData@rcv 0001                        ?_EUSART_Initialize 0001  
                            max_write@row 0013                                 _RCSTAbits 0FAB  
                                 postinc0 0FEE                                   postinc2 0FDE  
                         ?_FLASH_ReadByte 000B                       ??_EUSART_Initialize 000D  
                        saveTimeToFlash@i 00F0            ??_EUSART_SetTxInterruptHandler 000D  
                       _loadTimeFromFlash 0AD4                             ?_processAlarm 0001  
                               _PORTBbits 0F81                             clearDisplay@i 00AC  
                      ?_loadTimeFromFlash 0001                                 _TRISBbits 0F93  
           FLASH_WriteBlock@flashWrBufPtr 0014                       ??_loadTimeFromFlash 000F  
                     __end_of_max7219_cmd 104A                  FLASH_EraseBlock@baseAddr 000B  
               __end_of_EUSART_Initialize 1096                            ?_calculateTime 0001  
                               _TXSTAbits 0FAC                         FLASH_WriteBlock@i 001D  
                       FLASH_WriteBlock@j 001A                saveTimeToFlash@flashBuffer 00AC  
            __end_of_INTERRUPT_Initialize 12CC                             ??_displayTime 004B  
               __end_of_loadTimeFromFlash 0B8A                            __end_of___wmul 11EE  
                          ??_processAlarm 004B                               ?_matrixInit 0001  
            checkButtons@alarmSettingMode 00A0                          _FLASH_WriteBlock 0604  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 1170  
                           ?_triggerAlarm 0001                          ?_saveTimeToFlash 0001  
                      printString@strindx 00B9                             ??_flushBuffer 0020  
                                ??___wmul 000F           displayAlarmTime@alarmTimeString 00C6  
             FLASH_EraseBlock@GIEBitValue 000F                        _calculateTime$1332 0001  
                      _calculateTime$1333 0003                        _calculateTime$1334 0005  
                __end_of_FLASH_EraseBlock 1170                       __end_of_displayTime 0C3E  
                             _max7219_cmd 0FF8                               __pbssCOMRAM 004B  
                             _alarmActive 00A6                             __pcstackBANK0 00AC  
                       _delayMicroseconds 119E                            ??_triggerAlarm 00C1  
                            max7219_cmd@i 0012                        ?_delayMicroseconds 000B  
                               _btGetData 0DA2                           ??_calculateTime 0001  
        _EUSART_RxDefaultInterruptHandler 00F7                   _MAX7219_Dot_Matrix_font F7F9  
                               __pnvBANK0 00F5                       ??_delayMicroseconds 000D  
                               _btTimeSet 00A2                          ___lwdiv@dividend 0011  
                  _PIN_MANAGER_Initialize 1214                                 __pintcode 0008  
        __end_of_TMR1_SetInterruptHandler 12A0                             __pmediumconst F7F8  
                                ?___awdiv 000B                                  ?___awmod 000B  
                                ?___lwdiv 0011                              _eusartRxHead 0051  
                            _eusartTxHead 0054                              _eusartRxTail 0050  
                     __end_of_flushBuffer 0604                              _eusartTxTail 0053  
                               _bufferCol 0060              ??_INTERRUPT_InterruptManager 0007  
                 _eusartTxBufferRemaining 0052                 __end_of_delayMicroseconds 11C8  
                        ___lwdiv@quotient 0015                                 _max_write 095A  
                    _INTERRUPT_Initialize 12C8                                ?_btGetData 0001  
          FLASH_WriteBlock@blockStartAddr 0015                            _eusartRxBuffer 008A  
                          _eusartTxBuffer 0092                      __end_of_processAlarm 0FF8  
                          ___wmul@product 000F                                  _LATBbits 0F8A  
                                _LATCbits 0F8B                              ??_clearAlarm 000B  
                                _PIE1bits 0F9D                          _displayAlarmTime 0C3E  
                                i2u160_40 0ABC                                  i2u240_40 0028  
                                i2u160_41 0AB8                                  i2u240_41 0024  
                                i2u241_40 0036                                  i2u241_41 0032  
                         max_write@offset 0018                                  i2u242_40 0044  
                                i2u242_41 0040                                  i2u155_40 0A2C  
                                i2u243_40 005A                                  i2u155_41 0A28  
                                i2u243_41 0056                                  i2u156_40 0A44  
                                i2u244_40 0068                                  i2u156_41 0A40  
                                i2u244_41 0064                                  i2u157_40 0A5A  
                                i2u245_40 007C                                  i2u157_41 0A56  
                                i2u245_41 0078                                  i2u158_40 0A6E  
                                i2u190_40 0DB6                                  i2u246_40 008A  
                                i2u158_41 0A6A                                  i2u190_41 0DB2  
                                i2u246_41 0086                                  i2u159_40 0A96  
                                i2u191_40 0DC6                                  i2u159_41 0A92  
                                i2u191_41 0DC2                                  i2u192_40 0DE8  
                                i2u192_41 0DE4                                  i2u193_40 0DF8  
                                i2u193_41 0DF4                                  _PIR1bits 0F9E  
                                i2u194_40 0E1A                                  i2u194_41 0E16  
                        ??_FLASH_ReadByte 000F                                  i2u195_40 0E2C  
                                i2u195_41 0E28                                  _PIR2bits 0FA1  
                                i2u188_40 10EE                                  i2u188_41 10EA  
                                i2u189_48 10F4                                  i2u189_49 1106  
                                _RCONbits 0FD0                                  _TMR1_ISR 10D0  
                             _displayTime 0B8A                         ??_TMR1_Initialize 000D  
                       ___wmul@multiplier 000B                        __end_of_clearAlarm 1296  
                           ?_checkButtons 0001                               _INTCON2bits 0FF1  
                              ?_max_write 0013                     ?_INTERRUPT_Initialize 0001  
                           ??_printString 00AE                  __end_of_FLASH_WriteBlock 06EE  
                              _EECON1bits 0FA6                                  __Hrparam 0000  
                             _flushBuffer 04D6                                  __Lrparam 0000  
                      max_write@devTarget 001A                   ??_OSCILLATOR_Initialize 000B  
                    __end_of_triggerAlarm 0896                              ??_matrixInit 0014  
                _TMR1_SetInterruptHandler 1296                     _TMR1_InterruptHandler 00F5  
                         main@minutes_pom 00F4                                  _alarmSet 00A7  
                          ??_checkButtons 00F1                           ___lwdiv@divisor 0013  
                         ___lwdiv@counter 0017                             ?_clearDisplay 0001  
                                __ptext10 0AD4                                  __ptext11 00AE  
                                __ptext20 095A                                  __ptext12 0E40  
                                __ptext21 0896                                  __ptext13 0604  
                                __ptext30 1214                                  __ptext22 1236  
                                __ptext14 113C                                  __ptext31 12A0  
                                __ptext23 0CF2                                  __ptext15 126A  
                                __ptext40 0A1A                                  __ptext32 12C8  
                                __ptext24 128A                                  __ptext16 0B8A  
                                __ptext33 104A                                  __ptext25 12C4  
                                __ptext17 0C3E                                  __ptext34 12AA  
                                __ptext26 1250                                  __ptext18 0344  
                                __ptext35 12B4                                  __ptext27 11EE  
                                __ptext19 04D6                                  __ptext28 1296  
                                __ptext37 0DA2                                  __ptext29 127C  
                                __ptext38 10D0                                  __ptext39 12BE  
                       ??_TMR1_StartTimer 000B                               ??_btGetData 0001  
                      __end_of_matrixInit 113C                       __end_of_printString 04D6  
                    flushBuffer@bufferRow 0023                           _displayBlinking 00A4  
                                isa$xinst 0000                      max7219_cmd@writeData 0010  
                                int$flags 0055        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                         ?_FLASH_EraseBlock 000B  
     FLASH_WriteBlock@numberOfWriteBlocks 001B                              ?_max7219_cmd 000C  
                      ??_FLASH_EraseBlock 000F                                _INTCONbits 0FF2  
                         _uartBufferIndex 004D                            ??_clearDisplay 004B  
                  ??_INTERRUPT_Initialize 000B                        max_write@writeData 001E  
                             ??_max_write 0016                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0001      __end_of_EUSART_SetRxInterruptHandler 12BE  
            _EUSART_SetRxInterruptHandler 12B4                             max_write@data 0015  
                        _SPI_Exchange8bit 1236                        _EUSART_Receive_ISR 0000  
                displayTime@displayString 00C1                              _processAlarm 0FA6  
                __end_of_displayAlarmTime 0CF2             checkButtons@button3PressCount 00A1  
                             _SSPCON1bits 0FC6                             ?_generateBeep 0018  
          __end_of_PIN_MANAGER_Initialize 1236                               _printString 0344  
                   __end_of_calculateTime 0AD4                           _TMR1_Initialize 11EE  
