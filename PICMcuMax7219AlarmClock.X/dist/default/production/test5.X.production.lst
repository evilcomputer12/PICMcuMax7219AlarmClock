

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Tue Sep 10 21:38:25 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    44                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    45                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    46                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    47   000000                     
    48                           ; Generated 05/01/2024 GMT
    49                           ; 
    50                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    51                           ; All rights reserved.
    52                           ; 
    53                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    54                           ; 
    55                           ; Redistribution and use in source and binary forms, with or without modification, are
    56                           ; permitted provided that the following conditions are met:
    57                           ; 
    58                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    59                           ;        conditions and the following disclaimer.
    60                           ; 
    61                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    62                           ;        of conditions and the following disclaimer in the documentation and/or other
    63                           ;        materials provided with the distribution. Publication is not required when
    64                           ;        this file is used in an embedded application.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F26K20 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82   000000                     
    83                           	psect	mediumconst
    84   00F7F8                     __pmediumconst:
    85                           	callstack 0
    86   00F7F8  00                 	db	0
    87   00F7F9                     _MAX7219_Dot_Matrix_font:
    88                           	callstack 0
    89   00F7F9  00                 	db	0
    90   00F7FA  00                 	db	0
    91   00F7FB  00                 	db	0
    92   00F7FC  00                 	db	0
    93   00F7FD  00                 	db	0
    94   00F7FE  00                 	db	0
    95   00F7FF  00                 	db	0
    96   00F800  00                 	db	0
    97   00F801  7E                 	db	126
    98   00F802  81                 	db	129
    99   00F803  95                 	db	149
   100   00F804  B1                 	db	177
   101   00F805  B1                 	db	177
   102   00F806  95                 	db	149
   103   00F807  81                 	db	129
   104   00F808  7E                 	db	126
   105   00F809  7E                 	db	126
   106   00F80A  FF                 	db	255
   107   00F80B  EB                 	db	235
   108   00F80C  CF                 	db	207
   109   00F80D  CF                 	db	207
   110   00F80E  EB                 	db	235
   111   00F80F  FF                 	db	255
   112   00F810  7E                 	db	126
   113   00F811  0E                 	db	14
   114   00F812  1F                 	db	31
   115   00F813  3F                 	db	63
   116   00F814  7E                 	db	126
   117   00F815  3F                 	db	63
   118   00F816  1F                 	db	31
   119   00F817  0E                 	db	14
   120   00F818  00                 	db	0
   121   00F819  08                 	db	8
   122   00F81A  1C                 	db	28
   123   00F81B  3E                 	db	62
   124   00F81C  7F                 	db	127
   125   00F81D  3E                 	db	62
   126   00F81E  1C                 	db	28
   127   00F81F  08                 	db	8
   128   00F820  00                 	db	0
   129   00F821  18                 	db	24
   130   00F822  BA                 	db	186
   131   00F823  FF                 	db	255
   132   00F824  FF                 	db	255
   133   00F825  FF                 	db	255
   134   00F826  BA                 	db	186
   135   00F827  18                 	db	24
   136   00F828  00                 	db	0
   137   00F829  10                 	db	16
   138   00F82A  B8                 	db	184
   139   00F82B  FC                 	db	252
   140   00F82C  FF                 	db	255
   141   00F82D  FC                 	db	252
   142   00F82E  B8                 	db	184
   143   00F82F  10                 	db	16
   144   00F830  00                 	db	0
   145   00F831  00                 	db	0
   146   00F832  00                 	db	0
   147   00F833  18                 	db	24
   148   00F834  3C                 	db	60
   149   00F835  3C                 	db	60
   150   00F836  18                 	db	24
   151   00F837  00                 	db	0
   152   00F838  00                 	db	0
   153   00F839  FF                 	db	255
   154   00F83A  FF                 	db	255
   155   00F83B  E7                 	db	231
   156   00F83C  C3                 	db	195
   157   00F83D  C3                 	db	195
   158   00F83E  E7                 	db	231
   159   00F83F  FF                 	db	255
   160   00F840  FF                 	db	255
   161   00F841  00                 	db	0
   162   00F842  3C                 	db	60
   163   00F843  66                 	db	102
   164   00F844  42                 	db	66
   165   00F845  42                 	db	66
   166   00F846  66                 	db	102
   167   00F847  3C                 	db	60
   168   00F848  00                 	db	0
   169   00F849  FF                 	db	255
   170   00F84A  C3                 	db	195
   171   00F84B  99                 	db	153
   172   00F84C  BD                 	db	189
   173   00F84D  BD                 	db	189
   174   00F84E  99                 	db	153
   175   00F84F  C3                 	db	195
   176   00F850  FF                 	db	255
   177   00F851  70                 	db	112
   178   00F852  F8                 	db	248
   179   00F853  88                 	db	136
   180   00F854  88                 	db	136
   181   00F855  FD                 	db	253
   182   00F856  7F                 	db	127
   183   00F857  07                 	db	7
   184   00F858  0F                 	db	15
   185   00F859  00                 	db	0
   186   00F85A  4E                 	db	78
   187   00F85B  5F                 	db	95
   188   00F85C  F1                 	db	241
   189   00F85D  F1                 	db	241
   190   00F85E  5F                 	db	95
   191   00F85F  4E                 	db	78
   192   00F860  00                 	db	0
   193   00F861  C0                 	db	192
   194   00F862  E0                 	db	224
   195   00F863  FF                 	db	255
   196   00F864  7F                 	db	127
   197   00F865  05                 	db	5
   198   00F866  05                 	db	5
   199   00F867  07                 	db	7
   200   00F868  07                 	db	7
   201   00F869  C0                 	db	192
   202   00F86A  FF                 	db	255
   203   00F86B  7F                 	db	127
   204   00F86C  05                 	db	5
   205   00F86D  05                 	db	5
   206   00F86E  65                 	db	101
   207   00F86F  7F                 	db	127
   208   00F870  3F                 	db	63
   209   00F871  99                 	db	153
   210   00F872  5A                 	db	90
   211   00F873  3C                 	db	60
   212   00F874  E7                 	db	231
   213   00F875  E7                 	db	231
   214   00F876  3C                 	db	60
   215   00F877  5A                 	db	90
   216   00F878  99                 	db	153
   217   00F879  7F                 	db	127
   218   00F87A  3E                 	db	62
   219   00F87B  3E                 	db	62
   220   00F87C  1C                 	db	28
   221   00F87D  1C                 	db	28
   222   00F87E  08                 	db	8
   223   00F87F  08                 	db	8
   224   00F880  00                 	db	0
   225   00F881  08                 	db	8
   226   00F882  08                 	db	8
   227   00F883  1C                 	db	28
   228   00F884  1C                 	db	28
   229   00F885  3E                 	db	62
   230   00F886  3E                 	db	62
   231   00F887  7F                 	db	127
   232   00F888  00                 	db	0
   233   00F889  00                 	db	0
   234   00F88A  24                 	db	36
   235   00F88B  66                 	db	102
   236   00F88C  FF                 	db	255
   237   00F88D  FF                 	db	255
   238   00F88E  66                 	db	102
   239   00F88F  24                 	db	36
   240   00F890  00                 	db	0
   241   00F891  00                 	db	0
   242   00F892  5F                 	db	95
   243   00F893  5F                 	db	95
   244   00F894  00                 	db	0
   245   00F895  00                 	db	0
   246   00F896  5F                 	db	95
   247   00F897  5F                 	db	95
   248   00F898  00                 	db	0
   249   00F899  06                 	db	6
   250   00F89A  0F                 	db	15
   251   00F89B  09                 	db	9
   252   00F89C  7F                 	db	127
   253   00F89D  7F                 	db	127
   254   00F89E  01                 	db	1
   255   00F89F  7F                 	db	127
   256   00F8A0  7F                 	db	127
   257   00F8A1  40                 	db	64
   258   00F8A2  DA                 	db	218
   259   00F8A3  BF                 	db	191
   260   00F8A4  A5                 	db	165
   261   00F8A5  FD                 	db	253
   262   00F8A6  59                 	db	89
   263   00F8A7  03                 	db	3
   264   00F8A8  02                 	db	2
   265   00F8A9  00                 	db	0
   266   00F8AA  70                 	db	112
   267   00F8AB  70                 	db	112
   268   00F8AC  70                 	db	112
   269   00F8AD  70                 	db	112
   270   00F8AE  70                 	db	112
   271   00F8AF  70                 	db	112
   272   00F8B0  00                 	db	0
   273   00F8B1  80                 	db	128
   274   00F8B2  94                 	db	148
   275   00F8B3  B6                 	db	182
   276   00F8B4  FF                 	db	255
   277   00F8B5  FF                 	db	255
   278   00F8B6  B6                 	db	182
   279   00F8B7  94                 	db	148
   280   00F8B8  80                 	db	128
   281   00F8B9  00                 	db	0
   282   00F8BA  04                 	db	4
   283   00F8BB  06                 	db	6
   284   00F8BC  7F                 	db	127
   285   00F8BD  7F                 	db	127
   286   00F8BE  06                 	db	6
   287   00F8BF  04                 	db	4
   288   00F8C0  00                 	db	0
   289   00F8C1  00                 	db	0
   290   00F8C2  10                 	db	16
   291   00F8C3  30                 	db	48
   292   00F8C4  7F                 	db	127
   293   00F8C5  7F                 	db	127
   294   00F8C6  30                 	db	48
   295   00F8C7  10                 	db	16
   296   00F8C8  00                 	db	0
   297   00F8C9  08                 	db	8
   298   00F8CA  08                 	db	8
   299   00F8CB  08                 	db	8
   300   00F8CC  2A                 	db	42
   301   00F8CD  3E                 	db	62
   302   00F8CE  1C                 	db	28
   303   00F8CF  08                 	db	8
   304   00F8D0  00                 	db	0
   305   00F8D1  08                 	db	8
   306   00F8D2  1C                 	db	28
   307   00F8D3  3E                 	db	62
   308   00F8D4  2A                 	db	42
   309   00F8D5  08                 	db	8
   310   00F8D6  08                 	db	8
   311   00F8D7  08                 	db	8
   312   00F8D8  00                 	db	0
   313   00F8D9  3C                 	db	60
   314   00F8DA  3C                 	db	60
   315   00F8DB  20                 	db	32
   316   00F8DC  20                 	db	32
   317   00F8DD  20                 	db	32
   318   00F8DE  20                 	db	32
   319   00F8DF  20                 	db	32
   320   00F8E0  00                 	db	0
   321   00F8E1  08                 	db	8
   322   00F8E2  1C                 	db	28
   323   00F8E3  3E                 	db	62
   324   00F8E4  08                 	db	8
   325   00F8E5  08                 	db	8
   326   00F8E6  3E                 	db	62
   327   00F8E7  1C                 	db	28
   328   00F8E8  08                 	db	8
   329   00F8E9  30                 	db	48
   330   00F8EA  38                 	db	56
   331   00F8EB  3C                 	db	60
   332   00F8EC  3E                 	db	62
   333   00F8ED  3E                 	db	62
   334   00F8EE  3C                 	db	60
   335   00F8EF  38                 	db	56
   336   00F8F0  30                 	db	48
   337   00F8F1  06                 	db	6
   338   00F8F2  0E                 	db	14
   339   00F8F3  1E                 	db	30
   340   00F8F4  3E                 	db	62
   341   00F8F5  3E                 	db	62
   342   00F8F6  1E                 	db	30
   343   00F8F7  0E                 	db	14
   344   00F8F8  06                 	db	6
   345   00F8F9  00                 	db	0
   346   00F8FA  00                 	db	0
   347   00F8FB  00                 	db	0
   348   00F8FC  00                 	db	0
   349   00F8FD  00                 	db	0
   350   00F8FE  00                 	db	0
   351   00F8FF  00                 	db	0
   352   00F900  00                 	db	0
   353   00F901  00                 	db	0
   354   00F902  06                 	db	6
   355   00F903  5F                 	db	95
   356   00F904  5F                 	db	95
   357   00F905  06                 	db	6
   358   00F906  00                 	db	0
   359   00F907  00                 	db	0
   360   00F908  00                 	db	0
   361   00F909  00                 	db	0
   362   00F90A  07                 	db	7
   363   00F90B  07                 	db	7
   364   00F90C  00                 	db	0
   365   00F90D  07                 	db	7
   366   00F90E  07                 	db	7
   367   00F90F  00                 	db	0
   368   00F910  00                 	db	0
   369   00F911  14                 	db	20
   370   00F912  7F                 	db	127
   371   00F913  7F                 	db	127
   372   00F914  14                 	db	20
   373   00F915  7F                 	db	127
   374   00F916  7F                 	db	127
   375   00F917  14                 	db	20
   376   00F918  00                 	db	0
   377   00F919  24                 	db	36
   378   00F91A  2E                 	db	46
   379   00F91B  6B                 	db	107
   380   00F91C  6B                 	db	107
   381   00F91D  3A                 	db	58
   382   00F91E  12                 	db	18
   383   00F91F  00                 	db	0
   384   00F920  00                 	db	0
   385   00F921  46                 	db	70
   386   00F922  66                 	db	102
   387   00F923  30                 	db	48
   388   00F924  18                 	db	24
   389   00F925  0C                 	db	12
   390   00F926  66                 	db	102
   391   00F927  62                 	db	98
   392   00F928  00                 	db	0
   393   00F929  30                 	db	48
   394   00F92A  7A                 	db	122
   395   00F92B  4F                 	db	79
   396   00F92C  5D                 	db	93
   397   00F92D  37                 	db	55
   398   00F92E  7A                 	db	122
   399   00F92F  48                 	db	72
   400   00F930  00                 	db	0
   401   00F931  04                 	db	4
   402   00F932  07                 	db	7
   403   00F933  03                 	db	3
   404   00F934  00                 	db	0
   405   00F935  00                 	db	0
   406   00F936  00                 	db	0
   407   00F937  00                 	db	0
   408   00F938  00                 	db	0
   409   00F939  00                 	db	0
   410   00F93A  1C                 	db	28
   411   00F93B  3E                 	db	62
   412   00F93C  63                 	db	99
   413   00F93D  41                 	db	65
   414   00F93E  00                 	db	0
   415   00F93F  00                 	db	0
   416   00F940  00                 	db	0
   417   00F941  00                 	db	0
   418   00F942  41                 	db	65
   419   00F943  63                 	db	99
   420   00F944  3E                 	db	62
   421   00F945  1C                 	db	28
   422   00F946  00                 	db	0
   423   00F947  00                 	db	0
   424   00F948  00                 	db	0
   425   00F949  08                 	db	8
   426   00F94A  2A                 	db	42
   427   00F94B  3E                 	db	62
   428   00F94C  1C                 	db	28
   429   00F94D  1C                 	db	28
   430   00F94E  3E                 	db	62
   431   00F94F  2A                 	db	42
   432   00F950  08                 	db	8
   433   00F951  08                 	db	8
   434   00F952  08                 	db	8
   435   00F953  3E                 	db	62
   436   00F954  3E                 	db	62
   437   00F955  08                 	db	8
   438   00F956  08                 	db	8
   439   00F957  00                 	db	0
   440   00F958  00                 	db	0
   441   00F959  00                 	db	0
   442   00F95A  80                 	db	128
   443   00F95B  E0                 	db	224
   444   00F95C  60                 	db	96
   445   00F95D  00                 	db	0
   446   00F95E  00                 	db	0
   447   00F95F  00                 	db	0
   448   00F960  00                 	db	0
   449   00F961  08                 	db	8
   450   00F962  08                 	db	8
   451   00F963  08                 	db	8
   452   00F964  08                 	db	8
   453   00F965  08                 	db	8
   454   00F966  08                 	db	8
   455   00F967  00                 	db	0
   456   00F968  00                 	db	0
   457   00F969  00                 	db	0
   458   00F96A  00                 	db	0
   459   00F96B  60                 	db	96
   460   00F96C  60                 	db	96
   461   00F96D  00                 	db	0
   462   00F96E  00                 	db	0
   463   00F96F  00                 	db	0
   464   00F970  00                 	db	0
   465   00F971  60                 	db	96
   466   00F972  30                 	db	48
   467   00F973  18                 	db	24
   468   00F974  0C                 	db	12
   469   00F975  06                 	db	6
   470   00F976  03                 	db	3
   471   00F977  01                 	db	1
   472   00F978  00                 	db	0
   473   00F979  3E                 	db	62
   474   00F97A  7F                 	db	127
   475   00F97B  71                 	db	113
   476   00F97C  59                 	db	89
   477   00F97D  4D                 	db	77
   478   00F97E  7F                 	db	127
   479   00F97F  3E                 	db	62
   480   00F980  00                 	db	0
   481   00F981  40                 	db	64
   482   00F982  42                 	db	66
   483   00F983  7F                 	db	127
   484   00F984  7F                 	db	127
   485   00F985  40                 	db	64
   486   00F986  40                 	db	64
   487   00F987  00                 	db	0
   488   00F988  00                 	db	0
   489   00F989  62                 	db	98
   490   00F98A  73                 	db	115
   491   00F98B  59                 	db	89
   492   00F98C  49                 	db	73
   493   00F98D  6F                 	db	111
   494   00F98E  66                 	db	102
   495   00F98F  00                 	db	0
   496   00F990  00                 	db	0
   497   00F991  22                 	db	34
   498   00F992  63                 	db	99
   499   00F993  49                 	db	73
   500   00F994  49                 	db	73
   501   00F995  7F                 	db	127
   502   00F996  36                 	db	54
   503   00F997  00                 	db	0
   504   00F998  00                 	db	0
   505   00F999  18                 	db	24
   506   00F99A  1C                 	db	28
   507   00F99B  16                 	db	22
   508   00F99C  53                 	db	83
   509   00F99D  7F                 	db	127
   510   00F99E  7F                 	db	127
   511   00F99F  50                 	db	80
   512   00F9A0  00                 	db	0
   513   00F9A1  27                 	db	39
   514   00F9A2  67                 	db	103
   515   00F9A3  45                 	db	69
   516   00F9A4  45                 	db	69
   517   00F9A5  7D                 	db	125
   518   00F9A6  39                 	db	57
   519   00F9A7  00                 	db	0
   520   00F9A8  00                 	db	0
   521   00F9A9  3C                 	db	60
   522   00F9AA  7E                 	db	126
   523   00F9AB  4B                 	db	75
   524   00F9AC  49                 	db	73
   525   00F9AD  79                 	db	121
   526   00F9AE  30                 	db	48
   527   00F9AF  00                 	db	0
   528   00F9B0  00                 	db	0
   529   00F9B1  03                 	db	3
   530   00F9B2  03                 	db	3
   531   00F9B3  71                 	db	113
   532   00F9B4  79                 	db	121
   533   00F9B5  0F                 	db	15
   534   00F9B6  07                 	db	7
   535   00F9B7  00                 	db	0
   536   00F9B8  00                 	db	0
   537   00F9B9  36                 	db	54
   538   00F9BA  7F                 	db	127
   539   00F9BB  49                 	db	73
   540   00F9BC  49                 	db	73
   541   00F9BD  7F                 	db	127
   542   00F9BE  36                 	db	54
   543   00F9BF  00                 	db	0
   544   00F9C0  00                 	db	0
   545   00F9C1  06                 	db	6
   546   00F9C2  4F                 	db	79
   547   00F9C3  49                 	db	73
   548   00F9C4  69                 	db	105
   549   00F9C5  3F                 	db	63
   550   00F9C6  1E                 	db	30
   551   00F9C7  00                 	db	0
   552   00F9C8  00                 	db	0
   553   00F9C9  00                 	db	0
   554   00F9CA  00                 	db	0
   555   00F9CB  66                 	db	102
   556   00F9CC  66                 	db	102
   557   00F9CD  00                 	db	0
   558   00F9CE  00                 	db	0
   559   00F9CF  00                 	db	0
   560   00F9D0  00                 	db	0
   561   00F9D1  00                 	db	0
   562   00F9D2  80                 	db	128
   563   00F9D3  E6                 	db	230
   564   00F9D4  66                 	db	102
   565   00F9D5  00                 	db	0
   566   00F9D6  00                 	db	0
   567   00F9D7  00                 	db	0
   568   00F9D8  00                 	db	0
   569   00F9D9  08                 	db	8
   570   00F9DA  1C                 	db	28
   571   00F9DB  36                 	db	54
   572   00F9DC  63                 	db	99
   573   00F9DD  41                 	db	65
   574   00F9DE  00                 	db	0
   575   00F9DF  00                 	db	0
   576   00F9E0  00                 	db	0
   577   00F9E1  24                 	db	36
   578   00F9E2  24                 	db	36
   579   00F9E3  24                 	db	36
   580   00F9E4  24                 	db	36
   581   00F9E5  24                 	db	36
   582   00F9E6  24                 	db	36
   583   00F9E7  00                 	db	0
   584   00F9E8  00                 	db	0
   585   00F9E9  00                 	db	0
   586   00F9EA  41                 	db	65
   587   00F9EB  63                 	db	99
   588   00F9EC  36                 	db	54
   589   00F9ED  1C                 	db	28
   590   00F9EE  08                 	db	8
   591   00F9EF  00                 	db	0
   592   00F9F0  00                 	db	0
   593   00F9F1  02                 	db	2
   594   00F9F2  03                 	db	3
   595   00F9F3  51                 	db	81
   596   00F9F4  59                 	db	89
   597   00F9F5  0F                 	db	15
   598   00F9F6  06                 	db	6
   599   00F9F7  00                 	db	0
   600   00F9F8  00                 	db	0
   601   00F9F9  3E                 	db	62
   602   00F9FA  7F                 	db	127
   603   00F9FB  41                 	db	65
   604   00F9FC  5D                 	db	93
   605   00F9FD  5D                 	db	93
   606   00F9FE  1F                 	db	31
   607   00F9FF  1E                 	db	30
   608   00FA00  00                 	db	0
   609   00FA01  7C                 	db	124
   610   00FA02  7E                 	db	126
   611   00FA03  13                 	db	19
   612   00FA04  13                 	db	19
   613   00FA05  7E                 	db	126
   614   00FA06  7C                 	db	124
   615   00FA07  00                 	db	0
   616   00FA08  00                 	db	0
   617   00FA09  41                 	db	65
   618   00FA0A  7F                 	db	127
   619   00FA0B  7F                 	db	127
   620   00FA0C  49                 	db	73
   621   00FA0D  49                 	db	73
   622   00FA0E  7F                 	db	127
   623   00FA0F  36                 	db	54
   624   00FA10  00                 	db	0
   625   00FA11  1C                 	db	28
   626   00FA12  3E                 	db	62
   627   00FA13  63                 	db	99
   628   00FA14  41                 	db	65
   629   00FA15  41                 	db	65
   630   00FA16  63                 	db	99
   631   00FA17  22                 	db	34
   632   00FA18  00                 	db	0
   633   00FA19  41                 	db	65
   634   00FA1A  7F                 	db	127
   635   00FA1B  7F                 	db	127
   636   00FA1C  41                 	db	65
   637   00FA1D  63                 	db	99
   638   00FA1E  3E                 	db	62
   639   00FA1F  1C                 	db	28
   640   00FA20  00                 	db	0
   641   00FA21  41                 	db	65
   642   00FA22  7F                 	db	127
   643   00FA23  7F                 	db	127
   644   00FA24  49                 	db	73
   645   00FA25  5D                 	db	93
   646   00FA26  41                 	db	65
   647   00FA27  63                 	db	99
   648   00FA28  00                 	db	0
   649   00FA29  41                 	db	65
   650   00FA2A  7F                 	db	127
   651   00FA2B  7F                 	db	127
   652   00FA2C  49                 	db	73
   653   00FA2D  1D                 	db	29
   654   00FA2E  01                 	db	1
   655   00FA2F  03                 	db	3
   656   00FA30  00                 	db	0
   657   00FA31  1C                 	db	28
   658   00FA32  3E                 	db	62
   659   00FA33  63                 	db	99
   660   00FA34  41                 	db	65
   661   00FA35  51                 	db	81
   662   00FA36  73                 	db	115
   663   00FA37  72                 	db	114
   664   00FA38  00                 	db	0
   665   00FA39  7F                 	db	127
   666   00FA3A  7F                 	db	127
   667   00FA3B  08                 	db	8
   668   00FA3C  08                 	db	8
   669   00FA3D  7F                 	db	127
   670   00FA3E  7F                 	db	127
   671   00FA3F  00                 	db	0
   672   00FA40  00                 	db	0
   673   00FA41  00                 	db	0
   674   00FA42  41                 	db	65
   675   00FA43  7F                 	db	127
   676   00FA44  7F                 	db	127
   677   00FA45  41                 	db	65
   678   00FA46  00                 	db	0
   679   00FA47  00                 	db	0
   680   00FA48  00                 	db	0
   681   00FA49  30                 	db	48
   682   00FA4A  70                 	db	112
   683   00FA4B  40                 	db	64
   684   00FA4C  41                 	db	65
   685   00FA4D  7F                 	db	127
   686   00FA4E  3F                 	db	63
   687   00FA4F  01                 	db	1
   688   00FA50  00                 	db	0
   689   00FA51  41                 	db	65
   690   00FA52  7F                 	db	127
   691   00FA53  7F                 	db	127
   692   00FA54  08                 	db	8
   693   00FA55  1C                 	db	28
   694   00FA56  77                 	db	119
   695   00FA57  63                 	db	99
   696   00FA58  00                 	db	0
   697   00FA59  41                 	db	65
   698   00FA5A  7F                 	db	127
   699   00FA5B  7F                 	db	127
   700   00FA5C  41                 	db	65
   701   00FA5D  40                 	db	64
   702   00FA5E  60                 	db	96
   703   00FA5F  70                 	db	112
   704   00FA60  00                 	db	0
   705   00FA61  00                 	db	0
   706   00FA62  7F                 	db	127
   707   00FA63  0E                 	db	14
   708   00FA64  1C                 	db	28
   709   00FA65  0E                 	db	14
   710   00FA66  7F                 	db	127
   711   00FA67  00                 	db	0
   712   00FA68  00                 	db	0
   713   00FA69  7F                 	db	127
   714   00FA6A  7F                 	db	127
   715   00FA6B  06                 	db	6
   716   00FA6C  0C                 	db	12
   717   00FA6D  18                 	db	24
   718   00FA6E  7F                 	db	127
   719   00FA6F  7F                 	db	127
   720   00FA70  00                 	db	0
   721   00FA71  1C                 	db	28
   722   00FA72  3E                 	db	62
   723   00FA73  63                 	db	99
   724   00FA74  41                 	db	65
   725   00FA75  63                 	db	99
   726   00FA76  3E                 	db	62
   727   00FA77  1C                 	db	28
   728   00FA78  00                 	db	0
   729   00FA79  41                 	db	65
   730   00FA7A  7F                 	db	127
   731   00FA7B  7F                 	db	127
   732   00FA7C  49                 	db	73
   733   00FA7D  09                 	db	9
   734   00FA7E  0F                 	db	15
   735   00FA7F  06                 	db	6
   736   00FA80  00                 	db	0
   737   00FA81  1E                 	db	30
   738   00FA82  3F                 	db	63
   739   00FA83  21                 	db	33
   740   00FA84  71                 	db	113
   741   00FA85  7F                 	db	127
   742   00FA86  5E                 	db	94
   743   00FA87  00                 	db	0
   744   00FA88  00                 	db	0
   745   00FA89  41                 	db	65
   746   00FA8A  7F                 	db	127
   747   00FA8B  7F                 	db	127
   748   00FA8C  09                 	db	9
   749   00FA8D  19                 	db	25
   750   00FA8E  7F                 	db	127
   751   00FA8F  66                 	db	102
   752   00FA90  00                 	db	0
   753   00FA91  26                 	db	38
   754   00FA92  6F                 	db	111
   755   00FA93  4D                 	db	77
   756   00FA94  59                 	db	89
   757   00FA95  73                 	db	115
   758   00FA96  32                 	db	50
   759   00FA97  00                 	db	0
   760   00FA98  00                 	db	0
   761   00FA99  03                 	db	3
   762   00FA9A  41                 	db	65
   763   00FA9B  7F                 	db	127
   764   00FA9C  7F                 	db	127
   765   00FA9D  41                 	db	65
   766   00FA9E  03                 	db	3
   767   00FA9F  00                 	db	0
   768   00FAA0  00                 	db	0
   769   00FAA1  7F                 	db	127
   770   00FAA2  7F                 	db	127
   771   00FAA3  40                 	db	64
   772   00FAA4  40                 	db	64
   773   00FAA5  7F                 	db	127
   774   00FAA6  7F                 	db	127
   775   00FAA7  00                 	db	0
   776   00FAA8  00                 	db	0
   777   00FAA9  1F                 	db	31
   778   00FAAA  3F                 	db	63
   779   00FAAB  60                 	db	96
   780   00FAAC  60                 	db	96
   781   00FAAD  3F                 	db	63
   782   00FAAE  1F                 	db	31
   783   00FAAF  00                 	db	0
   784   00FAB0  00                 	db	0
   785   00FAB1  7F                 	db	127
   786   00FAB2  7F                 	db	127
   787   00FAB3  30                 	db	48
   788   00FAB4  18                 	db	24
   789   00FAB5  30                 	db	48
   790   00FAB6  7F                 	db	127
   791   00FAB7  7F                 	db	127
   792   00FAB8  00                 	db	0
   793   00FAB9  43                 	db	67
   794   00FABA  67                 	db	103
   795   00FABB  3C                 	db	60
   796   00FABC  18                 	db	24
   797   00FABD  3C                 	db	60
   798   00FABE  67                 	db	103
   799   00FABF  43                 	db	67
   800   00FAC0  00                 	db	0
   801   00FAC1  07                 	db	7
   802   00FAC2  4F                 	db	79
   803   00FAC3  78                 	db	120
   804   00FAC4  78                 	db	120
   805   00FAC5  4F                 	db	79
   806   00FAC6  07                 	db	7
   807   00FAC7  00                 	db	0
   808   00FAC8  00                 	db	0
   809   00FAC9  47                 	db	71
   810   00FACA  63                 	db	99
   811   00FACB  71                 	db	113
   812   00FACC  59                 	db	89
   813   00FACD  4D                 	db	77
   814   00FACE  67                 	db	103
   815   00FACF  73                 	db	115
   816   00FAD0  00                 	db	0
   817   00FAD1  00                 	db	0
   818   00FAD2  7F                 	db	127
   819   00FAD3  7F                 	db	127
   820   00FAD4  41                 	db	65
   821   00FAD5  41                 	db	65
   822   00FAD6  00                 	db	0
   823   00FAD7  00                 	db	0
   824   00FAD8  00                 	db	0
   825   00FAD9  01                 	db	1
   826   00FADA  03                 	db	3
   827   00FADB  06                 	db	6
   828   00FADC  0C                 	db	12
   829   00FADD  18                 	db	24
   830   00FADE  30                 	db	48
   831   00FADF  60                 	db	96
   832   00FAE0  00                 	db	0
   833   00FAE1  00                 	db	0
   834   00FAE2  41                 	db	65
   835   00FAE3  41                 	db	65
   836   00FAE4  7F                 	db	127
   837   00FAE5  7F                 	db	127
   838   00FAE6  00                 	db	0
   839   00FAE7  00                 	db	0
   840   00FAE8  00                 	db	0
   841   00FAE9  08                 	db	8
   842   00FAEA  0C                 	db	12
   843   00FAEB  06                 	db	6
   844   00FAEC  03                 	db	3
   845   00FAED  06                 	db	6
   846   00FAEE  0C                 	db	12
   847   00FAEF  08                 	db	8
   848   00FAF0  00                 	db	0
   849   00FAF1  80                 	db	128
   850   00FAF2  80                 	db	128
   851   00FAF3  80                 	db	128
   852   00FAF4  80                 	db	128
   853   00FAF5  80                 	db	128
   854   00FAF6  80                 	db	128
   855   00FAF7  80                 	db	128
   856   00FAF8  80                 	db	128
   857   00FAF9  00                 	db	0
   858   00FAFA  00                 	db	0
   859   00FAFB  03                 	db	3
   860   00FAFC  07                 	db	7
   861   00FAFD  04                 	db	4
   862   00FAFE  00                 	db	0
   863   00FAFF  00                 	db	0
   864   00FB00  00                 	db	0
   865   00FB01  20                 	db	32
   866   00FB02  74                 	db	116
   867   00FB03  54                 	db	84
   868   00FB04  54                 	db	84
   869   00FB05  3C                 	db	60
   870   00FB06  78                 	db	120
   871   00FB07  40                 	db	64
   872   00FB08  00                 	db	0
   873   00FB09  41                 	db	65
   874   00FB0A  7F                 	db	127
   875   00FB0B  3F                 	db	63
   876   00FB0C  48                 	db	72
   877   00FB0D  48                 	db	72
   878   00FB0E  78                 	db	120
   879   00FB0F  30                 	db	48
   880   00FB10  00                 	db	0
   881   00FB11  38                 	db	56
   882   00FB12  7C                 	db	124
   883   00FB13  44                 	db	68
   884   00FB14  44                 	db	68
   885   00FB15  6C                 	db	108
   886   00FB16  28                 	db	40
   887   00FB17  00                 	db	0
   888   00FB18  00                 	db	0
   889   00FB19  30                 	db	48
   890   00FB1A  78                 	db	120
   891   00FB1B  48                 	db	72
   892   00FB1C  49                 	db	73
   893   00FB1D  3F                 	db	63
   894   00FB1E  7F                 	db	127
   895   00FB1F  40                 	db	64
   896   00FB20  00                 	db	0
   897   00FB21  38                 	db	56
   898   00FB22  7C                 	db	124
   899   00FB23  54                 	db	84
   900   00FB24  54                 	db	84
   901   00FB25  5C                 	db	92
   902   00FB26  18                 	db	24
   903   00FB27  00                 	db	0
   904   00FB28  00                 	db	0
   905   00FB29  48                 	db	72
   906   00FB2A  7E                 	db	126
   907   00FB2B  7F                 	db	127
   908   00FB2C  49                 	db	73
   909   00FB2D  03                 	db	3
   910   00FB2E  02                 	db	2
   911   00FB2F  00                 	db	0
   912   00FB30  00                 	db	0
   913   00FB31  98                 	db	152
   914   00FB32  BC                 	db	188
   915   00FB33  A4                 	db	164
   916   00FB34  A4                 	db	164
   917   00FB35  F8                 	db	248
   918   00FB36  7C                 	db	124
   919   00FB37  04                 	db	4
   920   00FB38  00                 	db	0
   921   00FB39  41                 	db	65
   922   00FB3A  7F                 	db	127
   923   00FB3B  7F                 	db	127
   924   00FB3C  08                 	db	8
   925   00FB3D  04                 	db	4
   926   00FB3E  7C                 	db	124
   927   00FB3F  78                 	db	120
   928   00FB40  00                 	db	0
   929   00FB41  00                 	db	0
   930   00FB42  44                 	db	68
   931   00FB43  7D                 	db	125
   932   00FB44  7D                 	db	125
   933   00FB45  40                 	db	64
   934   00FB46  00                 	db	0
   935   00FB47  00                 	db	0
   936   00FB48  00                 	db	0
   937   00FB49  60                 	db	96
   938   00FB4A  E0                 	db	224
   939   00FB4B  80                 	db	128
   940   00FB4C  80                 	db	128
   941   00FB4D  FD                 	db	253
   942   00FB4E  7D                 	db	125
   943   00FB4F  00                 	db	0
   944   00FB50  00                 	db	0
   945   00FB51  41                 	db	65
   946   00FB52  7F                 	db	127
   947   00FB53  7F                 	db	127
   948   00FB54  10                 	db	16
   949   00FB55  38                 	db	56
   950   00FB56  6C                 	db	108
   951   00FB57  44                 	db	68
   952   00FB58  00                 	db	0
   953   00FB59  00                 	db	0
   954   00FB5A  41                 	db	65
   955   00FB5B  7F                 	db	127
   956   00FB5C  7F                 	db	127
   957   00FB5D  40                 	db	64
   958   00FB5E  00                 	db	0
   959   00FB5F  00                 	db	0
   960   00FB60  00                 	db	0
   961   00FB61  7C                 	db	124
   962   00FB62  7C                 	db	124
   963   00FB63  18                 	db	24
   964   00FB64  38                 	db	56
   965   00FB65  1C                 	db	28
   966   00FB66  7C                 	db	124
   967   00FB67  78                 	db	120
   968   00FB68  00                 	db	0
   969   00FB69  7C                 	db	124
   970   00FB6A  7C                 	db	124
   971   00FB6B  04                 	db	4
   972   00FB6C  04                 	db	4
   973   00FB6D  7C                 	db	124
   974   00FB6E  78                 	db	120
   975   00FB6F  00                 	db	0
   976   00FB70  00                 	db	0
   977   00FB71  38                 	db	56
   978   00FB72  7C                 	db	124
   979   00FB73  44                 	db	68
   980   00FB74  44                 	db	68
   981   00FB75  7C                 	db	124
   982   00FB76  38                 	db	56
   983   00FB77  00                 	db	0
   984   00FB78  00                 	db	0
   985   00FB79  84                 	db	132
   986   00FB7A  FC                 	db	252
   987   00FB7B  F8                 	db	248
   988   00FB7C  A4                 	db	164
   989   00FB7D  24                 	db	36
   990   00FB7E  3C                 	db	60
   991   00FB7F  18                 	db	24
   992   00FB80  00                 	db	0
   993   00FB81  18                 	db	24
   994   00FB82  3C                 	db	60
   995   00FB83  24                 	db	36
   996   00FB84  A4                 	db	164
   997   00FB85  F8                 	db	248
   998   00FB86  FC                 	db	252
   999   00FB87  84                 	db	132
  1000   00FB88  00                 	db	0
  1001   00FB89  44                 	db	68
  1002   00FB8A  7C                 	db	124
  1003   00FB8B  78                 	db	120
  1004   00FB8C  4C                 	db	76
  1005   00FB8D  04                 	db	4
  1006   00FB8E  1C                 	db	28
  1007   00FB8F  18                 	db	24
  1008   00FB90  00                 	db	0
  1009   00FB91  48                 	db	72
  1010   00FB92  5C                 	db	92
  1011   00FB93  54                 	db	84
  1012   00FB94  54                 	db	84
  1013   00FB95  74                 	db	116
  1014   00FB96  24                 	db	36
  1015   00FB97  00                 	db	0
  1016   00FB98  00                 	db	0
  1017   00FB99  00                 	db	0
  1018   00FB9A  04                 	db	4
  1019   00FB9B  3E                 	db	62
  1020   00FB9C  7F                 	db	127
  1021   00FB9D  44                 	db	68
  1022   00FB9E  24                 	db	36
  1023   00FB9F  00                 	db	0
  1024   00FBA0  00                 	db	0
  1025   00FBA1  3C                 	db	60
  1026   00FBA2  7C                 	db	124
  1027   00FBA3  40                 	db	64
  1028   00FBA4  40                 	db	64
  1029   00FBA5  3C                 	db	60
  1030   00FBA6  7C                 	db	124
  1031   00FBA7  40                 	db	64
  1032   00FBA8  00                 	db	0
  1033   00FBA9  1C                 	db	28
  1034   00FBAA  3C                 	db	60
  1035   00FBAB  60                 	db	96
  1036   00FBAC  60                 	db	96
  1037   00FBAD  3C                 	db	60
  1038   00FBAE  1C                 	db	28
  1039   00FBAF  00                 	db	0
  1040   00FBB0  00                 	db	0
  1041   00FBB1  3C                 	db	60
  1042   00FBB2  7C                 	db	124
  1043   00FBB3  70                 	db	112
  1044   00FBB4  38                 	db	56
  1045   00FBB5  70                 	db	112
  1046   00FBB6  7C                 	db	124
  1047   00FBB7  3C                 	db	60
  1048   00FBB8  00                 	db	0
  1049   00FBB9  44                 	db	68
  1050   00FBBA  6C                 	db	108
  1051   00FBBB  38                 	db	56
  1052   00FBBC  10                 	db	16
  1053   00FBBD  38                 	db	56
  1054   00FBBE  6C                 	db	108
  1055   00FBBF  44                 	db	68
  1056   00FBC0  00                 	db	0
  1057   00FBC1  9C                 	db	156
  1058   00FBC2  BC                 	db	188
  1059   00FBC3  A0                 	db	160
  1060   00FBC4  A0                 	db	160
  1061   00FBC5  FC                 	db	252
  1062   00FBC6  7C                 	db	124
  1063   00FBC7  00                 	db	0
  1064   00FBC8  00                 	db	0
  1065   00FBC9  4C                 	db	76
  1066   00FBCA  64                 	db	100
  1067   00FBCB  74                 	db	116
  1068   00FBCC  5C                 	db	92
  1069   00FBCD  4C                 	db	76
  1070   00FBCE  64                 	db	100
  1071   00FBCF  00                 	db	0
  1072   00FBD0  00                 	db	0
  1073   00FBD1  08                 	db	8
  1074   00FBD2  08                 	db	8
  1075   00FBD3  3E                 	db	62
  1076   00FBD4  77                 	db	119
  1077   00FBD5  41                 	db	65
  1078   00FBD6  41                 	db	65
  1079   00FBD7  00                 	db	0
  1080   00FBD8  00                 	db	0
  1081   00FBD9  00                 	db	0
  1082   00FBDA  00                 	db	0
  1083   00FBDB  00                 	db	0
  1084   00FBDC  77                 	db	119
  1085   00FBDD  77                 	db	119
  1086   00FBDE  00                 	db	0
  1087   00FBDF  00                 	db	0
  1088   00FBE0  00                 	db	0
  1089   00FBE1  41                 	db	65
  1090   00FBE2  41                 	db	65
  1091   00FBE3  77                 	db	119
  1092   00FBE4  3E                 	db	62
  1093   00FBE5  08                 	db	8
  1094   00FBE6  08                 	db	8
  1095   00FBE7  00                 	db	0
  1096   00FBE8  00                 	db	0
  1097   00FBE9  02                 	db	2
  1098   00FBEA  03                 	db	3
  1099   00FBEB  01                 	db	1
  1100   00FBEC  03                 	db	3
  1101   00FBED  02                 	db	2
  1102   00FBEE  03                 	db	3
  1103   00FBEF  01                 	db	1
  1104   00FBF0  00                 	db	0
  1105   00FBF1  70                 	db	112
  1106   00FBF2  78                 	db	120
  1107   00FBF3  4C                 	db	76
  1108   00FBF4  46                 	db	70
  1109   00FBF5  4C                 	db	76
  1110   00FBF6  78                 	db	120
  1111   00FBF7  70                 	db	112
  1112   00FBF8  00                 	db	0
  1113   00FBF9  0E                 	db	14
  1114   00FBFA  9F                 	db	159
  1115   00FBFB  91                 	db	145
  1116   00FBFC  B1                 	db	177
  1117   00FBFD  FB                 	db	251
  1118   00FBFE  4A                 	db	74
  1119   00FBFF  00                 	db	0
  1120   00FC00  00                 	db	0
  1121   00FC01  3A                 	db	58
  1122   00FC02  7A                 	db	122
  1123   00FC03  40                 	db	64
  1124   00FC04  40                 	db	64
  1125   00FC05  7A                 	db	122
  1126   00FC06  7A                 	db	122
  1127   00FC07  40                 	db	64
  1128   00FC08  00                 	db	0
  1129   00FC09  38                 	db	56
  1130   00FC0A  7C                 	db	124
  1131   00FC0B  54                 	db	84
  1132   00FC0C  55                 	db	85
  1133   00FC0D  5D                 	db	93
  1134   00FC0E  19                 	db	25
  1135   00FC0F  00                 	db	0
  1136   00FC10  00                 	db	0
  1137   00FC11  02                 	db	2
  1138   00FC12  23                 	db	35
  1139   00FC13  75                 	db	117
  1140   00FC14  55                 	db	85
  1141   00FC15  55                 	db	85
  1142   00FC16  7D                 	db	125
  1143   00FC17  7B                 	db	123
  1144   00FC18  42                 	db	66
  1145   00FC19  21                 	db	33
  1146   00FC1A  75                 	db	117
  1147   00FC1B  54                 	db	84
  1148   00FC1C  54                 	db	84
  1149   00FC1D  7D                 	db	125
  1150   00FC1E  79                 	db	121
  1151   00FC1F  40                 	db	64
  1152   00FC20  00                 	db	0
  1153   00FC21  21                 	db	33
  1154   00FC22  75                 	db	117
  1155   00FC23  55                 	db	85
  1156   00FC24  54                 	db	84
  1157   00FC25  7C                 	db	124
  1158   00FC26  78                 	db	120
  1159   00FC27  40                 	db	64
  1160   00FC28  00                 	db	0
  1161   00FC29  20                 	db	32
  1162   00FC2A  74                 	db	116
  1163   00FC2B  57                 	db	87
  1164   00FC2C  57                 	db	87
  1165   00FC2D  7C                 	db	124
  1166   00FC2E  78                 	db	120
  1167   00FC2F  40                 	db	64
  1168   00FC30  00                 	db	0
  1169   00FC31  18                 	db	24
  1170   00FC32  3C                 	db	60
  1171   00FC33  A4                 	db	164
  1172   00FC34  A4                 	db	164
  1173   00FC35  E4                 	db	228
  1174   00FC36  40                 	db	64
  1175   00FC37  00                 	db	0
  1176   00FC38  00                 	db	0
  1177   00FC39  02                 	db	2
  1178   00FC3A  3B                 	db	59
  1179   00FC3B  7D                 	db	125
  1180   00FC3C  55                 	db	85
  1181   00FC3D  55                 	db	85
  1182   00FC3E  5D                 	db	93
  1183   00FC3F  1B                 	db	27
  1184   00FC40  02                 	db	2
  1185   00FC41  39                 	db	57
  1186   00FC42  7D                 	db	125
  1187   00FC43  54                 	db	84
  1188   00FC44  54                 	db	84
  1189   00FC45  5D                 	db	93
  1190   00FC46  19                 	db	25
  1191   00FC47  00                 	db	0
  1192   00FC48  00                 	db	0
  1193   00FC49  39                 	db	57
  1194   00FC4A  7D                 	db	125
  1195   00FC4B  55                 	db	85
  1196   00FC4C  54                 	db	84
  1197   00FC4D  5C                 	db	92
  1198   00FC4E  18                 	db	24
  1199   00FC4F  00                 	db	0
  1200   00FC50  00                 	db	0
  1201   00FC51  01                 	db	1
  1202   00FC52  45                 	db	69
  1203   00FC53  7C                 	db	124
  1204   00FC54  7C                 	db	124
  1205   00FC55  41                 	db	65
  1206   00FC56  01                 	db	1
  1207   00FC57  00                 	db	0
  1208   00FC58  00                 	db	0
  1209   00FC59  02                 	db	2
  1210   00FC5A  03                 	db	3
  1211   00FC5B  45                 	db	69
  1212   00FC5C  7D                 	db	125
  1213   00FC5D  7D                 	db	125
  1214   00FC5E  43                 	db	67
  1215   00FC5F  02                 	db	2
  1216   00FC60  00                 	db	0
  1217   00FC61  01                 	db	1
  1218   00FC62  45                 	db	69
  1219   00FC63  7D                 	db	125
  1220   00FC64  7C                 	db	124
  1221   00FC65  40                 	db	64
  1222   00FC66  00                 	db	0
  1223   00FC67  00                 	db	0
  1224   00FC68  00                 	db	0
  1225   00FC69  79                 	db	121
  1226   00FC6A  7D                 	db	125
  1227   00FC6B  16                 	db	22
  1228   00FC6C  12                 	db	18
  1229   00FC6D  16                 	db	22
  1230   00FC6E  7D                 	db	125
  1231   00FC6F  79                 	db	121
  1232   00FC70  00                 	db	0
  1233   00FC71  70                 	db	112
  1234   00FC72  78                 	db	120
  1235   00FC73  2B                 	db	43
  1236   00FC74  2B                 	db	43
  1237   00FC75  78                 	db	120
  1238   00FC76  70                 	db	112
  1239   00FC77  00                 	db	0
  1240   00FC78  00                 	db	0
  1241   00FC79  44                 	db	68
  1242   00FC7A  7C                 	db	124
  1243   00FC7B  7C                 	db	124
  1244   00FC7C  55                 	db	85
  1245   00FC7D  55                 	db	85
  1246   00FC7E  45                 	db	69
  1247   00FC7F  00                 	db	0
  1248   00FC80  00                 	db	0
  1249   00FC81  20                 	db	32
  1250   00FC82  74                 	db	116
  1251   00FC83  54                 	db	84
  1252   00FC84  54                 	db	84
  1253   00FC85  7C                 	db	124
  1254   00FC86  7C                 	db	124
  1255   00FC87  54                 	db	84
  1256   00FC88  54                 	db	84
  1257   00FC89  7C                 	db	124
  1258   00FC8A  7E                 	db	126
  1259   00FC8B  0B                 	db	11
  1260   00FC8C  09                 	db	9
  1261   00FC8D  7F                 	db	127
  1262   00FC8E  7F                 	db	127
  1263   00FC8F  49                 	db	73
  1264   00FC90  00                 	db	0
  1265   00FC91  32                 	db	50
  1266   00FC92  7B                 	db	123
  1267   00FC93  49                 	db	73
  1268   00FC94  49                 	db	73
  1269   00FC95  7B                 	db	123
  1270   00FC96  32                 	db	50
  1271   00FC97  00                 	db	0
  1272   00FC98  00                 	db	0
  1273   00FC99  32                 	db	50
  1274   00FC9A  7A                 	db	122
  1275   00FC9B  48                 	db	72
  1276   00FC9C  48                 	db	72
  1277   00FC9D  7A                 	db	122
  1278   00FC9E  32                 	db	50
  1279   00FC9F  00                 	db	0
  1280   00FCA0  00                 	db	0
  1281   00FCA1  32                 	db	50
  1282   00FCA2  7A                 	db	122
  1283   00FCA3  4A                 	db	74
  1284   00FCA4  48                 	db	72
  1285   00FCA5  78                 	db	120
  1286   00FCA6  30                 	db	48
  1287   00FCA7  00                 	db	0
  1288   00FCA8  00                 	db	0
  1289   00FCA9  3A                 	db	58
  1290   00FCAA  7B                 	db	123
  1291   00FCAB  41                 	db	65
  1292   00FCAC  41                 	db	65
  1293   00FCAD  7B                 	db	123
  1294   00FCAE  7A                 	db	122
  1295   00FCAF  40                 	db	64
  1296   00FCB0  00                 	db	0
  1297   00FCB1  3A                 	db	58
  1298   00FCB2  7A                 	db	122
  1299   00FCB3  42                 	db	66
  1300   00FCB4  40                 	db	64
  1301   00FCB5  78                 	db	120
  1302   00FCB6  78                 	db	120
  1303   00FCB7  40                 	db	64
  1304   00FCB8  00                 	db	0
  1305   00FCB9  9A                 	db	154
  1306   00FCBA  BA                 	db	186
  1307   00FCBB  A0                 	db	160
  1308   00FCBC  A0                 	db	160
  1309   00FCBD  FA                 	db	250
  1310   00FCBE  7A                 	db	122
  1311   00FCBF  00                 	db	0
  1312   00FCC0  00                 	db	0
  1313   00FCC1  01                 	db	1
  1314   00FCC2  19                 	db	25
  1315   00FCC3  3C                 	db	60
  1316   00FCC4  66                 	db	102
  1317   00FCC5  66                 	db	102
  1318   00FCC6  3C                 	db	60
  1319   00FCC7  19                 	db	25
  1320   00FCC8  01                 	db	1
  1321   00FCC9  3D                 	db	61
  1322   00FCCA  7D                 	db	125
  1323   00FCCB  40                 	db	64
  1324   00FCCC  40                 	db	64
  1325   00FCCD  7D                 	db	125
  1326   00FCCE  3D                 	db	61
  1327   00FCCF  00                 	db	0
  1328   00FCD0  00                 	db	0
  1329   00FCD1  18                 	db	24
  1330   00FCD2  3C                 	db	60
  1331   00FCD3  24                 	db	36
  1332   00FCD4  E7                 	db	231
  1333   00FCD5  E7                 	db	231
  1334   00FCD6  24                 	db	36
  1335   00FCD7  24                 	db	36
  1336   00FCD8  00                 	db	0
  1337   00FCD9  68                 	db	104
  1338   00FCDA  7E                 	db	126
  1339   00FCDB  7F                 	db	127
  1340   00FCDC  49                 	db	73
  1341   00FCDD  43                 	db	67
  1342   00FCDE  66                 	db	102
  1343   00FCDF  20                 	db	32
  1344   00FCE0  00                 	db	0
  1345   00FCE1  2B                 	db	43
  1346   00FCE2  2F                 	db	47
  1347   00FCE3  FC                 	db	252
  1348   00FCE4  FC                 	db	252
  1349   00FCE5  2F                 	db	47
  1350   00FCE6  2B                 	db	43
  1351   00FCE7  00                 	db	0
  1352   00FCE8  00                 	db	0
  1353   00FCE9  FF                 	db	255
  1354   00FCEA  FF                 	db	255
  1355   00FCEB  09                 	db	9
  1356   00FCEC  09                 	db	9
  1357   00FCED  2F                 	db	47
  1358   00FCEE  F6                 	db	246
  1359   00FCEF  F8                 	db	248
  1360   00FCF0  A0                 	db	160
  1361   00FCF1  40                 	db	64
  1362   00FCF2  C0                 	db	192
  1363   00FCF3  88                 	db	136
  1364   00FCF4  FE                 	db	254
  1365   00FCF5  7F                 	db	127
  1366   00FCF6  09                 	db	9
  1367   00FCF7  03                 	db	3
  1368   00FCF8  02                 	db	2
  1369   00FCF9  20                 	db	32
  1370   00FCFA  74                 	db	116
  1371   00FCFB  54                 	db	84
  1372   00FCFC  55                 	db	85
  1373   00FCFD  7D                 	db	125
  1374   00FCFE  79                 	db	121
  1375   00FCFF  40                 	db	64
  1376   00FD00  00                 	db	0
  1377   00FD01  00                 	db	0
  1378   00FD02  44                 	db	68
  1379   00FD03  7D                 	db	125
  1380   00FD04  7D                 	db	125
  1381   00FD05  41                 	db	65
  1382   00FD06  00                 	db	0
  1383   00FD07  00                 	db	0
  1384   00FD08  00                 	db	0
  1385   00FD09  30                 	db	48
  1386   00FD0A  78                 	db	120
  1387   00FD0B  48                 	db	72
  1388   00FD0C  4A                 	db	74
  1389   00FD0D  7A                 	db	122
  1390   00FD0E  32                 	db	50
  1391   00FD0F  00                 	db	0
  1392   00FD10  00                 	db	0
  1393   00FD11  38                 	db	56
  1394   00FD12  78                 	db	120
  1395   00FD13  40                 	db	64
  1396   00FD14  42                 	db	66
  1397   00FD15  7A                 	db	122
  1398   00FD16  7A                 	db	122
  1399   00FD17  40                 	db	64
  1400   00FD18  00                 	db	0
  1401   00FD19  7A                 	db	122
  1402   00FD1A  7A                 	db	122
  1403   00FD1B  0A                 	db	10
  1404   00FD1C  0A                 	db	10
  1405   00FD1D  7A                 	db	122
  1406   00FD1E  70                 	db	112
  1407   00FD1F  00                 	db	0
  1408   00FD20  00                 	db	0
  1409   00FD21  7D                 	db	125
  1410   00FD22  7D                 	db	125
  1411   00FD23  19                 	db	25
  1412   00FD24  31                 	db	49
  1413   00FD25  7D                 	db	125
  1414   00FD26  7D                 	db	125
  1415   00FD27  00                 	db	0
  1416   00FD28  00                 	db	0
  1417   00FD29  00                 	db	0
  1418   00FD2A  26                 	db	38
  1419   00FD2B  2F                 	db	47
  1420   00FD2C  29                 	db	41
  1421   00FD2D  2F                 	db	47
  1422   00FD2E  2F                 	db	47
  1423   00FD2F  28                 	db	40
  1424   00FD30  00                 	db	0
  1425   00FD31  00                 	db	0
  1426   00FD32  26                 	db	38
  1427   00FD33  2F                 	db	47
  1428   00FD34  29                 	db	41
  1429   00FD35  2F                 	db	47
  1430   00FD36  26                 	db	38
  1431   00FD37  00                 	db	0
  1432   00FD38  00                 	db	0
  1433   00FD39  30                 	db	48
  1434   00FD3A  78                 	db	120
  1435   00FD3B  4D                 	db	77
  1436   00FD3C  45                 	db	69
  1437   00FD3D  60                 	db	96
  1438   00FD3E  20                 	db	32
  1439   00FD3F  00                 	db	0
  1440   00FD40  00                 	db	0
  1441   00FD41  38                 	db	56
  1442   00FD42  38                 	db	56
  1443   00FD43  08                 	db	8
  1444   00FD44  08                 	db	8
  1445   00FD45  08                 	db	8
  1446   00FD46  08                 	db	8
  1447   00FD47  00                 	db	0
  1448   00FD48  00                 	db	0
  1449   00FD49  08                 	db	8
  1450   00FD4A  08                 	db	8
  1451   00FD4B  08                 	db	8
  1452   00FD4C  08                 	db	8
  1453   00FD4D  38                 	db	56
  1454   00FD4E  38                 	db	56
  1455   00FD4F  00                 	db	0
  1456   00FD50  00                 	db	0
  1457   00FD51  4F                 	db	79
  1458   00FD52  6F                 	db	111
  1459   00FD53  30                 	db	48
  1460   00FD54  18                 	db	24
  1461   00FD55  CC                 	db	204
  1462   00FD56  EE                 	db	238
  1463   00FD57  BB                 	db	187
  1464   00FD58  91                 	db	145
  1465   00FD59  4F                 	db	79
  1466   00FD5A  6F                 	db	111
  1467   00FD5B  30                 	db	48
  1468   00FD5C  18                 	db	24
  1469   00FD5D  6C                 	db	108
  1470   00FD5E  76                 	db	118
  1471   00FD5F  FB                 	db	251
  1472   00FD60  F9                 	db	249
  1473   00FD61  00                 	db	0
  1474   00FD62  00                 	db	0
  1475   00FD63  00                 	db	0
  1476   00FD64  7B                 	db	123
  1477   00FD65  7B                 	db	123
  1478   00FD66  00                 	db	0
  1479   00FD67  00                 	db	0
  1480   00FD68  00                 	db	0
  1481   00FD69  08                 	db	8
  1482   00FD6A  1C                 	db	28
  1483   00FD6B  36                 	db	54
  1484   00FD6C  22                 	db	34
  1485   00FD6D  08                 	db	8
  1486   00FD6E  1C                 	db	28
  1487   00FD6F  36                 	db	54
  1488   00FD70  22                 	db	34
  1489   00FD71  22                 	db	34
  1490   00FD72  36                 	db	54
  1491   00FD73  1C                 	db	28
  1492   00FD74  08                 	db	8
  1493   00FD75  22                 	db	34
  1494   00FD76  36                 	db	54
  1495   00FD77  1C                 	db	28
  1496   00FD78  08                 	db	8
  1497   00FD79  AA                 	db	170
  1498   00FD7A  00                 	db	0
  1499   00FD7B  55                 	db	85
  1500   00FD7C  00                 	db	0
  1501   00FD7D  AA                 	db	170
  1502   00FD7E  00                 	db	0
  1503   00FD7F  55                 	db	85
  1504   00FD80  00                 	db	0
  1505   00FD81  AA                 	db	170
  1506   00FD82  55                 	db	85
  1507   00FD83  AA                 	db	170
  1508   00FD84  55                 	db	85
  1509   00FD85  AA                 	db	170
  1510   00FD86  55                 	db	85
  1511   00FD87  AA                 	db	170
  1512   00FD88  55                 	db	85
  1513   00FD89  DD                 	db	221
  1514   00FD8A  FF                 	db	255
  1515   00FD8B  AA                 	db	170
  1516   00FD8C  77                 	db	119
  1517   00FD8D  DD                 	db	221
  1518   00FD8E  AA                 	db	170
  1519   00FD8F  FF                 	db	255
  1520   00FD90  77                 	db	119
  1521   00FD91  00                 	db	0
  1522   00FD92  00                 	db	0
  1523   00FD93  00                 	db	0
  1524   00FD94  FF                 	db	255
  1525   00FD95  FF                 	db	255
  1526   00FD96  00                 	db	0
  1527   00FD97  00                 	db	0
  1528   00FD98  00                 	db	0
  1529   00FD99  10                 	db	16
  1530   00FD9A  10                 	db	16
  1531   00FD9B  10                 	db	16
  1532   00FD9C  FF                 	db	255
  1533   00FD9D  FF                 	db	255
  1534   00FD9E  00                 	db	0
  1535   00FD9F  00                 	db	0
  1536   00FDA0  00                 	db	0
  1537   00FDA1  14                 	db	20
  1538   00FDA2  14                 	db	20
  1539   00FDA3  14                 	db	20
  1540   00FDA4  FF                 	db	255
  1541   00FDA5  FF                 	db	255
  1542   00FDA6  00                 	db	0
  1543   00FDA7  00                 	db	0
  1544   00FDA8  00                 	db	0
  1545   00FDA9  10                 	db	16
  1546   00FDAA  10                 	db	16
  1547   00FDAB  FF                 	db	255
  1548   00FDAC  FF                 	db	255
  1549   00FDAD  00                 	db	0
  1550   00FDAE  FF                 	db	255
  1551   00FDAF  FF                 	db	255
  1552   00FDB0  00                 	db	0
  1553   00FDB1  10                 	db	16
  1554   00FDB2  10                 	db	16
  1555   00FDB3  F0                 	db	240
  1556   00FDB4  F0                 	db	240
  1557   00FDB5  10                 	db	16
  1558   00FDB6  F0                 	db	240
  1559   00FDB7  F0                 	db	240
  1560   00FDB8  00                 	db	0
  1561   00FDB9  14                 	db	20
  1562   00FDBA  14                 	db	20
  1563   00FDBB  14                 	db	20
  1564   00FDBC  FC                 	db	252
  1565   00FDBD  FC                 	db	252
  1566   00FDBE  00                 	db	0
  1567   00FDBF  00                 	db	0
  1568   00FDC0  00                 	db	0
  1569   00FDC1  14                 	db	20
  1570   00FDC2  14                 	db	20
  1571   00FDC3  F7                 	db	247
  1572   00FDC4  F7                 	db	247
  1573   00FDC5  00                 	db	0
  1574   00FDC6  FF                 	db	255
  1575   00FDC7  FF                 	db	255
  1576   00FDC8  00                 	db	0
  1577   00FDC9  00                 	db	0
  1578   00FDCA  00                 	db	0
  1579   00FDCB  FF                 	db	255
  1580   00FDCC  FF                 	db	255
  1581   00FDCD  00                 	db	0
  1582   00FDCE  FF                 	db	255
  1583   00FDCF  FF                 	db	255
  1584   00FDD0  00                 	db	0
  1585   00FDD1  14                 	db	20
  1586   00FDD2  14                 	db	20
  1587   00FDD3  F4                 	db	244
  1588   00FDD4  F4                 	db	244
  1589   00FDD5  04                 	db	4
  1590   00FDD6  FC                 	db	252
  1591   00FDD7  FC                 	db	252
  1592   00FDD8  00                 	db	0
  1593   00FDD9  14                 	db	20
  1594   00FDDA  14                 	db	20
  1595   00FDDB  17                 	db	23
  1596   00FDDC  17                 	db	23
  1597   00FDDD  10                 	db	16
  1598   00FDDE  1F                 	db	31
  1599   00FDDF  1F                 	db	31
  1600   00FDE0  00                 	db	0
  1601   00FDE1  10                 	db	16
  1602   00FDE2  10                 	db	16
  1603   00FDE3  1F                 	db	31
  1604   00FDE4  1F                 	db	31
  1605   00FDE5  10                 	db	16
  1606   00FDE6  1F                 	db	31
  1607   00FDE7  1F                 	db	31
  1608   00FDE8  00                 	db	0
  1609   00FDE9  14                 	db	20
  1610   00FDEA  14                 	db	20
  1611   00FDEB  14                 	db	20
  1612   00FDEC  1F                 	db	31
  1613   00FDED  1F                 	db	31
  1614   00FDEE  00                 	db	0
  1615   00FDEF  00                 	db	0
  1616   00FDF0  00                 	db	0
  1617   00FDF1  10                 	db	16
  1618   00FDF2  10                 	db	16
  1619   00FDF3  10                 	db	16
  1620   00FDF4  F0                 	db	240
  1621   00FDF5  F0                 	db	240
  1622   00FDF6  00                 	db	0
  1623   00FDF7  00                 	db	0
  1624   00FDF8  00                 	db	0
  1625   00FDF9  00                 	db	0
  1626   00FDFA  00                 	db	0
  1627   00FDFB  00                 	db	0
  1628   00FDFC  1F                 	db	31
  1629   00FDFD  1F                 	db	31
  1630   00FDFE  10                 	db	16
  1631   00FDFF  10                 	db	16
  1632   00FE00  10                 	db	16
  1633   00FE01  10                 	db	16
  1634   00FE02  10                 	db	16
  1635   00FE03  10                 	db	16
  1636   00FE04  1F                 	db	31
  1637   00FE05  1F                 	db	31
  1638   00FE06  10                 	db	16
  1639   00FE07  10                 	db	16
  1640   00FE08  10                 	db	16
  1641   00FE09  10                 	db	16
  1642   00FE0A  10                 	db	16
  1643   00FE0B  10                 	db	16
  1644   00FE0C  F0                 	db	240
  1645   00FE0D  F0                 	db	240
  1646   00FE0E  10                 	db	16
  1647   00FE0F  10                 	db	16
  1648   00FE10  10                 	db	16
  1649   00FE11  00                 	db	0
  1650   00FE12  00                 	db	0
  1651   00FE13  00                 	db	0
  1652   00FE14  FF                 	db	255
  1653   00FE15  FF                 	db	255
  1654   00FE16  10                 	db	16
  1655   00FE17  10                 	db	16
  1656   00FE18  10                 	db	16
  1657   00FE19  10                 	db	16
  1658   00FE1A  10                 	db	16
  1659   00FE1B  10                 	db	16
  1660   00FE1C  10                 	db	16
  1661   00FE1D  10                 	db	16
  1662   00FE1E  10                 	db	16
  1663   00FE1F  10                 	db	16
  1664   00FE20  10                 	db	16
  1665   00FE21  10                 	db	16
  1666   00FE22  10                 	db	16
  1667   00FE23  10                 	db	16
  1668   00FE24  FF                 	db	255
  1669   00FE25  FF                 	db	255
  1670   00FE26  10                 	db	16
  1671   00FE27  10                 	db	16
  1672   00FE28  10                 	db	16
  1673   00FE29  00                 	db	0
  1674   00FE2A  00                 	db	0
  1675   00FE2B  00                 	db	0
  1676   00FE2C  FF                 	db	255
  1677   00FE2D  FF                 	db	255
  1678   00FE2E  14                 	db	20
  1679   00FE2F  14                 	db	20
  1680   00FE30  14                 	db	20
  1681   00FE31  00                 	db	0
  1682   00FE32  00                 	db	0
  1683   00FE33  FF                 	db	255
  1684   00FE34  FF                 	db	255
  1685   00FE35  00                 	db	0
  1686   00FE36  FF                 	db	255
  1687   00FE37  FF                 	db	255
  1688   00FE38  10                 	db	16
  1689   00FE39  00                 	db	0
  1690   00FE3A  00                 	db	0
  1691   00FE3B  1F                 	db	31
  1692   00FE3C  1F                 	db	31
  1693   00FE3D  10                 	db	16
  1694   00FE3E  17                 	db	23
  1695   00FE3F  17                 	db	23
  1696   00FE40  14                 	db	20
  1697   00FE41  00                 	db	0
  1698   00FE42  00                 	db	0
  1699   00FE43  FC                 	db	252
  1700   00FE44  FC                 	db	252
  1701   00FE45  04                 	db	4
  1702   00FE46  F4                 	db	244
  1703   00FE47  F4                 	db	244
  1704   00FE48  14                 	db	20
  1705   00FE49  14                 	db	20
  1706   00FE4A  14                 	db	20
  1707   00FE4B  17                 	db	23
  1708   00FE4C  17                 	db	23
  1709   00FE4D  10                 	db	16
  1710   00FE4E  17                 	db	23
  1711   00FE4F  17                 	db	23
  1712   00FE50  14                 	db	20
  1713   00FE51  14                 	db	20
  1714   00FE52  14                 	db	20
  1715   00FE53  F4                 	db	244
  1716   00FE54  F4                 	db	244
  1717   00FE55  04                 	db	4
  1718   00FE56  F4                 	db	244
  1719   00FE57  F4                 	db	244
  1720   00FE58  14                 	db	20
  1721   00FE59  00                 	db	0
  1722   00FE5A  00                 	db	0
  1723   00FE5B  FF                 	db	255
  1724   00FE5C  FF                 	db	255
  1725   00FE5D  00                 	db	0
  1726   00FE5E  F7                 	db	247
  1727   00FE5F  F7                 	db	247
  1728   00FE60  14                 	db	20
  1729   00FE61  14                 	db	20
  1730   00FE62  14                 	db	20
  1731   00FE63  14                 	db	20
  1732   00FE64  14                 	db	20
  1733   00FE65  14                 	db	20
  1734   00FE66  14                 	db	20
  1735   00FE67  14                 	db	20
  1736   00FE68  14                 	db	20
  1737   00FE69  14                 	db	20
  1738   00FE6A  14                 	db	20
  1739   00FE6B  F7                 	db	247
  1740   00FE6C  F7                 	db	247
  1741   00FE6D  00                 	db	0
  1742   00FE6E  F7                 	db	247
  1743   00FE6F  F7                 	db	247
  1744   00FE70  14                 	db	20
  1745   00FE71  14                 	db	20
  1746   00FE72  14                 	db	20
  1747   00FE73  14                 	db	20
  1748   00FE74  17                 	db	23
  1749   00FE75  17                 	db	23
  1750   00FE76  14                 	db	20
  1751   00FE77  14                 	db	20
  1752   00FE78  14                 	db	20
  1753   00FE79  10                 	db	16
  1754   00FE7A  10                 	db	16
  1755   00FE7B  1F                 	db	31
  1756   00FE7C  1F                 	db	31
  1757   00FE7D  10                 	db	16
  1758   00FE7E  1F                 	db	31
  1759   00FE7F  1F                 	db	31
  1760   00FE80  10                 	db	16
  1761   00FE81  14                 	db	20
  1762   00FE82  14                 	db	20
  1763   00FE83  14                 	db	20
  1764   00FE84  F4                 	db	244
  1765   00FE85  F4                 	db	244
  1766   00FE86  14                 	db	20
  1767   00FE87  14                 	db	20
  1768   00FE88  14                 	db	20
  1769   00FE89  10                 	db	16
  1770   00FE8A  10                 	db	16
  1771   00FE8B  F0                 	db	240
  1772   00FE8C  F0                 	db	240
  1773   00FE8D  10                 	db	16
  1774   00FE8E  F0                 	db	240
  1775   00FE8F  F0                 	db	240
  1776   00FE90  10                 	db	16
  1777   00FE91  00                 	db	0
  1778   00FE92  00                 	db	0
  1779   00FE93  1F                 	db	31
  1780   00FE94  1F                 	db	31
  1781   00FE95  10                 	db	16
  1782   00FE96  1F                 	db	31
  1783   00FE97  1F                 	db	31
  1784   00FE98  10                 	db	16
  1785   00FE99  00                 	db	0
  1786   00FE9A  00                 	db	0
  1787   00FE9B  00                 	db	0
  1788   00FE9C  1F                 	db	31
  1789   00FE9D  1F                 	db	31
  1790   00FE9E  14                 	db	20
  1791   00FE9F  14                 	db	20
  1792   00FEA0  14                 	db	20
  1793   00FEA1  00                 	db	0
  1794   00FEA2  00                 	db	0
  1795   00FEA3  00                 	db	0
  1796   00FEA4  FC                 	db	252
  1797   00FEA5  FC                 	db	252
  1798   00FEA6  14                 	db	20
  1799   00FEA7  14                 	db	20
  1800   00FEA8  14                 	db	20
  1801   00FEA9  00                 	db	0
  1802   00FEAA  00                 	db	0
  1803   00FEAB  F0                 	db	240
  1804   00FEAC  F0                 	db	240
  1805   00FEAD  10                 	db	16
  1806   00FEAE  F0                 	db	240
  1807   00FEAF  F0                 	db	240
  1808   00FEB0  10                 	db	16
  1809   00FEB1  10                 	db	16
  1810   00FEB2  10                 	db	16
  1811   00FEB3  FF                 	db	255
  1812   00FEB4  FF                 	db	255
  1813   00FEB5  10                 	db	16
  1814   00FEB6  FF                 	db	255
  1815   00FEB7  FF                 	db	255
  1816   00FEB8  10                 	db	16
  1817   00FEB9  14                 	db	20
  1818   00FEBA  14                 	db	20
  1819   00FEBB  14                 	db	20
  1820   00FEBC  FF                 	db	255
  1821   00FEBD  FF                 	db	255
  1822   00FEBE  14                 	db	20
  1823   00FEBF  14                 	db	20
  1824   00FEC0  14                 	db	20
  1825   00FEC1  10                 	db	16
  1826   00FEC2  10                 	db	16
  1827   00FEC3  10                 	db	16
  1828   00FEC4  1F                 	db	31
  1829   00FEC5  1F                 	db	31
  1830   00FEC6  00                 	db	0
  1831   00FEC7  00                 	db	0
  1832   00FEC8  00                 	db	0
  1833   00FEC9  00                 	db	0
  1834   00FECA  00                 	db	0
  1835   00FECB  00                 	db	0
  1836   00FECC  F0                 	db	240
  1837   00FECD  F0                 	db	240
  1838   00FECE  10                 	db	16
  1839   00FECF  10                 	db	16
  1840   00FED0  10                 	db	16
  1841   00FED1  FF                 	db	255
  1842   00FED2  FF                 	db	255
  1843   00FED3  FF                 	db	255
  1844   00FED4  FF                 	db	255
  1845   00FED5  FF                 	db	255
  1846   00FED6  FF                 	db	255
  1847   00FED7  FF                 	db	255
  1848   00FED8  FF                 	db	255
  1849   00FED9  F0                 	db	240
  1850   00FEDA  F0                 	db	240
  1851   00FEDB  F0                 	db	240
  1852   00FEDC  F0                 	db	240
  1853   00FEDD  F0                 	db	240
  1854   00FEDE  F0                 	db	240
  1855   00FEDF  F0                 	db	240
  1856   00FEE0  F0                 	db	240
  1857   00FEE1  FF                 	db	255
  1858   00FEE2  FF                 	db	255
  1859   00FEE3  FF                 	db	255
  1860   00FEE4  FF                 	db	255
  1861   00FEE5  00                 	db	0
  1862   00FEE6  00                 	db	0
  1863   00FEE7  00                 	db	0
  1864   00FEE8  00                 	db	0
  1865   00FEE9  00                 	db	0
  1866   00FEEA  00                 	db	0
  1867   00FEEB  00                 	db	0
  1868   00FEEC  00                 	db	0
  1869   00FEED  FF                 	db	255
  1870   00FEEE  FF                 	db	255
  1871   00FEEF  FF                 	db	255
  1872   00FEF0  FF                 	db	255
  1873   00FEF1  0F                 	db	15
  1874   00FEF2  0F                 	db	15
  1875   00FEF3  0F                 	db	15
  1876   00FEF4  0F                 	db	15
  1877   00FEF5  0F                 	db	15
  1878   00FEF6  0F                 	db	15
  1879   00FEF7  0F                 	db	15
  1880   00FEF8  0F                 	db	15
  1881   00FEF9  38                 	db	56
  1882   00FEFA  7C                 	db	124
  1883   00FEFB  44                 	db	68
  1884   00FEFC  6C                 	db	108
  1885   00FEFD  38                 	db	56
  1886   00FEFE  6C                 	db	108
  1887   00FEFF  44                 	db	68
  1888   00FF00  00                 	db	0
  1889   00FF01  FC                 	db	252
  1890   00FF02  FE                 	db	254
  1891   00FF03  2A                 	db	42
  1892   00FF04  2A                 	db	42
  1893   00FF05  3E                 	db	62
  1894   00FF06  14                 	db	20
  1895   00FF07  00                 	db	0
  1896   00FF08  00                 	db	0
  1897   00FF09  7E                 	db	126
  1898   00FF0A  7E                 	db	126
  1899   00FF0B  02                 	db	2
  1900   00FF0C  02                 	db	2
  1901   00FF0D  06                 	db	6
  1902   00FF0E  06                 	db	6
  1903   00FF0F  00                 	db	0
  1904   00FF10  00                 	db	0
  1905   00FF11  02                 	db	2
  1906   00FF12  7E                 	db	126
  1907   00FF13  7E                 	db	126
  1908   00FF14  02                 	db	2
  1909   00FF15  7E                 	db	126
  1910   00FF16  7E                 	db	126
  1911   00FF17  02                 	db	2
  1912   00FF18  00                 	db	0
  1913   00FF19  63                 	db	99
  1914   00FF1A  77                 	db	119
  1915   00FF1B  5D                 	db	93
  1916   00FF1C  49                 	db	73
  1917   00FF1D  63                 	db	99
  1918   00FF1E  63                 	db	99
  1919   00FF1F  00                 	db	0
  1920   00FF20  00                 	db	0
  1921   00FF21  38                 	db	56
  1922   00FF22  7C                 	db	124
  1923   00FF23  44                 	db	68
  1924   00FF24  7C                 	db	124
  1925   00FF25  3C                 	db	60
  1926   00FF26  04                 	db	4
  1927   00FF27  04                 	db	4
  1928   00FF28  00                 	db	0
  1929   00FF29  80                 	db	128
  1930   00FF2A  FE                 	db	254
  1931   00FF2B  7E                 	db	126
  1932   00FF2C  20                 	db	32
  1933   00FF2D  20                 	db	32
  1934   00FF2E  3E                 	db	62
  1935   00FF2F  1E                 	db	30
  1936   00FF30  00                 	db	0
  1937   00FF31  04                 	db	4
  1938   00FF32  06                 	db	6
  1939   00FF33  02                 	db	2
  1940   00FF34  7E                 	db	126
  1941   00FF35  7C                 	db	124
  1942   00FF36  06                 	db	6
  1943   00FF37  02                 	db	2
  1944   00FF38  00                 	db	0
  1945   00FF39  99                 	db	153
  1946   00FF3A  BD                 	db	189
  1947   00FF3B  E7                 	db	231
  1948   00FF3C  E7                 	db	231
  1949   00FF3D  BD                 	db	189
  1950   00FF3E  99                 	db	153
  1951   00FF3F  00                 	db	0
  1952   00FF40  00                 	db	0
  1953   00FF41  1C                 	db	28
  1954   00FF42  3E                 	db	62
  1955   00FF43  6B                 	db	107
  1956   00FF44  49                 	db	73
  1957   00FF45  6B                 	db	107
  1958   00FF46  3E                 	db	62
  1959   00FF47  1C                 	db	28
  1960   00FF48  00                 	db	0
  1961   00FF49  4C                 	db	76
  1962   00FF4A  7E                 	db	126
  1963   00FF4B  73                 	db	115
  1964   00FF4C  01                 	db	1
  1965   00FF4D  73                 	db	115
  1966   00FF4E  7E                 	db	126
  1967   00FF4F  4C                 	db	76
  1968   00FF50  00                 	db	0
  1969   00FF51  30                 	db	48
  1970   00FF52  78                 	db	120
  1971   00FF53  4A                 	db	74
  1972   00FF54  4F                 	db	79
  1973   00FF55  7D                 	db	125
  1974   00FF56  39                 	db	57
  1975   00FF57  00                 	db	0
  1976   00FF58  00                 	db	0
  1977   00FF59  18                 	db	24
  1978   00FF5A  3C                 	db	60
  1979   00FF5B  24                 	db	36
  1980   00FF5C  3C                 	db	60
  1981   00FF5D  3C                 	db	60
  1982   00FF5E  24                 	db	36
  1983   00FF5F  3C                 	db	60
  1984   00FF60  18                 	db	24
  1985   00FF61  98                 	db	152
  1986   00FF62  FC                 	db	252
  1987   00FF63  64                 	db	100
  1988   00FF64  3C                 	db	60
  1989   00FF65  3E                 	db	62
  1990   00FF66  27                 	db	39
  1991   00FF67  3D                 	db	61
  1992   00FF68  18                 	db	24
  1993   00FF69  1C                 	db	28
  1994   00FF6A  3E                 	db	62
  1995   00FF6B  6B                 	db	107
  1996   00FF6C  49                 	db	73
  1997   00FF6D  49                 	db	73
  1998   00FF6E  00                 	db	0
  1999   00FF6F  00                 	db	0
  2000   00FF70  00                 	db	0
  2001   00FF71  7E                 	db	126
  2002   00FF72  7F                 	db	127
  2003   00FF73  01                 	db	1
  2004   00FF74  01                 	db	1
  2005   00FF75  7F                 	db	127
  2006   00FF76  7E                 	db	126
  2007   00FF77  00                 	db	0
  2008   00FF78  00                 	db	0
  2009   00FF79  2A                 	db	42
  2010   00FF7A  2A                 	db	42
  2011   00FF7B  2A                 	db	42
  2012   00FF7C  2A                 	db	42
  2013   00FF7D  2A                 	db	42
  2014   00FF7E  2A                 	db	42
  2015   00FF7F  00                 	db	0
  2016   00FF80  00                 	db	0
  2017   00FF81  44                 	db	68
  2018   00FF82  44                 	db	68
  2019   00FF83  5F                 	db	95
  2020   00FF84  5F                 	db	95
  2021   00FF85  44                 	db	68
  2022   00FF86  44                 	db	68
  2023   00FF87  00                 	db	0
  2024   00FF88  00                 	db	0
  2025   00FF89  40                 	db	64
  2026   00FF8A  51                 	db	81
  2027   00FF8B  5B                 	db	91
  2028   00FF8C  4E                 	db	78
  2029   00FF8D  44                 	db	68
  2030   00FF8E  40                 	db	64
  2031   00FF8F  00                 	db	0
  2032   00FF90  00                 	db	0
  2033   00FF91  40                 	db	64
  2034   00FF92  44                 	db	68
  2035   00FF93  4E                 	db	78
  2036   00FF94  5B                 	db	91
  2037   00FF95  51                 	db	81
  2038   00FF96  40                 	db	64
  2039   00FF97  00                 	db	0
  2040   00FF98  00                 	db	0
  2041   00FF99  00                 	db	0
  2042   00FF9A  00                 	db	0
  2043   00FF9B  00                 	db	0
  2044   00FF9C  FE                 	db	254
  2045   00FF9D  FF                 	db	255
  2046   00FF9E  01                 	db	1
  2047   00FF9F  07                 	db	7
  2048   00FFA0  06                 	db	6
  2049   00FFA1  60                 	db	96
  2050   00FFA2  E0                 	db	224
  2051   00FFA3  80                 	db	128
  2052   00FFA4  FF                 	db	255
  2053   00FFA5  7F                 	db	127
  2054   00FFA6  00                 	db	0
  2055   00FFA7  00                 	db	0
  2056   00FFA8  00                 	db	0
  2057   00FFA9  08                 	db	8
  2058   00FFAA  08                 	db	8
  2059   00FFAB  6B                 	db	107
  2060   00FFAC  6B                 	db	107
  2061   00FFAD  08                 	db	8
  2062   00FFAE  08                 	db	8
  2063   00FFAF  00                 	db	0
  2064   00FFB0  00                 	db	0
  2065   00FFB1  24                 	db	36
  2066   00FFB2  36                 	db	54
  2067   00FFB3  12                 	db	18
  2068   00FFB4  36                 	db	54
  2069   00FFB5  24                 	db	36
  2070   00FFB6  36                 	db	54
  2071   00FFB7  12                 	db	18
  2072   00FFB8  00                 	db	0
  2073   00FFB9  00                 	db	0
  2074   00FFBA  06                 	db	6
  2075   00FFBB  0F                 	db	15
  2076   00FFBC  09                 	db	9
  2077   00FFBD  0F                 	db	15
  2078   00FFBE  06                 	db	6
  2079   00FFBF  00                 	db	0
  2080   00FFC0  00                 	db	0
  2081   00FFC1  00                 	db	0
  2082   00FFC2  00                 	db	0
  2083   00FFC3  00                 	db	0
  2084   00FFC4  18                 	db	24
  2085   00FFC5  18                 	db	24
  2086   00FFC6  00                 	db	0
  2087   00FFC7  00                 	db	0
  2088   00FFC8  00                 	db	0
  2089   00FFC9  00                 	db	0
  2090   00FFCA  00                 	db	0
  2091   00FFCB  00                 	db	0
  2092   00FFCC  10                 	db	16
  2093   00FFCD  10                 	db	16
  2094   00FFCE  00                 	db	0
  2095   00FFCF  00                 	db	0
  2096   00FFD0  00                 	db	0
  2097   00FFD1  10                 	db	16
  2098   00FFD2  30                 	db	48
  2099   00FFD3  70                 	db	112
  2100   00FFD4  C0                 	db	192
  2101   00FFD5  FF                 	db	255
  2102   00FFD6  FF                 	db	255
  2103   00FFD7  01                 	db	1
  2104   00FFD8  01                 	db	1
  2105   00FFD9  00                 	db	0
  2106   00FFDA  1F                 	db	31
  2107   00FFDB  1F                 	db	31
  2108   00FFDC  01                 	db	1
  2109   00FFDD  1F                 	db	31
  2110   00FFDE  1E                 	db	30
  2111   00FFDF  00                 	db	0
  2112   00FFE0  00                 	db	0
  2113   00FFE1  00                 	db	0
  2114   00FFE2  19                 	db	25
  2115   00FFE3  1D                 	db	29
  2116   00FFE4  17                 	db	23
  2117   00FFE5  12                 	db	18
  2118   00FFE6  00                 	db	0
  2119   00FFE7  00                 	db	0
  2120   00FFE8  00                 	db	0
  2121   00FFE9  00                 	db	0
  2122   00FFEA  00                 	db	0
  2123   00FFEB  3C                 	db	60
  2124   00FFEC  3C                 	db	60
  2125   00FFED  3C                 	db	60
  2126   00FFEE  3C                 	db	60
  2127   00FFEF  00                 	db	0
  2128   00FFF0  00                 	db	0
  2129   00FFF1  00                 	db	0
  2130   00FFF2  00                 	db	0
  2131   00FFF3  00                 	db	0
  2132   00FFF4  00                 	db	0
  2133   00FFF5  00                 	db	0
  2134   00FFF6  00                 	db	0
  2135   00FFF7  00                 	db	0
  2136   00FFF8  00                 	db	0
  2137   00FFF9                     __end_of_MAX7219_Dot_Matrix_font:
  2138                           	callstack 0
  2139   000000                     _EEDATA	set	4008
  2140   000000                     _EEADR	set	4009
  2141   000000                     _EEADRH	set	4010
  2142   000000                     _EECON2	set	4007
  2143   000000                     _T2CON	set	4042
  2144   000000                     _PR2	set	4043
  2145   000000                     _TXREG	set	4013
  2146   000000                     _RCREG	set	4014
  2147   000000                     _SPBRG	set	4015
  2148   000000                     _TXSTA	set	4012
  2149   000000                     _OSCCON	set	4051
  2150   000000                     _SSPBUF	set	4041
  2151   000000                     _SSPADD	set	4040
  2152   000000                     _T2CONbits	set	4042
  2153   000000                     _T0CONbits	set	4053
  2154   000000                     _RCSTAbits	set	4011
  2155   000000                     _TXSTAbits	set	4012
  2156   000000                     _LATCbits	set	3979
  2157   000000                     _SSPSTATbits	set	4039
  2158   000000                     _SSPCON1bits	set	4038
  2159   000000                     _WPUB	set	3964
  2160   000000                     _ANSEL	set	3966
  2161   000000                     _ANSELH	set	3967
  2162   000000                     _PORTBbits	set	3969
  2163   000000                     _OSCTUNE	set	3995
  2164   000000                     _SSPCON1	set	4038
  2165   000000                     _SSPSTAT	set	4039
  2166   000000                     _T0CON	set	4053
  2167   000000                     _TMR0L	set	4054
  2168   000000                     _TMR0H	set	4055
  2169   000000                     _INTCON2bits	set	4081
  2170   000000                     _INTCONbits	set	4082
  2171   000000                     _PIR1bits	set	3998
  2172   000000                     _RCSTA	set	4011
  2173   000000                     _BAUDCON	set	4024
  2174   000000                     _TABLAT	set	4085
  2175   000000                     _TBLPTRL	set	4086
  2176   000000                     _TBLPTRH	set	4087
  2177   000000                     _TBLPTRU	set	4088
  2178   000000                     _LATA	set	3977
  2179   000000                     _TRISA	set	3986
  2180   000000                     _LATC	set	3979
  2181   000000                     _LATB	set	3978
  2182   000000                     _TRISC	set	3988
  2183   000000                     _TRISB	set	3987
  2184   000000                     _CCP2CON	set	4026
  2185   000000                     _SPBRGH	set	4016
  2186   000000                     _PIR2bits	set	4001
  2187   000000                     _EECON1bits	set	4006
  2188   000000                     _TMR2	set	4044
  2189   000000                     _CCPR2H	set	4028
  2190   000000                     _CCPR2L	set	4027
  2191   00FFF9                     STR_1:
  2192   00FFF9  41                 	db	65	;'A'
  2193   00FFFA  4C                 	db	76	;'L'
  2194   00FFFB  41                 	db	65	;'A'
  2195   00FFFC  52                 	db	82	;'R'
  2196   00FFFD  4D                 	db	77	;'M'
  2197   00FFFE  00                 	db	0
  2198   00FFFF  00                 	db	0	; dummy byte at the end
  2199   000000                     
  2200                           ; #config settings
  2201                           
  2202                           	psect	cinit
  2203   00EA86                     __pcinit:
  2204                           	callstack 0
  2205   00EA86                     start_initialization:
  2206                           	callstack 0
  2207   00EA86                     __initialization:
  2208                           	callstack 0
  2209                           
  2210                           ; Clear objects allocated to BANK0 (80 bytes)
  2211   00EA86  EE00  F060         	lfsr	0,__pbssBANK0
  2212   00EA8A  0E50               	movlw	80
  2213   00EA8C                     clear_0:
  2214   00EA8C  6AEE               	clrf	postinc0,c
  2215   00EA8E  06E8               	decf	wreg,f,c
  2216   00EA90  E1FD               	bnz	clear_0
  2217                           
  2218                           ; Clear objects allocated to COMRAM (4 bytes)
  2219   00EA92  6A5F               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2220   00EA94  6A5E               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2221   00EA96  6A5D               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2222   00EA98  6A5C               	clrf	__pbssCOMRAM& (0+255),c
  2223   00EA9A                     end_of_initialization:
  2224                           	callstack 0
  2225   00EA9A                     __end_of__initialization:
  2226                           	callstack 0
  2227   00EA9A  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2228   00EA9C  6EF8               	movwf	tblptru,c
  2229   00EA9E  0100               	movlb	0
  2230   00EAA0  EF7A  F076         	goto	_main	;jump to C main() function
  2231                           
  2232                           	psect	bssCOMRAM
  2233   00005C                     __pbssCOMRAM:
  2234                           	callstack 0
  2235   00005C                     checkButtons@alarmSettingMode:
  2236                           	callstack 0
  2237   00005C                     	ds	1
  2238   00005D                     _alarmTriggered:
  2239                           	callstack 0
  2240   00005D                     	ds	1
  2241   00005E                     _minutes:
  2242                           	callstack 0
  2243   00005E                     	ds	1
  2244   00005F                     _hours:
  2245                           	callstack 0
  2246   00005F                     	ds	1
  2247                           
  2248                           	psect	bssBANK0
  2249   000060                     __pbssBANK0:
  2250                           	callstack 0
  2251   000060                     	ds	32
  2252   000080                     _bufferCol:
  2253                           	callstack 0
  2254   000080                     	ds	32
  2255   0000A0                     _timer0ReloadVal:
  2256                           	callstack 0
  2257   0000A0                     	ds	2
  2258   0000A2                     checkButtons@button3HoldTime:
  2259                           	callstack 0
  2260   0000A2                     	ds	2
  2261   0000A4                     _button3PressTime:
  2262                           	callstack 0
  2263   0000A4                     	ds	2
  2264   0000A6                     _blinkTimer:
  2265                           	callstack 0
  2266   0000A6                     	ds	2
  2267   0000A8                     checkButtons@button3PressCount:
  2268                           	callstack 0
  2269   0000A8                     	ds	1
  2270   0000A9                     _isButton3Pressed:
  2271                           	callstack 0
  2272   0000A9                     	ds	1
  2273   0000AA                     _displayBlinking:
  2274                           	callstack 0
  2275   0000AA                     	ds	1
  2276   0000AB                     _alarmActive:
  2277                           	callstack 0
  2278   0000AB                     	ds	1
  2279   0000AC                     _alarmSet:
  2280                           	callstack 0
  2281   0000AC                     	ds	1
  2282   0000AD                     _alarmMinutes:
  2283                           	callstack 0
  2284   0000AD                     	ds	1
  2285   0000AE                     _alarmHours:
  2286                           	callstack 0
  2287   0000AE                     	ds	1
  2288   0000AF                     _seconds:
  2289                           	callstack 0
  2290   0000AF                     	ds	1
  2291                           
  2292                           	psect	cstackBANK0
  2293   0000B0                     __pcstackBANK0:
  2294                           	callstack 0
  2295   0000B0                     displayTime@displayString:
  2296                           	callstack 0
  2297   0000B0                     displayAlarmTime@displayString:
  2298                           	callstack 0
  2299                           
  2300                           ; 5 bytes @ 0x0
  2301   0000B0                     	ds	5
  2302   0000B5                     displayTime@timeString:
  2303                           	callstack 0
  2304   0000B5                     displayAlarmTime@alarmTimeString:
  2305                           	callstack 0
  2306                           
  2307                           ; 5 bytes @ 0x5
  2308   0000B5                     	ds	5
  2309   0000BA                     displayTime@i:
  2310                           	callstack 0
  2311   0000BA                     displayAlarmTime@i:
  2312                           	callstack 0
  2313                           
  2314                           ; 2 bytes @ 0xA
  2315   0000BA                     	ds	2
  2316                           
  2317                           	psect	cstackCOMRAM
  2318   000001                     __pcstackCOMRAM:
  2319                           	callstack 0
  2320   000001                     ??_TMR0_Initialize:
  2321   000001                     ?___awdiv:
  2322                           	callstack 0
  2323   000001                     ?___awmod:
  2324                           	callstack 0
  2325   000001                     SPI_Exchange8bit@data:
  2326                           	callstack 0
  2327   000001                     ___awdiv@dividend:
  2328                           	callstack 0
  2329   000001                     ___awmod@dividend:
  2330                           	callstack 0
  2331   000001                     FLASH_ReadByte@flashAddr:
  2332                           	callstack 0
  2333   000001                     FLASH_EraseBlock@baseAddr:
  2334                           	callstack 0
  2335                           
  2336                           ; 4 bytes @ 0x0
  2337   000001                     	ds	1
  2338   000002                     max7219_cmd@data:
  2339                           	callstack 0
  2340                           
  2341                           ; 1 bytes @ 0x1
  2342   000002                     	ds	1
  2343   000003                     ??_max7219_cmd:
  2344   000003                     ___awdiv@divisor:
  2345                           	callstack 0
  2346   000003                     ___awmod@divisor:
  2347                           	callstack 0
  2348                           
  2349                           ; 2 bytes @ 0x2
  2350   000003                     	ds	2
  2351   000005                     max7219_cmd@Addr:
  2352                           	callstack 0
  2353   000005                     FLASH_EraseBlock@GIEBitValue:
  2354                           	callstack 0
  2355   000005                     ___awdiv@counter:
  2356                           	callstack 0
  2357   000005                     ___awmod@counter:
  2358                           	callstack 0
  2359                           
  2360                           ; 1 bytes @ 0x4
  2361   000005                     	ds	1
  2362   000006                     ___awdiv@sign:
  2363                           	callstack 0
  2364   000006                     ___awmod@sign:
  2365                           	callstack 0
  2366   000006                     max7219_cmd@writeData:
  2367                           	callstack 0
  2368   000006                     FLASH_WriteBlock@writeAddr:
  2369                           	callstack 0
  2370                           
  2371                           ; 4 bytes @ 0x5
  2372   000006                     	ds	1
  2373   000007                     ___awdiv@quotient:
  2374                           	callstack 0
  2375                           
  2376                           ; 2 bytes @ 0x6
  2377   000007                     	ds	1
  2378   000008                     max7219_cmd@i:
  2379                           	callstack 0
  2380                           
  2381                           ; 2 bytes @ 0x7
  2382   000008                     	ds	1
  2383   000009                     max_write@row:
  2384                           	callstack 0
  2385                           
  2386                           ; 2 bytes @ 0x8
  2387   000009                     	ds	1
  2388   00000A                     FLASH_WriteBlock@flashWrBufPtr:
  2389                           	callstack 0
  2390                           
  2391                           ; 1 bytes @ 0x9
  2392   00000A                     	ds	1
  2393   00000B                     max_write@data:
  2394                           	callstack 0
  2395   00000B                     FLASH_WriteBlock@blockStartAddr:
  2396                           	callstack 0
  2397                           
  2398                           ; 4 bytes @ 0xA
  2399   00000B                     	ds	1
  2400   00000C                     ??_max_write:
  2401                           
  2402                           ; 1 bytes @ 0xB
  2403   00000C                     	ds	2
  2404   00000E                     max_write@offset:
  2405                           	callstack 0
  2406                           
  2407                           ; 2 bytes @ 0xD
  2408   00000E                     	ds	1
  2409   00000F                     FLASH_WriteBlock@GIEBitValue:
  2410                           	callstack 0
  2411                           
  2412                           ; 1 bytes @ 0xE
  2413   00000F                     	ds	1
  2414   000010                     FLASH_WriteBlock@j:
  2415                           	callstack 0
  2416   000010                     max_write@devTarget:
  2417                           	callstack 0
  2418                           
  2419                           ; 2 bytes @ 0xF
  2420   000010                     	ds	1
  2421   000011                     FLASH_WriteBlock@numberOfWriteBlocks:
  2422                           	callstack 0
  2423                           
  2424                           ; 1 bytes @ 0x10
  2425   000011                     	ds	1
  2426   000012                     FLASH_WriteBlock@dataCounter:
  2427                           	callstack 0
  2428   000012                     max_write@dev:
  2429                           	callstack 0
  2430                           
  2431                           ; 2 bytes @ 0x11
  2432   000012                     	ds	1
  2433   000013                     FLASH_WriteBlock@i:
  2434                           	callstack 0
  2435                           
  2436                           ; 1 bytes @ 0x12
  2437   000013                     	ds	1
  2438   000014                     max_write@writeData:
  2439                           	callstack 0
  2440   000014                     saveTimeToFlash@flashBuffer:
  2441                           	callstack 0
  2442                           
  2443                           ; 64 bytes @ 0x13
  2444   000014                     	ds	2
  2445   000016                     ??_flushBuffer:
  2446                           
  2447                           ; 1 bytes @ 0x15
  2448   000016                     	ds	3
  2449   000019                     flushBuffer@bufferRow:
  2450                           	callstack 0
  2451                           
  2452                           ; 32 bytes @ 0x18
  2453   000019                     	ds	32
  2454   000039                     flushBuffer@dev:
  2455                           	callstack 0
  2456                           
  2457                           ; 2 bytes @ 0x38
  2458   000039                     	ds	2
  2459   00003B                     flushBuffer@j:
  2460                           	callstack 0
  2461                           
  2462                           ; 2 bytes @ 0x3A
  2463   00003B                     	ds	2
  2464   00003D                     flushBuffer@row:
  2465                           	callstack 0
  2466                           
  2467                           ; 2 bytes @ 0x3C
  2468   00003D                     	ds	2
  2469   00003F                     flushBuffer@i:
  2470                           	callstack 0
  2471                           
  2472                           ; 2 bytes @ 0x3E
  2473   00003F                     	ds	2
  2474   000041                     clearDisplay@i:
  2475                           	callstack 0
  2476   000041                     printString@str:
  2477                           	callstack 0
  2478                           
  2479                           ; 2 bytes @ 0x40
  2480   000041                     	ds	2
  2481   000043                     ??_printString:
  2482                           
  2483                           ; 1 bytes @ 0x42
  2484   000043                     	ds	8
  2485   00004B                     printString@indx:
  2486                           	callstack 0
  2487                           
  2488                           ; 2 bytes @ 0x4A
  2489   00004B                     	ds	2
  2490   00004D                     printString@data:
  2491                           	callstack 0
  2492                           
  2493                           ; 1 bytes @ 0x4C
  2494   00004D                     	ds	1
  2495   00004E                     printString@strindx:
  2496                           	callstack 0
  2497                           
  2498                           ; 2 bytes @ 0x4D
  2499   00004E                     	ds	2
  2500   000050                     printString@i:
  2501                           	callstack 0
  2502                           
  2503                           ; 2 bytes @ 0x4F
  2504   000050                     	ds	2
  2505   000052                     printString@k:
  2506                           	callstack 0
  2507                           
  2508                           ; 2 bytes @ 0x51
  2509   000052                     	ds	2
  2510   000054                     printString@j:
  2511                           	callstack 0
  2512   000054                     saveTimeToFlash@flashAddress:
  2513                           	callstack 0
  2514                           
  2515                           ; 4 bytes @ 0x53
  2516   000054                     	ds	2
  2517   000056                     ??_triggerAlarm:
  2518   000056                     
  2519                           ; 1 bytes @ 0x55
  2520   000056                     	ds	2
  2521   000058                     saveTimeToFlash@i:
  2522                           	callstack 0
  2523   000058                     triggerAlarm@numCycles:
  2524                           	callstack 0
  2525                           
  2526                           ; 2 bytes @ 0x57
  2527   000058                     	ds	1
  2528   000059                     ??_checkButtons:
  2529                           
  2530                           ; 1 bytes @ 0x58
  2531   000059                     	ds	1
  2532   00005A                     triggerAlarm@i:
  2533                           	callstack 0
  2534                           
  2535                           ; 2 bytes @ 0x59
  2536   00005A                     	ds	2
  2537   00005C                     
  2538                           ; 1 bytes @ 0x5B
  2539 ;;
  2540 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2541 ;;
  2542 ;; *************** function _main *****************
  2543 ;; Defined at:
  2544 ;;		line 46 in file "main.c"
  2545 ;; Parameters:    Size  Location     Type
  2546 ;;		None
  2547 ;; Auto vars:     Size  Location     Type
  2548 ;;		None
  2549 ;; Return value:  Size  Location     Type
  2550 ;;                  1    wreg      void 
  2551 ;; Registers used:
  2552 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2553 ;; Tracked objects:
  2554 ;;		On entry : 0/0
  2555 ;;		On exit  : 0/0
  2556 ;;		Unchanged: 0/0
  2557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2558 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2559 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;Total ram usage:        0 bytes
  2563 ;; Hardware stack levels required when called: 6
  2564 ;; This function calls:
  2565 ;;		_SYSTEM_Initialize
  2566 ;;		_TMR0_HasOverflowOccured
  2567 ;;		_TMR0_Reload
  2568 ;;		_TMR0_StartTimer
  2569 ;;		_checkButtons
  2570 ;;		_clearDisplay
  2571 ;;		_displayTime
  2572 ;;		_loadTimeFromFlash
  2573 ;;		_matrixInit
  2574 ;;		_processAlarm
  2575 ;; This function is called by:
  2576 ;;		Startup code after reset
  2577 ;; This function uses a non-reentrant model
  2578 ;;
  2579                           
  2580                           	psect	text0
  2581   00ECF4                     __ptext0:
  2582                           	callstack 0
  2583   00ECF4                     _main:
  2584                           	callstack 25
  2585   00ECF4                     
  2586                           ;main.c: 48:     SYSTEM_Initialize();
  2587   00ECF4  EC34  F075         	call	_SYSTEM_Initialize	;wreg free
  2588                           
  2589                           ;main.c: 49:     matrixInit();
  2590   00ECF8  EC91  F075         	call	_matrixInit	;wreg free
  2591   00ECFC                     
  2592                           ;main.c: 50:     clearDisplay();
  2593   00ECFC  ECAB  F075         	call	_clearDisplay	;wreg free
  2594   00ED00                     
  2595                           ;main.c: 51:     loadTimeFromFlash();
  2596   00ED00  EC18  F076         	call	_loadTimeFromFlash	;wreg free
  2597   00ED04                     
  2598                           ;main.c: 53:     TMR0_StartTimer();
  2599   00ED04  ECDF  F074         	call	_TMR0_StartTimer	;wreg free
  2600   00ED08                     l2626:
  2601                           
  2602                           ;main.c: 56:     {;main.c: 57:         if(TMR0_HasOverflowOccured())
  2603   00ED08  EC12  F075         	call	_TMR0_HasOverflowOccured	;wreg free
  2604   00ED0C  0900               	iorlw	0
  2605   00ED0E  B4D8               	btfsc	status,2,c
  2606   00ED10  EF8C  F076         	goto	u1781
  2607   00ED14  EF8E  F076         	goto	u1780
  2608   00ED18                     u1781:
  2609   00ED18  EFB7  F076         	goto	l2652
  2610   00ED1C                     u1780:
  2611   00ED1C                     
  2612                           ;main.c: 58:         {;main.c: 59:             displayTime();
  2613   00ED1C  ECC8  F077         	call	_displayTime	;wreg free
  2614   00ED20                     
  2615                           ;main.c: 61:             seconds++;
  2616   00ED20  0100               	movlb	0	; () banked
  2617   00ED22  2BAF               	incf	_seconds& (0+255),f,b
  2618   00ED24                     
  2619                           ; BSR set to: 0
  2620                           ;main.c: 62:             if (seconds >= 60) {
  2621   00ED24  0E3B               	movlw	59
  2622   00ED26  65AF               	cpfsgt	_seconds& (0+255),b
  2623   00ED28  EF98  F076         	goto	u1791
  2624   00ED2C  EF9A  F076         	goto	u1790
  2625   00ED30                     u1791:
  2626   00ED30  EFB2  F076         	goto	l2648
  2627   00ED34                     u1790:
  2628   00ED34                     
  2629                           ; BSR set to: 0
  2630                           ;main.c: 63:                 seconds = 0;
  2631   00ED34  0E00               	movlw	0
  2632   00ED36  6FAF               	movwf	_seconds& (0+255),b
  2633   00ED38                     
  2634                           ; BSR set to: 0
  2635                           ;main.c: 64:                 minutes++;
  2636   00ED38  2A5E               	incf	_minutes^0,f,c
  2637   00ED3A                     
  2638                           ; BSR set to: 0
  2639                           ;main.c: 65:                 if (minutes >= 60) {
  2640   00ED3A  0E3B               	movlw	59
  2641   00ED3C  645E               	cpfsgt	_minutes^0,c
  2642   00ED3E  EFA3  F076         	goto	u1801
  2643   00ED42  EFA5  F076         	goto	u1800
  2644   00ED46                     u1801:
  2645   00ED46  EFB2  F076         	goto	l2648
  2646   00ED4A                     u1800:
  2647   00ED4A                     
  2648                           ; BSR set to: 0
  2649                           ;main.c: 66:                     minutes = 0;
  2650   00ED4A  0E00               	movlw	0
  2651   00ED4C  6E5E               	movwf	_minutes^0,c
  2652   00ED4E                     
  2653                           ; BSR set to: 0
  2654                           ;main.c: 67:                     hours++;
  2655   00ED4E  2A5F               	incf	_hours^0,f,c
  2656   00ED50                     
  2657                           ; BSR set to: 0
  2658                           ;main.c: 68:                     if (hours >= 24) {
  2659   00ED50  0E17               	movlw	23
  2660   00ED52  645F               	cpfsgt	_hours^0,c
  2661   00ED54  EFAE  F076         	goto	u1811
  2662   00ED58  EFB0  F076         	goto	u1810
  2663   00ED5C                     u1811:
  2664   00ED5C  EFB2  F076         	goto	l2648
  2665   00ED60                     u1810:
  2666   00ED60                     
  2667                           ; BSR set to: 0
  2668                           ;main.c: 69:                         hours = 0;
  2669   00ED60  0E00               	movlw	0
  2670   00ED62  6E5F               	movwf	_hours^0,c
  2671   00ED64                     l2648:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;main.c: 73:             TMR0_Reload();
  2675   00ED64  ECE6  F074         	call	_TMR0_Reload	;wreg free
  2676   00ED68                     
  2677                           ;main.c: 74:             INTCONbits.TMR0IF = 0;
  2678   00ED68  94F2               	bcf	242,2,c	;volatile
  2679                           
  2680                           ;main.c: 75:             TMR0_StartTimer();
  2681   00ED6A  ECDF  F074         	call	_TMR0_StartTimer	;wreg free
  2682   00ED6E                     l2652:
  2683                           
  2684                           ;main.c: 77:         displayTime();
  2685   00ED6E  ECC8  F077         	call	_displayTime	;wreg free
  2686   00ED72                     
  2687                           ;main.c: 78:         checkButtons();
  2688   00ED72  ECB3  F07A         	call	_checkButtons	;wreg free
  2689   00ED76                     
  2690                           ;main.c: 79:         processAlarm();
  2691   00ED76  ECC7  F075         	call	_processAlarm	;wreg free
  2692   00ED7A  EF84  F076         	goto	l2626
  2693   00ED7E  EF00  F000         	goto	start
  2694   00ED82                     __end_of_main:
  2695                           	callstack 0
  2696                           
  2697 ;; *************** function _processAlarm *****************
  2698 ;; Defined at:
  2699 ;;		line 124 in file "main.c"
  2700 ;; Parameters:    Size  Location     Type
  2701 ;;		None
  2702 ;; Auto vars:     Size  Location     Type
  2703 ;;		None
  2704 ;; Return value:  Size  Location     Type
  2705 ;;                  1    wreg      void 
  2706 ;; Registers used:
  2707 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2708 ;; Tracked objects:
  2709 ;;		On entry : 0/0
  2710 ;;		On exit  : 0/0
  2711 ;;		Unchanged: 0/0
  2712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2714 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2715 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2716 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2717 ;;Total ram usage:        0 bytes
  2718 ;; Hardware stack levels used: 1
  2719 ;; Hardware stack levels required when called: 5
  2720 ;; This function calls:
  2721 ;;		_triggerAlarm
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text1
  2728   00EB8E                     __ptext1:
  2729                           	callstack 0
  2730   00EB8E                     _processAlarm:
  2731                           	callstack 25
  2732   00EB8E                     
  2733                           ;main.c: 127:     if (alarmSet && !alarmTriggered)
  2734   00EB8E  0100               	movlb	0	; () banked
  2735   00EB90  51AC               	movf	_alarmSet& (0+255),w,b
  2736   00EB92  B4D8               	btfsc	status,2,c
  2737   00EB94  EFCE  F075         	goto	u1631
  2738   00EB98  EFD0  F075         	goto	u1630
  2739   00EB9C                     u1631:
  2740   00EB9C  EFEE  F075         	goto	l158
  2741   00EBA0                     u1630:
  2742   00EBA0                     
  2743                           ; BSR set to: 0
  2744   00EBA0  505D               	movf	_alarmTriggered^0,w,c
  2745   00EBA2  A4D8               	btfss	status,2,c
  2746   00EBA4  EFD6  F075         	goto	u1641
  2747   00EBA8  EFD8  F075         	goto	u1640
  2748   00EBAC                     u1641:
  2749   00EBAC  EFEE  F075         	goto	l158
  2750   00EBB0                     u1640:
  2751   00EBB0                     
  2752                           ; BSR set to: 0
  2753                           ;main.c: 128:     {;main.c: 130:         if (hours == alarmHours && minutes == alarmMinu
      +                          tes)
  2754   00EBB0  51AE               	movf	_alarmHours& (0+255),w,b
  2755   00EBB2  185F               	xorwf	_hours^0,w,c
  2756   00EBB4  A4D8               	btfss	status,2,c
  2757   00EBB6  EFDF  F075         	goto	u1651
  2758   00EBBA  EFE1  F075         	goto	u1650
  2759   00EBBE                     u1651:
  2760   00EBBE  EFEE  F075         	goto	l158
  2761   00EBC2                     u1650:
  2762   00EBC2                     
  2763                           ; BSR set to: 0
  2764   00EBC2  51AD               	movf	_alarmMinutes& (0+255),w,b
  2765   00EBC4  185E               	xorwf	_minutes^0,w,c
  2766   00EBC6  A4D8               	btfss	status,2,c
  2767   00EBC8  EFE8  F075         	goto	u1661
  2768   00EBCC  EFEA  F075         	goto	u1660
  2769   00EBD0                     u1661:
  2770   00EBD0  EFEE  F075         	goto	l158
  2771   00EBD4                     u1660:
  2772   00EBD4                     
  2773                           ; BSR set to: 0
  2774                           ;main.c: 131:         {;main.c: 132:             triggerAlarm();
  2775   00EBD4  ECC1  F076         	call	_triggerAlarm	;wreg free
  2776   00EBD8                     
  2777                           ;main.c: 133:             alarmTriggered = 1;
  2778   00EBD8  0E01               	movlw	1
  2779   00EBDA  6E5D               	movwf	_alarmTriggered^0,c
  2780   00EBDC                     l158:
  2781   00EBDC  0012               	return		;funcret
  2782   00EBDE                     __end_of_processAlarm:
  2783                           	callstack 0
  2784                           
  2785 ;; *************** function _triggerAlarm *****************
  2786 ;; Defined at:
  2787 ;;		line 139 in file "main.c"
  2788 ;; Parameters:    Size  Location     Type
  2789 ;;		None
  2790 ;; Auto vars:     Size  Location     Type
  2791 ;;  i               2   89[COMRAM] unsigned int 
  2792 ;;  numCycles       2   87[COMRAM] unsigned int 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;                  1    wreg      void 
  2795 ;; Registers used:
  2796 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;Total ram usage:        6 bytes
  2807 ;; Hardware stack levels used: 1
  2808 ;; Hardware stack levels required when called: 4
  2809 ;; This function calls:
  2810 ;;		_clearDisplay
  2811 ;;		_printString
  2812 ;; This function is called by:
  2813 ;;		_processAlarm
  2814 ;; This function uses a non-reentrant model
  2815 ;;
  2816                           
  2817                           	psect	text2
  2818   00ED82                     __ptext2:
  2819                           	callstack 0
  2820   00ED82                     _triggerAlarm:
  2821                           	callstack 25
  2822   00ED82                     
  2823                           ;main.c: 146:     unsigned int numCycles = 60000 / (2 * 500);
  2824   00ED82  0E00               	movlw	0
  2825   00ED84  6E59               	movwf	(triggerAlarm@numCycles+1)^0,c
  2826   00ED86  0E3C               	movlw	60
  2827   00ED88  6E58               	movwf	triggerAlarm@numCycles^0,c
  2828                           
  2829                           ;main.c: 148:     for (unsigned int i = 0; i < numCycles; i++)
  2830   00ED8A  0E00               	movlw	0
  2831   00ED8C  6E5B               	movwf	(triggerAlarm@i+1)^0,c
  2832   00ED8E  0E00               	movlw	0
  2833   00ED90  6E5A               	movwf	triggerAlarm@i^0,c
  2834   00ED92  EF0A  F077         	goto	l2380
  2835   00ED96                     l162:
  2836                           
  2837                           ;main.c: 149:     {;main.c: 151:         if (!PORTBbits.RB2)
  2838   00ED96  B481               	btfsc	129,2,c	;volatile
  2839   00ED98  EFD0  F076         	goto	u1381
  2840   00ED9C  EFD2  F076         	goto	u1380
  2841   00EDA0                     u1381:
  2842   00EDA0  EFEA  F076         	goto	l2370
  2843   00EDA4                     u1380:
  2844   00EDA4                     
  2845                           ;main.c: 152:         {;main.c: 153:             _delay((unsigned long)((100)*(8000000/4
      +                          000.0)));
  2846   00EDA4  0E02               	movlw	2
  2847   00EDA6  6E57               	movwf	(??_triggerAlarm+1)^0,c
  2848   00EDA8  0E04               	movlw	4
  2849   00EDAA  6E56               	movwf	??_triggerAlarm^0,c
  2850   00EDAC  0EBA               	movlw	186
  2851   00EDAE                     u1847:
  2852   00EDAE  2EE8               	decfsz	wreg,f,c
  2853   00EDB0  D7FE               	bra	u1847
  2854   00EDB2  2E56               	decfsz	??_triggerAlarm^0,f,c
  2855   00EDB4  D7FC               	bra	u1847
  2856   00EDB6  2E57               	decfsz	(??_triggerAlarm+1)^0,f,c
  2857   00EDB8  D7FA               	bra	u1847
  2858   00EDBA  F000 F000          	nop2	
  2859   00EDBE                     
  2860                           ;main.c: 154:             if (!PORTBbits.RB2)
  2861   00EDBE  B481               	btfsc	129,2,c	;volatile
  2862   00EDC0  EFE4  F076         	goto	u1391
  2863   00EDC4  EFE6  F076         	goto	u1390
  2864   00EDC8                     u1391:
  2865   00EDC8  EFEA  F076         	goto	l2370
  2866   00EDCC                     u1390:
  2867   00EDCC                     
  2868                           ;main.c: 155:             {;main.c: 156:                 clearDisplay();
  2869   00EDCC  ECAB  F075         	call	_clearDisplay	;wreg free
  2870   00EDD0  EF15  F077         	goto	l165
  2871   00EDD4                     l2370:
  2872                           
  2873                           ;main.c: 162:         printString("ALARM");
  2874   00EDD4  0EF9               	movlw	low STR_1
  2875   00EDD6  6E41               	movwf	printString@str^0,c
  2876   00EDD8  0EFF               	movlw	high STR_1
  2877   00EDDA  6E42               	movwf	(printString@str+1)^0,c
  2878   00EDDC  ECF0  F079         	call	_printString	;wreg free
  2879   00EDE0                     
  2880                           ;main.c: 163:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2881   00EDE0  0E06               	movlw	6
  2882   00EDE2  6E57               	movwf	(??_triggerAlarm+1)^0,c
  2883   00EDE4  0E13               	movlw	19
  2884   00EDE6  6E56               	movwf	??_triggerAlarm^0,c
  2885   00EDE8  0EAE               	movlw	174
  2886   00EDEA                     u1857:
  2887   00EDEA  2EE8               	decfsz	wreg,f,c
  2888   00EDEC  D7FE               	bra	u1857
  2889   00EDEE  2E56               	decfsz	??_triggerAlarm^0,f,c
  2890   00EDF0  D7FC               	bra	u1857
  2891   00EDF2  2E57               	decfsz	(??_triggerAlarm+1)^0,f,c
  2892   00EDF4  D7FA               	bra	u1857
  2893   00EDF6                     
  2894                           ;main.c: 164:         clearDisplay();
  2895   00EDF6  ECAB  F075         	call	_clearDisplay	;wreg free
  2896   00EDFA                     
  2897                           ;main.c: 165:         _delay((unsigned long)((500)*(8000000/4000.0)));
  2898   00EDFA  0E06               	movlw	6
  2899   00EDFC  6E57               	movwf	(??_triggerAlarm+1)^0,c
  2900   00EDFE  0E13               	movlw	19
  2901   00EE00  6E56               	movwf	??_triggerAlarm^0,c
  2902   00EE02  0EAE               	movlw	174
  2903   00EE04                     u1867:
  2904   00EE04  2EE8               	decfsz	wreg,f,c
  2905   00EE06  D7FE               	bra	u1867
  2906   00EE08  2E56               	decfsz	??_triggerAlarm^0,f,c
  2907   00EE0A  D7FC               	bra	u1867
  2908   00EE0C  2E57               	decfsz	(??_triggerAlarm+1)^0,f,c
  2909   00EE0E  D7FA               	bra	u1867
  2910   00EE10                     
  2911                           ;main.c: 166:     }
  2912   00EE10  4A5A               	infsnz	triggerAlarm@i^0,f,c
  2913   00EE12  2A5B               	incf	(triggerAlarm@i+1)^0,f,c
  2914   00EE14                     l2380:
  2915   00EE14  5058               	movf	triggerAlarm@numCycles^0,w,c
  2916   00EE16  5C5A               	subwf	triggerAlarm@i^0,w,c
  2917   00EE18  5059               	movf	(triggerAlarm@numCycles+1)^0,w,c
  2918   00EE1A  585B               	subwfb	(triggerAlarm@i+1)^0,w,c
  2919   00EE1C  A0D8               	btfss	status,0,c
  2920   00EE1E  EF13  F077         	goto	u1401
  2921   00EE22  EF15  F077         	goto	u1400
  2922   00EE26                     u1401:
  2923   00EE26  EFCB  F076         	goto	l162
  2924   00EE2A                     u1400:
  2925   00EE2A                     l165:
  2926   00EE2A  0012               	return		;funcret
  2927   00EE2C                     __end_of_triggerAlarm:
  2928                           	callstack 0
  2929                           
  2930 ;; *************** function _clearDisplay *****************
  2931 ;; Defined at:
  2932 ;;		line 105 in file "MAX7219.c"
  2933 ;; Parameters:    Size  Location     Type
  2934 ;;		None
  2935 ;; Auto vars:     Size  Location     Type
  2936 ;;  i               2   64[COMRAM] int 
  2937 ;; Return value:  Size  Location     Type
  2938 ;;                  1    wreg      void 
  2939 ;; Registers used:
  2940 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2941 ;; Tracked objects:
  2942 ;;		On entry : 0/0
  2943 ;;		On exit  : 0/0
  2944 ;;		Unchanged: 0/0
  2945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2946 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2947 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2948 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2949 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2950 ;;Total ram usage:        2 bytes
  2951 ;; Hardware stack levels used: 1
  2952 ;; Hardware stack levels required when called: 3
  2953 ;; This function calls:
  2954 ;;		_flushBuffer
  2955 ;; This function is called by:
  2956 ;;		_main
  2957 ;;		_triggerAlarm
  2958 ;; This function uses a non-reentrant model
  2959 ;;
  2960                           
  2961                           	psect	text3
  2962   00EB56                     __ptext3:
  2963                           	callstack 0
  2964   00EB56                     _clearDisplay:
  2965                           	callstack 25
  2966   00EB56                     
  2967                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  2968   00EB56  0E00               	movlw	0
  2969   00EB58  6E42               	movwf	(clearDisplay@i+1)^0,c
  2970   00EB5A  0E00               	movlw	0
  2971   00EB5C  6E41               	movwf	clearDisplay@i^0,c
  2972   00EB5E                     l2144:
  2973                           
  2974                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  2975   00EB5E  5041               	movf	clearDisplay@i^0,w,c
  2976   00EB60  0F80               	addlw	low _bufferCol
  2977   00EB62  6ED9               	movwf	fsr2l,c
  2978   00EB64  6ADA               	clrf	fsr2h,c
  2979   00EB66  6ADF               	clrf	indf2,c
  2980   00EB68                     
  2981                           ;MAX7219.c: 110:  }
  2982   00EB68  4A41               	infsnz	clearDisplay@i^0,f,c
  2983   00EB6A  2A42               	incf	(clearDisplay@i+1)^0,f,c
  2984   00EB6C  BE42               	btfsc	(clearDisplay@i+1)^0,7,c
  2985   00EB6E  EFC2  F075         	goto	u1141
  2986   00EB72  5042               	movf	(clearDisplay@i+1)^0,w,c
  2987   00EB74  E109               	bnz	u1140
  2988   00EB76  0E1F               	movlw	31
  2989   00EB78  5C41               	subwf	clearDisplay@i^0,w,c
  2990   00EB7A  A0D8               	btfss	status,0,c
  2991   00EB7C  EFC2  F075         	goto	u1141
  2992   00EB80  EFC4  F075         	goto	u1140
  2993   00EB84                     u1141:
  2994   00EB84  EFAF  F075         	goto	l2144
  2995   00EB88                     u1140:
  2996   00EB88                     
  2997                           ;MAX7219.c: 111:  flushBuffer();
  2998   00EB88  EC59  F079         	call	_flushBuffer	;wreg free
  2999   00EB8C  0012               	return		;funcret
  3000   00EB8E                     __end_of_clearDisplay:
  3001                           	callstack 0
  3002                           
  3003 ;; *************** function _matrixInit *****************
  3004 ;; Defined at:
  3005 ;;		line 96 in file "MAX7219.c"
  3006 ;; Parameters:    Size  Location     Type
  3007 ;;		None
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;		None
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg, status,2, status,0, cstack
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;Total ram usage:        0 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 2
  3026 ;; This function calls:
  3027 ;;		_max7219_cmd
  3028 ;; This function is called by:
  3029 ;;		_main
  3030 ;; This function uses a non-reentrant model
  3031 ;;
  3032                           
  3033                           	psect	text4
  3034   00EB22                     __ptext4:
  3035                           	callstack 0
  3036   00EB22                     _matrixInit:
  3037                           	callstack 28
  3038   00EB22                     
  3039                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  3040   00EB22  0E00               	movlw	0
  3041   00EB24  6E02               	movwf	max7219_cmd@data^0,c
  3042   00EB26  0E09               	movlw	9
  3043   00EB28  ECEF  F075         	call	_max7219_cmd
  3044                           
  3045                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  3046   00EB2C  0E01               	movlw	1
  3047   00EB2E  6E02               	movwf	max7219_cmd@data^0,c
  3048   00EB30  0E0A               	movlw	10
  3049   00EB32  ECEF  F075         	call	_max7219_cmd
  3050                           
  3051                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  3052   00EB36  0E07               	movlw	7
  3053   00EB38  6E02               	movwf	max7219_cmd@data^0,c
  3054   00EB3A  0E0B               	movlw	11
  3055   00EB3C  ECEF  F075         	call	_max7219_cmd
  3056                           
  3057                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  3058   00EB40  0E01               	movlw	1
  3059   00EB42  6E02               	movwf	max7219_cmd@data^0,c
  3060   00EB44  0E0C               	movlw	12
  3061   00EB46  ECEF  F075         	call	_max7219_cmd
  3062                           
  3063                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  3064   00EB4A  0E00               	movlw	0
  3065   00EB4C  6E02               	movwf	max7219_cmd@data^0,c
  3066   00EB4E  0E0F               	movlw	15
  3067   00EB50  ECEF  F075         	call	_max7219_cmd
  3068   00EB54  0012               	return		;funcret
  3069   00EB56                     __end_of_matrixInit:
  3070                           	callstack 0
  3071                           
  3072 ;; *************** function _max7219_cmd *****************
  3073 ;; Defined at:
  3074 ;;		line 76 in file "MAX7219.c"
  3075 ;; Parameters:    Size  Location     Type
  3076 ;;  Addr            1    wreg     unsigned char 
  3077 ;;  data            1    1[COMRAM] unsigned char 
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  Addr            1    4[COMRAM] unsigned char 
  3080 ;;  i               2    7[COMRAM] int 
  3081 ;;  writeData       2    5[COMRAM] unsigned short 
  3082 ;; Return value:  Size  Location     Type
  3083 ;;                  1    wreg      void 
  3084 ;; Registers used:
  3085 ;;		wreg, status,2, status,0, cstack
  3086 ;; Tracked objects:
  3087 ;;		On entry : 0/0
  3088 ;;		On exit  : 0/0
  3089 ;;		Unchanged: 0/0
  3090 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3091 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3092 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3093 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3094 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3095 ;;Total ram usage:        8 bytes
  3096 ;; Hardware stack levels used: 1
  3097 ;; Hardware stack levels required when called: 1
  3098 ;; This function calls:
  3099 ;;		_SPI_Exchange8bit
  3100 ;; This function is called by:
  3101 ;;		_matrixInit
  3102 ;; This function uses a non-reentrant model
  3103 ;;
  3104                           
  3105                           	psect	text5
  3106   00EBDE                     __ptext5:
  3107                           	callstack 0
  3108   00EBDE                     _max7219_cmd:
  3109                           	callstack 28
  3110                           
  3111                           ;incstack = 0
  3112                           ;max7219_cmd@Addr stored from wreg
  3113   00EBDE  6E05               	movwf	max7219_cmd@Addr^0,c
  3114   00EBE0                     
  3115                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  3116   00EBE0  5002               	movf	max7219_cmd@data^0,w,c
  3117   00EBE2  C005  F003         	movff	max7219_cmd@Addr,??_max7219_cmd
  3118   00EBE6  6A04               	clrf	(??_max7219_cmd+1)^0,c
  3119   00EBE8  C003  F004         	movff	??_max7219_cmd,??_max7219_cmd+1
  3120   00EBEC  6A03               	clrf	??_max7219_cmd^0,c
  3121   00EBEE  1003               	iorwf	??_max7219_cmd^0,w,c
  3122   00EBF0  6E06               	movwf	max7219_cmd@writeData^0,c
  3123   00EBF2  5004               	movf	(??_max7219_cmd+1)^0,w,c
  3124   00EBF4  6E07               	movwf	(max7219_cmd@writeData+1)^0,c
  3125   00EBF6  948B               	bcf	139,2,c	;volatile
  3126   00EBF8                     
  3127                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  3128   00EBF8  0E00               	movlw	0
  3129   00EBFA  6E09               	movwf	(max7219_cmd@i+1)^0,c
  3130   00EBFC  0E00               	movlw	0
  3131   00EBFE  6E08               	movwf	max7219_cmd@i^0,c
  3132   00EC00                     l2408:
  3133                           
  3134                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  3135   00EC00  5007               	movf	(max7219_cmd@writeData+1)^0,w,c
  3136   00EC02  EC27  F075         	call	_SPI_Exchange8bit
  3137                           
  3138                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  3139   00EC06  5006               	movf	max7219_cmd@writeData^0,w,c
  3140   00EC08  EC27  F075         	call	_SPI_Exchange8bit
  3141   00EC0C                     
  3142                           ;MAX7219.c: 90:  }
  3143   00EC0C  4A08               	infsnz	max7219_cmd@i^0,f,c
  3144   00EC0E  2A09               	incf	(max7219_cmd@i+1)^0,f,c
  3145   00EC10  BE09               	btfsc	(max7219_cmd@i+1)^0,7,c
  3146   00EC12  EF14  F076         	goto	u1421
  3147   00EC16  5009               	movf	(max7219_cmd@i+1)^0,w,c
  3148   00EC18  E109               	bnz	u1420
  3149   00EC1A  0E04               	movlw	4
  3150   00EC1C  5C08               	subwf	max7219_cmd@i^0,w,c
  3151   00EC1E  A0D8               	btfss	status,0,c
  3152   00EC20  EF14  F076         	goto	u1421
  3153   00EC24  EF16  F076         	goto	u1420
  3154   00EC28                     u1421:
  3155   00EC28  EF00  F076         	goto	l2408
  3156   00EC2C                     u1420:
  3157   00EC2C  848B               	bsf	139,2,c	;volatile
  3158   00EC2E  0012               	return		;funcret
  3159   00EC30                     __end_of_max7219_cmd:
  3160                           	callstack 0
  3161                           
  3162 ;; *************** function _loadTimeFromFlash *****************
  3163 ;; Defined at:
  3164 ;;		line 305 in file "main.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;		None
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  flashAddress    4    0        unsigned long 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  1    wreg      void 
  3171 ;; Registers used:
  3172 ;;		wreg, status,2, status,0, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3182 ;;Total ram usage:        0 bytes
  3183 ;; Hardware stack levels used: 1
  3184 ;; Hardware stack levels required when called: 1
  3185 ;; This function calls:
  3186 ;;		_FLASH_ReadByte
  3187 ;; This function is called by:
  3188 ;;		_main
  3189 ;; This function uses a non-reentrant model
  3190 ;;
  3191                           
  3192                           	psect	text6
  3193   00EC30                     __ptext6:
  3194                           	callstack 0
  3195   00EC30                     _loadTimeFromFlash:
  3196                           	callstack 29
  3197   00EC30                     
  3198                           ;main.c: 308:     hours = FLASH_ReadByte(flashAddress);
  3199   00EC30  0E80               	movlw	128
  3200   00EC32  6E01               	movwf	FLASH_ReadByte@flashAddr^0,c
  3201   00EC34  0E1F               	movlw	31
  3202   00EC36  6E02               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3203   00EC38  0E00               	movlw	0
  3204   00EC3A  6E03               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3205   00EC3C  0E00               	movlw	0
  3206   00EC3E  6E04               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3207   00EC40  EC09  F075         	call	_FLASH_ReadByte	;wreg free
  3208   00EC44  6E5F               	movwf	_hours^0,c
  3209   00EC46                     
  3210                           ;main.c: 309:     minutes = FLASH_ReadByte(flashAddress + 1);
  3211   00EC46  0E81               	movlw	129
  3212   00EC48  6E01               	movwf	FLASH_ReadByte@flashAddr^0,c
  3213   00EC4A  0E1F               	movlw	31
  3214   00EC4C  6E02               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3215   00EC4E  0E00               	movlw	0
  3216   00EC50  6E03               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3217   00EC52  0E00               	movlw	0
  3218   00EC54  6E04               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3219   00EC56  EC09  F075         	call	_FLASH_ReadByte	;wreg free
  3220   00EC5A  6E5E               	movwf	_minutes^0,c
  3221                           
  3222                           ;main.c: 312:     if (hours >= 24) hours = 0;
  3223   00EC5C  0E17               	movlw	23
  3224   00EC5E  645F               	cpfsgt	_hours^0,c
  3225   00EC60  EF34  F076         	goto	u1451
  3226   00EC64  EF36  F076         	goto	u1450
  3227   00EC68                     u1451:
  3228   00EC68  EF38  F076         	goto	l2452
  3229   00EC6C                     u1450:
  3230   00EC6C  0E00               	movlw	0
  3231   00EC6E  6E5F               	movwf	_hours^0,c
  3232   00EC70                     l2452:
  3233                           
  3234                           ;main.c: 313:     if (minutes >= 60) minutes = 0;
  3235   00EC70  0E3B               	movlw	59
  3236   00EC72  645E               	cpfsgt	_minutes^0,c
  3237   00EC74  EF3E  F076         	goto	u1461
  3238   00EC78  EF40  F076         	goto	u1460
  3239   00EC7C                     u1461:
  3240   00EC7C  EF42  F076         	goto	l209
  3241   00EC80                     u1460:
  3242   00EC80  0E00               	movlw	0
  3243   00EC82  6E5E               	movwf	_minutes^0,c
  3244   00EC84                     l209:
  3245   00EC84  0012               	return		;funcret
  3246   00EC86                     __end_of_loadTimeFromFlash:
  3247                           	callstack 0
  3248                           
  3249 ;; *************** function _checkButtons *****************
  3250 ;; Defined at:
  3251 ;;		line 183 in file "main.c"
  3252 ;; Parameters:    Size  Location     Type
  3253 ;;		None
  3254 ;; Auto vars:     Size  Location     Type
  3255 ;;		None
  3256 ;; Return value:  Size  Location     Type
  3257 ;;                  1    wreg      void 
  3258 ;; Registers used:
  3259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3260 ;; Tracked objects:
  3261 ;;		On entry : 0/0
  3262 ;;		On exit  : 0/0
  3263 ;;		Unchanged: 0/0
  3264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3267 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3268 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3269 ;;Total ram usage:        2 bytes
  3270 ;; Hardware stack levels used: 1
  3271 ;; Hardware stack levels required when called: 5
  3272 ;; This function calls:
  3273 ;;		___awmod
  3274 ;;		_clearAlarm
  3275 ;;		_displayAlarmTime
  3276 ;;		_displayTime
  3277 ;;		_saveTimeToFlash
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;; This function uses a non-reentrant model
  3281 ;;
  3282                           
  3283                           	psect	text7
  3284   00F566                     __ptext7:
  3285                           	callstack 0
  3286   00F566                     _checkButtons:
  3287                           	callstack 25
  3288   00F566                     
  3289                           ;main.c: 185:     static uint8_t button3PressCount = 0;;main.c: 186:     static uint16_t
      +                           button3HoldTime = 0;;main.c: 187:     static _Bool alarmSettingMode = 0;;main.c: 190:  
      +                             if (!PORTBbits.RB0)
  3290   00F566  B081               	btfsc	129,0,c	;volatile
  3291   00F568  EFB8  F07A         	goto	u1481
  3292   00F56C  EFBA  F07A         	goto	u1480
  3293   00F570                     u1481:
  3294   00F570  EFFA  F07A         	goto	l2482
  3295   00F574                     u1480:
  3296   00F574                     
  3297                           ;main.c: 191:     {;main.c: 192:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3298   00F574  0E02               	movlw	2
  3299   00F576  6E5A               	movwf	(??_checkButtons+1)^0,c
  3300   00F578  0E04               	movlw	4
  3301   00F57A  6E59               	movwf	??_checkButtons^0,c
  3302   00F57C  0EBA               	movlw	186
  3303   00F57E                     u1877:
  3304   00F57E  2EE8               	decfsz	wreg,f,c
  3305   00F580  D7FE               	bra	u1877
  3306   00F582  2E59               	decfsz	??_checkButtons^0,f,c
  3307   00F584  D7FC               	bra	u1877
  3308   00F586  2E5A               	decfsz	(??_checkButtons+1)^0,f,c
  3309   00F588  D7FA               	bra	u1877
  3310   00F58A  F000 F000          	nop2	
  3311   00F58E                     
  3312                           ;main.c: 193:         if (!PORTBbits.RB0)
  3313   00F58E  B081               	btfsc	129,0,c	;volatile
  3314   00F590  EFCC  F07A         	goto	u1491
  3315   00F594  EFCE  F07A         	goto	u1490
  3316   00F598                     u1491:
  3317   00F598  EFFA  F07A         	goto	l2482
  3318   00F59C                     u1490:
  3319   00F59C                     
  3320                           ;main.c: 194:         {;main.c: 195:             if (alarmSettingMode)
  3321   00F59C  505C               	movf	checkButtons@alarmSettingMode^0,w,c
  3322   00F59E  B4D8               	btfsc	status,2,c
  3323   00F5A0  EFD4  F07A         	goto	u1501
  3324   00F5A4  EFD6  F07A         	goto	u1500
  3325   00F5A8                     u1501:
  3326   00F5A8  EFEA  F07A         	goto	l2478
  3327   00F5AC                     u1500:
  3328   00F5AC                     
  3329                           ;main.c: 196:             {;main.c: 197:                 alarmHours = (alarmHours + 1) %
      +                           24;
  3330   00F5AC  0E01               	movlw	1
  3331   00F5AE  0100               	movlb	0	; () banked
  3332   00F5B0  25AE               	addwf	_alarmHours& (0+255),w,b
  3333   00F5B2  6E01               	movwf	___awmod@dividend^0,c
  3334   00F5B4  6A02               	clrf	(___awmod@dividend+1)^0,c
  3335   00F5B6  0E00               	movlw	0
  3336   00F5B8  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3337   00F5BA  0E00               	movlw	0
  3338   00F5BC  6E04               	movwf	(___awmod@divisor+1)^0,c
  3339   00F5BE  0E18               	movlw	24
  3340   00F5C0  6E03               	movwf	___awmod@divisor^0,c
  3341   00F5C2  EC16  F077         	call	___awmod	;wreg free
  3342   00F5C6  5001               	movf	?___awmod^0,w,c
  3343   00F5C8  0100               	movlb	0	; () banked
  3344   00F5CA  6FAE               	movwf	_alarmHours& (0+255),b
  3345   00F5CC                     
  3346                           ; BSR set to: 0
  3347                           ;main.c: 198:                 displayAlarmTime();
  3348   00F5CC  EC6E  F077         	call	_displayAlarmTime	;wreg free
  3349                           
  3350                           ;main.c: 199:             }
  3351   00F5D0  EFFA  F07A         	goto	l2482
  3352   00F5D4                     l2478:
  3353                           
  3354                           ;main.c: 201:             {;main.c: 202:                 hours = (hours + 1) % 24;
  3355   00F5D4  0E01               	movlw	1
  3356   00F5D6  245F               	addwf	_hours^0,w,c
  3357   00F5D8  6E01               	movwf	___awmod@dividend^0,c
  3358   00F5DA  6A02               	clrf	(___awmod@dividend+1)^0,c
  3359   00F5DC  0E00               	movlw	0
  3360   00F5DE  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3361   00F5E0  0E00               	movlw	0
  3362   00F5E2  6E04               	movwf	(___awmod@divisor+1)^0,c
  3363   00F5E4  0E18               	movlw	24
  3364   00F5E6  6E03               	movwf	___awmod@divisor^0,c
  3365   00F5E8  EC16  F077         	call	___awmod	;wreg free
  3366   00F5EC  5001               	movf	?___awmod^0,w,c
  3367   00F5EE  6E5F               	movwf	_hours^0,c
  3368   00F5F0                     
  3369                           ;main.c: 203:                 displayTime();
  3370   00F5F0  ECC8  F077         	call	_displayTime	;wreg free
  3371   00F5F4                     l2482:
  3372                           
  3373                           ;main.c: 209:     if (!PORTBbits.RB1)
  3374   00F5F4  B281               	btfsc	129,1,c	;volatile
  3375   00F5F6  EFFF  F07A         	goto	u1511
  3376   00F5FA  EF01  F07B         	goto	u1510
  3377   00F5FE                     u1511:
  3378   00F5FE  EF41  F07B         	goto	l2498
  3379   00F602                     u1510:
  3380   00F602                     
  3381                           ;main.c: 210:     {;main.c: 211:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  3382   00F602  0E02               	movlw	2
  3383   00F604  6E5A               	movwf	(??_checkButtons+1)^0,c
  3384   00F606  0E04               	movlw	4
  3385   00F608  6E59               	movwf	??_checkButtons^0,c
  3386   00F60A  0EBA               	movlw	186
  3387   00F60C                     u1887:
  3388   00F60C  2EE8               	decfsz	wreg,f,c
  3389   00F60E  D7FE               	bra	u1887
  3390   00F610  2E59               	decfsz	??_checkButtons^0,f,c
  3391   00F612  D7FC               	bra	u1887
  3392   00F614  2E5A               	decfsz	(??_checkButtons+1)^0,f,c
  3393   00F616  D7FA               	bra	u1887
  3394   00F618  F000 F000          	nop2	
  3395   00F61C                     
  3396                           ;main.c: 212:         if (!PORTBbits.RB1)
  3397   00F61C  B281               	btfsc	129,1,c	;volatile
  3398   00F61E  EF13  F07B         	goto	u1521
  3399   00F622  EF15  F07B         	goto	u1520
  3400   00F626                     u1521:
  3401   00F626  EF41  F07B         	goto	l2498
  3402   00F62A                     u1520:
  3403   00F62A                     
  3404                           ;main.c: 213:         {;main.c: 214:             if (alarmSettingMode)
  3405   00F62A  505C               	movf	checkButtons@alarmSettingMode^0,w,c
  3406   00F62C  B4D8               	btfsc	status,2,c
  3407   00F62E  EF1B  F07B         	goto	u1531
  3408   00F632  EF1D  F07B         	goto	u1530
  3409   00F636                     u1531:
  3410   00F636  EF31  F07B         	goto	l2494
  3411   00F63A                     u1530:
  3412   00F63A                     
  3413                           ;main.c: 215:             {;main.c: 216:                 alarmMinutes = (alarmMinutes + 
      +                          1) % 60;
  3414   00F63A  0E01               	movlw	1
  3415   00F63C  0100               	movlb	0	; () banked
  3416   00F63E  25AD               	addwf	_alarmMinutes& (0+255),w,b
  3417   00F640  6E01               	movwf	___awmod@dividend^0,c
  3418   00F642  6A02               	clrf	(___awmod@dividend+1)^0,c
  3419   00F644  0E00               	movlw	0
  3420   00F646  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3421   00F648  0E00               	movlw	0
  3422   00F64A  6E04               	movwf	(___awmod@divisor+1)^0,c
  3423   00F64C  0E3C               	movlw	60
  3424   00F64E  6E03               	movwf	___awmod@divisor^0,c
  3425   00F650  EC16  F077         	call	___awmod	;wreg free
  3426   00F654  5001               	movf	?___awmod^0,w,c
  3427   00F656  0100               	movlb	0	; () banked
  3428   00F658  6FAD               	movwf	_alarmMinutes& (0+255),b
  3429   00F65A                     
  3430                           ; BSR set to: 0
  3431                           ;main.c: 217:                 displayAlarmTime();
  3432   00F65A  EC6E  F077         	call	_displayAlarmTime	;wreg free
  3433                           
  3434                           ;main.c: 218:             }
  3435   00F65E  EF41  F07B         	goto	l2498
  3436   00F662                     l2494:
  3437                           
  3438                           ;main.c: 220:             {;main.c: 221:                 minutes = (minutes + 1) % 60;
  3439   00F662  0E01               	movlw	1
  3440   00F664  245E               	addwf	_minutes^0,w,c
  3441   00F666  6E01               	movwf	___awmod@dividend^0,c
  3442   00F668  6A02               	clrf	(___awmod@dividend+1)^0,c
  3443   00F66A  0E00               	movlw	0
  3444   00F66C  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3445   00F66E  0E00               	movlw	0
  3446   00F670  6E04               	movwf	(___awmod@divisor+1)^0,c
  3447   00F672  0E3C               	movlw	60
  3448   00F674  6E03               	movwf	___awmod@divisor^0,c
  3449   00F676  EC16  F077         	call	___awmod	;wreg free
  3450   00F67A  5001               	movf	?___awmod^0,w,c
  3451   00F67C  6E5E               	movwf	_minutes^0,c
  3452   00F67E                     
  3453                           ;main.c: 222:                 displayTime();
  3454   00F67E  ECC8  F077         	call	_displayTime	;wreg free
  3455   00F682                     l2498:
  3456                           
  3457                           ;main.c: 228:     if (!PORTBbits.RB2)
  3458   00F682  B481               	btfsc	129,2,c	;volatile
  3459   00F684  EF46  F07B         	goto	u1541
  3460   00F688  EF48  F07B         	goto	u1540
  3461   00F68C                     u1541:
  3462   00F68C  EFDC  F07B         	goto	l2536
  3463   00F690                     u1540:
  3464   00F690                     
  3465                           ;main.c: 229:     {;main.c: 230:         button3HoldTime += 100;
  3466   00F690  0E64               	movlw	100
  3467   00F692  0100               	movlb	0	; () banked
  3468   00F694  27A2               	addwf	checkButtons@button3HoldTime& (0+255),f,b
  3469   00F696  0E00               	movlw	0
  3470   00F698  23A3               	addwfc	(checkButtons@button3HoldTime+1)& (0+255),f,b
  3471   00F69A                     
  3472                           ; BSR set to: 0
  3473                           ;main.c: 231:         _delay((unsigned long)((100)*(8000000/4000.0)));
  3474   00F69A  0E02               	movlw	2
  3475   00F69C  6E5A               	movwf	(??_checkButtons+1)^0,c
  3476   00F69E  0E04               	movlw	4
  3477   00F6A0  6E59               	movwf	??_checkButtons^0,c
  3478   00F6A2  0EBA               	movlw	186
  3479   00F6A4                     u1897:
  3480   00F6A4  2EE8               	decfsz	wreg,f,c
  3481   00F6A6  D7FE               	bra	u1897
  3482   00F6A8  2E59               	decfsz	??_checkButtons^0,f,c
  3483   00F6AA  D7FC               	bra	u1897
  3484   00F6AC  2E5A               	decfsz	(??_checkButtons+1)^0,f,c
  3485   00F6AE  D7FA               	bra	u1897
  3486   00F6B0  F000 F000          	nop2	
  3487   00F6B4                     
  3488                           ;main.c: 233:         if (button3HoldTime >= 3000)
  3489   00F6B4  0EB8               	movlw	184
  3490   00F6B6  0100               	movlb	0	; () banked
  3491   00F6B8  5DA2               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3492   00F6BA  0E0B               	movlw	11
  3493   00F6BC  59A3               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3494   00F6BE  A0D8               	btfss	status,0,c
  3495   00F6C0  EF64  F07B         	goto	u1551
  3496   00F6C4  EF66  F07B         	goto	u1550
  3497   00F6C8                     u1551:
  3498   00F6C8  EFD0  F07B         	goto	l2532
  3499   00F6CC                     u1550:
  3500   00F6CC                     
  3501                           ; BSR set to: 0
  3502                           ;main.c: 234:         {;main.c: 235:             if (!alarmTriggered)
  3503   00F6CC  505D               	movf	_alarmTriggered^0,w,c
  3504   00F6CE  A4D8               	btfss	status,2,c
  3505   00F6D0  EF6C  F07B         	goto	u1561
  3506   00F6D4  EF6E  F07B         	goto	u1560
  3507   00F6D8                     u1561:
  3508   00F6D8  EFFB  F07B         	goto	l199
  3509   00F6DC                     u1560:
  3510   00F6DC                     
  3511                           ; BSR set to: 0
  3512                           ;main.c: 236:             {;main.c: 237:                 alarmSettingMode = 1;
  3513   00F6DC  0E01               	movlw	1
  3514   00F6DE  6E5C               	movwf	checkButtons@alarmSettingMode^0,c
  3515   00F6E0                     l2510:
  3516                           
  3517                           ; BSR set to: 0
  3518                           ;main.c: 238:                 displayAlarmTime();
  3519   00F6E0  EC6E  F077         	call	_displayAlarmTime	;wreg free
  3520                           
  3521                           ;main.c: 240:                 while (!PORTBbits.RB2)
  3522   00F6E4  EFC0  F07B         	goto	l2526
  3523   00F6E8                     l190:
  3524                           
  3525                           ;main.c: 241:                 {;main.c: 242:                     if (!PORTBbits.RB0)
  3526   00F6E8  B081               	btfsc	129,0,c	;volatile
  3527   00F6EA  EF79  F07B         	goto	u1571
  3528   00F6EE  EF7B  F07B         	goto	u1570
  3529   00F6F2                     u1571:
  3530   00F6F2  EF9A  F07B         	goto	l2518
  3531   00F6F6                     u1570:
  3532   00F6F6                     
  3533                           ;main.c: 243:                     {;main.c: 244:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3534   00F6F6  0E02               	movlw	2
  3535   00F6F8  6E5A               	movwf	(??_checkButtons+1)^0,c
  3536   00F6FA  0E04               	movlw	4
  3537   00F6FC  6E59               	movwf	??_checkButtons^0,c
  3538   00F6FE  0EBA               	movlw	186
  3539   00F700                     u1907:
  3540   00F700  2EE8               	decfsz	wreg,f,c
  3541   00F702  D7FE               	bra	u1907
  3542   00F704  2E59               	decfsz	??_checkButtons^0,f,c
  3543   00F706  D7FC               	bra	u1907
  3544   00F708  2E5A               	decfsz	(??_checkButtons+1)^0,f,c
  3545   00F70A  D7FA               	bra	u1907
  3546   00F70C  F000 F000          	nop2	
  3547   00F710                     
  3548                           ;main.c: 245:                         alarmHours = (alarmHours + 1) % 24;
  3549   00F710  0E01               	movlw	1
  3550   00F712  0100               	movlb	0	; () banked
  3551   00F714  25AE               	addwf	_alarmHours& (0+255),w,b
  3552   00F716  6E01               	movwf	___awmod@dividend^0,c
  3553   00F718  6A02               	clrf	(___awmod@dividend+1)^0,c
  3554   00F71A  0E00               	movlw	0
  3555   00F71C  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3556   00F71E  0E00               	movlw	0
  3557   00F720  6E04               	movwf	(___awmod@divisor+1)^0,c
  3558   00F722  0E18               	movlw	24
  3559   00F724  6E03               	movwf	___awmod@divisor^0,c
  3560   00F726  EC16  F077         	call	___awmod	;wreg free
  3561   00F72A  5001               	movf	?___awmod^0,w,c
  3562   00F72C  0100               	movlb	0	; () banked
  3563   00F72E  6FAE               	movwf	_alarmHours& (0+255),b
  3564   00F730                     
  3565                           ; BSR set to: 0
  3566                           ;main.c: 246:                         displayAlarmTime();
  3567   00F730  EC6E  F077         	call	_displayAlarmTime	;wreg free
  3568   00F734                     l2518:
  3569                           
  3570                           ;main.c: 248:                     if (!PORTBbits.RB1)
  3571   00F734  B281               	btfsc	129,1,c	;volatile
  3572   00F736  EF9F  F07B         	goto	u1581
  3573   00F73A  EFA1  F07B         	goto	u1580
  3574   00F73E                     u1581:
  3575   00F73E  EFC0  F07B         	goto	l2526
  3576   00F742                     u1580:
  3577   00F742                     
  3578                           ;main.c: 249:                     {;main.c: 250:                         _delay((unsigne
      +                          d long)((100)*(8000000/4000.0)));
  3579   00F742  0E02               	movlw	2
  3580   00F744  6E5A               	movwf	(??_checkButtons+1)^0,c
  3581   00F746  0E04               	movlw	4
  3582   00F748  6E59               	movwf	??_checkButtons^0,c
  3583   00F74A  0EBA               	movlw	186
  3584   00F74C                     u1917:
  3585   00F74C  2EE8               	decfsz	wreg,f,c
  3586   00F74E  D7FE               	bra	u1917
  3587   00F750  2E59               	decfsz	??_checkButtons^0,f,c
  3588   00F752  D7FC               	bra	u1917
  3589   00F754  2E5A               	decfsz	(??_checkButtons+1)^0,f,c
  3590   00F756  D7FA               	bra	u1917
  3591   00F758  F000 F000          	nop2	
  3592   00F75C                     
  3593                           ;main.c: 251:                         alarmMinutes = (alarmMinutes + 1) % 60;
  3594   00F75C  0E01               	movlw	1
  3595   00F75E  0100               	movlb	0	; () banked
  3596   00F760  25AD               	addwf	_alarmMinutes& (0+255),w,b
  3597   00F762  6E01               	movwf	___awmod@dividend^0,c
  3598   00F764  6A02               	clrf	(___awmod@dividend+1)^0,c
  3599   00F766  0E00               	movlw	0
  3600   00F768  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3601   00F76A  0E00               	movlw	0
  3602   00F76C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3603   00F76E  0E3C               	movlw	60
  3604   00F770  6E03               	movwf	___awmod@divisor^0,c
  3605   00F772  EC16  F077         	call	___awmod	;wreg free
  3606   00F776  5001               	movf	?___awmod^0,w,c
  3607   00F778  0100               	movlb	0	; () banked
  3608   00F77A  6FAD               	movwf	_alarmMinutes& (0+255),b
  3609   00F77C  EF70  F07B         	goto	l2510
  3610   00F780                     l2526:
  3611                           
  3612                           ;main.c: 240:                 while (!PORTBbits.RB2)
  3613   00F780  A481               	btfss	129,2,c	;volatile
  3614   00F782  EFC5  F07B         	goto	u1591
  3615   00F786  EFC7  F07B         	goto	u1590
  3616   00F78A                     u1591:
  3617   00F78A  EF74  F07B         	goto	l190
  3618   00F78E                     u1590:
  3619   00F78E                     
  3620                           ;main.c: 256:                 alarmSettingMode = 0;
  3621   00F78E  0E00               	movlw	0
  3622   00F790  6E5C               	movwf	checkButtons@alarmSettingMode^0,c
  3623                           
  3624                           ;main.c: 257:                 alarmSet = 1;
  3625   00F792  0E01               	movlw	1
  3626   00F794  0100               	movlb	0	; () banked
  3627   00F796  6FAC               	movwf	_alarmSet& (0+255),b
  3628   00F798                     
  3629                           ; BSR set to: 0
  3630                           ;main.c: 258:                 displayTime();
  3631   00F798  ECC8  F077         	call	_displayTime	;wreg free
  3632   00F79C  EFFB  F07B         	goto	l199
  3633   00F7A0                     l2532:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;main.c: 262:         {;main.c: 263:             if (alarmTriggered)
  3637   00F7A0  505D               	movf	_alarmTriggered^0,w,c
  3638   00F7A2  B4D8               	btfsc	status,2,c
  3639   00F7A4  EFD6  F07B         	goto	u1601
  3640   00F7A8  EFD8  F07B         	goto	u1600
  3641   00F7AC                     u1601:
  3642   00F7AC  EFFB  F07B         	goto	l199
  3643   00F7B0                     u1600:
  3644   00F7B0                     
  3645                           ; BSR set to: 0
  3646                           ;main.c: 264:             {;main.c: 265:                 clearAlarm();
  3647   00F7B0  ECEC  F074         	call	_clearAlarm	;wreg free
  3648   00F7B4  EFFB  F07B         	goto	l199
  3649   00F7B8                     l2536:
  3650                           
  3651                           ;main.c: 270:     {;main.c: 271:         if (button3HoldTime < 3000)
  3652   00F7B8  0EB8               	movlw	184
  3653   00F7BA  0100               	movlb	0	; () banked
  3654   00F7BC  5DA2               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  3655   00F7BE  0E0B               	movlw	11
  3656   00F7C0  59A3               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  3657   00F7C2  B0D8               	btfsc	status,0,c
  3658   00F7C4  EFE6  F07B         	goto	u1611
  3659   00F7C8  EFE8  F07B         	goto	u1610
  3660   00F7CC                     u1611:
  3661   00F7CC  EFF7  F07B         	goto	l2546
  3662   00F7D0                     u1610:
  3663   00F7D0                     
  3664                           ; BSR set to: 0
  3665                           ;main.c: 272:         {;main.c: 273:             button3PressCount++;
  3666   00F7D0  2BA8               	incf	checkButtons@button3PressCount& (0+255),f,b
  3667   00F7D2                     
  3668                           ; BSR set to: 0
  3669                           ;main.c: 274:             if (button3PressCount == 5)
  3670   00F7D2  0E05               	movlw	5
  3671   00F7D4  19A8               	xorwf	checkButtons@button3PressCount& (0+255),w,b
  3672   00F7D6  A4D8               	btfss	status,2,c
  3673   00F7D8  EFF0  F07B         	goto	u1621
  3674   00F7DC  EFF2  F07B         	goto	u1620
  3675   00F7E0                     u1621:
  3676   00F7E0  EFF7  F07B         	goto	l2546
  3677   00F7E4                     u1620:
  3678   00F7E4                     
  3679                           ; BSR set to: 0
  3680                           ;main.c: 275:             {;main.c: 276:                 saveTimeToFlash();
  3681   00F7E4  EC43  F076         	call	_saveTimeToFlash	;wreg free
  3682   00F7E8                     
  3683                           ;main.c: 277:                 button3PressCount = 0;
  3684   00F7E8  0E00               	movlw	0
  3685   00F7EA  0100               	movlb	0	; () banked
  3686   00F7EC  6FA8               	movwf	checkButtons@button3PressCount& (0+255),b
  3687   00F7EE                     l2546:
  3688                           
  3689                           ; BSR set to: 0
  3690                           ;main.c: 280:         button3HoldTime = 0;
  3691   00F7EE  0E00               	movlw	0
  3692   00F7F0  6FA3               	movwf	(checkButtons@button3HoldTime+1)& (0+255),b
  3693   00F7F2  0E00               	movlw	0
  3694   00F7F4  6FA2               	movwf	checkButtons@button3HoldTime& (0+255),b
  3695   00F7F6                     l199:
  3696   00F7F6  0012               	return		;funcret
  3697   00F7F8                     __end_of_checkButtons:
  3698                           	callstack 0
  3699                           
  3700 ;; *************** function _saveTimeToFlash *****************
  3701 ;; Defined at:
  3702 ;;		line 286 in file "main.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;		None
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  i               1   87[COMRAM] unsigned char 
  3707 ;;  flashBuffer    64   19[COMRAM] unsigned char [64]
  3708 ;;  flashAddress    4   83[COMRAM] unsigned long 
  3709 ;; Return value:  Size  Location     Type
  3710 ;;                  1    wreg      void 
  3711 ;; Registers used:
  3712 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3713 ;; Tracked objects:
  3714 ;;		On entry : 0/0
  3715 ;;		On exit  : 0/0
  3716 ;;		Unchanged: 0/0
  3717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3718 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3719 ;;      Locals:        69       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3720 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3721 ;;      Totals:        69       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3722 ;;Total ram usage:       69 bytes
  3723 ;; Hardware stack levels used: 1
  3724 ;; Hardware stack levels required when called: 2
  3725 ;; This function calls:
  3726 ;;		_FLASH_ReadByte
  3727 ;;		_FLASH_WriteBlock
  3728 ;; This function is called by:
  3729 ;;		_checkButtons
  3730 ;; This function uses a non-reentrant model
  3731 ;;
  3732                           
  3733                           	psect	text8
  3734   00EC86                     __ptext8:
  3735                           	callstack 0
  3736   00EC86                     _saveTimeToFlash:
  3737                           	callstack 27
  3738   00EC86                     
  3739                           ;main.c: 288:     uint32_t flashAddress = 0x1F80;
  3740   00EC86  0E80               	movlw	128
  3741   00EC88  6E54               	movwf	saveTimeToFlash@flashAddress^0,c
  3742   00EC8A  0E1F               	movlw	31
  3743   00EC8C  6E55               	movwf	(saveTimeToFlash@flashAddress+1)^0,c
  3744   00EC8E  0E00               	movlw	0
  3745   00EC90  6E56               	movwf	(saveTimeToFlash@flashAddress+2)^0,c
  3746   00EC92  0E00               	movlw	0
  3747   00EC94  6E57               	movwf	(saveTimeToFlash@flashAddress+3)^0,c
  3748                           
  3749                           ;main.c: 289:     uint8_t flashBuffer[64];;main.c: 292:     for (uint8_t i = 0; i < 64; 
      +                          i++) {
  3750   00EC96  0E00               	movlw	0
  3751   00EC98  6E58               	movwf	saveTimeToFlash@i^0,c
  3752   00EC9A                     l2390:
  3753                           
  3754                           ;main.c: 293:         flashBuffer[i] = FLASH_ReadByte(flashAddress + i);
  3755   00EC9A  5058               	movf	saveTimeToFlash@i^0,w,c
  3756   00EC9C  0F14               	addlw	low saveTimeToFlash@flashBuffer
  3757   00EC9E  6ED9               	movwf	fsr2l,c
  3758   00ECA0  6ADA               	clrf	fsr2h,c
  3759   00ECA2  5058               	movf	saveTimeToFlash@i^0,w,c
  3760   00ECA4  2454               	addwf	saveTimeToFlash@flashAddress^0,w,c
  3761   00ECA6  6E01               	movwf	FLASH_ReadByte@flashAddr^0,c
  3762   00ECA8  0E00               	movlw	0
  3763   00ECAA  2055               	addwfc	(saveTimeToFlash@flashAddress+1)^0,w,c
  3764   00ECAC  6E02               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3765   00ECAE  0E00               	movlw	0
  3766   00ECB0  2056               	addwfc	(saveTimeToFlash@flashAddress+2)^0,w,c
  3767   00ECB2  6E03               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3768   00ECB4  0E00               	movlw	0
  3769   00ECB6  2057               	addwfc	(saveTimeToFlash@flashAddress+3)^0,w,c
  3770   00ECB8  6E04               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3771   00ECBA  EC09  F075         	call	_FLASH_ReadByte	;wreg free
  3772   00ECBE  6EDF               	movwf	indf2,c
  3773   00ECC0                     
  3774                           ;main.c: 294:     }
  3775   00ECC0  2A58               	incf	saveTimeToFlash@i^0,f,c
  3776   00ECC2  0E3F               	movlw	63
  3777   00ECC4  6458               	cpfsgt	saveTimeToFlash@i^0,c
  3778   00ECC6  EF67  F076         	goto	u1411
  3779   00ECCA  EF69  F076         	goto	u1410
  3780   00ECCE                     u1411:
  3781   00ECCE  EF4D  F076         	goto	l2390
  3782   00ECD2                     u1410:
  3783   00ECD2                     
  3784                           ;main.c: 297:     flashBuffer[0] = hours;
  3785   00ECD2  C05F  F014         	movff	_hours,saveTimeToFlash@flashBuffer
  3786                           
  3787                           ;main.c: 298:     flashBuffer[1] = minutes;
  3788   00ECD6  C05E  F015         	movff	_minutes,saveTimeToFlash@flashBuffer+1
  3789   00ECDA                     
  3790                           ;main.c: 301:     FLASH_WriteBlock(flashAddress, flashBuffer);
  3791   00ECDA  C054  F006         	movff	saveTimeToFlash@flashAddress,FLASH_WriteBlock@writeAddr
  3792   00ECDE  C055  F007         	movff	saveTimeToFlash@flashAddress+1,FLASH_WriteBlock@writeAddr+1
  3793   00ECE2  C056  F008         	movff	saveTimeToFlash@flashAddress+2,FLASH_WriteBlock@writeAddr+2
  3794   00ECE6  C057  F009         	movff	saveTimeToFlash@flashAddress+3,FLASH_WriteBlock@writeAddr+3
  3795   00ECEA  0E14               	movlw	low saveTimeToFlash@flashBuffer
  3796   00ECEC  6E0A               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  3797   00ECEE  ECE4  F078         	call	_FLASH_WriteBlock	;wreg free
  3798   00ECF2  0012               	return		;funcret
  3799   00ECF4                     __end_of_saveTimeToFlash:
  3800                           	callstack 0
  3801                           
  3802 ;; *************** function _FLASH_WriteBlock *****************
  3803 ;; Defined at:
  3804 ;;		line 93 in file "mcc_generated_files/memory.c"
  3805 ;; Parameters:    Size  Location     Type
  3806 ;;  writeAddr       4    5[COMRAM] unsigned long 
  3807 ;;  flashWrBufPt    1    9[COMRAM] PTR unsigned char 
  3808 ;;		 -> saveTimeToFlash@flashBuffer(64), 
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;  blockStartAd    4   10[COMRAM] unsigned long 
  3811 ;;  i               1   18[COMRAM] unsigned char 
  3812 ;;  dataCounter     1   17[COMRAM] unsigned char 
  3813 ;;  numberOfWrit    1   16[COMRAM] unsigned char 
  3814 ;;  j               1   15[COMRAM] unsigned char 
  3815 ;;  GIEBitValue     1   14[COMRAM] unsigned char 
  3816 ;; Return value:  Size  Location     Type
  3817 ;;                  1    wreg      char 
  3818 ;; Registers used:
  3819 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3820 ;; Tracked objects:
  3821 ;;		On entry : 0/0
  3822 ;;		On exit  : 0/0
  3823 ;;		Unchanged: 0/0
  3824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3825 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3826 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3828 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3829 ;;Total ram usage:       14 bytes
  3830 ;; Hardware stack levels used: 1
  3831 ;; Hardware stack levels required when called: 1
  3832 ;; This function calls:
  3833 ;;		_FLASH_EraseBlock
  3834 ;; This function is called by:
  3835 ;;		_saveTimeToFlash
  3836 ;;		_FLASH_WriteByte
  3837 ;; This function uses a non-reentrant model
  3838 ;;
  3839                           
  3840                           	psect	text9
  3841   00F1C8                     __ptext9:
  3842                           	callstack 0
  3843   00F1C8                     _FLASH_WriteBlock:
  3844                           	callstack 27
  3845   00F1C8                     
  3846                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  3847   00F1C8  0EC0               	movlw	192
  3848   00F1CA  1406               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  3849   00F1CC  6E0B               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  3850   00F1CE  0EFF               	movlw	255
  3851   00F1D0  1407               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  3852   00F1D2  6E0C               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  3853   00F1D4  0E00               	movlw	0
  3854   00F1D6  1408               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  3855   00F1D8  6E0D               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  3856   00F1DA  0E00               	movlw	0
  3857   00F1DC  1409               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  3858   00F1DE  6E0E               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  3859   00F1E0                     
  3860                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  3861   00F1E0  0E00               	movlw	0
  3862   00F1E2  BEF2               	btfsc	242,7,c	;volatile
  3863   00F1E4  0E01               	movlw	1
  3864   00F1E6  6E0F               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  3865   00F1E8  0E00               	movlw	0
  3866   00F1EA  6E12               	movwf	FLASH_WriteBlock@dataCounter^0,c
  3867   00F1EC                     
  3868                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  3869   00F1EC  0E01               	movlw	1
  3870   00F1EE  6E11               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  3871   00F1F0                     
  3872                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  3873   00F1F0  500B               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  3874   00F1F2  1806               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  3875   00F1F4  E10F               	bnz	u1250
  3876   00F1F6  500C               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  3877   00F1F8  1807               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  3878   00F1FA  E10C               	bnz	u1250
  3879   00F1FC  500D               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  3880   00F1FE  1808               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  3881   00F200  E109               	bnz	u1250
  3882   00F202  500E               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  3883   00F204  1809               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  3884   00F206  B4D8               	btfsc	status,2,c
  3885   00F208  EF08  F079         	goto	u1251
  3886   00F20C  EF0A  F079         	goto	u1250
  3887   00F210                     u1251:
  3888   00F210  EF0C  F079         	goto	l2218
  3889   00F214                     u1250:
  3890   00F214  EF58  F079         	goto	l490
  3891   00F218                     l2218:
  3892                           
  3893                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  3894   00F218  C006  F001         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  3895   00F21C  C007  F002         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  3896   00F220  C008  F003         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  3897   00F224  C009  F004         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  3898   00F228  EC77  F075         	call	_FLASH_EraseBlock	;wreg free
  3899   00F22C                     
  3900                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  3901   00F22C  C008  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  3902   00F230                     
  3903                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  3904   00F230  C007  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  3905   00F234                     
  3906                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  3907   00F234  C006  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  3908   00F238                     
  3909                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  3910   00F238  0E00               	movlw	0
  3911   00F23A  6E10               	movwf	FLASH_WriteBlock@j^0,c
  3912   00F23C  EF4F  F079         	goto	l2254
  3913   00F240                     l2228:
  3914                           
  3915                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  3916   00F240  0E00               	movlw	0
  3917   00F242  6E13               	movwf	FLASH_WriteBlock@i^0,c
  3918   00F244                     l2234:
  3919                           
  3920                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  3921   00F244  500A               	movf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  3922   00F246  2412               	addwf	FLASH_WriteBlock@dataCounter^0,w,c
  3923   00F248  6ED9               	movwf	fsr2l,c
  3924   00F24A  6ADA               	clrf	fsr2h,c
  3925   00F24C  50DF               	movf	indf2,w,c
  3926   00F24E  6EF5               	movwf	245,c	;volatile
  3927   00F250                     
  3928                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  3929   00F250  0E3F               	movlw	63
  3930   00F252  1813               	xorwf	FLASH_WriteBlock@i^0,w,c
  3931   00F254  A4D8               	btfss	status,2,c
  3932   00F256  EF2F  F079         	goto	u1261
  3933   00F25A  EF31  F079         	goto	u1260
  3934   00F25E                     u1261:
  3935   00F25E  EF34  F079         	goto	l495
  3936   00F262                     u1260:
  3937   00F262  000C               	tblwt		*	;# 
  3938                           
  3939                           ;mcc_generated_files/memory.c: 124:    }
  3940   00F264  EF36  F079         	goto	l496
  3941   00F268                     l495:
  3942   00F268  000D               	tblwt		*+	;# 
  3943   00F26A                     
  3944                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  3945   00F26A  2A12               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  3946   00F26C                     l496:
  3947                           
  3948                           ;mcc_generated_files/memory.c: 130:   }
  3949   00F26C  2A13               	incf	FLASH_WriteBlock@i^0,f,c
  3950   00F26E  0E3F               	movlw	63
  3951   00F270  6413               	cpfsgt	FLASH_WriteBlock@i^0,c
  3952   00F272  EF3D  F079         	goto	u1271
  3953   00F276  EF3F  F079         	goto	u1270
  3954   00F27A                     u1271:
  3955   00F27A  EF22  F079         	goto	l2234
  3956   00F27E                     u1270:
  3957   00F27E                     
  3958                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  3959   00F27E  8EA6               	bsf	166,7,c	;volsfr
  3960                           
  3961                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  3962   00F280  9CA6               	bcf	166,6,c	;volsfr
  3963                           
  3964                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  3965   00F282  84A6               	bsf	166,2,c	;volsfr
  3966                           
  3967                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  3968   00F284  9EF2               	bcf	242,7,c	;volatile
  3969   00F286                     
  3970                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  3971   00F286  0E55               	movlw	85
  3972   00F288  6EA7               	movwf	167,c	;volsfr
  3973                           
  3974                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  3975   00F28A  0EAA               	movlw	170
  3976   00F28C  6EA7               	movwf	167,c	;volsfr
  3977   00F28E                     
  3978                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  3979   00F28E  82A6               	bsf	166,1,c	;volsfr
  3980   00F290                     
  3981                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  3982   00F290  94A6               	bcf	166,2,c	;volsfr
  3983   00F292                     
  3984                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  3985   00F292  B00F               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  3986   00F294  D002               	bra	u1285
  3987   00F296  9EF2               	bcf	242,7,c	;volatile
  3988   00F298  D001               	bra	u1286
  3989   00F29A                     u1285:
  3990   00F29A  8EF2               	bsf	242,7,c	;volatile
  3991   00F29C                     u1286:
  3992   00F29C                     
  3993                           ;mcc_generated_files/memory.c: 142:  }
  3994   00F29C  2A10               	incf	FLASH_WriteBlock@j^0,f,c
  3995   00F29E                     l2254:
  3996   00F29E  5011               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  3997   00F2A0  5C10               	subwf	FLASH_WriteBlock@j^0,w,c
  3998   00F2A2  A0D8               	btfss	status,0,c
  3999   00F2A4  EF56  F079         	goto	u1291
  4000   00F2A8  EF58  F079         	goto	u1290
  4001   00F2AC                     u1291:
  4002   00F2AC  EF20  F079         	goto	l2228
  4003   00F2B0                     u1290:
  4004   00F2B0                     l490:
  4005   00F2B0  0012               	return		;funcret
  4006   00F2B2                     __end_of_FLASH_WriteBlock:
  4007                           	callstack 0
  4008                           
  4009 ;; *************** function _FLASH_EraseBlock *****************
  4010 ;; Defined at:
  4011 ;;		line 147 in file "mcc_generated_files/memory.c"
  4012 ;; Parameters:    Size  Location     Type
  4013 ;;  baseAddr        4    0[COMRAM] unsigned long 
  4014 ;; Auto vars:     Size  Location     Type
  4015 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
  4016 ;; Return value:  Size  Location     Type
  4017 ;;                  1    wreg      void 
  4018 ;; Registers used:
  4019 ;;		wreg, status,2
  4020 ;; Tracked objects:
  4021 ;;		On entry : 0/0
  4022 ;;		On exit  : 0/0
  4023 ;;		Unchanged: 0/0
  4024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4025 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4026 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4027 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4028 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4029 ;;Total ram usage:        5 bytes
  4030 ;; Hardware stack levels used: 1
  4031 ;; This function calls:
  4032 ;;		Nothing
  4033 ;; This function is called by:
  4034 ;;		_FLASH_WriteBlock
  4035 ;; This function uses a non-reentrant model
  4036 ;;
  4037                           
  4038                           	psect	text10
  4039   00EAEE                     __ptext10:
  4040                           	callstack 0
  4041   00EAEE                     _FLASH_EraseBlock:
  4042                           	callstack 27
  4043   00EAEE                     
  4044                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  4045   00EAEE  0E00               	movlw	0
  4046   00EAF0  BEF2               	btfsc	242,7,c	;volatile
  4047   00EAF2  0E01               	movlw	1
  4048   00EAF4  6E05               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  4049   00EAF6                     
  4050                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  4051   00EAF6  C003  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  4052   00EAFA                     
  4053                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  4054   00EAFA  C002  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  4055   00EAFE                     
  4056                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  4057   00EAFE  C001  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  4058   00EB02                     
  4059                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  4060   00EB02  8EA6               	bsf	166,7,c	;volsfr
  4061   00EB04                     
  4062                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  4063   00EB04  9CA6               	bcf	166,6,c	;volsfr
  4064   00EB06                     
  4065                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  4066   00EB06  84A6               	bsf	166,2,c	;volsfr
  4067   00EB08                     
  4068                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  4069   00EB08  88A6               	bsf	166,4,c	;volsfr
  4070   00EB0A                     
  4071                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  4072   00EB0A  9EF2               	bcf	242,7,c	;volatile
  4073   00EB0C                     
  4074                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  4075   00EB0C  0E55               	movlw	85
  4076   00EB0E  6EA7               	movwf	167,c	;volsfr
  4077   00EB10                     
  4078                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  4079   00EB10  0EAA               	movlw	170
  4080   00EB12  6EA7               	movwf	167,c	;volsfr
  4081   00EB14                     
  4082                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  4083   00EB14  82A6               	bsf	166,1,c	;volsfr
  4084   00EB16                     
  4085                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  4086   00EB16  B005               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  4087   00EB18  D002               	bra	u1135
  4088   00EB1A  9EF2               	bcf	242,7,c	;volatile
  4089   00EB1C  D001               	bra	u1136
  4090   00EB1E                     u1135:
  4091   00EB1E  8EF2               	bsf	242,7,c	;volatile
  4092   00EB20                     u1136:
  4093   00EB20  0012               	return		;funcret
  4094   00EB22                     __end_of_FLASH_EraseBlock:
  4095                           	callstack 0
  4096                           
  4097 ;; *************** function _FLASH_ReadByte *****************
  4098 ;; Defined at:
  4099 ;;		line 58 in file "mcc_generated_files/memory.c"
  4100 ;; Parameters:    Size  Location     Type
  4101 ;;  flashAddr       4    0[COMRAM] unsigned long 
  4102 ;; Auto vars:     Size  Location     Type
  4103 ;;		None
  4104 ;; Return value:  Size  Location     Type
  4105 ;;                  1    wreg      unsigned char 
  4106 ;; Registers used:
  4107 ;;		wreg, status,2
  4108 ;; Tracked objects:
  4109 ;;		On entry : 0/0
  4110 ;;		On exit  : 0/0
  4111 ;;		Unchanged: 0/0
  4112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4113 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4115 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4116 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4117 ;;Total ram usage:        4 bytes
  4118 ;; Hardware stack levels used: 1
  4119 ;; This function calls:
  4120 ;;		Nothing
  4121 ;; This function is called by:
  4122 ;;		_saveTimeToFlash
  4123 ;;		_loadTimeFromFlash
  4124 ;;		_FLASH_ReadWord
  4125 ;;		_FLASH_WriteByte
  4126 ;; This function uses a non-reentrant model
  4127 ;;
  4128                           
  4129                           	psect	text11
  4130   00EA12                     __ptext11:
  4131                           	callstack 0
  4132   00EA12                     _FLASH_ReadByte:
  4133                           	callstack 29
  4134   00EA12                     
  4135                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  4136   00EA12  C003  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  4137                           
  4138                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  4139   00EA16  C002  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  4140                           
  4141                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  4142   00EA1A  C001  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  4143   00EA1E  0008               	tblrd		*	;# 
  4144   00EA20                     
  4145                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  4146   00EA20  50F5               	movf	245,w,c	;volatile
  4147   00EA22  0012               	return		;funcret
  4148   00EA24                     __end_of_FLASH_ReadByte:
  4149                           	callstack 0
  4150                           
  4151 ;; *************** function _displayTime *****************
  4152 ;; Defined at:
  4153 ;;		line 84 in file "main.c"
  4154 ;; Parameters:    Size  Location     Type
  4155 ;;		None
  4156 ;; Auto vars:     Size  Location     Type
  4157 ;;  i               2   10[BANK0 ] int 
  4158 ;;  timeString      5    5[BANK0 ] unsigned char [5]
  4159 ;;  displayStrin    5    0[BANK0 ] unsigned char [5]
  4160 ;; Return value:  Size  Location     Type
  4161 ;;                  1    wreg      void 
  4162 ;; Registers used:
  4163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4164 ;; Tracked objects:
  4165 ;;		On entry : 0/0
  4166 ;;		On exit  : 0/0
  4167 ;;		Unchanged: 0/0
  4168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4169 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4170 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4172 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4173 ;;Total ram usage:       12 bytes
  4174 ;; Hardware stack levels used: 1
  4175 ;; Hardware stack levels required when called: 4
  4176 ;; This function calls:
  4177 ;;		___awdiv
  4178 ;;		___awmod
  4179 ;;		_printString
  4180 ;; This function is called by:
  4181 ;;		_main
  4182 ;;		_checkButtons
  4183 ;; This function uses a non-reentrant model
  4184 ;;
  4185                           
  4186                           	psect	text12
  4187   00EF90                     __ptext12:
  4188                           	callstack 0
  4189   00EF90                     _displayTime:
  4190                           	callstack 26
  4191   00EF90                     
  4192                           ;main.c: 86:     char timeString[5];;main.c: 89:     timeString[0] = (hours / 10) + '0';
  4193   00EF90  C05F  F001         	movff	_hours,___awdiv@dividend
  4194   00EF94  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4195   00EF96  0E00               	movlw	0
  4196   00EF98  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4197   00EF9A  0E0A               	movlw	10
  4198   00EF9C  6E03               	movwf	___awdiv@divisor^0,c
  4199   00EF9E  EC82  F078         	call	___awdiv	;wreg free
  4200   00EFA2  5001               	movf	?___awdiv^0,w,c
  4201   00EFA4  0F30               	addlw	48
  4202   00EFA6  0100               	movlb	0	; () banked
  4203   00EFA8  6FB5               	movwf	displayTime@timeString& (0+255),b
  4204                           
  4205                           ;main.c: 90:     timeString[1] = (hours % 10) + '0';
  4206   00EFAA  C05F  F001         	movff	_hours,___awmod@dividend
  4207   00EFAE  6A02               	clrf	(___awmod@dividend+1)^0,c
  4208   00EFB0  0E00               	movlw	0
  4209   00EFB2  6E04               	movwf	(___awmod@divisor+1)^0,c
  4210   00EFB4  0E0A               	movlw	10
  4211   00EFB6  6E03               	movwf	___awmod@divisor^0,c
  4212   00EFB8  EC16  F077         	call	___awmod	;wreg free
  4213   00EFBC  5001               	movf	?___awmod^0,w,c
  4214   00EFBE  0F30               	addlw	48
  4215   00EFC0  0100               	movlb	0	; () banked
  4216   00EFC2  6FB6               	movwf	(displayTime@timeString+1)& (0+255),b
  4217                           
  4218                           ;main.c: 91:     timeString[2] = (minutes / 10) + '0';
  4219   00EFC4  C05E  F001         	movff	_minutes,___awdiv@dividend
  4220   00EFC8  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4221   00EFCA  0E00               	movlw	0
  4222   00EFCC  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4223   00EFCE  0E0A               	movlw	10
  4224   00EFD0  6E03               	movwf	___awdiv@divisor^0,c
  4225   00EFD2  EC82  F078         	call	___awdiv	;wreg free
  4226   00EFD6  5001               	movf	?___awdiv^0,w,c
  4227   00EFD8  0F30               	addlw	48
  4228   00EFDA  0100               	movlb	0	; () banked
  4229   00EFDC  6FB7               	movwf	(displayTime@timeString+2)& (0+255),b
  4230                           
  4231                           ;main.c: 92:     timeString[3] = (minutes % 10) + '0';
  4232   00EFDE  C05E  F001         	movff	_minutes,___awmod@dividend
  4233   00EFE2  6A02               	clrf	(___awmod@dividend+1)^0,c
  4234   00EFE4  0E00               	movlw	0
  4235   00EFE6  6E04               	movwf	(___awmod@divisor+1)^0,c
  4236   00EFE8  0E0A               	movlw	10
  4237   00EFEA  6E03               	movwf	___awmod@divisor^0,c
  4238   00EFEC  EC16  F077         	call	___awmod	;wreg free
  4239   00EFF0  5001               	movf	?___awmod^0,w,c
  4240   00EFF2  0F30               	addlw	48
  4241   00EFF4  0100               	movlb	0	; () banked
  4242   00EFF6  6FB8               	movwf	(displayTime@timeString+3)& (0+255),b
  4243   00EFF8                     
  4244                           ; BSR set to: 0
  4245                           ;main.c: 93:     timeString[4] = '\0';
  4246   00EFF8  0E00               	movlw	0
  4247   00EFFA  6FB9               	movwf	(displayTime@timeString+4)& (0+255),b
  4248   00EFFC                     
  4249                           ; BSR set to: 0
  4250                           ;main.c: 96:     uint8_t displayString[5];;main.c: 97:     for (int i = 0; i < 5; i++) {
  4251   00EFFC  0E00               	movlw	0
  4252   00EFFE  6FBB               	movwf	(displayTime@i+1)& (0+255),b
  4253   00F000  0E00               	movlw	0
  4254   00F002  6FBA               	movwf	displayTime@i& (0+255),b
  4255   00F004                     l2334:
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;main.c: 98:         displayString[i] = (uint8_t)timeString[i];
  4259   00F004  51BA               	movf	displayTime@i& (0+255),w,b
  4260   00F006  0FB5               	addlw	low displayTime@timeString
  4261   00F008  6ED9               	movwf	fsr2l,c
  4262   00F00A  6ADA               	clrf	fsr2h,c
  4263   00F00C  51BA               	movf	displayTime@i& (0+255),w,b
  4264   00F00E  0FB0               	addlw	low displayTime@displayString
  4265   00F010  6EE1               	movwf	fsr1l,c
  4266   00F012  6AE2               	clrf	fsr1h,c
  4267   00F014  CFDF FFE7          	movff	indf2,indf1
  4268   00F018                     
  4269                           ; BSR set to: 0
  4270                           ;main.c: 99:     }
  4271   00F018  4BBA               	infsnz	displayTime@i& (0+255),f,b
  4272   00F01A  2BBB               	incf	(displayTime@i+1)& (0+255),f,b
  4273   00F01C                     
  4274                           ; BSR set to: 0
  4275   00F01C  BFBB               	btfsc	(displayTime@i+1)& (0+255),7,b
  4276   00F01E  EF1A  F078         	goto	u1361
  4277   00F022  51BB               	movf	(displayTime@i+1)& (0+255),w,b
  4278   00F024  E109               	bnz	u1360
  4279   00F026  0E05               	movlw	5
  4280   00F028  5DBA               	subwf	displayTime@i& (0+255),w,b
  4281   00F02A  A0D8               	btfss	status,0,c
  4282   00F02C  EF1A  F078         	goto	u1361
  4283   00F030  EF1C  F078         	goto	u1360
  4284   00F034                     u1361:
  4285   00F034  EF02  F078         	goto	l2334
  4286   00F038                     u1360:
  4287   00F038                     
  4288                           ; BSR set to: 0
  4289                           ;main.c: 101:     printString(displayString);
  4290   00F038  0EB0               	movlw	low displayTime@displayString
  4291   00F03A  6E41               	movwf	printString@str^0,c
  4292   00F03C  6A42               	clrf	(printString@str+1)^0,c
  4293   00F03E  ECF0  F079         	call	_printString	;wreg free
  4294   00F042  0012               	return		;funcret
  4295   00F044                     __end_of_displayTime:
  4296                           	callstack 0
  4297                           
  4298 ;; *************** function _displayAlarmTime *****************
  4299 ;; Defined at:
  4300 ;;		line 104 in file "main.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;  i               2   10[BANK0 ] int 
  4305 ;;  alarmTimeStr    5    5[BANK0 ] unsigned char [5]
  4306 ;;  displayStrin    5    0[BANK0 ] unsigned char [5]
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4317 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4319 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4320 ;;Total ram usage:       12 bytes
  4321 ;; Hardware stack levels used: 1
  4322 ;; Hardware stack levels required when called: 4
  4323 ;; This function calls:
  4324 ;;		___awdiv
  4325 ;;		___awmod
  4326 ;;		_printString
  4327 ;; This function is called by:
  4328 ;;		_checkButtons
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text13
  4333   00EEDC                     __ptext13:
  4334                           	callstack 0
  4335   00EEDC                     _displayAlarmTime:
  4336                           	callstack 25
  4337   00EEDC                     
  4338                           ;main.c: 106:     char alarmTimeString[5];;main.c: 109:     alarmTimeString[0] = (alarmH
      +                          ours / 10) + '0';
  4339   00EEDC  C0AE  F001         	movff	_alarmHours,___awdiv@dividend
  4340   00EEE0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4341   00EEE2  0E00               	movlw	0
  4342   00EEE4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4343   00EEE6  0E0A               	movlw	10
  4344   00EEE8  6E03               	movwf	___awdiv@divisor^0,c
  4345   00EEEA  EC82  F078         	call	___awdiv	;wreg free
  4346   00EEEE  5001               	movf	?___awdiv^0,w,c
  4347   00EEF0  0F30               	addlw	48
  4348   00EEF2  0100               	movlb	0	; () banked
  4349   00EEF4  6FB5               	movwf	displayAlarmTime@alarmTimeString& (0+255),b
  4350                           
  4351                           ;main.c: 110:     alarmTimeString[1] = (alarmHours % 10) + '0';
  4352   00EEF6  C0AE  F001         	movff	_alarmHours,___awmod@dividend
  4353   00EEFA  6A02               	clrf	(___awmod@dividend+1)^0,c
  4354   00EEFC  0E00               	movlw	0
  4355   00EEFE  6E04               	movwf	(___awmod@divisor+1)^0,c
  4356   00EF00  0E0A               	movlw	10
  4357   00EF02  6E03               	movwf	___awmod@divisor^0,c
  4358   00EF04  EC16  F077         	call	___awmod	;wreg free
  4359   00EF08  5001               	movf	?___awmod^0,w,c
  4360   00EF0A  0F30               	addlw	48
  4361   00EF0C  0100               	movlb	0	; () banked
  4362   00EF0E  6FB6               	movwf	(displayAlarmTime@alarmTimeString+1)& (0+255),b
  4363                           
  4364                           ;main.c: 111:     alarmTimeString[2] = (alarmMinutes / 10) + '0';
  4365   00EF10  C0AD  F001         	movff	_alarmMinutes,___awdiv@dividend
  4366   00EF14  6A02               	clrf	(___awdiv@dividend+1)^0,c
  4367   00EF16  0E00               	movlw	0
  4368   00EF18  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4369   00EF1A  0E0A               	movlw	10
  4370   00EF1C  6E03               	movwf	___awdiv@divisor^0,c
  4371   00EF1E  EC82  F078         	call	___awdiv	;wreg free
  4372   00EF22  5001               	movf	?___awdiv^0,w,c
  4373   00EF24  0F30               	addlw	48
  4374   00EF26  0100               	movlb	0	; () banked
  4375   00EF28  6FB7               	movwf	(displayAlarmTime@alarmTimeString+2)& (0+255),b
  4376                           
  4377                           ;main.c: 112:     alarmTimeString[3] = (alarmMinutes % 10) + '0';
  4378   00EF2A  C0AD  F001         	movff	_alarmMinutes,___awmod@dividend
  4379   00EF2E  6A02               	clrf	(___awmod@dividend+1)^0,c
  4380   00EF30  0E00               	movlw	0
  4381   00EF32  6E04               	movwf	(___awmod@divisor+1)^0,c
  4382   00EF34  0E0A               	movlw	10
  4383   00EF36  6E03               	movwf	___awmod@divisor^0,c
  4384   00EF38  EC16  F077         	call	___awmod	;wreg free
  4385   00EF3C  5001               	movf	?___awmod^0,w,c
  4386   00EF3E  0F30               	addlw	48
  4387   00EF40  0100               	movlb	0	; () banked
  4388   00EF42  6FB8               	movwf	(displayAlarmTime@alarmTimeString+3)& (0+255),b
  4389   00EF44                     
  4390                           ; BSR set to: 0
  4391                           ;main.c: 113:     alarmTimeString[4] = '\0';
  4392   00EF44  0E00               	movlw	0
  4393   00EF46  6FB9               	movwf	(displayAlarmTime@alarmTimeString+4)& (0+255),b
  4394   00EF48                     
  4395                           ; BSR set to: 0
  4396                           ;main.c: 116:     uint8_t displayString[5];;main.c: 117:     for (int i = 0; i < 5; i++)
      +                           {
  4397   00EF48  0E00               	movlw	0
  4398   00EF4A  6FBB               	movwf	(displayAlarmTime@i+1)& (0+255),b
  4399   00EF4C  0E00               	movlw	0
  4400   00EF4E  6FBA               	movwf	displayAlarmTime@i& (0+255),b
  4401   00EF50                     l2352:
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;main.c: 118:         displayString[i] = (uint8_t)alarmTimeString[i];
  4405   00EF50  51BA               	movf	displayAlarmTime@i& (0+255),w,b
  4406   00EF52  0FB5               	addlw	low displayAlarmTime@alarmTimeString
  4407   00EF54  6ED9               	movwf	fsr2l,c
  4408   00EF56  6ADA               	clrf	fsr2h,c
  4409   00EF58  51BA               	movf	displayAlarmTime@i& (0+255),w,b
  4410   00EF5A  0FB0               	addlw	low displayAlarmTime@displayString
  4411   00EF5C  6EE1               	movwf	fsr1l,c
  4412   00EF5E  6AE2               	clrf	fsr1h,c
  4413   00EF60  CFDF FFE7          	movff	indf2,indf1
  4414   00EF64                     
  4415                           ; BSR set to: 0
  4416                           ;main.c: 119:     }
  4417   00EF64  4BBA               	infsnz	displayAlarmTime@i& (0+255),f,b
  4418   00EF66  2BBB               	incf	(displayAlarmTime@i+1)& (0+255),f,b
  4419   00EF68                     
  4420                           ; BSR set to: 0
  4421   00EF68  BFBB               	btfsc	(displayAlarmTime@i+1)& (0+255),7,b
  4422   00EF6A  EFC0  F077         	goto	u1371
  4423   00EF6E  51BB               	movf	(displayAlarmTime@i+1)& (0+255),w,b
  4424   00EF70  E109               	bnz	u1370
  4425   00EF72  0E05               	movlw	5
  4426   00EF74  5DBA               	subwf	displayAlarmTime@i& (0+255),w,b
  4427   00EF76  A0D8               	btfss	status,0,c
  4428   00EF78  EFC0  F077         	goto	u1371
  4429   00EF7C  EFC2  F077         	goto	u1370
  4430   00EF80                     u1371:
  4431   00EF80  EFA8  F077         	goto	l2352
  4432   00EF84                     u1370:
  4433   00EF84                     
  4434                           ; BSR set to: 0
  4435                           ;main.c: 121:     printString(displayString);
  4436   00EF84  0EB0               	movlw	low displayAlarmTime@displayString
  4437   00EF86  6E41               	movwf	printString@str^0,c
  4438   00EF88  6A42               	clrf	(printString@str+1)^0,c
  4439   00EF8A  ECF0  F079         	call	_printString	;wreg free
  4440   00EF8E  0012               	return		;funcret
  4441   00EF90                     __end_of_displayAlarmTime:
  4442                           	callstack 0
  4443                           
  4444 ;; *************** function _printString *****************
  4445 ;; Defined at:
  4446 ;;		line 161 in file "MAX7219.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  str             2   64[COMRAM] PTR unsigned char 
  4449 ;;		 -> STR_1(6), displayAlarmTime@displayString(5), displayTime@displayString(5), 
  4450 ;; Auto vars:     Size  Location     Type
  4451 ;;  j               2   83[COMRAM] int 
  4452 ;;  data            1   76[COMRAM] unsigned char 
  4453 ;;  i               2   79[COMRAM] int 
  4454 ;;  indx            2   74[COMRAM] int 
  4455 ;;  k               2   81[COMRAM] int 
  4456 ;;  strindx         2   77[COMRAM] int 
  4457 ;; Return value:  Size  Location     Type
  4458 ;;                  1    wreg      void 
  4459 ;; Registers used:
  4460 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4461 ;; Tracked objects:
  4462 ;;		On entry : 0/0
  4463 ;;		On exit  : 0/0
  4464 ;;		Unchanged: 0/0
  4465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4467 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4468 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4469 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4470 ;;Total ram usage:       21 bytes
  4471 ;; Hardware stack levels used: 1
  4472 ;; Hardware stack levels required when called: 3
  4473 ;; This function calls:
  4474 ;;		_flushBuffer
  4475 ;; This function is called by:
  4476 ;;		_displayTime
  4477 ;;		_displayAlarmTime
  4478 ;;		_triggerAlarm
  4479 ;; This function uses a non-reentrant model
  4480 ;;
  4481                           
  4482                           	psect	text14
  4483   00F3E0                     __ptext14:
  4484                           	callstack 0
  4485   00F3E0                     _printString:
  4486                           	callstack 25
  4487   00F3E0                     
  4488                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  4489   00F3E0  0E00               	movlw	0
  4490   00F3E2  6E4F               	movwf	(printString@strindx+1)^0,c
  4491   00F3E4  0E00               	movlw	0
  4492   00F3E6  6E4E               	movwf	printString@strindx^0,c
  4493                           
  4494                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  4495   00F3E8  0E00               	movlw	0
  4496   00F3EA  6E53               	movwf	(printString@k+1)^0,c
  4497   00F3EC  0E1F               	movlw	31
  4498   00F3EE  6E52               	movwf	printString@k^0,c
  4499                           
  4500                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  4501   00F3F0  EF91  F07A         	goto	l2194
  4502   00F3F4                     l2154:
  4503                           
  4504                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  4505   00F3F4  0E00               	movlw	0
  4506   00F3F6  6E4C               	movwf	(printString@indx+1)^0,c
  4507   00F3F8  0E00               	movlw	0
  4508   00F3FA  6E4B               	movwf	printString@indx^0,c
  4509                           
  4510                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  4511   00F3FC  0E00               	movlw	0
  4512   00F3FE  6E51               	movwf	(printString@i+1)^0,c
  4513   00F400  0E00               	movlw	0
  4514   00F402  6E50               	movwf	printString@i^0,c
  4515   00F404                     l2160:
  4516                           
  4517                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  4518   00F404  0E00               	movlw	0
  4519   00F406  6E4D               	movwf	printString@data^0,c
  4520                           
  4521                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  4522   00F408  0E00               	movlw	0
  4523   00F40A  6E55               	movwf	(printString@j+1)^0,c
  4524   00F40C  0E07               	movlw	7
  4525   00F40E  6E54               	movwf	printString@j^0,c
  4526   00F410                     l2166:
  4527                           
  4528                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  4529   00F410  504E               	movf	printString@strindx^0,w,c
  4530   00F412  2441               	addwf	printString@str^0,w,c
  4531   00F414  6E43               	movwf	??_printString^0,c
  4532   00F416  504F               	movf	(printString@strindx+1)^0,w,c
  4533   00F418  2042               	addwfc	(printString@str+1)^0,w,c
  4534   00F41A  6E44               	movwf	(??_printString+1)^0,c
  4535   00F41C  C043  FFF6         	movff	??_printString,tblptrl
  4536   00F420  C044  FFF7         	movff	??_printString+1,tblptrh
  4537   00F424  0E00               	movlw	low (__mediumconst shr (0+16))
  4538   00F426  6EF8               	movwf	tblptru,c
  4539   00F428  0E0F               	movlw	(high __ramtop+-1)
  4540   00F42A  64F7               	cpfsgt	tblptrh,c
  4541   00F42C  D003               	bra	u1157
  4542   00F42E  0008               	tblrd		*
  4543   00F430  50F5               	movf	tablat,w,c
  4544   00F432  D005               	bra	u1150
  4545   00F434                     u1157:
  4546   00F434  CFF6 FFE1          	movff	tblptrl,fsr1l
  4547   00F438  CFF7 FFE2          	movff	tblptrh,fsr1h
  4548   00F43C  50E7               	movf	indf1,w,c
  4549   00F43E                     u1150:
  4550   00F43E  6E45               	movwf	(??_printString+2)^0,c
  4551   00F440  5045               	movf	(??_printString+2)^0,w,c
  4552   00F442  0D08               	mullw	8
  4553   00F444  0EF9               	movlw	low _MAX7219_Dot_Matrix_font
  4554   00F446  24F3               	addwf	243,w,c
  4555   00F448  6E46               	movwf	(??_printString+3)^0,c
  4556   00F44A  0EF7               	movlw	high _MAX7219_Dot_Matrix_font
  4557   00F44C  20F4               	addwfc	prodh,w,c
  4558   00F44E  6E47               	movwf	(??_printString+4)^0,c
  4559   00F450  504B               	movf	printString@indx^0,w,c
  4560   00F452  2646               	addwf	(??_printString+3)^0,f,c
  4561   00F454  504C               	movf	(printString@indx+1)^0,w,c
  4562   00F456  2247               	addwfc	(??_printString+4)^0,f,c
  4563   00F458  C046  FFF6         	movff	??_printString+3,tblptrl
  4564   00F45C  C047  FFF7         	movff	??_printString+4,tblptrh
  4565   00F460                     	if	0	;tblptru may be non-zero
  4566   00F460                     	endif
  4567   00F460                     	if	0	;tblptru may be non-zero
  4568   00F460                     	endif
  4569   00F460  0008               	tblrd		*
  4570   00F462  CFF5 F048          	movff	tablat,??_printString+5
  4571   00F466  C054  F049         	movff	printString@j,??_printString+6
  4572   00F46A  0E01               	movlw	1
  4573   00F46C  6E4A               	movwf	(??_printString+7)^0,c
  4574   00F46E  2A49               	incf	(??_printString+6)^0,f,c
  4575   00F470  EF3C  F07A         	goto	u1164
  4576   00F474                     u1165:
  4577   00F474  90D8               	bcf	status,0,c
  4578   00F476  364A               	rlcf	(??_printString+7)^0,f,c
  4579   00F478                     u1164:
  4580   00F478  2E49               	decfsz	(??_printString+6)^0,f,c
  4581   00F47A  EF3A  F07A         	goto	u1165
  4582   00F47E  504A               	movf	(??_printString+7)^0,w,c
  4583   00F480  1448               	andwf	(??_printString+5)^0,w,c
  4584   00F482  0900               	iorlw	0
  4585   00F484  B4D8               	btfsc	status,2,c
  4586   00F486  EF47  F07A         	goto	u1171
  4587   00F48A  EF49  F07A         	goto	u1170
  4588   00F48E                     u1171:
  4589   00F48E  EF58  F07A         	goto	l2170
  4590   00F492                     u1170:
  4591   00F492                     
  4592                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  4593   00F492  5054               	movf	printString@j^0,w,c
  4594   00F494  0807               	sublw	7
  4595   00F496  6E43               	movwf	??_printString^0,c
  4596   00F498  0E01               	movlw	1
  4597   00F49A  6E44               	movwf	(??_printString+1)^0,c
  4598   00F49C  2A43               	incf	??_printString^0,f,c
  4599   00F49E  EF53  F07A         	goto	u1184
  4600   00F4A2                     u1185:
  4601   00F4A2  90D8               	bcf	status,0,c
  4602   00F4A4  3644               	rlcf	(??_printString+1)^0,f,c
  4603   00F4A6                     u1184:
  4604   00F4A6  2E43               	decfsz	??_printString^0,f,c
  4605   00F4A8  EF51  F07A         	goto	u1185
  4606   00F4AC  5044               	movf	(??_printString+1)^0,w,c
  4607   00F4AE  124D               	iorwf	printString@data^0,f,c
  4608   00F4B0                     l2170:
  4609                           
  4610                           ;MAX7219.c: 179:             }
  4611   00F4B0  0654               	decf	printString@j^0,f,c
  4612   00F4B2  A0D8               	btfss	status,0,c
  4613   00F4B4  0655               	decf	(printString@j+1)^0,f,c
  4614   00F4B6  BE55               	btfsc	(printString@j+1)^0,7,c
  4615   00F4B8  EF62  F07A         	goto	u1190
  4616   00F4BC  EF60  F07A         	goto	u1191
  4617   00F4C0                     u1191:
  4618   00F4C0  EF08  F07A         	goto	l2166
  4619   00F4C4                     u1190:
  4620   00F4C4                     
  4621                           ;MAX7219.c: 180:             if (k < 0) break;
  4622   00F4C4  BE53               	btfsc	(printString@k+1)^0,7,c
  4623   00F4C6  EF69  F07A         	goto	u1200
  4624   00F4CA  EF67  F07A         	goto	u1201
  4625   00F4CE                     u1201:
  4626   00F4CE  EF6B  F07A         	goto	l2178
  4627   00F4D2                     u1200:
  4628   00F4D2  EF86  F07A         	goto	l2188
  4629   00F4D6                     l2178:
  4630                           
  4631                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  4632   00F4D6  5052               	movf	printString@k^0,w,c
  4633   00F4D8  0F80               	addlw	low _bufferCol
  4634   00F4DA  6ED9               	movwf	fsr2l,c
  4635   00F4DC  6ADA               	clrf	fsr2h,c
  4636   00F4DE  C04D  FFDF         	movff	printString@data,indf2
  4637   00F4E2  0652               	decf	printString@k^0,f,c
  4638   00F4E4  A0D8               	btfss	status,0,c
  4639   00F4E6  0653               	decf	(printString@k+1)^0,f,c
  4640   00F4E8                     
  4641                           ;MAX7219.c: 182:             indx++;
  4642   00F4E8  4A4B               	infsnz	printString@indx^0,f,c
  4643   00F4EA  2A4C               	incf	(printString@indx+1)^0,f,c
  4644   00F4EC                     
  4645                           ;MAX7219.c: 183:         }
  4646   00F4EC  4A50               	infsnz	printString@i^0,f,c
  4647   00F4EE  2A51               	incf	(printString@i+1)^0,f,c
  4648   00F4F0  BE51               	btfsc	(printString@i+1)^0,7,c
  4649   00F4F2  EF84  F07A         	goto	u1211
  4650   00F4F6  5051               	movf	(printString@i+1)^0,w,c
  4651   00F4F8  E109               	bnz	u1210
  4652   00F4FA  0E08               	movlw	8
  4653   00F4FC  5C50               	subwf	printString@i^0,w,c
  4654   00F4FE  A0D8               	btfss	status,0,c
  4655   00F500  EF84  F07A         	goto	u1211
  4656   00F504  EF86  F07A         	goto	u1210
  4657   00F508                     u1211:
  4658   00F508  EF02  F07A         	goto	l2160
  4659   00F50C                     u1210:
  4660   00F50C                     l2188:
  4661                           
  4662                           ;MAX7219.c: 184:         strindx++;
  4663   00F50C  4A4E               	infsnz	printString@strindx^0,f,c
  4664   00F50E  2A4F               	incf	(printString@strindx+1)^0,f,c
  4665   00F510                     
  4666                           ;MAX7219.c: 185:         if (k < 0) break;
  4667   00F510  BE53               	btfsc	(printString@k+1)^0,7,c
  4668   00F512  EF8F  F07A         	goto	u1220
  4669   00F516  EF8D  F07A         	goto	u1221
  4670   00F51A                     u1221:
  4671   00F51A  EF91  F07A         	goto	l2194
  4672   00F51E                     u1220:
  4673   00F51E  EFB0  F07A         	goto	l2196
  4674   00F522                     l2194:
  4675                           
  4676                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  4677   00F522  504E               	movf	printString@strindx^0,w,c
  4678   00F524  2441               	addwf	printString@str^0,w,c
  4679   00F526  6E43               	movwf	??_printString^0,c
  4680   00F528  504F               	movf	(printString@strindx+1)^0,w,c
  4681   00F52A  2042               	addwfc	(printString@str+1)^0,w,c
  4682   00F52C  6E44               	movwf	(??_printString+1)^0,c
  4683   00F52E  C043  FFF6         	movff	??_printString,tblptrl
  4684   00F532  C044  FFF7         	movff	??_printString+1,tblptrh
  4685   00F536  0E00               	movlw	low (__mediumconst shr (0+16))
  4686   00F538  6EF8               	movwf	tblptru,c
  4687   00F53A  0E0F               	movlw	(high __ramtop+-1)
  4688   00F53C  64F7               	cpfsgt	tblptrh,c
  4689   00F53E  D003               	bra	u1237
  4690   00F540  0008               	tblrd		*
  4691   00F542  50F5               	movf	tablat,w,c
  4692   00F544  D005               	bra	u1230
  4693   00F546                     u1237:
  4694   00F546  CFF6 FFE1          	movff	tblptrl,fsr1l
  4695   00F54A  CFF7 FFE2          	movff	tblptrh,fsr1h
  4696   00F54E  50E7               	movf	indf1,w,c
  4697   00F550                     u1230:
  4698   00F550  0900               	iorlw	0
  4699   00F552  A4D8               	btfss	status,2,c
  4700   00F554  EFAE  F07A         	goto	u1241
  4701   00F558  EFB0  F07A         	goto	u1240
  4702   00F55C                     u1241:
  4703   00F55C  EFFA  F079         	goto	l2154
  4704   00F560                     u1240:
  4705   00F560                     l2196:
  4706                           
  4707                           ;MAX7219.c: 188:     flushBuffer();
  4708   00F560  EC59  F079         	call	_flushBuffer	;wreg free
  4709   00F564  0012               	return		;funcret
  4710   00F566                     __end_of_printString:
  4711                           	callstack 0
  4712                           
  4713 ;; *************** function _flushBuffer *****************
  4714 ;; Defined at:
  4715 ;;		line 52 in file "MAX7219.c"
  4716 ;; Parameters:    Size  Location     Type
  4717 ;;		None
  4718 ;; Auto vars:     Size  Location     Type
  4719 ;;  j               2   58[COMRAM] int 
  4720 ;;  dev             2   56[COMRAM] int 
  4721 ;;  row             2   60[COMRAM] int 
  4722 ;;  i               2   62[COMRAM] int 
  4723 ;;  bufferRow      32   24[COMRAM] unsigned char [32]
  4724 ;; Return value:  Size  Location     Type
  4725 ;;                  1    wreg      void 
  4726 ;; Registers used:
  4727 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4728 ;; Tracked objects:
  4729 ;;		On entry : 0/0
  4730 ;;		On exit  : 0/0
  4731 ;;		Unchanged: 0/0
  4732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4733 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4734 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4735 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4736 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;Total ram usage:       43 bytes
  4738 ;; Hardware stack levels used: 1
  4739 ;; Hardware stack levels required when called: 2
  4740 ;; This function calls:
  4741 ;;		___awdiv
  4742 ;;		_max_write
  4743 ;; This function is called by:
  4744 ;;		_clearDisplay
  4745 ;;		_printString
  4746 ;;		_shiftLeft
  4747 ;;		_shiftchar
  4748 ;; This function uses a non-reentrant model
  4749 ;;
  4750                           
  4751                           	psect	text15
  4752   00F2B2                     __ptext15:
  4753                           	callstack 0
  4754   00F2B2                     _flushBuffer:
  4755                           	callstack 25
  4756   00F2B2                     
  4757                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  4758   00F2B2  EE20  F019         	lfsr	2,flushBuffer@bufferRow
  4759   00F2B6  0E1F               	movlw	31
  4760   00F2B8                     u1061:
  4761   00F2B8  6ADE               	clrf	postinc2,c
  4762   00F2BA  06E8               	decf	wreg,f,c
  4763   00F2BC  E2FD               	bc	u1061
  4764   00F2BE                     
  4765                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  4766   00F2BE  0E00               	movlw	0
  4767   00F2C0  6E40               	movwf	(flushBuffer@i+1)^0,c
  4768   00F2C2  0E00               	movlw	0
  4769   00F2C4  6E3F               	movwf	flushBuffer@i^0,c
  4770   00F2C6                     l2080:
  4771                           
  4772                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  4773   00F2C6  C03F  F001         	movff	flushBuffer@i,___awdiv@dividend
  4774   00F2CA  C040  F002         	movff	flushBuffer@i+1,___awdiv@dividend+1
  4775   00F2CE  0E00               	movlw	0
  4776   00F2D0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4777   00F2D2  0E08               	movlw	8
  4778   00F2D4  6E03               	movwf	___awdiv@divisor^0,c
  4779   00F2D6  EC82  F078         	call	___awdiv	;wreg free
  4780   00F2DA  C001  F039         	movff	?___awdiv,flushBuffer@dev
  4781   00F2DE  C002  F03A         	movff	?___awdiv+1,flushBuffer@dev+1
  4782   00F2E2                     
  4783                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  4784   00F2E2  0E00               	movlw	0
  4785   00F2E4  6E3C               	movwf	(flushBuffer@j+1)^0,c
  4786   00F2E6  0E00               	movlw	0
  4787   00F2E8  6E3B               	movwf	flushBuffer@j^0,c
  4788   00F2EA                     l2088:
  4789                           
  4790                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  4791   00F2EA  503F               	movf	flushBuffer@i^0,w,c
  4792   00F2EC  0F80               	addlw	low _bufferCol
  4793   00F2EE  6ED9               	movwf	fsr2l,c
  4794   00F2F0  6ADA               	clrf	fsr2h,c
  4795   00F2F2  50DF               	movf	indf2,w,c
  4796   00F2F4  6E16               	movwf	??_flushBuffer^0,c
  4797   00F2F6  C03B  F017         	movff	flushBuffer@j,??_flushBuffer+1
  4798   00F2FA  0E01               	movlw	1
  4799   00F2FC  6E18               	movwf	(??_flushBuffer+2)^0,c
  4800   00F2FE  2A17               	incf	(??_flushBuffer+1)^0,f,c
  4801   00F300  EF84  F079         	goto	u1074
  4802   00F304                     u1075:
  4803   00F304  90D8               	bcf	status,0,c
  4804   00F306  3618               	rlcf	(??_flushBuffer+2)^0,f,c
  4805   00F308                     u1074:
  4806   00F308  2E17               	decfsz	(??_flushBuffer+1)^0,f,c
  4807   00F30A  EF82  F079         	goto	u1075
  4808   00F30E  5018               	movf	(??_flushBuffer+2)^0,w,c
  4809   00F310  1416               	andwf	??_flushBuffer^0,w,c
  4810   00F312  0900               	iorlw	0
  4811   00F314  B4D8               	btfsc	status,2,c
  4812   00F316  EF8F  F079         	goto	u1081
  4813   00F31A  EF91  F079         	goto	u1080
  4814   00F31E                     u1081:
  4815   00F31E  EFAB  F079         	goto	l2092
  4816   00F322                     u1080:
  4817   00F322                     
  4818                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  4819   00F322  5039               	movf	flushBuffer@dev^0,w,c
  4820   00F324  0D08               	mullw	8
  4821   00F326  503F               	movf	flushBuffer@i^0,w,c
  4822   00F328  5CF3               	subwf	243,w,c
  4823   00F32A  6E16               	movwf	??_flushBuffer^0,c
  4824   00F32C  0E07               	movlw	7
  4825   00F32E  2616               	addwf	??_flushBuffer^0,f,c
  4826   00F330  0E01               	movlw	1
  4827   00F332  6E17               	movwf	(??_flushBuffer+1)^0,c
  4828   00F334  2A16               	incf	??_flushBuffer^0,f,c
  4829   00F336  EF9F  F079         	goto	u1094
  4830   00F33A                     u1095:
  4831   00F33A  90D8               	bcf	status,0,c
  4832   00F33C  3617               	rlcf	(??_flushBuffer+1)^0,f,c
  4833   00F33E                     u1094:
  4834   00F33E  2E16               	decfsz	??_flushBuffer^0,f,c
  4835   00F340  EF9D  F079         	goto	u1095
  4836   00F344  5039               	movf	flushBuffer@dev^0,w,c
  4837   00F346  0D08               	mullw	8
  4838   00F348  50F3               	movf	243,w,c
  4839   00F34A  0F19               	addlw	low flushBuffer@bufferRow
  4840   00F34C  243B               	addwf	flushBuffer@j^0,w,c
  4841   00F34E  6ED9               	movwf	fsr2l,c
  4842   00F350  6ADA               	clrf	fsr2h,c
  4843   00F352  5017               	movf	(??_flushBuffer+1)^0,w,c
  4844   00F354  12DF               	iorwf	indf2,f,c
  4845   00F356                     l2092:
  4846                           
  4847                           ;MAX7219.c: 66:   }
  4848   00F356  4A3B               	infsnz	flushBuffer@j^0,f,c
  4849   00F358  2A3C               	incf	(flushBuffer@j+1)^0,f,c
  4850   00F35A  BE3C               	btfsc	(flushBuffer@j+1)^0,7,c
  4851   00F35C  EFB9  F079         	goto	u1101
  4852   00F360  503C               	movf	(flushBuffer@j+1)^0,w,c
  4853   00F362  E109               	bnz	u1100
  4854   00F364  0E08               	movlw	8
  4855   00F366  5C3B               	subwf	flushBuffer@j^0,w,c
  4856   00F368  A0D8               	btfss	status,0,c
  4857   00F36A  EFB9  F079         	goto	u1101
  4858   00F36E  EFBB  F079         	goto	u1100
  4859   00F372                     u1101:
  4860   00F372  EF75  F079         	goto	l2088
  4861   00F376                     u1100:
  4862   00F376                     
  4863                           ;MAX7219.c: 67:  }
  4864   00F376  4A3F               	infsnz	flushBuffer@i^0,f,c
  4865   00F378  2A40               	incf	(flushBuffer@i+1)^0,f,c
  4866   00F37A  BE40               	btfsc	(flushBuffer@i+1)^0,7,c
  4867   00F37C  EFC9  F079         	goto	u1111
  4868   00F380  5040               	movf	(flushBuffer@i+1)^0,w,c
  4869   00F382  E109               	bnz	u1110
  4870   00F384  0E20               	movlw	32
  4871   00F386  5C3F               	subwf	flushBuffer@i^0,w,c
  4872   00F388  A0D8               	btfss	status,0,c
  4873   00F38A  EFC9  F079         	goto	u1111
  4874   00F38E  EFCB  F079         	goto	u1110
  4875   00F392                     u1111:
  4876   00F392  EF63  F079         	goto	l2080
  4877   00F396                     u1110:
  4878   00F396                     
  4879                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  4880   00F396  0E00               	movlw	0
  4881   00F398  6E3E               	movwf	(flushBuffer@row+1)^0,c
  4882   00F39A  0E01               	movlw	1
  4883   00F39C  6E3D               	movwf	flushBuffer@row^0,c
  4884   00F39E                     l2106:
  4885                           
  4886                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  4887   00F39E  C03D  F009         	movff	flushBuffer@row,max_write@row
  4888   00F3A2  C03E  F00A         	movff	flushBuffer@row+1,max_write@row+1
  4889   00F3A6  C03D  F016         	movff	flushBuffer@row,??_flushBuffer
  4890   00F3AA  0EFF               	movlw	255
  4891   00F3AC  2616               	addwf	??_flushBuffer^0,f,c
  4892   00F3AE  5016               	movf	??_flushBuffer^0,w,c
  4893   00F3B0  0F19               	addlw	low flushBuffer@bufferRow
  4894   00F3B2  6ED9               	movwf	fsr2l,c
  4895   00F3B4  6ADA               	clrf	fsr2h,c
  4896   00F3B6  50DF               	movf	indf2,w,c
  4897   00F3B8  6E0B               	movwf	max_write@data^0,c
  4898   00F3BA  EC22  F078         	call	_max_write	;wreg free
  4899   00F3BE                     
  4900                           ;MAX7219.c: 73:  }
  4901   00F3BE  4A3D               	infsnz	flushBuffer@row^0,f,c
  4902   00F3C0  2A3E               	incf	(flushBuffer@row+1)^0,f,c
  4903   00F3C2  BE3E               	btfsc	(flushBuffer@row+1)^0,7,c
  4904   00F3C4  EFED  F079         	goto	u1121
  4905   00F3C8  503E               	movf	(flushBuffer@row+1)^0,w,c
  4906   00F3CA  E109               	bnz	u1120
  4907   00F3CC  0E21               	movlw	33
  4908   00F3CE  5C3D               	subwf	flushBuffer@row^0,w,c
  4909   00F3D0  A0D8               	btfss	status,0,c
  4910   00F3D2  EFED  F079         	goto	u1121
  4911   00F3D6  EFEF  F079         	goto	u1120
  4912   00F3DA                     u1121:
  4913   00F3DA  EFCF  F079         	goto	l2106
  4914   00F3DE                     u1120:
  4915   00F3DE  0012               	return		;funcret
  4916   00F3E0                     __end_of_flushBuffer:
  4917                           	callstack 0
  4918                           
  4919 ;; *************** function _max_write *****************
  4920 ;; Defined at:
  4921 ;;		line 10 in file "MAX7219.c"
  4922 ;; Parameters:    Size  Location     Type
  4923 ;;  row             2    8[COMRAM] int 
  4924 ;;  data            1   10[COMRAM] unsigned char 
  4925 ;; Auto vars:     Size  Location     Type
  4926 ;;  dev             2   17[COMRAM] int 
  4927 ;;  writeData       2   19[COMRAM] unsigned short 
  4928 ;;  devTarget       2   15[COMRAM] int 
  4929 ;;  offset          2   13[COMRAM] int 
  4930 ;; Return value:  Size  Location     Type
  4931 ;;                  1    wreg      void 
  4932 ;; Registers used:
  4933 ;;		wreg, status,2, status,0, cstack
  4934 ;; Tracked objects:
  4935 ;;		On entry : 0/0
  4936 ;;		On exit  : 0/0
  4937 ;;		Unchanged: 0/0
  4938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4939 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;Total ram usage:       13 bytes
  4944 ;; Hardware stack levels used: 1
  4945 ;; Hardware stack levels required when called: 1
  4946 ;; This function calls:
  4947 ;;		_SPI_Exchange8bit
  4948 ;;		___awdiv
  4949 ;; This function is called by:
  4950 ;;		_flushBuffer
  4951 ;; This function uses a non-reentrant model
  4952 ;;
  4953                           
  4954                           	psect	text16
  4955   00F044                     __ptext16:
  4956                           	callstack 0
  4957   00F044                     _max_write:
  4958                           	callstack 25
  4959   00F044                     
  4960                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  4961   00F044  0EFF               	movlw	255
  4962   00F046  2409               	addwf	max_write@row^0,w,c
  4963   00F048  6E01               	movwf	___awdiv@dividend^0,c
  4964   00F04A  0EFF               	movlw	255
  4965   00F04C  200A               	addwfc	(max_write@row+1)^0,w,c
  4966   00F04E  6E02               	movwf	(___awdiv@dividend+1)^0,c
  4967   00F050  0E00               	movlw	0
  4968   00F052  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4969   00F054  0E08               	movlw	8
  4970   00F056  6E03               	movwf	___awdiv@divisor^0,c
  4971   00F058  EC82  F078         	call	___awdiv	;wreg free
  4972   00F05C  C001  F010         	movff	?___awdiv,max_write@devTarget
  4973   00F060  C002  F011         	movff	?___awdiv+1,max_write@devTarget+1
  4974   00F064                     
  4975                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  4976   00F064  C010  F00C         	movff	max_write@devTarget,??_max_write
  4977   00F068  C011  F00D         	movff	max_write@devTarget+1,??_max_write+1
  4978   00F06C  90D8               	bcf	status,0,c
  4979   00F06E  360C               	rlcf	??_max_write^0,f,c
  4980   00F070  360D               	rlcf	(??_max_write+1)^0,f,c
  4981   00F072  90D8               	bcf	status,0,c
  4982   00F074  360C               	rlcf	??_max_write^0,f,c
  4983   00F076  360D               	rlcf	(??_max_write+1)^0,f,c
  4984   00F078  90D8               	bcf	status,0,c
  4985   00F07A  360C               	rlcf	??_max_write^0,f,c
  4986   00F07C  360D               	rlcf	(??_max_write+1)^0,f,c
  4987   00F07E  C00C  F00E         	movff	??_max_write,max_write@offset
  4988   00F082  C00D  F00F         	movff	??_max_write+1,max_write@offset+1
  4989   00F086  948B               	bcf	139,2,c	;volatile
  4990   00F088                     
  4991                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  4992   00F088  0E00               	movlw	0
  4993   00F08A  6E13               	movwf	(max_write@dev+1)^0,c
  4994   00F08C  0E00               	movlw	0
  4995   00F08E  6E12               	movwf	max_write@dev^0,c
  4996   00F090                     l2054:
  4997                           
  4998                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  4999   00F090  5010               	movf	max_write@devTarget^0,w,c
  5000   00F092  1812               	xorwf	max_write@dev^0,w,c
  5001   00F094  E107               	bnz	u1041
  5002   00F096  5011               	movf	(max_write@devTarget+1)^0,w,c
  5003   00F098  1813               	xorwf	(max_write@dev+1)^0,w,c
  5004   00F09A  A4D8               	btfss	status,2,c
  5005   00F09C  EF52  F078         	goto	u1041
  5006   00F0A0  EF54  F078         	goto	u1040
  5007   00F0A4                     u1041:
  5008   00F0A4  EF6A  F078         	goto	l2062
  5009   00F0A8                     u1040:
  5010   00F0A8                     
  5011                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  5012   00F0A8  500E               	movf	max_write@offset^0,w,c
  5013   00F0AA  5C09               	subwf	max_write@row^0,w,c
  5014   00F0AC  6E0C               	movwf	??_max_write^0,c
  5015   00F0AE  500F               	movf	(max_write@offset+1)^0,w,c
  5016   00F0B0  580A               	subwfb	(max_write@row+1)^0,w,c
  5017   00F0B2  6E0D               	movwf	(??_max_write+1)^0,c
  5018   00F0B4  C00C  F00D         	movff	??_max_write,??_max_write+1
  5019   00F0B8  6A0C               	clrf	??_max_write^0,c
  5020   00F0BA  500B               	movf	max_write@data^0,w,c
  5021   00F0BC  100C               	iorwf	??_max_write^0,w,c
  5022   00F0BE  6E14               	movwf	max_write@writeData^0,c
  5023   00F0C0  500D               	movf	(??_max_write+1)^0,w,c
  5024   00F0C2  6E15               	movwf	(max_write@writeData+1)^0,c
  5025   00F0C4                     
  5026                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5027   00F0C4  5015               	movf	(max_write@writeData+1)^0,w,c
  5028   00F0C6  EC27  F075         	call	_SPI_Exchange8bit
  5029   00F0CA                     
  5030                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  5031   00F0CA  5014               	movf	max_write@writeData^0,w,c
  5032   00F0CC  EC27  F075         	call	_SPI_Exchange8bit
  5033                           
  5034                           ;MAX7219.c: 31:   }
  5035   00F0D0  EF70  F078         	goto	l2068
  5036   00F0D4                     l2062:
  5037   00F0D4                     
  5038                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5039   00F0D4  0E00               	movlw	0
  5040   00F0D6  EC27  F075         	call	_SPI_Exchange8bit
  5041   00F0DA                     
  5042                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  5043   00F0DA  0E00               	movlw	0
  5044   00F0DC  EC27  F075         	call	_SPI_Exchange8bit
  5045   00F0E0                     l2068:
  5046                           
  5047                           ;MAX7219.c: 46:  }
  5048   00F0E0  4A12               	infsnz	max_write@dev^0,f,c
  5049   00F0E2  2A13               	incf	(max_write@dev+1)^0,f,c
  5050   00F0E4  BE13               	btfsc	(max_write@dev+1)^0,7,c
  5051   00F0E6  EF7E  F078         	goto	u1051
  5052   00F0EA  5013               	movf	(max_write@dev+1)^0,w,c
  5053   00F0EC  E109               	bnz	u1050
  5054   00F0EE  0E04               	movlw	4
  5055   00F0F0  5C12               	subwf	max_write@dev^0,w,c
  5056   00F0F2  A0D8               	btfss	status,0,c
  5057   00F0F4  EF7E  F078         	goto	u1051
  5058   00F0F8  EF80  F078         	goto	u1050
  5059   00F0FC                     u1051:
  5060   00F0FC  EF48  F078         	goto	l2054
  5061   00F100                     u1050:
  5062   00F100  848B               	bsf	139,2,c	;volatile
  5063   00F102  0012               	return		;funcret
  5064   00F104                     __end_of_max_write:
  5065                           	callstack 0
  5066                           
  5067 ;; *************** function ___awdiv *****************
  5068 ;; Defined at:
  5069 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5070 ;; Parameters:    Size  Location     Type
  5071 ;;  dividend        2    0[COMRAM] int 
  5072 ;;  divisor         2    2[COMRAM] int 
  5073 ;; Auto vars:     Size  Location     Type
  5074 ;;  quotient        2    6[COMRAM] int 
  5075 ;;  sign            1    5[COMRAM] unsigned char 
  5076 ;;  counter         1    4[COMRAM] unsigned char 
  5077 ;; Return value:  Size  Location     Type
  5078 ;;                  2    0[COMRAM] int 
  5079 ;; Registers used:
  5080 ;;		wreg, status,2, status,0
  5081 ;; Tracked objects:
  5082 ;;		On entry : 0/0
  5083 ;;		On exit  : 0/0
  5084 ;;		Unchanged: 0/0
  5085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5087 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5089 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5090 ;;Total ram usage:        8 bytes
  5091 ;; Hardware stack levels used: 1
  5092 ;; This function calls:
  5093 ;;		Nothing
  5094 ;; This function is called by:
  5095 ;;		_displayTime
  5096 ;;		_displayAlarmTime
  5097 ;;		_max_write
  5098 ;;		_flushBuffer
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           
  5102                           	psect	text17
  5103   00F104                     __ptext17:
  5104                           	callstack 0
  5105   00F104                     ___awdiv:
  5106                           	callstack 25
  5107   00F104  0E00               	movlw	0
  5108   00F106  6E06               	movwf	___awdiv@sign^0,c
  5109   00F108  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  5110   00F10A  EF8B  F078         	goto	u980
  5111   00F10E  EF89  F078         	goto	u981
  5112   00F112                     u981:
  5113   00F112  EF91  F078         	goto	l2004
  5114   00F116                     u980:
  5115   00F116  6C03               	negf	___awdiv@divisor^0,c
  5116   00F118  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  5117   00F11A  B0D8               	btfsc	status,0,c
  5118   00F11C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  5119   00F11E  0E01               	movlw	1
  5120   00F120  6E06               	movwf	___awdiv@sign^0,c
  5121   00F122                     l2004:
  5122   00F122  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  5123   00F124  EF98  F078         	goto	u990
  5124   00F128  EF96  F078         	goto	u991
  5125   00F12C                     u991:
  5126   00F12C  EF9E  F078         	goto	l2010
  5127   00F130                     u990:
  5128   00F130  6C01               	negf	___awdiv@dividend^0,c
  5129   00F132  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  5130   00F134  B0D8               	btfsc	status,0,c
  5131   00F136  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  5132   00F138  0E01               	movlw	1
  5133   00F13A  1A06               	xorwf	___awdiv@sign^0,f,c
  5134   00F13C                     l2010:
  5135   00F13C  0E00               	movlw	0
  5136   00F13E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  5137   00F140  0E00               	movlw	0
  5138   00F142  6E07               	movwf	___awdiv@quotient^0,c
  5139   00F144  5003               	movf	___awdiv@divisor^0,w,c
  5140   00F146  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  5141   00F148  B4D8               	btfsc	status,2,c
  5142   00F14A  EFA9  F078         	goto	u1001
  5143   00F14E  EFAB  F078         	goto	u1000
  5144   00F152                     u1001:
  5145   00F152  EFD3  F078         	goto	l2032
  5146   00F156                     u1000:
  5147   00F156  0E01               	movlw	1
  5148   00F158  6E05               	movwf	___awdiv@counter^0,c
  5149   00F15A  EFB3  F078         	goto	l2018
  5150   00F15E                     l2016:
  5151   00F15E  90D8               	bcf	status,0,c
  5152   00F160  3603               	rlcf	___awdiv@divisor^0,f,c
  5153   00F162  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  5154   00F164  2A05               	incf	___awdiv@counter^0,f,c
  5155   00F166                     l2018:
  5156   00F166  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  5157   00F168  EFB8  F078         	goto	u1011
  5158   00F16C  EFBA  F078         	goto	u1010
  5159   00F170                     u1011:
  5160   00F170  EFAF  F078         	goto	l2016
  5161   00F174                     u1010:
  5162   00F174                     l2020:
  5163   00F174  90D8               	bcf	status,0,c
  5164   00F176  3607               	rlcf	___awdiv@quotient^0,f,c
  5165   00F178  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  5166   00F17A  5003               	movf	___awdiv@divisor^0,w,c
  5167   00F17C  5C01               	subwf	___awdiv@dividend^0,w,c
  5168   00F17E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5169   00F180  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  5170   00F182  A0D8               	btfss	status,0,c
  5171   00F184  EFC6  F078         	goto	u1021
  5172   00F188  EFC8  F078         	goto	u1020
  5173   00F18C                     u1021:
  5174   00F18C  EFCD  F078         	goto	l2028
  5175   00F190                     u1020:
  5176   00F190  5003               	movf	___awdiv@divisor^0,w,c
  5177   00F192  5E01               	subwf	___awdiv@dividend^0,f,c
  5178   00F194  5004               	movf	(___awdiv@divisor+1)^0,w,c
  5179   00F196  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  5180   00F198  8007               	bsf	___awdiv@quotient^0,0,c
  5181   00F19A                     l2028:
  5182   00F19A  90D8               	bcf	status,0,c
  5183   00F19C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  5184   00F19E  3203               	rrcf	___awdiv@divisor^0,f,c
  5185   00F1A0  2E05               	decfsz	___awdiv@counter^0,f,c
  5186   00F1A2  EFBA  F078         	goto	l2020
  5187   00F1A6                     l2032:
  5188   00F1A6  5006               	movf	___awdiv@sign^0,w,c
  5189   00F1A8  B4D8               	btfsc	status,2,c
  5190   00F1AA  EFD9  F078         	goto	u1031
  5191   00F1AE  EFDB  F078         	goto	u1030
  5192   00F1B2                     u1031:
  5193   00F1B2  EFDF  F078         	goto	l2036
  5194   00F1B6                     u1030:
  5195   00F1B6  6C07               	negf	___awdiv@quotient^0,c
  5196   00F1B8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  5197   00F1BA  B0D8               	btfsc	status,0,c
  5198   00F1BC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  5199   00F1BE                     l2036:
  5200   00F1BE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  5201   00F1C2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  5202   00F1C6  0012               	return		;funcret
  5203   00F1C8                     __end_of___awdiv:
  5204                           	callstack 0
  5205                           
  5206 ;; *************** function _SPI_Exchange8bit *****************
  5207 ;; Defined at:
  5208 ;;		line 77 in file "mcc_generated_files/spi.c"
  5209 ;; Parameters:    Size  Location     Type
  5210 ;;  data            1    wreg     unsigned char 
  5211 ;; Auto vars:     Size  Location     Type
  5212 ;;  data            1    0[COMRAM] unsigned char 
  5213 ;; Return value:  Size  Location     Type
  5214 ;;                  1    wreg      unsigned char 
  5215 ;; Registers used:
  5216 ;;		wreg, status,2
  5217 ;; Tracked objects:
  5218 ;;		On entry : 0/0
  5219 ;;		On exit  : 0/0
  5220 ;;		Unchanged: 0/0
  5221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5223 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5225 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5226 ;;Total ram usage:        1 bytes
  5227 ;; Hardware stack levels used: 1
  5228 ;; This function calls:
  5229 ;;		Nothing
  5230 ;; This function is called by:
  5231 ;;		_max_write
  5232 ;;		_max7219_cmd
  5233 ;;		_SPI_Exchange8bitBuffer
  5234 ;; This function uses a non-reentrant model
  5235 ;;
  5236                           
  5237                           	psect	text18
  5238   00EA4E                     __ptext18:
  5239                           	callstack 0
  5240   00EA4E                     _SPI_Exchange8bit:
  5241                           	callstack 25
  5242                           
  5243                           ;incstack = 0
  5244                           ;SPI_Exchange8bit@data stored from wreg
  5245   00EA4E  6E01               	movwf	SPI_Exchange8bit@data^0,c
  5246   00EA50                     
  5247                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  5248   00EA50  9EC6               	bcf	198,7,c	;volatile
  5249   00EA52                     
  5250                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  5251   00EA52  C001  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  5252   00EA56                     l18:
  5253                           
  5254                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  5255   00EA56  A0C7               	btfss	199,0,c	;volatile
  5256   00EA58  EF30  F075         	goto	u971
  5257   00EA5C  EF32  F075         	goto	u970
  5258   00EA60                     u971:
  5259   00EA60  EF2B  F075         	goto	l18
  5260   00EA64                     u970:
  5261   00EA64                     
  5262                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  5263   00EA64  50C9               	movf	201,w,c	;volatile
  5264   00EA66  0012               	return		;funcret
  5265   00EA68                     __end_of_SPI_Exchange8bit:
  5266                           	callstack 0
  5267                           
  5268 ;; *************** function ___awmod *****************
  5269 ;; Defined at:
  5270 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  dividend        2    0[COMRAM] int 
  5273 ;;  divisor         2    2[COMRAM] int 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  sign            1    5[COMRAM] unsigned char 
  5276 ;;  counter         1    4[COMRAM] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  2    0[COMRAM] int 
  5279 ;; Registers used:
  5280 ;;		wreg, status,2, status,0
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5286 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5289 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5290 ;;Total ram usage:        6 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_displayTime
  5296 ;;		_displayAlarmTime
  5297 ;;		_checkButtons
  5298 ;; This function uses a non-reentrant model
  5299 ;;
  5300                           
  5301                           	psect	text19
  5302   00EE2C                     __ptext19:
  5303                           	callstack 0
  5304   00EE2C                     ___awmod:
  5305                           	callstack 29
  5306   00EE2C  0E00               	movlw	0
  5307   00EE2E  6E06               	movwf	___awmod@sign^0,c
  5308   00EE30  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  5309   00EE32  EF1F  F077         	goto	u1300
  5310   00EE36  EF1D  F077         	goto	u1301
  5311   00EE3A                     u1301:
  5312   00EE3A  EF25  F077         	goto	l2264
  5313   00EE3E                     u1300:
  5314   00EE3E  6C01               	negf	___awmod@dividend^0,c
  5315   00EE40  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5316   00EE42  B0D8               	btfsc	status,0,c
  5317   00EE44  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5318   00EE46  0E01               	movlw	1
  5319   00EE48  6E06               	movwf	___awmod@sign^0,c
  5320   00EE4A                     l2264:
  5321   00EE4A  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  5322   00EE4C  EF2C  F077         	goto	u1310
  5323   00EE50  EF2A  F077         	goto	u1311
  5324   00EE54                     u1311:
  5325   00EE54  EF30  F077         	goto	l2268
  5326   00EE58                     u1310:
  5327   00EE58  6C03               	negf	___awmod@divisor^0,c
  5328   00EE5A  1E04               	comf	(___awmod@divisor+1)^0,f,c
  5329   00EE5C  B0D8               	btfsc	status,0,c
  5330   00EE5E  2A04               	incf	(___awmod@divisor+1)^0,f,c
  5331   00EE60                     l2268:
  5332   00EE60  5003               	movf	___awmod@divisor^0,w,c
  5333   00EE62  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  5334   00EE64  B4D8               	btfsc	status,2,c
  5335   00EE66  EF37  F077         	goto	u1321
  5336   00EE6A  EF39  F077         	goto	u1320
  5337   00EE6E                     u1321:
  5338   00EE6E  EF5D  F077         	goto	l2284
  5339   00EE72                     u1320:
  5340   00EE72  0E01               	movlw	1
  5341   00EE74  6E05               	movwf	___awmod@counter^0,c
  5342   00EE76  EF41  F077         	goto	l2274
  5343   00EE7A                     l2272:
  5344   00EE7A  90D8               	bcf	status,0,c
  5345   00EE7C  3603               	rlcf	___awmod@divisor^0,f,c
  5346   00EE7E  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  5347   00EE80  2A05               	incf	___awmod@counter^0,f,c
  5348   00EE82                     l2274:
  5349   00EE82  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  5350   00EE84  EF46  F077         	goto	u1331
  5351   00EE88  EF48  F077         	goto	u1330
  5352   00EE8C                     u1331:
  5353   00EE8C  EF3D  F077         	goto	l2272
  5354   00EE90                     u1330:
  5355   00EE90                     l2276:
  5356   00EE90  5003               	movf	___awmod@divisor^0,w,c
  5357   00EE92  5C01               	subwf	___awmod@dividend^0,w,c
  5358   00EE94  5004               	movf	(___awmod@divisor+1)^0,w,c
  5359   00EE96  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  5360   00EE98  A0D8               	btfss	status,0,c
  5361   00EE9A  EF51  F077         	goto	u1341
  5362   00EE9E  EF53  F077         	goto	u1340
  5363   00EEA2                     u1341:
  5364   00EEA2  EF57  F077         	goto	l2280
  5365   00EEA6                     u1340:
  5366   00EEA6  5003               	movf	___awmod@divisor^0,w,c
  5367   00EEA8  5E01               	subwf	___awmod@dividend^0,f,c
  5368   00EEAA  5004               	movf	(___awmod@divisor+1)^0,w,c
  5369   00EEAC  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  5370   00EEAE                     l2280:
  5371   00EEAE  90D8               	bcf	status,0,c
  5372   00EEB0  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  5373   00EEB2  3203               	rrcf	___awmod@divisor^0,f,c
  5374   00EEB4  2E05               	decfsz	___awmod@counter^0,f,c
  5375   00EEB6  EF48  F077         	goto	l2276
  5376   00EEBA                     l2284:
  5377   00EEBA  5006               	movf	___awmod@sign^0,w,c
  5378   00EEBC  B4D8               	btfsc	status,2,c
  5379   00EEBE  EF63  F077         	goto	u1351
  5380   00EEC2  EF65  F077         	goto	u1350
  5381   00EEC6                     u1351:
  5382   00EEC6  EF69  F077         	goto	l2288
  5383   00EECA                     u1350:
  5384   00EECA  6C01               	negf	___awmod@dividend^0,c
  5385   00EECC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  5386   00EECE  B0D8               	btfsc	status,0,c
  5387   00EED0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  5388   00EED2                     l2288:
  5389   00EED2  C001  F001         	movff	___awmod@dividend,?___awmod
  5390   00EED6  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  5391   00EEDA  0012               	return		;funcret
  5392   00EEDC                     __end_of___awmod:
  5393                           	callstack 0
  5394                           
  5395 ;; *************** function _clearAlarm *****************
  5396 ;; Defined at:
  5397 ;;		line 172 in file "main.c"
  5398 ;; Parameters:    Size  Location     Type
  5399 ;;		None
  5400 ;; Auto vars:     Size  Location     Type
  5401 ;;		None
  5402 ;; Return value:  Size  Location     Type
  5403 ;;                  1    wreg      void 
  5404 ;; Registers used:
  5405 ;;		wreg, status,2
  5406 ;; Tracked objects:
  5407 ;;		On entry : 0/0
  5408 ;;		On exit  : 0/0
  5409 ;;		Unchanged: 0/0
  5410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5411 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5414 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5415 ;;Total ram usage:        0 bytes
  5416 ;; Hardware stack levels used: 1
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		_checkButtons
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           	psect	text20
  5425   00E9D8                     __ptext20:
  5426                           	callstack 0
  5427   00E9D8                     _clearAlarm:
  5428                           	callstack 29
  5429   00E9D8                     
  5430                           ;main.c: 174:     alarmTriggered = 0;
  5431   00E9D8  0E00               	movlw	0
  5432   00E9DA  6E5D               	movwf	_alarmTriggered^0,c
  5433                           
  5434                           ;main.c: 175:     alarmSet = 0;
  5435   00E9DC  0E00               	movlw	0
  5436   00E9DE  0100               	movlb	0	; () banked
  5437   00E9E0  6FAC               	movwf	_alarmSet& (0+255),b
  5438   00E9E2                     
  5439                           ; BSR set to: 0
  5440   00E9E2  0012               	return		;funcret
  5441   00E9E4                     __end_of_clearAlarm:
  5442                           	callstack 0
  5443                           
  5444 ;; *************** function _TMR0_StartTimer *****************
  5445 ;; Defined at:
  5446 ;;		line 86 in file "mcc_generated_files/tmr0.c"
  5447 ;; Parameters:    Size  Location     Type
  5448 ;;		None
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;		None
  5451 ;; Return value:  Size  Location     Type
  5452 ;;                  1    wreg      void 
  5453 ;; Registers used:
  5454 ;;		None
  5455 ;; Tracked objects:
  5456 ;;		On entry : 0/0
  5457 ;;		On exit  : 0/0
  5458 ;;		Unchanged: 0/0
  5459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5460 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5461 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5462 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5463 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;Total ram usage:        0 bytes
  5465 ;; Hardware stack levels used: 1
  5466 ;; This function calls:
  5467 ;;		Nothing
  5468 ;; This function is called by:
  5469 ;;		_main
  5470 ;; This function uses a non-reentrant model
  5471 ;;
  5472                           
  5473                           	psect	text21
  5474   00E9BE                     __ptext21:
  5475                           	callstack 0
  5476   00E9BE                     _TMR0_StartTimer:
  5477                           	callstack 30
  5478   00E9BE                     
  5479                           ;mcc_generated_files/tmr0.c: 89:     T0CONbits.TMR0ON = 1;
  5480   00E9BE  8ED5               	bsf	213,7,c	;volatile
  5481   00E9C0  0012               	return		;funcret
  5482   00E9C2                     __end_of_TMR0_StartTimer:
  5483                           	callstack 0
  5484                           
  5485 ;; *************** function _TMR0_Reload *****************
  5486 ;; Defined at:
  5487 ;;		line 118 in file "mcc_generated_files/tmr0.c"
  5488 ;; Parameters:    Size  Location     Type
  5489 ;;		None
  5490 ;; Auto vars:     Size  Location     Type
  5491 ;;		None
  5492 ;; Return value:  Size  Location     Type
  5493 ;;                  1    wreg      void 
  5494 ;; Registers used:
  5495 ;;		wreg, status,2
  5496 ;; Tracked objects:
  5497 ;;		On entry : 0/0
  5498 ;;		On exit  : 0/0
  5499 ;;		Unchanged: 0/0
  5500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5502 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5504 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5505 ;;Total ram usage:        0 bytes
  5506 ;; Hardware stack levels used: 1
  5507 ;; This function calls:
  5508 ;;		Nothing
  5509 ;; This function is called by:
  5510 ;;		_main
  5511 ;; This function uses a non-reentrant model
  5512 ;;
  5513                           
  5514                           	psect	text22
  5515   00E9CC                     __ptext22:
  5516                           	callstack 0
  5517   00E9CC                     _TMR0_Reload:
  5518                           	callstack 30
  5519   00E9CC                     
  5520                           ;mcc_generated_files/tmr0.c: 121:     TMR0H = timer0ReloadVal >> 8;
  5521   00E9CC  0100               	movlb	0	; () banked
  5522   00E9CE  51A1               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  5523   00E9D0  6ED7               	movwf	215,c	;volatile
  5524   00E9D2                     
  5525                           ; BSR set to: 0
  5526                           ;mcc_generated_files/tmr0.c: 122:     TMR0L = (uint8_t) timer0ReloadVal;
  5527   00E9D2  C0A0  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  5528   00E9D6                     
  5529                           ; BSR set to: 0
  5530   00E9D6  0012               	return		;funcret
  5531   00E9D8                     __end_of_TMR0_Reload:
  5532                           	callstack 0
  5533                           
  5534 ;; *************** function _TMR0_HasOverflowOccured *****************
  5535 ;; Defined at:
  5536 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  5537 ;; Parameters:    Size  Location     Type
  5538 ;;		None
  5539 ;; Auto vars:     Size  Location     Type
  5540 ;;		None
  5541 ;; Return value:  Size  Location     Type
  5542 ;;                  1    wreg      _Bool 
  5543 ;; Registers used:
  5544 ;;		wreg
  5545 ;; Tracked objects:
  5546 ;;		On entry : 0/0
  5547 ;;		On exit  : 0/0
  5548 ;;		Unchanged: 0/0
  5549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5550 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5551 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5553 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5554 ;;Total ram usage:        0 bytes
  5555 ;; Hardware stack levels used: 1
  5556 ;; This function calls:
  5557 ;;		Nothing
  5558 ;; This function is called by:
  5559 ;;		_main
  5560 ;; This function uses a non-reentrant model
  5561 ;;
  5562                           
  5563                           	psect	text23
  5564   00EA24                     __ptext23:
  5565                           	callstack 0
  5566   00EA24                     _TMR0_HasOverflowOccured:
  5567                           	callstack 30
  5568   00EA24                     
  5569                           ;mcc_generated_files/tmr0.c: 128:     return(INTCONbits.TMR0IF);
  5570   00EA24  B4F2               	btfsc	242,2,c	;volatile
  5571   00EA26  EF17  F075         	goto	u1471
  5572   00EA2A  EF1A  F075         	goto	u1470
  5573   00EA2E                     u1471:
  5574   00EA2E  0E01               	movlw	1
  5575   00EA30  EF1B  F075         	goto	u1476
  5576   00EA34                     u1470:
  5577   00EA34  0E00               	movlw	0
  5578   00EA36                     u1476:
  5579   00EA36  0012               	return		;funcret
  5580   00EA38                     __end_of_TMR0_HasOverflowOccured:
  5581                           	callstack 0
  5582                           
  5583 ;; *************** function _SYSTEM_Initialize *****************
  5584 ;; Defined at:
  5585 ;;		line 108 in file "mcc_generated_files/mcc.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;		None
  5588 ;; Auto vars:     Size  Location     Type
  5589 ;;		None
  5590 ;; Return value:  Size  Location     Type
  5591 ;;                  1    wreg      void 
  5592 ;; Registers used:
  5593 ;;		wreg, status,2, status,0, cstack
  5594 ;; Tracked objects:
  5595 ;;		On entry : 0/0
  5596 ;;		On exit  : 0/0
  5597 ;;		Unchanged: 0/0
  5598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5599 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5601 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5602 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5603 ;;Total ram usage:        0 bytes
  5604 ;; Hardware stack levels used: 1
  5605 ;; Hardware stack levels required when called: 1
  5606 ;; This function calls:
  5607 ;;		_EUSART_Initialize
  5608 ;;		_OSCILLATOR_Initialize
  5609 ;;		_PIN_MANAGER_Initialize
  5610 ;;		_PWM2_Initialize
  5611 ;;		_SPI_Initialize
  5612 ;;		_TMR0_Initialize
  5613 ;;		_TMR2_Initialize
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text24
  5620   00EA68                     __ptext24:
  5621                           	callstack 0
  5622   00EA68                     _SYSTEM_Initialize:
  5623                           	callstack 29
  5624   00EA68                     
  5625                           ;mcc_generated_files/mcc.c: 110:     PIN_MANAGER_Initialize();
  5626   00EA68  EC52  F075         	call	_PIN_MANAGER_Initialize	;wreg free
  5627                           
  5628                           ;mcc_generated_files/mcc.c: 111:     OSCILLATOR_Initialize();
  5629   00EA6C  ECE1  F074         	call	_OSCILLATOR_Initialize	;wreg free
  5630                           
  5631                           ;mcc_generated_files/mcc.c: 112:     SPI_Initialize();
  5632   00EA70  ECF9  F074         	call	_SPI_Initialize	;wreg free
  5633                           
  5634                           ;mcc_generated_files/mcc.c: 113:     PWM2_Initialize();
  5635   00EA74  ECF2  F074         	call	_PWM2_Initialize	;wreg free
  5636                           
  5637                           ;mcc_generated_files/mcc.c: 114:     TMR2_Initialize();
  5638   00EA78  EC00  F075         	call	_TMR2_Initialize	;wreg free
  5639   00EA7C                     
  5640                           ;mcc_generated_files/mcc.c: 115:     TMR0_Initialize();
  5641   00EA7C  EC63  F075         	call	_TMR0_Initialize	;wreg free
  5642   00EA80                     
  5643                           ;mcc_generated_files/mcc.c: 116:     EUSART_Initialize();
  5644   00EA80  EC1C  F075         	call	_EUSART_Initialize	;wreg free
  5645   00EA84  0012               	return		;funcret
  5646   00EA86                     __end_of_SYSTEM_Initialize:
  5647                           	callstack 0
  5648                           
  5649 ;; *************** function _TMR2_Initialize *****************
  5650 ;; Defined at:
  5651 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  5652 ;; Parameters:    Size  Location     Type
  5653 ;;		None
  5654 ;; Auto vars:     Size  Location     Type
  5655 ;;		None
  5656 ;; Return value:  Size  Location     Type
  5657 ;;                  1    wreg      void 
  5658 ;; Registers used:
  5659 ;;		wreg, status,2
  5660 ;; Tracked objects:
  5661 ;;		On entry : 0/0
  5662 ;;		On exit  : 0/0
  5663 ;;		Unchanged: 0/0
  5664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5668 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5669 ;;Total ram usage:        0 bytes
  5670 ;; Hardware stack levels used: 1
  5671 ;; This function calls:
  5672 ;;		Nothing
  5673 ;; This function is called by:
  5674 ;;		_SYSTEM_Initialize
  5675 ;; This function uses a non-reentrant model
  5676 ;;
  5677                           
  5678                           	psect	text25
  5679   00EA00                     __ptext25:
  5680                           	callstack 0
  5681   00EA00                     _TMR2_Initialize:
  5682                           	callstack 29
  5683   00EA00                     
  5684                           ;mcc_generated_files/tmr2.c: 66:     PR2 = 0x7C;
  5685   00EA00  0E7C               	movlw	124
  5686   00EA02  6ECB               	movwf	203,c	;volatile
  5687                           
  5688                           ;mcc_generated_files/tmr2.c: 69:     TMR2 = 0x00;
  5689   00EA04  0E00               	movlw	0
  5690   00EA06  6ECC               	movwf	204,c	;volatile
  5691   00EA08                     
  5692                           ;mcc_generated_files/tmr2.c: 72:     PIR1bits.TMR2IF = 0;
  5693   00EA08  929E               	bcf	158,1,c	;volatile
  5694                           
  5695                           ;mcc_generated_files/tmr2.c: 75:     T2CON = 0x1D;
  5696   00EA0A  0E1D               	movlw	29
  5697   00EA0C  6ECA               	movwf	202,c	;volatile
  5698   00EA0E                     
  5699                           ;mcc_generated_files/tmr2.c: 77:     T2CONbits.TMR2ON = 1;
  5700   00EA0E  84CA               	bsf	202,2,c	;volatile
  5701   00EA10  0012               	return		;funcret
  5702   00EA12                     __end_of_TMR2_Initialize:
  5703                           	callstack 0
  5704                           
  5705 ;; *************** function _TMR0_Initialize *****************
  5706 ;; Defined at:
  5707 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  5708 ;; Parameters:    Size  Location     Type
  5709 ;;		None
  5710 ;; Auto vars:     Size  Location     Type
  5711 ;;		None
  5712 ;; Return value:  Size  Location     Type
  5713 ;;                  1    wreg      void 
  5714 ;; Registers used:
  5715 ;;		wreg, status,2, status,0
  5716 ;; Tracked objects:
  5717 ;;		On entry : 0/0
  5718 ;;		On exit  : 0/0
  5719 ;;		Unchanged: 0/0
  5720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5721 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5722 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5723 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5724 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5725 ;;Total ram usage:        2 bytes
  5726 ;; Hardware stack levels used: 1
  5727 ;; This function calls:
  5728 ;;		Nothing
  5729 ;; This function is called by:
  5730 ;;		_SYSTEM_Initialize
  5731 ;; This function uses a non-reentrant model
  5732 ;;
  5733                           
  5734                           	psect	text26
  5735   00EAC6                     __ptext26:
  5736                           	callstack 0
  5737   00EAC6                     _TMR0_Initialize:
  5738                           	callstack 29
  5739   00EAC6                     
  5740                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0x0B;
  5741   00EAC6  0E0B               	movlw	11
  5742   00EAC8  6ED7               	movwf	215,c	;volatile
  5743                           
  5744                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0xDB;
  5745   00EACA  0EDB               	movlw	219
  5746   00EACC  6ED6               	movwf	214,c	;volatile
  5747   00EACE                     
  5748                           ;mcc_generated_files/tmr0.c: 77:     timer0ReloadVal = (TMR0H << 8) | TMR0L;
  5749   00EACE  50D6               	movf	214,w,c	;volatile
  5750   00EAD0  CFD7 F001          	movff	4055,??_TMR0_Initialize	;volatile
  5751   00EAD4  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
  5752   00EAD6  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5753   00EADA  6A01               	clrf	??_TMR0_Initialize^0,c
  5754   00EADC  1001               	iorwf	??_TMR0_Initialize^0,w,c
  5755   00EADE  0100               	movlb	0	; () banked
  5756   00EAE0  6FA0               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  5757   00EAE2  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
  5758   00EAE4  6FA1               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  5759   00EAE6                     
  5760                           ; BSR set to: 0
  5761                           ;mcc_generated_files/tmr0.c: 80:     INTCONbits.TMR0IF = 0;
  5762   00EAE6  94F2               	bcf	242,2,c	;volatile
  5763   00EAE8                     
  5764                           ; BSR set to: 0
  5765                           ;mcc_generated_files/tmr0.c: 83:     T0CON = 0x94;
  5766   00EAE8  0E94               	movlw	148
  5767   00EAEA  6ED5               	movwf	213,c	;volatile
  5768   00EAEC                     
  5769                           ; BSR set to: 0
  5770   00EAEC  0012               	return		;funcret
  5771   00EAEE                     __end_of_TMR0_Initialize:
  5772                           	callstack 0
  5773                           
  5774 ;; *************** function _SPI_Initialize *****************
  5775 ;; Defined at:
  5776 ;;		line 63 in file "mcc_generated_files/spi.c"
  5777 ;; Parameters:    Size  Location     Type
  5778 ;;		None
  5779 ;; Auto vars:     Size  Location     Type
  5780 ;;		None
  5781 ;; Return value:  Size  Location     Type
  5782 ;;                  1    wreg      void 
  5783 ;; Registers used:
  5784 ;;		wreg, status,2
  5785 ;; Tracked objects:
  5786 ;;		On entry : 0/0
  5787 ;;		On exit  : 0/0
  5788 ;;		Unchanged: 0/0
  5789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5790 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5793 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5794 ;;Total ram usage:        0 bytes
  5795 ;; Hardware stack levels used: 1
  5796 ;; This function calls:
  5797 ;;		Nothing
  5798 ;; This function is called by:
  5799 ;;		_SYSTEM_Initialize
  5800 ;; This function uses a non-reentrant model
  5801 ;;
  5802                           
  5803                           	psect	text27
  5804   00E9F2                     __ptext27:
  5805                           	callstack 0
  5806   00E9F2                     _SPI_Initialize:
  5807                           	callstack 29
  5808   00E9F2                     
  5809                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  5810   00E9F2  0EC0               	movlw	192
  5811   00E9F4  6EC7               	movwf	199,c	;volatile
  5812                           
  5813                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  5814   00E9F6  0E30               	movlw	48
  5815   00E9F8  6EC6               	movwf	198,c	;volatile
  5816                           
  5817                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  5818   00E9FA  0E00               	movlw	0
  5819   00E9FC  6EC8               	movwf	200,c	;volatile
  5820   00E9FE  0012               	return		;funcret
  5821   00EA00                     __end_of_SPI_Initialize:
  5822                           	callstack 0
  5823                           
  5824 ;; *************** function _PWM2_Initialize *****************
  5825 ;; Defined at:
  5826 ;;		line 63 in file "mcc_generated_files/pwm2.c"
  5827 ;; Parameters:    Size  Location     Type
  5828 ;;		None
  5829 ;; Auto vars:     Size  Location     Type
  5830 ;;		None
  5831 ;; Return value:  Size  Location     Type
  5832 ;;                  1    wreg      void 
  5833 ;; Registers used:
  5834 ;;		wreg, status,2
  5835 ;; Tracked objects:
  5836 ;;		On entry : 0/0
  5837 ;;		On exit  : 0/0
  5838 ;;		Unchanged: 0/0
  5839 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5842 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5843 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5844 ;;Total ram usage:        0 bytes
  5845 ;; Hardware stack levels used: 1
  5846 ;; This function calls:
  5847 ;;		Nothing
  5848 ;; This function is called by:
  5849 ;;		_SYSTEM_Initialize
  5850 ;; This function uses a non-reentrant model
  5851 ;;
  5852                           
  5853                           	psect	text28
  5854   00E9E4                     __ptext28:
  5855                           	callstack 0
  5856   00E9E4                     _PWM2_Initialize:
  5857                           	callstack 29
  5858   00E9E4                     
  5859                           ;mcc_generated_files/pwm2.c: 68:     CCP2CON = 0x1C;
  5860   00E9E4  0E1C               	movlw	28
  5861   00E9E6  6EBA               	movwf	186,c	;volatile
  5862                           
  5863                           ;mcc_generated_files/pwm2.c: 71:     CCPR2L = 0x3E;
  5864   00E9E8  0E3E               	movlw	62
  5865   00E9EA  6EBB               	movwf	187,c	;volatile
  5866                           
  5867                           ;mcc_generated_files/pwm2.c: 74:     CCPR2H = 0x00;
  5868   00E9EC  0E00               	movlw	0
  5869   00E9EE  6EBC               	movwf	188,c	;volatile
  5870   00E9F0  0012               	return		;funcret
  5871   00E9F2                     __end_of_PWM2_Initialize:
  5872                           	callstack 0
  5873                           
  5874 ;; *************** function _PIN_MANAGER_Initialize *****************
  5875 ;; Defined at:
  5876 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5877 ;; Parameters:    Size  Location     Type
  5878 ;;		None
  5879 ;; Auto vars:     Size  Location     Type
  5880 ;;		None
  5881 ;; Return value:  Size  Location     Type
  5882 ;;                  1    wreg      void 
  5883 ;; Registers used:
  5884 ;;		wreg, status,2
  5885 ;; Tracked objects:
  5886 ;;		On entry : 0/0
  5887 ;;		On exit  : 0/0
  5888 ;;		Unchanged: 0/0
  5889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5894 ;;Total ram usage:        0 bytes
  5895 ;; Hardware stack levels used: 1
  5896 ;; This function calls:
  5897 ;;		Nothing
  5898 ;; This function is called by:
  5899 ;;		_SYSTEM_Initialize
  5900 ;; This function uses a non-reentrant model
  5901 ;;
  5902                           
  5903                           	psect	text29
  5904   00EAA4                     __ptext29:
  5905                           	callstack 0
  5906   00EAA4                     _PIN_MANAGER_Initialize:
  5907                           	callstack 29
  5908   00EAA4                     
  5909                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  5910   00EAA4  0E00               	movlw	0
  5911   00EAA6  6E89               	movwf	137,c	;volatile
  5912                           
  5913                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  5914   00EAA8  0E00               	movlw	0
  5915   00EAAA  6E8A               	movwf	138,c	;volatile
  5916                           
  5917                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  5918   00EAAC  0E2C               	movlw	44
  5919   00EAAE  6E8B               	movwf	139,c	;volatile
  5920   00EAB0                     
  5921                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  5922   00EAB0  6892               	setf	146,c	;volatile
  5923   00EAB2                     
  5924                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  5925   00EAB2  6893               	setf	147,c	;volatile
  5926                           
  5927                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x91;
  5928   00EAB4  0E91               	movlw	145
  5929   00EAB6  6E94               	movwf	148,c	;volatile
  5930                           
  5931                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  5932   00EAB8  0E0A               	movlw	10
  5933   00EABA  6E7F               	movwf	127,c	;volatile
  5934                           
  5935                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  5936   00EABC  0E1F               	movlw	31
  5937   00EABE  6E7E               	movwf	126,c	;volatile
  5938   00EAC0                     
  5939                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  5940   00EAC0  687C               	setf	124,c	;volatile
  5941   00EAC2                     
  5942                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  5943   00EAC2  9EF1               	bcf	241,7,c	;volatile
  5944   00EAC4  0012               	return		;funcret
  5945   00EAC6                     __end_of_PIN_MANAGER_Initialize:
  5946                           	callstack 0
  5947                           
  5948 ;; *************** function _OSCILLATOR_Initialize *****************
  5949 ;; Defined at:
  5950 ;;		line 119 in file "mcc_generated_files/mcc.c"
  5951 ;; Parameters:    Size  Location     Type
  5952 ;;		None
  5953 ;; Auto vars:     Size  Location     Type
  5954 ;;		None
  5955 ;; Return value:  Size  Location     Type
  5956 ;;                  1    wreg      void 
  5957 ;; Registers used:
  5958 ;;		wreg, status,2
  5959 ;; Tracked objects:
  5960 ;;		On entry : 0/0
  5961 ;;		On exit  : 0/0
  5962 ;;		Unchanged: 0/0
  5963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5968 ;;Total ram usage:        0 bytes
  5969 ;; Hardware stack levels used: 1
  5970 ;; This function calls:
  5971 ;;		Nothing
  5972 ;; This function is called by:
  5973 ;;		_SYSTEM_Initialize
  5974 ;; This function uses a non-reentrant model
  5975 ;;
  5976                           
  5977                           	psect	text30
  5978   00E9C2                     __ptext30:
  5979                           	callstack 0
  5980   00E9C2                     _OSCILLATOR_Initialize:
  5981                           	callstack 29
  5982   00E9C2                     
  5983                           ;mcc_generated_files/mcc.c: 122:     OSCCON = 0x62;
  5984   00E9C2  0E62               	movlw	98
  5985   00E9C4  6ED3               	movwf	211,c	;volatile
  5986                           
  5987                           ;mcc_generated_files/mcc.c: 124:     OSCTUNE = 0x00;
  5988   00E9C6  0E00               	movlw	0
  5989   00E9C8  6E9B               	movwf	155,c	;volatile
  5990   00E9CA  0012               	return		;funcret
  5991   00E9CC                     __end_of_OSCILLATOR_Initialize:
  5992                           	callstack 0
  5993                           
  5994 ;; *************** function _EUSART_Initialize *****************
  5995 ;; Defined at:
  5996 ;;		line 55 in file "mcc_generated_files/eusart.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;		None
  5999 ;; Auto vars:     Size  Location     Type
  6000 ;;		None
  6001 ;; Return value:  Size  Location     Type
  6002 ;;                  1    wreg      void 
  6003 ;; Registers used:
  6004 ;;		wreg, status,2
  6005 ;; Tracked objects:
  6006 ;;		On entry : 0/0
  6007 ;;		On exit  : 0/0
  6008 ;;		Unchanged: 0/0
  6009 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6010 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6011 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6012 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6013 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6014 ;;Total ram usage:        0 bytes
  6015 ;; Hardware stack levels used: 1
  6016 ;; This function calls:
  6017 ;;		Nothing
  6018 ;; This function is called by:
  6019 ;;		_SYSTEM_Initialize
  6020 ;; This function uses a non-reentrant model
  6021 ;;
  6022                           
  6023                           	psect	text31
  6024   00EA38                     __ptext31:
  6025                           	callstack 0
  6026   00EA38                     _EUSART_Initialize:
  6027                           	callstack 29
  6028   00EA38                     
  6029                           ;mcc_generated_files/eusart.c: 60:     BAUDCON = 0x0A;
  6030   00EA38  0E0A               	movlw	10
  6031   00EA3A  6EB8               	movwf	184,c	;volatile
  6032                           
  6033                           ;mcc_generated_files/eusart.c: 63:     RCSTA = 0x90;
  6034   00EA3C  0E90               	movlw	144
  6035   00EA3E  6EAB               	movwf	171,c	;volatile
  6036                           
  6037                           ;mcc_generated_files/eusart.c: 66:     TXSTA = 0x24;
  6038   00EA40  0E24               	movlw	36
  6039   00EA42  6EAC               	movwf	172,c	;volatile
  6040                           
  6041                           ;mcc_generated_files/eusart.c: 69:     SPBRG = 0xCF;
  6042   00EA44  0ECF               	movlw	207
  6043   00EA46  6EAF               	movwf	175,c	;volatile
  6044                           
  6045                           ;mcc_generated_files/eusart.c: 72:     SPBRGH = 0x00;
  6046   00EA48  0E00               	movlw	0
  6047   00EA4A  6EB0               	movwf	176,c	;volatile
  6048   00EA4C  0012               	return		;funcret
  6049   00EA4E                     __end_of_EUSART_Initialize:
  6050                           	callstack 0
  6051                           
  6052                           	psect	rparam
  6053   000000                     
  6054                           	psect	idloc
  6055                           
  6056                           ;Config register IDLOC0 @ 0x200000
  6057                           ;	unspecified, using default values
  6058   200000                     	org	2097152
  6059   200000  FF                 	db	255
  6060                           
  6061                           ;Config register IDLOC1 @ 0x200001
  6062                           ;	unspecified, using default values
  6063   200001                     	org	2097153
  6064   200001  FF                 	db	255
  6065                           
  6066                           ;Config register IDLOC2 @ 0x200002
  6067                           ;	unspecified, using default values
  6068   200002                     	org	2097154
  6069   200002  FF                 	db	255
  6070                           
  6071                           ;Config register IDLOC3 @ 0x200003
  6072                           ;	unspecified, using default values
  6073   200003                     	org	2097155
  6074   200003  FF                 	db	255
  6075                           
  6076                           ;Config register IDLOC4 @ 0x200004
  6077                           ;	unspecified, using default values
  6078   200004                     	org	2097156
  6079   200004  FF                 	db	255
  6080                           
  6081                           ;Config register IDLOC5 @ 0x200005
  6082                           ;	unspecified, using default values
  6083   200005                     	org	2097157
  6084   200005  FF                 	db	255
  6085                           
  6086                           ;Config register IDLOC6 @ 0x200006
  6087                           ;	unspecified, using default values
  6088   200006                     	org	2097158
  6089   200006  FF                 	db	255
  6090                           
  6091                           ;Config register IDLOC7 @ 0x200007
  6092                           ;	unspecified, using default values
  6093   200007                     	org	2097159
  6094   200007  FF                 	db	255
  6095                           
  6096                           	psect	config
  6097                           
  6098                           ; Padding undefined space
  6099   300000                     	org	3145728
  6100   300000  FF                 	db	255
  6101                           
  6102                           ;Config register CONFIG1H @ 0x300001
  6103                           ;	Oscillator Selection bits
  6104                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  6105                           ;	Fail-Safe Clock Monitor Enable bit
  6106                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  6107                           ;	Internal/External Oscillator Switchover bit
  6108                           ;	IESO = OFF, Oscillator Switchover mode disabled
  6109   300001                     	org	3145729
  6110   300001  08                 	db	8
  6111                           
  6112                           ;Config register CONFIG2L @ 0x300002
  6113                           ;	Power-up Timer Enable bit
  6114                           ;	PWRTEN = OFF, PWRT disabled
  6115                           ;	Brown-out Reset Enable bits
  6116                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  6117                           ;	Brown Out Reset Voltage bits
  6118                           ;	BORV = 18, VBOR set to 1.8 V nominal
  6119   300002                     	org	3145730
  6120   300002  1F                 	db	31
  6121                           
  6122                           ;Config register CONFIG2H @ 0x300003
  6123                           ;	Watchdog Timer Enable bit
  6124                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  6125                           ;	Watchdog Timer Postscale Select bits
  6126                           ;	WDTPS = 32768, 1:32768
  6127   300003                     	org	3145731
  6128   300003  1E                 	db	30
  6129                           
  6130                           ; Padding undefined space
  6131   300004                     	org	3145732
  6132   300004  FF                 	db	255
  6133                           
  6134                           ;Config register CONFIG3H @ 0x300005
  6135                           ;	CCP2 MUX bit
  6136                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  6137                           ;	PORTB A/D Enable bit
  6138                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  6139                           ;	Low-Power Timer1 Oscillator Enable bit
  6140                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  6141                           ;	HFINTOSC Fast Start-up
  6142                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  6143                           ;	MCLR Pin Enable bit
  6144                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  6145   300005                     	org	3145733
  6146   300005  09                 	db	9
  6147                           
  6148                           ;Config register CONFIG4L @ 0x300006
  6149                           ;	Stack Full/Underflow Reset Enable bit
  6150                           ;	STVREN = ON, Stack full/underflow will cause Reset
  6151                           ;	Single-Supply ICSP Enable bit
  6152                           ;	LVP = OFF, Single-Supply ICSP disabled
  6153                           ;	Extended Instruction Set Enable bit
  6154                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  6155                           ;	Background Debugger Enable bit
  6156                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  6157   300006                     	org	3145734
  6158   300006  81                 	db	129
  6159                           
  6160                           ; Padding undefined space
  6161   300007                     	org	3145735
  6162   300007  FF                 	db	255
  6163                           
  6164                           ;Config register CONFIG5L @ 0x300008
  6165                           ;	Code Protection Block 0
  6166                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  6167                           ;	Code Protection Block 1
  6168                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  6169                           ;	Code Protection Block 2
  6170                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  6171                           ;	Code Protection Block 3
  6172                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  6173   300008                     	org	3145736
  6174   300008  0F                 	db	15
  6175                           
  6176                           ;Config register CONFIG5H @ 0x300009
  6177                           ;	Boot Block Code Protection bit
  6178                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  6179                           ;	Data EEPROM Code Protection bit
  6180                           ;	CPD = OFF, Data EEPROM not code-protected
  6181   300009                     	org	3145737
  6182   300009  C0                 	db	192
  6183                           
  6184                           ;Config register CONFIG6L @ 0x30000A
  6185                           ;	Write Protection Block 0
  6186                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  6187                           ;	Write Protection Block 1
  6188                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  6189                           ;	Write Protection Block 2
  6190                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  6191                           ;	Write Protection Block 3
  6192                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  6193   30000A                     	org	3145738
  6194   30000A  0F                 	db	15
  6195                           
  6196                           ;Config register CONFIG6H @ 0x30000B
  6197                           ;	Configuration Register Write Protection bit
  6198                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  6199                           ;	Boot Block Write Protection bit
  6200                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  6201                           ;	Data EEPROM Write Protection bit
  6202                           ;	WRTD = OFF, Data EEPROM not write-protected
  6203   30000B                     	org	3145739
  6204   30000B  E0                 	db	224
  6205                           
  6206                           ;Config register CONFIG7L @ 0x30000C
  6207                           ;	Table Read Protection Block 0
  6208                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  6209                           ;	Table Read Protection Block 1
  6210                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  6211                           ;	Table Read Protection Block 2
  6212                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  6213                           ;	Table Read Protection Block 3
  6214                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  6215   30000C                     	org	3145740
  6216   30000C  0F                 	db	15
  6217                           
  6218                           ;Config register CONFIG7H @ 0x30000D
  6219                           ;	Boot Block Table Read Protection bit
  6220                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  6221   30000D                     	org	3145741
  6222   30000D  40                 	db	64
  6223                           tosu	equ	0xFFF
  6224                           tosh	equ	0xFFE
  6225                           tosl	equ	0xFFD
  6226                           stkptr	equ	0xFFC
  6227                           pclatu	equ	0xFFB
  6228                           pclath	equ	0xFFA
  6229                           pcl	equ	0xFF9
  6230                           tblptru	equ	0xFF8
  6231                           tblptrh	equ	0xFF7
  6232                           tblptrl	equ	0xFF6
  6233                           tablat	equ	0xFF5
  6234                           prodh	equ	0xFF4
  6235                           prodl	equ	0xFF3
  6236                           indf0	equ	0xFEF
  6237                           postinc0	equ	0xFEE
  6238                           postdec0	equ	0xFED
  6239                           preinc0	equ	0xFEC
  6240                           plusw0	equ	0xFEB
  6241                           fsr0h	equ	0xFEA
  6242                           fsr0l	equ	0xFE9
  6243                           wreg	equ	0xFE8
  6244                           indf1	equ	0xFE7
  6245                           postinc1	equ	0xFE6
  6246                           postdec1	equ	0xFE5
  6247                           preinc1	equ	0xFE4
  6248                           plusw1	equ	0xFE3
  6249                           fsr1h	equ	0xFE2
  6250                           fsr1l	equ	0xFE1
  6251                           bsr	equ	0xFE0
  6252                           indf2	equ	0xFDF
  6253                           postinc2	equ	0xFDE
  6254                           postdec2	equ	0xFDD
  6255                           preinc2	equ	0xFDC
  6256                           plusw2	equ	0xFDB
  6257                           fsr2h	equ	0xFDA
  6258                           fsr2l	equ	0xFD9
  6259                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    2048
    Data        0
    BSS         84
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     91      95
    BANK0           160     12      92
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15           96      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(1) Largest target is 64
		 -> saveTimeToFlash@flashBuffer(COMRAM[64]), 

    printString@str	PTR unsigned char  size(2) Largest target is 6
		 -> displayAlarmTime@displayString(BANK0[5]), displayTime@displayString(BANK0[5]), STR_1(CODE[6]), 


Critical Paths under _main in COMRAM

    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _clearDisplay->_flushBuffer
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _checkButtons->_saveTimeToFlash
    _saveTimeToFlash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _displayTime->_printString
    _displayAlarmTime->_printString
    _printString->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _main in BANK0

    _main->_displayTime
    _checkButtons->_displayAlarmTime
    _checkButtons->_displayTime

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   36435
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                        _TMR0_Reload
                    _TMR0_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
                       _processAlarm
 ---------------------------------------------------------------------------------
 (1) _processAlarm                                         0     0      0    7237
                       _triggerAlarm
 ---------------------------------------------------------------------------------
 (2) _triggerAlarm                                         6     6      0    7237
                                             85 COMRAM     6     6      0
                       _clearDisplay
                        _printString
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         2     2      0    3344
                                             64 COMRAM     2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     537
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     537
                                              1 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0     567
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   17618
                                             88 COMRAM     2     2      0
                            ___awmod
                         _clearAlarm
                   _displayAlarmTime
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (2) _saveTimeToFlash                                     69    69      0    1538
                                             19 COMRAM    69    69      0
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteBlock                                    14     9      5     809
                                              5 COMRAM    14     9      5
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_EraseBlock                                     5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     522
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    7132
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _displayAlarmTime                                    12    12      0    7132
                                              0 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (3) _printString                                         21    19      2    3846
                                             64 COMRAM    21    19      2
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (4) _flushBuffer                                         43    43      0    3276
                                             21 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (5) _max_write                                           13    10      3    1679
                                              8 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1816
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _clearAlarm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _SPI_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Reload
   _TMR0_StartTimer
   _checkButtons
     ___awmod
     _clearAlarm
     _displayAlarmTime
       ___awdiv
       ___awmod
       _printString
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
     _displayTime
       ___awdiv
       ___awmod
       _printString
     _saveTimeToFlash
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _clearDisplay
     _flushBuffer
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit
   _processAlarm
     _triggerAlarm
       _clearDisplay
       _printString

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F5F      0       0      54        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      C      5C       5       57.5%
BITBANK15           60      0       0      35        0.0%
BANK15              60      0       0      36        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5B      5F       1      100.0%
BITBIGSFRlllll      1C      0       0      53        0.0%
BITBIGSFRhhlh       19      0       0      39        0.0%
BITBIGSFRlhhh        9      0       0      42        0.0%
BITBIGSFRhhhh        7      0       0      37        0.0%
BITBIGSFRlhlhh       7      0       0      44        0.0%
BITBIGSFRllhl        7      0       0      50        0.0%
BITBIGSFRhlh         6      0       0      41        0.0%
BITBIGSFRllhhh       6      0       0      48        0.0%
BITBIGSFRllhhl       6      0       0      49        0.0%
BITBIGSFRlhllhl      4      0       0      45        0.0%
BITBIGSFRlhllhl      2      0       0      46        0.0%
BITBIGSFRhhhl        2      0       0      38        0.0%
BITBIGSFRlhlll       2      0       0      47        0.0%
BITBIGSFRlhhl        1      0       0      43        0.0%
BITBIGSFRllllh       1      0       0      52        0.0%
BITBIGSFRlllh        1      0       0      51        0.0%
BITBIGSFRhhll        1      0       0      40        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BB      14        0.0%
DATA                 0      0      BB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Tue Sep 10 21:38:25 2024

               __end_of_checkButtons F7F8                       _SPI_Initialize E9F2  
                       ?_displayTime 0001      __end_of_TMR0_HasOverflowOccured EA38  
                        _SSPSTATbits 0FC7                                   l20 EA64  
                                 l21 EA66                                   l15 E9FE  
                                 l18 EA56                                   l66 EA84  
                                 l69 E9CA                         ___awdiv@sign 0006  
                    _timer0ReloadVal 00A0                                  l203 ECD2  
                                l204 ECF2                                  l232 EAC4  
                                l400 E9D6                                  l153 EF8E  
                                l209 EC84                                  l162 ED96  
                                l403 EA36                                  l323 F564  
                                l148 F042                                  l500 EB20  
                                l165 EE2A                                  l254 F100  
                                l190 F6E8                                  l158 EBDC  
                                l416 EA10                                  l256 F102  
                                l280 EB54                                  l169 E9E2  
                                l346 EA4C                                  l275 EC2C  
                                l444 E9F0                                  l268 F3DE  
                                l277 EC2E                                  l285 EB8C  
                                l199 F7F6                                  l385 EAEC  
                                l490 F2B0                                  l388 E9C0  
                                l478 EA22                                  l494 F27E  
                                l495 F268                                  l496 F26C  
                                l746 F1C6                                  l759 EEDA  
                                _PR2 0FCB                                  u970 EA64  
                                u971 EA60                                  u980 F116  
                                u981 F112                                  u990 F130  
                                u991 F12C                         ___awmod@sign 0006  
                    _TMR2_Initialize EA00                                  prod 0FF3  
                                wreg 0FE8                                 l2000 F116  
                               l2010 F13C                                 l2002 F11E  
                               l2020 F174                                 l2012 F144  
                               l2004 F122                                 l2100 F396  
                               l2030 F1A0                                 l2022 F17A  
                               l2014 F156                                 l2006 F130  
                               l2110 F3C2                                 l2024 F190  
                               l2016 F15E                                 l2032 F1A6  
                               l2008 F138                                 l2040 F044  
                               l2200 EA20                                 l2120 EB02  
                               l2112 EAEE                                 l2034 F1B6  
                               l2026 F198                                 l2018 F166  
                               l2042 F064                                 l2106 F39E  
                               l2130 EB0C                                 l2122 EB04  
                               l2114 EAF6                                 l2210 F1E8  
                               l2300 EAC0                                 l2036 F1BE  
                               l2028 F19A                                 l2060 F0CA  
                               l2044 F086                                 l2108 F3BE  
                               l2132 EB10                                 l2124 EB06  
                               l2116 EAFA                                 l2220 F22C  
                               l2212 F1EC                                 l2204 F1C8  
                               l2302 EAC2                                 l2310 EA08  
                               l2070 F0E4                                 l2062 F0D4  
                               l2054 F090                                 l2046 F086  
                               l2134 EB14                                 l2126 EB08  
                               l2118 EAFE                                 l2222 F230  
                               l2214 F1F0                                 l2206 F1E0  
                               l2150 EB88                                 l2304 E9C2  
                               l2320 EAE8                                 l2312 EA0E  
                               l2064 F0D4                                 l2056 F0A8  
                               l2048 F088                                 l2080 F2C6  
                               l2072 F2B2                                 l2160 F404  
                               l2152 F3E0                                 l2136 EB16  
                               l2128 EB0A                                 l2240 F26A  
                               l2224 F234                                 l2208 F1E8  
                               l2400 EBF6                                 l2144 EB5E  
                               l2322 EA38                                 l2306 E9E4  
                               l2314 EAC6                                 l2066 F0DA  
                               l2058 F0C4                                 l2090 F322  
                               l2082 F2E2                                 l2074 F2BE  
                               l2170 F4B0                                 l2154 F3F4  
                               l2250 F292                                 l2242 F26E  
                               l2234 F244                                 l2226 F238  
                               l2218 F218                                 l2410 EC0C  
                               l2402 EBF8                                 l2146 EB68  
                               l2138 EB56                                 l2316 EACE  
                               l2308 EA00                                 l2260 EE3E  
                               l2068 F0E0                                 l2092 F356  
                               l2180 F4E2                                 l2172 F4B6  
                               l2340 F038                                 l2324 EF90  
                               l2252 F29C                                 l2244 F286  
                               l2236 F250                                 l2228 F240  
                               l2500 F690                                 l2412 EC10  
                               l2148 EB6C                                 l2318 EAE6  
                               l2270 EE72                                 l2262 EE46  
                               l2094 F35A                                 l2190 F510  
                               l2182 F4E8                                 l2174 F4C4  
                               l2166 F410                                 l2342 EEDC  
                               l2334 F004                                 l2326 EFF8  
                               l2246 F28E                                 l2238 F262  
                               l2254 F29E                                 l2510 F6E0  
                               l2502 F69A                                 l2440 EA80  
                               l2280 EEAE                                 l2272 EE7A  
                               l2264 EE4A                                 l2256 EE2C  
                               l2096 F376                                 l2088 F2EA  
                               l2184 F4EC                                 l2168 F492  
                               l2352 EF50                                 l2344 EF44  
                               l2336 F018                                 l2328 EFFC  
                               l2248 F290                                 l2520 F742  
                               l2512 F6F6                                 l2504 F6B4  
                               l2408 EC00                                 l2360 ED82  
                               l2282 EEB4                                 l2274 EE82  
                               l2266 EE58                                 l2258 EE30  
                               l2098 F37A                                 l2186 F4F0  
                               l2178 F4D6                                 l2194 F522  
                               l2354 EF64                                 l2346 EF48  
                               l2338 F01C                                 l2530 F798  
                               l2522 F75C                                 l2514 F710  
                               l2506 F6CC                                 l2450 EC6C  
                               l2442 EB22                                 l2362 EDA4  
                               l2370 EDD4                                 l2292 E9F2  
                               l2436 EA68                                 l2276 EE90  
                               l2284 EEBA                                 l2268 EE60  
                               l2196 F560                                 l2188 F50C  
                               l2356 EF68                                 l2540 F7D2  
                               l2516 F730                                 l2508 F6DC  
                               l2532 F7A0                                 l2452 EC70  
                               l2444 EC30                                 l2372 EDE0  
                               l2364 EDBE                                 l2380 EE14  
                               l2620 ECFC                                 l2294 EAA4  
                               l2438 EA7C                                 l2462 E9CC  
                               l2382 E9D8                                 l2286 EECA  
                               l2278 EEA6                                 l2358 EF84  
                               l2198 EA12                                 l2390 EC9A  
                               l2542 F7E4                                 l2534 F7B0  
                               l2518 F734                                 l2526 F780  
                               l2470 F58E                                 l2454 EC80  
                               l2446 EC30                                 l2374 EDF6  
                               l2366 EDCC                                 l2550 EBA0  
                               l2630 ED20                                 l2622 ED00  
                               l2296 EAB0                                 l2464 E9D2  
                               l2456 E9BE                                 l2288 EED2  
                               l2392 ECC0                                 l2384 EC86  
                               l2544 F7E8                                 l2528 F78E  
                               l2536 F7B8                                 l2480 F5F0  
                               l2472 F59C                                 l2448 EC46  
                               l2376 EDFA                                 l2552 EBB0  
                               l2640 ED4A                                 l2632 ED24  
                               l2624 ED04                                 l2298 EAB2  
                               l2458 EA24                                 l2394 ECC2  
                               l2538 F7D0                                 l2546 F7EE  
                               l2490 F63A                                 l2474 F5AC  
                               l2482 F5F4                                 l2466 F566  
                               l2378 EE10                                 l2554 EBC2  
                               l2650 ED68                                 l2642 ED4E  
                               l2634 ED34                                 l2626 ED08  
                               l2618 ECF4                                 l2396 ECDA  
                               l2492 F65A                                 l2484 F602  
                               l2476 F5CC                                 l2468 F574  
                               l2556 EBD4                                 l2548 EB8E  
                               l2644 ED50                                 l2636 ED38  
                               l2628 ED1C                                 l2652 ED6E  
                               l2494 F662                                 l2486 F61C  
                               l2478 F5D4                                 l2398 EBE0  
                               l2558 EBD8                                 l2654 ED72  
                               l2646 ED60                                 l2638 ED3A  
                               l2496 F67E                                 l2488 F62A  
                               l2656 ED76                                 l2648 ED64  
                               l2498 F682                                 l1992 EA50  
                               l1994 EA52                                 l1996 F104  
                               l1998 F108                                 STR_1 FFF9  
                       _triggerAlarm ED82                                 u1000 F156  
                               u1001 F152                                 u1010 F174  
                               u1011 F170                                 u1020 F190  
                               u1100 F376                                 u1021 F18C  
                               u1101 F372                                 u1030 F1B6  
                               u1110 F396                                 u1031 F1B2  
                               u1111 F392                                 u1040 F0A8  
                               u1120 F3DE                                 u1200 F4D2  
                               u1041 F0A4                                 u1121 F3DA  
                               u1201 F4CE                                 u1050 F100  
                               u1210 F50C                                 u1051 F0FC  
                               u1211 F508                                 u1300 EE3E  
                               u1220 F51E                                 u1140 EB88  
                               u1301 EE3A                                 u1061 F2B8  
                               u1221 F51A                                 u1141 EB84  
                               u1310 EE58                                 u1230 F550  
                               u1150 F43E                                 u1311 EE54  
                               u1135 EB1E                                 u1320 EE72  
                               u1080 F322                                 u1240 F560  
                               u1136 EB20                                 u1400 EE2A  
                               u1321 EE6E                                 u1081 F31E  
                               u1241 F55C                                 u1401 EE26  
                               u1330 EE90                                 u1074 F308  
                               u1170 F492                                 u1250 F214  
                               u1410 ECD2                                 u1331 EE8C  
                               u1075 F304                                 u1171 F48E  
                               u1251 F210                                 u1411 ECCE  
                               u1340 EEA6                                 u1164 F478  
                               u1260 F262                                 u1500 F5AC  
                               u1420 EC2C                                 u1341 EEA2  
                               u1237 F546                                 u1165 F474  
                               u1157 F434                                 u1261 F25E  
                               u1501 F5A8                                 u1421 EC28  
                               _LATA 0F89                                 u1350 EECA  
                               u1094 F33E                                 u1190 F4C4  
                               u1270 F27E                                 u1510 F602  
                               _LATB 0F8A                                 u1351 EEC6  
                               u1095 F33A                                 u1191 F4C0  
                               u1271 F27A                                 u1511 F5FE  
                               _LATC 0F8B                                 u1184 F4A6  
                               u1360 F038                                 u1600 F7B0  
                               u1520 F62A                                 u1185 F4A2  
                               u1361 F034                                 u1601 F7AC  
                               u1521 F626                                 u1370 EF84  
                               u1290 F2B0                                 u1610 F7D0  
                               u1530 F63A                                 u1450 EC6C  
                               u1371 EF80                                 u1291 F2AC  
                               u1611 F7CC                                 u1531 F636  
                               u1451 EC68                                 u1620 F7E4  
                               u1540 F690                                 u1460 EC80  
                               u1380 EDA4                                 u1285 F29A  
                               u1621 F7E0                                 u1541 F68C  
                               u1461 EC7C                                 u1381 EDA0  
                               u1470 EA34                                 u1286 F29C  
                               u1550 F6CC                                 u1390 EDCC  
                               u1630 EBA0                                 u1471 EA2E  
                               u1551 F6C8                                 u1391 EDC8  
                               u1631 EB9C                                 u1560 F6DC  
                               u1480 F574                                 u1640 EBB0  
                               u1800 ED4A                                 u1561 F6D8  
                               u1481 F570                                 u1641 EBAC  
                               u1801 ED46                                 u1570 F6F6  
                               u1490 F59C                                 u1650 EBC2  
                               u1810 ED60                                 u1571 F6F2  
                               u1491 F598                                 u1651 EBBE  
                               u1811 ED5C                                 u1476 EA36  
                               u1580 F742                                 u1660 EBD4  
                               u1581 F73E                                 u1661 EBD0  
                               u1590 F78E                                 u1591 F78A  
                               u1907 F700                                 u1780 ED1C  
                               u1917 F74C                                 u1781 ED18  
                               u1790 ED34                                 u1847 EDAE  
                               u1791 ED30                                 u1857 EDEA  
                               u1867 EE04                                 u1877 F57E  
                               u1887 F60C                                 u1897 F6A4  
                               _TMR2 0FCC                                 _WPUB 0F7C  
                               _main ECF4                      _TMR0_StartTimer E9BE  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                       printString@i 0050                         printString@j 0054  
                       printString@k 0052                    ?_FLASH_WriteBlock 0006  
                               prodl 0FF3                                 start 0000  
             __end_of_SPI_Initialize EA00                         ?_flushBuffer 0001  
                 ??_FLASH_WriteBlock 000B                         ___param_bank 0000  
        saveTimeToFlash@flashAddress 0054                 __end_of_clearDisplay EB8E  
        checkButtons@button3HoldTime 00A2              __end_of_PWM2_Initialize E9F2  
            __end_of_TMR0_Initialize EAEE        __end_of_OSCILLATOR_Initialize E9CC  
                              ?_main 0001                      __end_of___awdiv F1C8  
                  ??_saveTimeToFlash 0014                                _EEADR 0FA9  
                    __end_of___awmod EEDC                                _ANSEL 0F7E  
                              _T0CON 0FD5                      ___awdiv@divisor 0003  
                              _T2CON 0FCA                      ___awdiv@counter 0005  
                              _RCREG 0FAE                                _RCSTA 0FAB  
                              _TMR0H 0FD7                                _TMR0L 0FD6  
                              _SPBRG 0FAF                                _TRISA 0F92  
                              _TRISB 0F93                                _TRISC 0F94  
                              _TXREG 0FAD                                _TXSTA 0FAC  
                              _hours 005F                         displayTime@i 00BA  
                   _button3PressTime 00A4                      max7219_cmd@Addr 0005  
                              tablat 0FF5                      max7219_cmd@data 0002  
                              status 0FD8                      ?_SPI_Initialize 0001  
                     _alarmTriggered 005D                      __initialization EA86  
                       __end_of_main ED82              FLASH_ReadByte@flashAddr 0001  
            __end_of_TMR2_Initialize EA12                               ??_main 005C  
                      __activetblptr 0002             __end_of_SPI_Exchange8bit EA68  
            __end_of_TMR0_StartTimer E9C2            FLASH_WriteBlock@writeAddr 0006  
                             _EEADRH 0FAA                               _EEDATA 0FA8  
                             _CCPR2H 0FBC                               _CCPR2L 0FBB  
                             _EECON2 0FA7                     ___awdiv@dividend 0001  
                             _ANSELH 0F7F                               _TABLAT 0FF5  
                             _OSCCON 0FD3                               _SPBRGH 0FB0  
                             _SSPADD 0FC8                               _SSPBUF 0FC9  
              triggerAlarm@numCycles 0058                         ?_TMR0_Reload 0001  
                          ??___awdiv 0005                            ??___awmod 0005  
                   ?_TMR0_Initialize 0001                     ?_PWM2_Initialize 0001  
                             clear_0 EA8C                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 0001  
                    ___awmod@counter 0005                     flushBuffer@F2561 0060  
              displayTime@timeString 00B5                       printString@str 0041  
                  displayAlarmTime@i 00BA          FLASH_WriteBlock@dataCounter 0012  
                  ?_displayAlarmTime 0001                         __mediumconst F7F8  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                         _checkButtons F566  
                 ??_displayAlarmTime 0056                         ?_printString 0041  
                  _SYSTEM_Initialize EA68                           __accesstop 0060  
            __end_of__initialization EA9A                   ?_SYSTEM_Initialize 0001  
                      ___rparam_used 0001                       __pcstackCOMRAM 0001  
                ??_SYSTEM_Initialize 0003                         _alarmMinutes 00AD  
                   ?_TMR2_Initialize 0001      __end_of_MAX7219_Dot_Matrix_font FFF9  
        FLASH_WriteBlock@GIEBitValue 000F                         _clearDisplay EB56  
                   ?_TMR0_StartTimer 0001            __end_of_SYSTEM_Initialize EA86  
                     flushBuffer@dev 0039                       flushBuffer@row 003D  
                         __pbssBANK0 0060                           _alarmHours 00AE  
                         _clearAlarm E9D8        displayAlarmTime@displayString 00B0  
                       flushBuffer@i 003F                         flushBuffer@j 003B  
                    _saveTimeToFlash EC86                           _blinkTimer 00A6  
                            _CCP2CON 0FBA                              _BAUDCON 0FB8  
                     _FLASH_ReadByte EA12                              _TBLPTRH 0FF7  
                            _TBLPTRL 0FF6                              _TBLPTRU 0FF8  
                            _OSCTUNE 0F9B                              _SSPCON1 0FC6  
                            _SSPSTAT 0FC7              _TMR0_HasOverflowOccured EA24  
                   _FLASH_EraseBlock EAEE                     ??_SPI_Initialize 0001  
                            __Hparam 0000                              __Lparam 0000  
                            ___awdiv F104                              ___awmod EE2C  
                   _isButton3Pressed 00A9               __end_of_FLASH_ReadByte EA24  
                            __pcinit EA86                              __ramtop 1000  
                         _matrixInit EB22                              __ptext0 ECF4  
                            __ptext1 EB8E                              __ptext2 ED82  
                            __ptext3 EB56                              __ptext4 EB22  
                            __ptext5 EBDE                              __ptext6 EC30  
                            __ptext7 F566                              __ptext8 EC86  
                            __ptext9 F1C8                            _T0CONbits 0FD5  
                      ??_max7219_cmd 0003                _OSCILLATOR_Initialize E9C2  
                          _T2CONbits 0FCA                     ___awmod@dividend 0001  
                  __end_of_max_write F104                              _minutes 005E  
           ??_PIN_MANAGER_Initialize 0001                              _seconds 00AF  
                  ?_SPI_Exchange8bit 0001                 end_of_initialization EA9A  
                    printString@data 004D                        triggerAlarm@i 005A  
                 ??_SPI_Exchange8bit 0001                      printString@indx 004B  
               SPI_Exchange8bit@data 0001              __end_of_saveTimeToFlash ECF4  
                      __Lmediumconst F7F8                          ?_clearAlarm 0001  
                  _EUSART_Initialize EA38                         max_write@dev 0012  
                 ?_EUSART_Initialize 0001                         max_write@row 0009  
                          _RCSTAbits 0FAB                              postinc0 0FEE  
                            postinc2 0FDE                      ?_FLASH_ReadByte 0001  
                ??_EUSART_Initialize 0001                     saveTimeToFlash@i 0058  
                  _loadTimeFromFlash EC30                        ?_processAlarm 0001  
                          _PORTBbits 0F81                        clearDisplay@i 0041  
                 ?_loadTimeFromFlash 0001            ??_TMR0_HasOverflowOccured 0001  
      FLASH_WriteBlock@flashWrBufPtr 000A                  ??_loadTimeFromFlash 0005  
                __end_of_max7219_cmd EC30             FLASH_EraseBlock@baseAddr 0001  
          __end_of_EUSART_Initialize EA4E                            _TXSTAbits 0FAC  
                  FLASH_WriteBlock@i 0013                    FLASH_WriteBlock@j 0010  
         saveTimeToFlash@flashBuffer 0014                        ??_displayTime 0056  
          __end_of_loadTimeFromFlash EC86                       ??_processAlarm 005C  
                        ?_matrixInit 0001         checkButtons@alarmSettingMode 005C  
                   _FLASH_WriteBlock F1C8               ?_OSCILLATOR_Initialize 0001  
                start_initialization EA86                        ?_triggerAlarm 0001  
                   ?_saveTimeToFlash 0001                   printString@strindx 004E  
                      ??_flushBuffer 0016      displayAlarmTime@alarmTimeString 00B5  
        FLASH_EraseBlock@GIEBitValue 0005             __end_of_FLASH_EraseBlock EB22  
                __end_of_displayTime F044                          _max7219_cmd EBDE  
                        __pbssCOMRAM 005C                          _alarmActive 00AB  
                      __pcstackBANK0 00B0                       ??_triggerAlarm 0056  
                       max7219_cmd@i 0008              _MAX7219_Dot_Matrix_font F7F9  
             _PIN_MANAGER_Initialize EAA4                        __pmediumconst F7F8  
                           ?___awdiv 0001                             ?___awmod 0001  
                __end_of_flushBuffer F3E0                            _bufferCol 0080  
                          _max_write F044       FLASH_WriteBlock@blockStartAddr 000B  
                  ??_TMR0_Initialize 0001                    ??_PWM2_Initialize 0001  
               __end_of_processAlarm EBDE                             _LATCbits 0F8B  
                       ??_clearAlarm 0001                     _displayAlarmTime EEDC  
                    max_write@offset 000E                             _PIR1bits 0F9E  
                   ??_FLASH_ReadByte 0005                             _PIR2bits 0FA1  
                      ??_TMR0_Reload 0001                          _displayTime EF90  
                 __end_of_clearAlarm E9E4                        ?_checkButtons 0001  
                        _INTCON2bits 0FF1                           ?_max_write 0009  
                      ??_printString 0043                    ??_TMR2_Initialize 0001  
           __end_of_FLASH_WriteBlock F2B2                           _EECON1bits 0FA6  
                           __Hrparam 0000                          _flushBuffer F2B2  
                           __Lrparam 0000                   max_write@devTarget 0010  
            ??_OSCILLATOR_Initialize 0001                 __end_of_triggerAlarm EE2C  
                  ??_TMR0_StartTimer 0001                         ??_matrixInit 000A  
                __end_of_TMR0_Reload E9D8                             _alarmSet 00AC  
                     ??_checkButtons 0059                        ?_clearDisplay 0001  
                           __ptext10 EAEE                             __ptext11 EA12  
                           __ptext20 E9D8                             __ptext12 EF90  
                           __ptext21 E9BE                             __ptext13 EEDC  
                           __ptext30 E9C2                             __ptext22 E9CC  
                           __ptext14 F3E0                             __ptext31 EA38  
                           __ptext23 EA24                             __ptext15 F2B2  
                           __ptext24 EA68                             __ptext16 F044  
                           __ptext25 EA00                             __ptext17 F104  
                           __ptext26 EAC6                             __ptext18 EA4E  
                           __ptext27 E9F2                             __ptext19 EE2C  
                           __ptext28 E9E4                             __ptext29 EAA4  
                 __end_of_matrixInit EB56                  __end_of_printString F566  
               flushBuffer@bufferRow 0019                      _displayBlinking 00AA  
                           isa$xinst 0000                 max7219_cmd@writeData 0006  
                  ?_FLASH_EraseBlock 0001  FLASH_WriteBlock@numberOfWriteBlocks 0011  
           ?_TMR0_HasOverflowOccured 0001                         ?_max7219_cmd 0002  
                 ??_FLASH_EraseBlock 0005                           _INTCONbits 0FF2  
                     ??_clearDisplay 0041                   max_write@writeData 0014  
                        ??_max_write 000C              ?_PIN_MANAGER_Initialize 0001  
                      max_write@data 000B                     _SPI_Exchange8bit EA4E  
                        _TMR0_Reload E9CC             displayTime@displayString 00B0  
                       _processAlarm EB8E             __end_of_displayAlarmTime EF90  
                    _TMR0_Initialize EAC6                      _PWM2_Initialize E9E4  
      checkButtons@button3PressCount 00A8                          _SSPCON1bits 0FC6  
     __end_of_PIN_MANAGER_Initialize EAC6                          _printString F3E0  
