

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Mon Sep 09 22:27:21 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    43                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    44                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    45   000000                     
    46                           ; Generated 05/01/2024 GMT
    47                           ; 
    48                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    49                           ; All rights reserved.
    50                           ; 
    51                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    52                           ; 
    53                           ; Redistribution and use in source and binary forms, with or without modification, are
    54                           ; permitted provided that the following conditions are met:
    55                           ; 
    56                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    57                           ;        conditions and the following disclaimer.
    58                           ; 
    59                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    60                           ;        of conditions and the following disclaimer in the documentation and/or other
    61                           ;        materials provided with the distribution. Publication is not required when
    62                           ;        this file is used in an embedded application.
    63                           ; 
    64                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    65                           ;        software without specific prior written permission.
    66                           ; 
    67                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    68                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    69                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    70                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    71                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    72                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    73                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    74                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    75                           ; 
    76                           ; 
    77                           ; Code-generator required, PIC18F26K20 Definitions
    78                           ; 
    79                           ; SFR Addresses
    80   000000                     
    81                           	psect	mediumconst
    82   00F52E                     __pmediumconst:
    83                           	callstack 0
    84   00F52E  00                 	db	0
    85   00F52F                     _MAX7219_Dot_Matrix_font:
    86                           	callstack 0
    87   00F52F  00                 	db	0
    88   00F530  00                 	db	0
    89   00F531  00                 	db	0
    90   00F532  00                 	db	0
    91   00F533  00                 	db	0
    92   00F534  00                 	db	0
    93   00F535  00                 	db	0
    94   00F536  00                 	db	0
    95   00F537  7E                 	db	126
    96   00F538  81                 	db	129
    97   00F539  95                 	db	149
    98   00F53A  B1                 	db	177
    99   00F53B  B1                 	db	177
   100   00F53C  95                 	db	149
   101   00F53D  81                 	db	129
   102   00F53E  7E                 	db	126
   103   00F53F  7E                 	db	126
   104   00F540  FF                 	db	255
   105   00F541  EB                 	db	235
   106   00F542  CF                 	db	207
   107   00F543  CF                 	db	207
   108   00F544  EB                 	db	235
   109   00F545  FF                 	db	255
   110   00F546  7E                 	db	126
   111   00F547  0E                 	db	14
   112   00F548  1F                 	db	31
   113   00F549  3F                 	db	63
   114   00F54A  7E                 	db	126
   115   00F54B  3F                 	db	63
   116   00F54C  1F                 	db	31
   117   00F54D  0E                 	db	14
   118   00F54E  00                 	db	0
   119   00F54F  08                 	db	8
   120   00F550  1C                 	db	28
   121   00F551  3E                 	db	62
   122   00F552  7F                 	db	127
   123   00F553  3E                 	db	62
   124   00F554  1C                 	db	28
   125   00F555  08                 	db	8
   126   00F556  00                 	db	0
   127   00F557  18                 	db	24
   128   00F558  BA                 	db	186
   129   00F559  FF                 	db	255
   130   00F55A  FF                 	db	255
   131   00F55B  FF                 	db	255
   132   00F55C  BA                 	db	186
   133   00F55D  18                 	db	24
   134   00F55E  00                 	db	0
   135   00F55F  10                 	db	16
   136   00F560  B8                 	db	184
   137   00F561  FC                 	db	252
   138   00F562  FF                 	db	255
   139   00F563  FC                 	db	252
   140   00F564  B8                 	db	184
   141   00F565  10                 	db	16
   142   00F566  00                 	db	0
   143   00F567  00                 	db	0
   144   00F568  00                 	db	0
   145   00F569  18                 	db	24
   146   00F56A  3C                 	db	60
   147   00F56B  3C                 	db	60
   148   00F56C  18                 	db	24
   149   00F56D  00                 	db	0
   150   00F56E  00                 	db	0
   151   00F56F  FF                 	db	255
   152   00F570  FF                 	db	255
   153   00F571  E7                 	db	231
   154   00F572  C3                 	db	195
   155   00F573  C3                 	db	195
   156   00F574  E7                 	db	231
   157   00F575  FF                 	db	255
   158   00F576  FF                 	db	255
   159   00F577  00                 	db	0
   160   00F578  3C                 	db	60
   161   00F579  66                 	db	102
   162   00F57A  42                 	db	66
   163   00F57B  42                 	db	66
   164   00F57C  66                 	db	102
   165   00F57D  3C                 	db	60
   166   00F57E  00                 	db	0
   167   00F57F  FF                 	db	255
   168   00F580  C3                 	db	195
   169   00F581  99                 	db	153
   170   00F582  BD                 	db	189
   171   00F583  BD                 	db	189
   172   00F584  99                 	db	153
   173   00F585  C3                 	db	195
   174   00F586  FF                 	db	255
   175   00F587  70                 	db	112
   176   00F588  F8                 	db	248
   177   00F589  88                 	db	136
   178   00F58A  88                 	db	136
   179   00F58B  FD                 	db	253
   180   00F58C  7F                 	db	127
   181   00F58D  07                 	db	7
   182   00F58E  0F                 	db	15
   183   00F58F  00                 	db	0
   184   00F590  4E                 	db	78
   185   00F591  5F                 	db	95
   186   00F592  F1                 	db	241
   187   00F593  F1                 	db	241
   188   00F594  5F                 	db	95
   189   00F595  4E                 	db	78
   190   00F596  00                 	db	0
   191   00F597  C0                 	db	192
   192   00F598  E0                 	db	224
   193   00F599  FF                 	db	255
   194   00F59A  7F                 	db	127
   195   00F59B  05                 	db	5
   196   00F59C  05                 	db	5
   197   00F59D  07                 	db	7
   198   00F59E  07                 	db	7
   199   00F59F  C0                 	db	192
   200   00F5A0  FF                 	db	255
   201   00F5A1  7F                 	db	127
   202   00F5A2  05                 	db	5
   203   00F5A3  05                 	db	5
   204   00F5A4  65                 	db	101
   205   00F5A5  7F                 	db	127
   206   00F5A6  3F                 	db	63
   207   00F5A7  99                 	db	153
   208   00F5A8  5A                 	db	90
   209   00F5A9  3C                 	db	60
   210   00F5AA  E7                 	db	231
   211   00F5AB  E7                 	db	231
   212   00F5AC  3C                 	db	60
   213   00F5AD  5A                 	db	90
   214   00F5AE  99                 	db	153
   215   00F5AF  7F                 	db	127
   216   00F5B0  3E                 	db	62
   217   00F5B1  3E                 	db	62
   218   00F5B2  1C                 	db	28
   219   00F5B3  1C                 	db	28
   220   00F5B4  08                 	db	8
   221   00F5B5  08                 	db	8
   222   00F5B6  00                 	db	0
   223   00F5B7  08                 	db	8
   224   00F5B8  08                 	db	8
   225   00F5B9  1C                 	db	28
   226   00F5BA  1C                 	db	28
   227   00F5BB  3E                 	db	62
   228   00F5BC  3E                 	db	62
   229   00F5BD  7F                 	db	127
   230   00F5BE  00                 	db	0
   231   00F5BF  00                 	db	0
   232   00F5C0  24                 	db	36
   233   00F5C1  66                 	db	102
   234   00F5C2  FF                 	db	255
   235   00F5C3  FF                 	db	255
   236   00F5C4  66                 	db	102
   237   00F5C5  24                 	db	36
   238   00F5C6  00                 	db	0
   239   00F5C7  00                 	db	0
   240   00F5C8  5F                 	db	95
   241   00F5C9  5F                 	db	95
   242   00F5CA  00                 	db	0
   243   00F5CB  00                 	db	0
   244   00F5CC  5F                 	db	95
   245   00F5CD  5F                 	db	95
   246   00F5CE  00                 	db	0
   247   00F5CF  06                 	db	6
   248   00F5D0  0F                 	db	15
   249   00F5D1  09                 	db	9
   250   00F5D2  7F                 	db	127
   251   00F5D3  7F                 	db	127
   252   00F5D4  01                 	db	1
   253   00F5D5  7F                 	db	127
   254   00F5D6  7F                 	db	127
   255   00F5D7  40                 	db	64
   256   00F5D8  DA                 	db	218
   257   00F5D9  BF                 	db	191
   258   00F5DA  A5                 	db	165
   259   00F5DB  FD                 	db	253
   260   00F5DC  59                 	db	89
   261   00F5DD  03                 	db	3
   262   00F5DE  02                 	db	2
   263   00F5DF  00                 	db	0
   264   00F5E0  70                 	db	112
   265   00F5E1  70                 	db	112
   266   00F5E2  70                 	db	112
   267   00F5E3  70                 	db	112
   268   00F5E4  70                 	db	112
   269   00F5E5  70                 	db	112
   270   00F5E6  00                 	db	0
   271   00F5E7  80                 	db	128
   272   00F5E8  94                 	db	148
   273   00F5E9  B6                 	db	182
   274   00F5EA  FF                 	db	255
   275   00F5EB  FF                 	db	255
   276   00F5EC  B6                 	db	182
   277   00F5ED  94                 	db	148
   278   00F5EE  80                 	db	128
   279   00F5EF  00                 	db	0
   280   00F5F0  04                 	db	4
   281   00F5F1  06                 	db	6
   282   00F5F2  7F                 	db	127
   283   00F5F3  7F                 	db	127
   284   00F5F4  06                 	db	6
   285   00F5F5  04                 	db	4
   286   00F5F6  00                 	db	0
   287   00F5F7  00                 	db	0
   288   00F5F8  10                 	db	16
   289   00F5F9  30                 	db	48
   290   00F5FA  7F                 	db	127
   291   00F5FB  7F                 	db	127
   292   00F5FC  30                 	db	48
   293   00F5FD  10                 	db	16
   294   00F5FE  00                 	db	0
   295   00F5FF  08                 	db	8
   296   00F600  08                 	db	8
   297   00F601  08                 	db	8
   298   00F602  2A                 	db	42
   299   00F603  3E                 	db	62
   300   00F604  1C                 	db	28
   301   00F605  08                 	db	8
   302   00F606  00                 	db	0
   303   00F607  08                 	db	8
   304   00F608  1C                 	db	28
   305   00F609  3E                 	db	62
   306   00F60A  2A                 	db	42
   307   00F60B  08                 	db	8
   308   00F60C  08                 	db	8
   309   00F60D  08                 	db	8
   310   00F60E  00                 	db	0
   311   00F60F  3C                 	db	60
   312   00F610  3C                 	db	60
   313   00F611  20                 	db	32
   314   00F612  20                 	db	32
   315   00F613  20                 	db	32
   316   00F614  20                 	db	32
   317   00F615  20                 	db	32
   318   00F616  00                 	db	0
   319   00F617  08                 	db	8
   320   00F618  1C                 	db	28
   321   00F619  3E                 	db	62
   322   00F61A  08                 	db	8
   323   00F61B  08                 	db	8
   324   00F61C  3E                 	db	62
   325   00F61D  1C                 	db	28
   326   00F61E  08                 	db	8
   327   00F61F  30                 	db	48
   328   00F620  38                 	db	56
   329   00F621  3C                 	db	60
   330   00F622  3E                 	db	62
   331   00F623  3E                 	db	62
   332   00F624  3C                 	db	60
   333   00F625  38                 	db	56
   334   00F626  30                 	db	48
   335   00F627  06                 	db	6
   336   00F628  0E                 	db	14
   337   00F629  1E                 	db	30
   338   00F62A  3E                 	db	62
   339   00F62B  3E                 	db	62
   340   00F62C  1E                 	db	30
   341   00F62D  0E                 	db	14
   342   00F62E  06                 	db	6
   343   00F62F  00                 	db	0
   344   00F630  00                 	db	0
   345   00F631  00                 	db	0
   346   00F632  00                 	db	0
   347   00F633  00                 	db	0
   348   00F634  00                 	db	0
   349   00F635  00                 	db	0
   350   00F636  00                 	db	0
   351   00F637  00                 	db	0
   352   00F638  06                 	db	6
   353   00F639  5F                 	db	95
   354   00F63A  5F                 	db	95
   355   00F63B  06                 	db	6
   356   00F63C  00                 	db	0
   357   00F63D  00                 	db	0
   358   00F63E  00                 	db	0
   359   00F63F  00                 	db	0
   360   00F640  07                 	db	7
   361   00F641  07                 	db	7
   362   00F642  00                 	db	0
   363   00F643  07                 	db	7
   364   00F644  07                 	db	7
   365   00F645  00                 	db	0
   366   00F646  00                 	db	0
   367   00F647  14                 	db	20
   368   00F648  7F                 	db	127
   369   00F649  7F                 	db	127
   370   00F64A  14                 	db	20
   371   00F64B  7F                 	db	127
   372   00F64C  7F                 	db	127
   373   00F64D  14                 	db	20
   374   00F64E  00                 	db	0
   375   00F64F  24                 	db	36
   376   00F650  2E                 	db	46
   377   00F651  6B                 	db	107
   378   00F652  6B                 	db	107
   379   00F653  3A                 	db	58
   380   00F654  12                 	db	18
   381   00F655  00                 	db	0
   382   00F656  00                 	db	0
   383   00F657  46                 	db	70
   384   00F658  66                 	db	102
   385   00F659  30                 	db	48
   386   00F65A  18                 	db	24
   387   00F65B  0C                 	db	12
   388   00F65C  66                 	db	102
   389   00F65D  62                 	db	98
   390   00F65E  00                 	db	0
   391   00F65F  30                 	db	48
   392   00F660  7A                 	db	122
   393   00F661  4F                 	db	79
   394   00F662  5D                 	db	93
   395   00F663  37                 	db	55
   396   00F664  7A                 	db	122
   397   00F665  48                 	db	72
   398   00F666  00                 	db	0
   399   00F667  04                 	db	4
   400   00F668  07                 	db	7
   401   00F669  03                 	db	3
   402   00F66A  00                 	db	0
   403   00F66B  00                 	db	0
   404   00F66C  00                 	db	0
   405   00F66D  00                 	db	0
   406   00F66E  00                 	db	0
   407   00F66F  00                 	db	0
   408   00F670  1C                 	db	28
   409   00F671  3E                 	db	62
   410   00F672  63                 	db	99
   411   00F673  41                 	db	65
   412   00F674  00                 	db	0
   413   00F675  00                 	db	0
   414   00F676  00                 	db	0
   415   00F677  00                 	db	0
   416   00F678  41                 	db	65
   417   00F679  63                 	db	99
   418   00F67A  3E                 	db	62
   419   00F67B  1C                 	db	28
   420   00F67C  00                 	db	0
   421   00F67D  00                 	db	0
   422   00F67E  00                 	db	0
   423   00F67F  08                 	db	8
   424   00F680  2A                 	db	42
   425   00F681  3E                 	db	62
   426   00F682  1C                 	db	28
   427   00F683  1C                 	db	28
   428   00F684  3E                 	db	62
   429   00F685  2A                 	db	42
   430   00F686  08                 	db	8
   431   00F687  08                 	db	8
   432   00F688  08                 	db	8
   433   00F689  3E                 	db	62
   434   00F68A  3E                 	db	62
   435   00F68B  08                 	db	8
   436   00F68C  08                 	db	8
   437   00F68D  00                 	db	0
   438   00F68E  00                 	db	0
   439   00F68F  00                 	db	0
   440   00F690  80                 	db	128
   441   00F691  E0                 	db	224
   442   00F692  60                 	db	96
   443   00F693  00                 	db	0
   444   00F694  00                 	db	0
   445   00F695  00                 	db	0
   446   00F696  00                 	db	0
   447   00F697  08                 	db	8
   448   00F698  08                 	db	8
   449   00F699  08                 	db	8
   450   00F69A  08                 	db	8
   451   00F69B  08                 	db	8
   452   00F69C  08                 	db	8
   453   00F69D  00                 	db	0
   454   00F69E  00                 	db	0
   455   00F69F  00                 	db	0
   456   00F6A0  00                 	db	0
   457   00F6A1  60                 	db	96
   458   00F6A2  60                 	db	96
   459   00F6A3  00                 	db	0
   460   00F6A4  00                 	db	0
   461   00F6A5  00                 	db	0
   462   00F6A6  00                 	db	0
   463   00F6A7  60                 	db	96
   464   00F6A8  30                 	db	48
   465   00F6A9  18                 	db	24
   466   00F6AA  0C                 	db	12
   467   00F6AB  06                 	db	6
   468   00F6AC  03                 	db	3
   469   00F6AD  01                 	db	1
   470   00F6AE  00                 	db	0
   471   00F6AF  3E                 	db	62
   472   00F6B0  7F                 	db	127
   473   00F6B1  71                 	db	113
   474   00F6B2  59                 	db	89
   475   00F6B3  4D                 	db	77
   476   00F6B4  7F                 	db	127
   477   00F6B5  3E                 	db	62
   478   00F6B6  00                 	db	0
   479   00F6B7  40                 	db	64
   480   00F6B8  42                 	db	66
   481   00F6B9  7F                 	db	127
   482   00F6BA  7F                 	db	127
   483   00F6BB  40                 	db	64
   484   00F6BC  40                 	db	64
   485   00F6BD  00                 	db	0
   486   00F6BE  00                 	db	0
   487   00F6BF  62                 	db	98
   488   00F6C0  73                 	db	115
   489   00F6C1  59                 	db	89
   490   00F6C2  49                 	db	73
   491   00F6C3  6F                 	db	111
   492   00F6C4  66                 	db	102
   493   00F6C5  00                 	db	0
   494   00F6C6  00                 	db	0
   495   00F6C7  22                 	db	34
   496   00F6C8  63                 	db	99
   497   00F6C9  49                 	db	73
   498   00F6CA  49                 	db	73
   499   00F6CB  7F                 	db	127
   500   00F6CC  36                 	db	54
   501   00F6CD  00                 	db	0
   502   00F6CE  00                 	db	0
   503   00F6CF  18                 	db	24
   504   00F6D0  1C                 	db	28
   505   00F6D1  16                 	db	22
   506   00F6D2  53                 	db	83
   507   00F6D3  7F                 	db	127
   508   00F6D4  7F                 	db	127
   509   00F6D5  50                 	db	80
   510   00F6D6  00                 	db	0
   511   00F6D7  27                 	db	39
   512   00F6D8  67                 	db	103
   513   00F6D9  45                 	db	69
   514   00F6DA  45                 	db	69
   515   00F6DB  7D                 	db	125
   516   00F6DC  39                 	db	57
   517   00F6DD  00                 	db	0
   518   00F6DE  00                 	db	0
   519   00F6DF  3C                 	db	60
   520   00F6E0  7E                 	db	126
   521   00F6E1  4B                 	db	75
   522   00F6E2  49                 	db	73
   523   00F6E3  79                 	db	121
   524   00F6E4  30                 	db	48
   525   00F6E5  00                 	db	0
   526   00F6E6  00                 	db	0
   527   00F6E7  03                 	db	3
   528   00F6E8  03                 	db	3
   529   00F6E9  71                 	db	113
   530   00F6EA  79                 	db	121
   531   00F6EB  0F                 	db	15
   532   00F6EC  07                 	db	7
   533   00F6ED  00                 	db	0
   534   00F6EE  00                 	db	0
   535   00F6EF  36                 	db	54
   536   00F6F0  7F                 	db	127
   537   00F6F1  49                 	db	73
   538   00F6F2  49                 	db	73
   539   00F6F3  7F                 	db	127
   540   00F6F4  36                 	db	54
   541   00F6F5  00                 	db	0
   542   00F6F6  00                 	db	0
   543   00F6F7  06                 	db	6
   544   00F6F8  4F                 	db	79
   545   00F6F9  49                 	db	73
   546   00F6FA  69                 	db	105
   547   00F6FB  3F                 	db	63
   548   00F6FC  1E                 	db	30
   549   00F6FD  00                 	db	0
   550   00F6FE  00                 	db	0
   551   00F6FF  00                 	db	0
   552   00F700  00                 	db	0
   553   00F701  66                 	db	102
   554   00F702  66                 	db	102
   555   00F703  00                 	db	0
   556   00F704  00                 	db	0
   557   00F705  00                 	db	0
   558   00F706  00                 	db	0
   559   00F707  00                 	db	0
   560   00F708  80                 	db	128
   561   00F709  E6                 	db	230
   562   00F70A  66                 	db	102
   563   00F70B  00                 	db	0
   564   00F70C  00                 	db	0
   565   00F70D  00                 	db	0
   566   00F70E  00                 	db	0
   567   00F70F  08                 	db	8
   568   00F710  1C                 	db	28
   569   00F711  36                 	db	54
   570   00F712  63                 	db	99
   571   00F713  41                 	db	65
   572   00F714  00                 	db	0
   573   00F715  00                 	db	0
   574   00F716  00                 	db	0
   575   00F717  24                 	db	36
   576   00F718  24                 	db	36
   577   00F719  24                 	db	36
   578   00F71A  24                 	db	36
   579   00F71B  24                 	db	36
   580   00F71C  24                 	db	36
   581   00F71D  00                 	db	0
   582   00F71E  00                 	db	0
   583   00F71F  00                 	db	0
   584   00F720  41                 	db	65
   585   00F721  63                 	db	99
   586   00F722  36                 	db	54
   587   00F723  1C                 	db	28
   588   00F724  08                 	db	8
   589   00F725  00                 	db	0
   590   00F726  00                 	db	0
   591   00F727  02                 	db	2
   592   00F728  03                 	db	3
   593   00F729  51                 	db	81
   594   00F72A  59                 	db	89
   595   00F72B  0F                 	db	15
   596   00F72C  06                 	db	6
   597   00F72D  00                 	db	0
   598   00F72E  00                 	db	0
   599   00F72F  3E                 	db	62
   600   00F730  7F                 	db	127
   601   00F731  41                 	db	65
   602   00F732  5D                 	db	93
   603   00F733  5D                 	db	93
   604   00F734  1F                 	db	31
   605   00F735  1E                 	db	30
   606   00F736  00                 	db	0
   607   00F737  7C                 	db	124
   608   00F738  7E                 	db	126
   609   00F739  13                 	db	19
   610   00F73A  13                 	db	19
   611   00F73B  7E                 	db	126
   612   00F73C  7C                 	db	124
   613   00F73D  00                 	db	0
   614   00F73E  00                 	db	0
   615   00F73F  41                 	db	65
   616   00F740  7F                 	db	127
   617   00F741  7F                 	db	127
   618   00F742  49                 	db	73
   619   00F743  49                 	db	73
   620   00F744  7F                 	db	127
   621   00F745  36                 	db	54
   622   00F746  00                 	db	0
   623   00F747  1C                 	db	28
   624   00F748  3E                 	db	62
   625   00F749  63                 	db	99
   626   00F74A  41                 	db	65
   627   00F74B  41                 	db	65
   628   00F74C  63                 	db	99
   629   00F74D  22                 	db	34
   630   00F74E  00                 	db	0
   631   00F74F  41                 	db	65
   632   00F750  7F                 	db	127
   633   00F751  7F                 	db	127
   634   00F752  41                 	db	65
   635   00F753  63                 	db	99
   636   00F754  3E                 	db	62
   637   00F755  1C                 	db	28
   638   00F756  00                 	db	0
   639   00F757  41                 	db	65
   640   00F758  7F                 	db	127
   641   00F759  7F                 	db	127
   642   00F75A  49                 	db	73
   643   00F75B  5D                 	db	93
   644   00F75C  41                 	db	65
   645   00F75D  63                 	db	99
   646   00F75E  00                 	db	0
   647   00F75F  41                 	db	65
   648   00F760  7F                 	db	127
   649   00F761  7F                 	db	127
   650   00F762  49                 	db	73
   651   00F763  1D                 	db	29
   652   00F764  01                 	db	1
   653   00F765  03                 	db	3
   654   00F766  00                 	db	0
   655   00F767  1C                 	db	28
   656   00F768  3E                 	db	62
   657   00F769  63                 	db	99
   658   00F76A  41                 	db	65
   659   00F76B  51                 	db	81
   660   00F76C  73                 	db	115
   661   00F76D  72                 	db	114
   662   00F76E  00                 	db	0
   663   00F76F  7F                 	db	127
   664   00F770  7F                 	db	127
   665   00F771  08                 	db	8
   666   00F772  08                 	db	8
   667   00F773  7F                 	db	127
   668   00F774  7F                 	db	127
   669   00F775  00                 	db	0
   670   00F776  00                 	db	0
   671   00F777  00                 	db	0
   672   00F778  41                 	db	65
   673   00F779  7F                 	db	127
   674   00F77A  7F                 	db	127
   675   00F77B  41                 	db	65
   676   00F77C  00                 	db	0
   677   00F77D  00                 	db	0
   678   00F77E  00                 	db	0
   679   00F77F  30                 	db	48
   680   00F780  70                 	db	112
   681   00F781  40                 	db	64
   682   00F782  41                 	db	65
   683   00F783  7F                 	db	127
   684   00F784  3F                 	db	63
   685   00F785  01                 	db	1
   686   00F786  00                 	db	0
   687   00F787  41                 	db	65
   688   00F788  7F                 	db	127
   689   00F789  7F                 	db	127
   690   00F78A  08                 	db	8
   691   00F78B  1C                 	db	28
   692   00F78C  77                 	db	119
   693   00F78D  63                 	db	99
   694   00F78E  00                 	db	0
   695   00F78F  41                 	db	65
   696   00F790  7F                 	db	127
   697   00F791  7F                 	db	127
   698   00F792  41                 	db	65
   699   00F793  40                 	db	64
   700   00F794  60                 	db	96
   701   00F795  70                 	db	112
   702   00F796  00                 	db	0
   703   00F797  00                 	db	0
   704   00F798  7F                 	db	127
   705   00F799  0E                 	db	14
   706   00F79A  1C                 	db	28
   707   00F79B  0E                 	db	14
   708   00F79C  7F                 	db	127
   709   00F79D  00                 	db	0
   710   00F79E  00                 	db	0
   711   00F79F  7F                 	db	127
   712   00F7A0  7F                 	db	127
   713   00F7A1  06                 	db	6
   714   00F7A2  0C                 	db	12
   715   00F7A3  18                 	db	24
   716   00F7A4  7F                 	db	127
   717   00F7A5  7F                 	db	127
   718   00F7A6  00                 	db	0
   719   00F7A7  1C                 	db	28
   720   00F7A8  3E                 	db	62
   721   00F7A9  63                 	db	99
   722   00F7AA  41                 	db	65
   723   00F7AB  63                 	db	99
   724   00F7AC  3E                 	db	62
   725   00F7AD  1C                 	db	28
   726   00F7AE  00                 	db	0
   727   00F7AF  41                 	db	65
   728   00F7B0  7F                 	db	127
   729   00F7B1  7F                 	db	127
   730   00F7B2  49                 	db	73
   731   00F7B3  09                 	db	9
   732   00F7B4  0F                 	db	15
   733   00F7B5  06                 	db	6
   734   00F7B6  00                 	db	0
   735   00F7B7  1E                 	db	30
   736   00F7B8  3F                 	db	63
   737   00F7B9  21                 	db	33
   738   00F7BA  71                 	db	113
   739   00F7BB  7F                 	db	127
   740   00F7BC  5E                 	db	94
   741   00F7BD  00                 	db	0
   742   00F7BE  00                 	db	0
   743   00F7BF  41                 	db	65
   744   00F7C0  7F                 	db	127
   745   00F7C1  7F                 	db	127
   746   00F7C2  09                 	db	9
   747   00F7C3  19                 	db	25
   748   00F7C4  7F                 	db	127
   749   00F7C5  66                 	db	102
   750   00F7C6  00                 	db	0
   751   00F7C7  26                 	db	38
   752   00F7C8  6F                 	db	111
   753   00F7C9  4D                 	db	77
   754   00F7CA  59                 	db	89
   755   00F7CB  73                 	db	115
   756   00F7CC  32                 	db	50
   757   00F7CD  00                 	db	0
   758   00F7CE  00                 	db	0
   759   00F7CF  03                 	db	3
   760   00F7D0  41                 	db	65
   761   00F7D1  7F                 	db	127
   762   00F7D2  7F                 	db	127
   763   00F7D3  41                 	db	65
   764   00F7D4  03                 	db	3
   765   00F7D5  00                 	db	0
   766   00F7D6  00                 	db	0
   767   00F7D7  7F                 	db	127
   768   00F7D8  7F                 	db	127
   769   00F7D9  40                 	db	64
   770   00F7DA  40                 	db	64
   771   00F7DB  7F                 	db	127
   772   00F7DC  7F                 	db	127
   773   00F7DD  00                 	db	0
   774   00F7DE  00                 	db	0
   775   00F7DF  1F                 	db	31
   776   00F7E0  3F                 	db	63
   777   00F7E1  60                 	db	96
   778   00F7E2  60                 	db	96
   779   00F7E3  3F                 	db	63
   780   00F7E4  1F                 	db	31
   781   00F7E5  00                 	db	0
   782   00F7E6  00                 	db	0
   783   00F7E7  7F                 	db	127
   784   00F7E8  7F                 	db	127
   785   00F7E9  30                 	db	48
   786   00F7EA  18                 	db	24
   787   00F7EB  30                 	db	48
   788   00F7EC  7F                 	db	127
   789   00F7ED  7F                 	db	127
   790   00F7EE  00                 	db	0
   791   00F7EF  43                 	db	67
   792   00F7F0  67                 	db	103
   793   00F7F1  3C                 	db	60
   794   00F7F2  18                 	db	24
   795   00F7F3  3C                 	db	60
   796   00F7F4  67                 	db	103
   797   00F7F5  43                 	db	67
   798   00F7F6  00                 	db	0
   799   00F7F7  07                 	db	7
   800   00F7F8  4F                 	db	79
   801   00F7F9  78                 	db	120
   802   00F7FA  78                 	db	120
   803   00F7FB  4F                 	db	79
   804   00F7FC  07                 	db	7
   805   00F7FD  00                 	db	0
   806   00F7FE  00                 	db	0
   807   00F7FF  47                 	db	71
   808   00F800  63                 	db	99
   809   00F801  71                 	db	113
   810   00F802  59                 	db	89
   811   00F803  4D                 	db	77
   812   00F804  67                 	db	103
   813   00F805  73                 	db	115
   814   00F806  00                 	db	0
   815   00F807  00                 	db	0
   816   00F808  7F                 	db	127
   817   00F809  7F                 	db	127
   818   00F80A  41                 	db	65
   819   00F80B  41                 	db	65
   820   00F80C  00                 	db	0
   821   00F80D  00                 	db	0
   822   00F80E  00                 	db	0
   823   00F80F  01                 	db	1
   824   00F810  03                 	db	3
   825   00F811  06                 	db	6
   826   00F812  0C                 	db	12
   827   00F813  18                 	db	24
   828   00F814  30                 	db	48
   829   00F815  60                 	db	96
   830   00F816  00                 	db	0
   831   00F817  00                 	db	0
   832   00F818  41                 	db	65
   833   00F819  41                 	db	65
   834   00F81A  7F                 	db	127
   835   00F81B  7F                 	db	127
   836   00F81C  00                 	db	0
   837   00F81D  00                 	db	0
   838   00F81E  00                 	db	0
   839   00F81F  08                 	db	8
   840   00F820  0C                 	db	12
   841   00F821  06                 	db	6
   842   00F822  03                 	db	3
   843   00F823  06                 	db	6
   844   00F824  0C                 	db	12
   845   00F825  08                 	db	8
   846   00F826  00                 	db	0
   847   00F827  80                 	db	128
   848   00F828  80                 	db	128
   849   00F829  80                 	db	128
   850   00F82A  80                 	db	128
   851   00F82B  80                 	db	128
   852   00F82C  80                 	db	128
   853   00F82D  80                 	db	128
   854   00F82E  80                 	db	128
   855   00F82F  00                 	db	0
   856   00F830  00                 	db	0
   857   00F831  03                 	db	3
   858   00F832  07                 	db	7
   859   00F833  04                 	db	4
   860   00F834  00                 	db	0
   861   00F835  00                 	db	0
   862   00F836  00                 	db	0
   863   00F837  20                 	db	32
   864   00F838  74                 	db	116
   865   00F839  54                 	db	84
   866   00F83A  54                 	db	84
   867   00F83B  3C                 	db	60
   868   00F83C  78                 	db	120
   869   00F83D  40                 	db	64
   870   00F83E  00                 	db	0
   871   00F83F  41                 	db	65
   872   00F840  7F                 	db	127
   873   00F841  3F                 	db	63
   874   00F842  48                 	db	72
   875   00F843  48                 	db	72
   876   00F844  78                 	db	120
   877   00F845  30                 	db	48
   878   00F846  00                 	db	0
   879   00F847  38                 	db	56
   880   00F848  7C                 	db	124
   881   00F849  44                 	db	68
   882   00F84A  44                 	db	68
   883   00F84B  6C                 	db	108
   884   00F84C  28                 	db	40
   885   00F84D  00                 	db	0
   886   00F84E  00                 	db	0
   887   00F84F  30                 	db	48
   888   00F850  78                 	db	120
   889   00F851  48                 	db	72
   890   00F852  49                 	db	73
   891   00F853  3F                 	db	63
   892   00F854  7F                 	db	127
   893   00F855  40                 	db	64
   894   00F856  00                 	db	0
   895   00F857  38                 	db	56
   896   00F858  7C                 	db	124
   897   00F859  54                 	db	84
   898   00F85A  54                 	db	84
   899   00F85B  5C                 	db	92
   900   00F85C  18                 	db	24
   901   00F85D  00                 	db	0
   902   00F85E  00                 	db	0
   903   00F85F  48                 	db	72
   904   00F860  7E                 	db	126
   905   00F861  7F                 	db	127
   906   00F862  49                 	db	73
   907   00F863  03                 	db	3
   908   00F864  02                 	db	2
   909   00F865  00                 	db	0
   910   00F866  00                 	db	0
   911   00F867  98                 	db	152
   912   00F868  BC                 	db	188
   913   00F869  A4                 	db	164
   914   00F86A  A4                 	db	164
   915   00F86B  F8                 	db	248
   916   00F86C  7C                 	db	124
   917   00F86D  04                 	db	4
   918   00F86E  00                 	db	0
   919   00F86F  41                 	db	65
   920   00F870  7F                 	db	127
   921   00F871  7F                 	db	127
   922   00F872  08                 	db	8
   923   00F873  04                 	db	4
   924   00F874  7C                 	db	124
   925   00F875  78                 	db	120
   926   00F876  00                 	db	0
   927   00F877  00                 	db	0
   928   00F878  44                 	db	68
   929   00F879  7D                 	db	125
   930   00F87A  7D                 	db	125
   931   00F87B  40                 	db	64
   932   00F87C  00                 	db	0
   933   00F87D  00                 	db	0
   934   00F87E  00                 	db	0
   935   00F87F  60                 	db	96
   936   00F880  E0                 	db	224
   937   00F881  80                 	db	128
   938   00F882  80                 	db	128
   939   00F883  FD                 	db	253
   940   00F884  7D                 	db	125
   941   00F885  00                 	db	0
   942   00F886  00                 	db	0
   943   00F887  41                 	db	65
   944   00F888  7F                 	db	127
   945   00F889  7F                 	db	127
   946   00F88A  10                 	db	16
   947   00F88B  38                 	db	56
   948   00F88C  6C                 	db	108
   949   00F88D  44                 	db	68
   950   00F88E  00                 	db	0
   951   00F88F  00                 	db	0
   952   00F890  41                 	db	65
   953   00F891  7F                 	db	127
   954   00F892  7F                 	db	127
   955   00F893  40                 	db	64
   956   00F894  00                 	db	0
   957   00F895  00                 	db	0
   958   00F896  00                 	db	0
   959   00F897  7C                 	db	124
   960   00F898  7C                 	db	124
   961   00F899  18                 	db	24
   962   00F89A  38                 	db	56
   963   00F89B  1C                 	db	28
   964   00F89C  7C                 	db	124
   965   00F89D  78                 	db	120
   966   00F89E  00                 	db	0
   967   00F89F  7C                 	db	124
   968   00F8A0  7C                 	db	124
   969   00F8A1  04                 	db	4
   970   00F8A2  04                 	db	4
   971   00F8A3  7C                 	db	124
   972   00F8A4  78                 	db	120
   973   00F8A5  00                 	db	0
   974   00F8A6  00                 	db	0
   975   00F8A7  38                 	db	56
   976   00F8A8  7C                 	db	124
   977   00F8A9  44                 	db	68
   978   00F8AA  44                 	db	68
   979   00F8AB  7C                 	db	124
   980   00F8AC  38                 	db	56
   981   00F8AD  00                 	db	0
   982   00F8AE  00                 	db	0
   983   00F8AF  84                 	db	132
   984   00F8B0  FC                 	db	252
   985   00F8B1  F8                 	db	248
   986   00F8B2  A4                 	db	164
   987   00F8B3  24                 	db	36
   988   00F8B4  3C                 	db	60
   989   00F8B5  18                 	db	24
   990   00F8B6  00                 	db	0
   991   00F8B7  18                 	db	24
   992   00F8B8  3C                 	db	60
   993   00F8B9  24                 	db	36
   994   00F8BA  A4                 	db	164
   995   00F8BB  F8                 	db	248
   996   00F8BC  FC                 	db	252
   997   00F8BD  84                 	db	132
   998   00F8BE  00                 	db	0
   999   00F8BF  44                 	db	68
  1000   00F8C0  7C                 	db	124
  1001   00F8C1  78                 	db	120
  1002   00F8C2  4C                 	db	76
  1003   00F8C3  04                 	db	4
  1004   00F8C4  1C                 	db	28
  1005   00F8C5  18                 	db	24
  1006   00F8C6  00                 	db	0
  1007   00F8C7  48                 	db	72
  1008   00F8C8  5C                 	db	92
  1009   00F8C9  54                 	db	84
  1010   00F8CA  54                 	db	84
  1011   00F8CB  74                 	db	116
  1012   00F8CC  24                 	db	36
  1013   00F8CD  00                 	db	0
  1014   00F8CE  00                 	db	0
  1015   00F8CF  00                 	db	0
  1016   00F8D0  04                 	db	4
  1017   00F8D1  3E                 	db	62
  1018   00F8D2  7F                 	db	127
  1019   00F8D3  44                 	db	68
  1020   00F8D4  24                 	db	36
  1021   00F8D5  00                 	db	0
  1022   00F8D6  00                 	db	0
  1023   00F8D7  3C                 	db	60
  1024   00F8D8  7C                 	db	124
  1025   00F8D9  40                 	db	64
  1026   00F8DA  40                 	db	64
  1027   00F8DB  3C                 	db	60
  1028   00F8DC  7C                 	db	124
  1029   00F8DD  40                 	db	64
  1030   00F8DE  00                 	db	0
  1031   00F8DF  1C                 	db	28
  1032   00F8E0  3C                 	db	60
  1033   00F8E1  60                 	db	96
  1034   00F8E2  60                 	db	96
  1035   00F8E3  3C                 	db	60
  1036   00F8E4  1C                 	db	28
  1037   00F8E5  00                 	db	0
  1038   00F8E6  00                 	db	0
  1039   00F8E7  3C                 	db	60
  1040   00F8E8  7C                 	db	124
  1041   00F8E9  70                 	db	112
  1042   00F8EA  38                 	db	56
  1043   00F8EB  70                 	db	112
  1044   00F8EC  7C                 	db	124
  1045   00F8ED  3C                 	db	60
  1046   00F8EE  00                 	db	0
  1047   00F8EF  44                 	db	68
  1048   00F8F0  6C                 	db	108
  1049   00F8F1  38                 	db	56
  1050   00F8F2  10                 	db	16
  1051   00F8F3  38                 	db	56
  1052   00F8F4  6C                 	db	108
  1053   00F8F5  44                 	db	68
  1054   00F8F6  00                 	db	0
  1055   00F8F7  9C                 	db	156
  1056   00F8F8  BC                 	db	188
  1057   00F8F9  A0                 	db	160
  1058   00F8FA  A0                 	db	160
  1059   00F8FB  FC                 	db	252
  1060   00F8FC  7C                 	db	124
  1061   00F8FD  00                 	db	0
  1062   00F8FE  00                 	db	0
  1063   00F8FF  4C                 	db	76
  1064   00F900  64                 	db	100
  1065   00F901  74                 	db	116
  1066   00F902  5C                 	db	92
  1067   00F903  4C                 	db	76
  1068   00F904  64                 	db	100
  1069   00F905  00                 	db	0
  1070   00F906  00                 	db	0
  1071   00F907  08                 	db	8
  1072   00F908  08                 	db	8
  1073   00F909  3E                 	db	62
  1074   00F90A  77                 	db	119
  1075   00F90B  41                 	db	65
  1076   00F90C  41                 	db	65
  1077   00F90D  00                 	db	0
  1078   00F90E  00                 	db	0
  1079   00F90F  00                 	db	0
  1080   00F910  00                 	db	0
  1081   00F911  00                 	db	0
  1082   00F912  77                 	db	119
  1083   00F913  77                 	db	119
  1084   00F914  00                 	db	0
  1085   00F915  00                 	db	0
  1086   00F916  00                 	db	0
  1087   00F917  41                 	db	65
  1088   00F918  41                 	db	65
  1089   00F919  77                 	db	119
  1090   00F91A  3E                 	db	62
  1091   00F91B  08                 	db	8
  1092   00F91C  08                 	db	8
  1093   00F91D  00                 	db	0
  1094   00F91E  00                 	db	0
  1095   00F91F  02                 	db	2
  1096   00F920  03                 	db	3
  1097   00F921  01                 	db	1
  1098   00F922  03                 	db	3
  1099   00F923  02                 	db	2
  1100   00F924  03                 	db	3
  1101   00F925  01                 	db	1
  1102   00F926  00                 	db	0
  1103   00F927  70                 	db	112
  1104   00F928  78                 	db	120
  1105   00F929  4C                 	db	76
  1106   00F92A  46                 	db	70
  1107   00F92B  4C                 	db	76
  1108   00F92C  78                 	db	120
  1109   00F92D  70                 	db	112
  1110   00F92E  00                 	db	0
  1111   00F92F  0E                 	db	14
  1112   00F930  9F                 	db	159
  1113   00F931  91                 	db	145
  1114   00F932  B1                 	db	177
  1115   00F933  FB                 	db	251
  1116   00F934  4A                 	db	74
  1117   00F935  00                 	db	0
  1118   00F936  00                 	db	0
  1119   00F937  3A                 	db	58
  1120   00F938  7A                 	db	122
  1121   00F939  40                 	db	64
  1122   00F93A  40                 	db	64
  1123   00F93B  7A                 	db	122
  1124   00F93C  7A                 	db	122
  1125   00F93D  40                 	db	64
  1126   00F93E  00                 	db	0
  1127   00F93F  38                 	db	56
  1128   00F940  7C                 	db	124
  1129   00F941  54                 	db	84
  1130   00F942  55                 	db	85
  1131   00F943  5D                 	db	93
  1132   00F944  19                 	db	25
  1133   00F945  00                 	db	0
  1134   00F946  00                 	db	0
  1135   00F947  02                 	db	2
  1136   00F948  23                 	db	35
  1137   00F949  75                 	db	117
  1138   00F94A  55                 	db	85
  1139   00F94B  55                 	db	85
  1140   00F94C  7D                 	db	125
  1141   00F94D  7B                 	db	123
  1142   00F94E  42                 	db	66
  1143   00F94F  21                 	db	33
  1144   00F950  75                 	db	117
  1145   00F951  54                 	db	84
  1146   00F952  54                 	db	84
  1147   00F953  7D                 	db	125
  1148   00F954  79                 	db	121
  1149   00F955  40                 	db	64
  1150   00F956  00                 	db	0
  1151   00F957  21                 	db	33
  1152   00F958  75                 	db	117
  1153   00F959  55                 	db	85
  1154   00F95A  54                 	db	84
  1155   00F95B  7C                 	db	124
  1156   00F95C  78                 	db	120
  1157   00F95D  40                 	db	64
  1158   00F95E  00                 	db	0
  1159   00F95F  20                 	db	32
  1160   00F960  74                 	db	116
  1161   00F961  57                 	db	87
  1162   00F962  57                 	db	87
  1163   00F963  7C                 	db	124
  1164   00F964  78                 	db	120
  1165   00F965  40                 	db	64
  1166   00F966  00                 	db	0
  1167   00F967  18                 	db	24
  1168   00F968  3C                 	db	60
  1169   00F969  A4                 	db	164
  1170   00F96A  A4                 	db	164
  1171   00F96B  E4                 	db	228
  1172   00F96C  40                 	db	64
  1173   00F96D  00                 	db	0
  1174   00F96E  00                 	db	0
  1175   00F96F  02                 	db	2
  1176   00F970  3B                 	db	59
  1177   00F971  7D                 	db	125
  1178   00F972  55                 	db	85
  1179   00F973  55                 	db	85
  1180   00F974  5D                 	db	93
  1181   00F975  1B                 	db	27
  1182   00F976  02                 	db	2
  1183   00F977  39                 	db	57
  1184   00F978  7D                 	db	125
  1185   00F979  54                 	db	84
  1186   00F97A  54                 	db	84
  1187   00F97B  5D                 	db	93
  1188   00F97C  19                 	db	25
  1189   00F97D  00                 	db	0
  1190   00F97E  00                 	db	0
  1191   00F97F  39                 	db	57
  1192   00F980  7D                 	db	125
  1193   00F981  55                 	db	85
  1194   00F982  54                 	db	84
  1195   00F983  5C                 	db	92
  1196   00F984  18                 	db	24
  1197   00F985  00                 	db	0
  1198   00F986  00                 	db	0
  1199   00F987  01                 	db	1
  1200   00F988  45                 	db	69
  1201   00F989  7C                 	db	124
  1202   00F98A  7C                 	db	124
  1203   00F98B  41                 	db	65
  1204   00F98C  01                 	db	1
  1205   00F98D  00                 	db	0
  1206   00F98E  00                 	db	0
  1207   00F98F  02                 	db	2
  1208   00F990  03                 	db	3
  1209   00F991  45                 	db	69
  1210   00F992  7D                 	db	125
  1211   00F993  7D                 	db	125
  1212   00F994  43                 	db	67
  1213   00F995  02                 	db	2
  1214   00F996  00                 	db	0
  1215   00F997  01                 	db	1
  1216   00F998  45                 	db	69
  1217   00F999  7D                 	db	125
  1218   00F99A  7C                 	db	124
  1219   00F99B  40                 	db	64
  1220   00F99C  00                 	db	0
  1221   00F99D  00                 	db	0
  1222   00F99E  00                 	db	0
  1223   00F99F  79                 	db	121
  1224   00F9A0  7D                 	db	125
  1225   00F9A1  16                 	db	22
  1226   00F9A2  12                 	db	18
  1227   00F9A3  16                 	db	22
  1228   00F9A4  7D                 	db	125
  1229   00F9A5  79                 	db	121
  1230   00F9A6  00                 	db	0
  1231   00F9A7  70                 	db	112
  1232   00F9A8  78                 	db	120
  1233   00F9A9  2B                 	db	43
  1234   00F9AA  2B                 	db	43
  1235   00F9AB  78                 	db	120
  1236   00F9AC  70                 	db	112
  1237   00F9AD  00                 	db	0
  1238   00F9AE  00                 	db	0
  1239   00F9AF  44                 	db	68
  1240   00F9B0  7C                 	db	124
  1241   00F9B1  7C                 	db	124
  1242   00F9B2  55                 	db	85
  1243   00F9B3  55                 	db	85
  1244   00F9B4  45                 	db	69
  1245   00F9B5  00                 	db	0
  1246   00F9B6  00                 	db	0
  1247   00F9B7  20                 	db	32
  1248   00F9B8  74                 	db	116
  1249   00F9B9  54                 	db	84
  1250   00F9BA  54                 	db	84
  1251   00F9BB  7C                 	db	124
  1252   00F9BC  7C                 	db	124
  1253   00F9BD  54                 	db	84
  1254   00F9BE  54                 	db	84
  1255   00F9BF  7C                 	db	124
  1256   00F9C0  7E                 	db	126
  1257   00F9C1  0B                 	db	11
  1258   00F9C2  09                 	db	9
  1259   00F9C3  7F                 	db	127
  1260   00F9C4  7F                 	db	127
  1261   00F9C5  49                 	db	73
  1262   00F9C6  00                 	db	0
  1263   00F9C7  32                 	db	50
  1264   00F9C8  7B                 	db	123
  1265   00F9C9  49                 	db	73
  1266   00F9CA  49                 	db	73
  1267   00F9CB  7B                 	db	123
  1268   00F9CC  32                 	db	50
  1269   00F9CD  00                 	db	0
  1270   00F9CE  00                 	db	0
  1271   00F9CF  32                 	db	50
  1272   00F9D0  7A                 	db	122
  1273   00F9D1  48                 	db	72
  1274   00F9D2  48                 	db	72
  1275   00F9D3  7A                 	db	122
  1276   00F9D4  32                 	db	50
  1277   00F9D5  00                 	db	0
  1278   00F9D6  00                 	db	0
  1279   00F9D7  32                 	db	50
  1280   00F9D8  7A                 	db	122
  1281   00F9D9  4A                 	db	74
  1282   00F9DA  48                 	db	72
  1283   00F9DB  78                 	db	120
  1284   00F9DC  30                 	db	48
  1285   00F9DD  00                 	db	0
  1286   00F9DE  00                 	db	0
  1287   00F9DF  3A                 	db	58
  1288   00F9E0  7B                 	db	123
  1289   00F9E1  41                 	db	65
  1290   00F9E2  41                 	db	65
  1291   00F9E3  7B                 	db	123
  1292   00F9E4  7A                 	db	122
  1293   00F9E5  40                 	db	64
  1294   00F9E6  00                 	db	0
  1295   00F9E7  3A                 	db	58
  1296   00F9E8  7A                 	db	122
  1297   00F9E9  42                 	db	66
  1298   00F9EA  40                 	db	64
  1299   00F9EB  78                 	db	120
  1300   00F9EC  78                 	db	120
  1301   00F9ED  40                 	db	64
  1302   00F9EE  00                 	db	0
  1303   00F9EF  9A                 	db	154
  1304   00F9F0  BA                 	db	186
  1305   00F9F1  A0                 	db	160
  1306   00F9F2  A0                 	db	160
  1307   00F9F3  FA                 	db	250
  1308   00F9F4  7A                 	db	122
  1309   00F9F5  00                 	db	0
  1310   00F9F6  00                 	db	0
  1311   00F9F7  01                 	db	1
  1312   00F9F8  19                 	db	25
  1313   00F9F9  3C                 	db	60
  1314   00F9FA  66                 	db	102
  1315   00F9FB  66                 	db	102
  1316   00F9FC  3C                 	db	60
  1317   00F9FD  19                 	db	25
  1318   00F9FE  01                 	db	1
  1319   00F9FF  3D                 	db	61
  1320   00FA00  7D                 	db	125
  1321   00FA01  40                 	db	64
  1322   00FA02  40                 	db	64
  1323   00FA03  7D                 	db	125
  1324   00FA04  3D                 	db	61
  1325   00FA05  00                 	db	0
  1326   00FA06  00                 	db	0
  1327   00FA07  18                 	db	24
  1328   00FA08  3C                 	db	60
  1329   00FA09  24                 	db	36
  1330   00FA0A  E7                 	db	231
  1331   00FA0B  E7                 	db	231
  1332   00FA0C  24                 	db	36
  1333   00FA0D  24                 	db	36
  1334   00FA0E  00                 	db	0
  1335   00FA0F  68                 	db	104
  1336   00FA10  7E                 	db	126
  1337   00FA11  7F                 	db	127
  1338   00FA12  49                 	db	73
  1339   00FA13  43                 	db	67
  1340   00FA14  66                 	db	102
  1341   00FA15  20                 	db	32
  1342   00FA16  00                 	db	0
  1343   00FA17  2B                 	db	43
  1344   00FA18  2F                 	db	47
  1345   00FA19  FC                 	db	252
  1346   00FA1A  FC                 	db	252
  1347   00FA1B  2F                 	db	47
  1348   00FA1C  2B                 	db	43
  1349   00FA1D  00                 	db	0
  1350   00FA1E  00                 	db	0
  1351   00FA1F  FF                 	db	255
  1352   00FA20  FF                 	db	255
  1353   00FA21  09                 	db	9
  1354   00FA22  09                 	db	9
  1355   00FA23  2F                 	db	47
  1356   00FA24  F6                 	db	246
  1357   00FA25  F8                 	db	248
  1358   00FA26  A0                 	db	160
  1359   00FA27  40                 	db	64
  1360   00FA28  C0                 	db	192
  1361   00FA29  88                 	db	136
  1362   00FA2A  FE                 	db	254
  1363   00FA2B  7F                 	db	127
  1364   00FA2C  09                 	db	9
  1365   00FA2D  03                 	db	3
  1366   00FA2E  02                 	db	2
  1367   00FA2F  20                 	db	32
  1368   00FA30  74                 	db	116
  1369   00FA31  54                 	db	84
  1370   00FA32  55                 	db	85
  1371   00FA33  7D                 	db	125
  1372   00FA34  79                 	db	121
  1373   00FA35  40                 	db	64
  1374   00FA36  00                 	db	0
  1375   00FA37  00                 	db	0
  1376   00FA38  44                 	db	68
  1377   00FA39  7D                 	db	125
  1378   00FA3A  7D                 	db	125
  1379   00FA3B  41                 	db	65
  1380   00FA3C  00                 	db	0
  1381   00FA3D  00                 	db	0
  1382   00FA3E  00                 	db	0
  1383   00FA3F  30                 	db	48
  1384   00FA40  78                 	db	120
  1385   00FA41  48                 	db	72
  1386   00FA42  4A                 	db	74
  1387   00FA43  7A                 	db	122
  1388   00FA44  32                 	db	50
  1389   00FA45  00                 	db	0
  1390   00FA46  00                 	db	0
  1391   00FA47  38                 	db	56
  1392   00FA48  78                 	db	120
  1393   00FA49  40                 	db	64
  1394   00FA4A  42                 	db	66
  1395   00FA4B  7A                 	db	122
  1396   00FA4C  7A                 	db	122
  1397   00FA4D  40                 	db	64
  1398   00FA4E  00                 	db	0
  1399   00FA4F  7A                 	db	122
  1400   00FA50  7A                 	db	122
  1401   00FA51  0A                 	db	10
  1402   00FA52  0A                 	db	10
  1403   00FA53  7A                 	db	122
  1404   00FA54  70                 	db	112
  1405   00FA55  00                 	db	0
  1406   00FA56  00                 	db	0
  1407   00FA57  7D                 	db	125
  1408   00FA58  7D                 	db	125
  1409   00FA59  19                 	db	25
  1410   00FA5A  31                 	db	49
  1411   00FA5B  7D                 	db	125
  1412   00FA5C  7D                 	db	125
  1413   00FA5D  00                 	db	0
  1414   00FA5E  00                 	db	0
  1415   00FA5F  00                 	db	0
  1416   00FA60  26                 	db	38
  1417   00FA61  2F                 	db	47
  1418   00FA62  29                 	db	41
  1419   00FA63  2F                 	db	47
  1420   00FA64  2F                 	db	47
  1421   00FA65  28                 	db	40
  1422   00FA66  00                 	db	0
  1423   00FA67  00                 	db	0
  1424   00FA68  26                 	db	38
  1425   00FA69  2F                 	db	47
  1426   00FA6A  29                 	db	41
  1427   00FA6B  2F                 	db	47
  1428   00FA6C  26                 	db	38
  1429   00FA6D  00                 	db	0
  1430   00FA6E  00                 	db	0
  1431   00FA6F  30                 	db	48
  1432   00FA70  78                 	db	120
  1433   00FA71  4D                 	db	77
  1434   00FA72  45                 	db	69
  1435   00FA73  60                 	db	96
  1436   00FA74  20                 	db	32
  1437   00FA75  00                 	db	0
  1438   00FA76  00                 	db	0
  1439   00FA77  38                 	db	56
  1440   00FA78  38                 	db	56
  1441   00FA79  08                 	db	8
  1442   00FA7A  08                 	db	8
  1443   00FA7B  08                 	db	8
  1444   00FA7C  08                 	db	8
  1445   00FA7D  00                 	db	0
  1446   00FA7E  00                 	db	0
  1447   00FA7F  08                 	db	8
  1448   00FA80  08                 	db	8
  1449   00FA81  08                 	db	8
  1450   00FA82  08                 	db	8
  1451   00FA83  38                 	db	56
  1452   00FA84  38                 	db	56
  1453   00FA85  00                 	db	0
  1454   00FA86  00                 	db	0
  1455   00FA87  4F                 	db	79
  1456   00FA88  6F                 	db	111
  1457   00FA89  30                 	db	48
  1458   00FA8A  18                 	db	24
  1459   00FA8B  CC                 	db	204
  1460   00FA8C  EE                 	db	238
  1461   00FA8D  BB                 	db	187
  1462   00FA8E  91                 	db	145
  1463   00FA8F  4F                 	db	79
  1464   00FA90  6F                 	db	111
  1465   00FA91  30                 	db	48
  1466   00FA92  18                 	db	24
  1467   00FA93  6C                 	db	108
  1468   00FA94  76                 	db	118
  1469   00FA95  FB                 	db	251
  1470   00FA96  F9                 	db	249
  1471   00FA97  00                 	db	0
  1472   00FA98  00                 	db	0
  1473   00FA99  00                 	db	0
  1474   00FA9A  7B                 	db	123
  1475   00FA9B  7B                 	db	123
  1476   00FA9C  00                 	db	0
  1477   00FA9D  00                 	db	0
  1478   00FA9E  00                 	db	0
  1479   00FA9F  08                 	db	8
  1480   00FAA0  1C                 	db	28
  1481   00FAA1  36                 	db	54
  1482   00FAA2  22                 	db	34
  1483   00FAA3  08                 	db	8
  1484   00FAA4  1C                 	db	28
  1485   00FAA5  36                 	db	54
  1486   00FAA6  22                 	db	34
  1487   00FAA7  22                 	db	34
  1488   00FAA8  36                 	db	54
  1489   00FAA9  1C                 	db	28
  1490   00FAAA  08                 	db	8
  1491   00FAAB  22                 	db	34
  1492   00FAAC  36                 	db	54
  1493   00FAAD  1C                 	db	28
  1494   00FAAE  08                 	db	8
  1495   00FAAF  AA                 	db	170
  1496   00FAB0  00                 	db	0
  1497   00FAB1  55                 	db	85
  1498   00FAB2  00                 	db	0
  1499   00FAB3  AA                 	db	170
  1500   00FAB4  00                 	db	0
  1501   00FAB5  55                 	db	85
  1502   00FAB6  00                 	db	0
  1503   00FAB7  AA                 	db	170
  1504   00FAB8  55                 	db	85
  1505   00FAB9  AA                 	db	170
  1506   00FABA  55                 	db	85
  1507   00FABB  AA                 	db	170
  1508   00FABC  55                 	db	85
  1509   00FABD  AA                 	db	170
  1510   00FABE  55                 	db	85
  1511   00FABF  DD                 	db	221
  1512   00FAC0  FF                 	db	255
  1513   00FAC1  AA                 	db	170
  1514   00FAC2  77                 	db	119
  1515   00FAC3  DD                 	db	221
  1516   00FAC4  AA                 	db	170
  1517   00FAC5  FF                 	db	255
  1518   00FAC6  77                 	db	119
  1519   00FAC7  00                 	db	0
  1520   00FAC8  00                 	db	0
  1521   00FAC9  00                 	db	0
  1522   00FACA  FF                 	db	255
  1523   00FACB  FF                 	db	255
  1524   00FACC  00                 	db	0
  1525   00FACD  00                 	db	0
  1526   00FACE  00                 	db	0
  1527   00FACF  10                 	db	16
  1528   00FAD0  10                 	db	16
  1529   00FAD1  10                 	db	16
  1530   00FAD2  FF                 	db	255
  1531   00FAD3  FF                 	db	255
  1532   00FAD4  00                 	db	0
  1533   00FAD5  00                 	db	0
  1534   00FAD6  00                 	db	0
  1535   00FAD7  14                 	db	20
  1536   00FAD8  14                 	db	20
  1537   00FAD9  14                 	db	20
  1538   00FADA  FF                 	db	255
  1539   00FADB  FF                 	db	255
  1540   00FADC  00                 	db	0
  1541   00FADD  00                 	db	0
  1542   00FADE  00                 	db	0
  1543   00FADF  10                 	db	16
  1544   00FAE0  10                 	db	16
  1545   00FAE1  FF                 	db	255
  1546   00FAE2  FF                 	db	255
  1547   00FAE3  00                 	db	0
  1548   00FAE4  FF                 	db	255
  1549   00FAE5  FF                 	db	255
  1550   00FAE6  00                 	db	0
  1551   00FAE7  10                 	db	16
  1552   00FAE8  10                 	db	16
  1553   00FAE9  F0                 	db	240
  1554   00FAEA  F0                 	db	240
  1555   00FAEB  10                 	db	16
  1556   00FAEC  F0                 	db	240
  1557   00FAED  F0                 	db	240
  1558   00FAEE  00                 	db	0
  1559   00FAEF  14                 	db	20
  1560   00FAF0  14                 	db	20
  1561   00FAF1  14                 	db	20
  1562   00FAF2  FC                 	db	252
  1563   00FAF3  FC                 	db	252
  1564   00FAF4  00                 	db	0
  1565   00FAF5  00                 	db	0
  1566   00FAF6  00                 	db	0
  1567   00FAF7  14                 	db	20
  1568   00FAF8  14                 	db	20
  1569   00FAF9  F7                 	db	247
  1570   00FAFA  F7                 	db	247
  1571   00FAFB  00                 	db	0
  1572   00FAFC  FF                 	db	255
  1573   00FAFD  FF                 	db	255
  1574   00FAFE  00                 	db	0
  1575   00FAFF  00                 	db	0
  1576   00FB00  00                 	db	0
  1577   00FB01  FF                 	db	255
  1578   00FB02  FF                 	db	255
  1579   00FB03  00                 	db	0
  1580   00FB04  FF                 	db	255
  1581   00FB05  FF                 	db	255
  1582   00FB06  00                 	db	0
  1583   00FB07  14                 	db	20
  1584   00FB08  14                 	db	20
  1585   00FB09  F4                 	db	244
  1586   00FB0A  F4                 	db	244
  1587   00FB0B  04                 	db	4
  1588   00FB0C  FC                 	db	252
  1589   00FB0D  FC                 	db	252
  1590   00FB0E  00                 	db	0
  1591   00FB0F  14                 	db	20
  1592   00FB10  14                 	db	20
  1593   00FB11  17                 	db	23
  1594   00FB12  17                 	db	23
  1595   00FB13  10                 	db	16
  1596   00FB14  1F                 	db	31
  1597   00FB15  1F                 	db	31
  1598   00FB16  00                 	db	0
  1599   00FB17  10                 	db	16
  1600   00FB18  10                 	db	16
  1601   00FB19  1F                 	db	31
  1602   00FB1A  1F                 	db	31
  1603   00FB1B  10                 	db	16
  1604   00FB1C  1F                 	db	31
  1605   00FB1D  1F                 	db	31
  1606   00FB1E  00                 	db	0
  1607   00FB1F  14                 	db	20
  1608   00FB20  14                 	db	20
  1609   00FB21  14                 	db	20
  1610   00FB22  1F                 	db	31
  1611   00FB23  1F                 	db	31
  1612   00FB24  00                 	db	0
  1613   00FB25  00                 	db	0
  1614   00FB26  00                 	db	0
  1615   00FB27  10                 	db	16
  1616   00FB28  10                 	db	16
  1617   00FB29  10                 	db	16
  1618   00FB2A  F0                 	db	240
  1619   00FB2B  F0                 	db	240
  1620   00FB2C  00                 	db	0
  1621   00FB2D  00                 	db	0
  1622   00FB2E  00                 	db	0
  1623   00FB2F  00                 	db	0
  1624   00FB30  00                 	db	0
  1625   00FB31  00                 	db	0
  1626   00FB32  1F                 	db	31
  1627   00FB33  1F                 	db	31
  1628   00FB34  10                 	db	16
  1629   00FB35  10                 	db	16
  1630   00FB36  10                 	db	16
  1631   00FB37  10                 	db	16
  1632   00FB38  10                 	db	16
  1633   00FB39  10                 	db	16
  1634   00FB3A  1F                 	db	31
  1635   00FB3B  1F                 	db	31
  1636   00FB3C  10                 	db	16
  1637   00FB3D  10                 	db	16
  1638   00FB3E  10                 	db	16
  1639   00FB3F  10                 	db	16
  1640   00FB40  10                 	db	16
  1641   00FB41  10                 	db	16
  1642   00FB42  F0                 	db	240
  1643   00FB43  F0                 	db	240
  1644   00FB44  10                 	db	16
  1645   00FB45  10                 	db	16
  1646   00FB46  10                 	db	16
  1647   00FB47  00                 	db	0
  1648   00FB48  00                 	db	0
  1649   00FB49  00                 	db	0
  1650   00FB4A  FF                 	db	255
  1651   00FB4B  FF                 	db	255
  1652   00FB4C  10                 	db	16
  1653   00FB4D  10                 	db	16
  1654   00FB4E  10                 	db	16
  1655   00FB4F  10                 	db	16
  1656   00FB50  10                 	db	16
  1657   00FB51  10                 	db	16
  1658   00FB52  10                 	db	16
  1659   00FB53  10                 	db	16
  1660   00FB54  10                 	db	16
  1661   00FB55  10                 	db	16
  1662   00FB56  10                 	db	16
  1663   00FB57  10                 	db	16
  1664   00FB58  10                 	db	16
  1665   00FB59  10                 	db	16
  1666   00FB5A  FF                 	db	255
  1667   00FB5B  FF                 	db	255
  1668   00FB5C  10                 	db	16
  1669   00FB5D  10                 	db	16
  1670   00FB5E  10                 	db	16
  1671   00FB5F  00                 	db	0
  1672   00FB60  00                 	db	0
  1673   00FB61  00                 	db	0
  1674   00FB62  FF                 	db	255
  1675   00FB63  FF                 	db	255
  1676   00FB64  14                 	db	20
  1677   00FB65  14                 	db	20
  1678   00FB66  14                 	db	20
  1679   00FB67  00                 	db	0
  1680   00FB68  00                 	db	0
  1681   00FB69  FF                 	db	255
  1682   00FB6A  FF                 	db	255
  1683   00FB6B  00                 	db	0
  1684   00FB6C  FF                 	db	255
  1685   00FB6D  FF                 	db	255
  1686   00FB6E  10                 	db	16
  1687   00FB6F  00                 	db	0
  1688   00FB70  00                 	db	0
  1689   00FB71  1F                 	db	31
  1690   00FB72  1F                 	db	31
  1691   00FB73  10                 	db	16
  1692   00FB74  17                 	db	23
  1693   00FB75  17                 	db	23
  1694   00FB76  14                 	db	20
  1695   00FB77  00                 	db	0
  1696   00FB78  00                 	db	0
  1697   00FB79  FC                 	db	252
  1698   00FB7A  FC                 	db	252
  1699   00FB7B  04                 	db	4
  1700   00FB7C  F4                 	db	244
  1701   00FB7D  F4                 	db	244
  1702   00FB7E  14                 	db	20
  1703   00FB7F  14                 	db	20
  1704   00FB80  14                 	db	20
  1705   00FB81  17                 	db	23
  1706   00FB82  17                 	db	23
  1707   00FB83  10                 	db	16
  1708   00FB84  17                 	db	23
  1709   00FB85  17                 	db	23
  1710   00FB86  14                 	db	20
  1711   00FB87  14                 	db	20
  1712   00FB88  14                 	db	20
  1713   00FB89  F4                 	db	244
  1714   00FB8A  F4                 	db	244
  1715   00FB8B  04                 	db	4
  1716   00FB8C  F4                 	db	244
  1717   00FB8D  F4                 	db	244
  1718   00FB8E  14                 	db	20
  1719   00FB8F  00                 	db	0
  1720   00FB90  00                 	db	0
  1721   00FB91  FF                 	db	255
  1722   00FB92  FF                 	db	255
  1723   00FB93  00                 	db	0
  1724   00FB94  F7                 	db	247
  1725   00FB95  F7                 	db	247
  1726   00FB96  14                 	db	20
  1727   00FB97  14                 	db	20
  1728   00FB98  14                 	db	20
  1729   00FB99  14                 	db	20
  1730   00FB9A  14                 	db	20
  1731   00FB9B  14                 	db	20
  1732   00FB9C  14                 	db	20
  1733   00FB9D  14                 	db	20
  1734   00FB9E  14                 	db	20
  1735   00FB9F  14                 	db	20
  1736   00FBA0  14                 	db	20
  1737   00FBA1  F7                 	db	247
  1738   00FBA2  F7                 	db	247
  1739   00FBA3  00                 	db	0
  1740   00FBA4  F7                 	db	247
  1741   00FBA5  F7                 	db	247
  1742   00FBA6  14                 	db	20
  1743   00FBA7  14                 	db	20
  1744   00FBA8  14                 	db	20
  1745   00FBA9  14                 	db	20
  1746   00FBAA  17                 	db	23
  1747   00FBAB  17                 	db	23
  1748   00FBAC  14                 	db	20
  1749   00FBAD  14                 	db	20
  1750   00FBAE  14                 	db	20
  1751   00FBAF  10                 	db	16
  1752   00FBB0  10                 	db	16
  1753   00FBB1  1F                 	db	31
  1754   00FBB2  1F                 	db	31
  1755   00FBB3  10                 	db	16
  1756   00FBB4  1F                 	db	31
  1757   00FBB5  1F                 	db	31
  1758   00FBB6  10                 	db	16
  1759   00FBB7  14                 	db	20
  1760   00FBB8  14                 	db	20
  1761   00FBB9  14                 	db	20
  1762   00FBBA  F4                 	db	244
  1763   00FBBB  F4                 	db	244
  1764   00FBBC  14                 	db	20
  1765   00FBBD  14                 	db	20
  1766   00FBBE  14                 	db	20
  1767   00FBBF  10                 	db	16
  1768   00FBC0  10                 	db	16
  1769   00FBC1  F0                 	db	240
  1770   00FBC2  F0                 	db	240
  1771   00FBC3  10                 	db	16
  1772   00FBC4  F0                 	db	240
  1773   00FBC5  F0                 	db	240
  1774   00FBC6  10                 	db	16
  1775   00FBC7  00                 	db	0
  1776   00FBC8  00                 	db	0
  1777   00FBC9  1F                 	db	31
  1778   00FBCA  1F                 	db	31
  1779   00FBCB  10                 	db	16
  1780   00FBCC  1F                 	db	31
  1781   00FBCD  1F                 	db	31
  1782   00FBCE  10                 	db	16
  1783   00FBCF  00                 	db	0
  1784   00FBD0  00                 	db	0
  1785   00FBD1  00                 	db	0
  1786   00FBD2  1F                 	db	31
  1787   00FBD3  1F                 	db	31
  1788   00FBD4  14                 	db	20
  1789   00FBD5  14                 	db	20
  1790   00FBD6  14                 	db	20
  1791   00FBD7  00                 	db	0
  1792   00FBD8  00                 	db	0
  1793   00FBD9  00                 	db	0
  1794   00FBDA  FC                 	db	252
  1795   00FBDB  FC                 	db	252
  1796   00FBDC  14                 	db	20
  1797   00FBDD  14                 	db	20
  1798   00FBDE  14                 	db	20
  1799   00FBDF  00                 	db	0
  1800   00FBE0  00                 	db	0
  1801   00FBE1  F0                 	db	240
  1802   00FBE2  F0                 	db	240
  1803   00FBE3  10                 	db	16
  1804   00FBE4  F0                 	db	240
  1805   00FBE5  F0                 	db	240
  1806   00FBE6  10                 	db	16
  1807   00FBE7  10                 	db	16
  1808   00FBE8  10                 	db	16
  1809   00FBE9  FF                 	db	255
  1810   00FBEA  FF                 	db	255
  1811   00FBEB  10                 	db	16
  1812   00FBEC  FF                 	db	255
  1813   00FBED  FF                 	db	255
  1814   00FBEE  10                 	db	16
  1815   00FBEF  14                 	db	20
  1816   00FBF0  14                 	db	20
  1817   00FBF1  14                 	db	20
  1818   00FBF2  FF                 	db	255
  1819   00FBF3  FF                 	db	255
  1820   00FBF4  14                 	db	20
  1821   00FBF5  14                 	db	20
  1822   00FBF6  14                 	db	20
  1823   00FBF7  10                 	db	16
  1824   00FBF8  10                 	db	16
  1825   00FBF9  10                 	db	16
  1826   00FBFA  1F                 	db	31
  1827   00FBFB  1F                 	db	31
  1828   00FBFC  00                 	db	0
  1829   00FBFD  00                 	db	0
  1830   00FBFE  00                 	db	0
  1831   00FBFF  00                 	db	0
  1832   00FC00  00                 	db	0
  1833   00FC01  00                 	db	0
  1834   00FC02  F0                 	db	240
  1835   00FC03  F0                 	db	240
  1836   00FC04  10                 	db	16
  1837   00FC05  10                 	db	16
  1838   00FC06  10                 	db	16
  1839   00FC07  FF                 	db	255
  1840   00FC08  FF                 	db	255
  1841   00FC09  FF                 	db	255
  1842   00FC0A  FF                 	db	255
  1843   00FC0B  FF                 	db	255
  1844   00FC0C  FF                 	db	255
  1845   00FC0D  FF                 	db	255
  1846   00FC0E  FF                 	db	255
  1847   00FC0F  F0                 	db	240
  1848   00FC10  F0                 	db	240
  1849   00FC11  F0                 	db	240
  1850   00FC12  F0                 	db	240
  1851   00FC13  F0                 	db	240
  1852   00FC14  F0                 	db	240
  1853   00FC15  F0                 	db	240
  1854   00FC16  F0                 	db	240
  1855   00FC17  FF                 	db	255
  1856   00FC18  FF                 	db	255
  1857   00FC19  FF                 	db	255
  1858   00FC1A  FF                 	db	255
  1859   00FC1B  00                 	db	0
  1860   00FC1C  00                 	db	0
  1861   00FC1D  00                 	db	0
  1862   00FC1E  00                 	db	0
  1863   00FC1F  00                 	db	0
  1864   00FC20  00                 	db	0
  1865   00FC21  00                 	db	0
  1866   00FC22  00                 	db	0
  1867   00FC23  FF                 	db	255
  1868   00FC24  FF                 	db	255
  1869   00FC25  FF                 	db	255
  1870   00FC26  FF                 	db	255
  1871   00FC27  0F                 	db	15
  1872   00FC28  0F                 	db	15
  1873   00FC29  0F                 	db	15
  1874   00FC2A  0F                 	db	15
  1875   00FC2B  0F                 	db	15
  1876   00FC2C  0F                 	db	15
  1877   00FC2D  0F                 	db	15
  1878   00FC2E  0F                 	db	15
  1879   00FC2F  38                 	db	56
  1880   00FC30  7C                 	db	124
  1881   00FC31  44                 	db	68
  1882   00FC32  6C                 	db	108
  1883   00FC33  38                 	db	56
  1884   00FC34  6C                 	db	108
  1885   00FC35  44                 	db	68
  1886   00FC36  00                 	db	0
  1887   00FC37  FC                 	db	252
  1888   00FC38  FE                 	db	254
  1889   00FC39  2A                 	db	42
  1890   00FC3A  2A                 	db	42
  1891   00FC3B  3E                 	db	62
  1892   00FC3C  14                 	db	20
  1893   00FC3D  00                 	db	0
  1894   00FC3E  00                 	db	0
  1895   00FC3F  7E                 	db	126
  1896   00FC40  7E                 	db	126
  1897   00FC41  02                 	db	2
  1898   00FC42  02                 	db	2
  1899   00FC43  06                 	db	6
  1900   00FC44  06                 	db	6
  1901   00FC45  00                 	db	0
  1902   00FC46  00                 	db	0
  1903   00FC47  02                 	db	2
  1904   00FC48  7E                 	db	126
  1905   00FC49  7E                 	db	126
  1906   00FC4A  02                 	db	2
  1907   00FC4B  7E                 	db	126
  1908   00FC4C  7E                 	db	126
  1909   00FC4D  02                 	db	2
  1910   00FC4E  00                 	db	0
  1911   00FC4F  63                 	db	99
  1912   00FC50  77                 	db	119
  1913   00FC51  5D                 	db	93
  1914   00FC52  49                 	db	73
  1915   00FC53  63                 	db	99
  1916   00FC54  63                 	db	99
  1917   00FC55  00                 	db	0
  1918   00FC56  00                 	db	0
  1919   00FC57  38                 	db	56
  1920   00FC58  7C                 	db	124
  1921   00FC59  44                 	db	68
  1922   00FC5A  7C                 	db	124
  1923   00FC5B  3C                 	db	60
  1924   00FC5C  04                 	db	4
  1925   00FC5D  04                 	db	4
  1926   00FC5E  00                 	db	0
  1927   00FC5F  80                 	db	128
  1928   00FC60  FE                 	db	254
  1929   00FC61  7E                 	db	126
  1930   00FC62  20                 	db	32
  1931   00FC63  20                 	db	32
  1932   00FC64  3E                 	db	62
  1933   00FC65  1E                 	db	30
  1934   00FC66  00                 	db	0
  1935   00FC67  04                 	db	4
  1936   00FC68  06                 	db	6
  1937   00FC69  02                 	db	2
  1938   00FC6A  7E                 	db	126
  1939   00FC6B  7C                 	db	124
  1940   00FC6C  06                 	db	6
  1941   00FC6D  02                 	db	2
  1942   00FC6E  00                 	db	0
  1943   00FC6F  99                 	db	153
  1944   00FC70  BD                 	db	189
  1945   00FC71  E7                 	db	231
  1946   00FC72  E7                 	db	231
  1947   00FC73  BD                 	db	189
  1948   00FC74  99                 	db	153
  1949   00FC75  00                 	db	0
  1950   00FC76  00                 	db	0
  1951   00FC77  1C                 	db	28
  1952   00FC78  3E                 	db	62
  1953   00FC79  6B                 	db	107
  1954   00FC7A  49                 	db	73
  1955   00FC7B  6B                 	db	107
  1956   00FC7C  3E                 	db	62
  1957   00FC7D  1C                 	db	28
  1958   00FC7E  00                 	db	0
  1959   00FC7F  4C                 	db	76
  1960   00FC80  7E                 	db	126
  1961   00FC81  73                 	db	115
  1962   00FC82  01                 	db	1
  1963   00FC83  73                 	db	115
  1964   00FC84  7E                 	db	126
  1965   00FC85  4C                 	db	76
  1966   00FC86  00                 	db	0
  1967   00FC87  30                 	db	48
  1968   00FC88  78                 	db	120
  1969   00FC89  4A                 	db	74
  1970   00FC8A  4F                 	db	79
  1971   00FC8B  7D                 	db	125
  1972   00FC8C  39                 	db	57
  1973   00FC8D  00                 	db	0
  1974   00FC8E  00                 	db	0
  1975   00FC8F  18                 	db	24
  1976   00FC90  3C                 	db	60
  1977   00FC91  24                 	db	36
  1978   00FC92  3C                 	db	60
  1979   00FC93  3C                 	db	60
  1980   00FC94  24                 	db	36
  1981   00FC95  3C                 	db	60
  1982   00FC96  18                 	db	24
  1983   00FC97  98                 	db	152
  1984   00FC98  FC                 	db	252
  1985   00FC99  64                 	db	100
  1986   00FC9A  3C                 	db	60
  1987   00FC9B  3E                 	db	62
  1988   00FC9C  27                 	db	39
  1989   00FC9D  3D                 	db	61
  1990   00FC9E  18                 	db	24
  1991   00FC9F  1C                 	db	28
  1992   00FCA0  3E                 	db	62
  1993   00FCA1  6B                 	db	107
  1994   00FCA2  49                 	db	73
  1995   00FCA3  49                 	db	73
  1996   00FCA4  00                 	db	0
  1997   00FCA5  00                 	db	0
  1998   00FCA6  00                 	db	0
  1999   00FCA7  7E                 	db	126
  2000   00FCA8  7F                 	db	127
  2001   00FCA9  01                 	db	1
  2002   00FCAA  01                 	db	1
  2003   00FCAB  7F                 	db	127
  2004   00FCAC  7E                 	db	126
  2005   00FCAD  00                 	db	0
  2006   00FCAE  00                 	db	0
  2007   00FCAF  2A                 	db	42
  2008   00FCB0  2A                 	db	42
  2009   00FCB1  2A                 	db	42
  2010   00FCB2  2A                 	db	42
  2011   00FCB3  2A                 	db	42
  2012   00FCB4  2A                 	db	42
  2013   00FCB5  00                 	db	0
  2014   00FCB6  00                 	db	0
  2015   00FCB7  44                 	db	68
  2016   00FCB8  44                 	db	68
  2017   00FCB9  5F                 	db	95
  2018   00FCBA  5F                 	db	95
  2019   00FCBB  44                 	db	68
  2020   00FCBC  44                 	db	68
  2021   00FCBD  00                 	db	0
  2022   00FCBE  00                 	db	0
  2023   00FCBF  40                 	db	64
  2024   00FCC0  51                 	db	81
  2025   00FCC1  5B                 	db	91
  2026   00FCC2  4E                 	db	78
  2027   00FCC3  44                 	db	68
  2028   00FCC4  40                 	db	64
  2029   00FCC5  00                 	db	0
  2030   00FCC6  00                 	db	0
  2031   00FCC7  40                 	db	64
  2032   00FCC8  44                 	db	68
  2033   00FCC9  4E                 	db	78
  2034   00FCCA  5B                 	db	91
  2035   00FCCB  51                 	db	81
  2036   00FCCC  40                 	db	64
  2037   00FCCD  00                 	db	0
  2038   00FCCE  00                 	db	0
  2039   00FCCF  00                 	db	0
  2040   00FCD0  00                 	db	0
  2041   00FCD1  00                 	db	0
  2042   00FCD2  FE                 	db	254
  2043   00FCD3  FF                 	db	255
  2044   00FCD4  01                 	db	1
  2045   00FCD5  07                 	db	7
  2046   00FCD6  06                 	db	6
  2047   00FCD7  60                 	db	96
  2048   00FCD8  E0                 	db	224
  2049   00FCD9  80                 	db	128
  2050   00FCDA  FF                 	db	255
  2051   00FCDB  7F                 	db	127
  2052   00FCDC  00                 	db	0
  2053   00FCDD  00                 	db	0
  2054   00FCDE  00                 	db	0
  2055   00FCDF  08                 	db	8
  2056   00FCE0  08                 	db	8
  2057   00FCE1  6B                 	db	107
  2058   00FCE2  6B                 	db	107
  2059   00FCE3  08                 	db	8
  2060   00FCE4  08                 	db	8
  2061   00FCE5  00                 	db	0
  2062   00FCE6  00                 	db	0
  2063   00FCE7  24                 	db	36
  2064   00FCE8  36                 	db	54
  2065   00FCE9  12                 	db	18
  2066   00FCEA  36                 	db	54
  2067   00FCEB  24                 	db	36
  2068   00FCEC  36                 	db	54
  2069   00FCED  12                 	db	18
  2070   00FCEE  00                 	db	0
  2071   00FCEF  00                 	db	0
  2072   00FCF0  06                 	db	6
  2073   00FCF1  0F                 	db	15
  2074   00FCF2  09                 	db	9
  2075   00FCF3  0F                 	db	15
  2076   00FCF4  06                 	db	6
  2077   00FCF5  00                 	db	0
  2078   00FCF6  00                 	db	0
  2079   00FCF7  00                 	db	0
  2080   00FCF8  00                 	db	0
  2081   00FCF9  00                 	db	0
  2082   00FCFA  18                 	db	24
  2083   00FCFB  18                 	db	24
  2084   00FCFC  00                 	db	0
  2085   00FCFD  00                 	db	0
  2086   00FCFE  00                 	db	0
  2087   00FCFF  00                 	db	0
  2088   00FD00  00                 	db	0
  2089   00FD01  00                 	db	0
  2090   00FD02  10                 	db	16
  2091   00FD03  10                 	db	16
  2092   00FD04  00                 	db	0
  2093   00FD05  00                 	db	0
  2094   00FD06  00                 	db	0
  2095   00FD07  10                 	db	16
  2096   00FD08  30                 	db	48
  2097   00FD09  70                 	db	112
  2098   00FD0A  C0                 	db	192
  2099   00FD0B  FF                 	db	255
  2100   00FD0C  FF                 	db	255
  2101   00FD0D  01                 	db	1
  2102   00FD0E  01                 	db	1
  2103   00FD0F  00                 	db	0
  2104   00FD10  1F                 	db	31
  2105   00FD11  1F                 	db	31
  2106   00FD12  01                 	db	1
  2107   00FD13  1F                 	db	31
  2108   00FD14  1E                 	db	30
  2109   00FD15  00                 	db	0
  2110   00FD16  00                 	db	0
  2111   00FD17  00                 	db	0
  2112   00FD18  19                 	db	25
  2113   00FD19  1D                 	db	29
  2114   00FD1A  17                 	db	23
  2115   00FD1B  12                 	db	18
  2116   00FD1C  00                 	db	0
  2117   00FD1D  00                 	db	0
  2118   00FD1E  00                 	db	0
  2119   00FD1F  00                 	db	0
  2120   00FD20  00                 	db	0
  2121   00FD21  3C                 	db	60
  2122   00FD22  3C                 	db	60
  2123   00FD23  3C                 	db	60
  2124   00FD24  3C                 	db	60
  2125   00FD25  00                 	db	0
  2126   00FD26  00                 	db	0
  2127   00FD27  00                 	db	0
  2128   00FD28  00                 	db	0
  2129   00FD29  00                 	db	0
  2130   00FD2A  00                 	db	0
  2131   00FD2B  00                 	db	0
  2132   00FD2C  00                 	db	0
  2133   00FD2D  00                 	db	0
  2134   00FD2E  00                 	db	0
  2135   00FD2F                     __end_of_MAX7219_Dot_Matrix_font:
  2136                           	callstack 0
  2137   000000                     _EEDATA	set	4008
  2138   000000                     _EEADR	set	4009
  2139   000000                     _EEADRH	set	4010
  2140   000000                     _EECON2	set	4007
  2141   000000                     _T2CON	set	4042
  2142   000000                     _PR2	set	4043
  2143   000000                     _T0CON	set	4053
  2144   000000                     _TMR0L	set	4054
  2145   000000                     _TMR0H	set	4055
  2146   000000                     _TXREG	set	4013
  2147   000000                     _RCREG	set	4014
  2148   000000                     _SPBRG	set	4015
  2149   000000                     _TXSTA	set	4012
  2150   000000                     _OSCCON	set	4051
  2151   000000                     _SSPBUF	set	4041
  2152   000000                     _SSPADD	set	4040
  2153   000000                     _LATCbits	set	3979
  2154   000000                     _T2CONbits	set	4042
  2155   000000                     _RCSTAbits	set	4011
  2156   000000                     _TXSTAbits	set	4012
  2157   000000                     _SSPSTATbits	set	4039
  2158   000000                     _SSPCON1bits	set	4038
  2159   000000                     _T0CONbits	set	4053
  2160   000000                     _WPUB	set	3964
  2161   000000                     _ANSEL	set	3966
  2162   000000                     _ANSELH	set	3967
  2163   000000                     _PORTBbits	set	3969
  2164   000000                     _OSCTUNE	set	3995
  2165   000000                     _PIR1bits	set	3998
  2166   000000                     _RCSTA	set	4011
  2167   000000                     _BAUDCON	set	4024
  2168   000000                     _SSPCON1	set	4038
  2169   000000                     _SSPSTAT	set	4039
  2170   000000                     _INTCON2bits	set	4081
  2171   000000                     _INTCONbits	set	4082
  2172   000000                     _TABLAT	set	4085
  2173   000000                     _TBLPTRL	set	4086
  2174   000000                     _TBLPTRH	set	4087
  2175   000000                     _TBLPTRU	set	4088
  2176   000000                     _LATA	set	3977
  2177   000000                     _TRISA	set	3986
  2178   000000                     _LATC	set	3979
  2179   000000                     _LATB	set	3978
  2180   000000                     _TRISC	set	3988
  2181   000000                     _TRISB	set	3987
  2182   000000                     _CCP2CON	set	4026
  2183   000000                     _SPBRGH	set	4016
  2184   000000                     _PIR2bits	set	4001
  2185   000000                     _EECON1bits	set	4006
  2186   000000                     _TMR2	set	4044
  2187   000000                     _CCPR2H	set	4028
  2188   000000                     _CCPR2L	set	4027
  2189   00FD2F  00                 	db	0	; dummy byte at the end
  2190   000000                     
  2191                           ; #config settings
  2192                           
  2193                           	psect	cinit
  2194   00EA86                     __pcinit:
  2195                           	callstack 0
  2196   00EA86                     start_initialization:
  2197                           	callstack 0
  2198   00EA86                     __initialization:
  2199                           	callstack 0
  2200                           
  2201                           ; Clear objects allocated to BANK0 (78 bytes)
  2202   00EA86  EE00  F060         	lfsr	0,__pbssBANK0
  2203   00EA8A  0E4E               	movlw	78
  2204   00EA8C                     clear_0:
  2205   00EA8C  6AEE               	clrf	postinc0,c
  2206   00EA8E  06E8               	decf	wreg,f,c
  2207   00EA90  E1FD               	bnz	clear_0
  2208                           
  2209                           ; Clear objects allocated to COMRAM (1 bytes)
  2210   00EA92  6A5F               	clrf	__pbssCOMRAM& (0+255),c
  2211   00EA94                     end_of_initialization:
  2212                           	callstack 0
  2213   00EA94                     __end_of__initialization:
  2214                           	callstack 0
  2215   00EA94  0E00               	movlw	low (__Lmediumconst shr (0+16))
  2216   00EA96  6EF8               	movwf	tblptru,c
  2217   00EA98  0100               	movlb	0
  2218   00EA9A  EFA1  F076         	goto	_main	;jump to C main() function
  2219                           
  2220                           	psect	bssCOMRAM
  2221   00005F                     __pbssCOMRAM:
  2222                           	callstack 0
  2223   00005F                     _hours:
  2224                           	callstack 0
  2225   00005F                     	ds	1
  2226                           
  2227                           	psect	bssBANK0
  2228   000060                     __pbssBANK0:
  2229                           	callstack 0
  2230   000060                     	ds	32
  2231   000080                     _bufferCol:
  2232                           	callstack 0
  2233   000080                     	ds	32
  2234   0000A0                     _timer0ReloadVal:
  2235                           	callstack 0
  2236   0000A0                     	ds	2
  2237   0000A2                     _button3PressTime:
  2238                           	callstack 0
  2239   0000A2                     	ds	2
  2240   0000A4                     _blinkTimer:
  2241                           	callstack 0
  2242   0000A4                     	ds	2
  2243   0000A6                     _isButton3Pressed:
  2244                           	callstack 0
  2245   0000A6                     	ds	1
  2246   0000A7                     _displayBlinking:
  2247                           	callstack 0
  2248   0000A7                     	ds	1
  2249   0000A8                     _alarmActive:
  2250                           	callstack 0
  2251   0000A8                     	ds	1
  2252   0000A9                     _alarmSet:
  2253                           	callstack 0
  2254   0000A9                     	ds	1
  2255   0000AA                     _alarmMinutes:
  2256                           	callstack 0
  2257   0000AA                     	ds	1
  2258   0000AB                     _alarmHours:
  2259                           	callstack 0
  2260   0000AB                     	ds	1
  2261   0000AC                     _seconds:
  2262                           	callstack 0
  2263   0000AC                     	ds	1
  2264   0000AD                     _minutes:
  2265                           	callstack 0
  2266   0000AD                     	ds	1
  2267                           
  2268                           	psect	cstackBANK0
  2269   0000AE                     __pcstackBANK0:
  2270                           	callstack 0
  2271   0000AE                     ??_checkButtons:
  2272                           
  2273                           ; 1 bytes @ 0x0
  2274   0000AE                     	ds	2
  2275                           
  2276                           	psect	cstackCOMRAM
  2277   000001                     __pcstackCOMRAM:
  2278                           	callstack 0
  2279   000001                     ??_TMR0_Initialize:
  2280   000001                     ?___awdiv:
  2281                           	callstack 0
  2282   000001                     ?___awmod:
  2283                           	callstack 0
  2284   000001                     SPI_Exchange8bit@data:
  2285                           	callstack 0
  2286   000001                     ___awdiv@dividend:
  2287                           	callstack 0
  2288   000001                     ___awmod@dividend:
  2289                           	callstack 0
  2290   000001                     FLASH_ReadByte@flashAddr:
  2291                           	callstack 0
  2292   000001                     FLASH_EraseBlock@baseAddr:
  2293                           	callstack 0
  2294                           
  2295                           ; 4 bytes @ 0x0
  2296   000001                     	ds	1
  2297   000002                     max7219_cmd@data:
  2298                           	callstack 0
  2299                           
  2300                           ; 1 bytes @ 0x1
  2301   000002                     	ds	1
  2302   000003                     ??_max7219_cmd:
  2303   000003                     ___awdiv@divisor:
  2304                           	callstack 0
  2305   000003                     ___awmod@divisor:
  2306                           	callstack 0
  2307                           
  2308                           ; 2 bytes @ 0x2
  2309   000003                     	ds	2
  2310   000005                     max7219_cmd@Addr:
  2311                           	callstack 0
  2312   000005                     FLASH_EraseBlock@GIEBitValue:
  2313                           	callstack 0
  2314   000005                     ___awdiv@counter:
  2315                           	callstack 0
  2316   000005                     ___awmod@counter:
  2317                           	callstack 0
  2318                           
  2319                           ; 1 bytes @ 0x4
  2320   000005                     	ds	1
  2321   000006                     ___awdiv@sign:
  2322                           	callstack 0
  2323   000006                     ___awmod@sign:
  2324                           	callstack 0
  2325   000006                     max7219_cmd@writeData:
  2326                           	callstack 0
  2327   000006                     FLASH_WriteBlock@writeAddr:
  2328                           	callstack 0
  2329                           
  2330                           ; 4 bytes @ 0x5
  2331   000006                     	ds	1
  2332   000007                     ___awdiv@quotient:
  2333                           	callstack 0
  2334                           
  2335                           ; 2 bytes @ 0x6
  2336   000007                     	ds	1
  2337   000008                     max7219_cmd@i:
  2338                           	callstack 0
  2339                           
  2340                           ; 2 bytes @ 0x7
  2341   000008                     	ds	1
  2342   000009                     max_write@row:
  2343                           	callstack 0
  2344                           
  2345                           ; 2 bytes @ 0x8
  2346   000009                     	ds	1
  2347   00000A                     FLASH_WriteBlock@flashWrBufPtr:
  2348                           	callstack 0
  2349                           
  2350                           ; 1 bytes @ 0x9
  2351   00000A                     	ds	1
  2352   00000B                     max_write@data:
  2353                           	callstack 0
  2354   00000B                     FLASH_WriteBlock@blockStartAddr:
  2355                           	callstack 0
  2356                           
  2357                           ; 4 bytes @ 0xA
  2358   00000B                     	ds	1
  2359   00000C                     ??_max_write:
  2360                           
  2361                           ; 1 bytes @ 0xB
  2362   00000C                     	ds	2
  2363   00000E                     max_write@offset:
  2364                           	callstack 0
  2365                           
  2366                           ; 2 bytes @ 0xD
  2367   00000E                     	ds	1
  2368   00000F                     FLASH_WriteBlock@GIEBitValue:
  2369                           	callstack 0
  2370                           
  2371                           ; 1 bytes @ 0xE
  2372   00000F                     	ds	1
  2373   000010                     FLASH_WriteBlock@j:
  2374                           	callstack 0
  2375   000010                     max_write@devTarget:
  2376                           	callstack 0
  2377                           
  2378                           ; 2 bytes @ 0xF
  2379   000010                     	ds	1
  2380   000011                     FLASH_WriteBlock@numberOfWriteBlocks:
  2381                           	callstack 0
  2382                           
  2383                           ; 1 bytes @ 0x10
  2384   000011                     	ds	1
  2385   000012                     FLASH_WriteBlock@dataCounter:
  2386                           	callstack 0
  2387   000012                     max_write@dev:
  2388                           	callstack 0
  2389                           
  2390                           ; 2 bytes @ 0x11
  2391   000012                     	ds	1
  2392   000013                     FLASH_WriteBlock@i:
  2393                           	callstack 0
  2394                           
  2395                           ; 1 bytes @ 0x12
  2396   000013                     	ds	1
  2397   000014                     max_write@writeData:
  2398                           	callstack 0
  2399   000014                     FLASH_WriteByte@flashAddr:
  2400                           	callstack 0
  2401                           
  2402                           ; 4 bytes @ 0x13
  2403   000014                     	ds	2
  2404   000016                     ??_flushBuffer:
  2405                           
  2406                           ; 1 bytes @ 0x15
  2407   000016                     	ds	2
  2408   000018                     FLASH_WriteByte@flashRdBufPtr:
  2409                           	callstack 0
  2410                           
  2411                           ; 1 bytes @ 0x17
  2412   000018                     	ds	1
  2413   000019                     FLASH_WriteByte@byte:
  2414                           	callstack 0
  2415   000019                     flushBuffer@bufferRow:
  2416                           	callstack 0
  2417                           
  2418                           ; 32 bytes @ 0x18
  2419   000019                     	ds	1
  2420   00001A                     FLASH_WriteByte@offset:
  2421                           	callstack 0
  2422                           
  2423                           ; 1 bytes @ 0x19
  2424   00001A                     	ds	1
  2425   00001B                     FLASH_WriteByte@blockStartAddr:
  2426                           	callstack 0
  2427                           
  2428                           ; 4 bytes @ 0x1A
  2429   00001B                     	ds	4
  2430   00001F                     FLASH_WriteByte@i:
  2431                           	callstack 0
  2432                           
  2433                           ; 1 bytes @ 0x1E
  2434   00001F                     	ds	1
  2435   000020                     saveTimeToFlash@timeData:
  2436                           	callstack 0
  2437                           
  2438                           ; 2 bytes @ 0x1F
  2439   000020                     	ds	25
  2440   000039                     flushBuffer@dev:
  2441                           	callstack 0
  2442                           
  2443                           ; 2 bytes @ 0x38
  2444   000039                     	ds	2
  2445   00003B                     flushBuffer@j:
  2446                           	callstack 0
  2447                           
  2448                           ; 2 bytes @ 0x3A
  2449   00003B                     	ds	2
  2450   00003D                     flushBuffer@row:
  2451                           	callstack 0
  2452                           
  2453                           ; 2 bytes @ 0x3C
  2454   00003D                     	ds	2
  2455   00003F                     flushBuffer@i:
  2456                           	callstack 0
  2457                           
  2458                           ; 2 bytes @ 0x3E
  2459   00003F                     	ds	2
  2460   000041                     printString@str:
  2461                           	callstack 0
  2462   000041                     clearDisplay@i:
  2463                           	callstack 0
  2464                           
  2465                           ; 2 bytes @ 0x40
  2466   000041                     	ds	1
  2467   000042                     ??_printString:
  2468                           
  2469                           ; 1 bytes @ 0x41
  2470   000042                     	ds	6
  2471   000048                     printString@indx:
  2472                           	callstack 0
  2473                           
  2474                           ; 2 bytes @ 0x47
  2475   000048                     	ds	2
  2476   00004A                     printString@data:
  2477                           	callstack 0
  2478                           
  2479                           ; 1 bytes @ 0x49
  2480   00004A                     	ds	1
  2481   00004B                     printString@strindx:
  2482                           	callstack 0
  2483                           
  2484                           ; 2 bytes @ 0x4A
  2485   00004B                     	ds	2
  2486   00004D                     printString@i:
  2487                           	callstack 0
  2488                           
  2489                           ; 2 bytes @ 0x4C
  2490   00004D                     	ds	2
  2491   00004F                     printString@k:
  2492                           	callstack 0
  2493                           
  2494                           ; 2 bytes @ 0x4E
  2495   00004F                     	ds	2
  2496   000051                     printString@j:
  2497                           	callstack 0
  2498                           
  2499                           ; 2 bytes @ 0x50
  2500   000051                     	ds	2
  2501   000053                     displayTime@displayString:
  2502                           	callstack 0
  2503                           
  2504                           ; 5 bytes @ 0x52
  2505   000053                     	ds	5
  2506   000058                     displayTime@timeString:
  2507                           	callstack 0
  2508                           
  2509                           ; 5 bytes @ 0x57
  2510   000058                     	ds	5
  2511   00005D                     displayTime@i:
  2512                           	callstack 0
  2513                           
  2514                           ; 2 bytes @ 0x5C
  2515   00005D                     	ds	2
  2516   00005F                     
  2517                           ; 1 bytes @ 0x5E
  2518 ;;
  2519 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2520 ;;
  2521 ;; *************** function _main *****************
  2522 ;; Defined at:
  2523 ;;		line 325 in file "main.c"
  2524 ;; Parameters:    Size  Location     Type
  2525 ;;		None
  2526 ;; Auto vars:     Size  Location     Type
  2527 ;;		None
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2541 ;;Total ram usage:        0 bytes
  2542 ;; Hardware stack levels required when called: 7
  2543 ;; This function calls:
  2544 ;;		_SYSTEM_Initialize
  2545 ;;		_TMR0_HasOverflowOccured
  2546 ;;		_TMR0_Reload
  2547 ;;		_TMR0_StartTimer
  2548 ;;		_checkButtons
  2549 ;;		_clearDisplay
  2550 ;;		_displayTime
  2551 ;;		_loadTimeFromFlash
  2552 ;;		_matrixInit
  2553 ;; This function is called by:
  2554 ;;		Startup code after reset
  2555 ;; This function uses a non-reentrant model
  2556 ;;
  2557                           
  2558                           	psect	text0
  2559   00ED42                     __ptext0:
  2560                           	callstack 0
  2561   00ED42                     _main:
  2562                           	callstack 24
  2563   00ED42                     
  2564                           ;main.c: 327:     SYSTEM_Initialize();
  2565   00ED42  EC5C  F075         	call	_SYSTEM_Initialize	;wreg free
  2566                           
  2567                           ;main.c: 328:     matrixInit();
  2568   00ED46  ECD5  F075         	call	_matrixInit	;wreg free
  2569   00ED4A                     
  2570                           ;main.c: 329:     clearDisplay();
  2571   00ED4A  ECEF  F075         	call	_clearDisplay	;wreg free
  2572   00ED4E                     
  2573                           ;main.c: 330:     loadTimeFromFlash();
  2574   00ED4E  ECA3  F075         	call	_loadTimeFromFlash	;wreg free
  2575   00ED52                     
  2576                           ;main.c: 332:     TMR0_StartTimer();
  2577   00ED52  EC01  F075         	call	_TMR0_StartTimer	;wreg free
  2578   00ED56                     l2406:
  2579                           
  2580                           ;main.c: 335:     {;main.c: 336:         if(TMR0_HasOverflowOccured())
  2581   00ED56  EC2E  F075         	call	_TMR0_HasOverflowOccured	;wreg free
  2582   00ED5A  0900               	iorlw	0
  2583   00ED5C  B4D8               	btfsc	status,2,c
  2584   00ED5E  EFB3  F076         	goto	u1451
  2585   00ED62  EFB5  F076         	goto	u1450
  2586   00ED66                     u1451:
  2587   00ED66  EFDE  F076         	goto	l2432
  2588   00ED6A                     u1450:
  2589   00ED6A                     
  2590                           ;main.c: 337:         {;main.c: 338:             displayTime();
  2591   00ED6A  ECE6  F076         	call	_displayTime	;wreg free
  2592   00ED6E                     
  2593                           ;main.c: 340:             seconds++;
  2594   00ED6E  0100               	movlb	0	; () banked
  2595   00ED70  2BAC               	incf	_seconds& (0+255),f,b
  2596   00ED72                     
  2597                           ; BSR set to: 0
  2598                           ;main.c: 341:             if (seconds >= 60) {
  2599   00ED72  0E3B               	movlw	59
  2600   00ED74  65AC               	cpfsgt	_seconds& (0+255),b
  2601   00ED76  EFBF  F076         	goto	u1461
  2602   00ED7A  EFC1  F076         	goto	u1460
  2603   00ED7E                     u1461:
  2604   00ED7E  EFD9  F076         	goto	l2428
  2605   00ED82                     u1460:
  2606   00ED82                     
  2607                           ; BSR set to: 0
  2608                           ;main.c: 342:                 seconds = 0;
  2609   00ED82  0E00               	movlw	0
  2610   00ED84  6FAC               	movwf	_seconds& (0+255),b
  2611   00ED86                     
  2612                           ; BSR set to: 0
  2613                           ;main.c: 343:                 minutes++;
  2614   00ED86  2BAD               	incf	_minutes& (0+255),f,b
  2615   00ED88                     
  2616                           ; BSR set to: 0
  2617                           ;main.c: 344:                 if (minutes >= 60) {
  2618   00ED88  0E3B               	movlw	59
  2619   00ED8A  65AD               	cpfsgt	_minutes& (0+255),b
  2620   00ED8C  EFCA  F076         	goto	u1471
  2621   00ED90  EFCC  F076         	goto	u1470
  2622   00ED94                     u1471:
  2623   00ED94  EFD9  F076         	goto	l2428
  2624   00ED98                     u1470:
  2625   00ED98                     
  2626                           ; BSR set to: 0
  2627                           ;main.c: 345:                     minutes = 0;
  2628   00ED98  0E00               	movlw	0
  2629   00ED9A  6FAD               	movwf	_minutes& (0+255),b
  2630   00ED9C                     
  2631                           ; BSR set to: 0
  2632                           ;main.c: 346:                     hours++;
  2633   00ED9C  2A5F               	incf	_hours^0,f,c
  2634   00ED9E                     
  2635                           ; BSR set to: 0
  2636                           ;main.c: 347:                     if (hours >= 24) {
  2637   00ED9E  0E17               	movlw	23
  2638   00EDA0  645F               	cpfsgt	_hours^0,c
  2639   00EDA2  EFD5  F076         	goto	u1481
  2640   00EDA6  EFD7  F076         	goto	u1480
  2641   00EDAA                     u1481:
  2642   00EDAA  EFD9  F076         	goto	l2428
  2643   00EDAE                     u1480:
  2644   00EDAE                     
  2645                           ; BSR set to: 0
  2646                           ;main.c: 348:                         hours = 0;
  2647   00EDAE  0E00               	movlw	0
  2648   00EDB0  6E5F               	movwf	_hours^0,c
  2649   00EDB2                     l2428:
  2650                           
  2651                           ; BSR set to: 0
  2652                           ;main.c: 352:             TMR0_Reload();
  2653   00EDB2  EC08  F075         	call	_TMR0_Reload	;wreg free
  2654   00EDB6                     
  2655                           ;main.c: 353:             INTCONbits.TMR0IF = 0;
  2656   00EDB6  94F2               	bcf	242,2,c	;volatile
  2657                           
  2658                           ;main.c: 354:             TMR0_StartTimer();
  2659   00EDB8  EC01  F075         	call	_TMR0_StartTimer	;wreg free
  2660   00EDBC                     l2432:
  2661                           
  2662                           ;main.c: 356:         displayTime();
  2663   00EDBC  ECE6  F076         	call	_displayTime	;wreg free
  2664   00EDC0                     
  2665                           ;main.c: 357:         checkButtons();
  2666   00EDC0  EC61  F079         	call	_checkButtons	;wreg free
  2667   00EDC4  EFAB  F076         	goto	l2406
  2668   00EDC8  EF00  F000         	goto	start
  2669   00EDCC                     __end_of_main:
  2670                           	callstack 0
  2671                           
  2672 ;; *************** function _matrixInit *****************
  2673 ;; Defined at:
  2674 ;;		line 96 in file "MAX7219.c"
  2675 ;; Parameters:    Size  Location     Type
  2676 ;;		None
  2677 ;; Auto vars:     Size  Location     Type
  2678 ;;		None
  2679 ;; Return value:  Size  Location     Type
  2680 ;;                  1    wreg      void 
  2681 ;; Registers used:
  2682 ;;		wreg, status,2, status,0, cstack
  2683 ;; Tracked objects:
  2684 ;;		On entry : 0/0
  2685 ;;		On exit  : 0/0
  2686 ;;		Unchanged: 0/0
  2687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2690 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2691 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;Total ram usage:        0 bytes
  2693 ;; Hardware stack levels used: 1
  2694 ;; Hardware stack levels required when called: 2
  2695 ;; This function calls:
  2696 ;;		_max7219_cmd
  2697 ;; This function is called by:
  2698 ;;		_main
  2699 ;; This function uses a non-reentrant model
  2700 ;;
  2701                           
  2702                           	psect	text1
  2703   00EBAA                     __ptext1:
  2704                           	callstack 0
  2705   00EBAA                     _matrixInit:
  2706                           	callstack 28
  2707   00EBAA                     
  2708                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  2709   00EBAA  0E00               	movlw	0
  2710   00EBAC  6E02               	movwf	max7219_cmd@data^0,c
  2711   00EBAE  0E09               	movlw	9
  2712   00EBB0  EC0B  F076         	call	_max7219_cmd
  2713                           
  2714                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  2715   00EBB4  0E01               	movlw	1
  2716   00EBB6  6E02               	movwf	max7219_cmd@data^0,c
  2717   00EBB8  0E0A               	movlw	10
  2718   00EBBA  EC0B  F076         	call	_max7219_cmd
  2719                           
  2720                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  2721   00EBBE  0E07               	movlw	7
  2722   00EBC0  6E02               	movwf	max7219_cmd@data^0,c
  2723   00EBC2  0E0B               	movlw	11
  2724   00EBC4  EC0B  F076         	call	_max7219_cmd
  2725                           
  2726                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  2727   00EBC8  0E01               	movlw	1
  2728   00EBCA  6E02               	movwf	max7219_cmd@data^0,c
  2729   00EBCC  0E0C               	movlw	12
  2730   00EBCE  EC0B  F076         	call	_max7219_cmd
  2731                           
  2732                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  2733   00EBD2  0E00               	movlw	0
  2734   00EBD4  6E02               	movwf	max7219_cmd@data^0,c
  2735   00EBD6  0E0F               	movlw	15
  2736   00EBD8  EC0B  F076         	call	_max7219_cmd
  2737   00EBDC  0012               	return		;funcret
  2738   00EBDE                     __end_of_matrixInit:
  2739                           	callstack 0
  2740                           
  2741 ;; *************** function _max7219_cmd *****************
  2742 ;; Defined at:
  2743 ;;		line 76 in file "MAX7219.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  Addr            1    wreg     unsigned char 
  2746 ;;  data            1    1[COMRAM] unsigned char 
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  Addr            1    4[COMRAM] unsigned char 
  2749 ;;  i               2    7[COMRAM] int 
  2750 ;;  writeData       2    5[COMRAM] unsigned short 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      void 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2760 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2761 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2762 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2763 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2764 ;;Total ram usage:        8 bytes
  2765 ;; Hardware stack levels used: 1
  2766 ;; Hardware stack levels required when called: 1
  2767 ;; This function calls:
  2768 ;;		_SPI_Exchange8bit
  2769 ;; This function is called by:
  2770 ;;		_matrixInit
  2771 ;; This function uses a non-reentrant model
  2772 ;;
  2773                           
  2774                           	psect	text2
  2775   00EC16                     __ptext2:
  2776                           	callstack 0
  2777   00EC16                     _max7219_cmd:
  2778                           	callstack 28
  2779                           
  2780                           ;incstack = 0
  2781                           ;max7219_cmd@Addr stored from wreg
  2782   00EC16  6E05               	movwf	max7219_cmd@Addr^0,c
  2783   00EC18                     
  2784                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  2785   00EC18  5002               	movf	max7219_cmd@data^0,w,c
  2786   00EC1A  C005  F003         	movff	max7219_cmd@Addr,??_max7219_cmd
  2787   00EC1E  6A04               	clrf	(??_max7219_cmd+1)^0,c
  2788   00EC20  C003  F004         	movff	??_max7219_cmd,??_max7219_cmd+1
  2789   00EC24  6A03               	clrf	??_max7219_cmd^0,c
  2790   00EC26  1003               	iorwf	??_max7219_cmd^0,w,c
  2791   00EC28  6E06               	movwf	max7219_cmd@writeData^0,c
  2792   00EC2A  5004               	movf	(??_max7219_cmd+1)^0,w,c
  2793   00EC2C  6E07               	movwf	(max7219_cmd@writeData+1)^0,c
  2794   00EC2E  948B               	bcf	139,2,c	;volatile
  2795   00EC30                     
  2796                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  2797   00EC30  0E00               	movlw	0
  2798   00EC32  6E09               	movwf	(max7219_cmd@i+1)^0,c
  2799   00EC34  0E00               	movlw	0
  2800   00EC36  6E08               	movwf	max7219_cmd@i^0,c
  2801   00EC38                     l2248:
  2802                           
  2803                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  2804   00EC38  5007               	movf	(max7219_cmd@writeData+1)^0,w,c
  2805   00EC3A  EC4F  F075         	call	_SPI_Exchange8bit
  2806                           
  2807                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  2808   00EC3E  5006               	movf	max7219_cmd@writeData^0,w,c
  2809   00EC40  EC4F  F075         	call	_SPI_Exchange8bit
  2810   00EC44                     
  2811                           ;MAX7219.c: 90:  }
  2812   00EC44  4A08               	infsnz	max7219_cmd@i^0,f,c
  2813   00EC46  2A09               	incf	(max7219_cmd@i+1)^0,f,c
  2814   00EC48  BE09               	btfsc	(max7219_cmd@i+1)^0,7,c
  2815   00EC4A  EF30  F076         	goto	u1231
  2816   00EC4E  5009               	movf	(max7219_cmd@i+1)^0,w,c
  2817   00EC50  E109               	bnz	u1230
  2818   00EC52  0E04               	movlw	4
  2819   00EC54  5C08               	subwf	max7219_cmd@i^0,w,c
  2820   00EC56  A0D8               	btfss	status,0,c
  2821   00EC58  EF30  F076         	goto	u1231
  2822   00EC5C  EF32  F076         	goto	u1230
  2823   00EC60                     u1231:
  2824   00EC60  EF1C  F076         	goto	l2248
  2825   00EC64                     u1230:
  2826   00EC64  848B               	bsf	139,2,c	;volatile
  2827   00EC66  0012               	return		;funcret
  2828   00EC68                     __end_of_max7219_cmd:
  2829                           	callstack 0
  2830                           
  2831 ;; *************** function _loadTimeFromFlash *****************
  2832 ;; Defined at:
  2833 ;;		line 456 in file "main.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  flashAddress    4    0        unsigned long 
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      void 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2850 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2851 ;;Total ram usage:        0 bytes
  2852 ;; Hardware stack levels used: 1
  2853 ;; Hardware stack levels required when called: 1
  2854 ;; This function calls:
  2855 ;;		_FLASH_ReadByte
  2856 ;; This function is called by:
  2857 ;;		_main
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text3
  2862   00EB46                     __ptext3:
  2863                           	callstack 0
  2864   00EB46                     _loadTimeFromFlash:
  2865                           	callstack 29
  2866   00EB46                     
  2867                           ;main.c: 459:     hours = FLASH_ReadByte(flashAddress);
  2868   00EB46  0E80               	movlw	128
  2869   00EB48  6E01               	movwf	FLASH_ReadByte@flashAddr^0,c
  2870   00EB4A  0E1F               	movlw	31
  2871   00EB4C  6E02               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  2872   00EB4E  0E00               	movlw	0
  2873   00EB50  6E03               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  2874   00EB52  0E00               	movlw	0
  2875   00EB54  6E04               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  2876   00EB56  EC25  F075         	call	_FLASH_ReadByte	;wreg free
  2877   00EB5A  6E5F               	movwf	_hours^0,c
  2878   00EB5C                     
  2879                           ;main.c: 460:     minutes = FLASH_ReadByte(flashAddress + 1);
  2880   00EB5C  0E81               	movlw	129
  2881   00EB5E  6E01               	movwf	FLASH_ReadByte@flashAddr^0,c
  2882   00EB60  0E1F               	movlw	31
  2883   00EB62  6E02               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  2884   00EB64  0E00               	movlw	0
  2885   00EB66  6E03               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  2886   00EB68  0E00               	movlw	0
  2887   00EB6A  6E04               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  2888   00EB6C  EC25  F075         	call	_FLASH_ReadByte	;wreg free
  2889   00EB70  0100               	movlb	0	; () banked
  2890   00EB72  6FAD               	movwf	_minutes& (0+255),b
  2891   00EB74                     
  2892                           ; BSR set to: 0
  2893   00EB74  0012               	return		;funcret
  2894   00EB76                     __end_of_loadTimeFromFlash:
  2895                           	callstack 0
  2896                           
  2897 ;; *************** function _checkButtons *****************
  2898 ;; Defined at:
  2899 ;;		line 398 in file "main.c"
  2900 ;; Parameters:    Size  Location     Type
  2901 ;;		None
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2913 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;Total ram usage:        2 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 6
  2920 ;; This function calls:
  2921 ;;		___awmod
  2922 ;;		_blinkDisplay
  2923 ;;		_displayTime
  2924 ;;		_saveTimeToFlash
  2925 ;; This function is called by:
  2926 ;;		_main
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           
  2930                           	psect	text4
  2931   00F2C2                     __ptext4:
  2932                           	callstack 0
  2933   00F2C2                     _checkButtons:
  2934                           	callstack 24
  2935   00F2C2                     
  2936                           ;main.c: 400:      if (!PORTBbits.RB0)
  2937   00F2C2  B081               	btfsc	129,0,c	;volatile
  2938   00F2C4  EF66  F079         	goto	u1271
  2939   00F2C8  EF68  F079         	goto	u1270
  2940   00F2CC                     u1271:
  2941   00F2CC  EF8C  F079         	goto	l2310
  2942   00F2D0                     u1270:
  2943   00F2D0                     
  2944                           ;main.c: 401:     {;main.c: 402:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  2945   00F2D0  0E02               	movlw	2
  2946   00F2D2  0100               	movlb	0	; () banked
  2947   00F2D4  6FAF               	movwf	(??_checkButtons+1)& (0+255),b
  2948   00F2D6  0E04               	movlw	4
  2949   00F2D8  6FAE               	movwf	??_checkButtons& (0+255),b
  2950   00F2DA  0EBA               	movlw	186
  2951   00F2DC                     u1507:
  2952   00F2DC  2EE8               	decfsz	wreg,f,c
  2953   00F2DE  D7FE               	bra	u1507
  2954   00F2E0  2FAE               	decfsz	??_checkButtons& (0+255),f,b
  2955   00F2E2  D7FC               	bra	u1507
  2956   00F2E4  2FAF               	decfsz	(??_checkButtons+1)& (0+255),f,b
  2957   00F2E6  D7FA               	bra	u1507
  2958   00F2E8  0000               	nop	
  2959   00F2EA                     
  2960                           ;main.c: 403:         if (!PORTBbits.RB0) {
  2961   00F2EA  B081               	btfsc	129,0,c	;volatile
  2962   00F2EC  EF7A  F079         	goto	u1281
  2963   00F2F0  EF7C  F079         	goto	u1280
  2964   00F2F4                     u1281:
  2965   00F2F4  EF8C  F079         	goto	l2310
  2966   00F2F8                     u1280:
  2967   00F2F8                     
  2968                           ;main.c: 404:             hours = (hours + 1) % 24;
  2969   00F2F8  0E01               	movlw	1
  2970   00F2FA  245F               	addwf	_hours^0,w,c
  2971   00F2FC  6E01               	movwf	___awmod@dividend^0,c
  2972   00F2FE  6A02               	clrf	(___awmod@dividend+1)^0,c
  2973   00F300  0E00               	movlw	0
  2974   00F302  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  2975   00F304  0E00               	movlw	0
  2976   00F306  6E04               	movwf	(___awmod@divisor+1)^0,c
  2977   00F308  0E18               	movlw	24
  2978   00F30A  6E03               	movwf	___awmod@divisor^0,c
  2979   00F30C  EC3B  F077         	call	___awmod	;wreg free
  2980   00F310  5001               	movf	?___awmod^0,w,c
  2981   00F312  6E5F               	movwf	_hours^0,c
  2982   00F314                     
  2983                           ;main.c: 405:             displayTime();
  2984   00F314  ECE6  F076         	call	_displayTime	;wreg free
  2985   00F318                     l2310:
  2986                           
  2987                           ;main.c: 409:     if (!PORTBbits.RB1)
  2988   00F318  B281               	btfsc	129,1,c	;volatile
  2989   00F31A  EF91  F079         	goto	u1291
  2990   00F31E  EF93  F079         	goto	u1290
  2991   00F322                     u1291:
  2992   00F322  EFB9  F079         	goto	l2320
  2993   00F326                     u1290:
  2994   00F326                     
  2995                           ;main.c: 410:     {;main.c: 411:         _delay((unsigned long)((100)*(8000000/4000.0)))
      +                          ;
  2996   00F326  0E02               	movlw	2
  2997   00F328  0100               	movlb	0	; () banked
  2998   00F32A  6FAF               	movwf	(??_checkButtons+1)& (0+255),b
  2999   00F32C  0E04               	movlw	4
  3000   00F32E  6FAE               	movwf	??_checkButtons& (0+255),b
  3001   00F330  0EBA               	movlw	186
  3002   00F332                     u1517:
  3003   00F332  2EE8               	decfsz	wreg,f,c
  3004   00F334  D7FE               	bra	u1517
  3005   00F336  2FAE               	decfsz	??_checkButtons& (0+255),f,b
  3006   00F338  D7FC               	bra	u1517
  3007   00F33A  2FAF               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3008   00F33C  D7FA               	bra	u1517
  3009   00F33E  0000               	nop	
  3010   00F340                     
  3011                           ;main.c: 412:         if (!PORTBbits.RB1) {
  3012   00F340  B281               	btfsc	129,1,c	;volatile
  3013   00F342  EFA5  F079         	goto	u1301
  3014   00F346  EFA7  F079         	goto	u1300
  3015   00F34A                     u1301:
  3016   00F34A  EFB9  F079         	goto	l2320
  3017   00F34E                     u1300:
  3018   00F34E                     
  3019                           ;main.c: 413:             minutes = (minutes + 1) % 60;
  3020   00F34E  0E01               	movlw	1
  3021   00F350  0100               	movlb	0	; () banked
  3022   00F352  25AD               	addwf	_minutes& (0+255),w,b
  3023   00F354  6E01               	movwf	___awmod@dividend^0,c
  3024   00F356  6A02               	clrf	(___awmod@dividend+1)^0,c
  3025   00F358  0E00               	movlw	0
  3026   00F35A  2202               	addwfc	(___awmod@dividend+1)^0,f,c
  3027   00F35C  0E00               	movlw	0
  3028   00F35E  6E04               	movwf	(___awmod@divisor+1)^0,c
  3029   00F360  0E3C               	movlw	60
  3030   00F362  6E03               	movwf	___awmod@divisor^0,c
  3031   00F364  EC3B  F077         	call	___awmod	;wreg free
  3032   00F368  5001               	movf	?___awmod^0,w,c
  3033   00F36A  0100               	movlb	0	; () banked
  3034   00F36C  6FAD               	movwf	_minutes& (0+255),b
  3035   00F36E                     
  3036                           ; BSR set to: 0
  3037                           ;main.c: 414:             displayTime();
  3038   00F36E  ECE6  F076         	call	_displayTime	;wreg free
  3039   00F372                     l2320:
  3040                           
  3041                           ;main.c: 418:     if (!PORTBbits.RB2)
  3042   00F372  B481               	btfsc	129,2,c	;volatile
  3043   00F374  EFBE  F079         	goto	u1311
  3044   00F378  EFC0  F079         	goto	u1310
  3045   00F37C                     u1311:
  3046   00F37C  EFF5  F079         	goto	l2338
  3047   00F380                     u1310:
  3048   00F380                     
  3049                           ;main.c: 419:     {;main.c: 420:         if (!isButton3Pressed) {
  3050   00F380  0100               	movlb	0	; () banked
  3051   00F382  51A6               	movf	_isButton3Pressed& (0+255),w,b
  3052   00F384  A4D8               	btfss	status,2,c
  3053   00F386  EFC7  F079         	goto	u1321
  3054   00F38A  EFC9  F079         	goto	u1320
  3055   00F38E                     u1321:
  3056   00F38E  EFCF  F079         	goto	l2326
  3057   00F392                     u1320:
  3058   00F392                     
  3059                           ; BSR set to: 0
  3060                           ;main.c: 422:             button3PressTime = 0;
  3061   00F392  0E00               	movlw	0
  3062   00F394  6FA3               	movwf	(_button3PressTime+1)& (0+255),b
  3063   00F396  0E00               	movlw	0
  3064   00F398  6FA2               	movwf	_button3PressTime& (0+255),b
  3065                           
  3066                           ;main.c: 423:             isButton3Pressed = 1;
  3067   00F39A  0E01               	movlw	1
  3068   00F39C  6FA6               	movwf	_isButton3Pressed& (0+255),b
  3069   00F39E                     l2326:
  3070                           
  3071                           ; BSR set to: 0
  3072                           ;main.c: 427:         _delay((unsigned long)((100)*(8000000/4000.0)));
  3073   00F39E  0E02               	movlw	2
  3074   00F3A0  0100               	movlb	0	; () banked
  3075   00F3A2  6FAF               	movwf	(??_checkButtons+1)& (0+255),b
  3076   00F3A4  0E04               	movlw	4
  3077   00F3A6  6FAE               	movwf	??_checkButtons& (0+255),b
  3078   00F3A8  0EBA               	movlw	186
  3079   00F3AA                     u1527:
  3080   00F3AA  2EE8               	decfsz	wreg,f,c
  3081   00F3AC  D7FE               	bra	u1527
  3082   00F3AE  2FAE               	decfsz	??_checkButtons& (0+255),f,b
  3083   00F3B0  D7FC               	bra	u1527
  3084   00F3B2  2FAF               	decfsz	(??_checkButtons+1)& (0+255),f,b
  3085   00F3B4  D7FA               	bra	u1527
  3086   00F3B6  0000               	nop	
  3087   00F3B8                     
  3088                           ;main.c: 428:         button3PressTime += 100;
  3089   00F3B8  0E64               	movlw	100
  3090   00F3BA  0100               	movlb	0	; () banked
  3091   00F3BC  27A2               	addwf	_button3PressTime& (0+255),f,b
  3092   00F3BE  0E00               	movlw	0
  3093   00F3C0  23A3               	addwfc	(_button3PressTime+1)& (0+255),f,b
  3094   00F3C2                     
  3095                           ; BSR set to: 0
  3096                           ;main.c: 430:         if (button3PressTime >= 3000) {
  3097   00F3C2  0EB8               	movlw	184
  3098   00F3C4  5DA2               	subwf	_button3PressTime& (0+255),w,b
  3099   00F3C6  0E0B               	movlw	11
  3100   00F3C8  59A3               	subwfb	(_button3PressTime+1)& (0+255),w,b
  3101   00F3CA  A0D8               	btfss	status,0,c
  3102   00F3CC  EFEA  F079         	goto	u1331
  3103   00F3D0  EFEC  F079         	goto	u1330
  3104   00F3D4                     u1331:
  3105   00F3D4  EFF8  F079         	goto	l159
  3106   00F3D8                     u1330:
  3107   00F3D8                     
  3108                           ; BSR set to: 0
  3109                           ;main.c: 432:             saveTimeToFlash();
  3110   00F3D8  EC7C  F075         	call	_saveTimeToFlash	;wreg free
  3111   00F3DC                     
  3112                           ;main.c: 433:             isButton3Pressed = 0;
  3113   00F3DC  0E00               	movlw	0
  3114   00F3DE  0100               	movlb	0	; () banked
  3115   00F3E0  6FA6               	movwf	_isButton3Pressed& (0+255),b
  3116   00F3E2                     
  3117                           ; BSR set to: 0
  3118                           ;main.c: 434:             blinkDisplay();
  3119   00F3E2  EC34  F076         	call	_blinkDisplay	;wreg free
  3120   00F3E6  EFF8  F079         	goto	l159
  3121   00F3EA                     l2338:
  3122                           
  3123                           ;main.c: 438:     {;main.c: 440:         isButton3Pressed = 0;
  3124   00F3EA  0E00               	movlw	0
  3125   00F3EC  0100               	movlb	0	; () banked
  3126   00F3EE  6FA6               	movwf	_isButton3Pressed& (0+255),b
  3127   00F3F0                     l159:
  3128   00F3F0  0012               	return		;funcret
  3129   00F3F2                     __end_of_checkButtons:
  3130                           	callstack 0
  3131                           
  3132 ;; *************** function _saveTimeToFlash *****************
  3133 ;; Defined at:
  3134 ;;		line 444 in file "main.c"
  3135 ;; Parameters:    Size  Location     Type
  3136 ;;		None
  3137 ;; Auto vars:     Size  Location     Type
  3138 ;;  flashAddress    4    0        unsigned long 
  3139 ;;  timeData        2   31[COMRAM] unsigned char [2]
  3140 ;; Return value:  Size  Location     Type
  3141 ;;                  1    wreg      void 
  3142 ;; Registers used:
  3143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3144 ;; Tracked objects:
  3145 ;;		On entry : 0/0
  3146 ;;		On exit  : 0/0
  3147 ;;		Unchanged: 0/0
  3148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3150 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3152 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3153 ;;Total ram usage:        2 bytes
  3154 ;; Hardware stack levels used: 1
  3155 ;; Hardware stack levels required when called: 3
  3156 ;; This function calls:
  3157 ;;		_FLASH_WriteByte
  3158 ;; This function is called by:
  3159 ;;		_checkButtons
  3160 ;; This function uses a non-reentrant model
  3161 ;;
  3162                           
  3163                           	psect	text5
  3164   00EAF8                     __ptext5:
  3165                           	callstack 0
  3166   00EAF8                     _saveTimeToFlash:
  3167                           	callstack 26
  3168   00EAF8                     
  3169                           ;main.c: 447:     uint8_t timeData[2];;main.c: 450:     timeData[0] = hours;
  3170   00EAF8  C05F  F020         	movff	_hours,saveTimeToFlash@timeData
  3171   00EAFC                     
  3172                           ;main.c: 451:     timeData[1] = minutes;
  3173   00EAFC  C0AD  F021         	movff	_minutes,saveTimeToFlash@timeData+1
  3174   00EB00                     
  3175                           ;main.c: 453:     FLASH_WriteByte(flashAddress, timeData, 2);
  3176   00EB00  0E80               	movlw	128
  3177   00EB02  6E14               	movwf	FLASH_WriteByte@flashAddr^0,c
  3178   00EB04  0E1F               	movlw	31
  3179   00EB06  6E15               	movwf	(FLASH_WriteByte@flashAddr+1)^0,c
  3180   00EB08  0E00               	movlw	0
  3181   00EB0A  6E16               	movwf	(FLASH_WriteByte@flashAddr+2)^0,c
  3182   00EB0C  0E00               	movlw	0
  3183   00EB0E  6E17               	movwf	(FLASH_WriteByte@flashAddr+3)^0,c
  3184   00EB10  0E20               	movlw	low saveTimeToFlash@timeData
  3185   00EB12  6E18               	movwf	FLASH_WriteByte@flashRdBufPtr^0,c
  3186   00EB14  0E02               	movlw	2
  3187   00EB16  6E19               	movwf	FLASH_WriteByte@byte^0,c
  3188   00EB18  EC61  F076         	call	_FLASH_WriteByte	;wreg free
  3189   00EB1C  0012               	return		;funcret
  3190   00EB1E                     __end_of_saveTimeToFlash:
  3191                           	callstack 0
  3192                           
  3193 ;; *************** function _FLASH_WriteByte *****************
  3194 ;; Defined at:
  3195 ;;		line 74 in file "mcc_generated_files/memory.c"
  3196 ;; Parameters:    Size  Location     Type
  3197 ;;  flashAddr       4   19[COMRAM] unsigned long 
  3198 ;;  flashRdBufPt    1   23[COMRAM] PTR unsigned char 
  3199 ;;		 -> saveTimeToFlash@timeData(2), 
  3200 ;;  byte            1   24[COMRAM] unsigned char 
  3201 ;; Auto vars:     Size  Location     Type
  3202 ;;  blockStartAd    4   26[COMRAM] unsigned long 
  3203 ;;  i               1   30[COMRAM] unsigned char 
  3204 ;;  offset          1   25[COMRAM] unsigned char 
  3205 ;; Return value:  Size  Location     Type
  3206 ;;                  1    wreg      void 
  3207 ;; Registers used:
  3208 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3209 ;; Tracked objects:
  3210 ;;		On entry : 0/0
  3211 ;;		On exit  : 0/0
  3212 ;;		Unchanged: 0/0
  3213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3214 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3215 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3217 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;Total ram usage:       12 bytes
  3219 ;; Hardware stack levels used: 1
  3220 ;; Hardware stack levels required when called: 2
  3221 ;; This function calls:
  3222 ;;		_FLASH_ReadByte
  3223 ;;		_FLASH_WriteBlock
  3224 ;; This function is called by:
  3225 ;;		_saveTimeToFlash
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text6
  3230   00ECC2                     __ptext6:
  3231                           	callstack 0
  3232   00ECC2                     _FLASH_WriteByte:
  3233                           	callstack 26
  3234   00ECC2                     
  3235                           ;mcc_generated_files/memory.c: 74: void FLASH_WriteByte(uint32_t flashAddr, uint8_t *fla
      +                          shRdBufPtr, uint8_t byte);mcc_generated_files/memory.c: 75: {;mcc_generated_files/memory
      +                          .c: 76:     uint32_t blockStartAddr = (uint32_t)(flashAddr & ((65536 -1) ^ (64 -1)));
  3236   00ECC2  0EC0               	movlw	192
  3237   00ECC4  1414               	andwf	FLASH_WriteByte@flashAddr^0,w,c
  3238   00ECC6  6E1B               	movwf	FLASH_WriteByte@blockStartAddr^0,c
  3239   00ECC8  0EFF               	movlw	255
  3240   00ECCA  1415               	andwf	(FLASH_WriteByte@flashAddr+1)^0,w,c
  3241   00ECCC  6E1C               	movwf	(FLASH_WriteByte@blockStartAddr+1)^0,c
  3242   00ECCE  0E00               	movlw	0
  3243   00ECD0  1416               	andwf	(FLASH_WriteByte@flashAddr+2)^0,w,c
  3244   00ECD2  6E1D               	movwf	(FLASH_WriteByte@blockStartAddr+2)^0,c
  3245   00ECD4  0E00               	movlw	0
  3246   00ECD6  1417               	andwf	(FLASH_WriteByte@flashAddr+3)^0,w,c
  3247   00ECD8  6E1E               	movwf	(FLASH_WriteByte@blockStartAddr+3)^0,c
  3248                           
  3249                           ;mcc_generated_files/memory.c: 77:     uint8_t offset = (uint8_t)(flashAddr & (64 -1));
  3250   00ECDA  5014               	movf	FLASH_WriteByte@flashAddr^0,w,c
  3251   00ECDC  0B3F               	andlw	63
  3252   00ECDE  6E1A               	movwf	FLASH_WriteByte@offset^0,c
  3253   00ECE0                     
  3254                           ;mcc_generated_files/memory.c: 78:     uint8_t i;;mcc_generated_files/memory.c: 81:     
      +                          for (i=0; i<64; i++)
  3255   00ECE0  0E00               	movlw	0
  3256   00ECE2  6E1F               	movwf	FLASH_WriteByte@i^0,c
  3257   00ECE4                     l2176:
  3258                           
  3259                           ;mcc_generated_files/memory.c: 82:     {;mcc_generated_files/memory.c: 83:         flash
      +                          RdBufPtr[i] = FLASH_ReadByte((blockStartAddr+i));
  3260   00ECE4  5018               	movf	FLASH_WriteByte@flashRdBufPtr^0,w,c
  3261   00ECE6  241F               	addwf	FLASH_WriteByte@i^0,w,c
  3262   00ECE8  6ED9               	movwf	fsr2l,c
  3263   00ECEA  6ADA               	clrf	fsr2h,c
  3264   00ECEC  501F               	movf	FLASH_WriteByte@i^0,w,c
  3265   00ECEE  241B               	addwf	FLASH_WriteByte@blockStartAddr^0,w,c
  3266   00ECF0  6E01               	movwf	FLASH_ReadByte@flashAddr^0,c
  3267   00ECF2  0E00               	movlw	0
  3268   00ECF4  201C               	addwfc	(FLASH_WriteByte@blockStartAddr+1)^0,w,c
  3269   00ECF6  6E02               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3270   00ECF8  0E00               	movlw	0
  3271   00ECFA  201D               	addwfc	(FLASH_WriteByte@blockStartAddr+2)^0,w,c
  3272   00ECFC  6E03               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3273   00ECFE  0E00               	movlw	0
  3274   00ED00  201E               	addwfc	(FLASH_WriteByte@blockStartAddr+3)^0,w,c
  3275   00ED02  6E04               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3276   00ED04  EC25  F075         	call	_FLASH_ReadByte	;wreg free
  3277   00ED08  6EDF               	movwf	indf2,c
  3278   00ED0A                     
  3279                           ;mcc_generated_files/memory.c: 84:     }
  3280   00ED0A  2A1F               	incf	FLASH_WriteByte@i^0,f,c
  3281   00ED0C  0E3F               	movlw	63
  3282   00ED0E  641F               	cpfsgt	FLASH_WriteByte@i^0,c
  3283   00ED10  EF8C  F076         	goto	u1181
  3284   00ED14  EF8E  F076         	goto	u1180
  3285   00ED18                     u1181:
  3286   00ED18  EF72  F076         	goto	l2176
  3287   00ED1C                     u1180:
  3288   00ED1C                     
  3289                           ;mcc_generated_files/memory.c: 87:     flashRdBufPtr[offset] = byte;
  3290   00ED1C  5018               	movf	FLASH_WriteByte@flashRdBufPtr^0,w,c
  3291   00ED1E  241A               	addwf	FLASH_WriteByte@offset^0,w,c
  3292   00ED20  6ED9               	movwf	fsr2l,c
  3293   00ED22  6ADA               	clrf	fsr2h,c
  3294   00ED24  C019  FFDF         	movff	FLASH_WriteByte@byte,indf2
  3295   00ED28                     
  3296                           ;mcc_generated_files/memory.c: 90:     FLASH_WriteBlock(blockStartAddr, flashRdBufPtr);
  3297   00ED28  C01B  F006         	movff	FLASH_WriteByte@blockStartAddr,FLASH_WriteBlock@writeAddr
  3298   00ED2C  C01C  F007         	movff	FLASH_WriteByte@blockStartAddr+1,FLASH_WriteBlock@writeAddr+1
  3299   00ED30  C01D  F008         	movff	FLASH_WriteByte@blockStartAddr+2,FLASH_WriteBlock@writeAddr+2
  3300   00ED34  C01E  F009         	movff	FLASH_WriteByte@blockStartAddr+3,FLASH_WriteBlock@writeAddr+3
  3301   00ED38  C018  F00A         	movff	FLASH_WriteByte@flashRdBufPtr,FLASH_WriteBlock@flashWrBufPtr
  3302   00ED3C  EC55  F078         	call	_FLASH_WriteBlock	;wreg free
  3303   00ED40  0012               	return		;funcret
  3304   00ED42                     __end_of_FLASH_WriteByte:
  3305                           	callstack 0
  3306                           
  3307 ;; *************** function _FLASH_WriteBlock *****************
  3308 ;; Defined at:
  3309 ;;		line 93 in file "mcc_generated_files/memory.c"
  3310 ;; Parameters:    Size  Location     Type
  3311 ;;  writeAddr       4    5[COMRAM] unsigned long 
  3312 ;;  flashWrBufPt    1    9[COMRAM] PTR unsigned char 
  3313 ;;		 -> saveTimeToFlash@timeData(2), 
  3314 ;; Auto vars:     Size  Location     Type
  3315 ;;  blockStartAd    4   10[COMRAM] unsigned long 
  3316 ;;  i               1   18[COMRAM] unsigned char 
  3317 ;;  dataCounter     1   17[COMRAM] unsigned char 
  3318 ;;  numberOfWrit    1   16[COMRAM] unsigned char 
  3319 ;;  j               1   15[COMRAM] unsigned char 
  3320 ;;  GIEBitValue     1   14[COMRAM] unsigned char 
  3321 ;; Return value:  Size  Location     Type
  3322 ;;                  1    wreg      char 
  3323 ;; Registers used:
  3324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3325 ;; Tracked objects:
  3326 ;;		On entry : 0/0
  3327 ;;		On exit  : 0/0
  3328 ;;		Unchanged: 0/0
  3329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3330 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3331 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3333 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3334 ;;Total ram usage:       14 bytes
  3335 ;; Hardware stack levels used: 1
  3336 ;; Hardware stack levels required when called: 1
  3337 ;; This function calls:
  3338 ;;		_FLASH_EraseBlock
  3339 ;; This function is called by:
  3340 ;;		_FLASH_WriteByte
  3341 ;; This function uses a non-reentrant model
  3342 ;;
  3343                           
  3344                           	psect	text7
  3345   00F0AA                     __ptext7:
  3346                           	callstack 0
  3347   00F0AA                     _FLASH_WriteBlock:
  3348                           	callstack 26
  3349   00F0AA                     
  3350                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  3351   00F0AA  0EC0               	movlw	192
  3352   00F0AC  1406               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  3353   00F0AE  6E0B               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  3354   00F0B0  0EFF               	movlw	255
  3355   00F0B2  1407               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  3356   00F0B4  6E0C               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  3357   00F0B6  0E00               	movlw	0
  3358   00F0B8  1408               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  3359   00F0BA  6E0D               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  3360   00F0BC  0E00               	movlw	0
  3361   00F0BE  1409               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  3362   00F0C0  6E0E               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  3363   00F0C2                     
  3364                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  3365   00F0C2  0E00               	movlw	0
  3366   00F0C4  BEF2               	btfsc	242,7,c	;volatile
  3367   00F0C6  0E01               	movlw	1
  3368   00F0C8  6E0F               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  3369   00F0CA  0E00               	movlw	0
  3370   00F0CC  6E12               	movwf	FLASH_WriteBlock@dataCounter^0,c
  3371   00F0CE                     
  3372                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  3373   00F0CE  0E01               	movlw	1
  3374   00F0D0  6E11               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  3375   00F0D2                     
  3376                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  3377   00F0D2  500B               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  3378   00F0D4  1806               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  3379   00F0D6  E10F               	bnz	u1050
  3380   00F0D8  500C               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  3381   00F0DA  1807               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  3382   00F0DC  E10C               	bnz	u1050
  3383   00F0DE  500D               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  3384   00F0E0  1808               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  3385   00F0E2  E109               	bnz	u1050
  3386   00F0E4  500E               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  3387   00F0E6  1809               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  3388   00F0E8  B4D8               	btfsc	status,2,c
  3389   00F0EA  EF79  F078         	goto	u1051
  3390   00F0EE  EF7B  F078         	goto	u1050
  3391   00F0F2                     u1051:
  3392   00F0F2  EF7D  F078         	goto	l2062
  3393   00F0F6                     u1050:
  3394   00F0F6  EFC9  F078         	goto	l446
  3395   00F0FA                     l2062:
  3396                           
  3397                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  3398   00F0FA  C006  F001         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  3399   00F0FE  C007  F002         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  3400   00F102  C008  F003         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  3401   00F106  C009  F004         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  3402   00F10A  ECBB  F075         	call	_FLASH_EraseBlock	;wreg free
  3403   00F10E                     
  3404                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  3405   00F10E  C008  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  3406   00F112                     
  3407                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  3408   00F112  C007  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  3409   00F116                     
  3410                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  3411   00F116  C006  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  3412   00F11A                     
  3413                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  3414   00F11A  0E00               	movlw	0
  3415   00F11C  6E10               	movwf	FLASH_WriteBlock@j^0,c
  3416   00F11E  EFC0  F078         	goto	l2098
  3417   00F122                     l2072:
  3418                           
  3419                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  3420   00F122  0E00               	movlw	0
  3421   00F124  6E13               	movwf	FLASH_WriteBlock@i^0,c
  3422   00F126                     l2078:
  3423                           
  3424                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  3425   00F126  500A               	movf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  3426   00F128  2412               	addwf	FLASH_WriteBlock@dataCounter^0,w,c
  3427   00F12A  6ED9               	movwf	fsr2l,c
  3428   00F12C  6ADA               	clrf	fsr2h,c
  3429   00F12E  50DF               	movf	indf2,w,c
  3430   00F130  6EF5               	movwf	245,c	;volatile
  3431   00F132                     
  3432                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  3433   00F132  0E3F               	movlw	63
  3434   00F134  1813               	xorwf	FLASH_WriteBlock@i^0,w,c
  3435   00F136  A4D8               	btfss	status,2,c
  3436   00F138  EFA0  F078         	goto	u1061
  3437   00F13C  EFA2  F078         	goto	u1060
  3438   00F140                     u1061:
  3439   00F140  EFA5  F078         	goto	l451
  3440   00F144                     u1060:
  3441   00F144  000C               	tblwt		*	;# 
  3442                           
  3443                           ;mcc_generated_files/memory.c: 124:    }
  3444   00F146  EFA7  F078         	goto	l452
  3445   00F14A                     l451:
  3446   00F14A  000D               	tblwt		*+	;# 
  3447   00F14C                     
  3448                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  3449   00F14C  2A12               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  3450   00F14E                     l452:
  3451                           
  3452                           ;mcc_generated_files/memory.c: 130:   }
  3453   00F14E  2A13               	incf	FLASH_WriteBlock@i^0,f,c
  3454   00F150  0E3F               	movlw	63
  3455   00F152  6413               	cpfsgt	FLASH_WriteBlock@i^0,c
  3456   00F154  EFAE  F078         	goto	u1071
  3457   00F158  EFB0  F078         	goto	u1070
  3458   00F15C                     u1071:
  3459   00F15C  EF93  F078         	goto	l2078
  3460   00F160                     u1070:
  3461   00F160                     
  3462                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  3463   00F160  8EA6               	bsf	166,7,c	;volsfr
  3464                           
  3465                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  3466   00F162  9CA6               	bcf	166,6,c	;volsfr
  3467                           
  3468                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  3469   00F164  84A6               	bsf	166,2,c	;volsfr
  3470                           
  3471                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  3472   00F166  9EF2               	bcf	242,7,c	;volatile
  3473   00F168                     
  3474                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  3475   00F168  0E55               	movlw	85
  3476   00F16A  6EA7               	movwf	167,c	;volsfr
  3477                           
  3478                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  3479   00F16C  0EAA               	movlw	170
  3480   00F16E  6EA7               	movwf	167,c	;volsfr
  3481   00F170                     
  3482                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  3483   00F170  82A6               	bsf	166,1,c	;volsfr
  3484   00F172                     
  3485                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  3486   00F172  94A6               	bcf	166,2,c	;volsfr
  3487   00F174                     
  3488                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  3489   00F174  B00F               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  3490   00F176  D002               	bra	u1085
  3491   00F178  9EF2               	bcf	242,7,c	;volatile
  3492   00F17A  D001               	bra	u1086
  3493   00F17C                     u1085:
  3494   00F17C  8EF2               	bsf	242,7,c	;volatile
  3495   00F17E                     u1086:
  3496   00F17E                     
  3497                           ;mcc_generated_files/memory.c: 142:  }
  3498   00F17E  2A10               	incf	FLASH_WriteBlock@j^0,f,c
  3499   00F180                     l2098:
  3500   00F180  5011               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  3501   00F182  5C10               	subwf	FLASH_WriteBlock@j^0,w,c
  3502   00F184  A0D8               	btfss	status,0,c
  3503   00F186  EFC7  F078         	goto	u1091
  3504   00F18A  EFC9  F078         	goto	u1090
  3505   00F18E                     u1091:
  3506   00F18E  EF91  F078         	goto	l2072
  3507   00F192                     u1090:
  3508   00F192                     l446:
  3509   00F192  0012               	return		;funcret
  3510   00F194                     __end_of_FLASH_WriteBlock:
  3511                           	callstack 0
  3512                           
  3513 ;; *************** function _FLASH_EraseBlock *****************
  3514 ;; Defined at:
  3515 ;;		line 147 in file "mcc_generated_files/memory.c"
  3516 ;; Parameters:    Size  Location     Type
  3517 ;;  baseAddr        4    0[COMRAM] unsigned long 
  3518 ;; Auto vars:     Size  Location     Type
  3519 ;;  GIEBitValue     1    4[COMRAM] unsigned char 
  3520 ;; Return value:  Size  Location     Type
  3521 ;;                  1    wreg      void 
  3522 ;; Registers used:
  3523 ;;		wreg, status,2
  3524 ;; Tracked objects:
  3525 ;;		On entry : 0/0
  3526 ;;		On exit  : 0/0
  3527 ;;		Unchanged: 0/0
  3528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3529 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3533 ;;Total ram usage:        5 bytes
  3534 ;; Hardware stack levels used: 1
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_FLASH_WriteBlock
  3539 ;; This function uses a non-reentrant model
  3540 ;;
  3541                           
  3542                           	psect	text8
  3543   00EB76                     __ptext8:
  3544                           	callstack 0
  3545   00EB76                     _FLASH_EraseBlock:
  3546                           	callstack 26
  3547   00EB76                     
  3548                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  3549   00EB76  0E00               	movlw	0
  3550   00EB78  BEF2               	btfsc	242,7,c	;volatile
  3551   00EB7A  0E01               	movlw	1
  3552   00EB7C  6E05               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  3553   00EB7E                     
  3554                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  3555   00EB7E  C003  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  3556   00EB82                     
  3557                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  3558   00EB82  C002  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  3559   00EB86                     
  3560                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  3561   00EB86  C001  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  3562   00EB8A                     
  3563                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  3564   00EB8A  8EA6               	bsf	166,7,c	;volsfr
  3565   00EB8C                     
  3566                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  3567   00EB8C  9CA6               	bcf	166,6,c	;volsfr
  3568   00EB8E                     
  3569                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  3570   00EB8E  84A6               	bsf	166,2,c	;volsfr
  3571   00EB90                     
  3572                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  3573   00EB90  88A6               	bsf	166,4,c	;volsfr
  3574   00EB92                     
  3575                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  3576   00EB92  9EF2               	bcf	242,7,c	;volatile
  3577   00EB94                     
  3578                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  3579   00EB94  0E55               	movlw	85
  3580   00EB96  6EA7               	movwf	167,c	;volsfr
  3581   00EB98                     
  3582                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  3583   00EB98  0EAA               	movlw	170
  3584   00EB9A  6EA7               	movwf	167,c	;volsfr
  3585   00EB9C                     
  3586                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  3587   00EB9C  82A6               	bsf	166,1,c	;volsfr
  3588   00EB9E                     
  3589                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  3590   00EB9E  B005               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  3591   00EBA0  D002               	bra	u965
  3592   00EBA2  9EF2               	bcf	242,7,c	;volatile
  3593   00EBA4  D001               	bra	u966
  3594   00EBA6                     u965:
  3595   00EBA6  8EF2               	bsf	242,7,c	;volatile
  3596   00EBA8                     u966:
  3597   00EBA8  0012               	return		;funcret
  3598   00EBAA                     __end_of_FLASH_EraseBlock:
  3599                           	callstack 0
  3600                           
  3601 ;; *************** function _FLASH_ReadByte *****************
  3602 ;; Defined at:
  3603 ;;		line 58 in file "mcc_generated_files/memory.c"
  3604 ;; Parameters:    Size  Location     Type
  3605 ;;  flashAddr       4    0[COMRAM] unsigned long 
  3606 ;; Auto vars:     Size  Location     Type
  3607 ;;		None
  3608 ;; Return value:  Size  Location     Type
  3609 ;;                  1    wreg      unsigned char 
  3610 ;; Registers used:
  3611 ;;		wreg, status,2
  3612 ;; Tracked objects:
  3613 ;;		On entry : 0/0
  3614 ;;		On exit  : 0/0
  3615 ;;		Unchanged: 0/0
  3616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3617 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3618 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3620 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3621 ;;Total ram usage:        4 bytes
  3622 ;; Hardware stack levels used: 1
  3623 ;; This function calls:
  3624 ;;		Nothing
  3625 ;; This function is called by:
  3626 ;;		_loadTimeFromFlash
  3627 ;;		_FLASH_WriteByte
  3628 ;;		_FLASH_ReadWord
  3629 ;; This function uses a non-reentrant model
  3630 ;;
  3631                           
  3632                           	psect	text9
  3633   00EA4A                     __ptext9:
  3634                           	callstack 0
  3635   00EA4A                     _FLASH_ReadByte:
  3636                           	callstack 29
  3637   00EA4A                     
  3638                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  3639   00EA4A  C003  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  3640                           
  3641                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  3642   00EA4E  C002  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  3643                           
  3644                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  3645   00EA52  C001  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  3646   00EA56  0008               	tblrd		*	;# 
  3647   00EA58                     
  3648                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  3649   00EA58  50F5               	movf	245,w,c	;volatile
  3650   00EA5A  0012               	return		;funcret
  3651   00EA5C                     __end_of_FLASH_ReadByte:
  3652                           	callstack 0
  3653                           
  3654 ;; *************** function _blinkDisplay *****************
  3655 ;; Defined at:
  3656 ;;		line 383 in file "main.c"
  3657 ;; Parameters:    Size  Location     Type
  3658 ;;		None
  3659 ;; Auto vars:     Size  Location     Type
  3660 ;;		None
  3661 ;; Return value:  Size  Location     Type
  3662 ;;                  1    wreg      void 
  3663 ;; Registers used:
  3664 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3665 ;; Tracked objects:
  3666 ;;		On entry : 0/0
  3667 ;;		On exit  : 0/0
  3668 ;;		Unchanged: 0/0
  3669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3670 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3673 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3674 ;;Total ram usage:        0 bytes
  3675 ;; Hardware stack levels used: 1
  3676 ;; Hardware stack levels required when called: 5
  3677 ;; This function calls:
  3678 ;;		_clearDisplay
  3679 ;;		_displayTime
  3680 ;; This function is called by:
  3681 ;;		_checkButtons
  3682 ;; This function uses a non-reentrant model
  3683 ;;
  3684                           
  3685                           	psect	text10
  3686   00EC68                     __ptext10:
  3687                           	callstack 0
  3688   00EC68                     _blinkDisplay:
  3689                           	callstack 24
  3690   00EC68                     
  3691                           ;main.c: 385:     blinkTimer++;
  3692   00EC68  0100               	movlb	0	; () banked
  3693   00EC6A  4BA4               	infsnz	_blinkTimer& (0+255),f,b
  3694   00EC6C  2BA5               	incf	(_blinkTimer+1)& (0+255),f,b
  3695   00EC6E                     
  3696                           ; BSR set to: 0
  3697                           ;main.c: 386:     if (blinkTimer >= 1000) {
  3698   00EC6E  0EE8               	movlw	232
  3699   00EC70  5DA4               	subwf	_blinkTimer& (0+255),w,b
  3700   00EC72  0E03               	movlw	3
  3701   00EC74  59A5               	subwfb	(_blinkTimer+1)& (0+255),w,b
  3702   00EC76  A0D8               	btfss	status,0,c
  3703   00EC78  EF40  F076         	goto	u1191
  3704   00EC7C  EF42  F076         	goto	u1190
  3705   00EC80                     u1191:
  3706   00EC80  EF60  F076         	goto	l148
  3707   00EC84                     u1190:
  3708   00EC84                     
  3709                           ; BSR set to: 0
  3710                           ;main.c: 387:         blinkTimer = 0;
  3711   00EC84  0E00               	movlw	0
  3712   00EC86  6FA5               	movwf	(_blinkTimer+1)& (0+255),b
  3713   00EC88  0E00               	movlw	0
  3714   00EC8A  6FA4               	movwf	_blinkTimer& (0+255),b
  3715                           
  3716                           ;main.c: 388:         if (displayBlinking) {
  3717   00EC8C  51A7               	movf	_displayBlinking& (0+255),w,b
  3718   00EC8E  B4D8               	btfsc	status,2,c
  3719   00EC90  EF4C  F076         	goto	u1201
  3720   00EC94  EF4E  F076         	goto	u1200
  3721   00EC98                     u1201:
  3722   00EC98  EF52  F076         	goto	l2226
  3723   00EC9C                     u1200:
  3724   00EC9C                     
  3725                           ; BSR set to: 0
  3726                           ;main.c: 389:             clearDisplay();
  3727   00EC9C  ECEF  F075         	call	_clearDisplay	;wreg free
  3728                           
  3729                           ;main.c: 390:         } else {
  3730   00ECA0  EF54  F076         	goto	l2228
  3731   00ECA4                     l2226:
  3732                           
  3733                           ; BSR set to: 0
  3734                           ;main.c: 391:             displayTime();
  3735   00ECA4  ECE6  F076         	call	_displayTime	;wreg free
  3736   00ECA8                     l2228:
  3737                           
  3738                           ;main.c: 393:         displayBlinking = !displayBlinking;
  3739   00ECA8  0100               	movlb	0	; () banked
  3740   00ECAA  51A7               	movf	_displayBlinking& (0+255),w,b
  3741   00ECAC  B4D8               	btfsc	status,2,c
  3742   00ECAE  EF5B  F076         	goto	u1211
  3743   00ECB2  EF5E  F076         	goto	u1210
  3744   00ECB6                     u1211:
  3745   00ECB6  0E01               	movlw	1
  3746   00ECB8  EF5F  F076         	goto	u1220
  3747   00ECBC                     u1210:
  3748   00ECBC  0E00               	movlw	0
  3749   00ECBE                     u1220:
  3750   00ECBE  6FA7               	movwf	_displayBlinking& (0+255),b
  3751   00ECC0                     l148:
  3752                           
  3753                           ; BSR set to: 0
  3754   00ECC0  0012               	return		;funcret
  3755   00ECC2                     __end_of_blinkDisplay:
  3756                           	callstack 0
  3757                           
  3758 ;; *************** function _displayTime *****************
  3759 ;; Defined at:
  3760 ;;		line 362 in file "main.c"
  3761 ;; Parameters:    Size  Location     Type
  3762 ;;		None
  3763 ;; Auto vars:     Size  Location     Type
  3764 ;;  i               2   92[COMRAM] int 
  3765 ;;  timeString      5   87[COMRAM] unsigned char [5]
  3766 ;;  displayStrin    5   82[COMRAM] unsigned char [5]
  3767 ;; Return value:  Size  Location     Type
  3768 ;;                  1    wreg      void 
  3769 ;; Registers used:
  3770 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3771 ;; Tracked objects:
  3772 ;;		On entry : 0/0
  3773 ;;		On exit  : 0/0
  3774 ;;		Unchanged: 0/0
  3775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3776 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3777 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3779 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3780 ;;Total ram usage:       12 bytes
  3781 ;; Hardware stack levels used: 1
  3782 ;; Hardware stack levels required when called: 4
  3783 ;; This function calls:
  3784 ;;		___awdiv
  3785 ;;		___awmod
  3786 ;;		_printString
  3787 ;; This function is called by:
  3788 ;;		_main
  3789 ;;		_blinkDisplay
  3790 ;;		_checkButtons
  3791 ;; This function uses a non-reentrant model
  3792 ;;
  3793                           
  3794                           	psect	text11
  3795   00EDCC                     __ptext11:
  3796                           	callstack 0
  3797   00EDCC                     _displayTime:
  3798                           	callstack 26
  3799   00EDCC                     
  3800                           ;main.c: 364:     char timeString[5];;main.c: 367:     timeString[0] = (hours / 10) + '0
      +                          ';
  3801   00EDCC  C05F  F001         	movff	_hours,___awdiv@dividend
  3802   00EDD0  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3803   00EDD2  0E00               	movlw	0
  3804   00EDD4  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3805   00EDD6  0E0A               	movlw	10
  3806   00EDD8  6E03               	movwf	___awdiv@divisor^0,c
  3807   00EDDA  ECF3  F077         	call	___awdiv	;wreg free
  3808   00EDDE  5001               	movf	?___awdiv^0,w,c
  3809   00EDE0  0F30               	addlw	48
  3810   00EDE2  6E58               	movwf	displayTime@timeString^0,c
  3811                           
  3812                           ;main.c: 368:     timeString[1] = (hours % 10) + '0';
  3813   00EDE4  C05F  F001         	movff	_hours,___awmod@dividend
  3814   00EDE8  6A02               	clrf	(___awmod@dividend+1)^0,c
  3815   00EDEA  0E00               	movlw	0
  3816   00EDEC  6E04               	movwf	(___awmod@divisor+1)^0,c
  3817   00EDEE  0E0A               	movlw	10
  3818   00EDF0  6E03               	movwf	___awmod@divisor^0,c
  3819   00EDF2  EC3B  F077         	call	___awmod	;wreg free
  3820   00EDF6  5001               	movf	?___awmod^0,w,c
  3821   00EDF8  0F30               	addlw	48
  3822   00EDFA  6E59               	movwf	(displayTime@timeString+1)^0,c
  3823                           
  3824                           ;main.c: 369:     timeString[2] = (minutes / 10) + '0';
  3825   00EDFC  C0AD  F001         	movff	_minutes,___awdiv@dividend
  3826   00EE00  6A02               	clrf	(___awdiv@dividend+1)^0,c
  3827   00EE02  0E00               	movlw	0
  3828   00EE04  6E04               	movwf	(___awdiv@divisor+1)^0,c
  3829   00EE06  0E0A               	movlw	10
  3830   00EE08  6E03               	movwf	___awdiv@divisor^0,c
  3831   00EE0A  ECF3  F077         	call	___awdiv	;wreg free
  3832   00EE0E  5001               	movf	?___awdiv^0,w,c
  3833   00EE10  0F30               	addlw	48
  3834   00EE12  6E5A               	movwf	(displayTime@timeString+2)^0,c
  3835                           
  3836                           ;main.c: 370:     timeString[3] = (minutes % 10) + '0';
  3837   00EE14  C0AD  F001         	movff	_minutes,___awmod@dividend
  3838   00EE18  6A02               	clrf	(___awmod@dividend+1)^0,c
  3839   00EE1A  0E00               	movlw	0
  3840   00EE1C  6E04               	movwf	(___awmod@divisor+1)^0,c
  3841   00EE1E  0E0A               	movlw	10
  3842   00EE20  6E03               	movwf	___awmod@divisor^0,c
  3843   00EE22  EC3B  F077         	call	___awmod	;wreg free
  3844   00EE26  5001               	movf	?___awmod^0,w,c
  3845   00EE28  0F30               	addlw	48
  3846   00EE2A  6E5B               	movwf	(displayTime@timeString+3)^0,c
  3847   00EE2C                     
  3848                           ;main.c: 371:     timeString[4] = '\0';
  3849   00EE2C  0E00               	movlw	0
  3850   00EE2E  6E5C               	movwf	(displayTime@timeString+4)^0,c
  3851   00EE30                     
  3852                           ;main.c: 374:     uint8_t displayString[5];;main.c: 375:     for (int i = 0; i < 5; i++)
      +                           {
  3853   00EE30  0E00               	movlw	0
  3854   00EE32  6E5E               	movwf	(displayTime@i+1)^0,c
  3855   00EE34  0E00               	movlw	0
  3856   00EE36  6E5D               	movwf	displayTime@i^0,c
  3857   00EE38                     l2160:
  3858                           
  3859                           ;main.c: 376:         displayString[i] = (uint8_t)timeString[i];
  3860   00EE38  505D               	movf	displayTime@i^0,w,c
  3861   00EE3A  0F58               	addlw	low displayTime@timeString
  3862   00EE3C  6ED9               	movwf	fsr2l,c
  3863   00EE3E  6ADA               	clrf	fsr2h,c
  3864   00EE40  505D               	movf	displayTime@i^0,w,c
  3865   00EE42  0F53               	addlw	low displayTime@displayString
  3866   00EE44  6EE1               	movwf	fsr1l,c
  3867   00EE46  6AE2               	clrf	fsr1h,c
  3868   00EE48  CFDF FFE7          	movff	indf2,indf1
  3869   00EE4C                     
  3870                           ;main.c: 377:     }
  3871   00EE4C  4A5D               	infsnz	displayTime@i^0,f,c
  3872   00EE4E  2A5E               	incf	(displayTime@i+1)^0,f,c
  3873   00EE50  BE5E               	btfsc	(displayTime@i+1)^0,7,c
  3874   00EE52  EF34  F077         	goto	u1171
  3875   00EE56  505E               	movf	(displayTime@i+1)^0,w,c
  3876   00EE58  E109               	bnz	u1170
  3877   00EE5A  0E05               	movlw	5
  3878   00EE5C  5C5D               	subwf	displayTime@i^0,w,c
  3879   00EE5E  A0D8               	btfss	status,0,c
  3880   00EE60  EF34  F077         	goto	u1171
  3881   00EE64  EF36  F077         	goto	u1170
  3882   00EE68                     u1171:
  3883   00EE68  EF1C  F077         	goto	l2160
  3884   00EE6C                     u1170:
  3885   00EE6C                     
  3886                           ;main.c: 379:     printString(displayString);
  3887   00EE6C  0E53               	movlw	low displayTime@displayString
  3888   00EE6E  6E41               	movwf	printString@str^0,c
  3889   00EE70  ECF9  F079         	call	_printString	;wreg free
  3890   00EE74  0012               	return		;funcret
  3891   00EE76                     __end_of_displayTime:
  3892                           	callstack 0
  3893                           
  3894 ;; *************** function _printString *****************
  3895 ;; Defined at:
  3896 ;;		line 161 in file "MAX7219.c"
  3897 ;; Parameters:    Size  Location     Type
  3898 ;;  str             1   64[COMRAM] PTR unsigned char 
  3899 ;;		 -> displayTime@displayString(5), 
  3900 ;; Auto vars:     Size  Location     Type
  3901 ;;  j               2   80[COMRAM] int 
  3902 ;;  data            1   73[COMRAM] unsigned char 
  3903 ;;  i               2   76[COMRAM] int 
  3904 ;;  indx            2   71[COMRAM] int 
  3905 ;;  k               2   78[COMRAM] int 
  3906 ;;  strindx         2   74[COMRAM] int 
  3907 ;; Return value:  Size  Location     Type
  3908 ;;                  1    wreg      void 
  3909 ;; Registers used:
  3910 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3911 ;; Tracked objects:
  3912 ;;		On entry : 0/0
  3913 ;;		On exit  : 0/0
  3914 ;;		Unchanged: 0/0
  3915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3916 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3917 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3918 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3919 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3920 ;;Total ram usage:       18 bytes
  3921 ;; Hardware stack levels used: 1
  3922 ;; Hardware stack levels required when called: 3
  3923 ;; This function calls:
  3924 ;;		_flushBuffer
  3925 ;; This function is called by:
  3926 ;;		_displayTime
  3927 ;; This function uses a non-reentrant model
  3928 ;;
  3929                           
  3930                           	psect	text12
  3931   00F3F2                     __ptext12:
  3932                           	callstack 0
  3933   00F3F2                     _printString:
  3934                           	callstack 26
  3935   00F3F2                     
  3936                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  3937   00F3F2  0E00               	movlw	0
  3938   00F3F4  6E4C               	movwf	(printString@strindx+1)^0,c
  3939   00F3F6  0E00               	movlw	0
  3940   00F3F8  6E4B               	movwf	printString@strindx^0,c
  3941                           
  3942                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  3943   00F3FA  0E00               	movlw	0
  3944   00F3FC  6E50               	movwf	(printString@k+1)^0,c
  3945   00F3FE  0E1F               	movlw	31
  3946   00F400  6E4F               	movwf	printString@k^0,c
  3947                           
  3948                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  3949   00F402  EF88  F07A         	goto	l2038
  3950   00F406                     l1998:
  3951                           
  3952                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  3953   00F406  0E00               	movlw	0
  3954   00F408  6E49               	movwf	(printString@indx+1)^0,c
  3955   00F40A  0E00               	movlw	0
  3956   00F40C  6E48               	movwf	printString@indx^0,c
  3957                           
  3958                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  3959   00F40E  0E00               	movlw	0
  3960   00F410  6E4E               	movwf	(printString@i+1)^0,c
  3961   00F412  0E00               	movlw	0
  3962   00F414  6E4D               	movwf	printString@i^0,c
  3963   00F416                     l2004:
  3964                           
  3965                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  3966   00F416  0E00               	movlw	0
  3967   00F418  6E4A               	movwf	printString@data^0,c
  3968                           
  3969                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  3970   00F41A  0E00               	movlw	0
  3971   00F41C  6E52               	movwf	(printString@j+1)^0,c
  3972   00F41E  0E07               	movlw	7
  3973   00F420  6E51               	movwf	printString@j^0,c
  3974   00F422                     l2010:
  3975                           
  3976                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  3977   00F422  5041               	movf	printString@str^0,w,c
  3978   00F424  244B               	addwf	printString@strindx^0,w,c
  3979   00F426  6ED9               	movwf	fsr2l,c
  3980   00F428  6ADA               	clrf	fsr2h,c
  3981   00F42A  50DF               	movf	indf2,w,c
  3982   00F42C  6E42               	movwf	??_printString^0,c
  3983   00F42E  5042               	movf	??_printString^0,w,c
  3984   00F430  0D08               	mullw	8
  3985   00F432  0E2F               	movlw	low _MAX7219_Dot_Matrix_font
  3986   00F434  24F3               	addwf	243,w,c
  3987   00F436  6E43               	movwf	(??_printString+1)^0,c
  3988   00F438  0EF5               	movlw	high _MAX7219_Dot_Matrix_font
  3989   00F43A  20F4               	addwfc	prodh,w,c
  3990   00F43C  6E44               	movwf	(??_printString+2)^0,c
  3991   00F43E  5048               	movf	printString@indx^0,w,c
  3992   00F440  2643               	addwf	(??_printString+1)^0,f,c
  3993   00F442  5049               	movf	(printString@indx+1)^0,w,c
  3994   00F444  2244               	addwfc	(??_printString+2)^0,f,c
  3995   00F446  C043  FFF6         	movff	??_printString+1,tblptrl
  3996   00F44A  C044  FFF7         	movff	??_printString+2,tblptrh
  3997   00F44E                     	if	0	;tblptru may be non-zero
  3998   00F44E                     	endif
  3999   00F44E                     	if	0	;tblptru may be non-zero
  4000   00F44E                     	endif
  4001   00F44E  0008               	tblrd		*
  4002   00F450  CFF5 F045          	movff	tablat,??_printString+3
  4003   00F454  C051  F046         	movff	printString@j,??_printString+4
  4004   00F458  0E01               	movlw	1
  4005   00F45A  6E47               	movwf	(??_printString+5)^0,c
  4006   00F45C  2A46               	incf	(??_printString+4)^0,f,c
  4007   00F45E  EF33  F07A         	goto	u974
  4008   00F462                     u975:
  4009   00F462  90D8               	bcf	status,0,c
  4010   00F464  3647               	rlcf	(??_printString+5)^0,f,c
  4011   00F466                     u974:
  4012   00F466  2E46               	decfsz	(??_printString+4)^0,f,c
  4013   00F468  EF31  F07A         	goto	u975
  4014   00F46C  5047               	movf	(??_printString+5)^0,w,c
  4015   00F46E  1445               	andwf	(??_printString+3)^0,w,c
  4016   00F470  0900               	iorlw	0
  4017   00F472  B4D8               	btfsc	status,2,c
  4018   00F474  EF3E  F07A         	goto	u981
  4019   00F478  EF40  F07A         	goto	u980
  4020   00F47C                     u981:
  4021   00F47C  EF4F  F07A         	goto	l2014
  4022   00F480                     u980:
  4023   00F480                     
  4024                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  4025   00F480  5051               	movf	printString@j^0,w,c
  4026   00F482  0807               	sublw	7
  4027   00F484  6E42               	movwf	??_printString^0,c
  4028   00F486  0E01               	movlw	1
  4029   00F488  6E43               	movwf	(??_printString+1)^0,c
  4030   00F48A  2A42               	incf	??_printString^0,f,c
  4031   00F48C  EF4A  F07A         	goto	u994
  4032   00F490                     u995:
  4033   00F490  90D8               	bcf	status,0,c
  4034   00F492  3643               	rlcf	(??_printString+1)^0,f,c
  4035   00F494                     u994:
  4036   00F494  2E42               	decfsz	??_printString^0,f,c
  4037   00F496  EF48  F07A         	goto	u995
  4038   00F49A  5043               	movf	(??_printString+1)^0,w,c
  4039   00F49C  124A               	iorwf	printString@data^0,f,c
  4040   00F49E                     l2014:
  4041                           
  4042                           ;MAX7219.c: 179:             }
  4043   00F49E  0651               	decf	printString@j^0,f,c
  4044   00F4A0  A0D8               	btfss	status,0,c
  4045   00F4A2  0652               	decf	(printString@j+1)^0,f,c
  4046   00F4A4  BE52               	btfsc	(printString@j+1)^0,7,c
  4047   00F4A6  EF59  F07A         	goto	u1000
  4048   00F4AA  EF57  F07A         	goto	u1001
  4049   00F4AE                     u1001:
  4050   00F4AE  EF11  F07A         	goto	l2010
  4051   00F4B2                     u1000:
  4052   00F4B2                     
  4053                           ;MAX7219.c: 180:             if (k < 0) break;
  4054   00F4B2  BE50               	btfsc	(printString@k+1)^0,7,c
  4055   00F4B4  EF60  F07A         	goto	u1010
  4056   00F4B8  EF5E  F07A         	goto	u1011
  4057   00F4BC                     u1011:
  4058   00F4BC  EF62  F07A         	goto	l2022
  4059   00F4C0                     u1010:
  4060   00F4C0  EF7D  F07A         	goto	l2032
  4061   00F4C4                     l2022:
  4062                           
  4063                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  4064   00F4C4  504F               	movf	printString@k^0,w,c
  4065   00F4C6  0F80               	addlw	low _bufferCol
  4066   00F4C8  6ED9               	movwf	fsr2l,c
  4067   00F4CA  6ADA               	clrf	fsr2h,c
  4068   00F4CC  C04A  FFDF         	movff	printString@data,indf2
  4069   00F4D0  064F               	decf	printString@k^0,f,c
  4070   00F4D2  A0D8               	btfss	status,0,c
  4071   00F4D4  0650               	decf	(printString@k+1)^0,f,c
  4072   00F4D6                     
  4073                           ;MAX7219.c: 182:             indx++;
  4074   00F4D6  4A48               	infsnz	printString@indx^0,f,c
  4075   00F4D8  2A49               	incf	(printString@indx+1)^0,f,c
  4076   00F4DA                     
  4077                           ;MAX7219.c: 183:         }
  4078   00F4DA  4A4D               	infsnz	printString@i^0,f,c
  4079   00F4DC  2A4E               	incf	(printString@i+1)^0,f,c
  4080   00F4DE  BE4E               	btfsc	(printString@i+1)^0,7,c
  4081   00F4E0  EF7B  F07A         	goto	u1021
  4082   00F4E4  504E               	movf	(printString@i+1)^0,w,c
  4083   00F4E6  E109               	bnz	u1020
  4084   00F4E8  0E08               	movlw	8
  4085   00F4EA  5C4D               	subwf	printString@i^0,w,c
  4086   00F4EC  A0D8               	btfss	status,0,c
  4087   00F4EE  EF7B  F07A         	goto	u1021
  4088   00F4F2  EF7D  F07A         	goto	u1020
  4089   00F4F6                     u1021:
  4090   00F4F6  EF0B  F07A         	goto	l2004
  4091   00F4FA                     u1020:
  4092   00F4FA                     l2032:
  4093                           
  4094                           ;MAX7219.c: 184:         strindx++;
  4095   00F4FA  4A4B               	infsnz	printString@strindx^0,f,c
  4096   00F4FC  2A4C               	incf	(printString@strindx+1)^0,f,c
  4097   00F4FE                     
  4098                           ;MAX7219.c: 185:         if (k < 0) break;
  4099   00F4FE  BE50               	btfsc	(printString@k+1)^0,7,c
  4100   00F500  EF86  F07A         	goto	u1030
  4101   00F504  EF84  F07A         	goto	u1031
  4102   00F508                     u1031:
  4103   00F508  EF88  F07A         	goto	l2038
  4104   00F50C                     u1030:
  4105   00F50C  EF94  F07A         	goto	l2040
  4106   00F510                     l2038:
  4107                           
  4108                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  4109   00F510  5041               	movf	printString@str^0,w,c
  4110   00F512  244B               	addwf	printString@strindx^0,w,c
  4111   00F514  6ED9               	movwf	fsr2l,c
  4112   00F516  6ADA               	clrf	fsr2h,c
  4113   00F518  50DF               	movf	indf2,w,c
  4114   00F51A  A4D8               	btfss	status,2,c
  4115   00F51C  EF92  F07A         	goto	u1041
  4116   00F520  EF94  F07A         	goto	u1040
  4117   00F524                     u1041:
  4118   00F524  EF03  F07A         	goto	l1998
  4119   00F528                     u1040:
  4120   00F528                     l2040:
  4121                           
  4122                           ;MAX7219.c: 188:     flushBuffer();
  4123   00F528  ECCA  F078         	call	_flushBuffer	;wreg free
  4124   00F52C  0012               	return		;funcret
  4125   00F52E                     __end_of_printString:
  4126                           	callstack 0
  4127                           
  4128 ;; *************** function ___awmod *****************
  4129 ;; Defined at:
  4130 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  4131 ;; Parameters:    Size  Location     Type
  4132 ;;  dividend        2    0[COMRAM] int 
  4133 ;;  divisor         2    2[COMRAM] int 
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;  sign            1    5[COMRAM] unsigned char 
  4136 ;;  counter         1    4[COMRAM] unsigned char 
  4137 ;; Return value:  Size  Location     Type
  4138 ;;                  2    0[COMRAM] int 
  4139 ;; Registers used:
  4140 ;;		wreg, status,2, status,0
  4141 ;; Tracked objects:
  4142 ;;		On entry : 0/0
  4143 ;;		On exit  : 0/0
  4144 ;;		Unchanged: 0/0
  4145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4147 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4149 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4150 ;;Total ram usage:        6 bytes
  4151 ;; Hardware stack levels used: 1
  4152 ;; This function calls:
  4153 ;;		Nothing
  4154 ;; This function is called by:
  4155 ;;		_displayTime
  4156 ;;		_checkButtons
  4157 ;; This function uses a non-reentrant model
  4158 ;;
  4159                           
  4160                           	psect	text13
  4161   00EE76                     __ptext13:
  4162                           	callstack 0
  4163   00EE76                     ___awmod:
  4164                           	callstack 29
  4165   00EE76  0E00               	movlw	0
  4166   00EE78  6E06               	movwf	___awmod@sign^0,c
  4167   00EE7A  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  4168   00EE7C  EF44  F077         	goto	u1100
  4169   00EE80  EF42  F077         	goto	u1101
  4170   00EE84                     u1101:
  4171   00EE84  EF4A  F077         	goto	l2108
  4172   00EE88                     u1100:
  4173   00EE88  6C01               	negf	___awmod@dividend^0,c
  4174   00EE8A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4175   00EE8C  B0D8               	btfsc	status,0,c
  4176   00EE8E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4177   00EE90  0E01               	movlw	1
  4178   00EE92  6E06               	movwf	___awmod@sign^0,c
  4179   00EE94                     l2108:
  4180   00EE94  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  4181   00EE96  EF51  F077         	goto	u1110
  4182   00EE9A  EF4F  F077         	goto	u1111
  4183   00EE9E                     u1111:
  4184   00EE9E  EF55  F077         	goto	l2112
  4185   00EEA2                     u1110:
  4186   00EEA2  6C03               	negf	___awmod@divisor^0,c
  4187   00EEA4  1E04               	comf	(___awmod@divisor+1)^0,f,c
  4188   00EEA6  B0D8               	btfsc	status,0,c
  4189   00EEA8  2A04               	incf	(___awmod@divisor+1)^0,f,c
  4190   00EEAA                     l2112:
  4191   00EEAA  5003               	movf	___awmod@divisor^0,w,c
  4192   00EEAC  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  4193   00EEAE  B4D8               	btfsc	status,2,c
  4194   00EEB0  EF5C  F077         	goto	u1121
  4195   00EEB4  EF5E  F077         	goto	u1120
  4196   00EEB8                     u1121:
  4197   00EEB8  EF82  F077         	goto	l2128
  4198   00EEBC                     u1120:
  4199   00EEBC  0E01               	movlw	1
  4200   00EEBE  6E05               	movwf	___awmod@counter^0,c
  4201   00EEC0  EF66  F077         	goto	l2118
  4202   00EEC4                     l2116:
  4203   00EEC4  90D8               	bcf	status,0,c
  4204   00EEC6  3603               	rlcf	___awmod@divisor^0,f,c
  4205   00EEC8  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  4206   00EECA  2A05               	incf	___awmod@counter^0,f,c
  4207   00EECC                     l2118:
  4208   00EECC  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  4209   00EECE  EF6B  F077         	goto	u1131
  4210   00EED2  EF6D  F077         	goto	u1130
  4211   00EED6                     u1131:
  4212   00EED6  EF62  F077         	goto	l2116
  4213   00EEDA                     u1130:
  4214   00EEDA                     l2120:
  4215   00EEDA  5003               	movf	___awmod@divisor^0,w,c
  4216   00EEDC  5C01               	subwf	___awmod@dividend^0,w,c
  4217   00EEDE  5004               	movf	(___awmod@divisor+1)^0,w,c
  4218   00EEE0  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  4219   00EEE2  A0D8               	btfss	status,0,c
  4220   00EEE4  EF76  F077         	goto	u1141
  4221   00EEE8  EF78  F077         	goto	u1140
  4222   00EEEC                     u1141:
  4223   00EEEC  EF7C  F077         	goto	l2124
  4224   00EEF0                     u1140:
  4225   00EEF0  5003               	movf	___awmod@divisor^0,w,c
  4226   00EEF2  5E01               	subwf	___awmod@dividend^0,f,c
  4227   00EEF4  5004               	movf	(___awmod@divisor+1)^0,w,c
  4228   00EEF6  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  4229   00EEF8                     l2124:
  4230   00EEF8  90D8               	bcf	status,0,c
  4231   00EEFA  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  4232   00EEFC  3203               	rrcf	___awmod@divisor^0,f,c
  4233   00EEFE  2E05               	decfsz	___awmod@counter^0,f,c
  4234   00EF00  EF6D  F077         	goto	l2120
  4235   00EF04                     l2128:
  4236   00EF04  5006               	movf	___awmod@sign^0,w,c
  4237   00EF06  B4D8               	btfsc	status,2,c
  4238   00EF08  EF88  F077         	goto	u1151
  4239   00EF0C  EF8A  F077         	goto	u1150
  4240   00EF10                     u1151:
  4241   00EF10  EF8E  F077         	goto	l2132
  4242   00EF14                     u1150:
  4243   00EF14  6C01               	negf	___awmod@dividend^0,c
  4244   00EF16  1E02               	comf	(___awmod@dividend+1)^0,f,c
  4245   00EF18  B0D8               	btfsc	status,0,c
  4246   00EF1A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  4247   00EF1C                     l2132:
  4248   00EF1C  C001  F001         	movff	___awmod@dividend,?___awmod
  4249   00EF20  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  4250   00EF24  0012               	return		;funcret
  4251   00EF26                     __end_of___awmod:
  4252                           	callstack 0
  4253                           
  4254 ;; *************** function _clearDisplay *****************
  4255 ;; Defined at:
  4256 ;;		line 105 in file "MAX7219.c"
  4257 ;; Parameters:    Size  Location     Type
  4258 ;;		None
  4259 ;; Auto vars:     Size  Location     Type
  4260 ;;  i               2   64[COMRAM] int 
  4261 ;; Return value:  Size  Location     Type
  4262 ;;                  1    wreg      void 
  4263 ;; Registers used:
  4264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4265 ;; Tracked objects:
  4266 ;;		On entry : 0/0
  4267 ;;		On exit  : 0/0
  4268 ;;		Unchanged: 0/0
  4269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4270 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4271 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4273 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4274 ;;Total ram usage:        2 bytes
  4275 ;; Hardware stack levels used: 1
  4276 ;; Hardware stack levels required when called: 3
  4277 ;; This function calls:
  4278 ;;		_flushBuffer
  4279 ;; This function is called by:
  4280 ;;		_main
  4281 ;;		_blinkDisplay
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           	psect	text14
  4286   00EBDE                     __ptext14:
  4287                           	callstack 0
  4288   00EBDE                     _clearDisplay:
  4289                           	callstack 27
  4290   00EBDE                     
  4291                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  4292   00EBDE  0E00               	movlw	0
  4293   00EBE0  6E42               	movwf	(clearDisplay@i+1)^0,c
  4294   00EBE2  0E00               	movlw	0
  4295   00EBE4  6E41               	movwf	clearDisplay@i^0,c
  4296   00EBE6                     l2142:
  4297                           
  4298                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  4299   00EBE6  5041               	movf	clearDisplay@i^0,w,c
  4300   00EBE8  0F80               	addlw	low _bufferCol
  4301   00EBEA  6ED9               	movwf	fsr2l,c
  4302   00EBEC  6ADA               	clrf	fsr2h,c
  4303   00EBEE  6ADF               	clrf	indf2,c
  4304   00EBF0                     
  4305                           ;MAX7219.c: 110:  }
  4306   00EBF0  4A41               	infsnz	clearDisplay@i^0,f,c
  4307   00EBF2  2A42               	incf	(clearDisplay@i+1)^0,f,c
  4308   00EBF4  BE42               	btfsc	(clearDisplay@i+1)^0,7,c
  4309   00EBF6  EF06  F076         	goto	u1161
  4310   00EBFA  5042               	movf	(clearDisplay@i+1)^0,w,c
  4311   00EBFC  E109               	bnz	u1160
  4312   00EBFE  0E1F               	movlw	31
  4313   00EC00  5C41               	subwf	clearDisplay@i^0,w,c
  4314   00EC02  A0D8               	btfss	status,0,c
  4315   00EC04  EF06  F076         	goto	u1161
  4316   00EC08  EF08  F076         	goto	u1160
  4317   00EC0C                     u1161:
  4318   00EC0C  EFF3  F075         	goto	l2142
  4319   00EC10                     u1160:
  4320   00EC10                     
  4321                           ;MAX7219.c: 111:  flushBuffer();
  4322   00EC10  ECCA  F078         	call	_flushBuffer	;wreg free
  4323   00EC14  0012               	return		;funcret
  4324   00EC16                     __end_of_clearDisplay:
  4325                           	callstack 0
  4326                           
  4327 ;; *************** function _flushBuffer *****************
  4328 ;; Defined at:
  4329 ;;		line 52 in file "MAX7219.c"
  4330 ;; Parameters:    Size  Location     Type
  4331 ;;		None
  4332 ;; Auto vars:     Size  Location     Type
  4333 ;;  j               2   58[COMRAM] int 
  4334 ;;  dev             2   56[COMRAM] int 
  4335 ;;  row             2   60[COMRAM] int 
  4336 ;;  i               2   62[COMRAM] int 
  4337 ;;  bufferRow      32   24[COMRAM] unsigned char [32]
  4338 ;; Return value:  Size  Location     Type
  4339 ;;                  1    wreg      void 
  4340 ;; Registers used:
  4341 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4342 ;; Tracked objects:
  4343 ;;		On entry : 0/0
  4344 ;;		On exit  : 0/0
  4345 ;;		Unchanged: 0/0
  4346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4348 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4349 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4350 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4351 ;;Total ram usage:       43 bytes
  4352 ;; Hardware stack levels used: 1
  4353 ;; Hardware stack levels required when called: 2
  4354 ;; This function calls:
  4355 ;;		___awdiv
  4356 ;;		_max_write
  4357 ;; This function is called by:
  4358 ;;		_clearDisplay
  4359 ;;		_printString
  4360 ;;		_shiftLeft
  4361 ;;		_shiftchar
  4362 ;; This function uses a non-reentrant model
  4363 ;;
  4364                           
  4365                           	psect	text15
  4366   00F194                     __ptext15:
  4367                           	callstack 0
  4368   00F194                     _flushBuffer:
  4369                           	callstack 26
  4370   00F194                     
  4371                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  4372   00F194  EE20  F019         	lfsr	2,flushBuffer@bufferRow
  4373   00F198  0E1F               	movlw	31
  4374   00F19A                     u891:
  4375   00F19A  6ADE               	clrf	postinc2,c
  4376   00F19C  06E8               	decf	wreg,f,c
  4377   00F19E  E2FD               	bc	u891
  4378   00F1A0                     
  4379                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  4380   00F1A0  0E00               	movlw	0
  4381   00F1A2  6E40               	movwf	(flushBuffer@i+1)^0,c
  4382   00F1A4  0E00               	movlw	0
  4383   00F1A6  6E3F               	movwf	flushBuffer@i^0,c
  4384   00F1A8                     l1938:
  4385                           
  4386                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  4387   00F1A8  C03F  F001         	movff	flushBuffer@i,___awdiv@dividend
  4388   00F1AC  C040  F002         	movff	flushBuffer@i+1,___awdiv@dividend+1
  4389   00F1B0  0E00               	movlw	0
  4390   00F1B2  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4391   00F1B4  0E08               	movlw	8
  4392   00F1B6  6E03               	movwf	___awdiv@divisor^0,c
  4393   00F1B8  ECF3  F077         	call	___awdiv	;wreg free
  4394   00F1BC  C001  F039         	movff	?___awdiv,flushBuffer@dev
  4395   00F1C0  C002  F03A         	movff	?___awdiv+1,flushBuffer@dev+1
  4396   00F1C4                     
  4397                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  4398   00F1C4  0E00               	movlw	0
  4399   00F1C6  6E3C               	movwf	(flushBuffer@j+1)^0,c
  4400   00F1C8  0E00               	movlw	0
  4401   00F1CA  6E3B               	movwf	flushBuffer@j^0,c
  4402   00F1CC                     l1946:
  4403                           
  4404                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  4405   00F1CC  503F               	movf	flushBuffer@i^0,w,c
  4406   00F1CE  0F80               	addlw	low _bufferCol
  4407   00F1D0  6ED9               	movwf	fsr2l,c
  4408   00F1D2  6ADA               	clrf	fsr2h,c
  4409   00F1D4  50DF               	movf	indf2,w,c
  4410   00F1D6  6E16               	movwf	??_flushBuffer^0,c
  4411   00F1D8  C03B  F017         	movff	flushBuffer@j,??_flushBuffer+1
  4412   00F1DC  0E01               	movlw	1
  4413   00F1DE  6E18               	movwf	(??_flushBuffer+2)^0,c
  4414   00F1E0  2A17               	incf	(??_flushBuffer+1)^0,f,c
  4415   00F1E2  EFF5  F078         	goto	u904
  4416   00F1E6                     u905:
  4417   00F1E6  90D8               	bcf	status,0,c
  4418   00F1E8  3618               	rlcf	(??_flushBuffer+2)^0,f,c
  4419   00F1EA                     u904:
  4420   00F1EA  2E17               	decfsz	(??_flushBuffer+1)^0,f,c
  4421   00F1EC  EFF3  F078         	goto	u905
  4422   00F1F0  5018               	movf	(??_flushBuffer+2)^0,w,c
  4423   00F1F2  1416               	andwf	??_flushBuffer^0,w,c
  4424   00F1F4  0900               	iorlw	0
  4425   00F1F6  B4D8               	btfsc	status,2,c
  4426   00F1F8  EF00  F079         	goto	u911
  4427   00F1FC  EF02  F079         	goto	u910
  4428   00F200                     u911:
  4429   00F200  EF1C  F079         	goto	l1950
  4430   00F204                     u910:
  4431   00F204                     
  4432                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  4433   00F204  5039               	movf	flushBuffer@dev^0,w,c
  4434   00F206  0D08               	mullw	8
  4435   00F208  503F               	movf	flushBuffer@i^0,w,c
  4436   00F20A  5CF3               	subwf	243,w,c
  4437   00F20C  6E16               	movwf	??_flushBuffer^0,c
  4438   00F20E  0E07               	movlw	7
  4439   00F210  2616               	addwf	??_flushBuffer^0,f,c
  4440   00F212  0E01               	movlw	1
  4441   00F214  6E17               	movwf	(??_flushBuffer+1)^0,c
  4442   00F216  2A16               	incf	??_flushBuffer^0,f,c
  4443   00F218  EF10  F079         	goto	u924
  4444   00F21C                     u925:
  4445   00F21C  90D8               	bcf	status,0,c
  4446   00F21E  3617               	rlcf	(??_flushBuffer+1)^0,f,c
  4447   00F220                     u924:
  4448   00F220  2E16               	decfsz	??_flushBuffer^0,f,c
  4449   00F222  EF0E  F079         	goto	u925
  4450   00F226  5039               	movf	flushBuffer@dev^0,w,c
  4451   00F228  0D08               	mullw	8
  4452   00F22A  50F3               	movf	243,w,c
  4453   00F22C  0F19               	addlw	low flushBuffer@bufferRow
  4454   00F22E  243B               	addwf	flushBuffer@j^0,w,c
  4455   00F230  6ED9               	movwf	fsr2l,c
  4456   00F232  6ADA               	clrf	fsr2h,c
  4457   00F234  5017               	movf	(??_flushBuffer+1)^0,w,c
  4458   00F236  12DF               	iorwf	indf2,f,c
  4459   00F238                     l1950:
  4460                           
  4461                           ;MAX7219.c: 66:   }
  4462   00F238  4A3B               	infsnz	flushBuffer@j^0,f,c
  4463   00F23A  2A3C               	incf	(flushBuffer@j+1)^0,f,c
  4464   00F23C  BE3C               	btfsc	(flushBuffer@j+1)^0,7,c
  4465   00F23E  EF2A  F079         	goto	u931
  4466   00F242  503C               	movf	(flushBuffer@j+1)^0,w,c
  4467   00F244  E109               	bnz	u930
  4468   00F246  0E08               	movlw	8
  4469   00F248  5C3B               	subwf	flushBuffer@j^0,w,c
  4470   00F24A  A0D8               	btfss	status,0,c
  4471   00F24C  EF2A  F079         	goto	u931
  4472   00F250  EF2C  F079         	goto	u930
  4473   00F254                     u931:
  4474   00F254  EFE6  F078         	goto	l1946
  4475   00F258                     u930:
  4476   00F258                     
  4477                           ;MAX7219.c: 67:  }
  4478   00F258  4A3F               	infsnz	flushBuffer@i^0,f,c
  4479   00F25A  2A40               	incf	(flushBuffer@i+1)^0,f,c
  4480   00F25C  BE40               	btfsc	(flushBuffer@i+1)^0,7,c
  4481   00F25E  EF3A  F079         	goto	u941
  4482   00F262  5040               	movf	(flushBuffer@i+1)^0,w,c
  4483   00F264  E109               	bnz	u940
  4484   00F266  0E20               	movlw	32
  4485   00F268  5C3F               	subwf	flushBuffer@i^0,w,c
  4486   00F26A  A0D8               	btfss	status,0,c
  4487   00F26C  EF3A  F079         	goto	u941
  4488   00F270  EF3C  F079         	goto	u940
  4489   00F274                     u941:
  4490   00F274  EFD4  F078         	goto	l1938
  4491   00F278                     u940:
  4492   00F278                     
  4493                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  4494   00F278  0E00               	movlw	0
  4495   00F27A  6E3E               	movwf	(flushBuffer@row+1)^0,c
  4496   00F27C  0E01               	movlw	1
  4497   00F27E  6E3D               	movwf	flushBuffer@row^0,c
  4498   00F280                     l1964:
  4499                           
  4500                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  4501   00F280  C03D  F009         	movff	flushBuffer@row,max_write@row
  4502   00F284  C03E  F00A         	movff	flushBuffer@row+1,max_write@row+1
  4503   00F288  C03D  F016         	movff	flushBuffer@row,??_flushBuffer
  4504   00F28C  0EFF               	movlw	255
  4505   00F28E  2616               	addwf	??_flushBuffer^0,f,c
  4506   00F290  5016               	movf	??_flushBuffer^0,w,c
  4507   00F292  0F19               	addlw	low flushBuffer@bufferRow
  4508   00F294  6ED9               	movwf	fsr2l,c
  4509   00F296  6ADA               	clrf	fsr2h,c
  4510   00F298  50DF               	movf	indf2,w,c
  4511   00F29A  6E0B               	movwf	max_write@data^0,c
  4512   00F29C  EC93  F077         	call	_max_write	;wreg free
  4513   00F2A0                     
  4514                           ;MAX7219.c: 73:  }
  4515   00F2A0  4A3D               	infsnz	flushBuffer@row^0,f,c
  4516   00F2A2  2A3E               	incf	(flushBuffer@row+1)^0,f,c
  4517   00F2A4  BE3E               	btfsc	(flushBuffer@row+1)^0,7,c
  4518   00F2A6  EF5E  F079         	goto	u951
  4519   00F2AA  503E               	movf	(flushBuffer@row+1)^0,w,c
  4520   00F2AC  E109               	bnz	u950
  4521   00F2AE  0E21               	movlw	33
  4522   00F2B0  5C3D               	subwf	flushBuffer@row^0,w,c
  4523   00F2B2  A0D8               	btfss	status,0,c
  4524   00F2B4  EF5E  F079         	goto	u951
  4525   00F2B8  EF60  F079         	goto	u950
  4526   00F2BC                     u951:
  4527   00F2BC  EF40  F079         	goto	l1964
  4528   00F2C0                     u950:
  4529   00F2C0  0012               	return		;funcret
  4530   00F2C2                     __end_of_flushBuffer:
  4531                           	callstack 0
  4532                           
  4533 ;; *************** function _max_write *****************
  4534 ;; Defined at:
  4535 ;;		line 10 in file "MAX7219.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;  row             2    8[COMRAM] int 
  4538 ;;  data            1   10[COMRAM] unsigned char 
  4539 ;; Auto vars:     Size  Location     Type
  4540 ;;  dev             2   17[COMRAM] int 
  4541 ;;  writeData       2   19[COMRAM] unsigned short 
  4542 ;;  devTarget       2   15[COMRAM] int 
  4543 ;;  offset          2   13[COMRAM] int 
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, status,2, status,0, cstack
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4553 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4554 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4555 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4556 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4557 ;;Total ram usage:       13 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 1
  4560 ;; This function calls:
  4561 ;;		_SPI_Exchange8bit
  4562 ;;		___awdiv
  4563 ;; This function is called by:
  4564 ;;		_flushBuffer
  4565 ;; This function uses a non-reentrant model
  4566 ;;
  4567                           
  4568                           	psect	text16
  4569   00EF26                     __ptext16:
  4570                           	callstack 0
  4571   00EF26                     _max_write:
  4572                           	callstack 26
  4573   00EF26                     
  4574                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  4575   00EF26  0EFF               	movlw	255
  4576   00EF28  2409               	addwf	max_write@row^0,w,c
  4577   00EF2A  6E01               	movwf	___awdiv@dividend^0,c
  4578   00EF2C  0EFF               	movlw	255
  4579   00EF2E  200A               	addwfc	(max_write@row+1)^0,w,c
  4580   00EF30  6E02               	movwf	(___awdiv@dividend+1)^0,c
  4581   00EF32  0E00               	movlw	0
  4582   00EF34  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4583   00EF36  0E08               	movlw	8
  4584   00EF38  6E03               	movwf	___awdiv@divisor^0,c
  4585   00EF3A  ECF3  F077         	call	___awdiv	;wreg free
  4586   00EF3E  C001  F010         	movff	?___awdiv,max_write@devTarget
  4587   00EF42  C002  F011         	movff	?___awdiv+1,max_write@devTarget+1
  4588   00EF46                     
  4589                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  4590   00EF46  C010  F00C         	movff	max_write@devTarget,??_max_write
  4591   00EF4A  C011  F00D         	movff	max_write@devTarget+1,??_max_write+1
  4592   00EF4E  90D8               	bcf	status,0,c
  4593   00EF50  360C               	rlcf	??_max_write^0,f,c
  4594   00EF52  360D               	rlcf	(??_max_write+1)^0,f,c
  4595   00EF54  90D8               	bcf	status,0,c
  4596   00EF56  360C               	rlcf	??_max_write^0,f,c
  4597   00EF58  360D               	rlcf	(??_max_write+1)^0,f,c
  4598   00EF5A  90D8               	bcf	status,0,c
  4599   00EF5C  360C               	rlcf	??_max_write^0,f,c
  4600   00EF5E  360D               	rlcf	(??_max_write+1)^0,f,c
  4601   00EF60  C00C  F00E         	movff	??_max_write,max_write@offset
  4602   00EF64  C00D  F00F         	movff	??_max_write+1,max_write@offset+1
  4603   00EF68  948B               	bcf	139,2,c	;volatile
  4604   00EF6A                     
  4605                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  4606   00EF6A  0E00               	movlw	0
  4607   00EF6C  6E13               	movwf	(max_write@dev+1)^0,c
  4608   00EF6E  0E00               	movlw	0
  4609   00EF70  6E12               	movwf	max_write@dev^0,c
  4610   00EF72                     l1912:
  4611                           
  4612                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  4613   00EF72  5010               	movf	max_write@devTarget^0,w,c
  4614   00EF74  1812               	xorwf	max_write@dev^0,w,c
  4615   00EF76  E107               	bnz	u871
  4616   00EF78  5011               	movf	(max_write@devTarget+1)^0,w,c
  4617   00EF7A  1813               	xorwf	(max_write@dev+1)^0,w,c
  4618   00EF7C  A4D8               	btfss	status,2,c
  4619   00EF7E  EFC3  F077         	goto	u871
  4620   00EF82  EFC5  F077         	goto	u870
  4621   00EF86                     u871:
  4622   00EF86  EFDB  F077         	goto	l1920
  4623   00EF8A                     u870:
  4624   00EF8A                     
  4625                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  4626   00EF8A  500E               	movf	max_write@offset^0,w,c
  4627   00EF8C  5C09               	subwf	max_write@row^0,w,c
  4628   00EF8E  6E0C               	movwf	??_max_write^0,c
  4629   00EF90  500F               	movf	(max_write@offset+1)^0,w,c
  4630   00EF92  580A               	subwfb	(max_write@row+1)^0,w,c
  4631   00EF94  6E0D               	movwf	(??_max_write+1)^0,c
  4632   00EF96  C00C  F00D         	movff	??_max_write,??_max_write+1
  4633   00EF9A  6A0C               	clrf	??_max_write^0,c
  4634   00EF9C  500B               	movf	max_write@data^0,w,c
  4635   00EF9E  100C               	iorwf	??_max_write^0,w,c
  4636   00EFA0  6E14               	movwf	max_write@writeData^0,c
  4637   00EFA2  500D               	movf	(??_max_write+1)^0,w,c
  4638   00EFA4  6E15               	movwf	(max_write@writeData+1)^0,c
  4639   00EFA6                     
  4640                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  4641   00EFA6  5015               	movf	(max_write@writeData+1)^0,w,c
  4642   00EFA8  EC4F  F075         	call	_SPI_Exchange8bit
  4643   00EFAC                     
  4644                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  4645   00EFAC  5014               	movf	max_write@writeData^0,w,c
  4646   00EFAE  EC4F  F075         	call	_SPI_Exchange8bit
  4647                           
  4648                           ;MAX7219.c: 31:   }
  4649   00EFB2  EFE1  F077         	goto	l1926
  4650   00EFB6                     l1920:
  4651   00EFB6                     
  4652                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  4653   00EFB6  0E00               	movlw	0
  4654   00EFB8  EC4F  F075         	call	_SPI_Exchange8bit
  4655   00EFBC                     
  4656                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  4657   00EFBC  0E00               	movlw	0
  4658   00EFBE  EC4F  F075         	call	_SPI_Exchange8bit
  4659   00EFC2                     l1926:
  4660                           
  4661                           ;MAX7219.c: 46:  }
  4662   00EFC2  4A12               	infsnz	max_write@dev^0,f,c
  4663   00EFC4  2A13               	incf	(max_write@dev+1)^0,f,c
  4664   00EFC6  BE13               	btfsc	(max_write@dev+1)^0,7,c
  4665   00EFC8  EFEF  F077         	goto	u881
  4666   00EFCC  5013               	movf	(max_write@dev+1)^0,w,c
  4667   00EFCE  E109               	bnz	u880
  4668   00EFD0  0E04               	movlw	4
  4669   00EFD2  5C12               	subwf	max_write@dev^0,w,c
  4670   00EFD4  A0D8               	btfss	status,0,c
  4671   00EFD6  EFEF  F077         	goto	u881
  4672   00EFDA  EFF1  F077         	goto	u880
  4673   00EFDE                     u881:
  4674   00EFDE  EFB9  F077         	goto	l1912
  4675   00EFE2                     u880:
  4676   00EFE2  848B               	bsf	139,2,c	;volatile
  4677   00EFE4  0012               	return		;funcret
  4678   00EFE6                     __end_of_max_write:
  4679                           	callstack 0
  4680                           
  4681 ;; *************** function ___awdiv *****************
  4682 ;; Defined at:
  4683 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  4684 ;; Parameters:    Size  Location     Type
  4685 ;;  dividend        2    0[COMRAM] int 
  4686 ;;  divisor         2    2[COMRAM] int 
  4687 ;; Auto vars:     Size  Location     Type
  4688 ;;  quotient        2    6[COMRAM] int 
  4689 ;;  sign            1    5[COMRAM] unsigned char 
  4690 ;;  counter         1    4[COMRAM] unsigned char 
  4691 ;; Return value:  Size  Location     Type
  4692 ;;                  2    0[COMRAM] int 
  4693 ;; Registers used:
  4694 ;;		wreg, status,2, status,0
  4695 ;; Tracked objects:
  4696 ;;		On entry : 0/0
  4697 ;;		On exit  : 0/0
  4698 ;;		Unchanged: 0/0
  4699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4700 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4701 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4703 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4704 ;;Total ram usage:        8 bytes
  4705 ;; Hardware stack levels used: 1
  4706 ;; This function calls:
  4707 ;;		Nothing
  4708 ;; This function is called by:
  4709 ;;		_displayTime
  4710 ;;		_max_write
  4711 ;;		_flushBuffer
  4712 ;; This function uses a non-reentrant model
  4713 ;;
  4714                           
  4715                           	psect	text17
  4716   00EFE6                     __ptext17:
  4717                           	callstack 0
  4718   00EFE6                     ___awdiv:
  4719                           	callstack 26
  4720   00EFE6  0E00               	movlw	0
  4721   00EFE8  6E06               	movwf	___awdiv@sign^0,c
  4722   00EFEA  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  4723   00EFEC  EFFC  F077         	goto	u810
  4724   00EFF0  EFFA  F077         	goto	u811
  4725   00EFF4                     u811:
  4726   00EFF4  EF02  F078         	goto	l1862
  4727   00EFF8                     u810:
  4728   00EFF8  6C03               	negf	___awdiv@divisor^0,c
  4729   00EFFA  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  4730   00EFFC  B0D8               	btfsc	status,0,c
  4731   00EFFE  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  4732   00F000  0E01               	movlw	1
  4733   00F002  6E06               	movwf	___awdiv@sign^0,c
  4734   00F004                     l1862:
  4735   00F004  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  4736   00F006  EF09  F078         	goto	u820
  4737   00F00A  EF07  F078         	goto	u821
  4738   00F00E                     u821:
  4739   00F00E  EF0F  F078         	goto	l1868
  4740   00F012                     u820:
  4741   00F012  6C01               	negf	___awdiv@dividend^0,c
  4742   00F014  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  4743   00F016  B0D8               	btfsc	status,0,c
  4744   00F018  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  4745   00F01A  0E01               	movlw	1
  4746   00F01C  1A06               	xorwf	___awdiv@sign^0,f,c
  4747   00F01E                     l1868:
  4748   00F01E  0E00               	movlw	0
  4749   00F020  6E08               	movwf	(___awdiv@quotient+1)^0,c
  4750   00F022  0E00               	movlw	0
  4751   00F024  6E07               	movwf	___awdiv@quotient^0,c
  4752   00F026  5003               	movf	___awdiv@divisor^0,w,c
  4753   00F028  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  4754   00F02A  B4D8               	btfsc	status,2,c
  4755   00F02C  EF1A  F078         	goto	u831
  4756   00F030  EF1C  F078         	goto	u830
  4757   00F034                     u831:
  4758   00F034  EF44  F078         	goto	l1890
  4759   00F038                     u830:
  4760   00F038  0E01               	movlw	1
  4761   00F03A  6E05               	movwf	___awdiv@counter^0,c
  4762   00F03C  EF24  F078         	goto	l1876
  4763   00F040                     l1874:
  4764   00F040  90D8               	bcf	status,0,c
  4765   00F042  3603               	rlcf	___awdiv@divisor^0,f,c
  4766   00F044  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  4767   00F046  2A05               	incf	___awdiv@counter^0,f,c
  4768   00F048                     l1876:
  4769   00F048  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  4770   00F04A  EF29  F078         	goto	u841
  4771   00F04E  EF2B  F078         	goto	u840
  4772   00F052                     u841:
  4773   00F052  EF20  F078         	goto	l1874
  4774   00F056                     u840:
  4775   00F056                     l1878:
  4776   00F056  90D8               	bcf	status,0,c
  4777   00F058  3607               	rlcf	___awdiv@quotient^0,f,c
  4778   00F05A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  4779   00F05C  5003               	movf	___awdiv@divisor^0,w,c
  4780   00F05E  5C01               	subwf	___awdiv@dividend^0,w,c
  4781   00F060  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4782   00F062  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  4783   00F064  A0D8               	btfss	status,0,c
  4784   00F066  EF37  F078         	goto	u851
  4785   00F06A  EF39  F078         	goto	u850
  4786   00F06E                     u851:
  4787   00F06E  EF3E  F078         	goto	l1886
  4788   00F072                     u850:
  4789   00F072  5003               	movf	___awdiv@divisor^0,w,c
  4790   00F074  5E01               	subwf	___awdiv@dividend^0,f,c
  4791   00F076  5004               	movf	(___awdiv@divisor+1)^0,w,c
  4792   00F078  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  4793   00F07A  8007               	bsf	___awdiv@quotient^0,0,c
  4794   00F07C                     l1886:
  4795   00F07C  90D8               	bcf	status,0,c
  4796   00F07E  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  4797   00F080  3203               	rrcf	___awdiv@divisor^0,f,c
  4798   00F082  2E05               	decfsz	___awdiv@counter^0,f,c
  4799   00F084  EF2B  F078         	goto	l1878
  4800   00F088                     l1890:
  4801   00F088  5006               	movf	___awdiv@sign^0,w,c
  4802   00F08A  B4D8               	btfsc	status,2,c
  4803   00F08C  EF4A  F078         	goto	u861
  4804   00F090  EF4C  F078         	goto	u860
  4805   00F094                     u861:
  4806   00F094  EF50  F078         	goto	l1894
  4807   00F098                     u860:
  4808   00F098  6C07               	negf	___awdiv@quotient^0,c
  4809   00F09A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  4810   00F09C  B0D8               	btfsc	status,0,c
  4811   00F09E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  4812   00F0A0                     l1894:
  4813   00F0A0  C007  F001         	movff	___awdiv@quotient,?___awdiv
  4814   00F0A4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  4815   00F0A8  0012               	return		;funcret
  4816   00F0AA                     __end_of___awdiv:
  4817                           	callstack 0
  4818                           
  4819 ;; *************** function _SPI_Exchange8bit *****************
  4820 ;; Defined at:
  4821 ;;		line 77 in file "mcc_generated_files/spi.c"
  4822 ;; Parameters:    Size  Location     Type
  4823 ;;  data            1    wreg     unsigned char 
  4824 ;; Auto vars:     Size  Location     Type
  4825 ;;  data            1    0[COMRAM] unsigned char 
  4826 ;; Return value:  Size  Location     Type
  4827 ;;                  1    wreg      unsigned char 
  4828 ;; Registers used:
  4829 ;;		wreg, status,2
  4830 ;; Tracked objects:
  4831 ;;		On entry : 0/0
  4832 ;;		On exit  : 0/0
  4833 ;;		Unchanged: 0/0
  4834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4836 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4838 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4839 ;;Total ram usage:        1 bytes
  4840 ;; Hardware stack levels used: 1
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_max_write
  4845 ;;		_max7219_cmd
  4846 ;;		_SPI_Exchange8bitBuffer
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text18
  4851   00EA9E                     __ptext18:
  4852                           	callstack 0
  4853   00EA9E                     _SPI_Exchange8bit:
  4854                           	callstack 28
  4855                           
  4856                           ;incstack = 0
  4857                           ;SPI_Exchange8bit@data stored from wreg
  4858   00EA9E  6E01               	movwf	SPI_Exchange8bit@data^0,c
  4859   00EAA0                     
  4860                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  4861   00EAA0  9EC6               	bcf	198,7,c	;volatile
  4862   00EAA2                     
  4863                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  4864   00EAA2  C001  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  4865   00EAA6                     l18:
  4866                           
  4867                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  4868   00EAA6  A0C7               	btfss	199,0,c	;volatile
  4869   00EAA8  EF58  F075         	goto	u801
  4870   00EAAC  EF5A  F075         	goto	u800
  4871   00EAB0                     u801:
  4872   00EAB0  EF53  F075         	goto	l18
  4873   00EAB4                     u800:
  4874   00EAB4                     
  4875                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  4876   00EAB4  50C9               	movf	201,w,c	;volatile
  4877   00EAB6  0012               	return		;funcret
  4878   00EAB8                     __end_of_SPI_Exchange8bit:
  4879                           	callstack 0
  4880                           
  4881 ;; *************** function _TMR0_StartTimer *****************
  4882 ;; Defined at:
  4883 ;;		line 86 in file "mcc_generated_files/tmr0.c"
  4884 ;; Parameters:    Size  Location     Type
  4885 ;;		None
  4886 ;; Auto vars:     Size  Location     Type
  4887 ;;		None
  4888 ;; Return value:  Size  Location     Type
  4889 ;;                  1    wreg      void 
  4890 ;; Registers used:
  4891 ;;		None
  4892 ;; Tracked objects:
  4893 ;;		On entry : 0/0
  4894 ;;		On exit  : 0/0
  4895 ;;		Unchanged: 0/0
  4896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4901 ;;Total ram usage:        0 bytes
  4902 ;; Hardware stack levels used: 1
  4903 ;; This function calls:
  4904 ;;		Nothing
  4905 ;; This function is called by:
  4906 ;;		_main
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text19
  4911   00EA02                     __ptext19:
  4912                           	callstack 0
  4913   00EA02                     _TMR0_StartTimer:
  4914                           	callstack 30
  4915   00EA02                     
  4916                           ;mcc_generated_files/tmr0.c: 89:     T0CONbits.TMR0ON = 1;
  4917   00EA02  8ED5               	bsf	213,7,c	;volatile
  4918   00EA04  0012               	return		;funcret
  4919   00EA06                     __end_of_TMR0_StartTimer:
  4920                           	callstack 0
  4921                           
  4922 ;; *************** function _TMR0_Reload *****************
  4923 ;; Defined at:
  4924 ;;		line 118 in file "mcc_generated_files/tmr0.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;		None
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;		None
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  1    wreg      void 
  4931 ;; Registers used:
  4932 ;;		wreg, status,2
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4938 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4939 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;Total ram usage:        0 bytes
  4943 ;; Hardware stack levels used: 1
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_main
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text20
  4952   00EA10                     __ptext20:
  4953                           	callstack 0
  4954   00EA10                     _TMR0_Reload:
  4955                           	callstack 30
  4956   00EA10                     
  4957                           ;mcc_generated_files/tmr0.c: 121:     TMR0H = timer0ReloadVal >> 8;
  4958   00EA10  0100               	movlb	0	; () banked
  4959   00EA12  51A1               	movf	(_timer0ReloadVal+1)& (0+255),w,b	;volatile
  4960   00EA14  6ED7               	movwf	215,c	;volatile
  4961   00EA16                     
  4962                           ; BSR set to: 0
  4963                           ;mcc_generated_files/tmr0.c: 122:     TMR0L = (uint8_t) timer0ReloadVal;
  4964   00EA16  C0A0  FFD6         	movff	_timer0ReloadVal,4054	;volatile
  4965   00EA1A                     
  4966                           ; BSR set to: 0
  4967   00EA1A  0012               	return		;funcret
  4968   00EA1C                     __end_of_TMR0_Reload:
  4969                           	callstack 0
  4970                           
  4971 ;; *************** function _TMR0_HasOverflowOccured *****************
  4972 ;; Defined at:
  4973 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  4974 ;; Parameters:    Size  Location     Type
  4975 ;;		None
  4976 ;; Auto vars:     Size  Location     Type
  4977 ;;		None
  4978 ;; Return value:  Size  Location     Type
  4979 ;;                  1    wreg      _Bool 
  4980 ;; Registers used:
  4981 ;;		wreg
  4982 ;; Tracked objects:
  4983 ;;		On entry : 0/0
  4984 ;;		On exit  : 0/0
  4985 ;;		Unchanged: 0/0
  4986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4991 ;;Total ram usage:        0 bytes
  4992 ;; Hardware stack levels used: 1
  4993 ;; This function calls:
  4994 ;;		Nothing
  4995 ;; This function is called by:
  4996 ;;		_main
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text21
  5001   00EA5C                     __ptext21:
  5002                           	callstack 0
  5003   00EA5C                     _TMR0_HasOverflowOccured:
  5004                           	callstack 30
  5005   00EA5C                     
  5006                           ;mcc_generated_files/tmr0.c: 128:     return(INTCONbits.TMR0IF);
  5007   00EA5C  B4F2               	btfsc	242,2,c	;volatile
  5008   00EA5E  EF33  F075         	goto	u1261
  5009   00EA62  EF36  F075         	goto	u1260
  5010   00EA66                     u1261:
  5011   00EA66  0E01               	movlw	1
  5012   00EA68  EF37  F075         	goto	u1266
  5013   00EA6C                     u1260:
  5014   00EA6C  0E00               	movlw	0
  5015   00EA6E                     u1266:
  5016   00EA6E  0012               	return		;funcret
  5017   00EA70                     __end_of_TMR0_HasOverflowOccured:
  5018                           	callstack 0
  5019                           
  5020 ;; *************** function _SYSTEM_Initialize *****************
  5021 ;; Defined at:
  5022 ;;		line 108 in file "mcc_generated_files/mcc.c"
  5023 ;; Parameters:    Size  Location     Type
  5024 ;;		None
  5025 ;; Auto vars:     Size  Location     Type
  5026 ;;		None
  5027 ;; Return value:  Size  Location     Type
  5028 ;;                  1    wreg      void 
  5029 ;; Registers used:
  5030 ;;		wreg, status,2, status,0, cstack
  5031 ;; Tracked objects:
  5032 ;;		On entry : 0/0
  5033 ;;		On exit  : 0/0
  5034 ;;		Unchanged: 0/0
  5035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5040 ;;Total ram usage:        0 bytes
  5041 ;; Hardware stack levels used: 1
  5042 ;; Hardware stack levels required when called: 1
  5043 ;; This function calls:
  5044 ;;		_EUSART_Initialize
  5045 ;;		_OSCILLATOR_Initialize
  5046 ;;		_PIN_MANAGER_Initialize
  5047 ;;		_PWM2_Initialize
  5048 ;;		_SPI_Initialize
  5049 ;;		_TMR0_Initialize
  5050 ;;		_TMR2_Initialize
  5051 ;; This function is called by:
  5052 ;;		_main
  5053 ;; This function uses a non-reentrant model
  5054 ;;
  5055                           
  5056                           	psect	text22
  5057   00EAB8                     __ptext22:
  5058                           	callstack 0
  5059   00EAB8                     _SYSTEM_Initialize:
  5060                           	callstack 29
  5061   00EAB8                     
  5062                           ;mcc_generated_files/mcc.c: 110:     PIN_MANAGER_Initialize();
  5063   00EAB8  EC6B  F075         	call	_PIN_MANAGER_Initialize	;wreg free
  5064                           
  5065                           ;mcc_generated_files/mcc.c: 111:     OSCILLATOR_Initialize();
  5066   00EABC  EC03  F075         	call	_OSCILLATOR_Initialize	;wreg free
  5067                           
  5068                           ;mcc_generated_files/mcc.c: 112:     SPI_Initialize();
  5069   00EAC0  EC15  F075         	call	_SPI_Initialize	;wreg free
  5070                           
  5071                           ;mcc_generated_files/mcc.c: 113:     PWM2_Initialize();
  5072   00EAC4  EC0E  F075         	call	_PWM2_Initialize	;wreg free
  5073                           
  5074                           ;mcc_generated_files/mcc.c: 114:     TMR2_Initialize();
  5075   00EAC8  EC1C  F075         	call	_TMR2_Initialize	;wreg free
  5076   00EACC                     
  5077                           ;mcc_generated_files/mcc.c: 115:     TMR0_Initialize();
  5078   00EACC  EC8F  F075         	call	_TMR0_Initialize	;wreg free
  5079   00EAD0                     
  5080                           ;mcc_generated_files/mcc.c: 116:     EUSART_Initialize();
  5081   00EAD0  EC38  F075         	call	_EUSART_Initialize	;wreg free
  5082   00EAD4  0012               	return		;funcret
  5083   00EAD6                     __end_of_SYSTEM_Initialize:
  5084                           	callstack 0
  5085                           
  5086 ;; *************** function _TMR2_Initialize *****************
  5087 ;; Defined at:
  5088 ;;		line 61 in file "mcc_generated_files/tmr2.c"
  5089 ;; Parameters:    Size  Location     Type
  5090 ;;		None
  5091 ;; Auto vars:     Size  Location     Type
  5092 ;;		None
  5093 ;; Return value:  Size  Location     Type
  5094 ;;                  1    wreg      void 
  5095 ;; Registers used:
  5096 ;;		wreg, status,2
  5097 ;; Tracked objects:
  5098 ;;		On entry : 0/0
  5099 ;;		On exit  : 0/0
  5100 ;;		Unchanged: 0/0
  5101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5106 ;;Total ram usage:        0 bytes
  5107 ;; Hardware stack levels used: 1
  5108 ;; This function calls:
  5109 ;;		Nothing
  5110 ;; This function is called by:
  5111 ;;		_SYSTEM_Initialize
  5112 ;; This function uses a non-reentrant model
  5113 ;;
  5114                           
  5115                           	psect	text23
  5116   00EA38                     __ptext23:
  5117                           	callstack 0
  5118   00EA38                     _TMR2_Initialize:
  5119                           	callstack 29
  5120   00EA38                     
  5121                           ;mcc_generated_files/tmr2.c: 66:     PR2 = 0x7C;
  5122   00EA38  0E7C               	movlw	124
  5123   00EA3A  6ECB               	movwf	203,c	;volatile
  5124                           
  5125                           ;mcc_generated_files/tmr2.c: 69:     TMR2 = 0x00;
  5126   00EA3C  0E00               	movlw	0
  5127   00EA3E  6ECC               	movwf	204,c	;volatile
  5128   00EA40                     
  5129                           ;mcc_generated_files/tmr2.c: 72:     PIR1bits.TMR2IF = 0;
  5130   00EA40  929E               	bcf	158,1,c	;volatile
  5131                           
  5132                           ;mcc_generated_files/tmr2.c: 75:     T2CON = 0x1D;
  5133   00EA42  0E1D               	movlw	29
  5134   00EA44  6ECA               	movwf	202,c	;volatile
  5135   00EA46                     
  5136                           ;mcc_generated_files/tmr2.c: 77:     T2CONbits.TMR2ON = 1;
  5137   00EA46  84CA               	bsf	202,2,c	;volatile
  5138   00EA48  0012               	return		;funcret
  5139   00EA4A                     __end_of_TMR2_Initialize:
  5140                           	callstack 0
  5141                           
  5142 ;; *************** function _TMR0_Initialize *****************
  5143 ;; Defined at:
  5144 ;;		line 65 in file "mcc_generated_files/tmr0.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;		None
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;		None
  5149 ;; Return value:  Size  Location     Type
  5150 ;;                  1    wreg      void 
  5151 ;; Registers used:
  5152 ;;		wreg, status,2, status,0
  5153 ;; Tracked objects:
  5154 ;;		On entry : 0/0
  5155 ;;		On exit  : 0/0
  5156 ;;		Unchanged: 0/0
  5157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5158 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5160 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;Total ram usage:        2 bytes
  5163 ;; Hardware stack levels used: 1
  5164 ;; This function calls:
  5165 ;;		Nothing
  5166 ;; This function is called by:
  5167 ;;		_SYSTEM_Initialize
  5168 ;; This function uses a non-reentrant model
  5169 ;;
  5170                           
  5171                           	psect	text24
  5172   00EB1E                     __ptext24:
  5173                           	callstack 0
  5174   00EB1E                     _TMR0_Initialize:
  5175                           	callstack 29
  5176   00EB1E                     
  5177                           ;mcc_generated_files/tmr0.c: 70:     TMR0H = 0x0B;
  5178   00EB1E  0E0B               	movlw	11
  5179   00EB20  6ED7               	movwf	215,c	;volatile
  5180                           
  5181                           ;mcc_generated_files/tmr0.c: 73:     TMR0L = 0xDB;
  5182   00EB22  0EDB               	movlw	219
  5183   00EB24  6ED6               	movwf	214,c	;volatile
  5184   00EB26                     
  5185                           ;mcc_generated_files/tmr0.c: 77:     timer0ReloadVal = (TMR0H << 8) | TMR0L;
  5186   00EB26  50D6               	movf	214,w,c	;volatile
  5187   00EB28  CFD7 F001          	movff	4055,??_TMR0_Initialize	;volatile
  5188   00EB2C  6A02               	clrf	(??_TMR0_Initialize+1)^0,c
  5189   00EB2E  C001  F002         	movff	??_TMR0_Initialize,??_TMR0_Initialize+1
  5190   00EB32  6A01               	clrf	??_TMR0_Initialize^0,c
  5191   00EB34  1001               	iorwf	??_TMR0_Initialize^0,w,c
  5192   00EB36  0100               	movlb	0	; () banked
  5193   00EB38  6FA0               	movwf	_timer0ReloadVal& (0+255),b	;volatile
  5194   00EB3A  5002               	movf	(??_TMR0_Initialize+1)^0,w,c
  5195   00EB3C  6FA1               	movwf	(_timer0ReloadVal+1)& (0+255),b	;volatile
  5196   00EB3E                     
  5197                           ; BSR set to: 0
  5198                           ;mcc_generated_files/tmr0.c: 80:     INTCONbits.TMR0IF = 0;
  5199   00EB3E  94F2               	bcf	242,2,c	;volatile
  5200   00EB40                     
  5201                           ; BSR set to: 0
  5202                           ;mcc_generated_files/tmr0.c: 83:     T0CON = 0x94;
  5203   00EB40  0E94               	movlw	148
  5204   00EB42  6ED5               	movwf	213,c	;volatile
  5205   00EB44                     
  5206                           ; BSR set to: 0
  5207   00EB44  0012               	return		;funcret
  5208   00EB46                     __end_of_TMR0_Initialize:
  5209                           	callstack 0
  5210                           
  5211 ;; *************** function _SPI_Initialize *****************
  5212 ;; Defined at:
  5213 ;;		line 63 in file "mcc_generated_files/spi.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, status,2
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5227 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used: 1
  5233 ;; This function calls:
  5234 ;;		Nothing
  5235 ;; This function is called by:
  5236 ;;		_SYSTEM_Initialize
  5237 ;; This function uses a non-reentrant model
  5238 ;;
  5239                           
  5240                           	psect	text25
  5241   00EA2A                     __ptext25:
  5242                           	callstack 0
  5243   00EA2A                     _SPI_Initialize:
  5244                           	callstack 29
  5245   00EA2A                     
  5246                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  5247   00EA2A  0EC0               	movlw	192
  5248   00EA2C  6EC7               	movwf	199,c	;volatile
  5249                           
  5250                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  5251   00EA2E  0E30               	movlw	48
  5252   00EA30  6EC6               	movwf	198,c	;volatile
  5253                           
  5254                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  5255   00EA32  0E00               	movlw	0
  5256   00EA34  6EC8               	movwf	200,c	;volatile
  5257   00EA36  0012               	return		;funcret
  5258   00EA38                     __end_of_SPI_Initialize:
  5259                           	callstack 0
  5260                           
  5261 ;; *************** function _PWM2_Initialize *****************
  5262 ;; Defined at:
  5263 ;;		line 63 in file "mcc_generated_files/pwm2.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;		None
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5281 ;;Total ram usage:        0 bytes
  5282 ;; Hardware stack levels used: 1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_SYSTEM_Initialize
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text26
  5291   00EA1C                     __ptext26:
  5292                           	callstack 0
  5293   00EA1C                     _PWM2_Initialize:
  5294                           	callstack 29
  5295   00EA1C                     
  5296                           ;mcc_generated_files/pwm2.c: 68:     CCP2CON = 0x1C;
  5297   00EA1C  0E1C               	movlw	28
  5298   00EA1E  6EBA               	movwf	186,c	;volatile
  5299                           
  5300                           ;mcc_generated_files/pwm2.c: 71:     CCPR2L = 0x3E;
  5301   00EA20  0E3E               	movlw	62
  5302   00EA22  6EBB               	movwf	187,c	;volatile
  5303                           
  5304                           ;mcc_generated_files/pwm2.c: 74:     CCPR2H = 0x00;
  5305   00EA24  0E00               	movlw	0
  5306   00EA26  6EBC               	movwf	188,c	;volatile
  5307   00EA28  0012               	return		;funcret
  5308   00EA2A                     __end_of_PWM2_Initialize:
  5309                           	callstack 0
  5310                           
  5311 ;; *************** function _PIN_MANAGER_Initialize *****************
  5312 ;; Defined at:
  5313 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  5314 ;; Parameters:    Size  Location     Type
  5315 ;;		None
  5316 ;; Auto vars:     Size  Location     Type
  5317 ;;		None
  5318 ;; Return value:  Size  Location     Type
  5319 ;;                  1    wreg      void 
  5320 ;; Registers used:
  5321 ;;		wreg, status,2
  5322 ;; Tracked objects:
  5323 ;;		On entry : 0/0
  5324 ;;		On exit  : 0/0
  5325 ;;		Unchanged: 0/0
  5326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5331 ;;Total ram usage:        0 bytes
  5332 ;; Hardware stack levels used: 1
  5333 ;; This function calls:
  5334 ;;		Nothing
  5335 ;; This function is called by:
  5336 ;;		_SYSTEM_Initialize
  5337 ;; This function uses a non-reentrant model
  5338 ;;
  5339                           
  5340                           	psect	text27
  5341   00EAD6                     __ptext27:
  5342                           	callstack 0
  5343   00EAD6                     _PIN_MANAGER_Initialize:
  5344                           	callstack 29
  5345   00EAD6                     
  5346                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  5347   00EAD6  0E00               	movlw	0
  5348   00EAD8  6E89               	movwf	137,c	;volatile
  5349                           
  5350                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  5351   00EADA  0E00               	movlw	0
  5352   00EADC  6E8A               	movwf	138,c	;volatile
  5353                           
  5354                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  5355   00EADE  0E2C               	movlw	44
  5356   00EAE0  6E8B               	movwf	139,c	;volatile
  5357   00EAE2                     
  5358                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  5359   00EAE2  6892               	setf	146,c	;volatile
  5360   00EAE4                     
  5361                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  5362   00EAE4  6893               	setf	147,c	;volatile
  5363                           
  5364                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x91;
  5365   00EAE6  0E91               	movlw	145
  5366   00EAE8  6E94               	movwf	148,c	;volatile
  5367                           
  5368                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  5369   00EAEA  0E0A               	movlw	10
  5370   00EAEC  6E7F               	movwf	127,c	;volatile
  5371                           
  5372                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  5373   00EAEE  0E1F               	movlw	31
  5374   00EAF0  6E7E               	movwf	126,c	;volatile
  5375   00EAF2                     
  5376                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  5377   00EAF2  687C               	setf	124,c	;volatile
  5378   00EAF4                     
  5379                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  5380   00EAF4  9EF1               	bcf	241,7,c	;volatile
  5381   00EAF6  0012               	return		;funcret
  5382   00EAF8                     __end_of_PIN_MANAGER_Initialize:
  5383                           	callstack 0
  5384                           
  5385 ;; *************** function _OSCILLATOR_Initialize *****************
  5386 ;; Defined at:
  5387 ;;		line 119 in file "mcc_generated_files/mcc.c"
  5388 ;; Parameters:    Size  Location     Type
  5389 ;;		None
  5390 ;; Auto vars:     Size  Location     Type
  5391 ;;		None
  5392 ;; Return value:  Size  Location     Type
  5393 ;;                  1    wreg      void 
  5394 ;; Registers used:
  5395 ;;		wreg, status,2
  5396 ;; Tracked objects:
  5397 ;;		On entry : 0/0
  5398 ;;		On exit  : 0/0
  5399 ;;		Unchanged: 0/0
  5400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5401 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5402 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5403 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5404 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5405 ;;Total ram usage:        0 bytes
  5406 ;; Hardware stack levels used: 1
  5407 ;; This function calls:
  5408 ;;		Nothing
  5409 ;; This function is called by:
  5410 ;;		_SYSTEM_Initialize
  5411 ;; This function uses a non-reentrant model
  5412 ;;
  5413                           
  5414                           	psect	text28
  5415   00EA06                     __ptext28:
  5416                           	callstack 0
  5417   00EA06                     _OSCILLATOR_Initialize:
  5418                           	callstack 29
  5419   00EA06                     
  5420                           ;mcc_generated_files/mcc.c: 122:     OSCCON = 0x62;
  5421   00EA06  0E62               	movlw	98
  5422   00EA08  6ED3               	movwf	211,c	;volatile
  5423                           
  5424                           ;mcc_generated_files/mcc.c: 124:     OSCTUNE = 0x00;
  5425   00EA0A  0E00               	movlw	0
  5426   00EA0C  6E9B               	movwf	155,c	;volatile
  5427   00EA0E  0012               	return		;funcret
  5428   00EA10                     __end_of_OSCILLATOR_Initialize:
  5429                           	callstack 0
  5430                           
  5431 ;; *************** function _EUSART_Initialize *****************
  5432 ;; Defined at:
  5433 ;;		line 55 in file "mcc_generated_files/eusart.c"
  5434 ;; Parameters:    Size  Location     Type
  5435 ;;		None
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;		None
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  1    wreg      void 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5451 ;;Total ram usage:        0 bytes
  5452 ;; Hardware stack levels used: 1
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_SYSTEM_Initialize
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text29
  5461   00EA70                     __ptext29:
  5462                           	callstack 0
  5463   00EA70                     _EUSART_Initialize:
  5464                           	callstack 29
  5465   00EA70                     
  5466                           ;mcc_generated_files/eusart.c: 60:     BAUDCON = 0x0A;
  5467   00EA70  0E0A               	movlw	10
  5468   00EA72  6EB8               	movwf	184,c	;volatile
  5469                           
  5470                           ;mcc_generated_files/eusart.c: 63:     RCSTA = 0x90;
  5471   00EA74  0E90               	movlw	144
  5472   00EA76  6EAB               	movwf	171,c	;volatile
  5473                           
  5474                           ;mcc_generated_files/eusart.c: 66:     TXSTA = 0x24;
  5475   00EA78  0E24               	movlw	36
  5476   00EA7A  6EAC               	movwf	172,c	;volatile
  5477                           
  5478                           ;mcc_generated_files/eusart.c: 69:     SPBRG = 0xCF;
  5479   00EA7C  0ECF               	movlw	207
  5480   00EA7E  6EAF               	movwf	175,c	;volatile
  5481                           
  5482                           ;mcc_generated_files/eusart.c: 72:     SPBRGH = 0x00;
  5483   00EA80  0E00               	movlw	0
  5484   00EA82  6EB0               	movwf	176,c	;volatile
  5485   00EA84  0012               	return		;funcret
  5486   00EA86                     __end_of_EUSART_Initialize:
  5487                           	callstack 0
  5488                           
  5489                           	psect	rparam
  5490   000000                     
  5491                           	psect	idloc
  5492                           
  5493                           ;Config register IDLOC0 @ 0x200000
  5494                           ;	unspecified, using default values
  5495   200000                     	org	2097152
  5496   200000  FF                 	db	255
  5497                           
  5498                           ;Config register IDLOC1 @ 0x200001
  5499                           ;	unspecified, using default values
  5500   200001                     	org	2097153
  5501   200001  FF                 	db	255
  5502                           
  5503                           ;Config register IDLOC2 @ 0x200002
  5504                           ;	unspecified, using default values
  5505   200002                     	org	2097154
  5506   200002  FF                 	db	255
  5507                           
  5508                           ;Config register IDLOC3 @ 0x200003
  5509                           ;	unspecified, using default values
  5510   200003                     	org	2097155
  5511   200003  FF                 	db	255
  5512                           
  5513                           ;Config register IDLOC4 @ 0x200004
  5514                           ;	unspecified, using default values
  5515   200004                     	org	2097156
  5516   200004  FF                 	db	255
  5517                           
  5518                           ;Config register IDLOC5 @ 0x200005
  5519                           ;	unspecified, using default values
  5520   200005                     	org	2097157
  5521   200005  FF                 	db	255
  5522                           
  5523                           ;Config register IDLOC6 @ 0x200006
  5524                           ;	unspecified, using default values
  5525   200006                     	org	2097158
  5526   200006  FF                 	db	255
  5527                           
  5528                           ;Config register IDLOC7 @ 0x200007
  5529                           ;	unspecified, using default values
  5530   200007                     	org	2097159
  5531   200007  FF                 	db	255
  5532                           
  5533                           	psect	config
  5534                           
  5535                           ; Padding undefined space
  5536   300000                     	org	3145728
  5537   300000  FF                 	db	255
  5538                           
  5539                           ;Config register CONFIG1H @ 0x300001
  5540                           ;	Oscillator Selection bits
  5541                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  5542                           ;	Fail-Safe Clock Monitor Enable bit
  5543                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  5544                           ;	Internal/External Oscillator Switchover bit
  5545                           ;	IESO = OFF, Oscillator Switchover mode disabled
  5546   300001                     	org	3145729
  5547   300001  08                 	db	8
  5548                           
  5549                           ;Config register CONFIG2L @ 0x300002
  5550                           ;	Power-up Timer Enable bit
  5551                           ;	PWRTEN = OFF, PWRT disabled
  5552                           ;	Brown-out Reset Enable bits
  5553                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  5554                           ;	Brown Out Reset Voltage bits
  5555                           ;	BORV = 18, VBOR set to 1.8 V nominal
  5556   300002                     	org	3145730
  5557   300002  1F                 	db	31
  5558                           
  5559                           ;Config register CONFIG2H @ 0x300003
  5560                           ;	Watchdog Timer Enable bit
  5561                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  5562                           ;	Watchdog Timer Postscale Select bits
  5563                           ;	WDTPS = 32768, 1:32768
  5564   300003                     	org	3145731
  5565   300003  1E                 	db	30
  5566                           
  5567                           ; Padding undefined space
  5568   300004                     	org	3145732
  5569   300004  FF                 	db	255
  5570                           
  5571                           ;Config register CONFIG3H @ 0x300005
  5572                           ;	CCP2 MUX bit
  5573                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  5574                           ;	PORTB A/D Enable bit
  5575                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  5576                           ;	Low-Power Timer1 Oscillator Enable bit
  5577                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  5578                           ;	HFINTOSC Fast Start-up
  5579                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  5580                           ;	MCLR Pin Enable bit
  5581                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  5582   300005                     	org	3145733
  5583   300005  09                 	db	9
  5584                           
  5585                           ;Config register CONFIG4L @ 0x300006
  5586                           ;	Stack Full/Underflow Reset Enable bit
  5587                           ;	STVREN = ON, Stack full/underflow will cause Reset
  5588                           ;	Single-Supply ICSP Enable bit
  5589                           ;	LVP = OFF, Single-Supply ICSP disabled
  5590                           ;	Extended Instruction Set Enable bit
  5591                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  5592                           ;	Background Debugger Enable bit
  5593                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  5594   300006                     	org	3145734
  5595   300006  81                 	db	129
  5596                           
  5597                           ; Padding undefined space
  5598   300007                     	org	3145735
  5599   300007  FF                 	db	255
  5600                           
  5601                           ;Config register CONFIG5L @ 0x300008
  5602                           ;	Code Protection Block 0
  5603                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  5604                           ;	Code Protection Block 1
  5605                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  5606                           ;	Code Protection Block 2
  5607                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  5608                           ;	Code Protection Block 3
  5609                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  5610   300008                     	org	3145736
  5611   300008  0F                 	db	15
  5612                           
  5613                           ;Config register CONFIG5H @ 0x300009
  5614                           ;	Boot Block Code Protection bit
  5615                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  5616                           ;	Data EEPROM Code Protection bit
  5617                           ;	CPD = OFF, Data EEPROM not code-protected
  5618   300009                     	org	3145737
  5619   300009  C0                 	db	192
  5620                           
  5621                           ;Config register CONFIG6L @ 0x30000A
  5622                           ;	Write Protection Block 0
  5623                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  5624                           ;	Write Protection Block 1
  5625                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  5626                           ;	Write Protection Block 2
  5627                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  5628                           ;	Write Protection Block 3
  5629                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  5630   30000A                     	org	3145738
  5631   30000A  0F                 	db	15
  5632                           
  5633                           ;Config register CONFIG6H @ 0x30000B
  5634                           ;	Configuration Register Write Protection bit
  5635                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  5636                           ;	Boot Block Write Protection bit
  5637                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  5638                           ;	Data EEPROM Write Protection bit
  5639                           ;	WRTD = OFF, Data EEPROM not write-protected
  5640   30000B                     	org	3145739
  5641   30000B  E0                 	db	224
  5642                           
  5643                           ;Config register CONFIG7L @ 0x30000C
  5644                           ;	Table Read Protection Block 0
  5645                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  5646                           ;	Table Read Protection Block 1
  5647                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  5648                           ;	Table Read Protection Block 2
  5649                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  5650                           ;	Table Read Protection Block 3
  5651                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  5652   30000C                     	org	3145740
  5653   30000C  0F                 	db	15
  5654                           
  5655                           ;Config register CONFIG7H @ 0x30000D
  5656                           ;	Boot Block Table Read Protection bit
  5657                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  5658   30000D                     	org	3145741
  5659   30000D  40                 	db	64
  5660                           tosu	equ	0xFFF
  5661                           tosh	equ	0xFFE
  5662                           tosl	equ	0xFFD
  5663                           stkptr	equ	0xFFC
  5664                           pclatu	equ	0xFFB
  5665                           pclath	equ	0xFFA
  5666                           pcl	equ	0xFF9
  5667                           tblptru	equ	0xFF8
  5668                           tblptrh	equ	0xFF7
  5669                           tblptrl	equ	0xFF6
  5670                           tablat	equ	0xFF5
  5671                           prodh	equ	0xFF4
  5672                           prodl	equ	0xFF3
  5673                           indf0	equ	0xFEF
  5674                           postinc0	equ	0xFEE
  5675                           postdec0	equ	0xFED
  5676                           preinc0	equ	0xFEC
  5677                           plusw0	equ	0xFEB
  5678                           fsr0h	equ	0xFEA
  5679                           fsr0l	equ	0xFE9
  5680                           wreg	equ	0xFE8
  5681                           indf1	equ	0xFE7
  5682                           postinc1	equ	0xFE6
  5683                           postdec1	equ	0xFE5
  5684                           preinc1	equ	0xFE4
  5685                           plusw1	equ	0xFE3
  5686                           fsr1h	equ	0xFE2
  5687                           fsr1l	equ	0xFE1
  5688                           bsr	equ	0xFE0
  5689                           indf2	equ	0xFDF
  5690                           postinc2	equ	0xFDE
  5691                           postdec2	equ	0xFDD
  5692                           preinc2	equ	0xFDC
  5693                           plusw2	equ	0xFDB
  5694                           fsr2h	equ	0xFDA
  5695                           fsr2l	equ	0xFD9
  5696                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    2048
    Data        0
    BSS         79
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     94      95
    BANK0           160      2      80
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          244      0       0
    BANK15           96      0       0

Pointer List with Targets:

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(1) Largest target is 2
		 -> saveTimeToFlash@timeData(COMRAM[2]), 

    FLASH_WriteByte@flashRdBufPtr	PTR unsigned char  size(1) Largest target is 2
		 -> saveTimeToFlash@timeData(COMRAM[2]), 

    printString@str	PTR unsigned char  size(1) Largest target is 5
		 -> displayTime@displayString(COMRAM[5]), 


Critical Paths under _main in COMRAM

    _main->_displayTime
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _checkButtons->_displayTime
    _saveTimeToFlash->_FLASH_WriteByte
    _FLASH_WriteByte->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _blinkDisplay->_displayTime
    _displayTime->_printString
    _printString->_flushBuffer
    _clearDisplay->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _SYSTEM_Initialize->_TMR0_Initialize

Critical Paths under _main in BANK0

    _main->_checkButtons

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   24568
                  _SYSTEM_Initialize
            _TMR0_HasOverflowOccured
                        _TMR0_Reload
                    _TMR0_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     537
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     537
                                              1 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0     491
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   15648
                                              0 BANK0      2     2      0
                            ___awmod
                       _blinkDisplay
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (2) _saveTimeToFlash                                      6     6      0    1696
                                             31 COMRAM     2     2      0
                    _FLASH_WriteByte
 ---------------------------------------------------------------------------------
 (3) _FLASH_WriteByte                                     12     6      6    1621
                                             19 COMRAM    12     6      6
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (4) _FLASH_WriteBlock                                    14     9      5     657
                                              5 COMRAM    14     9      5
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (5) _FLASH_EraseBlock                                     5     1      4     165
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     446
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (2) _blinkDisplay                                         0     0      0    7892
                       _clearDisplay
                        _displayTime
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    5156
                                             82 COMRAM    12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _printString                                         18    17      1    3086
                                             64 COMRAM    18    17      1
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     904
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _clearDisplay                                         2     2      0    2736
                                             64 COMRAM     2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (3) _flushBuffer                                         43    43      0    2668
                                             21 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (4) _max_write                                           13    10      3    1375
                                              8 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     908
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _SPI_Exchange8bit                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _TMR0_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_Reload                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _PWM2_Initialize
                     _SPI_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM2_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _PWM2_Initialize
     _SPI_Initialize
     _TMR0_Initialize
     _TMR2_Initialize
   _TMR0_HasOverflowOccured
   _TMR0_Reload
   _TMR0_StartTimer
   _checkButtons
     ___awmod
     _blinkDisplay
       _clearDisplay
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
       _displayTime
         ___awdiv
         ___awmod
         _printString
           _flushBuffer
     _displayTime
     _saveTimeToFlash
       _FLASH_WriteByte
         _FLASH_ReadByte
         _FLASH_WriteBlock
           _FLASH_EraseBlock
   _clearDisplay
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EF3      0       0      57        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK14           F4      0       0      32        0.0%
BANK14              F4      0       0      33        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      2      50       5       50.0%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BIGRAM_1            60      0       0      56        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5E      5F       1      100.0%
BITBIGSFRlll        1C      0       0      54        0.0%
BITBIGSFR_1lhh       9      0       0      43        0.0%
BITBIGSFR_1llhh      7      0       0      45        0.0%
BITBIGSFRhl          7      0       0      51        0.0%
BITBIGSFR_1hh        6      0       0      42        0.0%
BITBIGSFRhhh         6      0       0      49        0.0%
BITBIGSFRhhl         6      0       0      50        0.0%
BITBIGSFR_1lllh      4      0       0      46        0.0%
BITBIGSFR_5hh        4      0       0      36        0.0%
BITBIGSFR_2h         3      0       0      41        0.0%
BITBIGSFR_4          3      0       0      39        0.0%
BITBIGSFR_3          3      0       0      40        0.0%
BITBIGSFR_1lllh      2      0       0      47        0.0%
BITBIGSFR_5hl        2      0       0      37        0.0%
BITBIGSFR_1lhl       1      0       0      44        0.0%
BITBIGSFRllh         1      0       0      53        0.0%
BITBIGSFRlh          1      0       0      52        0.0%
BITBIGSFR_5l         1      0       0      38        0.0%
BITBIGSFR_1llll      1      0       0      48        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      AF      55        0.0%
DATA                 0      0      AF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Mon Sep 09 22:27:21 2024

               __end_of_checkButtons F3F2                       _SPI_Initialize EA2A  
                       ?_displayTime 0001      __end_of_TMR0_HasOverflowOccured EA70  
                        _SSPSTATbits 0FC7                                   l20 EAB4  
                                 l21 EAB6                                   l15 EA36  
                                 l18 EAA6                                   l66 EAD4  
                                 l69 EA0E                         ___awdiv@sign 0006  
                    _timer0ReloadVal 00A0                                  l210 EFE2  
                                l212 EFE4                                  l302 EA84  
                                l142 EE74                                  l231 EC64  
                                l400 EA28                                  l224 F2C0  
                                l241 EC14                                  l233 EC66  
                                l162 EB1C                                  l148 ECC0  
                                l236 EBDC                                  l341 EB44  
                                l165 EB74                                  l159 F3F0  
                                l344 EA04                                  l434 EA5A  
                                l450 F160                                  l442 ED40  
                                l451 F14A                                  l188 EAF6  
                                l372 EA48                                  l356 EA1A  
                                l452 F14E                                  l702 F0A8  
                                l446 F192                                  l359 EA6E  
                                l279 F52C                                  l456 EBA8  
                                l715 EF24                                  _PR2 0FCB  
                                u800 EAB4                                  u801 EAB0  
                                u810 EFF8                                  u811 EFF4  
                                u820 F012                                  u821 F00E  
                                u830 F038                                  u910 F204  
                                u831 F034                                  u911 F200  
                                u840 F056                                  u904 F1EA  
                                u841 F052                                  u905 F1E6  
                                u850 F072                                  u930 F258  
                                u851 F06E                                  u931 F254  
                                u860 F098                                  u940 F278  
                                u924 F220                                  u861 F094  
                                u941 F274                                  u925 F21C  
                                u870 EF8A                                  u950 F2C0  
                                u871 EF86                                  u951 F2BC  
                                u880 EFE2                                  u881 EFDE  
                                u891 F19A                                  u980 F480  
                                u981 F47C                                  u965 EBA6  
                                u974 F466                                  u966 EBA8  
                                u975 F462                                  u994 F494  
                                u995 F490                         ___awmod@sign 0006  
                    _TMR2_Initialize EA38                     ?_FLASH_WriteByte 0014  
                                prod 0FF3                                  wreg 0FE8  
                               l2010 F422                                 l2100 EE76  
                               l2012 F480                                 l2004 F416  
                               l2110 EEA2                                 l2102 EE7A  
                               l2030 F4DE                                 l2022 F4C4  
                               l2014 F49E                                 l2200 EA1C  
                               l2120 EEDA                                 l2112 EEAA  
                               l2104 EE88                                 l2040 F528  
                               l2024 F4D0                                 l2032 F4FA  
                               l2016 F4A4                                 l2210 EB26  
                               l2202 EA38                                 l2130 EF14  
                               l2122 EEF0                                 l2114 EEBC  
                               l2106 EE90                                 l2034 F4FE  
                               l2026 F4D6                                 l2018 F4B2  
                               l2042 EA4A                                 l2050 F0C2  
                               l2212 EB3E                                 l2204 EA40  
                               l2132 EF1C                                 l2124 EEF8  
                               l2116 EEC4                                 l2108 EE94  
                               l2028 F4DA                                 l2220 EC6E  
                               l2044 EA58                                 l2052 F0CA  
                               l2300 F2C2                                 l2214 EB40  
                               l2206 EA46                                 l2142 EBE6  
                               l2126 EEFE                                 l2118 EECC  
                               l2038 F510                                 l2150 EDCC  
                               l2222 EC84                                 l2070 F11A  
                               l2062 F0FA                                 l2054 F0CA  
                               l2230 EAF8                                 l2302 F2D0  
                               l2310 F318                                 l2216 EA70  
                               l2208 EB1E                                 l2144 EBF0  
                               l2136 EBDE                                 l2128 EF04  
                               l2160 EE38                                 l2152 EE2C  
                               l2224 EC9C                                 l2080 F132  
                               l2072 F122                                 l2064 F10E  
                               l2056 F0CE                                 l2048 F0AA  
                               l2232 EAF8                                 l2312 F326  
                               l2320 F372                                 l2304 F2EA  
                               l2240 EC2E                                 l2400 ED4A  
                               l2146 EBF4                                 l2162 EE4C  
                               l2154 EE30                                 l2226 ECA4  
                               l2218 EC68                                 l2090 F170  
                               l2082 F144                                 l2066 F112  
                               l2058 F0D2                                 l2170 ECE0  
                               l2234 EAFC                                 l2330 F3C2  
                               l2322 F380                                 l2314 F340  
                               l2306 F2F8                                 l2250 EC44  
                               l2242 EC30                                 l2410 ED6E  
                               l2402 ED4E                                 l2148 EC10  
                               l2164 EE50                                 l2228 ECA8  
                               l2092 F172                                 l2084 F14C  
                               l2068 F116                                 l2180 ED0C  
                               l2236 EB00                                 l2332 F3D8  
                               l2324 F392                                 l2316 F34E  
                               l2308 F314                                 l2252 EC48  
                               l2420 ED98                                 l2412 ED72  
                               l2404 ED52                                 l2190 EAE2  
                               l2166 EE6C                                 l2094 F174  
                               l2086 F150                                 l2078 F126  
                               l2182 ED1C                                 l2334 F3DC  
                               l2326 F39E                                 l2318 F36E  
                               l2238 EC18                                 l2430 EDB6  
                               l2422 ED9C                                 l2414 ED82  
                               l2406 ED56                                 l2192 EAE4  
                               l2280 EAD0                                 l2096 F17E  
                               l2088 F168                                 l2184 ED28  
                               l2176 ECE4                                 l2168 ECC2  
                               l2336 F3E2                                 l2328 F3B8  
                               l2248 EC38                                 l2424 ED9E  
                               l2416 ED86                                 l2408 ED6A  
                               l2432 EDBC                                 l2194 EAF2  
                               l2186 EA2A                                 l2290 EA02  
                               l2098 F180                                 l2178 ED0A  
                               l2338 F3EA                                 l2282 EBAA  
                               l2434 EDC0                                 l2426 EDAE  
                               l2418 ED88                                 l2196 EAF4  
                               l2188 EAD6                                 l2276 EAB8  
                               l2292 EA5C                                 l1900 EF46  
                               l2284 EB46                                 l2428 EDB2  
                               l2198 EA06                                 l2278 EACC  
                               l1902 EF68                                 l2286 EB46  
                               l2296 EA10                                 l1920 EFB6  
                               l1912 EF72                                 l1904 EF68  
                               l2288 EB5C                                 l2298 EA16  
                               l1850 EAA0                                 l1922 EFB6  
                               l1914 EF8A                                 l1906 EF6A  
                               l1930 F194                                 l1852 EAA2  
                               l1860 F000                                 l1924 EFBC  
                               l1916 EFA6                                 l1940 F1C4  
                               l1932 F1A0                                 l1870 F026  
                               l1862 F004                                 l1854 EFE6  
                               l1926 EFC2                                 l1918 EFAC  
                               l1950 F238                                 l2398 ED42  
                               l1880 F05C                                 l1872 F038  
                               l1864 F012                                 l1856 EFEA  
                               l1928 EFC6                                 l1952 F23C  
                               l1882 F072                                 l1874 F040  
                               l1890 F088                                 l1866 F01A  
                               l1858 EFF8                                 l1954 F258  
                               l1946 F1CC                                 l1938 F1A8  
                               l1970 EB76                                 l1892 F098  
                               l1884 F07A                                 l1876 F048  
                               l1868 F01E                                 l1964 F280  
                               l1956 F25C                                 l1948 F204  
                               l1980 EB8C                                 l1972 EB7E  
                               l1894 F0A0                                 l1886 F07C  
                               l1878 F056                                 l1966 F2A0  
                               l1958 F278                                 l1990 EB98  
                               l1982 EB8E                                 l1974 EB82  
                               l1888 F082                                 l1968 F2A4  
                               l1992 EB9C                                 l1984 EB90  
                               l1976 EB86                                 l1898 EF26  
                               l1994 EB9E                                 l1986 EB92  
                               l1978 EB8A                                 l1996 F3F2  
                               l1988 EB94                                 l1998 F406  
                               u1000 F4B2                                 u1001 F4AE  
                               u1010 F4C0                                 u1011 F4BC  
                               u1100 EE88                                 u1020 F4FA  
                               u1101 EE84                                 u1021 F4F6  
                               u1110 EEA2                                 u1030 F50C  
                               u1111 EE9E                                 u1031 F508  
                               u1120 EEBC                                 u1040 F528  
                               u1200 EC9C                                 u1121 EEB8  
                               u1041 F524                                 u1201 EC98  
                               u1130 EEDA                                 u1210 ECBC  
                               u1050 F0F6                                 u1131 EED6  
                               u1211 ECB6                                 u1051 F0F2  
                               u1140 EEF0                                 u1220 ECBE  
                               u1060 F144                                 u1300 F34E  
                               u1141 EEEC                                 u1061 F140  
                               u1301 F34A                                 u1150 EF14  
                               u1070 F160                                 u1310 F380  
                               u1230 EC64                                 u1151 EF10  
                               u1071 F15C                                 u1311 F37C  
                               u1231 EC60                                 u1160 EC10  
                               u1320 F392                                 u1161 EC0C  
                               u1321 F38E                                 u1170 EE6C  
                               u1090 F192                                 u1330 F3D8  
                               u1171 EE68                                 u1091 F18E  
                               u1331 F3D4                                 u1260 EA6C  
                               u1180 ED1C                                 u1261 EA66  
                               u1085 F17C                                 u1181 ED18  
                               _LATA 0F89                                 u1190 EC84  
                               u1086 F17E                                 u1270 F2D0  
                               _LATB 0F8A                                 u1191 EC80  
                               u1271 F2CC                                 _LATC 0F8B  
                               u1280 F2F8                                 u1281 F2F4  
                               u1266 EA6E                                 u1290 F326  
                               u1450 ED6A                                 u1291 F322  
                               u1507 F2DC                                 u1451 ED66  
                               u1460 ED82                                 u1517 F332  
                               u1461 ED7E                                 u1470 ED98  
                               u1527 F3AA                                 u1471 ED94  
                               u1480 EDAE                                 u1481 EDAA  
                               _TMR2 0FCC                                 _WPUB 0F7C  
                               _main ED42                      _TMR0_StartTimer EA02  
                               fsr1h 0FE2                                 fsr2h 0FDA  
                               indf1 0FE7                                 indf2 0FDF  
                               fsr1l 0FE1                                 fsr2l 0FD9  
                       printString@i 004D                         printString@j 0051  
                       printString@k 004F                    ?_FLASH_WriteBlock 0006  
                               prodl 0FF3                                 start 0000  
             __end_of_SPI_Initialize EA38                         ?_flushBuffer 0001  
                 ??_FLASH_WriteBlock 000B                         ___param_bank 0000  
               __end_of_clearDisplay EC16              __end_of_PWM2_Initialize EA2A  
            __end_of_TMR0_Initialize EB46        __end_of_OSCILLATOR_Initialize EA10  
                              ?_main 0001                      __end_of___awdiv F0AA  
                  ??_saveTimeToFlash 0020                                _EEADR 0FA9  
                    __end_of___awmod EF26                                _ANSEL 0F7E  
                              _T0CON 0FD5                      ___awdiv@divisor 0003  
                              _T2CON 0FCA                      ___awdiv@counter 0005  
                              _RCREG 0FAE                                _RCSTA 0FAB  
                              _TMR0H 0FD7                                _TMR0L 0FD6  
                              _SPBRG 0FAF                                _TRISA 0F92  
                              _TRISB 0F93                                _TRISC 0F94  
                              _TXREG 0FAD                                _TXSTA 0FAC  
                              _hours 005F                         displayTime@i 005D  
               __end_of_blinkDisplay ECC2                     _button3PressTime 00A2  
                    max7219_cmd@Addr 0005                                tablat 0FF5  
                    max7219_cmd@data 0002                                status 0FD8  
                    ?_SPI_Initialize 0001                      __initialization EA86  
                       __end_of_main EDCC              FLASH_ReadByte@flashAddr 0001  
                FLASH_WriteByte@byte 0019              __end_of_TMR2_Initialize EA4A  
                             ??_main 005F                        __activetblptr 0002  
           __end_of_SPI_Exchange8bit EAB8              __end_of_TMR0_StartTimer EA06  
          FLASH_WriteBlock@writeAddr 0006                               _EEADRH 0FAA  
                             _EEDATA 0FA8                               _CCPR2H 0FBC  
                             _CCPR2L 0FBB                               _EECON2 0FA7  
                   ___awdiv@dividend 0001                               _ANSELH 0F7F  
                             _TABLAT 0FF5                               _OSCCON 0FD3  
                             _SPBRGH 0FB0                               _SSPADD 0FC8  
                             _SSPBUF 0FC9                         ?_TMR0_Reload 0001  
                          ??___awdiv 0005                            ??___awmod 0005  
                   ?_TMR0_Initialize 0001                     ?_PWM2_Initialize 0001  
                             clear_0 EA8C                     ___awdiv@quotient 0007  
                    ___awmod@divisor 0003                               isa$std 0001  
                    ___awmod@counter 0005                     flushBuffer@F2561 0060  
              displayTime@timeString 0058                       printString@str 0041  
        FLASH_WriteBlock@dataCounter 0012                         __mediumconst F52E  
                             tblptrh 0FF7                               tblptrl 0FF6  
                             tblptru 0FF8                         _checkButtons F2C2  
                       ?_printString 0041                    _SYSTEM_Initialize EAB8  
                         __accesstop 0060              __end_of__initialization EA94  
                 ?_SYSTEM_Initialize 0001                        ___rparam_used 0001  
                   FLASH_WriteByte@i 001F                       __pcstackCOMRAM 0001  
                ??_SYSTEM_Initialize 0003                         _alarmMinutes 00AA  
                   ?_TMR2_Initialize 0001      __end_of_MAX7219_Dot_Matrix_font FD2F  
        FLASH_WriteBlock@GIEBitValue 000F                         _clearDisplay EBDE  
                   ?_TMR0_StartTimer 0001            __end_of_SYSTEM_Initialize EAD6  
                     flushBuffer@dev 0039                       flushBuffer@row 003D  
                         __pbssBANK0 0060                           _alarmHours 00AB  
                       flushBuffer@i 003F                         flushBuffer@j 003B  
                    _saveTimeToFlash EAF8                           _blinkTimer 00A4  
                            _CCP2CON 0FBA                         _blinkDisplay EC68  
                            _BAUDCON 0FB8                       _FLASH_ReadByte EA4A  
                            _TBLPTRH 0FF7                              _TBLPTRL 0FF6  
                            _TBLPTRU 0FF8                              _OSCTUNE 0F9B  
                            _SSPCON1 0FC6                              _SSPSTAT 0FC7  
            _TMR0_HasOverflowOccured EA5C                     _FLASH_EraseBlock EB76  
                   ??_SPI_Initialize 0001                              __Hparam 0000  
                            __Lparam 0000                              ___awdiv EFE6  
                            ___awmod EE76                     _isButton3Pressed 00A6  
       FLASH_WriteByte@flashRdBufPtr 0018               __end_of_FLASH_ReadByte EA5C  
                            __pcinit EA86                              __ramtop 1000  
                         _matrixInit EBAA                              __ptext0 ED42  
                            __ptext1 EBAA                              __ptext2 EC16  
                            __ptext3 EB46                              __ptext4 F2C2  
                            __ptext5 EAF8                              __ptext6 ECC2  
                            __ptext7 F0AA                              __ptext8 EB76  
                            __ptext9 EA4A                            _T0CONbits 0FD5  
                      ??_max7219_cmd 0003                _OSCILLATOR_Initialize EA06  
                          _T2CONbits 0FCA                     ___awmod@dividend 0001  
                  __end_of_max_write EFE6                              _minutes 00AD  
           ??_PIN_MANAGER_Initialize 0001                              _seconds 00AC  
                  ?_SPI_Exchange8bit 0001                 end_of_initialization EA94  
                    printString@data 004A                   ??_SPI_Exchange8bit 0001  
                    printString@indx 0048                 SPI_Exchange8bit@data 0001  
            __end_of_saveTimeToFlash EB1E                        __Lmediumconst F52E  
                  _EUSART_Initialize EA70                         max_write@dev 0012  
                 ?_EUSART_Initialize 0001                         max_write@row 0009  
                          _RCSTAbits 0FAB                              postinc0 0FEE  
                            postinc2 0FDE                      ?_FLASH_ReadByte 0001  
                ??_EUSART_Initialize 0001                    _loadTimeFromFlash EB46  
                          _PORTBbits 0F81                        clearDisplay@i 0041  
                 ?_loadTimeFromFlash 0001            ??_TMR0_HasOverflowOccured 0001  
      FLASH_WriteBlock@flashWrBufPtr 000A                  ??_loadTimeFromFlash 0005  
                __end_of_max7219_cmd EC68             FLASH_EraseBlock@baseAddr 0001  
          __end_of_EUSART_Initialize EA86                            _TXSTAbits 0FAC  
                  FLASH_WriteBlock@i 0013                    FLASH_WriteBlock@j 0010  
                  ??_FLASH_WriteByte 001A                        ??_displayTime 0053  
          __end_of_loadTimeFromFlash EB76                          ?_matrixInit 0001  
                   _FLASH_WriteBlock F0AA               ?_OSCILLATOR_Initialize 0001  
                start_initialization EA86        FLASH_WriteByte@blockStartAddr 001B  
                   ?_saveTimeToFlash 0001                FLASH_WriteByte@offset 001A  
                 printString@strindx 004B                        ??_flushBuffer 0016  
        FLASH_EraseBlock@GIEBitValue 0005             __end_of_FLASH_EraseBlock EBAA  
                __end_of_displayTime EE76                          _max7219_cmd EC16  
                        __pbssCOMRAM 005F                          _alarmActive 00A8  
           FLASH_WriteByte@flashAddr 0014                        __pcstackBANK0 00AE  
                       max7219_cmd@i 0008              _MAX7219_Dot_Matrix_font F52F  
             _PIN_MANAGER_Initialize EAD6                        __pmediumconst F52E  
                           ?___awdiv 0001                             ?___awmod 0001  
                __end_of_flushBuffer F2C2                            _bufferCol 0080  
                          _max_write EF26       FLASH_WriteBlock@blockStartAddr 000B  
                  ??_TMR0_Initialize 0001                    ??_PWM2_Initialize 0001  
                           _LATCbits 0F8B                      max_write@offset 000E  
                           _PIR1bits 0F9E                     ??_FLASH_ReadByte 0005  
                           _PIR2bits 0FA1                        ??_TMR0_Reload 0001  
                        _displayTime EDCC                        ?_checkButtons 0001  
                        _INTCON2bits 0FF1                           ?_max_write 0009  
                    _FLASH_WriteByte ECC2                        ??_printString 0042  
                  ??_TMR2_Initialize 0001             __end_of_FLASH_WriteBlock F194  
                         _EECON1bits 0FA6                             __Hrparam 0000  
                        _flushBuffer F194                             __Lrparam 0000  
                 max_write@devTarget 0010              ??_OSCILLATOR_Initialize 0001  
                  ??_TMR0_StartTimer 0001                         ??_matrixInit 000A  
                __end_of_TMR0_Reload EA1C                             _alarmSet 00A9  
                     ??_checkButtons 00AE                        ?_clearDisplay 0001  
                           __ptext10 EC68                             __ptext11 EDCC  
                           __ptext20 EA10                             __ptext12 F3F2  
                           __ptext21 EA5C                             __ptext13 EE76  
                           __ptext22 EAB8                             __ptext14 EBDE  
                           __ptext23 EA38                             __ptext15 F194  
                           __ptext24 EB1E                             __ptext16 EF26  
                           __ptext25 EA2A                             __ptext17 EFE6  
                           __ptext26 EA1C                             __ptext18 EA9E  
                           __ptext27 EAD6                             __ptext19 EA02  
                           __ptext28 EA06                             __ptext29 EA70  
                 __end_of_matrixInit EBDE                  __end_of_printString F52E  
               flushBuffer@bufferRow 0019                      _displayBlinking 00A7  
                           isa$xinst 0000                 max7219_cmd@writeData 0006  
                      ?_blinkDisplay 0001                    ?_FLASH_EraseBlock 0001  
FLASH_WriteBlock@numberOfWriteBlocks 0011             ?_TMR0_HasOverflowOccured 0001  
                       ?_max7219_cmd 0002                   ??_FLASH_EraseBlock 0005  
            __end_of_FLASH_WriteByte ED42                           _INTCONbits 0FF2  
                     ??_clearDisplay 0041                   max_write@writeData 0014  
                        ??_max_write 000C              ?_PIN_MANAGER_Initialize 0001  
                      max_write@data 000B                     _SPI_Exchange8bit EA9E  
                        _TMR0_Reload EA10                       ??_blinkDisplay 005F  
           displayTime@displayString 0053                      _TMR0_Initialize EB1E  
                    _PWM2_Initialize EA1C                          _SSPCON1bits 0FC6  
     __end_of_PIN_MANAGER_Initialize EAF8                          _printString F3F2  
            saveTimeToFlash@timeData 0020  
