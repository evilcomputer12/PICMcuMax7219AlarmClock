

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Thu Sep 12 01:01:27 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F26K20
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1,lowdata
    59                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    60                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    61   000000                     
    62                           ; Generated 05/01/2024 GMT
    63                           ; 
    64                           ; Copyright Â© 2024, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution. Publication is not required when
    78                           ;        this file is used in an embedded application.
    79                           ; 
    80                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    81                           ;        software without specific prior written permission.
    82                           ; 
    83                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    84                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    85                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    86                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    87                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    88                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    89                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    90                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    91                           ; 
    92                           ; 
    93                           ; Code-generator required, PIC18F26K20 Definitions
    94                           ; 
    95                           ; SFR Addresses
    96   000000                     
    97 ;; Function _EUSART_Transmit_ISR is unused but had its address taken
    98   000000                     
    99 ;; Function _EUSART_Receive_ISR is unused but had its address taken
   100   000000                     
   101                           	psect	mediumconst
   102   00F528                     __pmediumconst:
   103                           	callstack 0
   104   00F528  00                 	db	0
   105   00F529                     _MAX7219_Dot_Matrix_font:
   106                           	callstack 0
   107   00F529  00                 	db	0
   108   00F52A  00                 	db	0
   109   00F52B  00                 	db	0
   110   00F52C  00                 	db	0
   111   00F52D  00                 	db	0
   112   00F52E  00                 	db	0
   113   00F52F  00                 	db	0
   114   00F530  00                 	db	0
   115   00F531  7E                 	db	126
   116   00F532  81                 	db	129
   117   00F533  95                 	db	149
   118   00F534  B1                 	db	177
   119   00F535  B1                 	db	177
   120   00F536  95                 	db	149
   121   00F537  81                 	db	129
   122   00F538  7E                 	db	126
   123   00F539  7E                 	db	126
   124   00F53A  FF                 	db	255
   125   00F53B  EB                 	db	235
   126   00F53C  CF                 	db	207
   127   00F53D  CF                 	db	207
   128   00F53E  EB                 	db	235
   129   00F53F  FF                 	db	255
   130   00F540  7E                 	db	126
   131   00F541  0E                 	db	14
   132   00F542  1F                 	db	31
   133   00F543  3F                 	db	63
   134   00F544  7E                 	db	126
   135   00F545  3F                 	db	63
   136   00F546  1F                 	db	31
   137   00F547  0E                 	db	14
   138   00F548  00                 	db	0
   139   00F549  08                 	db	8
   140   00F54A  1C                 	db	28
   141   00F54B  3E                 	db	62
   142   00F54C  7F                 	db	127
   143   00F54D  3E                 	db	62
   144   00F54E  1C                 	db	28
   145   00F54F  08                 	db	8
   146   00F550  00                 	db	0
   147   00F551  18                 	db	24
   148   00F552  BA                 	db	186
   149   00F553  FF                 	db	255
   150   00F554  FF                 	db	255
   151   00F555  FF                 	db	255
   152   00F556  BA                 	db	186
   153   00F557  18                 	db	24
   154   00F558  00                 	db	0
   155   00F559  10                 	db	16
   156   00F55A  B8                 	db	184
   157   00F55B  FC                 	db	252
   158   00F55C  FF                 	db	255
   159   00F55D  FC                 	db	252
   160   00F55E  B8                 	db	184
   161   00F55F  10                 	db	16
   162   00F560  00                 	db	0
   163   00F561  00                 	db	0
   164   00F562  00                 	db	0
   165   00F563  18                 	db	24
   166   00F564  3C                 	db	60
   167   00F565  3C                 	db	60
   168   00F566  18                 	db	24
   169   00F567  00                 	db	0
   170   00F568  00                 	db	0
   171   00F569  FF                 	db	255
   172   00F56A  FF                 	db	255
   173   00F56B  E7                 	db	231
   174   00F56C  C3                 	db	195
   175   00F56D  C3                 	db	195
   176   00F56E  E7                 	db	231
   177   00F56F  FF                 	db	255
   178   00F570  FF                 	db	255
   179   00F571  00                 	db	0
   180   00F572  3C                 	db	60
   181   00F573  66                 	db	102
   182   00F574  42                 	db	66
   183   00F575  42                 	db	66
   184   00F576  66                 	db	102
   185   00F577  3C                 	db	60
   186   00F578  00                 	db	0
   187   00F579  FF                 	db	255
   188   00F57A  C3                 	db	195
   189   00F57B  99                 	db	153
   190   00F57C  BD                 	db	189
   191   00F57D  BD                 	db	189
   192   00F57E  99                 	db	153
   193   00F57F  C3                 	db	195
   194   00F580  FF                 	db	255
   195   00F581  70                 	db	112
   196   00F582  F8                 	db	248
   197   00F583  88                 	db	136
   198   00F584  88                 	db	136
   199   00F585  FD                 	db	253
   200   00F586  7F                 	db	127
   201   00F587  07                 	db	7
   202   00F588  0F                 	db	15
   203   00F589  00                 	db	0
   204   00F58A  4E                 	db	78
   205   00F58B  5F                 	db	95
   206   00F58C  F1                 	db	241
   207   00F58D  F1                 	db	241
   208   00F58E  5F                 	db	95
   209   00F58F  4E                 	db	78
   210   00F590  00                 	db	0
   211   00F591  C0                 	db	192
   212   00F592  E0                 	db	224
   213   00F593  FF                 	db	255
   214   00F594  7F                 	db	127
   215   00F595  05                 	db	5
   216   00F596  05                 	db	5
   217   00F597  07                 	db	7
   218   00F598  07                 	db	7
   219   00F599  C0                 	db	192
   220   00F59A  FF                 	db	255
   221   00F59B  7F                 	db	127
   222   00F59C  05                 	db	5
   223   00F59D  05                 	db	5
   224   00F59E  65                 	db	101
   225   00F59F  7F                 	db	127
   226   00F5A0  3F                 	db	63
   227   00F5A1  99                 	db	153
   228   00F5A2  5A                 	db	90
   229   00F5A3  3C                 	db	60
   230   00F5A4  E7                 	db	231
   231   00F5A5  E7                 	db	231
   232   00F5A6  3C                 	db	60
   233   00F5A7  5A                 	db	90
   234   00F5A8  99                 	db	153
   235   00F5A9  7F                 	db	127
   236   00F5AA  3E                 	db	62
   237   00F5AB  3E                 	db	62
   238   00F5AC  1C                 	db	28
   239   00F5AD  1C                 	db	28
   240   00F5AE  08                 	db	8
   241   00F5AF  08                 	db	8
   242   00F5B0  00                 	db	0
   243   00F5B1  08                 	db	8
   244   00F5B2  08                 	db	8
   245   00F5B3  1C                 	db	28
   246   00F5B4  1C                 	db	28
   247   00F5B5  3E                 	db	62
   248   00F5B6  3E                 	db	62
   249   00F5B7  7F                 	db	127
   250   00F5B8  00                 	db	0
   251   00F5B9  00                 	db	0
   252   00F5BA  24                 	db	36
   253   00F5BB  66                 	db	102
   254   00F5BC  FF                 	db	255
   255   00F5BD  FF                 	db	255
   256   00F5BE  66                 	db	102
   257   00F5BF  24                 	db	36
   258   00F5C0  00                 	db	0
   259   00F5C1  00                 	db	0
   260   00F5C2  5F                 	db	95
   261   00F5C3  5F                 	db	95
   262   00F5C4  00                 	db	0
   263   00F5C5  00                 	db	0
   264   00F5C6  5F                 	db	95
   265   00F5C7  5F                 	db	95
   266   00F5C8  00                 	db	0
   267   00F5C9  06                 	db	6
   268   00F5CA  0F                 	db	15
   269   00F5CB  09                 	db	9
   270   00F5CC  7F                 	db	127
   271   00F5CD  7F                 	db	127
   272   00F5CE  01                 	db	1
   273   00F5CF  7F                 	db	127
   274   00F5D0  7F                 	db	127
   275   00F5D1  40                 	db	64
   276   00F5D2  DA                 	db	218
   277   00F5D3  BF                 	db	191
   278   00F5D4  A5                 	db	165
   279   00F5D5  FD                 	db	253
   280   00F5D6  59                 	db	89
   281   00F5D7  03                 	db	3
   282   00F5D8  02                 	db	2
   283   00F5D9  00                 	db	0
   284   00F5DA  70                 	db	112
   285   00F5DB  70                 	db	112
   286   00F5DC  70                 	db	112
   287   00F5DD  70                 	db	112
   288   00F5DE  70                 	db	112
   289   00F5DF  70                 	db	112
   290   00F5E0  00                 	db	0
   291   00F5E1  80                 	db	128
   292   00F5E2  94                 	db	148
   293   00F5E3  B6                 	db	182
   294   00F5E4  FF                 	db	255
   295   00F5E5  FF                 	db	255
   296   00F5E6  B6                 	db	182
   297   00F5E7  94                 	db	148
   298   00F5E8  80                 	db	128
   299   00F5E9  00                 	db	0
   300   00F5EA  04                 	db	4
   301   00F5EB  06                 	db	6
   302   00F5EC  7F                 	db	127
   303   00F5ED  7F                 	db	127
   304   00F5EE  06                 	db	6
   305   00F5EF  04                 	db	4
   306   00F5F0  00                 	db	0
   307   00F5F1  00                 	db	0
   308   00F5F2  10                 	db	16
   309   00F5F3  30                 	db	48
   310   00F5F4  7F                 	db	127
   311   00F5F5  7F                 	db	127
   312   00F5F6  30                 	db	48
   313   00F5F7  10                 	db	16
   314   00F5F8  00                 	db	0
   315   00F5F9  08                 	db	8
   316   00F5FA  08                 	db	8
   317   00F5FB  08                 	db	8
   318   00F5FC  2A                 	db	42
   319   00F5FD  3E                 	db	62
   320   00F5FE  1C                 	db	28
   321   00F5FF  08                 	db	8
   322   00F600  00                 	db	0
   323   00F601  08                 	db	8
   324   00F602  1C                 	db	28
   325   00F603  3E                 	db	62
   326   00F604  2A                 	db	42
   327   00F605  08                 	db	8
   328   00F606  08                 	db	8
   329   00F607  08                 	db	8
   330   00F608  00                 	db	0
   331   00F609  3C                 	db	60
   332   00F60A  3C                 	db	60
   333   00F60B  20                 	db	32
   334   00F60C  20                 	db	32
   335   00F60D  20                 	db	32
   336   00F60E  20                 	db	32
   337   00F60F  20                 	db	32
   338   00F610  00                 	db	0
   339   00F611  08                 	db	8
   340   00F612  1C                 	db	28
   341   00F613  3E                 	db	62
   342   00F614  08                 	db	8
   343   00F615  08                 	db	8
   344   00F616  3E                 	db	62
   345   00F617  1C                 	db	28
   346   00F618  08                 	db	8
   347   00F619  30                 	db	48
   348   00F61A  38                 	db	56
   349   00F61B  3C                 	db	60
   350   00F61C  3E                 	db	62
   351   00F61D  3E                 	db	62
   352   00F61E  3C                 	db	60
   353   00F61F  38                 	db	56
   354   00F620  30                 	db	48
   355   00F621  06                 	db	6
   356   00F622  0E                 	db	14
   357   00F623  1E                 	db	30
   358   00F624  3E                 	db	62
   359   00F625  3E                 	db	62
   360   00F626  1E                 	db	30
   361   00F627  0E                 	db	14
   362   00F628  06                 	db	6
   363   00F629  00                 	db	0
   364   00F62A  00                 	db	0
   365   00F62B  00                 	db	0
   366   00F62C  00                 	db	0
   367   00F62D  00                 	db	0
   368   00F62E  00                 	db	0
   369   00F62F  00                 	db	0
   370   00F630  00                 	db	0
   371   00F631  00                 	db	0
   372   00F632  06                 	db	6
   373   00F633  5F                 	db	95
   374   00F634  5F                 	db	95
   375   00F635  06                 	db	6
   376   00F636  00                 	db	0
   377   00F637  00                 	db	0
   378   00F638  00                 	db	0
   379   00F639  00                 	db	0
   380   00F63A  07                 	db	7
   381   00F63B  07                 	db	7
   382   00F63C  00                 	db	0
   383   00F63D  07                 	db	7
   384   00F63E  07                 	db	7
   385   00F63F  00                 	db	0
   386   00F640  00                 	db	0
   387   00F641  14                 	db	20
   388   00F642  7F                 	db	127
   389   00F643  7F                 	db	127
   390   00F644  14                 	db	20
   391   00F645  7F                 	db	127
   392   00F646  7F                 	db	127
   393   00F647  14                 	db	20
   394   00F648  00                 	db	0
   395   00F649  24                 	db	36
   396   00F64A  2E                 	db	46
   397   00F64B  6B                 	db	107
   398   00F64C  6B                 	db	107
   399   00F64D  3A                 	db	58
   400   00F64E  12                 	db	18
   401   00F64F  00                 	db	0
   402   00F650  00                 	db	0
   403   00F651  46                 	db	70
   404   00F652  66                 	db	102
   405   00F653  30                 	db	48
   406   00F654  18                 	db	24
   407   00F655  0C                 	db	12
   408   00F656  66                 	db	102
   409   00F657  62                 	db	98
   410   00F658  00                 	db	0
   411   00F659  30                 	db	48
   412   00F65A  7A                 	db	122
   413   00F65B  4F                 	db	79
   414   00F65C  5D                 	db	93
   415   00F65D  37                 	db	55
   416   00F65E  7A                 	db	122
   417   00F65F  48                 	db	72
   418   00F660  00                 	db	0
   419   00F661  04                 	db	4
   420   00F662  07                 	db	7
   421   00F663  03                 	db	3
   422   00F664  00                 	db	0
   423   00F665  00                 	db	0
   424   00F666  00                 	db	0
   425   00F667  00                 	db	0
   426   00F668  00                 	db	0
   427   00F669  00                 	db	0
   428   00F66A  1C                 	db	28
   429   00F66B  3E                 	db	62
   430   00F66C  63                 	db	99
   431   00F66D  41                 	db	65
   432   00F66E  00                 	db	0
   433   00F66F  00                 	db	0
   434   00F670  00                 	db	0
   435   00F671  00                 	db	0
   436   00F672  41                 	db	65
   437   00F673  63                 	db	99
   438   00F674  3E                 	db	62
   439   00F675  1C                 	db	28
   440   00F676  00                 	db	0
   441   00F677  00                 	db	0
   442   00F678  00                 	db	0
   443   00F679  08                 	db	8
   444   00F67A  2A                 	db	42
   445   00F67B  3E                 	db	62
   446   00F67C  1C                 	db	28
   447   00F67D  1C                 	db	28
   448   00F67E  3E                 	db	62
   449   00F67F  2A                 	db	42
   450   00F680  08                 	db	8
   451   00F681  08                 	db	8
   452   00F682  08                 	db	8
   453   00F683  3E                 	db	62
   454   00F684  3E                 	db	62
   455   00F685  08                 	db	8
   456   00F686  08                 	db	8
   457   00F687  00                 	db	0
   458   00F688  00                 	db	0
   459   00F689  00                 	db	0
   460   00F68A  80                 	db	128
   461   00F68B  E0                 	db	224
   462   00F68C  60                 	db	96
   463   00F68D  00                 	db	0
   464   00F68E  00                 	db	0
   465   00F68F  00                 	db	0
   466   00F690  00                 	db	0
   467   00F691  08                 	db	8
   468   00F692  08                 	db	8
   469   00F693  08                 	db	8
   470   00F694  08                 	db	8
   471   00F695  08                 	db	8
   472   00F696  08                 	db	8
   473   00F697  00                 	db	0
   474   00F698  00                 	db	0
   475   00F699  00                 	db	0
   476   00F69A  00                 	db	0
   477   00F69B  60                 	db	96
   478   00F69C  60                 	db	96
   479   00F69D  00                 	db	0
   480   00F69E  00                 	db	0
   481   00F69F  00                 	db	0
   482   00F6A0  00                 	db	0
   483   00F6A1  60                 	db	96
   484   00F6A2  30                 	db	48
   485   00F6A3  18                 	db	24
   486   00F6A4  0C                 	db	12
   487   00F6A5  06                 	db	6
   488   00F6A6  03                 	db	3
   489   00F6A7  01                 	db	1
   490   00F6A8  00                 	db	0
   491   00F6A9  3E                 	db	62
   492   00F6AA  7F                 	db	127
   493   00F6AB  71                 	db	113
   494   00F6AC  59                 	db	89
   495   00F6AD  4D                 	db	77
   496   00F6AE  7F                 	db	127
   497   00F6AF  3E                 	db	62
   498   00F6B0  00                 	db	0
   499   00F6B1  40                 	db	64
   500   00F6B2  42                 	db	66
   501   00F6B3  7F                 	db	127
   502   00F6B4  7F                 	db	127
   503   00F6B5  40                 	db	64
   504   00F6B6  40                 	db	64
   505   00F6B7  00                 	db	0
   506   00F6B8  00                 	db	0
   507   00F6B9  62                 	db	98
   508   00F6BA  73                 	db	115
   509   00F6BB  59                 	db	89
   510   00F6BC  49                 	db	73
   511   00F6BD  6F                 	db	111
   512   00F6BE  66                 	db	102
   513   00F6BF  00                 	db	0
   514   00F6C0  00                 	db	0
   515   00F6C1  22                 	db	34
   516   00F6C2  63                 	db	99
   517   00F6C3  49                 	db	73
   518   00F6C4  49                 	db	73
   519   00F6C5  7F                 	db	127
   520   00F6C6  36                 	db	54
   521   00F6C7  00                 	db	0
   522   00F6C8  00                 	db	0
   523   00F6C9  18                 	db	24
   524   00F6CA  1C                 	db	28
   525   00F6CB  16                 	db	22
   526   00F6CC  53                 	db	83
   527   00F6CD  7F                 	db	127
   528   00F6CE  7F                 	db	127
   529   00F6CF  50                 	db	80
   530   00F6D0  00                 	db	0
   531   00F6D1  27                 	db	39
   532   00F6D2  67                 	db	103
   533   00F6D3  45                 	db	69
   534   00F6D4  45                 	db	69
   535   00F6D5  7D                 	db	125
   536   00F6D6  39                 	db	57
   537   00F6D7  00                 	db	0
   538   00F6D8  00                 	db	0
   539   00F6D9  3C                 	db	60
   540   00F6DA  7E                 	db	126
   541   00F6DB  4B                 	db	75
   542   00F6DC  49                 	db	73
   543   00F6DD  79                 	db	121
   544   00F6DE  30                 	db	48
   545   00F6DF  00                 	db	0
   546   00F6E0  00                 	db	0
   547   00F6E1  03                 	db	3
   548   00F6E2  03                 	db	3
   549   00F6E3  71                 	db	113
   550   00F6E4  79                 	db	121
   551   00F6E5  0F                 	db	15
   552   00F6E6  07                 	db	7
   553   00F6E7  00                 	db	0
   554   00F6E8  00                 	db	0
   555   00F6E9  36                 	db	54
   556   00F6EA  7F                 	db	127
   557   00F6EB  49                 	db	73
   558   00F6EC  49                 	db	73
   559   00F6ED  7F                 	db	127
   560   00F6EE  36                 	db	54
   561   00F6EF  00                 	db	0
   562   00F6F0  00                 	db	0
   563   00F6F1  06                 	db	6
   564   00F6F2  4F                 	db	79
   565   00F6F3  49                 	db	73
   566   00F6F4  69                 	db	105
   567   00F6F5  3F                 	db	63
   568   00F6F6  1E                 	db	30
   569   00F6F7  00                 	db	0
   570   00F6F8  00                 	db	0
   571   00F6F9  00                 	db	0
   572   00F6FA  00                 	db	0
   573   00F6FB  66                 	db	102
   574   00F6FC  66                 	db	102
   575   00F6FD  00                 	db	0
   576   00F6FE  00                 	db	0
   577   00F6FF  00                 	db	0
   578   00F700  00                 	db	0
   579   00F701  00                 	db	0
   580   00F702  80                 	db	128
   581   00F703  E6                 	db	230
   582   00F704  66                 	db	102
   583   00F705  00                 	db	0
   584   00F706  00                 	db	0
   585   00F707  00                 	db	0
   586   00F708  00                 	db	0
   587   00F709  08                 	db	8
   588   00F70A  1C                 	db	28
   589   00F70B  36                 	db	54
   590   00F70C  63                 	db	99
   591   00F70D  41                 	db	65
   592   00F70E  00                 	db	0
   593   00F70F  00                 	db	0
   594   00F710  00                 	db	0
   595   00F711  24                 	db	36
   596   00F712  24                 	db	36
   597   00F713  24                 	db	36
   598   00F714  24                 	db	36
   599   00F715  24                 	db	36
   600   00F716  24                 	db	36
   601   00F717  00                 	db	0
   602   00F718  00                 	db	0
   603   00F719  00                 	db	0
   604   00F71A  41                 	db	65
   605   00F71B  63                 	db	99
   606   00F71C  36                 	db	54
   607   00F71D  1C                 	db	28
   608   00F71E  08                 	db	8
   609   00F71F  00                 	db	0
   610   00F720  00                 	db	0
   611   00F721  02                 	db	2
   612   00F722  03                 	db	3
   613   00F723  51                 	db	81
   614   00F724  59                 	db	89
   615   00F725  0F                 	db	15
   616   00F726  06                 	db	6
   617   00F727  00                 	db	0
   618   00F728  00                 	db	0
   619   00F729  3E                 	db	62
   620   00F72A  7F                 	db	127
   621   00F72B  41                 	db	65
   622   00F72C  5D                 	db	93
   623   00F72D  5D                 	db	93
   624   00F72E  1F                 	db	31
   625   00F72F  1E                 	db	30
   626   00F730  00                 	db	0
   627   00F731  7C                 	db	124
   628   00F732  7E                 	db	126
   629   00F733  13                 	db	19
   630   00F734  13                 	db	19
   631   00F735  7E                 	db	126
   632   00F736  7C                 	db	124
   633   00F737  00                 	db	0
   634   00F738  00                 	db	0
   635   00F739  41                 	db	65
   636   00F73A  7F                 	db	127
   637   00F73B  7F                 	db	127
   638   00F73C  49                 	db	73
   639   00F73D  49                 	db	73
   640   00F73E  7F                 	db	127
   641   00F73F  36                 	db	54
   642   00F740  00                 	db	0
   643   00F741  1C                 	db	28
   644   00F742  3E                 	db	62
   645   00F743  63                 	db	99
   646   00F744  41                 	db	65
   647   00F745  41                 	db	65
   648   00F746  63                 	db	99
   649   00F747  22                 	db	34
   650   00F748  00                 	db	0
   651   00F749  41                 	db	65
   652   00F74A  7F                 	db	127
   653   00F74B  7F                 	db	127
   654   00F74C  41                 	db	65
   655   00F74D  63                 	db	99
   656   00F74E  3E                 	db	62
   657   00F74F  1C                 	db	28
   658   00F750  00                 	db	0
   659   00F751  41                 	db	65
   660   00F752  7F                 	db	127
   661   00F753  7F                 	db	127
   662   00F754  49                 	db	73
   663   00F755  5D                 	db	93
   664   00F756  41                 	db	65
   665   00F757  63                 	db	99
   666   00F758  00                 	db	0
   667   00F759  41                 	db	65
   668   00F75A  7F                 	db	127
   669   00F75B  7F                 	db	127
   670   00F75C  49                 	db	73
   671   00F75D  1D                 	db	29
   672   00F75E  01                 	db	1
   673   00F75F  03                 	db	3
   674   00F760  00                 	db	0
   675   00F761  1C                 	db	28
   676   00F762  3E                 	db	62
   677   00F763  63                 	db	99
   678   00F764  41                 	db	65
   679   00F765  51                 	db	81
   680   00F766  73                 	db	115
   681   00F767  72                 	db	114
   682   00F768  00                 	db	0
   683   00F769  7F                 	db	127
   684   00F76A  7F                 	db	127
   685   00F76B  08                 	db	8
   686   00F76C  08                 	db	8
   687   00F76D  7F                 	db	127
   688   00F76E  7F                 	db	127
   689   00F76F  00                 	db	0
   690   00F770  00                 	db	0
   691   00F771  00                 	db	0
   692   00F772  41                 	db	65
   693   00F773  7F                 	db	127
   694   00F774  7F                 	db	127
   695   00F775  41                 	db	65
   696   00F776  00                 	db	0
   697   00F777  00                 	db	0
   698   00F778  00                 	db	0
   699   00F779  30                 	db	48
   700   00F77A  70                 	db	112
   701   00F77B  40                 	db	64
   702   00F77C  41                 	db	65
   703   00F77D  7F                 	db	127
   704   00F77E  3F                 	db	63
   705   00F77F  01                 	db	1
   706   00F780  00                 	db	0
   707   00F781  41                 	db	65
   708   00F782  7F                 	db	127
   709   00F783  7F                 	db	127
   710   00F784  08                 	db	8
   711   00F785  1C                 	db	28
   712   00F786  77                 	db	119
   713   00F787  63                 	db	99
   714   00F788  00                 	db	0
   715   00F789  41                 	db	65
   716   00F78A  7F                 	db	127
   717   00F78B  7F                 	db	127
   718   00F78C  41                 	db	65
   719   00F78D  40                 	db	64
   720   00F78E  60                 	db	96
   721   00F78F  70                 	db	112
   722   00F790  00                 	db	0
   723   00F791  00                 	db	0
   724   00F792  7F                 	db	127
   725   00F793  0E                 	db	14
   726   00F794  1C                 	db	28
   727   00F795  0E                 	db	14
   728   00F796  7F                 	db	127
   729   00F797  00                 	db	0
   730   00F798  00                 	db	0
   731   00F799  7F                 	db	127
   732   00F79A  7F                 	db	127
   733   00F79B  06                 	db	6
   734   00F79C  0C                 	db	12
   735   00F79D  18                 	db	24
   736   00F79E  7F                 	db	127
   737   00F79F  7F                 	db	127
   738   00F7A0  00                 	db	0
   739   00F7A1  1C                 	db	28
   740   00F7A2  3E                 	db	62
   741   00F7A3  63                 	db	99
   742   00F7A4  41                 	db	65
   743   00F7A5  63                 	db	99
   744   00F7A6  3E                 	db	62
   745   00F7A7  1C                 	db	28
   746   00F7A8  00                 	db	0
   747   00F7A9  41                 	db	65
   748   00F7AA  7F                 	db	127
   749   00F7AB  7F                 	db	127
   750   00F7AC  49                 	db	73
   751   00F7AD  09                 	db	9
   752   00F7AE  0F                 	db	15
   753   00F7AF  06                 	db	6
   754   00F7B0  00                 	db	0
   755   00F7B1  1E                 	db	30
   756   00F7B2  3F                 	db	63
   757   00F7B3  21                 	db	33
   758   00F7B4  71                 	db	113
   759   00F7B5  7F                 	db	127
   760   00F7B6  5E                 	db	94
   761   00F7B7  00                 	db	0
   762   00F7B8  00                 	db	0
   763   00F7B9  41                 	db	65
   764   00F7BA  7F                 	db	127
   765   00F7BB  7F                 	db	127
   766   00F7BC  09                 	db	9
   767   00F7BD  19                 	db	25
   768   00F7BE  7F                 	db	127
   769   00F7BF  66                 	db	102
   770   00F7C0  00                 	db	0
   771   00F7C1  26                 	db	38
   772   00F7C2  6F                 	db	111
   773   00F7C3  4D                 	db	77
   774   00F7C4  59                 	db	89
   775   00F7C5  73                 	db	115
   776   00F7C6  32                 	db	50
   777   00F7C7  00                 	db	0
   778   00F7C8  00                 	db	0
   779   00F7C9  03                 	db	3
   780   00F7CA  41                 	db	65
   781   00F7CB  7F                 	db	127
   782   00F7CC  7F                 	db	127
   783   00F7CD  41                 	db	65
   784   00F7CE  03                 	db	3
   785   00F7CF  00                 	db	0
   786   00F7D0  00                 	db	0
   787   00F7D1  7F                 	db	127
   788   00F7D2  7F                 	db	127
   789   00F7D3  40                 	db	64
   790   00F7D4  40                 	db	64
   791   00F7D5  7F                 	db	127
   792   00F7D6  7F                 	db	127
   793   00F7D7  00                 	db	0
   794   00F7D8  00                 	db	0
   795   00F7D9  1F                 	db	31
   796   00F7DA  3F                 	db	63
   797   00F7DB  60                 	db	96
   798   00F7DC  60                 	db	96
   799   00F7DD  3F                 	db	63
   800   00F7DE  1F                 	db	31
   801   00F7DF  00                 	db	0
   802   00F7E0  00                 	db	0
   803   00F7E1  7F                 	db	127
   804   00F7E2  7F                 	db	127
   805   00F7E3  30                 	db	48
   806   00F7E4  18                 	db	24
   807   00F7E5  30                 	db	48
   808   00F7E6  7F                 	db	127
   809   00F7E7  7F                 	db	127
   810   00F7E8  00                 	db	0
   811   00F7E9  43                 	db	67
   812   00F7EA  67                 	db	103
   813   00F7EB  3C                 	db	60
   814   00F7EC  18                 	db	24
   815   00F7ED  3C                 	db	60
   816   00F7EE  67                 	db	103
   817   00F7EF  43                 	db	67
   818   00F7F0  00                 	db	0
   819   00F7F1  07                 	db	7
   820   00F7F2  4F                 	db	79
   821   00F7F3  78                 	db	120
   822   00F7F4  78                 	db	120
   823   00F7F5  4F                 	db	79
   824   00F7F6  07                 	db	7
   825   00F7F7  00                 	db	0
   826   00F7F8  00                 	db	0
   827   00F7F9  47                 	db	71
   828   00F7FA  63                 	db	99
   829   00F7FB  71                 	db	113
   830   00F7FC  59                 	db	89
   831   00F7FD  4D                 	db	77
   832   00F7FE  67                 	db	103
   833   00F7FF  73                 	db	115
   834   00F800  00                 	db	0
   835   00F801  00                 	db	0
   836   00F802  7F                 	db	127
   837   00F803  7F                 	db	127
   838   00F804  41                 	db	65
   839   00F805  41                 	db	65
   840   00F806  00                 	db	0
   841   00F807  00                 	db	0
   842   00F808  00                 	db	0
   843   00F809  01                 	db	1
   844   00F80A  03                 	db	3
   845   00F80B  06                 	db	6
   846   00F80C  0C                 	db	12
   847   00F80D  18                 	db	24
   848   00F80E  30                 	db	48
   849   00F80F  60                 	db	96
   850   00F810  00                 	db	0
   851   00F811  00                 	db	0
   852   00F812  41                 	db	65
   853   00F813  41                 	db	65
   854   00F814  7F                 	db	127
   855   00F815  7F                 	db	127
   856   00F816  00                 	db	0
   857   00F817  00                 	db	0
   858   00F818  00                 	db	0
   859   00F819  08                 	db	8
   860   00F81A  0C                 	db	12
   861   00F81B  06                 	db	6
   862   00F81C  03                 	db	3
   863   00F81D  06                 	db	6
   864   00F81E  0C                 	db	12
   865   00F81F  08                 	db	8
   866   00F820  00                 	db	0
   867   00F821  80                 	db	128
   868   00F822  80                 	db	128
   869   00F823  80                 	db	128
   870   00F824  80                 	db	128
   871   00F825  80                 	db	128
   872   00F826  80                 	db	128
   873   00F827  80                 	db	128
   874   00F828  80                 	db	128
   875   00F829  00                 	db	0
   876   00F82A  00                 	db	0
   877   00F82B  03                 	db	3
   878   00F82C  07                 	db	7
   879   00F82D  04                 	db	4
   880   00F82E  00                 	db	0
   881   00F82F  00                 	db	0
   882   00F830  00                 	db	0
   883   00F831  20                 	db	32
   884   00F832  74                 	db	116
   885   00F833  54                 	db	84
   886   00F834  54                 	db	84
   887   00F835  3C                 	db	60
   888   00F836  78                 	db	120
   889   00F837  40                 	db	64
   890   00F838  00                 	db	0
   891   00F839  41                 	db	65
   892   00F83A  7F                 	db	127
   893   00F83B  3F                 	db	63
   894   00F83C  48                 	db	72
   895   00F83D  48                 	db	72
   896   00F83E  78                 	db	120
   897   00F83F  30                 	db	48
   898   00F840  00                 	db	0
   899   00F841  38                 	db	56
   900   00F842  7C                 	db	124
   901   00F843  44                 	db	68
   902   00F844  44                 	db	68
   903   00F845  6C                 	db	108
   904   00F846  28                 	db	40
   905   00F847  00                 	db	0
   906   00F848  00                 	db	0
   907   00F849  30                 	db	48
   908   00F84A  78                 	db	120
   909   00F84B  48                 	db	72
   910   00F84C  49                 	db	73
   911   00F84D  3F                 	db	63
   912   00F84E  7F                 	db	127
   913   00F84F  40                 	db	64
   914   00F850  00                 	db	0
   915   00F851  38                 	db	56
   916   00F852  7C                 	db	124
   917   00F853  54                 	db	84
   918   00F854  54                 	db	84
   919   00F855  5C                 	db	92
   920   00F856  18                 	db	24
   921   00F857  00                 	db	0
   922   00F858  00                 	db	0
   923   00F859  48                 	db	72
   924   00F85A  7E                 	db	126
   925   00F85B  7F                 	db	127
   926   00F85C  49                 	db	73
   927   00F85D  03                 	db	3
   928   00F85E  02                 	db	2
   929   00F85F  00                 	db	0
   930   00F860  00                 	db	0
   931   00F861  98                 	db	152
   932   00F862  BC                 	db	188
   933   00F863  A4                 	db	164
   934   00F864  A4                 	db	164
   935   00F865  F8                 	db	248
   936   00F866  7C                 	db	124
   937   00F867  04                 	db	4
   938   00F868  00                 	db	0
   939   00F869  41                 	db	65
   940   00F86A  7F                 	db	127
   941   00F86B  7F                 	db	127
   942   00F86C  08                 	db	8
   943   00F86D  04                 	db	4
   944   00F86E  7C                 	db	124
   945   00F86F  78                 	db	120
   946   00F870  00                 	db	0
   947   00F871  00                 	db	0
   948   00F872  44                 	db	68
   949   00F873  7D                 	db	125
   950   00F874  7D                 	db	125
   951   00F875  40                 	db	64
   952   00F876  00                 	db	0
   953   00F877  00                 	db	0
   954   00F878  00                 	db	0
   955   00F879  60                 	db	96
   956   00F87A  E0                 	db	224
   957   00F87B  80                 	db	128
   958   00F87C  80                 	db	128
   959   00F87D  FD                 	db	253
   960   00F87E  7D                 	db	125
   961   00F87F  00                 	db	0
   962   00F880  00                 	db	0
   963   00F881  41                 	db	65
   964   00F882  7F                 	db	127
   965   00F883  7F                 	db	127
   966   00F884  10                 	db	16
   967   00F885  38                 	db	56
   968   00F886  6C                 	db	108
   969   00F887  44                 	db	68
   970   00F888  00                 	db	0
   971   00F889  00                 	db	0
   972   00F88A  41                 	db	65
   973   00F88B  7F                 	db	127
   974   00F88C  7F                 	db	127
   975   00F88D  40                 	db	64
   976   00F88E  00                 	db	0
   977   00F88F  00                 	db	0
   978   00F890  00                 	db	0
   979   00F891  7C                 	db	124
   980   00F892  7C                 	db	124
   981   00F893  18                 	db	24
   982   00F894  38                 	db	56
   983   00F895  1C                 	db	28
   984   00F896  7C                 	db	124
   985   00F897  78                 	db	120
   986   00F898  00                 	db	0
   987   00F899  7C                 	db	124
   988   00F89A  7C                 	db	124
   989   00F89B  04                 	db	4
   990   00F89C  04                 	db	4
   991   00F89D  7C                 	db	124
   992   00F89E  78                 	db	120
   993   00F89F  00                 	db	0
   994   00F8A0  00                 	db	0
   995   00F8A1  38                 	db	56
   996   00F8A2  7C                 	db	124
   997   00F8A3  44                 	db	68
   998   00F8A4  44                 	db	68
   999   00F8A5  7C                 	db	124
  1000   00F8A6  38                 	db	56
  1001   00F8A7  00                 	db	0
  1002   00F8A8  00                 	db	0
  1003   00F8A9  84                 	db	132
  1004   00F8AA  FC                 	db	252
  1005   00F8AB  F8                 	db	248
  1006   00F8AC  A4                 	db	164
  1007   00F8AD  24                 	db	36
  1008   00F8AE  3C                 	db	60
  1009   00F8AF  18                 	db	24
  1010   00F8B0  00                 	db	0
  1011   00F8B1  18                 	db	24
  1012   00F8B2  3C                 	db	60
  1013   00F8B3  24                 	db	36
  1014   00F8B4  A4                 	db	164
  1015   00F8B5  F8                 	db	248
  1016   00F8B6  FC                 	db	252
  1017   00F8B7  84                 	db	132
  1018   00F8B8  00                 	db	0
  1019   00F8B9  44                 	db	68
  1020   00F8BA  7C                 	db	124
  1021   00F8BB  78                 	db	120
  1022   00F8BC  4C                 	db	76
  1023   00F8BD  04                 	db	4
  1024   00F8BE  1C                 	db	28
  1025   00F8BF  18                 	db	24
  1026   00F8C0  00                 	db	0
  1027   00F8C1  48                 	db	72
  1028   00F8C2  5C                 	db	92
  1029   00F8C3  54                 	db	84
  1030   00F8C4  54                 	db	84
  1031   00F8C5  74                 	db	116
  1032   00F8C6  24                 	db	36
  1033   00F8C7  00                 	db	0
  1034   00F8C8  00                 	db	0
  1035   00F8C9  00                 	db	0
  1036   00F8CA  04                 	db	4
  1037   00F8CB  3E                 	db	62
  1038   00F8CC  7F                 	db	127
  1039   00F8CD  44                 	db	68
  1040   00F8CE  24                 	db	36
  1041   00F8CF  00                 	db	0
  1042   00F8D0  00                 	db	0
  1043   00F8D1  3C                 	db	60
  1044   00F8D2  7C                 	db	124
  1045   00F8D3  40                 	db	64
  1046   00F8D4  40                 	db	64
  1047   00F8D5  3C                 	db	60
  1048   00F8D6  7C                 	db	124
  1049   00F8D7  40                 	db	64
  1050   00F8D8  00                 	db	0
  1051   00F8D9  1C                 	db	28
  1052   00F8DA  3C                 	db	60
  1053   00F8DB  60                 	db	96
  1054   00F8DC  60                 	db	96
  1055   00F8DD  3C                 	db	60
  1056   00F8DE  1C                 	db	28
  1057   00F8DF  00                 	db	0
  1058   00F8E0  00                 	db	0
  1059   00F8E1  3C                 	db	60
  1060   00F8E2  7C                 	db	124
  1061   00F8E3  70                 	db	112
  1062   00F8E4  38                 	db	56
  1063   00F8E5  70                 	db	112
  1064   00F8E6  7C                 	db	124
  1065   00F8E7  3C                 	db	60
  1066   00F8E8  00                 	db	0
  1067   00F8E9  44                 	db	68
  1068   00F8EA  6C                 	db	108
  1069   00F8EB  38                 	db	56
  1070   00F8EC  10                 	db	16
  1071   00F8ED  38                 	db	56
  1072   00F8EE  6C                 	db	108
  1073   00F8EF  44                 	db	68
  1074   00F8F0  00                 	db	0
  1075   00F8F1  9C                 	db	156
  1076   00F8F2  BC                 	db	188
  1077   00F8F3  A0                 	db	160
  1078   00F8F4  A0                 	db	160
  1079   00F8F5  FC                 	db	252
  1080   00F8F6  7C                 	db	124
  1081   00F8F7  00                 	db	0
  1082   00F8F8  00                 	db	0
  1083   00F8F9  4C                 	db	76
  1084   00F8FA  64                 	db	100
  1085   00F8FB  74                 	db	116
  1086   00F8FC  5C                 	db	92
  1087   00F8FD  4C                 	db	76
  1088   00F8FE  64                 	db	100
  1089   00F8FF  00                 	db	0
  1090   00F900  00                 	db	0
  1091   00F901  08                 	db	8
  1092   00F902  08                 	db	8
  1093   00F903  3E                 	db	62
  1094   00F904  77                 	db	119
  1095   00F905  41                 	db	65
  1096   00F906  41                 	db	65
  1097   00F907  00                 	db	0
  1098   00F908  00                 	db	0
  1099   00F909  00                 	db	0
  1100   00F90A  00                 	db	0
  1101   00F90B  00                 	db	0
  1102   00F90C  77                 	db	119
  1103   00F90D  77                 	db	119
  1104   00F90E  00                 	db	0
  1105   00F90F  00                 	db	0
  1106   00F910  00                 	db	0
  1107   00F911  41                 	db	65
  1108   00F912  41                 	db	65
  1109   00F913  77                 	db	119
  1110   00F914  3E                 	db	62
  1111   00F915  08                 	db	8
  1112   00F916  08                 	db	8
  1113   00F917  00                 	db	0
  1114   00F918  00                 	db	0
  1115   00F919  02                 	db	2
  1116   00F91A  03                 	db	3
  1117   00F91B  01                 	db	1
  1118   00F91C  03                 	db	3
  1119   00F91D  02                 	db	2
  1120   00F91E  03                 	db	3
  1121   00F91F  01                 	db	1
  1122   00F920  00                 	db	0
  1123   00F921  70                 	db	112
  1124   00F922  78                 	db	120
  1125   00F923  4C                 	db	76
  1126   00F924  46                 	db	70
  1127   00F925  4C                 	db	76
  1128   00F926  78                 	db	120
  1129   00F927  70                 	db	112
  1130   00F928  00                 	db	0
  1131   00F929  0E                 	db	14
  1132   00F92A  9F                 	db	159
  1133   00F92B  91                 	db	145
  1134   00F92C  B1                 	db	177
  1135   00F92D  FB                 	db	251
  1136   00F92E  4A                 	db	74
  1137   00F92F  00                 	db	0
  1138   00F930  00                 	db	0
  1139   00F931  3A                 	db	58
  1140   00F932  7A                 	db	122
  1141   00F933  40                 	db	64
  1142   00F934  40                 	db	64
  1143   00F935  7A                 	db	122
  1144   00F936  7A                 	db	122
  1145   00F937  40                 	db	64
  1146   00F938  00                 	db	0
  1147   00F939  38                 	db	56
  1148   00F93A  7C                 	db	124
  1149   00F93B  54                 	db	84
  1150   00F93C  55                 	db	85
  1151   00F93D  5D                 	db	93
  1152   00F93E  19                 	db	25
  1153   00F93F  00                 	db	0
  1154   00F940  00                 	db	0
  1155   00F941  02                 	db	2
  1156   00F942  23                 	db	35
  1157   00F943  75                 	db	117
  1158   00F944  55                 	db	85
  1159   00F945  55                 	db	85
  1160   00F946  7D                 	db	125
  1161   00F947  7B                 	db	123
  1162   00F948  42                 	db	66
  1163   00F949  21                 	db	33
  1164   00F94A  75                 	db	117
  1165   00F94B  54                 	db	84
  1166   00F94C  54                 	db	84
  1167   00F94D  7D                 	db	125
  1168   00F94E  79                 	db	121
  1169   00F94F  40                 	db	64
  1170   00F950  00                 	db	0
  1171   00F951  21                 	db	33
  1172   00F952  75                 	db	117
  1173   00F953  55                 	db	85
  1174   00F954  54                 	db	84
  1175   00F955  7C                 	db	124
  1176   00F956  78                 	db	120
  1177   00F957  40                 	db	64
  1178   00F958  00                 	db	0
  1179   00F959  20                 	db	32
  1180   00F95A  74                 	db	116
  1181   00F95B  57                 	db	87
  1182   00F95C  57                 	db	87
  1183   00F95D  7C                 	db	124
  1184   00F95E  78                 	db	120
  1185   00F95F  40                 	db	64
  1186   00F960  00                 	db	0
  1187   00F961  18                 	db	24
  1188   00F962  3C                 	db	60
  1189   00F963  A4                 	db	164
  1190   00F964  A4                 	db	164
  1191   00F965  E4                 	db	228
  1192   00F966  40                 	db	64
  1193   00F967  00                 	db	0
  1194   00F968  00                 	db	0
  1195   00F969  02                 	db	2
  1196   00F96A  3B                 	db	59
  1197   00F96B  7D                 	db	125
  1198   00F96C  55                 	db	85
  1199   00F96D  55                 	db	85
  1200   00F96E  5D                 	db	93
  1201   00F96F  1B                 	db	27
  1202   00F970  02                 	db	2
  1203   00F971  39                 	db	57
  1204   00F972  7D                 	db	125
  1205   00F973  54                 	db	84
  1206   00F974  54                 	db	84
  1207   00F975  5D                 	db	93
  1208   00F976  19                 	db	25
  1209   00F977  00                 	db	0
  1210   00F978  00                 	db	0
  1211   00F979  39                 	db	57
  1212   00F97A  7D                 	db	125
  1213   00F97B  55                 	db	85
  1214   00F97C  54                 	db	84
  1215   00F97D  5C                 	db	92
  1216   00F97E  18                 	db	24
  1217   00F97F  00                 	db	0
  1218   00F980  00                 	db	0
  1219   00F981  01                 	db	1
  1220   00F982  45                 	db	69
  1221   00F983  7C                 	db	124
  1222   00F984  7C                 	db	124
  1223   00F985  41                 	db	65
  1224   00F986  01                 	db	1
  1225   00F987  00                 	db	0
  1226   00F988  00                 	db	0
  1227   00F989  02                 	db	2
  1228   00F98A  03                 	db	3
  1229   00F98B  45                 	db	69
  1230   00F98C  7D                 	db	125
  1231   00F98D  7D                 	db	125
  1232   00F98E  43                 	db	67
  1233   00F98F  02                 	db	2
  1234   00F990  00                 	db	0
  1235   00F991  01                 	db	1
  1236   00F992  45                 	db	69
  1237   00F993  7D                 	db	125
  1238   00F994  7C                 	db	124
  1239   00F995  40                 	db	64
  1240   00F996  00                 	db	0
  1241   00F997  00                 	db	0
  1242   00F998  00                 	db	0
  1243   00F999  79                 	db	121
  1244   00F99A  7D                 	db	125
  1245   00F99B  16                 	db	22
  1246   00F99C  12                 	db	18
  1247   00F99D  16                 	db	22
  1248   00F99E  7D                 	db	125
  1249   00F99F  79                 	db	121
  1250   00F9A0  00                 	db	0
  1251   00F9A1  70                 	db	112
  1252   00F9A2  78                 	db	120
  1253   00F9A3  2B                 	db	43
  1254   00F9A4  2B                 	db	43
  1255   00F9A5  78                 	db	120
  1256   00F9A6  70                 	db	112
  1257   00F9A7  00                 	db	0
  1258   00F9A8  00                 	db	0
  1259   00F9A9  44                 	db	68
  1260   00F9AA  7C                 	db	124
  1261   00F9AB  7C                 	db	124
  1262   00F9AC  55                 	db	85
  1263   00F9AD  55                 	db	85
  1264   00F9AE  45                 	db	69
  1265   00F9AF  00                 	db	0
  1266   00F9B0  00                 	db	0
  1267   00F9B1  20                 	db	32
  1268   00F9B2  74                 	db	116
  1269   00F9B3  54                 	db	84
  1270   00F9B4  54                 	db	84
  1271   00F9B5  7C                 	db	124
  1272   00F9B6  7C                 	db	124
  1273   00F9B7  54                 	db	84
  1274   00F9B8  54                 	db	84
  1275   00F9B9  7C                 	db	124
  1276   00F9BA  7E                 	db	126
  1277   00F9BB  0B                 	db	11
  1278   00F9BC  09                 	db	9
  1279   00F9BD  7F                 	db	127
  1280   00F9BE  7F                 	db	127
  1281   00F9BF  49                 	db	73
  1282   00F9C0  00                 	db	0
  1283   00F9C1  32                 	db	50
  1284   00F9C2  7B                 	db	123
  1285   00F9C3  49                 	db	73
  1286   00F9C4  49                 	db	73
  1287   00F9C5  7B                 	db	123
  1288   00F9C6  32                 	db	50
  1289   00F9C7  00                 	db	0
  1290   00F9C8  00                 	db	0
  1291   00F9C9  32                 	db	50
  1292   00F9CA  7A                 	db	122
  1293   00F9CB  48                 	db	72
  1294   00F9CC  48                 	db	72
  1295   00F9CD  7A                 	db	122
  1296   00F9CE  32                 	db	50
  1297   00F9CF  00                 	db	0
  1298   00F9D0  00                 	db	0
  1299   00F9D1  32                 	db	50
  1300   00F9D2  7A                 	db	122
  1301   00F9D3  4A                 	db	74
  1302   00F9D4  48                 	db	72
  1303   00F9D5  78                 	db	120
  1304   00F9D6  30                 	db	48
  1305   00F9D7  00                 	db	0
  1306   00F9D8  00                 	db	0
  1307   00F9D9  3A                 	db	58
  1308   00F9DA  7B                 	db	123
  1309   00F9DB  41                 	db	65
  1310   00F9DC  41                 	db	65
  1311   00F9DD  7B                 	db	123
  1312   00F9DE  7A                 	db	122
  1313   00F9DF  40                 	db	64
  1314   00F9E0  00                 	db	0
  1315   00F9E1  3A                 	db	58
  1316   00F9E2  7A                 	db	122
  1317   00F9E3  42                 	db	66
  1318   00F9E4  40                 	db	64
  1319   00F9E5  78                 	db	120
  1320   00F9E6  78                 	db	120
  1321   00F9E7  40                 	db	64
  1322   00F9E8  00                 	db	0
  1323   00F9E9  9A                 	db	154
  1324   00F9EA  BA                 	db	186
  1325   00F9EB  A0                 	db	160
  1326   00F9EC  A0                 	db	160
  1327   00F9ED  FA                 	db	250
  1328   00F9EE  7A                 	db	122
  1329   00F9EF  00                 	db	0
  1330   00F9F0  00                 	db	0
  1331   00F9F1  01                 	db	1
  1332   00F9F2  19                 	db	25
  1333   00F9F3  3C                 	db	60
  1334   00F9F4  66                 	db	102
  1335   00F9F5  66                 	db	102
  1336   00F9F6  3C                 	db	60
  1337   00F9F7  19                 	db	25
  1338   00F9F8  01                 	db	1
  1339   00F9F9  3D                 	db	61
  1340   00F9FA  7D                 	db	125
  1341   00F9FB  40                 	db	64
  1342   00F9FC  40                 	db	64
  1343   00F9FD  7D                 	db	125
  1344   00F9FE  3D                 	db	61
  1345   00F9FF  00                 	db	0
  1346   00FA00  00                 	db	0
  1347   00FA01  18                 	db	24
  1348   00FA02  3C                 	db	60
  1349   00FA03  24                 	db	36
  1350   00FA04  E7                 	db	231
  1351   00FA05  E7                 	db	231
  1352   00FA06  24                 	db	36
  1353   00FA07  24                 	db	36
  1354   00FA08  00                 	db	0
  1355   00FA09  68                 	db	104
  1356   00FA0A  7E                 	db	126
  1357   00FA0B  7F                 	db	127
  1358   00FA0C  49                 	db	73
  1359   00FA0D  43                 	db	67
  1360   00FA0E  66                 	db	102
  1361   00FA0F  20                 	db	32
  1362   00FA10  00                 	db	0
  1363   00FA11  2B                 	db	43
  1364   00FA12  2F                 	db	47
  1365   00FA13  FC                 	db	252
  1366   00FA14  FC                 	db	252
  1367   00FA15  2F                 	db	47
  1368   00FA16  2B                 	db	43
  1369   00FA17  00                 	db	0
  1370   00FA18  00                 	db	0
  1371   00FA19  FF                 	db	255
  1372   00FA1A  FF                 	db	255
  1373   00FA1B  09                 	db	9
  1374   00FA1C  09                 	db	9
  1375   00FA1D  2F                 	db	47
  1376   00FA1E  F6                 	db	246
  1377   00FA1F  F8                 	db	248
  1378   00FA20  A0                 	db	160
  1379   00FA21  40                 	db	64
  1380   00FA22  C0                 	db	192
  1381   00FA23  88                 	db	136
  1382   00FA24  FE                 	db	254
  1383   00FA25  7F                 	db	127
  1384   00FA26  09                 	db	9
  1385   00FA27  03                 	db	3
  1386   00FA28  02                 	db	2
  1387   00FA29  20                 	db	32
  1388   00FA2A  74                 	db	116
  1389   00FA2B  54                 	db	84
  1390   00FA2C  55                 	db	85
  1391   00FA2D  7D                 	db	125
  1392   00FA2E  79                 	db	121
  1393   00FA2F  40                 	db	64
  1394   00FA30  00                 	db	0
  1395   00FA31  00                 	db	0
  1396   00FA32  44                 	db	68
  1397   00FA33  7D                 	db	125
  1398   00FA34  7D                 	db	125
  1399   00FA35  41                 	db	65
  1400   00FA36  00                 	db	0
  1401   00FA37  00                 	db	0
  1402   00FA38  00                 	db	0
  1403   00FA39  30                 	db	48
  1404   00FA3A  78                 	db	120
  1405   00FA3B  48                 	db	72
  1406   00FA3C  4A                 	db	74
  1407   00FA3D  7A                 	db	122
  1408   00FA3E  32                 	db	50
  1409   00FA3F  00                 	db	0
  1410   00FA40  00                 	db	0
  1411   00FA41  38                 	db	56
  1412   00FA42  78                 	db	120
  1413   00FA43  40                 	db	64
  1414   00FA44  42                 	db	66
  1415   00FA45  7A                 	db	122
  1416   00FA46  7A                 	db	122
  1417   00FA47  40                 	db	64
  1418   00FA48  00                 	db	0
  1419   00FA49  7A                 	db	122
  1420   00FA4A  7A                 	db	122
  1421   00FA4B  0A                 	db	10
  1422   00FA4C  0A                 	db	10
  1423   00FA4D  7A                 	db	122
  1424   00FA4E  70                 	db	112
  1425   00FA4F  00                 	db	0
  1426   00FA50  00                 	db	0
  1427   00FA51  7D                 	db	125
  1428   00FA52  7D                 	db	125
  1429   00FA53  19                 	db	25
  1430   00FA54  31                 	db	49
  1431   00FA55  7D                 	db	125
  1432   00FA56  7D                 	db	125
  1433   00FA57  00                 	db	0
  1434   00FA58  00                 	db	0
  1435   00FA59  00                 	db	0
  1436   00FA5A  26                 	db	38
  1437   00FA5B  2F                 	db	47
  1438   00FA5C  29                 	db	41
  1439   00FA5D  2F                 	db	47
  1440   00FA5E  2F                 	db	47
  1441   00FA5F  28                 	db	40
  1442   00FA60  00                 	db	0
  1443   00FA61  00                 	db	0
  1444   00FA62  26                 	db	38
  1445   00FA63  2F                 	db	47
  1446   00FA64  29                 	db	41
  1447   00FA65  2F                 	db	47
  1448   00FA66  26                 	db	38
  1449   00FA67  00                 	db	0
  1450   00FA68  00                 	db	0
  1451   00FA69  30                 	db	48
  1452   00FA6A  78                 	db	120
  1453   00FA6B  4D                 	db	77
  1454   00FA6C  45                 	db	69
  1455   00FA6D  60                 	db	96
  1456   00FA6E  20                 	db	32
  1457   00FA6F  00                 	db	0
  1458   00FA70  00                 	db	0
  1459   00FA71  38                 	db	56
  1460   00FA72  38                 	db	56
  1461   00FA73  08                 	db	8
  1462   00FA74  08                 	db	8
  1463   00FA75  08                 	db	8
  1464   00FA76  08                 	db	8
  1465   00FA77  00                 	db	0
  1466   00FA78  00                 	db	0
  1467   00FA79  08                 	db	8
  1468   00FA7A  08                 	db	8
  1469   00FA7B  08                 	db	8
  1470   00FA7C  08                 	db	8
  1471   00FA7D  38                 	db	56
  1472   00FA7E  38                 	db	56
  1473   00FA7F  00                 	db	0
  1474   00FA80  00                 	db	0
  1475   00FA81  4F                 	db	79
  1476   00FA82  6F                 	db	111
  1477   00FA83  30                 	db	48
  1478   00FA84  18                 	db	24
  1479   00FA85  CC                 	db	204
  1480   00FA86  EE                 	db	238
  1481   00FA87  BB                 	db	187
  1482   00FA88  91                 	db	145
  1483   00FA89  4F                 	db	79
  1484   00FA8A  6F                 	db	111
  1485   00FA8B  30                 	db	48
  1486   00FA8C  18                 	db	24
  1487   00FA8D  6C                 	db	108
  1488   00FA8E  76                 	db	118
  1489   00FA8F  FB                 	db	251
  1490   00FA90  F9                 	db	249
  1491   00FA91  00                 	db	0
  1492   00FA92  00                 	db	0
  1493   00FA93  00                 	db	0
  1494   00FA94  7B                 	db	123
  1495   00FA95  7B                 	db	123
  1496   00FA96  00                 	db	0
  1497   00FA97  00                 	db	0
  1498   00FA98  00                 	db	0
  1499   00FA99  08                 	db	8
  1500   00FA9A  1C                 	db	28
  1501   00FA9B  36                 	db	54
  1502   00FA9C  22                 	db	34
  1503   00FA9D  08                 	db	8
  1504   00FA9E  1C                 	db	28
  1505   00FA9F  36                 	db	54
  1506   00FAA0  22                 	db	34
  1507   00FAA1  22                 	db	34
  1508   00FAA2  36                 	db	54
  1509   00FAA3  1C                 	db	28
  1510   00FAA4  08                 	db	8
  1511   00FAA5  22                 	db	34
  1512   00FAA6  36                 	db	54
  1513   00FAA7  1C                 	db	28
  1514   00FAA8  08                 	db	8
  1515   00FAA9  AA                 	db	170
  1516   00FAAA  00                 	db	0
  1517   00FAAB  55                 	db	85
  1518   00FAAC  00                 	db	0
  1519   00FAAD  AA                 	db	170
  1520   00FAAE  00                 	db	0
  1521   00FAAF  55                 	db	85
  1522   00FAB0  00                 	db	0
  1523   00FAB1  AA                 	db	170
  1524   00FAB2  55                 	db	85
  1525   00FAB3  AA                 	db	170
  1526   00FAB4  55                 	db	85
  1527   00FAB5  AA                 	db	170
  1528   00FAB6  55                 	db	85
  1529   00FAB7  AA                 	db	170
  1530   00FAB8  55                 	db	85
  1531   00FAB9  DD                 	db	221
  1532   00FABA  FF                 	db	255
  1533   00FABB  AA                 	db	170
  1534   00FABC  77                 	db	119
  1535   00FABD  DD                 	db	221
  1536   00FABE  AA                 	db	170
  1537   00FABF  FF                 	db	255
  1538   00FAC0  77                 	db	119
  1539   00FAC1  00                 	db	0
  1540   00FAC2  00                 	db	0
  1541   00FAC3  00                 	db	0
  1542   00FAC4  FF                 	db	255
  1543   00FAC5  FF                 	db	255
  1544   00FAC6  00                 	db	0
  1545   00FAC7  00                 	db	0
  1546   00FAC8  00                 	db	0
  1547   00FAC9  10                 	db	16
  1548   00FACA  10                 	db	16
  1549   00FACB  10                 	db	16
  1550   00FACC  FF                 	db	255
  1551   00FACD  FF                 	db	255
  1552   00FACE  00                 	db	0
  1553   00FACF  00                 	db	0
  1554   00FAD0  00                 	db	0
  1555   00FAD1  14                 	db	20
  1556   00FAD2  14                 	db	20
  1557   00FAD3  14                 	db	20
  1558   00FAD4  FF                 	db	255
  1559   00FAD5  FF                 	db	255
  1560   00FAD6  00                 	db	0
  1561   00FAD7  00                 	db	0
  1562   00FAD8  00                 	db	0
  1563   00FAD9  10                 	db	16
  1564   00FADA  10                 	db	16
  1565   00FADB  FF                 	db	255
  1566   00FADC  FF                 	db	255
  1567   00FADD  00                 	db	0
  1568   00FADE  FF                 	db	255
  1569   00FADF  FF                 	db	255
  1570   00FAE0  00                 	db	0
  1571   00FAE1  10                 	db	16
  1572   00FAE2  10                 	db	16
  1573   00FAE3  F0                 	db	240
  1574   00FAE4  F0                 	db	240
  1575   00FAE5  10                 	db	16
  1576   00FAE6  F0                 	db	240
  1577   00FAE7  F0                 	db	240
  1578   00FAE8  00                 	db	0
  1579   00FAE9  14                 	db	20
  1580   00FAEA  14                 	db	20
  1581   00FAEB  14                 	db	20
  1582   00FAEC  FC                 	db	252
  1583   00FAED  FC                 	db	252
  1584   00FAEE  00                 	db	0
  1585   00FAEF  00                 	db	0
  1586   00FAF0  00                 	db	0
  1587   00FAF1  14                 	db	20
  1588   00FAF2  14                 	db	20
  1589   00FAF3  F7                 	db	247
  1590   00FAF4  F7                 	db	247
  1591   00FAF5  00                 	db	0
  1592   00FAF6  FF                 	db	255
  1593   00FAF7  FF                 	db	255
  1594   00FAF8  00                 	db	0
  1595   00FAF9  00                 	db	0
  1596   00FAFA  00                 	db	0
  1597   00FAFB  FF                 	db	255
  1598   00FAFC  FF                 	db	255
  1599   00FAFD  00                 	db	0
  1600   00FAFE  FF                 	db	255
  1601   00FAFF  FF                 	db	255
  1602   00FB00  00                 	db	0
  1603   00FB01  14                 	db	20
  1604   00FB02  14                 	db	20
  1605   00FB03  F4                 	db	244
  1606   00FB04  F4                 	db	244
  1607   00FB05  04                 	db	4
  1608   00FB06  FC                 	db	252
  1609   00FB07  FC                 	db	252
  1610   00FB08  00                 	db	0
  1611   00FB09  14                 	db	20
  1612   00FB0A  14                 	db	20
  1613   00FB0B  17                 	db	23
  1614   00FB0C  17                 	db	23
  1615   00FB0D  10                 	db	16
  1616   00FB0E  1F                 	db	31
  1617   00FB0F  1F                 	db	31
  1618   00FB10  00                 	db	0
  1619   00FB11  10                 	db	16
  1620   00FB12  10                 	db	16
  1621   00FB13  1F                 	db	31
  1622   00FB14  1F                 	db	31
  1623   00FB15  10                 	db	16
  1624   00FB16  1F                 	db	31
  1625   00FB17  1F                 	db	31
  1626   00FB18  00                 	db	0
  1627   00FB19  14                 	db	20
  1628   00FB1A  14                 	db	20
  1629   00FB1B  14                 	db	20
  1630   00FB1C  1F                 	db	31
  1631   00FB1D  1F                 	db	31
  1632   00FB1E  00                 	db	0
  1633   00FB1F  00                 	db	0
  1634   00FB20  00                 	db	0
  1635   00FB21  10                 	db	16
  1636   00FB22  10                 	db	16
  1637   00FB23  10                 	db	16
  1638   00FB24  F0                 	db	240
  1639   00FB25  F0                 	db	240
  1640   00FB26  00                 	db	0
  1641   00FB27  00                 	db	0
  1642   00FB28  00                 	db	0
  1643   00FB29  00                 	db	0
  1644   00FB2A  00                 	db	0
  1645   00FB2B  00                 	db	0
  1646   00FB2C  1F                 	db	31
  1647   00FB2D  1F                 	db	31
  1648   00FB2E  10                 	db	16
  1649   00FB2F  10                 	db	16
  1650   00FB30  10                 	db	16
  1651   00FB31  10                 	db	16
  1652   00FB32  10                 	db	16
  1653   00FB33  10                 	db	16
  1654   00FB34  1F                 	db	31
  1655   00FB35  1F                 	db	31
  1656   00FB36  10                 	db	16
  1657   00FB37  10                 	db	16
  1658   00FB38  10                 	db	16
  1659   00FB39  10                 	db	16
  1660   00FB3A  10                 	db	16
  1661   00FB3B  10                 	db	16
  1662   00FB3C  F0                 	db	240
  1663   00FB3D  F0                 	db	240
  1664   00FB3E  10                 	db	16
  1665   00FB3F  10                 	db	16
  1666   00FB40  10                 	db	16
  1667   00FB41  00                 	db	0
  1668   00FB42  00                 	db	0
  1669   00FB43  00                 	db	0
  1670   00FB44  FF                 	db	255
  1671   00FB45  FF                 	db	255
  1672   00FB46  10                 	db	16
  1673   00FB47  10                 	db	16
  1674   00FB48  10                 	db	16
  1675   00FB49  10                 	db	16
  1676   00FB4A  10                 	db	16
  1677   00FB4B  10                 	db	16
  1678   00FB4C  10                 	db	16
  1679   00FB4D  10                 	db	16
  1680   00FB4E  10                 	db	16
  1681   00FB4F  10                 	db	16
  1682   00FB50  10                 	db	16
  1683   00FB51  10                 	db	16
  1684   00FB52  10                 	db	16
  1685   00FB53  10                 	db	16
  1686   00FB54  FF                 	db	255
  1687   00FB55  FF                 	db	255
  1688   00FB56  10                 	db	16
  1689   00FB57  10                 	db	16
  1690   00FB58  10                 	db	16
  1691   00FB59  00                 	db	0
  1692   00FB5A  00                 	db	0
  1693   00FB5B  00                 	db	0
  1694   00FB5C  FF                 	db	255
  1695   00FB5D  FF                 	db	255
  1696   00FB5E  14                 	db	20
  1697   00FB5F  14                 	db	20
  1698   00FB60  14                 	db	20
  1699   00FB61  00                 	db	0
  1700   00FB62  00                 	db	0
  1701   00FB63  FF                 	db	255
  1702   00FB64  FF                 	db	255
  1703   00FB65  00                 	db	0
  1704   00FB66  FF                 	db	255
  1705   00FB67  FF                 	db	255
  1706   00FB68  10                 	db	16
  1707   00FB69  00                 	db	0
  1708   00FB6A  00                 	db	0
  1709   00FB6B  1F                 	db	31
  1710   00FB6C  1F                 	db	31
  1711   00FB6D  10                 	db	16
  1712   00FB6E  17                 	db	23
  1713   00FB6F  17                 	db	23
  1714   00FB70  14                 	db	20
  1715   00FB71  00                 	db	0
  1716   00FB72  00                 	db	0
  1717   00FB73  FC                 	db	252
  1718   00FB74  FC                 	db	252
  1719   00FB75  04                 	db	4
  1720   00FB76  F4                 	db	244
  1721   00FB77  F4                 	db	244
  1722   00FB78  14                 	db	20
  1723   00FB79  14                 	db	20
  1724   00FB7A  14                 	db	20
  1725   00FB7B  17                 	db	23
  1726   00FB7C  17                 	db	23
  1727   00FB7D  10                 	db	16
  1728   00FB7E  17                 	db	23
  1729   00FB7F  17                 	db	23
  1730   00FB80  14                 	db	20
  1731   00FB81  14                 	db	20
  1732   00FB82  14                 	db	20
  1733   00FB83  F4                 	db	244
  1734   00FB84  F4                 	db	244
  1735   00FB85  04                 	db	4
  1736   00FB86  F4                 	db	244
  1737   00FB87  F4                 	db	244
  1738   00FB88  14                 	db	20
  1739   00FB89  00                 	db	0
  1740   00FB8A  00                 	db	0
  1741   00FB8B  FF                 	db	255
  1742   00FB8C  FF                 	db	255
  1743   00FB8D  00                 	db	0
  1744   00FB8E  F7                 	db	247
  1745   00FB8F  F7                 	db	247
  1746   00FB90  14                 	db	20
  1747   00FB91  14                 	db	20
  1748   00FB92  14                 	db	20
  1749   00FB93  14                 	db	20
  1750   00FB94  14                 	db	20
  1751   00FB95  14                 	db	20
  1752   00FB96  14                 	db	20
  1753   00FB97  14                 	db	20
  1754   00FB98  14                 	db	20
  1755   00FB99  14                 	db	20
  1756   00FB9A  14                 	db	20
  1757   00FB9B  F7                 	db	247
  1758   00FB9C  F7                 	db	247
  1759   00FB9D  00                 	db	0
  1760   00FB9E  F7                 	db	247
  1761   00FB9F  F7                 	db	247
  1762   00FBA0  14                 	db	20
  1763   00FBA1  14                 	db	20
  1764   00FBA2  14                 	db	20
  1765   00FBA3  14                 	db	20
  1766   00FBA4  17                 	db	23
  1767   00FBA5  17                 	db	23
  1768   00FBA6  14                 	db	20
  1769   00FBA7  14                 	db	20
  1770   00FBA8  14                 	db	20
  1771   00FBA9  10                 	db	16
  1772   00FBAA  10                 	db	16
  1773   00FBAB  1F                 	db	31
  1774   00FBAC  1F                 	db	31
  1775   00FBAD  10                 	db	16
  1776   00FBAE  1F                 	db	31
  1777   00FBAF  1F                 	db	31
  1778   00FBB0  10                 	db	16
  1779   00FBB1  14                 	db	20
  1780   00FBB2  14                 	db	20
  1781   00FBB3  14                 	db	20
  1782   00FBB4  F4                 	db	244
  1783   00FBB5  F4                 	db	244
  1784   00FBB6  14                 	db	20
  1785   00FBB7  14                 	db	20
  1786   00FBB8  14                 	db	20
  1787   00FBB9  10                 	db	16
  1788   00FBBA  10                 	db	16
  1789   00FBBB  F0                 	db	240
  1790   00FBBC  F0                 	db	240
  1791   00FBBD  10                 	db	16
  1792   00FBBE  F0                 	db	240
  1793   00FBBF  F0                 	db	240
  1794   00FBC0  10                 	db	16
  1795   00FBC1  00                 	db	0
  1796   00FBC2  00                 	db	0
  1797   00FBC3  1F                 	db	31
  1798   00FBC4  1F                 	db	31
  1799   00FBC5  10                 	db	16
  1800   00FBC6  1F                 	db	31
  1801   00FBC7  1F                 	db	31
  1802   00FBC8  10                 	db	16
  1803   00FBC9  00                 	db	0
  1804   00FBCA  00                 	db	0
  1805   00FBCB  00                 	db	0
  1806   00FBCC  1F                 	db	31
  1807   00FBCD  1F                 	db	31
  1808   00FBCE  14                 	db	20
  1809   00FBCF  14                 	db	20
  1810   00FBD0  14                 	db	20
  1811   00FBD1  00                 	db	0
  1812   00FBD2  00                 	db	0
  1813   00FBD3  00                 	db	0
  1814   00FBD4  FC                 	db	252
  1815   00FBD5  FC                 	db	252
  1816   00FBD6  14                 	db	20
  1817   00FBD7  14                 	db	20
  1818   00FBD8  14                 	db	20
  1819   00FBD9  00                 	db	0
  1820   00FBDA  00                 	db	0
  1821   00FBDB  F0                 	db	240
  1822   00FBDC  F0                 	db	240
  1823   00FBDD  10                 	db	16
  1824   00FBDE  F0                 	db	240
  1825   00FBDF  F0                 	db	240
  1826   00FBE0  10                 	db	16
  1827   00FBE1  10                 	db	16
  1828   00FBE2  10                 	db	16
  1829   00FBE3  FF                 	db	255
  1830   00FBE4  FF                 	db	255
  1831   00FBE5  10                 	db	16
  1832   00FBE6  FF                 	db	255
  1833   00FBE7  FF                 	db	255
  1834   00FBE8  10                 	db	16
  1835   00FBE9  14                 	db	20
  1836   00FBEA  14                 	db	20
  1837   00FBEB  14                 	db	20
  1838   00FBEC  FF                 	db	255
  1839   00FBED  FF                 	db	255
  1840   00FBEE  14                 	db	20
  1841   00FBEF  14                 	db	20
  1842   00FBF0  14                 	db	20
  1843   00FBF1  10                 	db	16
  1844   00FBF2  10                 	db	16
  1845   00FBF3  10                 	db	16
  1846   00FBF4  1F                 	db	31
  1847   00FBF5  1F                 	db	31
  1848   00FBF6  00                 	db	0
  1849   00FBF7  00                 	db	0
  1850   00FBF8  00                 	db	0
  1851   00FBF9  00                 	db	0
  1852   00FBFA  00                 	db	0
  1853   00FBFB  00                 	db	0
  1854   00FBFC  F0                 	db	240
  1855   00FBFD  F0                 	db	240
  1856   00FBFE  10                 	db	16
  1857   00FBFF  10                 	db	16
  1858   00FC00  10                 	db	16
  1859   00FC01  FF                 	db	255
  1860   00FC02  FF                 	db	255
  1861   00FC03  FF                 	db	255
  1862   00FC04  FF                 	db	255
  1863   00FC05  FF                 	db	255
  1864   00FC06  FF                 	db	255
  1865   00FC07  FF                 	db	255
  1866   00FC08  FF                 	db	255
  1867   00FC09  F0                 	db	240
  1868   00FC0A  F0                 	db	240
  1869   00FC0B  F0                 	db	240
  1870   00FC0C  F0                 	db	240
  1871   00FC0D  F0                 	db	240
  1872   00FC0E  F0                 	db	240
  1873   00FC0F  F0                 	db	240
  1874   00FC10  F0                 	db	240
  1875   00FC11  FF                 	db	255
  1876   00FC12  FF                 	db	255
  1877   00FC13  FF                 	db	255
  1878   00FC14  FF                 	db	255
  1879   00FC15  00                 	db	0
  1880   00FC16  00                 	db	0
  1881   00FC17  00                 	db	0
  1882   00FC18  00                 	db	0
  1883   00FC19  00                 	db	0
  1884   00FC1A  00                 	db	0
  1885   00FC1B  00                 	db	0
  1886   00FC1C  00                 	db	0
  1887   00FC1D  FF                 	db	255
  1888   00FC1E  FF                 	db	255
  1889   00FC1F  FF                 	db	255
  1890   00FC20  FF                 	db	255
  1891   00FC21  0F                 	db	15
  1892   00FC22  0F                 	db	15
  1893   00FC23  0F                 	db	15
  1894   00FC24  0F                 	db	15
  1895   00FC25  0F                 	db	15
  1896   00FC26  0F                 	db	15
  1897   00FC27  0F                 	db	15
  1898   00FC28  0F                 	db	15
  1899   00FC29  38                 	db	56
  1900   00FC2A  7C                 	db	124
  1901   00FC2B  44                 	db	68
  1902   00FC2C  6C                 	db	108
  1903   00FC2D  38                 	db	56
  1904   00FC2E  6C                 	db	108
  1905   00FC2F  44                 	db	68
  1906   00FC30  00                 	db	0
  1907   00FC31  FC                 	db	252
  1908   00FC32  FE                 	db	254
  1909   00FC33  2A                 	db	42
  1910   00FC34  2A                 	db	42
  1911   00FC35  3E                 	db	62
  1912   00FC36  14                 	db	20
  1913   00FC37  00                 	db	0
  1914   00FC38  00                 	db	0
  1915   00FC39  7E                 	db	126
  1916   00FC3A  7E                 	db	126
  1917   00FC3B  02                 	db	2
  1918   00FC3C  02                 	db	2
  1919   00FC3D  06                 	db	6
  1920   00FC3E  06                 	db	6
  1921   00FC3F  00                 	db	0
  1922   00FC40  00                 	db	0
  1923   00FC41  02                 	db	2
  1924   00FC42  7E                 	db	126
  1925   00FC43  7E                 	db	126
  1926   00FC44  02                 	db	2
  1927   00FC45  7E                 	db	126
  1928   00FC46  7E                 	db	126
  1929   00FC47  02                 	db	2
  1930   00FC48  00                 	db	0
  1931   00FC49  63                 	db	99
  1932   00FC4A  77                 	db	119
  1933   00FC4B  5D                 	db	93
  1934   00FC4C  49                 	db	73
  1935   00FC4D  63                 	db	99
  1936   00FC4E  63                 	db	99
  1937   00FC4F  00                 	db	0
  1938   00FC50  00                 	db	0
  1939   00FC51  38                 	db	56
  1940   00FC52  7C                 	db	124
  1941   00FC53  44                 	db	68
  1942   00FC54  7C                 	db	124
  1943   00FC55  3C                 	db	60
  1944   00FC56  04                 	db	4
  1945   00FC57  04                 	db	4
  1946   00FC58  00                 	db	0
  1947   00FC59  80                 	db	128
  1948   00FC5A  FE                 	db	254
  1949   00FC5B  7E                 	db	126
  1950   00FC5C  20                 	db	32
  1951   00FC5D  20                 	db	32
  1952   00FC5E  3E                 	db	62
  1953   00FC5F  1E                 	db	30
  1954   00FC60  00                 	db	0
  1955   00FC61  04                 	db	4
  1956   00FC62  06                 	db	6
  1957   00FC63  02                 	db	2
  1958   00FC64  7E                 	db	126
  1959   00FC65  7C                 	db	124
  1960   00FC66  06                 	db	6
  1961   00FC67  02                 	db	2
  1962   00FC68  00                 	db	0
  1963   00FC69  99                 	db	153
  1964   00FC6A  BD                 	db	189
  1965   00FC6B  E7                 	db	231
  1966   00FC6C  E7                 	db	231
  1967   00FC6D  BD                 	db	189
  1968   00FC6E  99                 	db	153
  1969   00FC6F  00                 	db	0
  1970   00FC70  00                 	db	0
  1971   00FC71  1C                 	db	28
  1972   00FC72  3E                 	db	62
  1973   00FC73  6B                 	db	107
  1974   00FC74  49                 	db	73
  1975   00FC75  6B                 	db	107
  1976   00FC76  3E                 	db	62
  1977   00FC77  1C                 	db	28
  1978   00FC78  00                 	db	0
  1979   00FC79  4C                 	db	76
  1980   00FC7A  7E                 	db	126
  1981   00FC7B  73                 	db	115
  1982   00FC7C  01                 	db	1
  1983   00FC7D  73                 	db	115
  1984   00FC7E  7E                 	db	126
  1985   00FC7F  4C                 	db	76
  1986   00FC80  00                 	db	0
  1987   00FC81  30                 	db	48
  1988   00FC82  78                 	db	120
  1989   00FC83  4A                 	db	74
  1990   00FC84  4F                 	db	79
  1991   00FC85  7D                 	db	125
  1992   00FC86  39                 	db	57
  1993   00FC87  00                 	db	0
  1994   00FC88  00                 	db	0
  1995   00FC89  18                 	db	24
  1996   00FC8A  3C                 	db	60
  1997   00FC8B  24                 	db	36
  1998   00FC8C  3C                 	db	60
  1999   00FC8D  3C                 	db	60
  2000   00FC8E  24                 	db	36
  2001   00FC8F  3C                 	db	60
  2002   00FC90  18                 	db	24
  2003   00FC91  98                 	db	152
  2004   00FC92  FC                 	db	252
  2005   00FC93  64                 	db	100
  2006   00FC94  3C                 	db	60
  2007   00FC95  3E                 	db	62
  2008   00FC96  27                 	db	39
  2009   00FC97  3D                 	db	61
  2010   00FC98  18                 	db	24
  2011   00FC99  1C                 	db	28
  2012   00FC9A  3E                 	db	62
  2013   00FC9B  6B                 	db	107
  2014   00FC9C  49                 	db	73
  2015   00FC9D  49                 	db	73
  2016   00FC9E  00                 	db	0
  2017   00FC9F  00                 	db	0
  2018   00FCA0  00                 	db	0
  2019   00FCA1  7E                 	db	126
  2020   00FCA2  7F                 	db	127
  2021   00FCA3  01                 	db	1
  2022   00FCA4  01                 	db	1
  2023   00FCA5  7F                 	db	127
  2024   00FCA6  7E                 	db	126
  2025   00FCA7  00                 	db	0
  2026   00FCA8  00                 	db	0
  2027   00FCA9  2A                 	db	42
  2028   00FCAA  2A                 	db	42
  2029   00FCAB  2A                 	db	42
  2030   00FCAC  2A                 	db	42
  2031   00FCAD  2A                 	db	42
  2032   00FCAE  2A                 	db	42
  2033   00FCAF  00                 	db	0
  2034   00FCB0  00                 	db	0
  2035   00FCB1  44                 	db	68
  2036   00FCB2  44                 	db	68
  2037   00FCB3  5F                 	db	95
  2038   00FCB4  5F                 	db	95
  2039   00FCB5  44                 	db	68
  2040   00FCB6  44                 	db	68
  2041   00FCB7  00                 	db	0
  2042   00FCB8  00                 	db	0
  2043   00FCB9  40                 	db	64
  2044   00FCBA  51                 	db	81
  2045   00FCBB  5B                 	db	91
  2046   00FCBC  4E                 	db	78
  2047   00FCBD  44                 	db	68
  2048   00FCBE  40                 	db	64
  2049   00FCBF  00                 	db	0
  2050   00FCC0  00                 	db	0
  2051   00FCC1  40                 	db	64
  2052   00FCC2  44                 	db	68
  2053   00FCC3  4E                 	db	78
  2054   00FCC4  5B                 	db	91
  2055   00FCC5  51                 	db	81
  2056   00FCC6  40                 	db	64
  2057   00FCC7  00                 	db	0
  2058   00FCC8  00                 	db	0
  2059   00FCC9  00                 	db	0
  2060   00FCCA  00                 	db	0
  2061   00FCCB  00                 	db	0
  2062   00FCCC  FE                 	db	254
  2063   00FCCD  FF                 	db	255
  2064   00FCCE  01                 	db	1
  2065   00FCCF  07                 	db	7
  2066   00FCD0  06                 	db	6
  2067   00FCD1  60                 	db	96
  2068   00FCD2  E0                 	db	224
  2069   00FCD3  80                 	db	128
  2070   00FCD4  FF                 	db	255
  2071   00FCD5  7F                 	db	127
  2072   00FCD6  00                 	db	0
  2073   00FCD7  00                 	db	0
  2074   00FCD8  00                 	db	0
  2075   00FCD9  08                 	db	8
  2076   00FCDA  08                 	db	8
  2077   00FCDB  6B                 	db	107
  2078   00FCDC  6B                 	db	107
  2079   00FCDD  08                 	db	8
  2080   00FCDE  08                 	db	8
  2081   00FCDF  00                 	db	0
  2082   00FCE0  00                 	db	0
  2083   00FCE1  24                 	db	36
  2084   00FCE2  36                 	db	54
  2085   00FCE3  12                 	db	18
  2086   00FCE4  36                 	db	54
  2087   00FCE5  24                 	db	36
  2088   00FCE6  36                 	db	54
  2089   00FCE7  12                 	db	18
  2090   00FCE8  00                 	db	0
  2091   00FCE9  00                 	db	0
  2092   00FCEA  06                 	db	6
  2093   00FCEB  0F                 	db	15
  2094   00FCEC  09                 	db	9
  2095   00FCED  0F                 	db	15
  2096   00FCEE  06                 	db	6
  2097   00FCEF  00                 	db	0
  2098   00FCF0  00                 	db	0
  2099   00FCF1  00                 	db	0
  2100   00FCF2  00                 	db	0
  2101   00FCF3  00                 	db	0
  2102   00FCF4  18                 	db	24
  2103   00FCF5  18                 	db	24
  2104   00FCF6  00                 	db	0
  2105   00FCF7  00                 	db	0
  2106   00FCF8  00                 	db	0
  2107   00FCF9  00                 	db	0
  2108   00FCFA  00                 	db	0
  2109   00FCFB  00                 	db	0
  2110   00FCFC  10                 	db	16
  2111   00FCFD  10                 	db	16
  2112   00FCFE  00                 	db	0
  2113   00FCFF  00                 	db	0
  2114   00FD00  00                 	db	0
  2115   00FD01  10                 	db	16
  2116   00FD02  30                 	db	48
  2117   00FD03  70                 	db	112
  2118   00FD04  C0                 	db	192
  2119   00FD05  FF                 	db	255
  2120   00FD06  FF                 	db	255
  2121   00FD07  01                 	db	1
  2122   00FD08  01                 	db	1
  2123   00FD09  00                 	db	0
  2124   00FD0A  1F                 	db	31
  2125   00FD0B  1F                 	db	31
  2126   00FD0C  01                 	db	1
  2127   00FD0D  1F                 	db	31
  2128   00FD0E  1E                 	db	30
  2129   00FD0F  00                 	db	0
  2130   00FD10  00                 	db	0
  2131   00FD11  00                 	db	0
  2132   00FD12  19                 	db	25
  2133   00FD13  1D                 	db	29
  2134   00FD14  17                 	db	23
  2135   00FD15  12                 	db	18
  2136   00FD16  00                 	db	0
  2137   00FD17  00                 	db	0
  2138   00FD18  00                 	db	0
  2139   00FD19  00                 	db	0
  2140   00FD1A  00                 	db	0
  2141   00FD1B  3C                 	db	60
  2142   00FD1C  3C                 	db	60
  2143   00FD1D  3C                 	db	60
  2144   00FD1E  3C                 	db	60
  2145   00FD1F  00                 	db	0
  2146   00FD20  00                 	db	0
  2147   00FD21  00                 	db	0
  2148   00FD22  00                 	db	0
  2149   00FD23  00                 	db	0
  2150   00FD24  00                 	db	0
  2151   00FD25  00                 	db	0
  2152   00FD26  00                 	db	0
  2153   00FD27  00                 	db	0
  2154   00FD28  00                 	db	0
  2155   00FD29                     __end_of_MAX7219_Dot_Matrix_font:
  2156                           	callstack 0
  2157   000000                     _EEDATA	set	4008
  2158   000000                     _EEADR	set	4009
  2159   000000                     _EEADRH	set	4010
  2160   000000                     _EECON2	set	4007
  2161   000000                     _RCREG	set	4014
  2162   000000                     _TXREG	set	4013
  2163   000000                     _SPBRG	set	4015
  2164   000000                     _TXSTA	set	4012
  2165   00FD29                     STR_1:
  2166                           
  2167                           ; BSR set to: 0
  2168   00FD29  41                 	db	65	;'A'
  2169   00FD2A  4C                 	db	76	;'L'
  2170   00FD2B  41                 	db	65	;'A'
  2171   00FD2C  52                 	db	82	;'R'
  2172   00FD2D  4D                 	db	77	;'M'
  2173   00FD2E  00                 	db	0
  2174   00FD2F  00                 	db	0	; dummy byte at the end
  2175   000000                     
  2176                           	psect	nvBANK0
  2177   0000F7                     __pnvBANK0:
  2178                           	callstack 0
  2179   0000F7                     _TMR1_InterruptHandler:
  2180                           	callstack 0
  2181   0000F7                     	ds	2
  2182   0000F9                     _EUSART_RxDefaultInterruptHandler:
  2183                           	callstack 0
  2184   0000F9                     	ds	2
  2185   0000FB                     _EUSART_TxDefaultInterruptHandler:
  2186                           	callstack 0
  2187   0000FB                     	ds	2
  2188   000000                     _LATCbits	set	3979
  2189   000000                     _LATBbits	set	3978
  2190   000000                     _TRISBbits	set	3987
  2191   000000                     _TMR1	set	4046
  2192   000000                     _T1CONbits	set	4045
  2193   000000                     _RCSTAbits	set	4011
  2194   000000                     _TXSTAbits	set	4012
  2195   000000                     _SSPSTATbits	set	4039
  2196   000000                     _SSPCON1bits	set	4038
  2197   000000                     _WPUB	set	3964
  2198   000000                     _ANSEL	set	3966
  2199   000000                     _ANSELH	set	3967
  2200   000000                     _LATA	set	3977
  2201   000000                     _OSCTUNE	set	3995
  2202   000000                     _PIR1bits	set	3998
  2203   000000                     _PIR2bits	set	4001
  2204   000000                     _EECON1bits	set	4006
  2205   000000                     _RCSTA	set	4011
  2206   000000                     _BAUDCON	set	4024
  2207   000000                     _PIE1bits	set	3997
  2208   000000                     _SSPCON1	set	4038
  2209   000000                     _SSPSTAT	set	4039
  2210   000000                     _INTCON2bits	set	4081
  2211   000000                     _T1CON	set	4045
  2212   000000                     _TMR1L	set	4046
  2213   000000                     _TMR1H	set	4047
  2214   000000                     _RCONbits	set	4048
  2215   000000                     _OSCCON	set	4051
  2216   000000                     _SSPBUF	set	4041
  2217   000000                     _SSPADD	set	4040
  2218   000000                     _TRISA	set	3986
  2219   000000                     _LATC	set	3979
  2220   000000                     _LATB	set	3978
  2221   000000                     _TRISC	set	3988
  2222   000000                     _TRISB	set	3987
  2223   000000                     _PORTBbits	set	3969
  2224   000000                     _INTCONbits	set	4082
  2225   000000                     _TABLAT	set	4085
  2226   000000                     _TBLPTRL	set	4086
  2227   000000                     _TBLPTRH	set	4087
  2228   000000                     _TBLPTRU	set	4088
  2229   000000                     _SPBRGH	set	4016
  2230                           
  2231                           ; #config settings
  2232                           
  2233                           	psect	cinit
  2234   001080                     __pcinit:
  2235                           	callstack 0
  2236   001080                     start_initialization:
  2237                           	callstack 0
  2238   001080                     __initialization:
  2239                           	callstack 0
  2240                           
  2241                           ; Clear objects allocated to BANK1 (32 bytes)
  2242   001080  EE01  F000         	lfsr	0,__pbssBANK1
  2243   001084  0E20               	movlw	32
  2244   001086                     clear_0:
  2245   001086  6AEE               	clrf	postinc0,c
  2246   001088  06E8               	decf	wreg,f,c
  2247   00108A  E1FD               	bnz	clear_0
  2248                           
  2249                           ; Clear objects allocated to BANK0 (80 bytes)
  2250   00108C  EE00  F060         	lfsr	0,__pbssBANK0
  2251   001090  0E50               	movlw	80
  2252   001092                     clear_1:
  2253   001092  6AEE               	clrf	postinc0,c
  2254   001094  06E8               	decf	wreg,f,c
  2255   001096  E1FD               	bnz	clear_1
  2256                           
  2257                           ; Clear objects allocated to COMRAM (6 bytes)
  2258   001098  6A58               	clrf	(__pbssCOMRAM+5)& (0+255),c
  2259   00109A  6A57               	clrf	(__pbssCOMRAM+4)& (0+255),c
  2260   00109C  6A56               	clrf	(__pbssCOMRAM+3)& (0+255),c
  2261   00109E  6A55               	clrf	(__pbssCOMRAM+2)& (0+255),c
  2262   0010A0  6A54               	clrf	(__pbssCOMRAM+1)& (0+255),c
  2263   0010A2  6A53               	clrf	__pbssCOMRAM& (0+255),c
  2264   0010A4                     end_of_initialization:
  2265                           	callstack 0
  2266   0010A4                     __end_of__initialization:
  2267                           	callstack 0
  2268   0010A4  9059               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  2269   0010A6  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2270   0010A8  0100               	movlb	0
  2271   0010AA  EF67  F003         	goto	_main	;jump to C main() function
  2272                           
  2273                           	psect	bssCOMRAM
  2274   000053                     __pbssCOMRAM:
  2275                           	callstack 0
  2276   000053                     _uartBufferIndex:
  2277                           	callstack 0
  2278   000053                     	ds	1
  2279   000054                     _eusartRxTail:
  2280                           	callstack 0
  2281   000054                     	ds	1
  2282   000055                     _eusartRxHead:
  2283                           	callstack 0
  2284   000055                     	ds	1
  2285   000056                     _eusartTxBufferRemaining:
  2286                           	callstack 0
  2287   000056                     	ds	1
  2288   000057                     _eusartTxTail:
  2289                           	callstack 0
  2290   000057                     	ds	1
  2291   000058                     _eusartTxHead:
  2292                           	callstack 0
  2293   000058                     	ds	1
  2294                           
  2295                           	psect	bssBANK0
  2296   000060                     __pbssBANK0:
  2297                           	callstack 0
  2298   000060                     _bufferCol:
  2299                           	callstack 0
  2300   000060                     	ds	32
  2301   000080                     _uartBuffer:
  2302                           	callstack 0
  2303   000080                     	ds	10
  2304   00008A                     _eusartRxBuffer:
  2305                           	callstack 0
  2306   00008A                     	ds	8
  2307   000092                     _eusartTxBuffer:
  2308                           	callstack 0
  2309   000092                     	ds	8
  2310   00009A                     checkButtons@button3HoldTime:
  2311                           	callstack 0
  2312   00009A                     	ds	2
  2313   00009C                     _button3PressTime:
  2314                           	callstack 0
  2315   00009C                     	ds	2
  2316   00009E                     _blinkTimer:
  2317                           	callstack 0
  2318   00009E                     	ds	2
  2319   0000A0                     _timer1ReloadVal:
  2320                           	callstack 0
  2321   0000A0                     	ds	2
  2322   0000A2                     checkButtons@button3PressCount:
  2323                           	callstack 0
  2324   0000A2                     	ds	1
  2325   0000A3                     _currentMode:
  2326                           	callstack 0
  2327   0000A3                     	ds	1
  2328   0000A4                     _btTimeSet:
  2329                           	callstack 0
  2330   0000A4                     	ds	1
  2331   0000A5                     _isButton3Pressed:
  2332                           	callstack 0
  2333   0000A5                     	ds	1
  2334   0000A6                     _displayBlinking:
  2335                           	callstack 0
  2336   0000A6                     	ds	1
  2337   0000A7                     _alarmTriggered:
  2338                           	callstack 0
  2339   0000A7                     	ds	1
  2340   0000A8                     _alarmActive:
  2341                           	callstack 0
  2342   0000A8                     	ds	1
  2343   0000A9                     _alarmSet:
  2344                           	callstack 0
  2345   0000A9                     	ds	1
  2346   0000AA                     _alarmMinutes:
  2347                           	callstack 0
  2348   0000AA                     	ds	1
  2349   0000AB                     _alarmHours:
  2350                           	callstack 0
  2351   0000AB                     	ds	1
  2352   0000AC                     _seconds:
  2353                           	callstack 0
  2354   0000AC                     	ds	1
  2355   0000AD                     _minutes:
  2356                           	callstack 0
  2357   0000AD                     	ds	1
  2358   0000AE                     _hours:
  2359                           	callstack 0
  2360   0000AE                     	ds	1
  2361   0000AF                     _eusartRxCount:
  2362                           	callstack 0
  2363   0000AF                     	ds	1
  2364                           
  2365                           	psect	bssBANK1
  2366   000100                     __pbssBANK1:
  2367                           	callstack 0
  2368   000100                     	ds	32
  2369                           
  2370                           	psect	cstackBANK0
  2371   0000B0                     __pcstackBANK0:
  2372                           	callstack 0
  2373   0000B0                     printString@indx:
  2374                           	callstack 0
  2375   0000B0                     saveTimeToFlash@flashBuffer:
  2376                           	callstack 0
  2377                           
  2378                           ; 64 bytes @ 0x0
  2379   0000B0                     	ds	2
  2380   0000B2                     printString@data:
  2381                           	callstack 0
  2382                           
  2383                           ; 1 bytes @ 0x2
  2384   0000B2                     	ds	1
  2385   0000B3                     printString@strindx:
  2386                           	callstack 0
  2387                           
  2388                           ; 2 bytes @ 0x3
  2389   0000B3                     	ds	2
  2390   0000B5                     printString@i:
  2391                           	callstack 0
  2392                           
  2393                           ; 2 bytes @ 0x5
  2394   0000B5                     	ds	2
  2395   0000B7                     printString@k:
  2396                           	callstack 0
  2397                           
  2398                           ; 2 bytes @ 0x7
  2399   0000B7                     	ds	2
  2400   0000B9                     printString@j:
  2401                           	callstack 0
  2402                           
  2403                           ; 2 bytes @ 0x9
  2404   0000B9                     	ds	2
  2405   0000BB                     triggerAlarm@numCycles:
  2406                           	callstack 0
  2407   0000BB                     displayTime@displayString:
  2408                           	callstack 0
  2409   0000BB                     displayAlarmTime@displayString:
  2410                           	callstack 0
  2411                           
  2412                           ; 5 bytes @ 0xB
  2413   0000BB                     	ds	2
  2414   0000BD                     triggerAlarm@i:
  2415                           	callstack 0
  2416                           
  2417                           ; 2 bytes @ 0xD
  2418   0000BD                     	ds	3
  2419   0000C0                     displayTime@timeString:
  2420                           	callstack 0
  2421   0000C0                     displayAlarmTime@alarmTimeString:
  2422                           	callstack 0
  2423                           
  2424                           ; 5 bytes @ 0x10
  2425   0000C0                     	ds	5
  2426   0000C5                     displayTime@i:
  2427                           	callstack 0
  2428   0000C5                     displayAlarmTime@i:
  2429                           	callstack 0
  2430                           
  2431                           ; 2 bytes @ 0x15
  2432   0000C5                     	ds	43
  2433   0000F0                     saveTimeToFlash@flashAddress:
  2434                           	callstack 0
  2435                           
  2436                           ; 4 bytes @ 0x40
  2437   0000F0                     	ds	4
  2438   0000F4                     saveTimeToFlash@i:
  2439                           	callstack 0
  2440                           
  2441                           ; 1 bytes @ 0x44
  2442   0000F4                     	ds	1
  2443   0000F5                     main@hours_pom:
  2444                           	callstack 0
  2445                           
  2446                           ; 1 bytes @ 0x45
  2447   0000F5                     	ds	1
  2448   0000F6                     main@minutes_pom:
  2449                           	callstack 0
  2450                           
  2451                           ; 1 bytes @ 0x46
  2452   0000F6                     	ds	1
  2453                           
  2454                           	psect	cstackCOMRAM
  2455   000001                     __pcstackCOMRAM:
  2456                           	callstack 0
  2457   000001                     btGetData@rcv:
  2458                           	callstack 0
  2459   000001                     TMR1_WriteTimer@timerVal:
  2460                           	callstack 0
  2461                           
  2462                           ; 2 bytes @ 0x0
  2463   000001                     	ds	2
  2464   000003                     ??_INTERRUPT_InterruptManager:
  2465   000003                     
  2466                           ; 1 bytes @ 0x2
  2467   000003                     	ds	4
  2468   000007                     ?___wmul:
  2469                           	callstack 0
  2470   000007                     ?___awdiv:
  2471                           	callstack 0
  2472   000007                     ?___awmod:
  2473                           	callstack 0
  2474   000007                     SPI_Exchange8bit@data:
  2475                           	callstack 0
  2476   000007                     EUSART_SetTxInterruptHandler@handler:
  2477                           	callstack 0
  2478   000007                     EUSART_SetRxInterruptHandler@handler:
  2479                           	callstack 0
  2480   000007                     TMR1_SetInterruptHandler@InterruptHandler:
  2481                           	callstack 0
  2482   000007                     delayMicroseconds@microseconds:
  2483                           	callstack 0
  2484   000007                     ___wmul@multiplier:
  2485                           	callstack 0
  2486   000007                     ___awdiv@dividend:
  2487                           	callstack 0
  2488   000007                     ___awmod@dividend:
  2489                           	callstack 0
  2490   000007                     FLASH_ReadByte@flashAddr:
  2491                           	callstack 0
  2492   000007                     FLASH_EraseBlock@baseAddr:
  2493                           	callstack 0
  2494                           
  2495                           ; 4 bytes @ 0x6
  2496   000007                     	ds	1
  2497   000008                     max7219_cmd@data:
  2498                           	callstack 0
  2499                           
  2500                           ; 1 bytes @ 0x7
  2501   000008                     	ds	1
  2502   000009                     ??_max7219_cmd:
  2503   000009                     delayMicroseconds@i:
  2504                           	callstack 0
  2505   000009                     ___wmul@multiplicand:
  2506                           	callstack 0
  2507   000009                     ___awdiv@divisor:
  2508                           	callstack 0
  2509   000009                     ___awmod@divisor:
  2510                           	callstack 0
  2511                           
  2512                           ; 2 bytes @ 0x8
  2513   000009                     	ds	2
  2514   00000B                     FLASH_EraseBlock@GIEBitValue:
  2515                           	callstack 0
  2516   00000B                     max7219_cmd@Addr:
  2517                           	callstack 0
  2518   00000B                     ___awdiv@counter:
  2519                           	callstack 0
  2520   00000B                     ___awmod@counter:
  2521                           	callstack 0
  2522   00000B                     ___wmul@product:
  2523                           	callstack 0
  2524                           
  2525                           ; 2 bytes @ 0xA
  2526   00000B                     	ds	1
  2527   00000C                     ___awdiv@sign:
  2528                           	callstack 0
  2529   00000C                     ___awmod@sign:
  2530                           	callstack 0
  2531   00000C                     max7219_cmd@writeData:
  2532                           	callstack 0
  2533   00000C                     FLASH_WriteBlock@writeAddr:
  2534                           	callstack 0
  2535                           
  2536                           ; 4 bytes @ 0xB
  2537   00000C                     	ds	1
  2538   00000D                     ?___lwdiv:
  2539                           	callstack 0
  2540   00000D                     ___awdiv@quotient:
  2541                           	callstack 0
  2542   00000D                     ___lwdiv@dividend:
  2543                           	callstack 0
  2544                           
  2545                           ; 2 bytes @ 0xC
  2546   00000D                     	ds	1
  2547   00000E                     max7219_cmd@i:
  2548                           	callstack 0
  2549                           
  2550                           ; 2 bytes @ 0xD
  2551   00000E                     	ds	1
  2552   00000F                     max_write@row:
  2553                           	callstack 0
  2554   00000F                     ___lwdiv@divisor:
  2555                           	callstack 0
  2556                           
  2557                           ; 2 bytes @ 0xE
  2558   00000F                     	ds	1
  2559   000010                     FLASH_WriteBlock@flashWrBufPtr:
  2560                           	callstack 0
  2561                           
  2562                           ; 1 bytes @ 0xF
  2563   000010                     	ds	1
  2564   000011                     max_write@data:
  2565                           	callstack 0
  2566   000011                     ___lwdiv@counter:
  2567                           	callstack 0
  2568   000011                     FLASH_WriteBlock@blockStartAddr:
  2569                           	callstack 0
  2570                           
  2571                           ; 4 bytes @ 0x10
  2572   000011                     	ds	1
  2573   000012                     ??_max_write:
  2574   000012                     ___lwdiv@quotient:
  2575                           	callstack 0
  2576                           
  2577                           ; 2 bytes @ 0x11
  2578   000012                     	ds	2
  2579   000014                     generateBeep@duration_ms:
  2580                           	callstack 0
  2581   000014                     max_write@offset:
  2582                           	callstack 0
  2583                           
  2584                           ; 2 bytes @ 0x13
  2585   000014                     	ds	1
  2586   000015                     FLASH_WriteBlock@GIEBitValue:
  2587                           	callstack 0
  2588                           
  2589                           ; 1 bytes @ 0x14
  2590   000015                     	ds	1
  2591   000016                     FLASH_WriteBlock@j:
  2592                           	callstack 0
  2593   000016                     generateBeep@cycles:
  2594                           	callstack 0
  2595   000016                     max_write@devTarget:
  2596                           	callstack 0
  2597                           
  2598                           ; 2 bytes @ 0x15
  2599   000016                     	ds	1
  2600   000017                     FLASH_WriteBlock@numberOfWriteBlocks:
  2601                           	callstack 0
  2602                           
  2603                           ; 1 bytes @ 0x16
  2604   000017                     	ds	1
  2605   000018                     FLASH_WriteBlock@dataCounter:
  2606                           	callstack 0
  2607   000018                     generateBeep@i:
  2608                           	callstack 0
  2609   000018                     max_write@dev:
  2610                           	callstack 0
  2611                           
  2612                           ; 2 bytes @ 0x17
  2613   000018                     	ds	1
  2614   000019                     FLASH_WriteBlock@i:
  2615                           	callstack 0
  2616                           
  2617                           ; 1 bytes @ 0x18
  2618   000019                     	ds	1
  2619   00001A                     max_write@writeData:
  2620                           	callstack 0
  2621                           
  2622                           ; 2 bytes @ 0x19
  2623   00001A                     	ds	2
  2624   00001C                     ??_flushBuffer:
  2625                           
  2626                           ; 1 bytes @ 0x1B
  2627   00001C                     	ds	3
  2628   00001F                     flushBuffer@bufferRow:
  2629                           	callstack 0
  2630                           
  2631                           ; 32 bytes @ 0x1E
  2632   00001F                     	ds	32
  2633   00003F                     flushBuffer@dev:
  2634                           	callstack 0
  2635                           
  2636                           ; 2 bytes @ 0x3E
  2637   00003F                     	ds	2
  2638   000041                     flushBuffer@j:
  2639                           	callstack 0
  2640                           
  2641                           ; 2 bytes @ 0x40
  2642   000041                     	ds	2
  2643   000043                     flushBuffer@row:
  2644                           	callstack 0
  2645                           
  2646                           ; 2 bytes @ 0x42
  2647   000043                     	ds	2
  2648   000045                     flushBuffer@i:
  2649                           	callstack 0
  2650                           
  2651                           ; 2 bytes @ 0x44
  2652   000045                     	ds	2
  2653   000047                     clearDisplay@i:
  2654                           	callstack 0
  2655   000047                     printString@str:
  2656                           	callstack 0
  2657                           
  2658                           ; 2 bytes @ 0x46
  2659   000047                     	ds	2
  2660   000049                     ??_printString:
  2661                           
  2662                           ; 1 bytes @ 0x48
  2663   000049                     	ds	8
  2664   000051                     ??_checkButtons:
  2665   000051                     ??_triggerAlarm:
  2666   000051                     
  2667                           ; 1 bytes @ 0x50
  2668   000051                     	ds	2
  2669   000053                     
  2670                           ; 1 bytes @ 0x52
  2671 ;;
  2672 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2673 ;;
  2674 ;; *************** function _main *****************
  2675 ;; Defined at:
  2676 ;;		line 46 in file "main.c"
  2677 ;; Parameters:    Size  Location     Type
  2678 ;;		None
  2679 ;; Auto vars:     Size  Location     Type
  2680 ;;  minutes_pom     1   70[BANK0 ] unsigned char 
  2681 ;;  hours_pom       1   69[BANK0 ] unsigned char 
  2682 ;; Return value:  Size  Location     Type
  2683 ;;                  1    wreg      void 
  2684 ;; Registers used:
  2685 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2686 ;; Tracked objects:
  2687 ;;		On entry : 0/0
  2688 ;;		On exit  : 0/0
  2689 ;;		Unchanged: 0/0
  2690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2691 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2692 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;Total ram usage:        2 bytes
  2696 ;; Hardware stack levels required when called: 11
  2697 ;; This function calls:
  2698 ;;		_SYSTEM_Initialize
  2699 ;;		_TMR1_StartTimer
  2700 ;;		_checkButtons
  2701 ;;		_clearDisplay
  2702 ;;		_displayTime
  2703 ;;		_loadTimeFromFlash
  2704 ;;		_matrixInit
  2705 ;;		_processAlarm
  2706 ;;		_saveTimeToFlash
  2707 ;; This function is called by:
  2708 ;;		Startup code after reset
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text0
  2713   0006CE                     __ptext0:
  2714                           	callstack 0
  2715   0006CE                     _main:
  2716                           	callstack 20
  2717   0006CE                     
  2718                           ;main.c: 48:     SYSTEM_Initialize();
  2719   0006CE  ECDB  F008         	call	_SYSTEM_Initialize	;wreg free
  2720                           
  2721                           ;main.c: 49:     matrixInit();
  2722   0006D2  EC0C  F008         	call	_matrixInit	;wreg free
  2723   0006D6                     
  2724                           ;main.c: 50:     clearDisplay();
  2725   0006D6  ECF0  F007         	call	_clearDisplay	;wreg free
  2726   0006DA                     
  2727                           ;main.c: 51:     loadTimeFromFlash();
  2728   0006DA  ECEB  F004         	call	_loadTimeFromFlash	;wreg free
  2729   0006DE                     
  2730                           ;main.c: 53:     TMR1_StartTimer();
  2731   0006DE  EC1F  F009         	call	_TMR1_StartTimer	;wreg free
  2732   0006E2                     
  2733                           ;main.c: 54:     TRISBbits.RB3 = 0;
  2734   0006E2  9693               	bcf	147,3,c	;volatile
  2735   0006E4                     
  2736                           ;main.c: 55:     INTCONbits.GIE = 1;
  2737   0006E4  8EF2               	bsf	242,7,c	;volatile
  2738   0006E6                     
  2739                           ;main.c: 56:     INTCONbits.PEIE = 1;
  2740   0006E6  8CF2               	bsf	242,6,c	;volatile
  2741   0006E8                     l4000:
  2742                           
  2743                           ;main.c: 60:     {;main.c: 61:         displayTime();
  2744   0006E8  EC46  F005         	call	_displayTime	;wreg free
  2745   0006EC                     
  2746                           ;main.c: 62:         checkButtons();
  2747   0006EC  EC57  F000         	call	_checkButtons	;wreg free
  2748   0006F0                     
  2749                           ;main.c: 63:         processAlarm();
  2750   0006F0  EC54  F007         	call	_processAlarm	;wreg free
  2751   0006F4                     
  2752                           ;main.c: 64:         if(btTimeSet) {
  2753   0006F4  0100               	movlb	0	; () banked
  2754   0006F6  51A4               	movf	_btTimeSet& (0+255),w,b
  2755   0006F8  B4D8               	btfsc	status,2,c
  2756   0006FA  EF81  F003         	goto	u3331
  2757   0006FE  EF83  F003         	goto	u3330
  2758   000702                     u3331:
  2759   000702  EF74  F003         	goto	l4000
  2760   000706                     u3330:
  2761   000706                     
  2762                           ; BSR set to: 0
  2763                           ;main.c: 66:             if (uartBuffer[0] == 'H' && uartBuffer[3] == 'M' && uartBuffer[
      +                          6] == ';')
  2764   000706  0E48               	movlw	72
  2765   000708  1980               	xorwf	_uartBuffer& (0+255),w,b
  2766   00070A  A4D8               	btfss	status,2,c
  2767   00070C  EF8A  F003         	goto	u3341
  2768   000710  EF8C  F003         	goto	u3340
  2769   000714                     u3341:
  2770   000714  EF74  F003         	goto	l4000
  2771   000718                     u3340:
  2772   000718                     
  2773                           ; BSR set to: 0
  2774   000718  0E4D               	movlw	77
  2775   00071A  1983               	xorwf	(_uartBuffer+3)& (0+255),w,b
  2776   00071C  A4D8               	btfss	status,2,c
  2777   00071E  EF93  F003         	goto	u3351
  2778   000722  EF95  F003         	goto	u3350
  2779   000726                     u3351:
  2780   000726  EF74  F003         	goto	l4000
  2781   00072A                     u3350:
  2782   00072A                     
  2783                           ; BSR set to: 0
  2784   00072A  0E3B               	movlw	59
  2785   00072C  1986               	xorwf	(_uartBuffer+6)& (0+255),w,b
  2786   00072E  A4D8               	btfss	status,2,c
  2787   000730  EF9C  F003         	goto	u3361
  2788   000734  EF9E  F003         	goto	u3360
  2789   000738                     u3361:
  2790   000738  EF74  F003         	goto	l4000
  2791   00073C                     u3360:
  2792   00073C                     
  2793                           ; BSR set to: 0
  2794                           ;main.c: 67:             {;main.c: 69:                 uint8_t hours_pom = (uartBuffer[1
      +                          ] - '0') * 10 + (uartBuffer[2] - '0');
  2795   00073C  5181               	movf	(_uartBuffer+1)& (0+255),w,b
  2796   00073E  0D0A               	mullw	10
  2797   000740  50F3               	movf	243,w,c
  2798   000742  2582               	addwf	(_uartBuffer+2)& (0+255),w,b
  2799   000744  0FF0               	addlw	240
  2800   000746  6FF5               	movwf	main@hours_pom& (0+255),b
  2801                           
  2802                           ;main.c: 72:                 uint8_t minutes_pom = (uartBuffer[4] - '0') * 10 + (uartBuf
      +                          fer[5] - '0');
  2803   000748  5184               	movf	(_uartBuffer+4)& (0+255),w,b
  2804   00074A  0D0A               	mullw	10
  2805   00074C  50F3               	movf	243,w,c
  2806   00074E  2585               	addwf	(_uartBuffer+5)& (0+255),w,b
  2807   000750  0FF0               	addlw	240
  2808   000752  6FF6               	movwf	main@minutes_pom& (0+255),b
  2809   000754                     
  2810                           ; BSR set to: 0
  2811                           ;main.c: 75:                 if (hours_pom < 24 && minutes_pom < 60)
  2812   000754  0E18               	movlw	24
  2813   000756  61F5               	cpfslt	main@hours_pom& (0+255),b
  2814   000758  EFB0  F003         	goto	u3371
  2815   00075C  EFB2  F003         	goto	u3370
  2816   000760                     u3371:
  2817   000760  EFC6  F003         	goto	l431
  2818   000764                     u3370:
  2819   000764                     
  2820                           ; BSR set to: 0
  2821   000764  0E3C               	movlw	60
  2822   000766  61F6               	cpfslt	main@minutes_pom& (0+255),b
  2823   000768  EFB8  F003         	goto	u3381
  2824   00076C  EFBA  F003         	goto	u3380
  2825   000770                     u3381:
  2826   000770  EFC6  F003         	goto	l431
  2827   000774                     u3380:
  2828   000774                     
  2829                           ; BSR set to: 0
  2830                           ;main.c: 76:                 {;main.c: 78:                     btTimeSet = 0;
  2831   000774  0E00               	movlw	0
  2832   000776  6FA4               	movwf	_btTimeSet& (0+255),b
  2833   000778                     
  2834                           ; BSR set to: 0
  2835                           ;main.c: 79:                     hours = hours_pom;
  2836   000778  C0F5  F0AE         	movff	main@hours_pom,_hours
  2837   00077C                     
  2838                           ; BSR set to: 0
  2839                           ;main.c: 80:                     minutes = minutes_pom;
  2840   00077C  C0F6  F0AD         	movff	main@minutes_pom,_minutes
  2841   000780                     
  2842                           ; BSR set to: 0
  2843                           ;main.c: 81:                     displayTime();
  2844   000780  EC46  F005         	call	_displayTime	;wreg free
  2845   000784                     
  2846                           ;main.c: 82:                     saveTimeToFlash();
  2847   000784  ECA1  F006         	call	_saveTimeToFlash	;wreg free
  2848   000788  EF74  F003         	goto	l4000
  2849   00078C                     l431:
  2850                           
  2851                           ; BSR set to: 0
  2852   00078C  EF74  F003         	goto	l4000
  2853   000790  EF55  F000         	goto	start
  2854   000794                     __end_of_main:
  2855                           	callstack 0
  2856                           
  2857 ;; *************** function _processAlarm *****************
  2858 ;; Defined at:
  2859 ;;		line 164 in file "main.c"
  2860 ;; Parameters:    Size  Location     Type
  2861 ;;		None
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;		None
  2864 ;; Return value:  Size  Location     Type
  2865 ;;                  1    wreg      void 
  2866 ;; Registers used:
  2867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2868 ;; Tracked objects:
  2869 ;;		On entry : 0/0
  2870 ;;		On exit  : 0/0
  2871 ;;		Unchanged: 0/0
  2872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2877 ;;Total ram usage:        0 bytes
  2878 ;; Hardware stack levels used: 1
  2879 ;; Hardware stack levels required when called: 10
  2880 ;; This function calls:
  2881 ;;		_triggerAlarm
  2882 ;; This function is called by:
  2883 ;;		_main
  2884 ;; This function uses a non-reentrant model
  2885 ;;
  2886                           
  2887                           	psect	text1
  2888   000EA8                     __ptext1:
  2889                           	callstack 0
  2890   000EA8                     _processAlarm:
  2891                           	callstack 20
  2892   000EA8                     
  2893                           ;main.c: 167:     if (alarmSet && !alarmTriggered)
  2894   000EA8  0100               	movlb	0	; () banked
  2895   000EAA  51A9               	movf	_alarmSet& (0+255),w,b
  2896   000EAC  B4D8               	btfsc	status,2,c
  2897   000EAE  EF5B  F007         	goto	u3171
  2898   000EB2  EF5D  F007         	goto	u3170
  2899   000EB6                     u3171:
  2900   000EB6  EF7C  F007         	goto	l469
  2901   000EBA                     u3170:
  2902   000EBA                     
  2903                           ; BSR set to: 0
  2904   000EBA  51A7               	movf	_alarmTriggered& (0+255),w,b
  2905   000EBC  A4D8               	btfss	status,2,c
  2906   000EBE  EF63  F007         	goto	u3181
  2907   000EC2  EF65  F007         	goto	u3180
  2908   000EC6                     u3181:
  2909   000EC6  EF7C  F007         	goto	l469
  2910   000ECA                     u3180:
  2911   000ECA                     
  2912                           ; BSR set to: 0
  2913                           ;main.c: 168:     {;main.c: 170:         if (hours == alarmHours && minutes == alarmMinu
      +                          tes)
  2914   000ECA  51AB               	movf	_alarmHours& (0+255),w,b
  2915   000ECC  19AE               	xorwf	_hours& (0+255),w,b
  2916   000ECE  A4D8               	btfss	status,2,c
  2917   000ED0  EF6C  F007         	goto	u3191
  2918   000ED4  EF6E  F007         	goto	u3190
  2919   000ED8                     u3191:
  2920   000ED8  EF7C  F007         	goto	l469
  2921   000EDC                     u3190:
  2922   000EDC                     
  2923                           ; BSR set to: 0
  2924   000EDC  51AA               	movf	_alarmMinutes& (0+255),w,b
  2925   000EDE  19AD               	xorwf	_minutes& (0+255),w,b
  2926   000EE0  A4D8               	btfss	status,2,c
  2927   000EE2  EF75  F007         	goto	u3201
  2928   000EE6  EF77  F007         	goto	u3200
  2929   000EEA                     u3201:
  2930   000EEA  EF7C  F007         	goto	l469
  2931   000EEE                     u3200:
  2932   000EEE                     
  2933                           ; BSR set to: 0
  2934                           ;main.c: 171:         {;main.c: 172:             triggerAlarm();
  2935   000EEE  EC8C  F004         	call	_triggerAlarm	;wreg free
  2936   000EF2                     
  2937                           ;main.c: 173:             alarmTriggered = 1;
  2938   000EF2  0E01               	movlw	1
  2939   000EF4  0100               	movlb	0	; () banked
  2940   000EF6  6FA7               	movwf	_alarmTriggered& (0+255),b
  2941   000EF8                     l469:
  2942                           
  2943                           ; BSR set to: 0
  2944   000EF8  0012               	return		;funcret
  2945   000EFA                     __end_of_processAlarm:
  2946                           	callstack 0
  2947                           
  2948 ;; *************** function _triggerAlarm *****************
  2949 ;; Defined at:
  2950 ;;		line 179 in file "main.c"
  2951 ;; Parameters:    Size  Location     Type
  2952 ;;		None
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  i               2   13[BANK0 ] unsigned int 
  2955 ;;  numCycles       2   11[BANK0 ] unsigned int 
  2956 ;; Return value:  Size  Location     Type
  2957 ;;                  1    wreg      void 
  2958 ;; Registers used:
  2959 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2960 ;; Tracked objects:
  2961 ;;		On entry : 0/0
  2962 ;;		On exit  : 0/0
  2963 ;;		Unchanged: 0/0
  2964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2966 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2967 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Totals:         2       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;Total ram usage:        6 bytes
  2970 ;; Hardware stack levels used: 1
  2971 ;; Hardware stack levels required when called: 9
  2972 ;; This function calls:
  2973 ;;		_clearAlarm
  2974 ;;		_clearDisplay
  2975 ;;		_generateBeep
  2976 ;;		_printString
  2977 ;; This function is called by:
  2978 ;;		_processAlarm
  2979 ;; This function uses a non-reentrant model
  2980 ;;
  2981                           
  2982                           	psect	text2
  2983   000918                     __ptext2:
  2984                           	callstack 0
  2985   000918                     _triggerAlarm:
  2986                           	callstack 20
  2987   000918                     
  2988                           ;main.c: 186:     unsigned int numCycles = 60000 / (2 * 500);
  2989   000918  0E00               	movlw	0
  2990   00091A  0100               	movlb	0	; () banked
  2991   00091C  6FBC               	movwf	(triggerAlarm@numCycles+1)& (0+255),b
  2992   00091E  0E3C               	movlw	60
  2993   000920  6FBB               	movwf	triggerAlarm@numCycles& (0+255),b
  2994                           
  2995                           ;main.c: 188:     for (unsigned int i = 0; i < numCycles; i++)
  2996   000922  0E00               	movlw	0
  2997   000924  6FBE               	movwf	(triggerAlarm@i+1)& (0+255),b
  2998   000926  0E00               	movlw	0
  2999   000928  6FBD               	movwf	triggerAlarm@i& (0+255),b
  3000   00092A  EFDF  F004         	goto	l3742
  3001   00092E                     l473:
  3002                           
  3003                           ; BSR set to: 0
  3004                           ;main.c: 189:     {;main.c: 191:         if (!PORTBbits.RB2)
  3005   00092E  B481               	btfsc	129,2,c	;volatile
  3006   000930  EF9C  F004         	goto	u2941
  3007   000934  EF9E  F004         	goto	u2940
  3008   000938                     u2941:
  3009   000938  EFB8  F004         	goto	l3730
  3010   00093C                     u2940:
  3011   00093C                     
  3012                           ; BSR set to: 0
  3013                           ;main.c: 192:         {;main.c: 193:             _delay((unsigned long)((100)*(8000000/4
      +                          000.0)));
  3014   00093C  0E02               	movlw	2
  3015   00093E  6E52               	movwf	(??_triggerAlarm+1)^0,c
  3016   000940  0E04               	movlw	4
  3017   000942  6E51               	movwf	??_triggerAlarm^0,c
  3018   000944  0EBA               	movlw	186
  3019   000946                     u3407:
  3020   000946  2EE8               	decfsz	wreg,f,c
  3021   000948  D7FE               	bra	u3407
  3022   00094A  2E51               	decfsz	??_triggerAlarm^0,f,c
  3023   00094C  D7FC               	bra	u3407
  3024   00094E  2E52               	decfsz	(??_triggerAlarm+1)^0,f,c
  3025   000950  D7FA               	bra	u3407
  3026   000952  F000 F000          	nop2	
  3027   000956                     
  3028                           ;main.c: 194:             if (!PORTBbits.RB2)
  3029   000956  B481               	btfsc	129,2,c	;volatile
  3030   000958  EFB0  F004         	goto	u2951
  3031   00095C  EFB2  F004         	goto	u2950
  3032   000960                     u2951:
  3033   000960  EFB8  F004         	goto	l3730
  3034   000964                     u2950:
  3035   000964                     
  3036                           ;main.c: 195:             {;main.c: 196:                 clearDisplay();
  3037   000964  ECF0  F007         	call	_clearDisplay	;wreg free
  3038   000968                     
  3039                           ;main.c: 197:                 clearAlarm();
  3040   000968  EC02  F009         	call	_clearAlarm	;wreg free
  3041   00096C  EFEA  F004         	goto	l476
  3042   000970                     l3730:
  3043                           
  3044                           ;main.c: 203:         printString("ALARM");
  3045   000970  0E29               	movlw	low STR_1
  3046   000972  6E47               	movwf	printString@str^0,c
  3047   000974  0EFD               	movlw	high STR_1
  3048   000976  6E48               	movwf	(printString@str+1)^0,c
  3049   000978  EC91  F001         	call	_printString	;wreg free
  3050   00097C                     
  3051                           ;main.c: 205:         generateBeep(500);
  3052   00097C  0E01               	movlw	1
  3053   00097E  6E15               	movwf	(generateBeep@duration_ms+1)^0,c
  3054   000980  0EF4               	movlw	244
  3055   000982  6E14               	movwf	generateBeep@duration_ms^0,c
  3056   000984  ECE0  F006         	call	_generateBeep	;wreg free
  3057   000988                     
  3058                           ;main.c: 206:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3059   000988  0E06               	movlw	6
  3060   00098A  6E52               	movwf	(??_triggerAlarm+1)^0,c
  3061   00098C  0E13               	movlw	19
  3062   00098E  6E51               	movwf	??_triggerAlarm^0,c
  3063   000990  0EAE               	movlw	174
  3064   000992                     u3417:
  3065   000992  2EE8               	decfsz	wreg,f,c
  3066   000994  D7FE               	bra	u3417
  3067   000996  2E51               	decfsz	??_triggerAlarm^0,f,c
  3068   000998  D7FC               	bra	u3417
  3069   00099A  2E52               	decfsz	(??_triggerAlarm+1)^0,f,c
  3070   00099C  D7FA               	bra	u3417
  3071   00099E                     
  3072                           ;main.c: 207:         clearDisplay();
  3073   00099E  ECF0  F007         	call	_clearDisplay	;wreg free
  3074   0009A2                     
  3075                           ;main.c: 209:         _delay((unsigned long)((500)*(8000000/4000.0)));
  3076   0009A2  0E06               	movlw	6
  3077   0009A4  6E52               	movwf	(??_triggerAlarm+1)^0,c
  3078   0009A6  0E13               	movlw	19
  3079   0009A8  6E51               	movwf	??_triggerAlarm^0,c
  3080   0009AA  0EAE               	movlw	174
  3081   0009AC                     u3427:
  3082   0009AC  2EE8               	decfsz	wreg,f,c
  3083   0009AE  D7FE               	bra	u3427
  3084   0009B0  2E51               	decfsz	??_triggerAlarm^0,f,c
  3085   0009B2  D7FC               	bra	u3427
  3086   0009B4  2E52               	decfsz	(??_triggerAlarm+1)^0,f,c
  3087   0009B6  D7FA               	bra	u3427
  3088   0009B8                     
  3089                           ;main.c: 210:     }
  3090   0009B8  0100               	movlb	0	; () banked
  3091   0009BA  4BBD               	infsnz	triggerAlarm@i& (0+255),f,b
  3092   0009BC  2BBE               	incf	(triggerAlarm@i+1)& (0+255),f,b
  3093   0009BE                     l3742:
  3094                           
  3095                           ; BSR set to: 0
  3096   0009BE  51BB               	movf	triggerAlarm@numCycles& (0+255),w,b
  3097   0009C0  5DBD               	subwf	triggerAlarm@i& (0+255),w,b
  3098   0009C2  51BC               	movf	(triggerAlarm@numCycles+1)& (0+255),w,b
  3099   0009C4  59BE               	subwfb	(triggerAlarm@i+1)& (0+255),w,b
  3100   0009C6  A0D8               	btfss	status,0,c
  3101   0009C8  EFE8  F004         	goto	u2961
  3102   0009CC  EFEA  F004         	goto	u2960
  3103   0009D0                     u2961:
  3104   0009D0  EF97  F004         	goto	l473
  3105   0009D4                     u2960:
  3106   0009D4                     l476:
  3107   0009D4  0012               	return		;funcret
  3108   0009D6                     __end_of_triggerAlarm:
  3109                           	callstack 0
  3110                           
  3111 ;; *************** function _generateBeep *****************
  3112 ;; Defined at:
  3113 ;;		line 99 in file "main.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  duration_ms     2   19[COMRAM] unsigned int 
  3116 ;; Auto vars:     Size  Location     Type
  3117 ;;  i               2   23[COMRAM] unsigned int 
  3118 ;;  cycles          2   21[COMRAM] unsigned int 
  3119 ;; Return value:  Size  Location     Type
  3120 ;;                  1    wreg      void 
  3121 ;; Registers used:
  3122 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3123 ;; Tracked objects:
  3124 ;;		On entry : 0/0
  3125 ;;		On exit  : 0/0
  3126 ;;		Unchanged: 0/0
  3127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3128 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3129 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3130 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3131 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3132 ;;Total ram usage:        6 bytes
  3133 ;; Hardware stack levels used: 1
  3134 ;; Hardware stack levels required when called: 6
  3135 ;; This function calls:
  3136 ;;		___lwdiv
  3137 ;;		___wmul
  3138 ;;		_delayMicroseconds
  3139 ;; This function is called by:
  3140 ;;		_triggerAlarm
  3141 ;; This function uses a non-reentrant model
  3142 ;;
  3143                           
  3144                           	psect	text3
  3145   000DC0                     __ptext3:
  3146                           	callstack 0
  3147   000DC0                     _generateBeep:
  3148                           	callstack 22
  3149   000DC0                     
  3150                           ;main.c: 100:     unsigned int i;;main.c: 101:     unsigned int cycles = (duration_ms * 
      +                          1000) / 244;
  3151   000DC0  C014  F007         	movff	generateBeep@duration_ms,___wmul@multiplier
  3152   000DC4  C015  F008         	movff	generateBeep@duration_ms+1,___wmul@multiplier+1
  3153   000DC8  0E03               	movlw	3
  3154   000DCA  6E0A               	movwf	(___wmul@multiplicand+1)^0,c
  3155   000DCC  0EE8               	movlw	232
  3156   000DCE  6E09               	movwf	___wmul@multiplicand^0,c
  3157   000DD0  EC97  F008         	call	___wmul	;wreg free
  3158   000DD4  C007  F00D         	movff	?___wmul,___lwdiv@dividend
  3159   000DD8  C008  F00E         	movff	?___wmul+1,___lwdiv@dividend+1
  3160   000DDC  0E00               	movlw	0
  3161   000DDE  6E10               	movwf	(___lwdiv@divisor+1)^0,c
  3162   000DE0  0EF4               	movlw	244
  3163   000DE2  6E0F               	movwf	___lwdiv@divisor^0,c
  3164   000DE4  EC1A  F007         	call	___lwdiv	;wreg free
  3165   000DE8  C00D  F016         	movff	?___lwdiv,generateBeep@cycles
  3166   000DEC  C00E  F017         	movff	?___lwdiv+1,generateBeep@cycles+1
  3167   000DF0                     
  3168                           ;main.c: 102:     for (i = 0; i < cycles; i++) {
  3169   000DF0  0E00               	movlw	0
  3170   000DF2  6E19               	movwf	(generateBeep@i+1)^0,c
  3171   000DF4  0E00               	movlw	0
  3172   000DF6  6E18               	movwf	generateBeep@i^0,c
  3173   000DF8  EF0E  F007         	goto	l3526
  3174   000DFC                     l446:
  3175                           
  3176                           ;main.c: 103:         LATBbits.LATB3 = 1;
  3177   000DFC  868A               	bsf	138,3,c	;volatile
  3178   000DFE                     
  3179                           ;main.c: 104:         delayMicroseconds(122);
  3180   000DFE  0E00               	movlw	0
  3181   000E00  6E08               	movwf	(delayMicroseconds@microseconds+1)^0,c
  3182   000E02  0E7A               	movlw	122
  3183   000E04  6E07               	movwf	delayMicroseconds@microseconds^0,c
  3184   000E06  EC6E  F008         	call	_delayMicroseconds	;wreg free
  3185   000E0A                     
  3186                           ;main.c: 105:         LATBbits.LATB3 = 0;
  3187   000E0A  968A               	bcf	138,3,c	;volatile
  3188                           
  3189                           ;main.c: 106:         delayMicroseconds(122);
  3190   000E0C  0E00               	movlw	0
  3191   000E0E  6E08               	movwf	(delayMicroseconds@microseconds+1)^0,c
  3192   000E10  0E7A               	movlw	122
  3193   000E12  6E07               	movwf	delayMicroseconds@microseconds^0,c
  3194   000E14  EC6E  F008         	call	_delayMicroseconds	;wreg free
  3195   000E18                     
  3196                           ;main.c: 107:     }
  3197   000E18  4A18               	infsnz	generateBeep@i^0,f,c
  3198   000E1A  2A19               	incf	(generateBeep@i+1)^0,f,c
  3199   000E1C                     l3526:
  3200   000E1C  5016               	movf	generateBeep@cycles^0,w,c
  3201   000E1E  5C18               	subwf	generateBeep@i^0,w,c
  3202   000E20  5017               	movf	(generateBeep@cycles+1)^0,w,c
  3203   000E22  5819               	subwfb	(generateBeep@i+1)^0,w,c
  3204   000E24  A0D8               	btfss	status,0,c
  3205   000E26  EF17  F007         	goto	u2741
  3206   000E2A  EF19  F007         	goto	u2740
  3207   000E2E                     u2741:
  3208   000E2E  EFFE  F006         	goto	l446
  3209   000E32                     u2740:
  3210   000E32  0012               	return		;funcret
  3211   000E34                     __end_of_generateBeep:
  3212                           	callstack 0
  3213                           
  3214 ;; *************** function _delayMicroseconds *****************
  3215 ;; Defined at:
  3216 ;;		line 89 in file "main.c"
  3217 ;; Parameters:    Size  Location     Type
  3218 ;;  microseconds    2    6[COMRAM] unsigned int 
  3219 ;; Auto vars:     Size  Location     Type
  3220 ;;  i               2    8[COMRAM] unsigned int 
  3221 ;; Return value:  Size  Location     Type
  3222 ;;                  1    wreg      void 
  3223 ;; Registers used:
  3224 ;;		wreg, status,2, status,0
  3225 ;; Tracked objects:
  3226 ;;		On entry : 0/0
  3227 ;;		On exit  : 0/0
  3228 ;;		Unchanged: 0/0
  3229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3230 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3231 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3232 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3233 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3234 ;;Total ram usage:        4 bytes
  3235 ;; Hardware stack levels used: 1
  3236 ;; Hardware stack levels required when called: 5
  3237 ;; This function calls:
  3238 ;;		Nothing
  3239 ;; This function is called by:
  3240 ;;		_generateBeep
  3241 ;; This function uses a non-reentrant model
  3242 ;;
  3243                           
  3244                           	psect	text4
  3245   0010DC                     __ptext4:
  3246                           	callstack 0
  3247   0010DC                     _delayMicroseconds:
  3248                           	callstack 22
  3249   0010DC                     
  3250                           ;main.c: 91:     unsigned int i;;main.c: 92:     for (i = 0; i < microseconds; i++) {
  3251   0010DC  0E00               	movlw	0
  3252   0010DE  6E0A               	movwf	(delayMicroseconds@i+1)^0,c
  3253   0010E0  0E00               	movlw	0
  3254   0010E2  6E09               	movwf	delayMicroseconds@i^0,c
  3255   0010E4  EF77  F008         	goto	l3368
  3256   0010E8                     l440:
  3257   0010E8  0000               	nop		;# 
  3258   0010EA                     
  3259                           ;main.c: 96:     }
  3260   0010EA  4A09               	infsnz	delayMicroseconds@i^0,f,c
  3261   0010EC  2A0A               	incf	(delayMicroseconds@i+1)^0,f,c
  3262   0010EE                     l3368:
  3263   0010EE  5007               	movf	delayMicroseconds@microseconds^0,w,c
  3264   0010F0  5C09               	subwf	delayMicroseconds@i^0,w,c
  3265   0010F2  5008               	movf	(delayMicroseconds@microseconds+1)^0,w,c
  3266   0010F4  580A               	subwfb	(delayMicroseconds@i+1)^0,w,c
  3267   0010F6  A0D8               	btfss	status,0,c
  3268   0010F8  EF80  F008         	goto	u2571
  3269   0010FC  EF82  F008         	goto	u2570
  3270   001100                     u2571:
  3271   001100  EF74  F008         	goto	l440
  3272   001104                     u2570:
  3273   001104  0012               	return		;funcret
  3274   001106                     __end_of_delayMicroseconds:
  3275                           	callstack 0
  3276                           
  3277 ;; *************** function ___wmul *****************
  3278 ;; Defined at:
  3279 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  multiplier      2    6[COMRAM] unsigned int 
  3282 ;;  multiplicand    2    8[COMRAM] unsigned int 
  3283 ;; Auto vars:     Size  Location     Type
  3284 ;;  product         2   10[COMRAM] unsigned int 
  3285 ;; Return value:  Size  Location     Type
  3286 ;;                  2    6[COMRAM] unsigned int 
  3287 ;; Registers used:
  3288 ;;		wreg, status,2, status,0, prodl, prodh
  3289 ;; Tracked objects:
  3290 ;;		On entry : 0/0
  3291 ;;		On exit  : 0/0
  3292 ;;		Unchanged: 0/0
  3293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3294 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3295 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3297 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3298 ;;Total ram usage:        6 bytes
  3299 ;; Hardware stack levels used: 1
  3300 ;; Hardware stack levels required when called: 5
  3301 ;; This function calls:
  3302 ;;		Nothing
  3303 ;; This function is called by:
  3304 ;;		_generateBeep
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text5
  3309   00112E                     __ptext5:
  3310                           	callstack 0
  3311   00112E                     ___wmul:
  3312                           	callstack 22
  3313   00112E  5007               	movf	___wmul@multiplier^0,w,c
  3314   001130  0209               	mulwf	___wmul@multiplicand^0,c
  3315   001132  CFF3 F00B          	movff	prodl,___wmul@product
  3316   001136  CFF4 F00C          	movff	prodh,___wmul@product+1
  3317   00113A  5007               	movf	___wmul@multiplier^0,w,c
  3318   00113C  020A               	mulwf	(___wmul@multiplicand+1)^0,c
  3319   00113E  50F3               	movf	243,w,c
  3320   001140  260C               	addwf	(___wmul@product+1)^0,f,c
  3321   001142  5008               	movf	(___wmul@multiplier+1)^0,w,c
  3322   001144  0209               	mulwf	___wmul@multiplicand^0,c
  3323   001146  50F3               	movf	243,w,c
  3324   001148  260C               	addwf	(___wmul@product+1)^0,f,c
  3325   00114A  C00B  F007         	movff	___wmul@product,?___wmul
  3326   00114E  C00C  F008         	movff	___wmul@product+1,?___wmul+1
  3327   001152  0012               	return		;funcret
  3328   001154                     __end_of___wmul:
  3329                           	callstack 0
  3330                           
  3331 ;; *************** function ___lwdiv *****************
  3332 ;; Defined at:
  3333 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\lwdiv.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;  dividend        2   12[COMRAM] unsigned int 
  3336 ;;  divisor         2   14[COMRAM] unsigned int 
  3337 ;; Auto vars:     Size  Location     Type
  3338 ;;  quotient        2   17[COMRAM] unsigned int 
  3339 ;;  counter         1   16[COMRAM] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2   12[COMRAM] unsigned int 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3350 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3352 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3353 ;;Total ram usage:        7 bytes
  3354 ;; Hardware stack levels used: 1
  3355 ;; Hardware stack levels required when called: 5
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_generateBeep
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text6
  3364   000E34                     __ptext6:
  3365                           	callstack 0
  3366   000E34                     ___lwdiv:
  3367                           	callstack 22
  3368   000E34  0E00               	movlw	0
  3369   000E36  6E13               	movwf	(___lwdiv@quotient+1)^0,c
  3370   000E38  0E00               	movlw	0
  3371   000E3A  6E12               	movwf	___lwdiv@quotient^0,c
  3372   000E3C  500F               	movf	___lwdiv@divisor^0,w,c
  3373   000E3E  1010               	iorwf	(___lwdiv@divisor+1)^0,w,c
  3374   000E40  B4D8               	btfsc	status,2,c
  3375   000E42  EF25  F007         	goto	u2651
  3376   000E46  EF27  F007         	goto	u2650
  3377   000E4A                     u2651:
  3378   000E4A  EF4F  F007         	goto	l1116
  3379   000E4E                     u2650:
  3380   000E4E  0E01               	movlw	1
  3381   000E50  6E11               	movwf	___lwdiv@counter^0,c
  3382   000E52  EF2F  F007         	goto	l3424
  3383   000E56                     l3422:
  3384   000E56  90D8               	bcf	status,0,c
  3385   000E58  360F               	rlcf	___lwdiv@divisor^0,f,c
  3386   000E5A  3610               	rlcf	(___lwdiv@divisor+1)^0,f,c
  3387   000E5C  2A11               	incf	___lwdiv@counter^0,f,c
  3388   000E5E                     l3424:
  3389   000E5E  AE10               	btfss	(___lwdiv@divisor+1)^0,7,c
  3390   000E60  EF34  F007         	goto	u2661
  3391   000E64  EF36  F007         	goto	u2660
  3392   000E68                     u2661:
  3393   000E68  EF2B  F007         	goto	l3422
  3394   000E6C                     u2660:
  3395   000E6C                     l3426:
  3396   000E6C  90D8               	bcf	status,0,c
  3397   000E6E  3612               	rlcf	___lwdiv@quotient^0,f,c
  3398   000E70  3613               	rlcf	(___lwdiv@quotient+1)^0,f,c
  3399   000E72  500F               	movf	___lwdiv@divisor^0,w,c
  3400   000E74  5C0D               	subwf	___lwdiv@dividend^0,w,c
  3401   000E76  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  3402   000E78  580E               	subwfb	(___lwdiv@dividend+1)^0,w,c
  3403   000E7A  A0D8               	btfss	status,0,c
  3404   000E7C  EF42  F007         	goto	u2671
  3405   000E80  EF44  F007         	goto	u2670
  3406   000E84                     u2671:
  3407   000E84  EF49  F007         	goto	l3434
  3408   000E88                     u2670:
  3409   000E88  500F               	movf	___lwdiv@divisor^0,w,c
  3410   000E8A  5E0D               	subwf	___lwdiv@dividend^0,f,c
  3411   000E8C  5010               	movf	(___lwdiv@divisor+1)^0,w,c
  3412   000E8E  5A0E               	subwfb	(___lwdiv@dividend+1)^0,f,c
  3413   000E90  8012               	bsf	___lwdiv@quotient^0,0,c
  3414   000E92                     l3434:
  3415   000E92  90D8               	bcf	status,0,c
  3416   000E94  3210               	rrcf	(___lwdiv@divisor+1)^0,f,c
  3417   000E96  320F               	rrcf	___lwdiv@divisor^0,f,c
  3418   000E98  2E11               	decfsz	___lwdiv@counter^0,f,c
  3419   000E9A  EF36  F007         	goto	l3426
  3420   000E9E                     l1116:
  3421   000E9E  C012  F00D         	movff	___lwdiv@quotient,?___lwdiv
  3422   000EA2  C013  F00E         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3423   000EA6  0012               	return		;funcret
  3424   000EA8                     __end_of___lwdiv:
  3425                           	callstack 0
  3426                           
  3427 ;; *************** function _clearDisplay *****************
  3428 ;; Defined at:
  3429 ;;		line 105 in file "MAX7219.c"
  3430 ;; Parameters:    Size  Location     Type
  3431 ;;		None
  3432 ;; Auto vars:     Size  Location     Type
  3433 ;;  i               2   70[COMRAM] int 
  3434 ;; Return value:  Size  Location     Type
  3435 ;;                  1    wreg      void 
  3436 ;; Registers used:
  3437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3438 ;; Tracked objects:
  3439 ;;		On entry : 0/0
  3440 ;;		On exit  : 0/0
  3441 ;;		Unchanged: 0/0
  3442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3443 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3444 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3445 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3446 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3447 ;;Total ram usage:        2 bytes
  3448 ;; Hardware stack levels used: 1
  3449 ;; Hardware stack levels required when called: 8
  3450 ;; This function calls:
  3451 ;;		_flushBuffer
  3452 ;; This function is called by:
  3453 ;;		_main
  3454 ;;		_triggerAlarm
  3455 ;; This function uses a non-reentrant model
  3456 ;;
  3457                           
  3458                           	psect	text7
  3459   000FE0                     __ptext7:
  3460                           	callstack 0
  3461   000FE0                     _clearDisplay:
  3462                           	callstack 20
  3463   000FE0                     
  3464                           ;MAX7219.c: 107:  for (int i=0; i<4*8-1; i++)
  3465   000FE0  0E00               	movlw	0
  3466   000FE2  6E48               	movwf	(clearDisplay@i+1)^0,c
  3467   000FE4  0E00               	movlw	0
  3468   000FE6  6E47               	movwf	clearDisplay@i^0,c
  3469   000FE8                     l3508:
  3470                           
  3471                           ;MAX7219.c: 108:  {;MAX7219.c: 109:   bufferCol[i] = 0;
  3472   000FE8  5047               	movf	clearDisplay@i^0,w,c
  3473   000FEA  0F60               	addlw	low _bufferCol
  3474   000FEC  6ED9               	movwf	fsr2l,c
  3475   000FEE  6ADA               	clrf	fsr2h,c
  3476   000FF0  6ADF               	clrf	indf2,c
  3477   000FF2                     
  3478                           ;MAX7219.c: 110:  }
  3479   000FF2  4A47               	infsnz	clearDisplay@i^0,f,c
  3480   000FF4  2A48               	incf	(clearDisplay@i+1)^0,f,c
  3481   000FF6  BE48               	btfsc	(clearDisplay@i+1)^0,7,c
  3482   000FF8  EF07  F008         	goto	u2731
  3483   000FFC  5048               	movf	(clearDisplay@i+1)^0,w,c
  3484   000FFE  E109               	bnz	u2730
  3485   001000  0E1F               	movlw	31
  3486   001002  5C47               	subwf	clearDisplay@i^0,w,c
  3487   001004  A0D8               	btfss	status,0,c
  3488   001006  EF07  F008         	goto	u2731
  3489   00100A  EF09  F008         	goto	u2730
  3490   00100E                     u2731:
  3491   00100E  EFF4  F007         	goto	l3508
  3492   001012                     u2730:
  3493   001012                     
  3494                           ;MAX7219.c: 111:  flushBuffer();
  3495   001012  EC5B  F002         	call	_flushBuffer	;wreg free
  3496   001016  0012               	return		;funcret
  3497   001018                     __end_of_clearDisplay:
  3498                           	callstack 0
  3499                           
  3500 ;; *************** function _clearAlarm *****************
  3501 ;; Defined at:
  3502 ;;		line 216 in file "main.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3520 ;;Total ram usage:        0 bytes
  3521 ;; Hardware stack levels used: 1
  3522 ;; Hardware stack levels required when called: 5
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_triggerAlarm
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text8
  3531   001204                     __ptext8:
  3532                           	callstack 0
  3533   001204                     _clearAlarm:
  3534                           	callstack 23
  3535   001204                     
  3536                           ;main.c: 218:     alarmTriggered = 0;
  3537   001204  0E00               	movlw	0
  3538   001206  0100               	movlb	0	; () banked
  3539   001208  6FA7               	movwf	_alarmTriggered& (0+255),b
  3540                           
  3541                           ;main.c: 219:     alarmSet = 0;
  3542   00120A  0E00               	movlw	0
  3543   00120C  6FA9               	movwf	_alarmSet& (0+255),b
  3544   00120E                     
  3545                           ; BSR set to: 0
  3546   00120E  0012               	return		;funcret
  3547   001210                     __end_of_clearAlarm:
  3548                           	callstack 0
  3549                           
  3550 ;; *************** function _matrixInit *****************
  3551 ;; Defined at:
  3552 ;;		line 96 in file "MAX7219.c"
  3553 ;; Parameters:    Size  Location     Type
  3554 ;;		None
  3555 ;; Auto vars:     Size  Location     Type
  3556 ;;		None
  3557 ;; Return value:  Size  Location     Type
  3558 ;;                  1    wreg      void 
  3559 ;; Registers used:
  3560 ;;		wreg, status,2, status,0, cstack
  3561 ;; Tracked objects:
  3562 ;;		On entry : 0/0
  3563 ;;		On exit  : 0/0
  3564 ;;		Unchanged: 0/0
  3565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3566 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3567 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3568 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3569 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3570 ;;Total ram usage:        0 bytes
  3571 ;; Hardware stack levels used: 1
  3572 ;; Hardware stack levels required when called: 7
  3573 ;; This function calls:
  3574 ;;		_max7219_cmd
  3575 ;; This function is called by:
  3576 ;;		_main
  3577 ;; This function uses a non-reentrant model
  3578 ;;
  3579                           
  3580                           	psect	text9
  3581   001018                     __ptext9:
  3582                           	callstack 0
  3583   001018                     _matrixInit:
  3584                           	callstack 23
  3585   001018                     
  3586                           ;MAX7219.c: 98:  max7219_cmd(0x09, 0);
  3587   001018  0E00               	movlw	0
  3588   00101A  6E08               	movwf	max7219_cmd@data^0,c
  3589   00101C  0E09               	movlw	9
  3590   00101E  EC7D  F007         	call	_max7219_cmd
  3591                           
  3592                           ;MAX7219.c: 99:  max7219_cmd(0x0a, 0x01);
  3593   001022  0E01               	movlw	1
  3594   001024  6E08               	movwf	max7219_cmd@data^0,c
  3595   001026  0E0A               	movlw	10
  3596   001028  EC7D  F007         	call	_max7219_cmd
  3597                           
  3598                           ;MAX7219.c: 100:  max7219_cmd(0x0B, 0x07);
  3599   00102C  0E07               	movlw	7
  3600   00102E  6E08               	movwf	max7219_cmd@data^0,c
  3601   001030  0E0B               	movlw	11
  3602   001032  EC7D  F007         	call	_max7219_cmd
  3603                           
  3604                           ;MAX7219.c: 101:  max7219_cmd(0x0C, 0x01);
  3605   001036  0E01               	movlw	1
  3606   001038  6E08               	movwf	max7219_cmd@data^0,c
  3607   00103A  0E0C               	movlw	12
  3608   00103C  EC7D  F007         	call	_max7219_cmd
  3609                           
  3610                           ;MAX7219.c: 102:  max7219_cmd(0x0F, 0);
  3611   001040  0E00               	movlw	0
  3612   001042  6E08               	movwf	max7219_cmd@data^0,c
  3613   001044  0E0F               	movlw	15
  3614   001046  EC7D  F007         	call	_max7219_cmd
  3615   00104A  0012               	return		;funcret
  3616   00104C                     __end_of_matrixInit:
  3617                           	callstack 0
  3618                           
  3619 ;; *************** function _max7219_cmd *****************
  3620 ;; Defined at:
  3621 ;;		line 76 in file "MAX7219.c"
  3622 ;; Parameters:    Size  Location     Type
  3623 ;;  Addr            1    wreg     unsigned char 
  3624 ;;  data            1    7[COMRAM] unsigned char 
  3625 ;; Auto vars:     Size  Location     Type
  3626 ;;  Addr            1   10[COMRAM] unsigned char 
  3627 ;;  i               2   13[COMRAM] int 
  3628 ;;  writeData       2   11[COMRAM] unsigned short 
  3629 ;; Return value:  Size  Location     Type
  3630 ;;                  1    wreg      void 
  3631 ;; Registers used:
  3632 ;;		wreg, status,2, status,0, cstack
  3633 ;; Tracked objects:
  3634 ;;		On entry : 0/0
  3635 ;;		On exit  : 0/0
  3636 ;;		Unchanged: 0/0
  3637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3638 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3639 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3640 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3641 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3642 ;;Total ram usage:        8 bytes
  3643 ;; Hardware stack levels used: 1
  3644 ;; Hardware stack levels required when called: 6
  3645 ;; This function calls:
  3646 ;;		_SPI_Exchange8bit
  3647 ;; This function is called by:
  3648 ;;		_matrixInit
  3649 ;; This function uses a non-reentrant model
  3650 ;;
  3651                           
  3652                           	psect	text10
  3653   000EFA                     __ptext10:
  3654                           	callstack 0
  3655   000EFA                     _max7219_cmd:
  3656                           	callstack 23
  3657                           
  3658                           ;incstack = 0
  3659                           ;max7219_cmd@Addr stored from wreg
  3660   000EFA  6E0B               	movwf	max7219_cmd@Addr^0,c
  3661   000EFC                     
  3662                           ;MAX7219.c: 76: void max7219_cmd (uint8_t Addr, uint8_t data);MAX7219.c: 77: {;MAX7219.c
      +                          : 78:  uint16_t writeData = (Addr<<8)|data;
  3663   000EFC  5008               	movf	max7219_cmd@data^0,w,c
  3664   000EFE  C00B  F009         	movff	max7219_cmd@Addr,??_max7219_cmd
  3665   000F02  6A0A               	clrf	(??_max7219_cmd+1)^0,c
  3666   000F04  C009  F00A         	movff	??_max7219_cmd,??_max7219_cmd+1
  3667   000F08  6A09               	clrf	??_max7219_cmd^0,c
  3668   000F0A  1009               	iorwf	??_max7219_cmd^0,w,c
  3669   000F0C  6E0C               	movwf	max7219_cmd@writeData^0,c
  3670   000F0E  500A               	movf	(??_max7219_cmd+1)^0,w,c
  3671   000F10  6E0D               	movwf	(max7219_cmd@writeData+1)^0,c
  3672   000F12  948B               	bcf	139,2,c	;volatile
  3673   000F14                     
  3674                           ;MAX7219.c: 82:  for (int i=0; i<4; i++)
  3675   000F14  0E00               	movlw	0
  3676   000F16  6E0F               	movwf	(max7219_cmd@i+1)^0,c
  3677   000F18  0E00               	movlw	0
  3678   000F1A  6E0E               	movwf	max7219_cmd@i^0,c
  3679   000F1C                     l3754:
  3680                           
  3681                           ;MAX7219.c: 83:  {;MAX7219.c: 87:         SPI_Exchange8bit((writeData >> 8) & 0xFF);
  3682   000F1C  500D               	movf	(max7219_cmd@writeData+1)^0,w,c
  3683   000F1E  ECCE  F008         	call	_SPI_Exchange8bit
  3684                           
  3685                           ;MAX7219.c: 89:         SPI_Exchange8bit(writeData & 0xFF);
  3686   000F22  500C               	movf	max7219_cmd@writeData^0,w,c
  3687   000F24  ECCE  F008         	call	_SPI_Exchange8bit
  3688   000F28                     
  3689                           ;MAX7219.c: 90:  }
  3690   000F28  4A0E               	infsnz	max7219_cmd@i^0,f,c
  3691   000F2A  2A0F               	incf	(max7219_cmd@i+1)^0,f,c
  3692   000F2C  BE0F               	btfsc	(max7219_cmd@i+1)^0,7,c
  3693   000F2E  EFA2  F007         	goto	u2971
  3694   000F32  500F               	movf	(max7219_cmd@i+1)^0,w,c
  3695   000F34  E109               	bnz	u2970
  3696   000F36  0E04               	movlw	4
  3697   000F38  5C0E               	subwf	max7219_cmd@i^0,w,c
  3698   000F3A  A0D8               	btfss	status,0,c
  3699   000F3C  EFA2  F007         	goto	u2971
  3700   000F40  EFA4  F007         	goto	u2970
  3701   000F44                     u2971:
  3702   000F44  EF8E  F007         	goto	l3754
  3703   000F48                     u2970:
  3704   000F48  848B               	bsf	139,2,c	;volatile
  3705   000F4A  0012               	return		;funcret
  3706   000F4C                     __end_of_max7219_cmd:
  3707                           	callstack 0
  3708                           
  3709 ;; *************** function _loadTimeFromFlash *****************
  3710 ;; Defined at:
  3711 ;;		line 357 in file "main.c"
  3712 ;; Parameters:    Size  Location     Type
  3713 ;;		None
  3714 ;; Auto vars:     Size  Location     Type
  3715 ;;  flashAddress    4    0        unsigned long 
  3716 ;; Return value:  Size  Location     Type
  3717 ;;                  1    wreg      void 
  3718 ;; Registers used:
  3719 ;;		wreg, status,2, status,0, cstack
  3720 ;; Tracked objects:
  3721 ;;		On entry : 0/0
  3722 ;;		On exit  : 0/0
  3723 ;;		Unchanged: 0/0
  3724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3725 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3728 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3729 ;;Total ram usage:        0 bytes
  3730 ;; Hardware stack levels used: 1
  3731 ;; Hardware stack levels required when called: 6
  3732 ;; This function calls:
  3733 ;;		_FLASH_ReadByte
  3734 ;; This function is called by:
  3735 ;;		_main
  3736 ;; This function uses a non-reentrant model
  3737 ;;
  3738                           
  3739                           	psect	text11
  3740   0009D6                     __ptext11:
  3741                           	callstack 0
  3742   0009D6                     _loadTimeFromFlash:
  3743                           	callstack 24
  3744   0009D6                     
  3745                           ;main.c: 360:     hours = FLASH_ReadByte(flashAddress);
  3746   0009D6  0E80               	movlw	128
  3747   0009D8  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3748   0009DA  0E1F               	movlw	31
  3749   0009DC  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3750   0009DE  0E00               	movlw	0
  3751   0009E0  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3752   0009E2  0E00               	movlw	0
  3753   0009E4  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3754   0009E6  ECF2  F008         	call	_FLASH_ReadByte	;wreg free
  3755   0009EA  0100               	movlb	0	; () banked
  3756   0009EC  6FAE               	movwf	_hours& (0+255),b
  3757   0009EE                     
  3758                           ; BSR set to: 0
  3759                           ;main.c: 361:     minutes = FLASH_ReadByte(flashAddress + 1);
  3760   0009EE  0E81               	movlw	129
  3761   0009F0  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3762   0009F2  0E1F               	movlw	31
  3763   0009F4  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3764   0009F6  0E00               	movlw	0
  3765   0009F8  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3766   0009FA  0E00               	movlw	0
  3767   0009FC  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3768   0009FE  ECF2  F008         	call	_FLASH_ReadByte	;wreg free
  3769   000A02  0100               	movlb	0	; () banked
  3770   000A04  6FAD               	movwf	_minutes& (0+255),b
  3771   000A06                     
  3772                           ; BSR set to: 0
  3773                           ;main.c: 362:     alarmHours = FLASH_ReadByte(flashAddress + 2);
  3774   000A06  0E82               	movlw	130
  3775   000A08  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3776   000A0A  0E1F               	movlw	31
  3777   000A0C  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3778   000A0E  0E00               	movlw	0
  3779   000A10  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3780   000A12  0E00               	movlw	0
  3781   000A14  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3782   000A16  ECF2  F008         	call	_FLASH_ReadByte	;wreg free
  3783   000A1A  0100               	movlb	0	; () banked
  3784   000A1C  6FAB               	movwf	_alarmHours& (0+255),b
  3785   000A1E                     
  3786                           ; BSR set to: 0
  3787                           ;main.c: 363:     alarmMinutes = FLASH_ReadByte(flashAddress + 3);
  3788   000A1E  0E83               	movlw	131
  3789   000A20  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3790   000A22  0E1F               	movlw	31
  3791   000A24  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3792   000A26  0E00               	movlw	0
  3793   000A28  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3794   000A2A  0E00               	movlw	0
  3795   000A2C  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3796   000A2E  ECF2  F008         	call	_FLASH_ReadByte	;wreg free
  3797   000A32  0100               	movlb	0	; () banked
  3798   000A34  6FAA               	movwf	_alarmMinutes& (0+255),b
  3799   000A36                     
  3800                           ; BSR set to: 0
  3801                           ;main.c: 364:     alarmSet = FLASH_ReadByte(flashAddress + 4);
  3802   000A36  0E84               	movlw	132
  3803   000A38  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  3804   000A3A  0E1F               	movlw	31
  3805   000A3C  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  3806   000A3E  0E00               	movlw	0
  3807   000A40  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  3808   000A42  0E00               	movlw	0
  3809   000A44  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  3810   000A46  ECF2  F008         	call	_FLASH_ReadByte	;wreg free
  3811   000A4A  0900               	iorlw	0
  3812   000A4C  A4D8               	btfss	status,2,c
  3813   000A4E  EF2B  F005         	goto	u2991
  3814   000A52  EF2E  F005         	goto	u2990
  3815   000A56                     u2991:
  3816   000A56  0E01               	movlw	1
  3817   000A58  EF2F  F005         	goto	u3000
  3818   000A5C                     u2990:
  3819   000A5C  0E00               	movlw	0
  3820   000A5E                     u3000:
  3821   000A5E  0100               	movlb	0	; () banked
  3822   000A60  6FA9               	movwf	_alarmSet& (0+255),b
  3823   000A62                     
  3824                           ; BSR set to: 0
  3825                           ;main.c: 366:     if (hours >= 24) hours = 0;
  3826   000A62  0E17               	movlw	23
  3827   000A64  65AE               	cpfsgt	_hours& (0+255),b
  3828   000A66  EF37  F005         	goto	u3011
  3829   000A6A  EF39  F005         	goto	u3010
  3830   000A6E                     u3011:
  3831   000A6E  EF3B  F005         	goto	l3808
  3832   000A72                     u3010:
  3833   000A72                     
  3834                           ; BSR set to: 0
  3835   000A72  0E00               	movlw	0
  3836   000A74  6FAE               	movwf	_hours& (0+255),b
  3837   000A76                     l3808:
  3838                           
  3839                           ; BSR set to: 0
  3840                           ;main.c: 367:     if (minutes >= 60) minutes = 0;
  3841   000A76  0E3B               	movlw	59
  3842   000A78  65AD               	cpfsgt	_minutes& (0+255),b
  3843   000A7A  EF41  F005         	goto	u3021
  3844   000A7E  EF43  F005         	goto	u3020
  3845   000A82                     u3021:
  3846   000A82  EF45  F005         	goto	l521
  3847   000A86                     u3020:
  3848   000A86                     
  3849                           ; BSR set to: 0
  3850   000A86  0E00               	movlw	0
  3851   000A88  6FAD               	movwf	_minutes& (0+255),b
  3852   000A8A                     l521:
  3853                           
  3854                           ; BSR set to: 0
  3855   000A8A  0012               	return		;funcret
  3856   000A8C                     __end_of_loadTimeFromFlash:
  3857                           	callstack 0
  3858                           
  3859 ;; *************** function _checkButtons *****************
  3860 ;; Defined at:
  3861 ;;		line 233 in file "main.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3875 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3876 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;Total ram usage:        2 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; Hardware stack levels required when called: 10
  3882 ;; This function calls:
  3883 ;;		___awmod
  3884 ;;		_displayAlarmTime
  3885 ;;		_displayTime
  3886 ;;		_saveTimeToFlash
  3887 ;; This function is called by:
  3888 ;;		_main
  3889 ;; This function uses a non-reentrant model
  3890 ;;
  3891                           
  3892                           	psect	text12
  3893   0000AE                     __ptext12:
  3894                           	callstack 0
  3895   0000AE                     _checkButtons:
  3896                           	callstack 20
  3897   0000AE                     
  3898                           ;main.c: 235:     static uint8_t button3PressCount = 0;;main.c: 236:     static uint16_t
      +                           button3HoldTime = 0;;main.c: 238:     switch (currentMode)
  3899   0000AE  EF76  F001         	goto	l3884
  3900   0000B2                     l490:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;main.c: 242:             if (!PORTBbits.RB0)
  3904   0000B2  B081               	btfsc	129,0,c	;volatile
  3905   0000B4  EF5E  F000         	goto	u3031
  3906   0000B8  EF60  F000         	goto	u3030
  3907   0000BC                     u3031:
  3908   0000BC  EF86  F000         	goto	l3822
  3909   0000C0                     u3030:
  3910   0000C0                     
  3911                           ; BSR set to: 0
  3912                           ;main.c: 243:             {;main.c: 244:                 _delay((unsigned long)((100)*(8
      +                          000000/4000.0)));
  3913   0000C0  0E02               	movlw	2
  3914   0000C2  6E52               	movwf	(??_checkButtons+1)^0,c
  3915   0000C4  0E04               	movlw	4
  3916   0000C6  6E51               	movwf	??_checkButtons^0,c
  3917   0000C8  0EBA               	movlw	186
  3918   0000CA                     u3437:
  3919   0000CA  2EE8               	decfsz	wreg,f,c
  3920   0000CC  D7FE               	bra	u3437
  3921   0000CE  2E51               	decfsz	??_checkButtons^0,f,c
  3922   0000D0  D7FC               	bra	u3437
  3923   0000D2  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  3924   0000D4  D7FA               	bra	u3437
  3925   0000D6  F000 F000          	nop2	
  3926   0000DA                     
  3927                           ;main.c: 245:                 if (!PORTBbits.RB0)
  3928   0000DA  B081               	btfsc	129,0,c	;volatile
  3929   0000DC  EF72  F000         	goto	u3041
  3930   0000E0  EF74  F000         	goto	u3040
  3931   0000E4                     u3041:
  3932   0000E4  EF86  F000         	goto	l3822
  3933   0000E8                     u3040:
  3934   0000E8                     
  3935                           ;main.c: 246:                 {;main.c: 247:                     hours = (hours + 1) % 2
      +                          4;
  3936   0000E8  0E01               	movlw	1
  3937   0000EA  0100               	movlb	0	; () banked
  3938   0000EC  25AE               	addwf	_hours& (0+255),w,b
  3939   0000EE  6E07               	movwf	___awmod@dividend^0,c
  3940   0000F0  6A08               	clrf	(___awmod@dividend+1)^0,c
  3941   0000F2  0E00               	movlw	0
  3942   0000F4  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  3943   0000F6  0E00               	movlw	0
  3944   0000F8  6E0A               	movwf	(___awmod@divisor+1)^0,c
  3945   0000FA  0E18               	movlw	24
  3946   0000FC  6E09               	movwf	___awmod@divisor^0,c
  3947   0000FE  ECFA  F005         	call	___awmod	;wreg free
  3948   000102  5007               	movf	?___awmod^0,w,c
  3949   000104  0100               	movlb	0	; () banked
  3950   000106  6FAE               	movwf	_hours& (0+255),b
  3951   000108                     
  3952                           ; BSR set to: 0
  3953                           ;main.c: 248:                     displayTime();
  3954   000108  EC46  F005         	call	_displayTime	;wreg free
  3955   00010C                     l3822:
  3956                           
  3957                           ;main.c: 253:             if (!PORTBbits.RB1)
  3958   00010C  B281               	btfsc	129,1,c	;volatile
  3959   00010E  EF8B  F000         	goto	u3051
  3960   000112  EF8D  F000         	goto	u3050
  3961   000116                     u3051:
  3962   000116  EFB3  F000         	goto	l3832
  3963   00011A                     u3050:
  3964   00011A                     
  3965                           ;main.c: 254:             {;main.c: 255:                 _delay((unsigned long)((100)*(8
      +                          000000/4000.0)));
  3966   00011A  0E02               	movlw	2
  3967   00011C  6E52               	movwf	(??_checkButtons+1)^0,c
  3968   00011E  0E04               	movlw	4
  3969   000120  6E51               	movwf	??_checkButtons^0,c
  3970   000122  0EBA               	movlw	186
  3971   000124                     u3447:
  3972   000124  2EE8               	decfsz	wreg,f,c
  3973   000126  D7FE               	bra	u3447
  3974   000128  2E51               	decfsz	??_checkButtons^0,f,c
  3975   00012A  D7FC               	bra	u3447
  3976   00012C  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  3977   00012E  D7FA               	bra	u3447
  3978   000130  F000 F000          	nop2	
  3979   000134                     
  3980                           ;main.c: 256:                 if (!PORTBbits.RB1)
  3981   000134  B281               	btfsc	129,1,c	;volatile
  3982   000136  EF9F  F000         	goto	u3061
  3983   00013A  EFA1  F000         	goto	u3060
  3984   00013E                     u3061:
  3985   00013E  EFB3  F000         	goto	l3832
  3986   000142                     u3060:
  3987   000142                     
  3988                           ;main.c: 257:                 {;main.c: 258:                     minutes = (minutes + 1)
      +                           % 60;
  3989   000142  0E01               	movlw	1
  3990   000144  0100               	movlb	0	; () banked
  3991   000146  25AD               	addwf	_minutes& (0+255),w,b
  3992   000148  6E07               	movwf	___awmod@dividend^0,c
  3993   00014A  6A08               	clrf	(___awmod@dividend+1)^0,c
  3994   00014C  0E00               	movlw	0
  3995   00014E  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  3996   000150  0E00               	movlw	0
  3997   000152  6E0A               	movwf	(___awmod@divisor+1)^0,c
  3998   000154  0E3C               	movlw	60
  3999   000156  6E09               	movwf	___awmod@divisor^0,c
  4000   000158  ECFA  F005         	call	___awmod	;wreg free
  4001   00015C  5007               	movf	?___awmod^0,w,c
  4002   00015E  0100               	movlb	0	; () banked
  4003   000160  6FAD               	movwf	_minutes& (0+255),b
  4004   000162                     
  4005                           ; BSR set to: 0
  4006                           ;main.c: 259:                     displayTime();
  4007   000162  EC46  F005         	call	_displayTime	;wreg free
  4008   000166                     l3832:
  4009                           
  4010                           ;main.c: 264:             if (!PORTBbits.RB2)
  4011   000166  B481               	btfsc	129,2,c	;volatile
  4012   000168  EFB8  F000         	goto	u3071
  4013   00016C  EFBA  F000         	goto	u3070
  4014   000170                     u3071:
  4015   000170  EFF7  F000         	goto	l3854
  4016   000174                     u3070:
  4017   000174                     
  4018                           ;main.c: 265:             {;main.c: 266:                 button3HoldTime += 100;
  4019   000174  0E64               	movlw	100
  4020   000176  0100               	movlb	0	; () banked
  4021   000178  279A               	addwf	checkButtons@button3HoldTime& (0+255),f,b
  4022   00017A  0E00               	movlw	0
  4023   00017C  239B               	addwfc	(checkButtons@button3HoldTime+1)& (0+255),f,b
  4024   00017E                     
  4025                           ; BSR set to: 0
  4026                           ;main.c: 267:                 _delay((unsigned long)((100)*(8000000/4000.0)));
  4027   00017E  0E02               	movlw	2
  4028   000180  6E52               	movwf	(??_checkButtons+1)^0,c
  4029   000182  0E04               	movlw	4
  4030   000184  6E51               	movwf	??_checkButtons^0,c
  4031   000186  0EBA               	movlw	186
  4032   000188                     u3457:
  4033   000188  2EE8               	decfsz	wreg,f,c
  4034   00018A  D7FE               	bra	u3457
  4035   00018C  2E51               	decfsz	??_checkButtons^0,f,c
  4036   00018E  D7FC               	bra	u3457
  4037   000190  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  4038   000192  D7FA               	bra	u3457
  4039   000194  F000 F000          	nop2	
  4040   000198                     
  4041                           ;main.c: 269:                 if (button3HoldTime >= 1000)
  4042   000198  0EE8               	movlw	232
  4043   00019A  0100               	movlb	0	; () banked
  4044   00019C  5D9A               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  4045   00019E  0E03               	movlw	3
  4046   0001A0  599B               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  4047   0001A2  A0D8               	btfss	status,0,c
  4048   0001A4  EFD6  F000         	goto	u3081
  4049   0001A8  EFD8  F000         	goto	u3080
  4050   0001AC                     u3081:
  4051   0001AC  EFE6  F000         	goto	l3846
  4052   0001B0                     u3080:
  4053   0001B0                     
  4054                           ; BSR set to: 0
  4055                           ;main.c: 270:                 {;main.c: 271:                     if (!alarmTriggered)
  4056   0001B0  51A7               	movf	_alarmTriggered& (0+255),w,b
  4057   0001B2  A4D8               	btfss	status,2,c
  4058   0001B4  EFDE  F000         	goto	u3091
  4059   0001B8  EFE0  F000         	goto	u3090
  4060   0001BC                     u3091:
  4061   0001BC  EF0B  F001         	goto	l500
  4062   0001C0                     u3090:
  4063   0001C0                     
  4064                           ; BSR set to: 0
  4065                           ;main.c: 272:                     {;main.c: 273:                         currentMode = A
      +                          LARM_SETTING_MODE;
  4066   0001C0  0E01               	movlw	1
  4067   0001C2  6FA3               	movwf	_currentMode& (0+255),b
  4068   0001C4                     l3844:
  4069                           
  4070                           ; BSR set to: 0
  4071                           ;main.c: 274:                         displayAlarmTime();
  4072   0001C4  ECA0  F005         	call	_displayAlarmTime	;wreg free
  4073   0001C8  EF90  F001         	goto	l511
  4074   0001CC                     l3846:
  4075                           
  4076                           ; BSR set to: 0
  4077                           ;main.c: 278:                 {;main.c: 279:                     button3PressCount++;
  4078   0001CC  2BA2               	incf	checkButtons@button3PressCount& (0+255),f,b
  4079   0001CE                     
  4080                           ; BSR set to: 0
  4081                           ;main.c: 280:                     if (button3PressCount == 5)
  4082   0001CE  0E05               	movlw	5
  4083   0001D0  19A2               	xorwf	checkButtons@button3PressCount& (0+255),w,b
  4084   0001D2  A4D8               	btfss	status,2,c
  4085   0001D4  EFEE  F000         	goto	u3101
  4086   0001D8  EFF0  F000         	goto	u3100
  4087   0001DC                     u3101:
  4088   0001DC  EF0B  F001         	goto	l500
  4089   0001E0                     u3100:
  4090   0001E0                     
  4091                           ; BSR set to: 0
  4092                           ;main.c: 281:                     {;main.c: 282:                         saveTimeToFlash
      +                          ();
  4093   0001E0  ECA1  F006         	call	_saveTimeToFlash	;wreg free
  4094   0001E4                     
  4095                           ;main.c: 283:                         button3PressCount = 0;
  4096   0001E4  0E00               	movlw	0
  4097   0001E6  0100               	movlb	0	; () banked
  4098   0001E8  6FA2               	movwf	checkButtons@button3PressCount& (0+255),b
  4099   0001EA  EF90  F001         	goto	l511
  4100   0001EE                     l3854:
  4101                           
  4102                           ;main.c: 288:             {;main.c: 289:                 if (button3HoldTime < 1000)
  4103   0001EE  0EE8               	movlw	232
  4104   0001F0  0100               	movlb	0	; () banked
  4105   0001F2  5D9A               	subwf	checkButtons@button3HoldTime& (0+255),w,b
  4106   0001F4  0E03               	movlw	3
  4107   0001F6  599B               	subwfb	(checkButtons@button3HoldTime+1)& (0+255),w,b
  4108   0001F8  B0D8               	btfsc	status,0,c
  4109   0001FA  EF01  F001         	goto	u3111
  4110   0001FE  EF03  F001         	goto	u3110
  4111   000202                     u3111:
  4112   000202  EF05  F001         	goto	l501
  4113   000206                     u3110:
  4114   000206                     
  4115                           ; BSR set to: 0
  4116                           ;main.c: 290:                 {;main.c: 291:                     button3PressCount = 0;
  4117   000206  0E00               	movlw	0
  4118   000208  6FA2               	movwf	checkButtons@button3PressCount& (0+255),b
  4119   00020A                     l501:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;main.c: 293:                 button3HoldTime = 0;
  4123   00020A  0E00               	movlw	0
  4124   00020C  6F9B               	movwf	(checkButtons@button3HoldTime+1)& (0+255),b
  4125   00020E  0E00               	movlw	0
  4126   000210  6F9A               	movwf	checkButtons@button3HoldTime& (0+255),b
  4127   000212  EF90  F001         	goto	l511
  4128   000216                     l500:
  4129                           
  4130                           ; BSR set to: 0
  4131                           ;main.c: 295:             break;
  4132   000216  EF90  F001         	goto	l511
  4133   00021A                     l503:
  4134                           
  4135                           ; BSR set to: 0
  4136                           ;main.c: 298:             if (!PORTBbits.RB2)
  4137   00021A  B481               	btfsc	129,2,c	;volatile
  4138   00021C  EF12  F001         	goto	u3121
  4139   000220  EF14  F001         	goto	u3120
  4140   000224                     u3121:
  4141   000224  EF6E  F001         	goto	l3878
  4142   000228                     u3120:
  4143   000228                     
  4144                           ; BSR set to: 0
  4145                           ;main.c: 299:             {;main.c: 300:                 if (!PORTBbits.RB0)
  4146   000228  B081               	btfsc	129,0,c	;volatile
  4147   00022A  EF19  F001         	goto	u3131
  4148   00022E  EF1B  F001         	goto	u3130
  4149   000232                     u3131:
  4150   000232  EF41  F001         	goto	l3868
  4151   000236                     u3130:
  4152   000236                     
  4153                           ; BSR set to: 0
  4154                           ;main.c: 301:                 {;main.c: 302:                     _delay((unsigned long)(
      +                          (100)*(8000000/4000.0)));
  4155   000236  0E02               	movlw	2
  4156   000238  6E52               	movwf	(??_checkButtons+1)^0,c
  4157   00023A  0E04               	movlw	4
  4158   00023C  6E51               	movwf	??_checkButtons^0,c
  4159   00023E  0EBA               	movlw	186
  4160   000240                     u3467:
  4161   000240  2EE8               	decfsz	wreg,f,c
  4162   000242  D7FE               	bra	u3467
  4163   000244  2E51               	decfsz	??_checkButtons^0,f,c
  4164   000246  D7FC               	bra	u3467
  4165   000248  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  4166   00024A  D7FA               	bra	u3467
  4167   00024C  F000 F000          	nop2	
  4168   000250                     
  4169                           ;main.c: 303:                     if (!PORTBbits.RB0)
  4170   000250  B081               	btfsc	129,0,c	;volatile
  4171   000252  EF2D  F001         	goto	u3141
  4172   000256  EF2F  F001         	goto	u3140
  4173   00025A                     u3141:
  4174   00025A  EF41  F001         	goto	l3868
  4175   00025E                     u3140:
  4176   00025E                     
  4177                           ;main.c: 304:                     {;main.c: 305:                         alarmHours = (a
      +                          larmHours + 1) % 24;
  4178   00025E  0E01               	movlw	1
  4179   000260  0100               	movlb	0	; () banked
  4180   000262  25AB               	addwf	_alarmHours& (0+255),w,b
  4181   000264  6E07               	movwf	___awmod@dividend^0,c
  4182   000266  6A08               	clrf	(___awmod@dividend+1)^0,c
  4183   000268  0E00               	movlw	0
  4184   00026A  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  4185   00026C  0E00               	movlw	0
  4186   00026E  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4187   000270  0E18               	movlw	24
  4188   000272  6E09               	movwf	___awmod@divisor^0,c
  4189   000274  ECFA  F005         	call	___awmod	;wreg free
  4190   000278  5007               	movf	?___awmod^0,w,c
  4191   00027A  0100               	movlb	0	; () banked
  4192   00027C  6FAB               	movwf	_alarmHours& (0+255),b
  4193   00027E                     
  4194                           ; BSR set to: 0
  4195                           ;main.c: 306:                         displayAlarmTime();
  4196   00027E  ECA0  F005         	call	_displayAlarmTime	;wreg free
  4197   000282                     l3868:
  4198                           
  4199                           ;main.c: 309:                 if (!PORTBbits.RB1)
  4200   000282  B281               	btfsc	129,1,c	;volatile
  4201   000284  EF46  F001         	goto	u3151
  4202   000288  EF48  F001         	goto	u3150
  4203   00028C                     u3151:
  4204   00028C  EF90  F001         	goto	l511
  4205   000290                     u3150:
  4206   000290                     
  4207                           ;main.c: 310:                 {;main.c: 311:                     _delay((unsigned long)(
      +                          (100)*(8000000/4000.0)));
  4208   000290  0E02               	movlw	2
  4209   000292  6E52               	movwf	(??_checkButtons+1)^0,c
  4210   000294  0E04               	movlw	4
  4211   000296  6E51               	movwf	??_checkButtons^0,c
  4212   000298  0EBA               	movlw	186
  4213   00029A                     u3477:
  4214   00029A  2EE8               	decfsz	wreg,f,c
  4215   00029C  D7FE               	bra	u3477
  4216   00029E  2E51               	decfsz	??_checkButtons^0,f,c
  4217   0002A0  D7FC               	bra	u3477
  4218   0002A2  2E52               	decfsz	(??_checkButtons+1)^0,f,c
  4219   0002A4  D7FA               	bra	u3477
  4220   0002A6  F000 F000          	nop2	
  4221   0002AA                     
  4222                           ;main.c: 312:                     if (!PORTBbits.RB1)
  4223   0002AA  B281               	btfsc	129,1,c	;volatile
  4224   0002AC  EF5A  F001         	goto	u3161
  4225   0002B0  EF5C  F001         	goto	u3160
  4226   0002B4                     u3161:
  4227   0002B4  EF90  F001         	goto	l511
  4228   0002B8                     u3160:
  4229   0002B8                     
  4230                           ;main.c: 313:                     {;main.c: 314:                         alarmMinutes = 
      +                          (alarmMinutes + 1) % 60;
  4231   0002B8  0E01               	movlw	1
  4232   0002BA  0100               	movlb	0	; () banked
  4233   0002BC  25AA               	addwf	_alarmMinutes& (0+255),w,b
  4234   0002BE  6E07               	movwf	___awmod@dividend^0,c
  4235   0002C0  6A08               	clrf	(___awmod@dividend+1)^0,c
  4236   0002C2  0E00               	movlw	0
  4237   0002C4  2208               	addwfc	(___awmod@dividend+1)^0,f,c
  4238   0002C6  0E00               	movlw	0
  4239   0002C8  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4240   0002CA  0E3C               	movlw	60
  4241   0002CC  6E09               	movwf	___awmod@divisor^0,c
  4242   0002CE  ECFA  F005         	call	___awmod	;wreg free
  4243   0002D2  5007               	movf	?___awmod^0,w,c
  4244   0002D4  0100               	movlb	0	; () banked
  4245   0002D6  6FAA               	movwf	_alarmMinutes& (0+255),b
  4246   0002D8  EFE2  F000         	goto	l3844
  4247   0002DC                     l3878:
  4248                           
  4249                           ; BSR set to: 0
  4250                           ;main.c: 320:             {;main.c: 321:                 alarmSet = 1;
  4251   0002DC  0E01               	movlw	1
  4252   0002DE  6FA9               	movwf	_alarmSet& (0+255),b
  4253                           
  4254                           ;main.c: 322:                 currentMode = NORMAL_MODE;
  4255   0002E0  0E00               	movlw	0
  4256   0002E2  6FA3               	movwf	_currentMode& (0+255),b
  4257   0002E4                     
  4258                           ; BSR set to: 0
  4259                           ;main.c: 323:                 displayTime();
  4260   0002E4  EC46  F005         	call	_displayTime	;wreg free
  4261   0002E8  EF90  F001         	goto	l511
  4262   0002EC                     l3884:
  4263   0002EC  0100               	movlb	0	; () banked
  4264   0002EE  51A3               	movf	_currentMode& (0+255),w,b
  4265   0002F0  6E51               	movwf	??_checkButtons^0,c
  4266   0002F2  6A52               	clrf	(??_checkButtons+1)^0,c
  4267                           
  4268                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4269                           ; Switch size 1, requested type "simple"
  4270                           ; Number of cases is 1, Range of values is 0 to 0
  4271                           ; switch strategies available:
  4272                           ; Name         Instructions Cycles
  4273                           ; simple_byte            4     3 (average)
  4274                           ;	Chosen strategy is simple_byte
  4275   0002F4  5052               	movf	(??_checkButtons+1)^0,w,c
  4276   0002F6  0A00               	xorlw	0	; case 0
  4277   0002F8  B4D8               	btfsc	status,2,c
  4278   0002FA  EF81  F001         	goto	l4068
  4279   0002FE  EF90  F001         	goto	l511
  4280   000302                     l4068:
  4281                           
  4282                           ; BSR set to: 0
  4283                           ; Switch size 1, requested type "simple"
  4284                           ; Number of cases is 3, Range of values is 0 to 2
  4285                           ; switch strategies available:
  4286                           ; Name         Instructions Cycles
  4287                           ; simple_byte           10     6 (average)
  4288                           ;	Chosen strategy is simple_byte
  4289   000302  5051               	movf	??_checkButtons^0,w,c
  4290   000304  0A00               	xorlw	0	; case 0
  4291   000306  B4D8               	btfsc	status,2,c
  4292   000308  EF59  F000         	goto	l490
  4293   00030C  0A01               	xorlw	1	; case 1
  4294   00030E  B4D8               	btfsc	status,2,c
  4295   000310  EF0D  F001         	goto	l503
  4296   000314  0A03               	xorlw	3	; case 2
  4297   000316  B4D8               	btfsc	status,2,c
  4298   000318  EF90  F001         	goto	l511
  4299   00031C  EF90  F001         	goto	l511
  4300   000320                     l511:
  4301   000320  0012               	return		;funcret
  4302   000322                     __end_of_checkButtons:
  4303                           	callstack 0
  4304                           
  4305 ;; *************** function _saveTimeToFlash *****************
  4306 ;; Defined at:
  4307 ;;		line 335 in file "main.c"
  4308 ;; Parameters:    Size  Location     Type
  4309 ;;		None
  4310 ;; Auto vars:     Size  Location     Type
  4311 ;;  i               1   68[BANK0 ] unsigned char 
  4312 ;;  flashBuffer    64    0[BANK0 ] unsigned char [64]
  4313 ;;  flashAddress    4   64[BANK0 ] unsigned long 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4323 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4324 ;;      Locals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4326 ;;      Totals:         0      69       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4327 ;;Total ram usage:       69 bytes
  4328 ;; Hardware stack levels used: 1
  4329 ;; Hardware stack levels required when called: 7
  4330 ;; This function calls:
  4331 ;;		_FLASH_ReadByte
  4332 ;;		_FLASH_WriteBlock
  4333 ;; This function is called by:
  4334 ;;		_main
  4335 ;;		_checkButtons
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text13
  4340   000D42                     __ptext13:
  4341                           	callstack 0
  4342   000D42                     _saveTimeToFlash:
  4343                           	callstack 23
  4344   000D42                     
  4345                           ;main.c: 337:     uint32_t flashAddress = 0x1F80;
  4346   000D42  0E80               	movlw	128
  4347   000D44  0100               	movlb	0	; () banked
  4348   000D46  6FF0               	movwf	saveTimeToFlash@flashAddress& (0+255),b
  4349   000D48  0E1F               	movlw	31
  4350   000D4A  6FF1               	movwf	(saveTimeToFlash@flashAddress+1)& (0+255),b
  4351   000D4C  0E00               	movlw	0
  4352   000D4E  6FF2               	movwf	(saveTimeToFlash@flashAddress+2)& (0+255),b
  4353   000D50  0E00               	movlw	0
  4354   000D52  6FF3               	movwf	(saveTimeToFlash@flashAddress+3)& (0+255),b
  4355                           
  4356                           ;main.c: 338:     uint8_t flashBuffer[64];;main.c: 341:     for (uint8_t i = 0; i < 64; 
      +                          i++) {
  4357   000D54  0E00               	movlw	0
  4358   000D56  6FF4               	movwf	saveTimeToFlash@i& (0+255),b
  4359   000D58                     l3692:
  4360                           
  4361                           ; BSR set to: 0
  4362                           ;main.c: 342:         flashBuffer[i] = FLASH_ReadByte(flashAddress + i);
  4363   000D58  51F4               	movf	saveTimeToFlash@i& (0+255),w,b
  4364   000D5A  0FB0               	addlw	low saveTimeToFlash@flashBuffer
  4365   000D5C  6ED9               	movwf	fsr2l,c
  4366   000D5E  6ADA               	clrf	fsr2h,c
  4367   000D60  51F4               	movf	saveTimeToFlash@i& (0+255),w,b
  4368   000D62  25F0               	addwf	saveTimeToFlash@flashAddress& (0+255),w,b
  4369   000D64  6E07               	movwf	FLASH_ReadByte@flashAddr^0,c
  4370   000D66  0E00               	movlw	0
  4371   000D68  21F1               	addwfc	(saveTimeToFlash@flashAddress+1)& (0+255),w,b
  4372   000D6A  6E08               	movwf	(FLASH_ReadByte@flashAddr+1)^0,c
  4373   000D6C  0E00               	movlw	0
  4374   000D6E  21F2               	addwfc	(saveTimeToFlash@flashAddress+2)& (0+255),w,b
  4375   000D70  6E09               	movwf	(FLASH_ReadByte@flashAddr+2)^0,c
  4376   000D72  0E00               	movlw	0
  4377   000D74  21F3               	addwfc	(saveTimeToFlash@flashAddress+3)& (0+255),w,b
  4378   000D76  6E0A               	movwf	(FLASH_ReadByte@flashAddr+3)^0,c
  4379   000D78  ECF2  F008         	call	_FLASH_ReadByte	;wreg free
  4380   000D7C  6EDF               	movwf	indf2,c
  4381   000D7E                     
  4382                           ;main.c: 343:     }
  4383   000D7E  0100               	movlb	0	; () banked
  4384   000D80  2BF4               	incf	saveTimeToFlash@i& (0+255),f,b
  4385   000D82                     
  4386                           ; BSR set to: 0
  4387   000D82  0E3F               	movlw	63
  4388   000D84  65F4               	cpfsgt	saveTimeToFlash@i& (0+255),b
  4389   000D86  EFC7  F006         	goto	u2921
  4390   000D8A  EFC9  F006         	goto	u2920
  4391   000D8E                     u2921:
  4392   000D8E  EFAC  F006         	goto	l3692
  4393   000D92                     u2920:
  4394   000D92                     
  4395                           ; BSR set to: 0
  4396                           ;main.c: 346:     flashBuffer[0] = hours;
  4397   000D92  C0AE  F0B0         	movff	_hours,saveTimeToFlash@flashBuffer
  4398                           
  4399                           ;main.c: 347:     flashBuffer[1] = minutes;
  4400   000D96  C0AD  F0B1         	movff	_minutes,saveTimeToFlash@flashBuffer+1
  4401                           
  4402                           ;main.c: 348:     flashBuffer[2] = alarmHours;
  4403   000D9A  C0AB  F0B2         	movff	_alarmHours,saveTimeToFlash@flashBuffer+2
  4404                           
  4405                           ;main.c: 349:     flashBuffer[3] = alarmMinutes;
  4406   000D9E  C0AA  F0B3         	movff	_alarmMinutes,saveTimeToFlash@flashBuffer+3
  4407                           
  4408                           ;main.c: 350:     flashBuffer[4] = alarmSet;
  4409   000DA2  C0A9  F0B4         	movff	_alarmSet,saveTimeToFlash@flashBuffer+4
  4410   000DA6                     
  4411                           ; BSR set to: 0
  4412                           ;main.c: 353:     FLASH_WriteBlock(flashAddress, flashBuffer);
  4413   000DA6  C0F0  F00C         	movff	saveTimeToFlash@flashAddress,FLASH_WriteBlock@writeAddr
  4414   000DAA  C0F1  F00D         	movff	saveTimeToFlash@flashAddress+1,FLASH_WriteBlock@writeAddr+1
  4415   000DAE  C0F2  F00E         	movff	saveTimeToFlash@flashAddress+2,FLASH_WriteBlock@writeAddr+2
  4416   000DB2  C0F3  F00F         	movff	saveTimeToFlash@flashAddress+3,FLASH_WriteBlock@writeAddr+3
  4417   000DB6  0EB0               	movlw	low saveTimeToFlash@flashBuffer
  4418   000DB8  6E10               	movwf	FLASH_WriteBlock@flashWrBufPtr^0,c
  4419   000DBA  ECF2  F002         	call	_FLASH_WriteBlock	;wreg free
  4420   000DBE  0012               	return		;funcret
  4421   000DC0                     __end_of_saveTimeToFlash:
  4422                           	callstack 0
  4423                           
  4424 ;; *************** function _FLASH_WriteBlock *****************
  4425 ;; Defined at:
  4426 ;;		line 93 in file "mcc_generated_files/memory.c"
  4427 ;; Parameters:    Size  Location     Type
  4428 ;;  writeAddr       4   11[COMRAM] unsigned long 
  4429 ;;  flashWrBufPt    1   15[COMRAM] PTR unsigned char 
  4430 ;;		 -> saveTimeToFlash@flashBuffer(64), 
  4431 ;; Auto vars:     Size  Location     Type
  4432 ;;  blockStartAd    4   16[COMRAM] unsigned long 
  4433 ;;  i               1   24[COMRAM] unsigned char 
  4434 ;;  dataCounter     1   23[COMRAM] unsigned char 
  4435 ;;  numberOfWrit    1   22[COMRAM] unsigned char 
  4436 ;;  j               1   21[COMRAM] unsigned char 
  4437 ;;  GIEBitValue     1   20[COMRAM] unsigned char 
  4438 ;; Return value:  Size  Location     Type
  4439 ;;                  1    wreg      char 
  4440 ;; Registers used:
  4441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  4442 ;; Tracked objects:
  4443 ;;		On entry : 0/0
  4444 ;;		On exit  : 0/0
  4445 ;;		Unchanged: 0/0
  4446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4447 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4448 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4450 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4451 ;;Total ram usage:       14 bytes
  4452 ;; Hardware stack levels used: 1
  4453 ;; Hardware stack levels required when called: 6
  4454 ;; This function calls:
  4455 ;;		_FLASH_EraseBlock
  4456 ;; This function is called by:
  4457 ;;		_saveTimeToFlash
  4458 ;;		_FLASH_WriteByte
  4459 ;; This function uses a non-reentrant model
  4460 ;;
  4461                           
  4462                           	psect	text14
  4463   0005E4                     __ptext14:
  4464                           	callstack 0
  4465   0005E4                     _FLASH_WriteBlock:
  4466                           	callstack 23
  4467   0005E4                     
  4468                           ;mcc_generated_files/memory.c: 93: int8_t FLASH_WriteBlock(uint32_t writeAddr, uint8_t *
      +                          flashWrBufPtr);mcc_generated_files/memory.c: 94: {;mcc_generated_files/memory.c: 95:    
      +                           uint32_t blockStartAddr = (uint32_t )(writeAddr & ((65536 -1) ^ (64 -1)));
  4469   0005E4  0EC0               	movlw	192
  4470   0005E6  140C               	andwf	FLASH_WriteBlock@writeAddr^0,w,c
  4471   0005E8  6E11               	movwf	FLASH_WriteBlock@blockStartAddr^0,c
  4472   0005EA  0EFF               	movlw	255
  4473   0005EC  140D               	andwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4474   0005EE  6E12               	movwf	(FLASH_WriteBlock@blockStartAddr+1)^0,c
  4475   0005F0  0E00               	movlw	0
  4476   0005F2  140E               	andwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4477   0005F4  6E13               	movwf	(FLASH_WriteBlock@blockStartAddr+2)^0,c
  4478   0005F6  0E00               	movlw	0
  4479   0005F8  140F               	andwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4480   0005FA  6E14               	movwf	(FLASH_WriteBlock@blockStartAddr+3)^0,c
  4481   0005FC                     
  4482                           ;mcc_generated_files/memory.c: 96:     uint8_t GIEBitValue = INTCONbits.GIE;
  4483   0005FC  0E00               	movlw	0
  4484   0005FE  BEF2               	btfsc	242,7,c	;volatile
  4485   000600  0E01               	movlw	1
  4486   000602  6E15               	movwf	FLASH_WriteBlock@GIEBitValue^0,c
  4487   000604  0E00               	movlw	0
  4488   000606  6E18               	movwf	FLASH_WriteBlock@dataCounter^0,c
  4489   000608                     
  4490                           ;mcc_generated_files/memory.c: 99:     numberOfWriteBlocks = (64/64);
  4491   000608  0E01               	movlw	1
  4492   00060A  6E17               	movwf	FLASH_WriteBlock@numberOfWriteBlocks^0,c
  4493   00060C                     
  4494                           ;mcc_generated_files/memory.c: 102:     if( writeAddr != blockStartAddr )
  4495   00060C  5011               	movf	FLASH_WriteBlock@blockStartAddr^0,w,c
  4496   00060E  180C               	xorwf	FLASH_WriteBlock@writeAddr^0,w,c
  4497   000610  E10F               	bnz	u2680
  4498   000612  5012               	movf	(FLASH_WriteBlock@blockStartAddr+1)^0,w,c
  4499   000614  180D               	xorwf	(FLASH_WriteBlock@writeAddr+1)^0,w,c
  4500   000616  E10C               	bnz	u2680
  4501   000618  5013               	movf	(FLASH_WriteBlock@blockStartAddr+2)^0,w,c
  4502   00061A  180E               	xorwf	(FLASH_WriteBlock@writeAddr+2)^0,w,c
  4503   00061C  E109               	bnz	u2680
  4504   00061E  5014               	movf	(FLASH_WriteBlock@blockStartAddr+3)^0,w,c
  4505   000620  180F               	xorwf	(FLASH_WriteBlock@writeAddr+3)^0,w,c
  4506   000622  B4D8               	btfsc	status,2,c
  4507   000624  EF16  F003         	goto	u2681
  4508   000628  EF18  F003         	goto	u2680
  4509   00062C                     u2681:
  4510   00062C  EF1A  F003         	goto	l3462
  4511   000630                     u2680:
  4512   000630  EF66  F003         	goto	l233
  4513   000634                     l3462:
  4514                           
  4515                           ;mcc_generated_files/memory.c: 108:     FLASH_EraseBlock(writeAddr);
  4516   000634  C00C  F007         	movff	FLASH_WriteBlock@writeAddr,FLASH_EraseBlock@baseAddr
  4517   000638  C00D  F008         	movff	FLASH_WriteBlock@writeAddr+1,FLASH_EraseBlock@baseAddr+1
  4518   00063C  C00E  F009         	movff	FLASH_WriteBlock@writeAddr+2,FLASH_EraseBlock@baseAddr+2
  4519   000640  C00F  F00A         	movff	FLASH_WriteBlock@writeAddr+3,FLASH_EraseBlock@baseAddr+3
  4520   000644  EC26  F008         	call	_FLASH_EraseBlock	;wreg free
  4521   000648                     
  4522                           ;mcc_generated_files/memory.c: 111:  TBLPTRU = (uint8_t)((writeAddr & 0x00FF0000) >> 16)
      +                          ;
  4523   000648  C00E  FFF8         	movff	FLASH_WriteBlock@writeAddr+2,tblptru	;volatile
  4524   00064C                     
  4525                           ;mcc_generated_files/memory.c: 112:  TBLPTRH = (uint8_t)((writeAddr & 0x0000FF00)>> 8);
  4526   00064C  C00D  FFF7         	movff	FLASH_WriteBlock@writeAddr+1,tblptrh	;volatile
  4527   000650                     
  4528                           ;mcc_generated_files/memory.c: 113:  TBLPTRL = (uint8_t)(writeAddr & 0x000000FF);
  4529   000650  C00C  FFF6         	movff	FLASH_WriteBlock@writeAddr,tblptrl	;volatile
  4530   000654                     
  4531                           ;mcc_generated_files/memory.c: 115:  for(j=0; j<numberOfWriteBlocks; j++)
  4532   000654  0E00               	movlw	0
  4533   000656  6E16               	movwf	FLASH_WriteBlock@j^0,c
  4534   000658  EF5D  F003         	goto	l3498
  4535   00065C                     l3472:
  4536                           
  4537                           ;mcc_generated_files/memory.c: 116:     {;mcc_generated_files/memory.c: 118:   for (i=0;
      +                           i<64; i++)
  4538   00065C  0E00               	movlw	0
  4539   00065E  6E19               	movwf	FLASH_WriteBlock@i^0,c
  4540   000660                     l3478:
  4541                           
  4542                           ;mcc_generated_files/memory.c: 119:   {;mcc_generated_files/memory.c: 120:    TABLAT = f
      +                          lashWrBufPtr[dataCounter];
  4543   000660  5010               	movf	FLASH_WriteBlock@flashWrBufPtr^0,w,c
  4544   000662  2418               	addwf	FLASH_WriteBlock@dataCounter^0,w,c
  4545   000664  6ED9               	movwf	fsr2l,c
  4546   000666  6ADA               	clrf	fsr2h,c
  4547   000668  50DF               	movf	indf2,w,c
  4548   00066A  6EF5               	movwf	245,c	;volatile
  4549   00066C                     
  4550                           ;mcc_generated_files/memory.c: 121:    if (i == (64 -1))
  4551   00066C  0E3F               	movlw	63
  4552   00066E  1819               	xorwf	FLASH_WriteBlock@i^0,w,c
  4553   000670  A4D8               	btfss	status,2,c
  4554   000672  EF3D  F003         	goto	u2691
  4555   000676  EF3F  F003         	goto	u2690
  4556   00067A                     u2691:
  4557   00067A  EF42  F003         	goto	l238
  4558   00067E                     u2690:
  4559   00067E  000C               	tblwt		*	;# 
  4560                           
  4561                           ;mcc_generated_files/memory.c: 124:    }
  4562   000680  EF44  F003         	goto	l239
  4563   000684                     l238:
  4564   000684  000D               	tblwt		*+	;# 
  4565   000686                     
  4566                           ;mcc_generated_files/memory.c: 128:     dataCounter++;
  4567   000686  2A18               	incf	FLASH_WriteBlock@dataCounter^0,f,c
  4568   000688                     l239:
  4569                           
  4570                           ;mcc_generated_files/memory.c: 130:   }
  4571   000688  2A19               	incf	FLASH_WriteBlock@i^0,f,c
  4572   00068A  0E3F               	movlw	63
  4573   00068C  6419               	cpfsgt	FLASH_WriteBlock@i^0,c
  4574   00068E  EF4B  F003         	goto	u2701
  4575   000692  EF4D  F003         	goto	u2700
  4576   000696                     u2701:
  4577   000696  EF30  F003         	goto	l3478
  4578   00069A                     u2700:
  4579   00069A                     
  4580                           ;mcc_generated_files/memory.c: 132:   EECON1bits.EEPGD = 1;
  4581   00069A  8EA6               	bsf	166,7,c	;volsfr
  4582                           
  4583                           ;mcc_generated_files/memory.c: 133:   EECON1bits.CFGS = 0;
  4584   00069C  9CA6               	bcf	166,6,c	;volsfr
  4585                           
  4586                           ;mcc_generated_files/memory.c: 134:   EECON1bits.WREN = 1;
  4587   00069E  84A6               	bsf	166,2,c	;volsfr
  4588                           
  4589                           ;mcc_generated_files/memory.c: 135:   INTCONbits.GIE = 0;
  4590   0006A0  9EF2               	bcf	242,7,c	;volatile
  4591   0006A2                     
  4592                           ;mcc_generated_files/memory.c: 136:   EECON2 = 0x55;
  4593   0006A2  0E55               	movlw	85
  4594   0006A4  6EA7               	movwf	167,c	;volsfr
  4595                           
  4596                           ;mcc_generated_files/memory.c: 137:   EECON2 = 0xAA;
  4597   0006A6  0EAA               	movlw	170
  4598   0006A8  6EA7               	movwf	167,c	;volsfr
  4599   0006AA                     
  4600                           ;mcc_generated_files/memory.c: 138:   EECON1bits.WR = 1;
  4601   0006AA  82A6               	bsf	166,1,c	;volsfr
  4602   0006AC                     
  4603                           ;mcc_generated_files/memory.c: 140:     EECON1bits.WREN = 0;
  4604   0006AC  94A6               	bcf	166,2,c	;volsfr
  4605   0006AE                     
  4606                           ;mcc_generated_files/memory.c: 141:     INTCONbits.GIE = GIEBitValue;
  4607   0006AE  B015               	btfsc	FLASH_WriteBlock@GIEBitValue^0,0,c
  4608   0006B0  D002               	bra	u2715
  4609   0006B2  9EF2               	bcf	242,7,c	;volatile
  4610   0006B4  D001               	bra	u2716
  4611   0006B6                     u2715:
  4612   0006B6  8EF2               	bsf	242,7,c	;volatile
  4613   0006B8                     u2716:
  4614   0006B8                     
  4615                           ;mcc_generated_files/memory.c: 142:  }
  4616   0006B8  2A16               	incf	FLASH_WriteBlock@j^0,f,c
  4617   0006BA                     l3498:
  4618   0006BA  5017               	movf	FLASH_WriteBlock@numberOfWriteBlocks^0,w,c
  4619   0006BC  5C16               	subwf	FLASH_WriteBlock@j^0,w,c
  4620   0006BE  A0D8               	btfss	status,0,c
  4621   0006C0  EF64  F003         	goto	u2721
  4622   0006C4  EF66  F003         	goto	u2720
  4623   0006C8                     u2721:
  4624   0006C8  EF2E  F003         	goto	l3472
  4625   0006CC                     u2720:
  4626   0006CC                     l233:
  4627   0006CC  0012               	return		;funcret
  4628   0006CE                     __end_of_FLASH_WriteBlock:
  4629                           	callstack 0
  4630                           
  4631 ;; *************** function _FLASH_EraseBlock *****************
  4632 ;; Defined at:
  4633 ;;		line 147 in file "mcc_generated_files/memory.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;  baseAddr        4    6[COMRAM] unsigned long 
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;  GIEBitValue     1   10[COMRAM] unsigned char 
  4638 ;; Return value:  Size  Location     Type
  4639 ;;                  1    wreg      void 
  4640 ;; Registers used:
  4641 ;;		wreg, status,2
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4647 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4650 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4651 ;;Total ram usage:        5 bytes
  4652 ;; Hardware stack levels used: 1
  4653 ;; Hardware stack levels required when called: 5
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_FLASH_WriteBlock
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text15
  4662   00104C                     __ptext15:
  4663                           	callstack 0
  4664   00104C                     _FLASH_EraseBlock:
  4665                           	callstack 23
  4666   00104C                     
  4667                           ;mcc_generated_files/memory.c: 147: void FLASH_EraseBlock(uint32_t baseAddr);mcc_generat
      +                          ed_files/memory.c: 148: {;mcc_generated_files/memory.c: 149:     uint8_t GIEBitValue = I
      +                          NTCONbits.GIE;
  4668   00104C  0E00               	movlw	0
  4669   00104E  BEF2               	btfsc	242,7,c	;volatile
  4670   001050  0E01               	movlw	1
  4671   001052  6E0B               	movwf	FLASH_EraseBlock@GIEBitValue^0,c
  4672   001054                     
  4673                           ;mcc_generated_files/memory.c: 151:     TBLPTRU = (uint8_t)((baseAddr & 0x00FF0000) >> 1
      +                          6);
  4674   001054  C009  FFF8         	movff	FLASH_EraseBlock@baseAddr+2,tblptru	;volatile
  4675   001058                     
  4676                           ;mcc_generated_files/memory.c: 152:     TBLPTRH = (uint8_t)((baseAddr & 0x0000FF00)>> 8)
      +                          ;
  4677   001058  C008  FFF7         	movff	FLASH_EraseBlock@baseAddr+1,tblptrh	;volatile
  4678   00105C                     
  4679                           ;mcc_generated_files/memory.c: 153:     TBLPTRL = (uint8_t)(baseAddr & 0x000000FF);
  4680   00105C  C007  FFF6         	movff	FLASH_EraseBlock@baseAddr,tblptrl	;volatile
  4681   001060                     
  4682                           ;mcc_generated_files/memory.c: 155:     EECON1bits.EEPGD = 1;
  4683   001060  8EA6               	bsf	166,7,c	;volsfr
  4684   001062                     
  4685                           ;mcc_generated_files/memory.c: 156:     EECON1bits.CFGS = 0;
  4686   001062  9CA6               	bcf	166,6,c	;volsfr
  4687   001064                     
  4688                           ;mcc_generated_files/memory.c: 157:     EECON1bits.WREN = 1;
  4689   001064  84A6               	bsf	166,2,c	;volsfr
  4690   001066                     
  4691                           ;mcc_generated_files/memory.c: 158:     EECON1bits.FREE = 1;
  4692   001066  88A6               	bsf	166,4,c	;volsfr
  4693   001068                     
  4694                           ;mcc_generated_files/memory.c: 159:     INTCONbits.GIE = 0;
  4695   001068  9EF2               	bcf	242,7,c	;volatile
  4696   00106A                     
  4697                           ;mcc_generated_files/memory.c: 160:     EECON2 = 0x55;
  4698   00106A  0E55               	movlw	85
  4699   00106C  6EA7               	movwf	167,c	;volsfr
  4700   00106E                     
  4701                           ;mcc_generated_files/memory.c: 161:     EECON2 = 0xAA;
  4702   00106E  0EAA               	movlw	170
  4703   001070  6EA7               	movwf	167,c	;volsfr
  4704   001072                     
  4705                           ;mcc_generated_files/memory.c: 162:     EECON1bits.WR = 1;
  4706   001072  82A6               	bsf	166,1,c	;volsfr
  4707   001074                     
  4708                           ;mcc_generated_files/memory.c: 163:     INTCONbits.GIE = GIEBitValue;
  4709   001074  B00B               	btfsc	FLASH_EraseBlock@GIEBitValue^0,0,c
  4710   001076  D002               	bra	u2565
  4711   001078  9EF2               	bcf	242,7,c	;volatile
  4712   00107A  D001               	bra	u2566
  4713   00107C                     u2565:
  4714   00107C  8EF2               	bsf	242,7,c	;volatile
  4715   00107E                     u2566:
  4716   00107E  0012               	return		;funcret
  4717   001080                     __end_of_FLASH_EraseBlock:
  4718                           	callstack 0
  4719                           
  4720 ;; *************** function _FLASH_ReadByte *****************
  4721 ;; Defined at:
  4722 ;;		line 58 in file "mcc_generated_files/memory.c"
  4723 ;; Parameters:    Size  Location     Type
  4724 ;;  flashAddr       4    6[COMRAM] unsigned long 
  4725 ;; Auto vars:     Size  Location     Type
  4726 ;;		None
  4727 ;; Return value:  Size  Location     Type
  4728 ;;                  1    wreg      unsigned char 
  4729 ;; Registers used:
  4730 ;;		wreg, status,2
  4731 ;; Tracked objects:
  4732 ;;		On entry : 0/0
  4733 ;;		On exit  : 0/0
  4734 ;;		Unchanged: 0/0
  4735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4736 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4737 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4738 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4739 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4740 ;;Total ram usage:        4 bytes
  4741 ;; Hardware stack levels used: 1
  4742 ;; Hardware stack levels required when called: 5
  4743 ;; This function calls:
  4744 ;;		Nothing
  4745 ;; This function is called by:
  4746 ;;		_saveTimeToFlash
  4747 ;;		_loadTimeFromFlash
  4748 ;;		_FLASH_ReadWord
  4749 ;;		_FLASH_WriteByte
  4750 ;; This function uses a non-reentrant model
  4751 ;;
  4752                           
  4753                           	psect	text16
  4754   0011E4                     __ptext16:
  4755                           	callstack 0
  4756   0011E4                     _FLASH_ReadByte:
  4757                           	callstack 24
  4758   0011E4                     
  4759                           ;mcc_generated_files/memory.c: 58: uint8_t FLASH_ReadByte(uint32_t flashAddr);mcc_genera
      +                          ted_files/memory.c: 59: {;mcc_generated_files/memory.c: 60:     TBLPTRU = (uint8_t)((fla
      +                          shAddr & 0x00FF0000) >> 16);
  4760   0011E4  C009  FFF8         	movff	FLASH_ReadByte@flashAddr+2,tblptru	;volatile
  4761                           
  4762                           ;mcc_generated_files/memory.c: 61:     TBLPTRH = (uint8_t)((flashAddr & 0x0000FF00)>> 8)
      +                          ;
  4763   0011E8  C008  FFF7         	movff	FLASH_ReadByte@flashAddr+1,tblptrh	;volatile
  4764                           
  4765                           ;mcc_generated_files/memory.c: 62:     TBLPTRL = (uint8_t)(flashAddr & 0x000000FF);
  4766   0011EC  C007  FFF6         	movff	FLASH_ReadByte@flashAddr,tblptrl	;volatile
  4767   0011F0  0008               	tblrd		*	;# 
  4768   0011F2                     
  4769                           ;mcc_generated_files/memory.c: 66:     return (TABLAT);
  4770   0011F2  50F5               	movf	245,w,c	;volatile
  4771   0011F4  0012               	return		;funcret
  4772   0011F6                     __end_of_FLASH_ReadByte:
  4773                           	callstack 0
  4774                           
  4775 ;; *************** function _displayTime *****************
  4776 ;; Defined at:
  4777 ;;		line 111 in file "main.c"
  4778 ;; Parameters:    Size  Location     Type
  4779 ;;		None
  4780 ;; Auto vars:     Size  Location     Type
  4781 ;;  i               2   21[BANK0 ] int 
  4782 ;;  timeString      5   16[BANK0 ] unsigned char [5]
  4783 ;;  displayStrin    5   11[BANK0 ] unsigned char [5]
  4784 ;; Return value:  Size  Location     Type
  4785 ;;                  1    wreg      void 
  4786 ;; Registers used:
  4787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4793 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4794 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4796 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4797 ;;Total ram usage:       12 bytes
  4798 ;; Hardware stack levels used: 1
  4799 ;; Hardware stack levels required when called: 9
  4800 ;; This function calls:
  4801 ;;		___awdiv
  4802 ;;		___awmod
  4803 ;;		_printString
  4804 ;; This function is called by:
  4805 ;;		_main
  4806 ;;		_checkButtons
  4807 ;; This function uses a non-reentrant model
  4808 ;;
  4809                           
  4810                           	psect	text17
  4811   000A8C                     __ptext17:
  4812                           	callstack 0
  4813   000A8C                     _displayTime:
  4814                           	callstack 21
  4815   000A8C                     
  4816                           ;main.c: 113:     char timeString[5];;main.c: 116:     timeString[0] = (hours / 10) + '0
      +                          ';
  4817   000A8C  C0AE  F007         	movff	_hours,___awdiv@dividend
  4818   000A90  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4819   000A92  0E00               	movlw	0
  4820   000A94  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4821   000A96  0E0A               	movlw	10
  4822   000A98  6E09               	movwf	___awdiv@divisor^0,c
  4823   000A9A  ECCA  F003         	call	___awdiv	;wreg free
  4824   000A9E  5007               	movf	?___awdiv^0,w,c
  4825   000AA0  0F30               	addlw	48
  4826   000AA2  0100               	movlb	0	; () banked
  4827   000AA4  6FC0               	movwf	displayTime@timeString& (0+255),b
  4828                           
  4829                           ;main.c: 117:     timeString[1] = (hours % 10) + '0';
  4830   000AA6  C0AE  F007         	movff	_hours,___awmod@dividend
  4831   000AAA  6A08               	clrf	(___awmod@dividend+1)^0,c
  4832   000AAC  0E00               	movlw	0
  4833   000AAE  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4834   000AB0  0E0A               	movlw	10
  4835   000AB2  6E09               	movwf	___awmod@divisor^0,c
  4836   000AB4  ECFA  F005         	call	___awmod	;wreg free
  4837   000AB8  5007               	movf	?___awmod^0,w,c
  4838   000ABA  0F30               	addlw	48
  4839   000ABC  0100               	movlb	0	; () banked
  4840   000ABE  6FC1               	movwf	(displayTime@timeString+1)& (0+255),b
  4841                           
  4842                           ;main.c: 118:     timeString[2] = (minutes / 10) + '0';
  4843   000AC0  C0AD  F007         	movff	_minutes,___awdiv@dividend
  4844   000AC4  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4845   000AC6  0E00               	movlw	0
  4846   000AC8  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4847   000ACA  0E0A               	movlw	10
  4848   000ACC  6E09               	movwf	___awdiv@divisor^0,c
  4849   000ACE  ECCA  F003         	call	___awdiv	;wreg free
  4850   000AD2  5007               	movf	?___awdiv^0,w,c
  4851   000AD4  0F30               	addlw	48
  4852   000AD6  0100               	movlb	0	; () banked
  4853   000AD8  6FC2               	movwf	(displayTime@timeString+2)& (0+255),b
  4854                           
  4855                           ;main.c: 119:     timeString[3] = (minutes % 10) + '0';
  4856   000ADA  C0AD  F007         	movff	_minutes,___awmod@dividend
  4857   000ADE  6A08               	clrf	(___awmod@dividend+1)^0,c
  4858   000AE0  0E00               	movlw	0
  4859   000AE2  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4860   000AE4  0E0A               	movlw	10
  4861   000AE6  6E09               	movwf	___awmod@divisor^0,c
  4862   000AE8  ECFA  F005         	call	___awmod	;wreg free
  4863   000AEC  5007               	movf	?___awmod^0,w,c
  4864   000AEE  0F30               	addlw	48
  4865   000AF0  0100               	movlb	0	; () banked
  4866   000AF2  6FC3               	movwf	(displayTime@timeString+3)& (0+255),b
  4867   000AF4                     
  4868                           ; BSR set to: 0
  4869                           ;main.c: 120:     timeString[4] = '\0';
  4870   000AF4  0E00               	movlw	0
  4871   000AF6  6FC4               	movwf	(displayTime@timeString+4)& (0+255),b
  4872   000AF8                     
  4873                           ; BSR set to: 0
  4874                           ;main.c: 123:     uint8_t displayString[5];;main.c: 124:     for (int i = 0; i < 5; i++)
      +                           {
  4875   000AF8  0E00               	movlw	0
  4876   000AFA  6FC6               	movwf	(displayTime@i+1)& (0+255),b
  4877   000AFC  0E00               	movlw	0
  4878   000AFE  6FC5               	movwf	displayTime@i& (0+255),b
  4879   000B00                     l3678:
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;main.c: 125:         displayString[i] = (uint8_t)timeString[i];
  4883   000B00  51C5               	movf	displayTime@i& (0+255),w,b
  4884   000B02  0FC0               	addlw	low displayTime@timeString
  4885   000B04  6ED9               	movwf	fsr2l,c
  4886   000B06  6ADA               	clrf	fsr2h,c
  4887   000B08  51C5               	movf	displayTime@i& (0+255),w,b
  4888   000B0A  0FBB               	addlw	low displayTime@displayString
  4889   000B0C  6EE1               	movwf	fsr1l,c
  4890   000B0E  6AE2               	clrf	fsr1h,c
  4891   000B10  CFDF FFE7          	movff	indf2,indf1
  4892   000B14                     
  4893                           ; BSR set to: 0
  4894                           ;main.c: 126:     }
  4895   000B14  4BC5               	infsnz	displayTime@i& (0+255),f,b
  4896   000B16  2BC6               	incf	(displayTime@i+1)& (0+255),f,b
  4897   000B18                     
  4898                           ; BSR set to: 0
  4899   000B18  BFC6               	btfsc	(displayTime@i+1)& (0+255),7,b
  4900   000B1A  EF98  F005         	goto	u2911
  4901   000B1E  51C6               	movf	(displayTime@i+1)& (0+255),w,b
  4902   000B20  E109               	bnz	u2910
  4903   000B22  0E05               	movlw	5
  4904   000B24  5DC5               	subwf	displayTime@i& (0+255),w,b
  4905   000B26  A0D8               	btfss	status,0,c
  4906   000B28  EF98  F005         	goto	u2911
  4907   000B2C  EF9A  F005         	goto	u2910
  4908   000B30                     u2911:
  4909   000B30  EF80  F005         	goto	l3678
  4910   000B34                     u2910:
  4911   000B34                     
  4912                           ; BSR set to: 0
  4913                           ;main.c: 128:     printString(displayString);
  4914   000B34  0EBB               	movlw	low displayTime@displayString
  4915   000B36  6E47               	movwf	printString@str^0,c
  4916   000B38  6A48               	clrf	(printString@str+1)^0,c
  4917   000B3A  EC91  F001         	call	_printString	;wreg free
  4918   000B3E  0012               	return		;funcret
  4919   000B40                     __end_of_displayTime:
  4920                           	callstack 0
  4921                           
  4922 ;; *************** function _displayAlarmTime *****************
  4923 ;; Defined at:
  4924 ;;		line 144 in file "main.c"
  4925 ;; Parameters:    Size  Location     Type
  4926 ;;		None
  4927 ;; Auto vars:     Size  Location     Type
  4928 ;;  i               2   21[BANK0 ] int 
  4929 ;;  alarmTimeStr    5   16[BANK0 ] unsigned char [5]
  4930 ;;  displayStrin    5   11[BANK0 ] unsigned char [5]
  4931 ;; Return value:  Size  Location     Type
  4932 ;;                  1    wreg      void 
  4933 ;; Registers used:
  4934 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4935 ;; Tracked objects:
  4936 ;;		On entry : 0/0
  4937 ;;		On exit  : 0/0
  4938 ;;		Unchanged: 0/0
  4939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4940 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4941 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4942 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4943 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4944 ;;Total ram usage:       12 bytes
  4945 ;; Hardware stack levels used: 1
  4946 ;; Hardware stack levels required when called: 9
  4947 ;; This function calls:
  4948 ;;		___awdiv
  4949 ;;		___awmod
  4950 ;;		_printString
  4951 ;; This function is called by:
  4952 ;;		_checkButtons
  4953 ;; This function uses a non-reentrant model
  4954 ;;
  4955                           
  4956                           	psect	text18
  4957   000B40                     __ptext18:
  4958                           	callstack 0
  4959   000B40                     _displayAlarmTime:
  4960                           	callstack 20
  4961   000B40                     
  4962                           ;main.c: 146:     char alarmTimeString[5];;main.c: 149:     alarmTimeString[0] = (alarmH
      +                          ours / 10) + '0';
  4963   000B40  C0AB  F007         	movff	_alarmHours,___awdiv@dividend
  4964   000B44  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4965   000B46  0E00               	movlw	0
  4966   000B48  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4967   000B4A  0E0A               	movlw	10
  4968   000B4C  6E09               	movwf	___awdiv@divisor^0,c
  4969   000B4E  ECCA  F003         	call	___awdiv	;wreg free
  4970   000B52  5007               	movf	?___awdiv^0,w,c
  4971   000B54  0F30               	addlw	48
  4972   000B56  0100               	movlb	0	; () banked
  4973   000B58  6FC0               	movwf	displayAlarmTime@alarmTimeString& (0+255),b
  4974                           
  4975                           ;main.c: 150:     alarmTimeString[1] = (alarmHours % 10) + '0';
  4976   000B5A  C0AB  F007         	movff	_alarmHours,___awmod@dividend
  4977   000B5E  6A08               	clrf	(___awmod@dividend+1)^0,c
  4978   000B60  0E00               	movlw	0
  4979   000B62  6E0A               	movwf	(___awmod@divisor+1)^0,c
  4980   000B64  0E0A               	movlw	10
  4981   000B66  6E09               	movwf	___awmod@divisor^0,c
  4982   000B68  ECFA  F005         	call	___awmod	;wreg free
  4983   000B6C  5007               	movf	?___awmod^0,w,c
  4984   000B6E  0F30               	addlw	48
  4985   000B70  0100               	movlb	0	; () banked
  4986   000B72  6FC1               	movwf	(displayAlarmTime@alarmTimeString+1)& (0+255),b
  4987                           
  4988                           ;main.c: 151:     alarmTimeString[2] = (alarmMinutes / 10) + '0';
  4989   000B74  C0AA  F007         	movff	_alarmMinutes,___awdiv@dividend
  4990   000B78  6A08               	clrf	(___awdiv@dividend+1)^0,c
  4991   000B7A  0E00               	movlw	0
  4992   000B7C  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  4993   000B7E  0E0A               	movlw	10
  4994   000B80  6E09               	movwf	___awdiv@divisor^0,c
  4995   000B82  ECCA  F003         	call	___awdiv	;wreg free
  4996   000B86  5007               	movf	?___awdiv^0,w,c
  4997   000B88  0F30               	addlw	48
  4998   000B8A  0100               	movlb	0	; () banked
  4999   000B8C  6FC2               	movwf	(displayAlarmTime@alarmTimeString+2)& (0+255),b
  5000                           
  5001                           ;main.c: 152:     alarmTimeString[3] = (alarmMinutes % 10) + '0';
  5002   000B8E  C0AA  F007         	movff	_alarmMinutes,___awmod@dividend
  5003   000B92  6A08               	clrf	(___awmod@dividend+1)^0,c
  5004   000B94  0E00               	movlw	0
  5005   000B96  6E0A               	movwf	(___awmod@divisor+1)^0,c
  5006   000B98  0E0A               	movlw	10
  5007   000B9A  6E09               	movwf	___awmod@divisor^0,c
  5008   000B9C  ECFA  F005         	call	___awmod	;wreg free
  5009   000BA0  5007               	movf	?___awmod^0,w,c
  5010   000BA2  0F30               	addlw	48
  5011   000BA4  0100               	movlb	0	; () banked
  5012   000BA6  6FC3               	movwf	(displayAlarmTime@alarmTimeString+3)& (0+255),b
  5013   000BA8                     
  5014                           ; BSR set to: 0
  5015                           ;main.c: 153:     alarmTimeString[4] = '\0';
  5016   000BA8  0E00               	movlw	0
  5017   000BAA  6FC4               	movwf	(displayAlarmTime@alarmTimeString+4)& (0+255),b
  5018   000BAC                     
  5019                           ; BSR set to: 0
  5020                           ;main.c: 156:     uint8_t displayString[5];;main.c: 157:     for (int i = 0; i < 5; i++)
      +                           {
  5021   000BAC  0E00               	movlw	0
  5022   000BAE  6FC6               	movwf	(displayAlarmTime@i+1)& (0+255),b
  5023   000BB0  0E00               	movlw	0
  5024   000BB2  6FC5               	movwf	displayAlarmTime@i& (0+255),b
  5025   000BB4                     l3710:
  5026                           
  5027                           ; BSR set to: 0
  5028                           ;main.c: 158:         displayString[i] = (uint8_t)alarmTimeString[i];
  5029   000BB4  51C5               	movf	displayAlarmTime@i& (0+255),w,b
  5030   000BB6  0FC0               	addlw	low displayAlarmTime@alarmTimeString
  5031   000BB8  6ED9               	movwf	fsr2l,c
  5032   000BBA  6ADA               	clrf	fsr2h,c
  5033   000BBC  51C5               	movf	displayAlarmTime@i& (0+255),w,b
  5034   000BBE  0FBB               	addlw	low displayAlarmTime@displayString
  5035   000BC0  6EE1               	movwf	fsr1l,c
  5036   000BC2  6AE2               	clrf	fsr1h,c
  5037   000BC4  CFDF FFE7          	movff	indf2,indf1
  5038   000BC8                     
  5039                           ; BSR set to: 0
  5040                           ;main.c: 159:     }
  5041   000BC8  4BC5               	infsnz	displayAlarmTime@i& (0+255),f,b
  5042   000BCA  2BC6               	incf	(displayAlarmTime@i+1)& (0+255),f,b
  5043   000BCC                     
  5044                           ; BSR set to: 0
  5045   000BCC  BFC6               	btfsc	(displayAlarmTime@i+1)& (0+255),7,b
  5046   000BCE  EFF2  F005         	goto	u2931
  5047   000BD2  51C6               	movf	(displayAlarmTime@i+1)& (0+255),w,b
  5048   000BD4  E109               	bnz	u2930
  5049   000BD6  0E05               	movlw	5
  5050   000BD8  5DC5               	subwf	displayAlarmTime@i& (0+255),w,b
  5051   000BDA  A0D8               	btfss	status,0,c
  5052   000BDC  EFF2  F005         	goto	u2931
  5053   000BE0  EFF4  F005         	goto	u2930
  5054   000BE4                     u2931:
  5055   000BE4  EFDA  F005         	goto	l3710
  5056   000BE8                     u2930:
  5057   000BE8                     
  5058                           ; BSR set to: 0
  5059                           ;main.c: 161:     printString(displayString);
  5060   000BE8  0EBB               	movlw	low displayAlarmTime@displayString
  5061   000BEA  6E47               	movwf	printString@str^0,c
  5062   000BEC  6A48               	clrf	(printString@str+1)^0,c
  5063   000BEE  EC91  F001         	call	_printString	;wreg free
  5064   000BF2  0012               	return		;funcret
  5065   000BF4                     __end_of_displayAlarmTime:
  5066                           	callstack 0
  5067                           
  5068 ;; *************** function _printString *****************
  5069 ;; Defined at:
  5070 ;;		line 161 in file "MAX7219.c"
  5071 ;; Parameters:    Size  Location     Type
  5072 ;;  str             2   70[COMRAM] PTR unsigned char 
  5073 ;;		 -> STR_1(6), displayAlarmTime@displayString(5), displayTime@displayString(5), 
  5074 ;; Auto vars:     Size  Location     Type
  5075 ;;  j               2    9[BANK0 ] int 
  5076 ;;  data            1    2[BANK0 ] unsigned char 
  5077 ;;  i               2    5[BANK0 ] int 
  5078 ;;  indx            2    0[BANK0 ] int 
  5079 ;;  k               2    7[BANK0 ] int 
  5080 ;;  strindx         2    3[BANK0 ] int 
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5090 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5091 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5092 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5093 ;;      Totals:        10      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5094 ;;Total ram usage:       21 bytes
  5095 ;; Hardware stack levels used: 1
  5096 ;; Hardware stack levels required when called: 8
  5097 ;; This function calls:
  5098 ;;		_flushBuffer
  5099 ;; This function is called by:
  5100 ;;		_displayTime
  5101 ;;		_displayAlarmTime
  5102 ;;		_triggerAlarm
  5103 ;; This function uses a non-reentrant model
  5104 ;;
  5105                           
  5106                           	psect	text19
  5107   000322                     __ptext19:
  5108                           	callstack 0
  5109   000322                     _printString:
  5110                           	callstack 20
  5111   000322                     
  5112                           ;MAX7219.c: 161: void printString(uint8_t *str);MAX7219.c: 162: {;MAX7219.c: 163:     in
      +                          t strindx = 0;
  5113   000322  0E00               	movlw	0
  5114   000324  0100               	movlb	0	; () banked
  5115   000326  6FB4               	movwf	(printString@strindx+1)& (0+255),b
  5116   000328  0E00               	movlw	0
  5117   00032A  6FB3               	movwf	printString@strindx& (0+255),b
  5118                           
  5119                           ;MAX7219.c: 164:     int k = 4 * 8 - 1;
  5120   00032C  0E00               	movlw	0
  5121   00032E  6FB8               	movwf	(printString@k+1)& (0+255),b
  5122   000330  0E1F               	movlw	31
  5123   000332  6FB7               	movwf	printString@k& (0+255),b
  5124                           
  5125                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5126   000334  EF39  F002         	goto	l3570
  5127   000338                     l3530:
  5128                           
  5129                           ;MAX7219.c: 167:     {;MAX7219.c: 168:         int indx = 0;
  5130   000338  0E00               	movlw	0
  5131   00033A  0100               	movlb	0	; () banked
  5132   00033C  6FB1               	movwf	(printString@indx+1)& (0+255),b
  5133   00033E  0E00               	movlw	0
  5134   000340  6FB0               	movwf	printString@indx& (0+255),b
  5135                           
  5136                           ;MAX7219.c: 169:         for (int i = 0; i < 8; i++)
  5137   000342  0E00               	movlw	0
  5138   000344  6FB6               	movwf	(printString@i+1)& (0+255),b
  5139   000346  0E00               	movlw	0
  5140   000348  6FB5               	movwf	printString@i& (0+255),b
  5141   00034A                     l3536:
  5142                           
  5143                           ; BSR set to: 0
  5144                           ;MAX7219.c: 170:         {;MAX7219.c: 171:             uint8_t data = 0;
  5145   00034A  0E00               	movlw	0
  5146   00034C  6FB2               	movwf	printString@data& (0+255),b
  5147                           
  5148                           ;MAX7219.c: 173:             for (int j = 7; j >= 0; j--)
  5149   00034E  0E00               	movlw	0
  5150   000350  6FBA               	movwf	(printString@j+1)& (0+255),b
  5151   000352  0E07               	movlw	7
  5152   000354  6FB9               	movwf	printString@j& (0+255),b
  5153   000356                     l3542:
  5154                           
  5155                           ; BSR set to: 0
  5156                           ;MAX7219.c: 174:             {;MAX7219.c: 175:                 if ((MAX7219_Dot_Matrix_f
      +                          ont[str[strindx]][indx]) & (1 << j))
  5157   000356  51B3               	movf	printString@strindx& (0+255),w,b
  5158   000358  2447               	addwf	printString@str^0,w,c
  5159   00035A  6E49               	movwf	??_printString^0,c
  5160   00035C  51B4               	movf	(printString@strindx+1)& (0+255),w,b
  5161   00035E  2048               	addwfc	(printString@str+1)^0,w,c
  5162   000360  6E4A               	movwf	(??_printString+1)^0,c
  5163   000362  C049  FFF6         	movff	??_printString,tblptrl
  5164   000366  C04A  FFF7         	movff	??_printString+1,tblptrh
  5165   00036A  0E00               	movlw	low (__mediumconst shr (0+16))
  5166   00036C  6EF8               	movwf	tblptru,c
  5167   00036E  0E0F               	movlw	(high __ramtop+-1)
  5168   000370  64F7               	cpfsgt	tblptrh,c
  5169   000372  D003               	bra	u2757
  5170   000374  0008               	tblrd		*
  5171   000376  50F5               	movf	tablat,w,c
  5172   000378  D005               	bra	u2750
  5173   00037A                     u2757:
  5174   00037A  CFF6 FFE1          	movff	tblptrl,fsr1l
  5175   00037E  CFF7 FFE2          	movff	tblptrh,fsr1h
  5176   000382  50E7               	movf	indf1,w,c
  5177   000384                     u2750:
  5178   000384  6E4B               	movwf	(??_printString+2)^0,c
  5179   000386  504B               	movf	(??_printString+2)^0,w,c
  5180   000388  0D08               	mullw	8
  5181   00038A  0E29               	movlw	low _MAX7219_Dot_Matrix_font
  5182   00038C  24F3               	addwf	243,w,c
  5183   00038E  6E4C               	movwf	(??_printString+3)^0,c
  5184   000390  0EF5               	movlw	high _MAX7219_Dot_Matrix_font
  5185   000392  20F4               	addwfc	prodh,w,c
  5186   000394  6E4D               	movwf	(??_printString+4)^0,c
  5187   000396  0100               	movlb	0	; () banked
  5188   000398  51B0               	movf	printString@indx& (0+255),w,b
  5189   00039A  264C               	addwf	(??_printString+3)^0,f,c
  5190   00039C  51B1               	movf	(printString@indx+1)& (0+255),w,b
  5191   00039E  224D               	addwfc	(??_printString+4)^0,f,c
  5192   0003A0  C04C  FFF6         	movff	??_printString+3,tblptrl
  5193   0003A4  C04D  FFF7         	movff	??_printString+4,tblptrh
  5194   0003A8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5195   0003A8  6AF8               	clrf	tblptru,c
  5196   0003AA                     	endif
  5197   0003AA                     	if	0	;tblptru may be non-zero
  5198   0003AA                     	endif
  5199   0003AA  0008               	tblrd		*
  5200   0003AC  CFF5 F04E          	movff	tablat,??_printString+5
  5201   0003B0  C0B9  F04F         	movff	printString@j,??_printString+6
  5202   0003B4  0E01               	movlw	1
  5203   0003B6  6E50               	movwf	(??_printString+7)^0,c
  5204   0003B8  2A4F               	incf	(??_printString+6)^0,f,c
  5205   0003BA  EFE1  F001         	goto	u2764
  5206   0003BE                     u2765:
  5207   0003BE  90D8               	bcf	status,0,c
  5208   0003C0  3650               	rlcf	(??_printString+7)^0,f,c
  5209   0003C2                     u2764:
  5210   0003C2  2E4F               	decfsz	(??_printString+6)^0,f,c
  5211   0003C4  EFDF  F001         	goto	u2765
  5212   0003C8  5050               	movf	(??_printString+7)^0,w,c
  5213   0003CA  144E               	andwf	(??_printString+5)^0,w,c
  5214   0003CC  0900               	iorlw	0
  5215   0003CE  B4D8               	btfsc	status,2,c
  5216   0003D0  EFEC  F001         	goto	u2771
  5217   0003D4  EFEE  F001         	goto	u2770
  5218   0003D8                     u2771:
  5219   0003D8  EFFF  F001         	goto	l3546
  5220   0003DC                     u2770:
  5221   0003DC                     
  5222                           ;MAX7219.c: 176:                 {;MAX7219.c: 177:                     data |= (1 << (7 
      +                          - j));
  5223   0003DC  0100               	movlb	0	; () banked
  5224   0003DE  51B9               	movf	printString@j& (0+255),w,b
  5225   0003E0  0807               	sublw	7
  5226   0003E2  6E49               	movwf	??_printString^0,c
  5227   0003E4  0E01               	movlw	1
  5228   0003E6  6E4A               	movwf	(??_printString+1)^0,c
  5229   0003E8  2A49               	incf	??_printString^0,f,c
  5230   0003EA  EFF9  F001         	goto	u2784
  5231   0003EE                     u2785:
  5232   0003EE  90D8               	bcf	status,0,c
  5233   0003F0  364A               	rlcf	(??_printString+1)^0,f,c
  5234   0003F2                     u2784:
  5235   0003F2  2E49               	decfsz	??_printString^0,f,c
  5236   0003F4  EFF7  F001         	goto	u2785
  5237   0003F8  504A               	movf	(??_printString+1)^0,w,c
  5238   0003FA  0100               	movlb	0	; () banked
  5239   0003FC  13B2               	iorwf	printString@data& (0+255),f,b
  5240   0003FE                     l3546:
  5241                           
  5242                           ;MAX7219.c: 179:             }
  5243   0003FE  0100               	movlb	0	; () banked
  5244   000400  07B9               	decf	printString@j& (0+255),f,b
  5245   000402  A0D8               	btfss	status,0,c
  5246   000404  07BA               	decf	(printString@j+1)& (0+255),f,b
  5247   000406                     
  5248                           ; BSR set to: 0
  5249   000406  BFBA               	btfsc	(printString@j+1)& (0+255),7,b
  5250   000408  EF0A  F002         	goto	u2790
  5251   00040C  EF08  F002         	goto	u2791
  5252   000410                     u2791:
  5253   000410  EFAB  F001         	goto	l3542
  5254   000414                     u2790:
  5255   000414                     
  5256                           ; BSR set to: 0
  5257                           ;MAX7219.c: 180:             if (k < 0) break;
  5258   000414  BFB8               	btfsc	(printString@k+1)& (0+255),7,b
  5259   000416  EF11  F002         	goto	u2800
  5260   00041A  EF0F  F002         	goto	u2801
  5261   00041E                     u2801:
  5262   00041E  EF13  F002         	goto	l3554
  5263   000422                     u2800:
  5264   000422  EF2E  F002         	goto	l3564
  5265   000426                     l3554:
  5266                           
  5267                           ; BSR set to: 0
  5268                           ;MAX7219.c: 181:             bufferCol[k--] = data;
  5269   000426  51B7               	movf	printString@k& (0+255),w,b
  5270   000428  0F60               	addlw	low _bufferCol
  5271   00042A  6ED9               	movwf	fsr2l,c
  5272   00042C  6ADA               	clrf	fsr2h,c
  5273   00042E  C0B2  FFDF         	movff	printString@data,indf2
  5274   000432                     
  5275                           ; BSR set to: 0
  5276   000432  07B7               	decf	printString@k& (0+255),f,b
  5277   000434  A0D8               	btfss	status,0,c
  5278   000436  07B8               	decf	(printString@k+1)& (0+255),f,b
  5279   000438                     
  5280                           ; BSR set to: 0
  5281                           ;MAX7219.c: 182:             indx++;
  5282   000438  4BB0               	infsnz	printString@indx& (0+255),f,b
  5283   00043A  2BB1               	incf	(printString@indx+1)& (0+255),f,b
  5284   00043C                     
  5285                           ; BSR set to: 0
  5286                           ;MAX7219.c: 183:         }
  5287   00043C  4BB5               	infsnz	printString@i& (0+255),f,b
  5288   00043E  2BB6               	incf	(printString@i+1)& (0+255),f,b
  5289   000440                     
  5290                           ; BSR set to: 0
  5291   000440  BFB6               	btfsc	(printString@i+1)& (0+255),7,b
  5292   000442  EF2C  F002         	goto	u2811
  5293   000446  51B6               	movf	(printString@i+1)& (0+255),w,b
  5294   000448  E109               	bnz	u2810
  5295   00044A  0E08               	movlw	8
  5296   00044C  5DB5               	subwf	printString@i& (0+255),w,b
  5297   00044E  A0D8               	btfss	status,0,c
  5298   000450  EF2C  F002         	goto	u2811
  5299   000454  EF2E  F002         	goto	u2810
  5300   000458                     u2811:
  5301   000458  EFA5  F001         	goto	l3536
  5302   00045C                     u2810:
  5303   00045C                     l3564:
  5304                           
  5305                           ; BSR set to: 0
  5306                           ;MAX7219.c: 184:         strindx++;
  5307   00045C  4BB3               	infsnz	printString@strindx& (0+255),f,b
  5308   00045E  2BB4               	incf	(printString@strindx+1)& (0+255),f,b
  5309   000460                     
  5310                           ; BSR set to: 0
  5311                           ;MAX7219.c: 185:         if (k < 0) break;
  5312   000460  BFB8               	btfsc	(printString@k+1)& (0+255),7,b
  5313   000462  EF37  F002         	goto	u2820
  5314   000466  EF35  F002         	goto	u2821
  5315   00046A                     u2821:
  5316   00046A  EF39  F002         	goto	l3570
  5317   00046E                     u2820:
  5318   00046E  EF58  F002         	goto	l3572
  5319   000472                     l3570:
  5320                           
  5321                           ; BSR set to: 0
  5322                           ;MAX7219.c: 166:     while (str[strindx] != '\0')
  5323   000472  51B3               	movf	printString@strindx& (0+255),w,b
  5324   000474  2447               	addwf	printString@str^0,w,c
  5325   000476  6E49               	movwf	??_printString^0,c
  5326   000478  51B4               	movf	(printString@strindx+1)& (0+255),w,b
  5327   00047A  2048               	addwfc	(printString@str+1)^0,w,c
  5328   00047C  6E4A               	movwf	(??_printString+1)^0,c
  5329   00047E  C049  FFF6         	movff	??_printString,tblptrl
  5330   000482  C04A  FFF7         	movff	??_printString+1,tblptrh
  5331   000486  0E00               	movlw	low (__mediumconst shr (0+16))
  5332   000488  6EF8               	movwf	tblptru,c
  5333   00048A  0E0F               	movlw	(high __ramtop+-1)
  5334   00048C  64F7               	cpfsgt	tblptrh,c
  5335   00048E  D003               	bra	u2837
  5336   000490  0008               	tblrd		*
  5337   000492  50F5               	movf	tablat,w,c
  5338   000494  D005               	bra	u2830
  5339   000496                     u2837:
  5340   000496  CFF6 FFE1          	movff	tblptrl,fsr1l
  5341   00049A  CFF7 FFE2          	movff	tblptrh,fsr1h
  5342   00049E  50E7               	movf	indf1,w,c
  5343   0004A0                     u2830:
  5344   0004A0  0900               	iorlw	0
  5345   0004A2  A4D8               	btfss	status,2,c
  5346   0004A4  EF56  F002         	goto	u2841
  5347   0004A8  EF58  F002         	goto	u2840
  5348   0004AC                     u2841:
  5349   0004AC  EF9C  F001         	goto	l3530
  5350   0004B0                     u2840:
  5351   0004B0                     l3572:
  5352                           
  5353                           ;MAX7219.c: 188:     flushBuffer();
  5354   0004B0  EC5B  F002         	call	_flushBuffer	;wreg free
  5355   0004B4  0012               	return		;funcret
  5356   0004B6                     __end_of_printString:
  5357                           	callstack 0
  5358                           
  5359 ;; *************** function _flushBuffer *****************
  5360 ;; Defined at:
  5361 ;;		line 52 in file "MAX7219.c"
  5362 ;; Parameters:    Size  Location     Type
  5363 ;;		None
  5364 ;; Auto vars:     Size  Location     Type
  5365 ;;  j               2   64[COMRAM] int 
  5366 ;;  dev             2   62[COMRAM] int 
  5367 ;;  row             2   66[COMRAM] int 
  5368 ;;  i               2   68[COMRAM] int 
  5369 ;;  bufferRow      32   30[COMRAM] unsigned char [32]
  5370 ;; Return value:  Size  Location     Type
  5371 ;;                  1    wreg      void 
  5372 ;; Registers used:
  5373 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5374 ;; Tracked objects:
  5375 ;;		On entry : 0/0
  5376 ;;		On exit  : 0/0
  5377 ;;		Unchanged: 0/0
  5378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5379 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5380 ;;      Locals:        40       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5381 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5382 ;;      Totals:        43       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5383 ;;Total ram usage:       43 bytes
  5384 ;; Hardware stack levels used: 1
  5385 ;; Hardware stack levels required when called: 7
  5386 ;; This function calls:
  5387 ;;		___awdiv
  5388 ;;		_max_write
  5389 ;; This function is called by:
  5390 ;;		_clearDisplay
  5391 ;;		_printString
  5392 ;;		_shiftLeft
  5393 ;;		_shiftchar
  5394 ;; This function uses a non-reentrant model
  5395 ;;
  5396                           
  5397                           	psect	text20
  5398   0004B6                     __ptext20:
  5399                           	callstack 0
  5400   0004B6                     _flushBuffer:
  5401                           	callstack 20
  5402   0004B6                     
  5403                           ;MAX7219.c: 54:  uint8_t bufferRow[4*8] = {0};
  5404   0004B6  EE20  F01F         	lfsr	2,flushBuffer@bufferRow
  5405   0004BA  0E1F               	movlw	31
  5406   0004BC                     u2581:
  5407   0004BC  6ADE               	clrf	postinc2,c
  5408   0004BE  06E8               	decf	wreg,f,c
  5409   0004C0  E2FD               	bc	u2581
  5410   0004C2                     
  5411                           ;MAX7219.c: 57:  for (int i=0; i<4*8; i++)
  5412   0004C2  0E00               	movlw	0
  5413   0004C4  6E46               	movwf	(flushBuffer@i+1)^0,c
  5414   0004C6  0E00               	movlw	0
  5415   0004C8  6E45               	movwf	flushBuffer@i^0,c
  5416   0004CA                     l3378:
  5417                           
  5418                           ;MAX7219.c: 58:  {;MAX7219.c: 59:   int dev = i/8;
  5419   0004CA  C045  F007         	movff	flushBuffer@i,___awdiv@dividend
  5420   0004CE  C046  F008         	movff	flushBuffer@i+1,___awdiv@dividend+1
  5421   0004D2  0E00               	movlw	0
  5422   0004D4  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5423   0004D6  0E08               	movlw	8
  5424   0004D8  6E09               	movwf	___awdiv@divisor^0,c
  5425   0004DA  ECCA  F003         	call	___awdiv	;wreg free
  5426   0004DE  C007  F03F         	movff	?___awdiv,flushBuffer@dev
  5427   0004E2  C008  F040         	movff	?___awdiv+1,flushBuffer@dev+1
  5428   0004E6                     
  5429                           ;MAX7219.c: 60:   for (int j=0; j<8; j++)
  5430   0004E6  0E00               	movlw	0
  5431   0004E8  6E42               	movwf	(flushBuffer@j+1)^0,c
  5432   0004EA  0E00               	movlw	0
  5433   0004EC  6E41               	movwf	flushBuffer@j^0,c
  5434   0004EE                     l3386:
  5435                           
  5436                           ;MAX7219.c: 61:   {;MAX7219.c: 62:    if ((bufferCol[i])&(1<<(j)))
  5437   0004EE  5045               	movf	flushBuffer@i^0,w,c
  5438   0004F0  0F60               	addlw	low _bufferCol
  5439   0004F2  6ED9               	movwf	fsr2l,c
  5440   0004F4  6ADA               	clrf	fsr2h,c
  5441   0004F6  50DF               	movf	indf2,w,c
  5442   0004F8  6E1C               	movwf	??_flushBuffer^0,c
  5443   0004FA  C041  F01D         	movff	flushBuffer@j,??_flushBuffer+1
  5444   0004FE  0E01               	movlw	1
  5445   000500  6E1E               	movwf	(??_flushBuffer+2)^0,c
  5446   000502  2A1D               	incf	(??_flushBuffer+1)^0,f,c
  5447   000504  EF86  F002         	goto	u2594
  5448   000508                     u2595:
  5449   000508  90D8               	bcf	status,0,c
  5450   00050A  361E               	rlcf	(??_flushBuffer+2)^0,f,c
  5451   00050C                     u2594:
  5452   00050C  2E1D               	decfsz	(??_flushBuffer+1)^0,f,c
  5453   00050E  EF84  F002         	goto	u2595
  5454   000512  501E               	movf	(??_flushBuffer+2)^0,w,c
  5455   000514  141C               	andwf	??_flushBuffer^0,w,c
  5456   000516  0900               	iorlw	0
  5457   000518  B4D8               	btfsc	status,2,c
  5458   00051A  EF91  F002         	goto	u2601
  5459   00051E  EF93  F002         	goto	u2600
  5460   000522                     u2601:
  5461   000522  EFAD  F002         	goto	l3390
  5462   000526                     u2600:
  5463   000526                     
  5464                           ;MAX7219.c: 63:    {;MAX7219.c: 64:     bufferRow[j+(8*dev)] |= (1<<(7-(i-(8*dev))));
  5465   000526  503F               	movf	flushBuffer@dev^0,w,c
  5466   000528  0D08               	mullw	8
  5467   00052A  5045               	movf	flushBuffer@i^0,w,c
  5468   00052C  5CF3               	subwf	243,w,c
  5469   00052E  6E1C               	movwf	??_flushBuffer^0,c
  5470   000530  0E07               	movlw	7
  5471   000532  261C               	addwf	??_flushBuffer^0,f,c
  5472   000534  0E01               	movlw	1
  5473   000536  6E1D               	movwf	(??_flushBuffer+1)^0,c
  5474   000538  2A1C               	incf	??_flushBuffer^0,f,c
  5475   00053A  EFA1  F002         	goto	u2614
  5476   00053E                     u2615:
  5477   00053E  90D8               	bcf	status,0,c
  5478   000540  361D               	rlcf	(??_flushBuffer+1)^0,f,c
  5479   000542                     u2614:
  5480   000542  2E1C               	decfsz	??_flushBuffer^0,f,c
  5481   000544  EF9F  F002         	goto	u2615
  5482   000548  503F               	movf	flushBuffer@dev^0,w,c
  5483   00054A  0D08               	mullw	8
  5484   00054C  50F3               	movf	243,w,c
  5485   00054E  0F1F               	addlw	low flushBuffer@bufferRow
  5486   000550  2441               	addwf	flushBuffer@j^0,w,c
  5487   000552  6ED9               	movwf	fsr2l,c
  5488   000554  6ADA               	clrf	fsr2h,c
  5489   000556  501D               	movf	(??_flushBuffer+1)^0,w,c
  5490   000558  12DF               	iorwf	indf2,f,c
  5491   00055A                     l3390:
  5492                           
  5493                           ;MAX7219.c: 66:   }
  5494   00055A  4A41               	infsnz	flushBuffer@j^0,f,c
  5495   00055C  2A42               	incf	(flushBuffer@j+1)^0,f,c
  5496   00055E  BE42               	btfsc	(flushBuffer@j+1)^0,7,c
  5497   000560  EFBB  F002         	goto	u2621
  5498   000564  5042               	movf	(flushBuffer@j+1)^0,w,c
  5499   000566  E109               	bnz	u2620
  5500   000568  0E08               	movlw	8
  5501   00056A  5C41               	subwf	flushBuffer@j^0,w,c
  5502   00056C  A0D8               	btfss	status,0,c
  5503   00056E  EFBB  F002         	goto	u2621
  5504   000572  EFBD  F002         	goto	u2620
  5505   000576                     u2621:
  5506   000576  EF77  F002         	goto	l3386
  5507   00057A                     u2620:
  5508   00057A                     
  5509                           ;MAX7219.c: 67:  }
  5510   00057A  4A45               	infsnz	flushBuffer@i^0,f,c
  5511   00057C  2A46               	incf	(flushBuffer@i+1)^0,f,c
  5512   00057E  BE46               	btfsc	(flushBuffer@i+1)^0,7,c
  5513   000580  EFCB  F002         	goto	u2631
  5514   000584  5046               	movf	(flushBuffer@i+1)^0,w,c
  5515   000586  E109               	bnz	u2630
  5516   000588  0E20               	movlw	32
  5517   00058A  5C45               	subwf	flushBuffer@i^0,w,c
  5518   00058C  A0D8               	btfss	status,0,c
  5519   00058E  EFCB  F002         	goto	u2631
  5520   000592  EFCD  F002         	goto	u2630
  5521   000596                     u2631:
  5522   000596  EF65  F002         	goto	l3378
  5523   00059A                     u2630:
  5524   00059A                     
  5525                           ;MAX7219.c: 70:  for (int row=1; row<=(4*8); row++)
  5526   00059A  0E00               	movlw	0
  5527   00059C  6E44               	movwf	(flushBuffer@row+1)^0,c
  5528   00059E  0E01               	movlw	1
  5529   0005A0  6E43               	movwf	flushBuffer@row^0,c
  5530   0005A2                     l3404:
  5531                           
  5532                           ;MAX7219.c: 71:  {;MAX7219.c: 72:   max_write(row, bufferRow[row-1]);
  5533   0005A2  C043  F00F         	movff	flushBuffer@row,max_write@row
  5534   0005A6  C044  F010         	movff	flushBuffer@row+1,max_write@row+1
  5535   0005AA  C043  F01C         	movff	flushBuffer@row,??_flushBuffer
  5536   0005AE  0EFF               	movlw	255
  5537   0005B0  261C               	addwf	??_flushBuffer^0,f,c
  5538   0005B2  501C               	movf	??_flushBuffer^0,w,c
  5539   0005B4  0F1F               	addlw	low flushBuffer@bufferRow
  5540   0005B6  6ED9               	movwf	fsr2l,c
  5541   0005B8  6ADA               	clrf	fsr2h,c
  5542   0005BA  50DF               	movf	indf2,w,c
  5543   0005BC  6E11               	movwf	max_write@data^0,c
  5544   0005BE  EC2C  F004         	call	_max_write	;wreg free
  5545   0005C2                     
  5546                           ;MAX7219.c: 73:  }
  5547   0005C2  4A43               	infsnz	flushBuffer@row^0,f,c
  5548   0005C4  2A44               	incf	(flushBuffer@row+1)^0,f,c
  5549   0005C6  BE44               	btfsc	(flushBuffer@row+1)^0,7,c
  5550   0005C8  EFEF  F002         	goto	u2641
  5551   0005CC  5044               	movf	(flushBuffer@row+1)^0,w,c
  5552   0005CE  E109               	bnz	u2640
  5553   0005D0  0E21               	movlw	33
  5554   0005D2  5C43               	subwf	flushBuffer@row^0,w,c
  5555   0005D4  A0D8               	btfss	status,0,c
  5556   0005D6  EFEF  F002         	goto	u2641
  5557   0005DA  EFF1  F002         	goto	u2640
  5558   0005DE                     u2641:
  5559   0005DE  EFD1  F002         	goto	l3404
  5560   0005E2                     u2640:
  5561   0005E2  0012               	return		;funcret
  5562   0005E4                     __end_of_flushBuffer:
  5563                           	callstack 0
  5564                           
  5565 ;; *************** function _max_write *****************
  5566 ;; Defined at:
  5567 ;;		line 10 in file "MAX7219.c"
  5568 ;; Parameters:    Size  Location     Type
  5569 ;;  row             2   14[COMRAM] int 
  5570 ;;  data            1   16[COMRAM] unsigned char 
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  dev             2   23[COMRAM] int 
  5573 ;;  writeData       2   25[COMRAM] unsigned short 
  5574 ;;  devTarget       2   21[COMRAM] int 
  5575 ;;  offset          2   19[COMRAM] int 
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, status,2, status,0, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5585 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5586 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5587 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5588 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5589 ;;Total ram usage:       13 bytes
  5590 ;; Hardware stack levels used: 1
  5591 ;; Hardware stack levels required when called: 6
  5592 ;; This function calls:
  5593 ;;		_SPI_Exchange8bit
  5594 ;;		___awdiv
  5595 ;; This function is called by:
  5596 ;;		_flushBuffer
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text21
  5601   000858                     __ptext21:
  5602                           	callstack 0
  5603   000858                     _max_write:
  5604                           	callstack 20
  5605   000858                     
  5606                           ;MAX7219.c: 10: void max_write(int row, uint8_t data);MAX7219.c: 11: {;MAX7219.c: 12:  i
      +                          nt devTarget = (row - 1) / 8;
  5607   000858  0EFF               	movlw	255
  5608   00085A  240F               	addwf	max_write@row^0,w,c
  5609   00085C  6E07               	movwf	___awdiv@dividend^0,c
  5610   00085E  0EFF               	movlw	255
  5611   000860  2010               	addwfc	(max_write@row+1)^0,w,c
  5612   000862  6E08               	movwf	(___awdiv@dividend+1)^0,c
  5613   000864  0E00               	movlw	0
  5614   000866  6E0A               	movwf	(___awdiv@divisor+1)^0,c
  5615   000868  0E08               	movlw	8
  5616   00086A  6E09               	movwf	___awdiv@divisor^0,c
  5617   00086C  ECCA  F003         	call	___awdiv	;wreg free
  5618   000870  C007  F016         	movff	?___awdiv,max_write@devTarget
  5619   000874  C008  F017         	movff	?___awdiv+1,max_write@devTarget+1
  5620   000878                     
  5621                           ;MAX7219.c: 13:  int offset = devTarget * 8;
  5622   000878  C016  F012         	movff	max_write@devTarget,??_max_write
  5623   00087C  C017  F013         	movff	max_write@devTarget+1,??_max_write+1
  5624   000880  90D8               	bcf	status,0,c
  5625   000882  3612               	rlcf	??_max_write^0,f,c
  5626   000884  3613               	rlcf	(??_max_write+1)^0,f,c
  5627   000886  90D8               	bcf	status,0,c
  5628   000888  3612               	rlcf	??_max_write^0,f,c
  5629   00088A  3613               	rlcf	(??_max_write+1)^0,f,c
  5630   00088C  90D8               	bcf	status,0,c
  5631   00088E  3612               	rlcf	??_max_write^0,f,c
  5632   000890  3613               	rlcf	(??_max_write+1)^0,f,c
  5633   000892  C012  F014         	movff	??_max_write,max_write@offset
  5634   000896  C013  F015         	movff	??_max_write+1,max_write@offset+1
  5635   00089A  948B               	bcf	139,2,c	;volatile
  5636   00089C                     
  5637                           ;MAX7219.c: 19:  for (int dev = 0; dev < 4; dev++)
  5638   00089C  0E00               	movlw	0
  5639   00089E  6E19               	movwf	(max_write@dev+1)^0,c
  5640   0008A0  0E00               	movlw	0
  5641   0008A2  6E18               	movwf	max_write@dev^0,c
  5642   0008A4                     l3320:
  5643                           
  5644                           ;MAX7219.c: 20:  {;MAX7219.c: 21:   if (dev == devTarget)
  5645   0008A4  5016               	movf	max_write@devTarget^0,w,c
  5646   0008A6  1818               	xorwf	max_write@dev^0,w,c
  5647   0008A8  E107               	bnz	u2541
  5648   0008AA  5017               	movf	(max_write@devTarget+1)^0,w,c
  5649   0008AC  1819               	xorwf	(max_write@dev+1)^0,w,c
  5650   0008AE  A4D8               	btfss	status,2,c
  5651   0008B0  EF5C  F004         	goto	u2541
  5652   0008B4  EF5E  F004         	goto	u2540
  5653   0008B8                     u2541:
  5654   0008B8  EF74  F004         	goto	l3328
  5655   0008BC                     u2540:
  5656   0008BC                     
  5657                           ;MAX7219.c: 22:   {;MAX7219.c: 23:    writeData = ((row - offset)<<8)|data;
  5658   0008BC  5014               	movf	max_write@offset^0,w,c
  5659   0008BE  5C0F               	subwf	max_write@row^0,w,c
  5660   0008C0  6E12               	movwf	??_max_write^0,c
  5661   0008C2  5015               	movf	(max_write@offset+1)^0,w,c
  5662   0008C4  5810               	subwfb	(max_write@row+1)^0,w,c
  5663   0008C6  6E13               	movwf	(??_max_write+1)^0,c
  5664   0008C8  C012  F013         	movff	??_max_write,??_max_write+1
  5665   0008CC  6A12               	clrf	??_max_write^0,c
  5666   0008CE  5011               	movf	max_write@data^0,w,c
  5667   0008D0  1012               	iorwf	??_max_write^0,w,c
  5668   0008D2  6E1A               	movwf	max_write@writeData^0,c
  5669   0008D4  5013               	movf	(??_max_write+1)^0,w,c
  5670   0008D6  6E1B               	movwf	(max_write@writeData+1)^0,c
  5671   0008D8                     
  5672                           ;MAX7219.c: 27:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5673   0008D8  501B               	movf	(max_write@writeData+1)^0,w,c
  5674   0008DA  ECCE  F008         	call	_SPI_Exchange8bit
  5675   0008DE                     
  5676                           ;MAX7219.c: 29:             SPI_Exchange8bit(writeData & 0xFF);
  5677   0008DE  501A               	movf	max_write@writeData^0,w,c
  5678   0008E0  ECCE  F008         	call	_SPI_Exchange8bit
  5679                           
  5680                           ;MAX7219.c: 31:   }
  5681   0008E4  EF7A  F004         	goto	l3334
  5682   0008E8                     l3328:
  5683   0008E8                     
  5684                           ;MAX7219.c: 42:             SPI_Exchange8bit((writeData >> 8) & 0xFF);
  5685   0008E8  0E00               	movlw	0
  5686   0008EA  ECCE  F008         	call	_SPI_Exchange8bit
  5687   0008EE                     
  5688                           ;MAX7219.c: 44:             SPI_Exchange8bit(writeData & 0xFF);
  5689   0008EE  0E00               	movlw	0
  5690   0008F0  ECCE  F008         	call	_SPI_Exchange8bit
  5691   0008F4                     l3334:
  5692                           
  5693                           ;MAX7219.c: 46:  }
  5694   0008F4  4A18               	infsnz	max_write@dev^0,f,c
  5695   0008F6  2A19               	incf	(max_write@dev+1)^0,f,c
  5696   0008F8  BE19               	btfsc	(max_write@dev+1)^0,7,c
  5697   0008FA  EF88  F004         	goto	u2551
  5698   0008FE  5019               	movf	(max_write@dev+1)^0,w,c
  5699   000900  E109               	bnz	u2550
  5700   000902  0E04               	movlw	4
  5701   000904  5C18               	subwf	max_write@dev^0,w,c
  5702   000906  A0D8               	btfss	status,0,c
  5703   000908  EF88  F004         	goto	u2551
  5704   00090C  EF8A  F004         	goto	u2550
  5705   000910                     u2551:
  5706   000910  EF52  F004         	goto	l3320
  5707   000914                     u2550:
  5708   000914  848B               	bsf	139,2,c	;volatile
  5709   000916  0012               	return		;funcret
  5710   000918                     __end_of_max_write:
  5711                           	callstack 0
  5712                           
  5713 ;; *************** function ___awdiv *****************
  5714 ;; Defined at:
  5715 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awdiv.c"
  5716 ;; Parameters:    Size  Location     Type
  5717 ;;  dividend        2    6[COMRAM] int 
  5718 ;;  divisor         2    8[COMRAM] int 
  5719 ;; Auto vars:     Size  Location     Type
  5720 ;;  quotient        2   12[COMRAM] int 
  5721 ;;  sign            1   11[COMRAM] unsigned char 
  5722 ;;  counter         1   10[COMRAM] unsigned char 
  5723 ;; Return value:  Size  Location     Type
  5724 ;;                  2    6[COMRAM] int 
  5725 ;; Registers used:
  5726 ;;		wreg, status,2, status,0
  5727 ;; Tracked objects:
  5728 ;;		On entry : 0/0
  5729 ;;		On exit  : 0/0
  5730 ;;		Unchanged: 0/0
  5731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5733 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5734 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5735 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5736 ;;Total ram usage:        8 bytes
  5737 ;; Hardware stack levels used: 1
  5738 ;; Hardware stack levels required when called: 5
  5739 ;; This function calls:
  5740 ;;		Nothing
  5741 ;; This function is called by:
  5742 ;;		_displayTime
  5743 ;;		_displayAlarmTime
  5744 ;;		_max_write
  5745 ;;		_flushBuffer
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           	psect	text22
  5750   000794                     __ptext22:
  5751                           	callstack 0
  5752   000794                     ___awdiv:
  5753                           	callstack 20
  5754   000794  0E00               	movlw	0
  5755   000796  6E0C               	movwf	___awdiv@sign^0,c
  5756   000798  BE0A               	btfsc	(___awdiv@divisor+1)^0,7,c
  5757   00079A  EFD3  F003         	goto	u2480
  5758   00079E  EFD1  F003         	goto	u2481
  5759   0007A2                     u2481:
  5760   0007A2  EFD9  F003         	goto	l3270
  5761   0007A6                     u2480:
  5762   0007A6  6C09               	negf	___awdiv@divisor^0,c
  5763   0007A8  1E0A               	comf	(___awdiv@divisor+1)^0,f,c
  5764   0007AA  B0D8               	btfsc	status,0,c
  5765   0007AC  2A0A               	incf	(___awdiv@divisor+1)^0,f,c
  5766   0007AE  0E01               	movlw	1
  5767   0007B0  6E0C               	movwf	___awdiv@sign^0,c
  5768   0007B2                     l3270:
  5769   0007B2  BE08               	btfsc	(___awdiv@dividend+1)^0,7,c
  5770   0007B4  EFE0  F003         	goto	u2490
  5771   0007B8  EFDE  F003         	goto	u2491
  5772   0007BC                     u2491:
  5773   0007BC  EFE6  F003         	goto	l3276
  5774   0007C0                     u2490:
  5775   0007C0  6C07               	negf	___awdiv@dividend^0,c
  5776   0007C2  1E08               	comf	(___awdiv@dividend+1)^0,f,c
  5777   0007C4  B0D8               	btfsc	status,0,c
  5778   0007C6  2A08               	incf	(___awdiv@dividend+1)^0,f,c
  5779   0007C8  0E01               	movlw	1
  5780   0007CA  1A0C               	xorwf	___awdiv@sign^0,f,c
  5781   0007CC                     l3276:
  5782   0007CC  0E00               	movlw	0
  5783   0007CE  6E0E               	movwf	(___awdiv@quotient+1)^0,c
  5784   0007D0  0E00               	movlw	0
  5785   0007D2  6E0D               	movwf	___awdiv@quotient^0,c
  5786   0007D4  5009               	movf	___awdiv@divisor^0,w,c
  5787   0007D6  100A               	iorwf	(___awdiv@divisor+1)^0,w,c
  5788   0007D8  B4D8               	btfsc	status,2,c
  5789   0007DA  EFF1  F003         	goto	u2501
  5790   0007DE  EFF3  F003         	goto	u2500
  5791   0007E2                     u2501:
  5792   0007E2  EF1B  F004         	goto	l3298
  5793   0007E6                     u2500:
  5794   0007E6  0E01               	movlw	1
  5795   0007E8  6E0B               	movwf	___awdiv@counter^0,c
  5796   0007EA  EFFB  F003         	goto	l3284
  5797   0007EE                     l3282:
  5798   0007EE  90D8               	bcf	status,0,c
  5799   0007F0  3609               	rlcf	___awdiv@divisor^0,f,c
  5800   0007F2  360A               	rlcf	(___awdiv@divisor+1)^0,f,c
  5801   0007F4  2A0B               	incf	___awdiv@counter^0,f,c
  5802   0007F6                     l3284:
  5803   0007F6  AE0A               	btfss	(___awdiv@divisor+1)^0,7,c
  5804   0007F8  EF00  F004         	goto	u2511
  5805   0007FC  EF02  F004         	goto	u2510
  5806   000800                     u2511:
  5807   000800  EFF7  F003         	goto	l3282
  5808   000804                     u2510:
  5809   000804                     l3286:
  5810   000804  90D8               	bcf	status,0,c
  5811   000806  360D               	rlcf	___awdiv@quotient^0,f,c
  5812   000808  360E               	rlcf	(___awdiv@quotient+1)^0,f,c
  5813   00080A  5009               	movf	___awdiv@divisor^0,w,c
  5814   00080C  5C07               	subwf	___awdiv@dividend^0,w,c
  5815   00080E  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5816   000810  5808               	subwfb	(___awdiv@dividend+1)^0,w,c
  5817   000812  A0D8               	btfss	status,0,c
  5818   000814  EF0E  F004         	goto	u2521
  5819   000818  EF10  F004         	goto	u2520
  5820   00081C                     u2521:
  5821   00081C  EF15  F004         	goto	l3294
  5822   000820                     u2520:
  5823   000820  5009               	movf	___awdiv@divisor^0,w,c
  5824   000822  5E07               	subwf	___awdiv@dividend^0,f,c
  5825   000824  500A               	movf	(___awdiv@divisor+1)^0,w,c
  5826   000826  5A08               	subwfb	(___awdiv@dividend+1)^0,f,c
  5827   000828  800D               	bsf	___awdiv@quotient^0,0,c
  5828   00082A                     l3294:
  5829   00082A  90D8               	bcf	status,0,c
  5830   00082C  320A               	rrcf	(___awdiv@divisor+1)^0,f,c
  5831   00082E  3209               	rrcf	___awdiv@divisor^0,f,c
  5832   000830  2E0B               	decfsz	___awdiv@counter^0,f,c
  5833   000832  EF02  F004         	goto	l3286
  5834   000836                     l3298:
  5835   000836  500C               	movf	___awdiv@sign^0,w,c
  5836   000838  B4D8               	btfsc	status,2,c
  5837   00083A  EF21  F004         	goto	u2531
  5838   00083E  EF23  F004         	goto	u2530
  5839   000842                     u2531:
  5840   000842  EF27  F004         	goto	l3302
  5841   000846                     u2530:
  5842   000846  6C0D               	negf	___awdiv@quotient^0,c
  5843   000848  1E0E               	comf	(___awdiv@quotient+1)^0,f,c
  5844   00084A  B0D8               	btfsc	status,0,c
  5845   00084C  2A0E               	incf	(___awdiv@quotient+1)^0,f,c
  5846   00084E                     l3302:
  5847   00084E  C00D  F007         	movff	___awdiv@quotient,?___awdiv
  5848   000852  C00E  F008         	movff	___awdiv@quotient+1,?___awdiv+1
  5849   000856  0012               	return		;funcret
  5850   000858                     __end_of___awdiv:
  5851                           	callstack 0
  5852                           
  5853 ;; *************** function _SPI_Exchange8bit *****************
  5854 ;; Defined at:
  5855 ;;		line 77 in file "mcc_generated_files/spi.c"
  5856 ;; Parameters:    Size  Location     Type
  5857 ;;  data            1    wreg     unsigned char 
  5858 ;; Auto vars:     Size  Location     Type
  5859 ;;  data            1    6[COMRAM] unsigned char 
  5860 ;; Return value:  Size  Location     Type
  5861 ;;                  1    wreg      unsigned char 
  5862 ;; Registers used:
  5863 ;;		wreg, status,2
  5864 ;; Tracked objects:
  5865 ;;		On entry : 0/0
  5866 ;;		On exit  : 0/0
  5867 ;;		Unchanged: 0/0
  5868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5870 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5872 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5873 ;;Total ram usage:        1 bytes
  5874 ;; Hardware stack levels used: 1
  5875 ;; Hardware stack levels required when called: 5
  5876 ;; This function calls:
  5877 ;;		Nothing
  5878 ;; This function is called by:
  5879 ;;		_max_write
  5880 ;;		_max7219_cmd
  5881 ;;		_SPI_Exchange8bitBuffer
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text23
  5886   00119C                     __ptext23:
  5887                           	callstack 0
  5888   00119C                     _SPI_Exchange8bit:
  5889                           	callstack 20
  5890                           
  5891                           ;incstack = 0
  5892                           ;SPI_Exchange8bit@data stored from wreg
  5893   00119C  6E07               	movwf	SPI_Exchange8bit@data^0,c
  5894   00119E                     
  5895                           ;mcc_generated_files/spi.c: 77: uint8_t SPI_Exchange8bit(uint8_t data);mcc_generated_fil
      +                          es/spi.c: 78: {;mcc_generated_files/spi.c: 80:     SSPCON1bits.WCOL = 0;
  5896   00119E  9EC6               	bcf	198,7,c	;volatile
  5897   0011A0                     
  5898                           ;mcc_generated_files/spi.c: 82:     SSPBUF = data;
  5899   0011A0  C007  FFC9         	movff	SPI_Exchange8bit@data,4041	;volatile
  5900   0011A4                     l18:
  5901                           
  5902                           ;mcc_generated_files/spi.c: 84:     while(SSPSTATbits.BF == 0x0)
  5903   0011A4  A0C7               	btfss	199,0,c	;volatile
  5904   0011A6  EFD7  F008         	goto	u2471
  5905   0011AA  EFD9  F008         	goto	u2470
  5906   0011AE                     u2471:
  5907   0011AE  EFD2  F008         	goto	l18
  5908   0011B2                     u2470:
  5909   0011B2                     
  5910                           ;mcc_generated_files/spi.c: 88:     return (SSPBUF);
  5911   0011B2  50C9               	movf	201,w,c	;volatile
  5912   0011B4  0012               	return		;funcret
  5913   0011B6                     __end_of_SPI_Exchange8bit:
  5914                           	callstack 0
  5915                           
  5916 ;; *************** function ___awmod *****************
  5917 ;; Defined at:
  5918 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\awmod.c"
  5919 ;; Parameters:    Size  Location     Type
  5920 ;;  dividend        2    6[COMRAM] int 
  5921 ;;  divisor         2    8[COMRAM] int 
  5922 ;; Auto vars:     Size  Location     Type
  5923 ;;  sign            1   11[COMRAM] unsigned char 
  5924 ;;  counter         1   10[COMRAM] unsigned char 
  5925 ;; Return value:  Size  Location     Type
  5926 ;;                  2    6[COMRAM] int 
  5927 ;; Registers used:
  5928 ;;		wreg, status,2, status,0
  5929 ;; Tracked objects:
  5930 ;;		On entry : 0/0
  5931 ;;		On exit  : 0/0
  5932 ;;		Unchanged: 0/0
  5933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5934 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5935 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5937 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5938 ;;Total ram usage:        6 bytes
  5939 ;; Hardware stack levels used: 1
  5940 ;; Hardware stack levels required when called: 5
  5941 ;; This function calls:
  5942 ;;		Nothing
  5943 ;; This function is called by:
  5944 ;;		_displayTime
  5945 ;;		_displayAlarmTime
  5946 ;;		_checkButtons
  5947 ;; This function uses a non-reentrant model
  5948 ;;
  5949                           
  5950                           	psect	text24
  5951   000BF4                     __ptext24:
  5952                           	callstack 0
  5953   000BF4                     ___awmod:
  5954                           	callstack 24
  5955   000BF4  0E00               	movlw	0
  5956   000BF6  6E0C               	movwf	___awmod@sign^0,c
  5957   000BF8  BE08               	btfsc	(___awmod@dividend+1)^0,7,c
  5958   000BFA  EF03  F006         	goto	u2850
  5959   000BFE  EF01  F006         	goto	u2851
  5960   000C02                     u2851:
  5961   000C02  EF09  F006         	goto	l3584
  5962   000C06                     u2850:
  5963   000C06  6C07               	negf	___awmod@dividend^0,c
  5964   000C08  1E08               	comf	(___awmod@dividend+1)^0,f,c
  5965   000C0A  B0D8               	btfsc	status,0,c
  5966   000C0C  2A08               	incf	(___awmod@dividend+1)^0,f,c
  5967   000C0E  0E01               	movlw	1
  5968   000C10  6E0C               	movwf	___awmod@sign^0,c
  5969   000C12                     l3584:
  5970   000C12  BE0A               	btfsc	(___awmod@divisor+1)^0,7,c
  5971   000C14  EF10  F006         	goto	u2860
  5972   000C18  EF0E  F006         	goto	u2861
  5973   000C1C                     u2861:
  5974   000C1C  EF14  F006         	goto	l3588
  5975   000C20                     u2860:
  5976   000C20  6C09               	negf	___awmod@divisor^0,c
  5977   000C22  1E0A               	comf	(___awmod@divisor+1)^0,f,c
  5978   000C24  B0D8               	btfsc	status,0,c
  5979   000C26  2A0A               	incf	(___awmod@divisor+1)^0,f,c
  5980   000C28                     l3588:
  5981   000C28  5009               	movf	___awmod@divisor^0,w,c
  5982   000C2A  100A               	iorwf	(___awmod@divisor+1)^0,w,c
  5983   000C2C  B4D8               	btfsc	status,2,c
  5984   000C2E  EF1B  F006         	goto	u2871
  5985   000C32  EF1D  F006         	goto	u2870
  5986   000C36                     u2871:
  5987   000C36  EF41  F006         	goto	l3604
  5988   000C3A                     u2870:
  5989   000C3A  0E01               	movlw	1
  5990   000C3C  6E0B               	movwf	___awmod@counter^0,c
  5991   000C3E  EF25  F006         	goto	l3594
  5992   000C42                     l3592:
  5993   000C42  90D8               	bcf	status,0,c
  5994   000C44  3609               	rlcf	___awmod@divisor^0,f,c
  5995   000C46  360A               	rlcf	(___awmod@divisor+1)^0,f,c
  5996   000C48  2A0B               	incf	___awmod@counter^0,f,c
  5997   000C4A                     l3594:
  5998   000C4A  AE0A               	btfss	(___awmod@divisor+1)^0,7,c
  5999   000C4C  EF2A  F006         	goto	u2881
  6000   000C50  EF2C  F006         	goto	u2880
  6001   000C54                     u2881:
  6002   000C54  EF21  F006         	goto	l3592
  6003   000C58                     u2880:
  6004   000C58                     l3596:
  6005   000C58  5009               	movf	___awmod@divisor^0,w,c
  6006   000C5A  5C07               	subwf	___awmod@dividend^0,w,c
  6007   000C5C  500A               	movf	(___awmod@divisor+1)^0,w,c
  6008   000C5E  5808               	subwfb	(___awmod@dividend+1)^0,w,c
  6009   000C60  A0D8               	btfss	status,0,c
  6010   000C62  EF35  F006         	goto	u2891
  6011   000C66  EF37  F006         	goto	u2890
  6012   000C6A                     u2891:
  6013   000C6A  EF3B  F006         	goto	l3600
  6014   000C6E                     u2890:
  6015   000C6E  5009               	movf	___awmod@divisor^0,w,c
  6016   000C70  5E07               	subwf	___awmod@dividend^0,f,c
  6017   000C72  500A               	movf	(___awmod@divisor+1)^0,w,c
  6018   000C74  5A08               	subwfb	(___awmod@dividend+1)^0,f,c
  6019   000C76                     l3600:
  6020   000C76  90D8               	bcf	status,0,c
  6021   000C78  320A               	rrcf	(___awmod@divisor+1)^0,f,c
  6022   000C7A  3209               	rrcf	___awmod@divisor^0,f,c
  6023   000C7C  2E0B               	decfsz	___awmod@counter^0,f,c
  6024   000C7E  EF2C  F006         	goto	l3596
  6025   000C82                     l3604:
  6026   000C82  500C               	movf	___awmod@sign^0,w,c
  6027   000C84  B4D8               	btfsc	status,2,c
  6028   000C86  EF47  F006         	goto	u2901
  6029   000C8A  EF49  F006         	goto	u2900
  6030   000C8E                     u2901:
  6031   000C8E  EF4D  F006         	goto	l3608
  6032   000C92                     u2900:
  6033   000C92  6C07               	negf	___awmod@dividend^0,c
  6034   000C94  1E08               	comf	(___awmod@dividend+1)^0,f,c
  6035   000C96  B0D8               	btfsc	status,0,c
  6036   000C98  2A08               	incf	(___awmod@dividend+1)^0,f,c
  6037   000C9A                     l3608:
  6038   000C9A  C007  F007         	movff	___awmod@dividend,?___awmod
  6039   000C9E  C008  F008         	movff	___awmod@dividend+1,?___awmod+1
  6040   000CA2  0012               	return		;funcret
  6041   000CA4                     __end_of___awmod:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function _TMR1_StartTimer *****************
  6045 ;; Defined at:
  6046 ;;		line 91 in file "mcc_generated_files/tmr1.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;		None
  6049 ;; Auto vars:     Size  Location     Type
  6050 ;;		None
  6051 ;; Return value:  Size  Location     Type
  6052 ;;                  1    wreg      void 
  6053 ;; Registers used:
  6054 ;;		None
  6055 ;; Tracked objects:
  6056 ;;		On entry : 0/0
  6057 ;;		On exit  : 0/0
  6058 ;;		Unchanged: 0/0
  6059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;Total ram usage:        0 bytes
  6065 ;; Hardware stack levels used: 1
  6066 ;; Hardware stack levels required when called: 5
  6067 ;; This function calls:
  6068 ;;		Nothing
  6069 ;; This function is called by:
  6070 ;;		_main
  6071 ;; This function uses a non-reentrant model
  6072 ;;
  6073                           
  6074                           	psect	text25
  6075   00123E                     __ptext25:
  6076                           	callstack 0
  6077   00123E                     _TMR1_StartTimer:
  6078                           	callstack 25
  6079   00123E                     
  6080                           ;mcc_generated_files/tmr1.c: 94:     T1CONbits.TMR1ON = 1;
  6081   00123E  80CD               	bsf	205,0,c	;volatile
  6082   001240  0012               	return		;funcret
  6083   001242                     __end_of_TMR1_StartTimer:
  6084                           	callstack 0
  6085                           
  6086 ;; *************** function _SYSTEM_Initialize *****************
  6087 ;; Defined at:
  6088 ;;		line 108 in file "mcc_generated_files/mcc.c"
  6089 ;; Parameters:    Size  Location     Type
  6090 ;;		None
  6091 ;; Auto vars:     Size  Location     Type
  6092 ;;		None
  6093 ;; Return value:  Size  Location     Type
  6094 ;;                  1    wreg      void 
  6095 ;; Registers used:
  6096 ;;		wreg, status,2, status,0, cstack
  6097 ;; Tracked objects:
  6098 ;;		On entry : 0/0
  6099 ;;		On exit  : 0/0
  6100 ;;		Unchanged: 0/0
  6101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6102 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6103 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6104 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6105 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6106 ;;Total ram usage:        0 bytes
  6107 ;; Hardware stack levels used: 1
  6108 ;; Hardware stack levels required when called: 7
  6109 ;; This function calls:
  6110 ;;		_EUSART_Initialize
  6111 ;;		_INTERRUPT_Initialize
  6112 ;;		_OSCILLATOR_Initialize
  6113 ;;		_PIN_MANAGER_Initialize
  6114 ;;		_SPI_Initialize
  6115 ;;		_TMR1_Initialize
  6116 ;; This function is called by:
  6117 ;;		_main
  6118 ;; This function uses a non-reentrant model
  6119 ;;
  6120                           
  6121                           	psect	text26
  6122   0011B6                     __ptext26:
  6123                           	callstack 0
  6124   0011B6                     _SYSTEM_Initialize:
  6125                           	callstack 23
  6126   0011B6                     
  6127                           ;mcc_generated_files/mcc.c: 110:     INTERRUPT_Initialize();
  6128   0011B6  EC21  F009         	call	_INTERRUPT_Initialize	;wreg free
  6129   0011BA                     
  6130                           ;mcc_generated_files/mcc.c: 111:     PIN_MANAGER_Initialize();
  6131   0011BA  ECBD  F008         	call	_PIN_MANAGER_Initialize	;wreg free
  6132   0011BE                     
  6133                           ;mcc_generated_files/mcc.c: 112:     OSCILLATOR_Initialize();
  6134   0011BE  EC0D  F009         	call	_OSCILLATOR_Initialize	;wreg free
  6135   0011C2                     
  6136                           ;mcc_generated_files/mcc.c: 113:     SPI_Initialize();
  6137   0011C2  ECFB  F008         	call	_SPI_Initialize	;wreg free
  6138   0011C6                     
  6139                           ;mcc_generated_files/mcc.c: 114:     TMR1_Initialize();
  6140   0011C6  ECAA  F008         	call	_TMR1_Initialize	;wreg free
  6141   0011CA                     
  6142                           ;mcc_generated_files/mcc.c: 115:     EUSART_Initialize();
  6143   0011CA  ECA6  F007         	call	_EUSART_Initialize	;wreg free
  6144   0011CE  0012               	return		;funcret
  6145   0011D0                     __end_of_SYSTEM_Initialize:
  6146                           	callstack 0
  6147                           
  6148 ;; *************** function _TMR1_Initialize *****************
  6149 ;; Defined at:
  6150 ;;		line 65 in file "mcc_generated_files/tmr1.c"
  6151 ;; Parameters:    Size  Location     Type
  6152 ;;		None
  6153 ;; Auto vars:     Size  Location     Type
  6154 ;;		None
  6155 ;; Return value:  Size  Location     Type
  6156 ;;                  1    wreg      void 
  6157 ;; Registers used:
  6158 ;;		wreg, status,2, status,0, cstack
  6159 ;; Tracked objects:
  6160 ;;		On entry : 0/0
  6161 ;;		On exit  : 0/0
  6162 ;;		Unchanged: 0/0
  6163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6164 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6165 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6166 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6167 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6168 ;;Total ram usage:        0 bytes
  6169 ;; Hardware stack levels used: 1
  6170 ;; Hardware stack levels required when called: 6
  6171 ;; This function calls:
  6172 ;;		_TMR1_SetInterruptHandler
  6173 ;; This function is called by:
  6174 ;;		_SYSTEM_Initialize
  6175 ;; This function uses a non-reentrant model
  6176 ;;
  6177                           
  6178                           	psect	text27
  6179   001154                     __ptext27:
  6180                           	callstack 0
  6181   001154                     _TMR1_Initialize:
  6182                           	callstack 23
  6183   001154                     
  6184                           ;mcc_generated_files/tmr1.c: 70:   TMR1H = 0x80;
  6185   001154  0E80               	movlw	128
  6186   001156  6ECF               	movwf	207,c	;volatile
  6187                           
  6188                           ;mcc_generated_files/tmr1.c: 73:   TMR1L = 0x00;
  6189   001158  0E00               	movlw	0
  6190   00115A  6ECE               	movwf	206,c	;volatile
  6191   00115C                     
  6192                           ;mcc_generated_files/tmr1.c: 76:     timer1ReloadVal=TMR1;
  6193   00115C  CFCE F0A0          	movff	4046,_timer1ReloadVal	;volatile
  6194   001160  CFCF F0A1          	movff	4047,_timer1ReloadVal+1	;volatile
  6195   001164                     
  6196                           ;mcc_generated_files/tmr1.c: 79:     PIR1bits.TMR1IF = 0;
  6197   001164  909E               	bcf	158,0,c	;volatile
  6198   001166                     
  6199                           ;mcc_generated_files/tmr1.c: 82:     PIE1bits.TMR1IE = 1;
  6200   001166  809D               	bsf	157,0,c	;volatile
  6201   001168                     
  6202                           ;mcc_generated_files/tmr1.c: 85:     TMR1_SetInterruptHandler(TMR1_DefaultInterruptHandl
      +                          er);
  6203   001168  0E38               	movlw	low _TMR1_DefaultInterruptHandler
  6204   00116A  6E07               	movwf	TMR1_SetInterruptHandler@InterruptHandler^0,c
  6205   00116C  0E12               	movlw	high _TMR1_DefaultInterruptHandler
  6206   00116E  6E08               	movwf	(TMR1_SetInterruptHandler@InterruptHandler+1)^0,c
  6207   001170  EC08  F009         	call	_TMR1_SetInterruptHandler	;wreg free
  6208   001174                     
  6209                           ;mcc_generated_files/tmr1.c: 88:     T1CON = 0x0B;
  6210   001174  0E0B               	movlw	11
  6211   001176  6ECD               	movwf	205,c	;volatile
  6212   001178  0012               	return		;funcret
  6213   00117A                     __end_of_TMR1_Initialize:
  6214                           	callstack 0
  6215                           
  6216 ;; *************** function _TMR1_SetInterruptHandler *****************
  6217 ;; Defined at:
  6218 ;;		line 168 in file "mcc_generated_files/tmr1.c"
  6219 ;; Parameters:    Size  Location     Type
  6220 ;;  InterruptHan    2    6[COMRAM] PTR FTN()void 
  6221 ;;		 -> TMR1_DefaultInterruptHandler(1), 
  6222 ;; Auto vars:     Size  Location     Type
  6223 ;;		None
  6224 ;; Return value:  Size  Location     Type
  6225 ;;                  1    wreg      void 
  6226 ;; Registers used:
  6227 ;;		wreg, status,2, status,0
  6228 ;; Tracked objects:
  6229 ;;		On entry : 0/0
  6230 ;;		On exit  : 0/0
  6231 ;;		Unchanged: 0/0
  6232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6233 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6236 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6237 ;;Total ram usage:        2 bytes
  6238 ;; Hardware stack levels used: 1
  6239 ;; Hardware stack levels required when called: 5
  6240 ;; This function calls:
  6241 ;;		Nothing
  6242 ;; This function is called by:
  6243 ;;		_TMR1_Initialize
  6244 ;; This function uses a non-reentrant model
  6245 ;;
  6246                           
  6247                           	psect	text28
  6248   001210                     __ptext28:
  6249                           	callstack 0
  6250   001210                     _TMR1_SetInterruptHandler:
  6251                           	callstack 23
  6252   001210                     
  6253                           ;mcc_generated_files/tmr1.c: 169:     TMR1_InterruptHandler = InterruptHandler;
  6254   001210  C007  F0F7         	movff	TMR1_SetInterruptHandler@InterruptHandler,_TMR1_InterruptHandler
  6255   001214  C008  F0F8         	movff	TMR1_SetInterruptHandler@InterruptHandler+1,_TMR1_InterruptHandler+1
  6256   001218  0012               	return		;funcret
  6257   00121A                     __end_of_TMR1_SetInterruptHandler:
  6258                           	callstack 0
  6259                           
  6260 ;; *************** function _SPI_Initialize *****************
  6261 ;; Defined at:
  6262 ;;		line 63 in file "mcc_generated_files/spi.c"
  6263 ;; Parameters:    Size  Location     Type
  6264 ;;		None
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;		None
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  1    wreg      void 
  6269 ;; Registers used:
  6270 ;;		wreg, status,2
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6276 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;Total ram usage:        0 bytes
  6281 ;; Hardware stack levels used: 1
  6282 ;; Hardware stack levels required when called: 5
  6283 ;; This function calls:
  6284 ;;		Nothing
  6285 ;; This function is called by:
  6286 ;;		_SYSTEM_Initialize
  6287 ;; This function uses a non-reentrant model
  6288 ;;
  6289                           
  6290                           	psect	text29
  6291   0011F6                     __ptext29:
  6292                           	callstack 0
  6293   0011F6                     _SPI_Initialize:
  6294                           	callstack 24
  6295   0011F6                     
  6296                           ;mcc_generated_files/spi.c: 68:     SSPSTAT = 0xC0;
  6297   0011F6  0EC0               	movlw	192
  6298   0011F8  6EC7               	movwf	199,c	;volatile
  6299                           
  6300                           ;mcc_generated_files/spi.c: 71:     SSPCON1 = 0x30;
  6301   0011FA  0E30               	movlw	48
  6302   0011FC  6EC6               	movwf	198,c	;volatile
  6303                           
  6304                           ;mcc_generated_files/spi.c: 74:     SSPADD = 0x00;
  6305   0011FE  0E00               	movlw	0
  6306   001200  6EC8               	movwf	200,c	;volatile
  6307   001202  0012               	return		;funcret
  6308   001204                     __end_of_SPI_Initialize:
  6309                           	callstack 0
  6310                           
  6311 ;; *************** function _PIN_MANAGER_Initialize *****************
  6312 ;; Defined at:
  6313 ;;		line 52 in file "mcc_generated_files/pin_manager.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;		None
  6316 ;; Auto vars:     Size  Location     Type
  6317 ;;		None
  6318 ;; Return value:  Size  Location     Type
  6319 ;;                  1    wreg      void 
  6320 ;; Registers used:
  6321 ;;		wreg, status,2
  6322 ;; Tracked objects:
  6323 ;;		On entry : 0/0
  6324 ;;		On exit  : 0/0
  6325 ;;		Unchanged: 0/0
  6326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6331 ;;Total ram usage:        0 bytes
  6332 ;; Hardware stack levels used: 1
  6333 ;; Hardware stack levels required when called: 5
  6334 ;; This function calls:
  6335 ;;		Nothing
  6336 ;; This function is called by:
  6337 ;;		_SYSTEM_Initialize
  6338 ;; This function uses a non-reentrant model
  6339 ;;
  6340                           
  6341                           	psect	text30
  6342   00117A                     __ptext30:
  6343                           	callstack 0
  6344   00117A                     _PIN_MANAGER_Initialize:
  6345                           	callstack 24
  6346   00117A                     
  6347                           ;mcc_generated_files/pin_manager.c: 57:     LATA = 0x00;
  6348   00117A  0E00               	movlw	0
  6349   00117C  6E89               	movwf	137,c	;volatile
  6350                           
  6351                           ;mcc_generated_files/pin_manager.c: 58:     LATB = 0x00;
  6352   00117E  0E00               	movlw	0
  6353   001180  6E8A               	movwf	138,c	;volatile
  6354                           
  6355                           ;mcc_generated_files/pin_manager.c: 59:     LATC = 0x2C;
  6356   001182  0E2C               	movlw	44
  6357   001184  6E8B               	movwf	139,c	;volatile
  6358   001186                     
  6359                           ;mcc_generated_files/pin_manager.c: 64:     TRISA = 0xFF;
  6360   001186  6892               	setf	146,c	;volatile
  6361   001188                     
  6362                           ;mcc_generated_files/pin_manager.c: 65:     TRISB = 0xFF;
  6363   001188  6893               	setf	147,c	;volatile
  6364                           
  6365                           ;mcc_generated_files/pin_manager.c: 66:     TRISC = 0x93;
  6366   00118A  0E93               	movlw	147
  6367   00118C  6E94               	movwf	148,c	;volatile
  6368                           
  6369                           ;mcc_generated_files/pin_manager.c: 71:     ANSELH = 0x0A;
  6370   00118E  0E0A               	movlw	10
  6371   001190  6E7F               	movwf	127,c	;volatile
  6372                           
  6373                           ;mcc_generated_files/pin_manager.c: 72:     ANSEL = 0x1F;
  6374   001192  0E1F               	movlw	31
  6375   001194  6E7E               	movwf	126,c	;volatile
  6376   001196                     
  6377                           ;mcc_generated_files/pin_manager.c: 77:     WPUB = 0xFF;
  6378   001196  687C               	setf	124,c	;volatile
  6379   001198                     
  6380                           ;mcc_generated_files/pin_manager.c: 78:     INTCON2bits.nRBPU = 0;
  6381   001198  9EF1               	bcf	241,7,c	;volatile
  6382   00119A  0012               	return		;funcret
  6383   00119C                     __end_of_PIN_MANAGER_Initialize:
  6384                           	callstack 0
  6385                           
  6386 ;; *************** function _OSCILLATOR_Initialize *****************
  6387 ;; Defined at:
  6388 ;;		line 118 in file "mcc_generated_files/mcc.c"
  6389 ;; Parameters:    Size  Location     Type
  6390 ;;		None
  6391 ;; Auto vars:     Size  Location     Type
  6392 ;;		None
  6393 ;; Return value:  Size  Location     Type
  6394 ;;                  1    wreg      void 
  6395 ;; Registers used:
  6396 ;;		wreg, status,2
  6397 ;; Tracked objects:
  6398 ;;		On entry : 0/0
  6399 ;;		On exit  : 0/0
  6400 ;;		Unchanged: 0/0
  6401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6402 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6403 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6404 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6405 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6406 ;;Total ram usage:        0 bytes
  6407 ;; Hardware stack levels used: 1
  6408 ;; Hardware stack levels required when called: 5
  6409 ;; This function calls:
  6410 ;;		Nothing
  6411 ;; This function is called by:
  6412 ;;		_SYSTEM_Initialize
  6413 ;; This function uses a non-reentrant model
  6414 ;;
  6415                           
  6416                           	psect	text31
  6417   00121A                     __ptext31:
  6418                           	callstack 0
  6419   00121A                     _OSCILLATOR_Initialize:
  6420                           	callstack 24
  6421   00121A                     
  6422                           ;mcc_generated_files/mcc.c: 121:     OSCCON = 0x6A;
  6423   00121A  0E6A               	movlw	106
  6424   00121C  6ED3               	movwf	211,c	;volatile
  6425                           
  6426                           ;mcc_generated_files/mcc.c: 123:     OSCTUNE = 0x00;
  6427   00121E  0E00               	movlw	0
  6428   001220  6E9B               	movwf	155,c	;volatile
  6429   001222  0012               	return		;funcret
  6430   001224                     __end_of_OSCILLATOR_Initialize:
  6431                           	callstack 0
  6432                           
  6433 ;; *************** function _INTERRUPT_Initialize *****************
  6434 ;; Defined at:
  6435 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6436 ;; Parameters:    Size  Location     Type
  6437 ;;		None
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;		None
  6440 ;; Return value:  Size  Location     Type
  6441 ;;                  1    wreg      void 
  6442 ;; Registers used:
  6443 ;;		None
  6444 ;; Tracked objects:
  6445 ;;		On entry : 0/0
  6446 ;;		On exit  : 0/0
  6447 ;;		Unchanged: 0/0
  6448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6449 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6450 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6451 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6452 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6453 ;;Total ram usage:        0 bytes
  6454 ;; Hardware stack levels used: 1
  6455 ;; Hardware stack levels required when called: 5
  6456 ;; This function calls:
  6457 ;;		Nothing
  6458 ;; This function is called by:
  6459 ;;		_SYSTEM_Initialize
  6460 ;; This function uses a non-reentrant model
  6461 ;;
  6462                           
  6463                           	psect	text32
  6464   001242                     __ptext32:
  6465                           	callstack 0
  6466   001242                     _INTERRUPT_Initialize:
  6467                           	callstack 24
  6468   001242                     
  6469                           ;mcc_generated_files/interrupt_manager.c: 55:     RCONbits.IPEN = 0;
  6470   001242  9ED0               	bcf	208,7,c	;volatile
  6471   001244  0012               	return		;funcret
  6472   001246                     __end_of_INTERRUPT_Initialize:
  6473                           	callstack 0
  6474                           
  6475 ;; *************** function _EUSART_Initialize *****************
  6476 ;; Defined at:
  6477 ;;		line 75 in file "mcc_generated_files/eusart.c"
  6478 ;; Parameters:    Size  Location     Type
  6479 ;;		None
  6480 ;; Auto vars:     Size  Location     Type
  6481 ;;		None
  6482 ;; Return value:  Size  Location     Type
  6483 ;;                  1    wreg      void 
  6484 ;; Registers used:
  6485 ;;		wreg, status,2, status,0, cstack
  6486 ;; Tracked objects:
  6487 ;;		On entry : 0/0
  6488 ;;		On exit  : 0/0
  6489 ;;		Unchanged: 0/0
  6490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6494 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6495 ;;Total ram usage:        0 bytes
  6496 ;; Hardware stack levels used: 1
  6497 ;; Hardware stack levels required when called: 6
  6498 ;; This function calls:
  6499 ;;		_EUSART_SetRxInterruptHandler
  6500 ;;		_EUSART_SetTxInterruptHandler
  6501 ;; This function is called by:
  6502 ;;		_SYSTEM_Initialize
  6503 ;; This function uses a non-reentrant model
  6504 ;;
  6505                           
  6506                           	psect	text33
  6507   000F4C                     __ptext33:
  6508                           	callstack 0
  6509   000F4C                     _EUSART_Initialize:
  6510                           	callstack 23
  6511   000F4C                     
  6512                           ;mcc_generated_files/eusart.c: 78:     PIE1bits.RC1IE = 0;
  6513   000F4C  9A9D               	bcf	157,5,c	;volatile
  6514                           
  6515                           ;mcc_generated_files/eusart.c: 79:     PIE1bits.TX1IE = 0;
  6516   000F4E  989D               	bcf	157,4,c	;volatile
  6517   000F50                     
  6518                           ;mcc_generated_files/eusart.c: 81:     EUSART_SetTxInterruptHandler(EUSART_Transmit_ISR)
      +                          ;
  6519   000F50  0E00               	movlw	0
  6520   000F52  6E07               	movwf	EUSART_SetTxInterruptHandler@handler^0,c
  6521   000F54  0E00               	movlw	0
  6522   000F56  6E08               	movwf	(EUSART_SetTxInterruptHandler@handler+1)^0,c
  6523   000F58  EC12  F009         	call	_EUSART_SetTxInterruptHandler	;wreg free
  6524                           
  6525                           ;mcc_generated_files/eusart.c: 82:     EUSART_SetRxInterruptHandler(EUSART_Receive_ISR);
  6526   000F5C  0E00               	movlw	0
  6527   000F5E  6E07               	movwf	EUSART_SetRxInterruptHandler@handler^0,c
  6528   000F60  0E00               	movlw	0
  6529   000F62  6E08               	movwf	(EUSART_SetRxInterruptHandler@handler+1)^0,c
  6530   000F64  EC17  F009         	call	_EUSART_SetRxInterruptHandler	;wreg free
  6531   000F68                     
  6532                           ;mcc_generated_files/eusart.c: 87:     BAUDCON = 0x08;
  6533   000F68  0E08               	movlw	8
  6534   000F6A  6EB8               	movwf	184,c	;volatile
  6535   000F6C                     
  6536                           ;mcc_generated_files/eusart.c: 90:     RCSTA = 0x90;
  6537   000F6C  0E90               	movlw	144
  6538   000F6E  6EAB               	movwf	171,c	;volatile
  6539   000F70                     
  6540                           ;mcc_generated_files/eusart.c: 93:     TXSTA = 0x24;
  6541   000F70  0E24               	movlw	36
  6542   000F72  6EAC               	movwf	172,c	;volatile
  6543   000F74                     
  6544                           ;mcc_generated_files/eusart.c: 96:     SPBRG = 0xCF;
  6545   000F74  0ECF               	movlw	207
  6546   000F76  6EAF               	movwf	175,c	;volatile
  6547   000F78                     
  6548                           ;mcc_generated_files/eusart.c: 99:     SPBRGH = 0x00;
  6549   000F78  0E00               	movlw	0
  6550   000F7A  6EB0               	movwf	176,c	;volatile
  6551   000F7C                     
  6552                           ;mcc_generated_files/eusart.c: 103:     eusartTxHead = 0;
  6553   000F7C  0E00               	movlw	0
  6554   000F7E  6E58               	movwf	_eusartTxHead^0,c	;volatile
  6555   000F80                     
  6556                           ;mcc_generated_files/eusart.c: 104:     eusartTxTail = 0;
  6557   000F80  0E00               	movlw	0
  6558   000F82  6E57               	movwf	_eusartTxTail^0,c	;volatile
  6559   000F84                     
  6560                           ;mcc_generated_files/eusart.c: 105:     eusartTxBufferRemaining = sizeof(eusartTxBuffer)
      +                          ;
  6561   000F84  0E08               	movlw	8
  6562   000F86  6E56               	movwf	_eusartTxBufferRemaining^0,c	;volatile
  6563   000F88                     
  6564                           ;mcc_generated_files/eusart.c: 107:     eusartRxHead = 0;
  6565   000F88  0E00               	movlw	0
  6566   000F8A  6E55               	movwf	_eusartRxHead^0,c	;volatile
  6567   000F8C                     
  6568                           ;mcc_generated_files/eusart.c: 108:     eusartRxTail = 0;
  6569   000F8C  0E00               	movlw	0
  6570   000F8E  6E54               	movwf	_eusartRxTail^0,c	;volatile
  6571   000F90                     
  6572                           ;mcc_generated_files/eusart.c: 109:     eusartRxCount = 0;
  6573   000F90  0E00               	movlw	0
  6574   000F92  0100               	movlb	0	; () banked
  6575   000F94  6FAF               	movwf	_eusartRxCount& (0+255),b	;volatile
  6576   000F96                     
  6577                           ; BSR set to: 0
  6578                           ;mcc_generated_files/eusart.c: 112:     PIE1bits.RC1IE = 1;
  6579   000F96  8A9D               	bsf	157,5,c	;volatile
  6580   000F98                     
  6581                           ; BSR set to: 0
  6582   000F98  0012               	return		;funcret
  6583   000F9A                     __end_of_EUSART_Initialize:
  6584                           	callstack 0
  6585                           
  6586 ;; *************** function _EUSART_SetTxInterruptHandler *****************
  6587 ;; Defined at:
  6588 ;;		line 212 in file "mcc_generated_files/eusart.c"
  6589 ;; Parameters:    Size  Location     Type
  6590 ;;  handler         2    6[COMRAM] PTR void 
  6591 ;; Auto vars:     Size  Location     Type
  6592 ;;		None
  6593 ;; Return value:  Size  Location     Type
  6594 ;;                  1    wreg      void 
  6595 ;; Registers used:
  6596 ;;		wreg, status,2, status,0
  6597 ;; Tracked objects:
  6598 ;;		On entry : 0/0
  6599 ;;		On exit  : 0/0
  6600 ;;		Unchanged: 0/0
  6601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6602 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6605 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6606 ;;Total ram usage:        2 bytes
  6607 ;; Hardware stack levels used: 1
  6608 ;; Hardware stack levels required when called: 5
  6609 ;; This function calls:
  6610 ;;		Nothing
  6611 ;; This function is called by:
  6612 ;;		_EUSART_Initialize
  6613 ;; This function uses a non-reentrant model
  6614 ;;
  6615                           
  6616                           	psect	text34
  6617   001224                     __ptext34:
  6618                           	callstack 0
  6619   001224                     _EUSART_SetTxInterruptHandler:
  6620                           	callstack 23
  6621   001224                     
  6622                           ;mcc_generated_files/eusart.c: 213:     EUSART_TxDefaultInterruptHandler = handler;
  6623   001224  C007  F0FB         	movff	EUSART_SetTxInterruptHandler@handler,_EUSART_TxDefaultInterruptHandler
  6624   001228  C008  F0FC         	movff	EUSART_SetTxInterruptHandler@handler+1,_EUSART_TxDefaultInterruptHandler+1
  6625   00122C  0012               	return		;funcret
  6626   00122E                     __end_of_EUSART_SetTxInterruptHandler:
  6627                           	callstack 0
  6628                           
  6629 ;; *************** function _EUSART_SetRxInterruptHandler *****************
  6630 ;; Defined at:
  6631 ;;		line 216 in file "mcc_generated_files/eusart.c"
  6632 ;; Parameters:    Size  Location     Type
  6633 ;;  handler         2    6[COMRAM] PTR void 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;		None
  6636 ;; Return value:  Size  Location     Type
  6637 ;;                  1    wreg      void 
  6638 ;; Registers used:
  6639 ;;		wreg, status,2, status,0
  6640 ;; Tracked objects:
  6641 ;;		On entry : 0/0
  6642 ;;		On exit  : 0/0
  6643 ;;		Unchanged: 0/0
  6644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6645 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6648 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6649 ;;Total ram usage:        2 bytes
  6650 ;; Hardware stack levels used: 1
  6651 ;; Hardware stack levels required when called: 5
  6652 ;; This function calls:
  6653 ;;		Nothing
  6654 ;; This function is called by:
  6655 ;;		_EUSART_Initialize
  6656 ;; This function uses a non-reentrant model
  6657 ;;
  6658                           
  6659                           	psect	text35
  6660   00122E                     __ptext35:
  6661                           	callstack 0
  6662   00122E                     _EUSART_SetRxInterruptHandler:
  6663                           	callstack 23
  6664   00122E                     
  6665                           ;mcc_generated_files/eusart.c: 217:     EUSART_RxDefaultInterruptHandler = handler;
  6666   00122E  C007  F0F9         	movff	EUSART_SetRxInterruptHandler@handler,_EUSART_RxDefaultInterruptHandler
  6667   001232  C008  F0FA         	movff	EUSART_SetRxInterruptHandler@handler+1,_EUSART_RxDefaultInterruptHandler+1
  6668   001236  0012               	return		;funcret
  6669   001238                     __end_of_EUSART_SetRxInterruptHandler:
  6670                           	callstack 0
  6671                           
  6672 ;; *************** function _INTERRUPT_InterruptManager *****************
  6673 ;; Defined at:
  6674 ;;		line 58 in file "mcc_generated_files/interrupt_manager.c"
  6675 ;; Parameters:    Size  Location     Type
  6676 ;;		None
  6677 ;; Auto vars:     Size  Location     Type
  6678 ;;		None
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  1    wreg      void 
  6681 ;; Registers used:
  6682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6688 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6692 ;;Total ram usage:        4 bytes
  6693 ;; Hardware stack levels used: 1
  6694 ;; Hardware stack levels required when called: 4
  6695 ;; This function calls:
  6696 ;;		_TMR1_ISR
  6697 ;;		_btGetData
  6698 ;; This function is called by:
  6699 ;;		Interrupt level 2
  6700 ;; This function uses a non-reentrant model
  6701 ;;
  6702                           
  6703                           	psect	intcode
  6704   000008                     __pintcode:
  6705                           	callstack 0
  6706   000008                     _INTERRUPT_InterruptManager:
  6707                           	callstack 20
  6708                           
  6709                           ;incstack = 0
  6710   000008  8259               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  6711   00000A  CFFA F003          	movff	pclath,??_INTERRUPT_InterruptManager
  6712   00000E  CFFB F004          	movff	pclatu,??_INTERRUPT_InterruptManager+1
  6713   000012  CFD9 F005          	movff	fsr2l,??_INTERRUPT_InterruptManager+2
  6714   000016  CFDA F006          	movff	fsr2h,??_INTERRUPT_InterruptManager+3
  6715   00001A                     
  6716                           ;mcc_generated_files/interrupt_manager.c: 61:     if(INTCONbits.PEIE == 1)
  6717   00001A  ACF2               	btfss	242,6,c	;volatile
  6718   00001C  EF12  F000         	goto	i2u233_41
  6719   000020  EF14  F000         	goto	i2u233_40
  6720   000024                     i2u233_41:
  6721   000024  EF4B  F000         	goto	i2l288
  6722   000028                     i2u233_40:
  6723   000028                     
  6724                           ;mcc_generated_files/interrupt_manager.c: 62:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 63:         if(PIE1bits.TMR1IE == 1 && PIR1bits.TMR1IF == 1)
  6725   000028  A09D               	btfss	157,0,c	;volatile
  6726   00002A  EF19  F000         	goto	i2u234_41
  6727   00002E  EF1B  F000         	goto	i2u234_40
  6728   000032                     i2u234_41:
  6729   000032  EF26  F000         	goto	i2l282
  6730   000036                     i2u234_40:
  6731   000036  A09E               	btfss	158,0,c	;volatile
  6732   000038  EF20  F000         	goto	i2u235_41
  6733   00003C  EF22  F000         	goto	i2u235_40
  6734   000040                     i2u235_41:
  6735   000040  EF26  F000         	goto	i2l282
  6736   000044                     i2u235_40:
  6737   000044                     
  6738                           ;mcc_generated_files/interrupt_manager.c: 64:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 65:             TMR1_ISR();
  6739   000044  ECE8  F008         	call	_TMR1_ISR	;wreg free
  6740                           
  6741                           ;mcc_generated_files/interrupt_manager.c: 66:         }
  6742   000048  EF4B  F000         	goto	i2l288
  6743   00004C                     i2l282:
  6744   00004C  A89D               	btfss	157,4,c	;volatile
  6745   00004E  EF2B  F000         	goto	i2u236_41
  6746   000052  EF2D  F000         	goto	i2u236_40
  6747   000056                     i2u236_41:
  6748   000056  EF37  F000         	goto	i2l284
  6749   00005A                     i2u236_40:
  6750   00005A                     
  6751                           ;mcc_generated_files/interrupt_manager.c: 69:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 71:             EUSART_TxDefaultInterruptHandler();
  6752   00005A  A89E               	btfss	158,4,c	;volatile
  6753   00005C  EF32  F000         	goto	i2u237_41
  6754   000060  EF34  F000         	goto	i2u237_40
  6755   000064                     i2u237_41:
  6756   000064  EF37  F000         	goto	i2l284
  6757   000068                     i2u237_40:
  6758   000068                     
  6759                           ;mcc_generated_files/interrupt_manager.c: 74:             PIR1bits.TX1IF = 0;
  6760   000068  989E               	bcf	158,4,c	;volatile
  6761                           
  6762                           ;mcc_generated_files/interrupt_manager.c: 75:         }
  6763   00006A  EF4B  F000         	goto	i2l288
  6764   00006E                     i2l284:
  6765   00006E  AA9D               	btfss	157,5,c	;volatile
  6766   000070  EF3C  F000         	goto	i2u238_41
  6767   000074  EF3E  F000         	goto	i2u238_40
  6768   000078                     i2u238_41:
  6769   000078  EF4B  F000         	goto	i2l283
  6770   00007C                     i2u238_40:
  6771   00007C  AA9E               	btfss	158,5,c	;volatile
  6772   00007E  EF43  F000         	goto	i2u239_41
  6773   000082  EF45  F000         	goto	i2u239_40
  6774   000086                     i2u239_41:
  6775   000086  EF4B  F000         	goto	i2l283
  6776   00008A                     i2u239_40:
  6777   00008A                     
  6778                           ;mcc_generated_files/interrupt_manager.c: 79:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 81:             btGetData(RCREG);
  6779   00008A  50AE               	movf	174,w,c	;volatile
  6780   00008C  EC52  F006         	call	_btGetData
  6781   000090                     
  6782                           ;mcc_generated_files/interrupt_manager.c: 84:             PIR1bits.RC1IF = 0;
  6783   000090  9A9E               	bcf	158,5,c	;volatile
  6784   000092  EF4B  F000         	goto	i2l288
  6785   000096                     i2l283:
  6786   000096                     i2l288:
  6787   000096  C006  FFDA         	movff	??_INTERRUPT_InterruptManager+3,fsr2h
  6788   00009A  C005  FFD9         	movff	??_INTERRUPT_InterruptManager+2,fsr2l
  6789   00009E  C004  FFFB         	movff	??_INTERRUPT_InterruptManager+1,pclatu
  6790   0000A2  C003  FFFA         	movff	??_INTERRUPT_InterruptManager,pclath
  6791   0000A6  9259               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  6792   0000A8  0011               	retfie		f
  6793   0000AA                     __end_of_INTERRUPT_InterruptManager:
  6794                           	callstack 0
  6795                           
  6796 ;; *************** function _btGetData *****************
  6797 ;; Defined at:
  6798 ;;		line 370 in file "main.c"
  6799 ;; Parameters:    Size  Location     Type
  6800 ;;  rcv             1    wreg     unsigned char 
  6801 ;; Auto vars:     Size  Location     Type
  6802 ;;  rcv             1    0[COMRAM] unsigned char 
  6803 ;; Return value:  Size  Location     Type
  6804 ;;                  1    wreg      void 
  6805 ;; Registers used:
  6806 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6807 ;; Tracked objects:
  6808 ;;		On entry : 0/0
  6809 ;;		On exit  : 0/0
  6810 ;;		Unchanged: 0/0
  6811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6812 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6813 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6814 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6815 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6816 ;;Total ram usage:        1 bytes
  6817 ;; Hardware stack levels used: 1
  6818 ;; This function calls:
  6819 ;;		Nothing
  6820 ;; This function is called by:
  6821 ;;		_INTERRUPT_InterruptManager
  6822 ;; This function uses a non-reentrant model
  6823 ;;
  6824                           
  6825                           	psect	text37
  6826   000CA4                     __ptext37:
  6827                           	callstack 0
  6828   000CA4                     _btGetData:
  6829                           	callstack 23
  6830                           
  6831                           ;incstack = 0
  6832                           ;btGetData@rcv stored from wreg
  6833   000CA4  6E01               	movwf	btGetData@rcv^0,c
  6834   000CA6                     
  6835                           ;main.c: 371:     if(rcv == 'H' && uartBufferIndex == 0) {
  6836   000CA6  0E48               	movlw	72
  6837   000CA8  1801               	xorwf	btGetData@rcv^0,w,c
  6838   000CAA  A4D8               	btfss	status,2,c
  6839   000CAC  EF5A  F006         	goto	i2u184_41
  6840   000CB0  EF5C  F006         	goto	i2u184_40
  6841   000CB4                     i2u184_41:
  6842   000CB4  EF6D  F006         	goto	i2l2880
  6843   000CB8                     i2u184_40:
  6844   000CB8  5053               	movf	_uartBufferIndex^0,w,c
  6845   000CBA  A4D8               	btfss	status,2,c
  6846   000CBC  EF62  F006         	goto	i2u185_41
  6847   000CC0  EF64  F006         	goto	i2u185_40
  6848   000CC4                     i2u185_41:
  6849   000CC4  EF6D  F006         	goto	i2l2880
  6850   000CC8                     i2u185_40:
  6851   000CC8                     
  6852                           ;main.c: 372:         uartBuffer[uartBufferIndex] = 'H';
  6853   000CC8  5053               	movf	_uartBufferIndex^0,w,c
  6854   000CCA  0F80               	addlw	low _uartBuffer
  6855   000CCC  6ED9               	movwf	fsr2l,c
  6856   000CCE  6ADA               	clrf	fsr2h,c
  6857   000CD0  0E48               	movlw	72
  6858   000CD2  6EDF               	movwf	indf2,c
  6859   000CD4                     i2l2878:
  6860                           
  6861                           ;main.c: 373:         uartBufferIndex++;
  6862   000CD4  2A53               	incf	_uartBufferIndex^0,f,c
  6863                           
  6864                           ;main.c: 374:     }
  6865   000CD6  EFA0  F006         	goto	i2l530
  6866   000CDA                     i2l2880:
  6867   000CDA  5053               	movf	_uartBufferIndex^0,w,c
  6868   000CDC  B4D8               	btfsc	status,2,c
  6869   000CDE  EF73  F006         	goto	i2u186_41
  6870   000CE2  EF75  F006         	goto	i2u186_40
  6871   000CE6                     i2u186_41:
  6872   000CE6  EF85  F006         	goto	i2l2888
  6873   000CEA                     i2u186_40:
  6874   000CEA  0E07               	movlw	7
  6875   000CEC  6053               	cpfslt	_uartBufferIndex^0,c
  6876   000CEE  EF7B  F006         	goto	i2u187_41
  6877   000CF2  EF7D  F006         	goto	i2u187_40
  6878   000CF6                     i2u187_41:
  6879   000CF6  EF85  F006         	goto	i2l2888
  6880   000CFA                     i2u187_40:
  6881   000CFA                     
  6882                           ;main.c: 376:         uartBuffer[uartBufferIndex++] = rcv;
  6883   000CFA  5053               	movf	_uartBufferIndex^0,w,c
  6884   000CFC  0F80               	addlw	low _uartBuffer
  6885   000CFE  6ED9               	movwf	fsr2l,c
  6886   000D00  6ADA               	clrf	fsr2h,c
  6887   000D02  C001  FFDF         	movff	btGetData@rcv,indf2
  6888   000D06  EF6A  F006         	goto	i2l2878
  6889   000D0A                     i2l2888:
  6890   000D0A  0E07               	movlw	7
  6891   000D0C  1853               	xorwf	_uartBufferIndex^0,w,c
  6892   000D0E  A4D8               	btfss	status,2,c
  6893   000D10  EF8C  F006         	goto	i2u188_41
  6894   000D14  EF8E  F006         	goto	i2u188_40
  6895   000D18                     i2u188_41:
  6896   000D18  EFA0  F006         	goto	i2l530
  6897   000D1C                     i2u188_40:
  6898   000D1C                     
  6899                           ;main.c: 379:         if(rcv == ';') {
  6900   000D1C  0E3B               	movlw	59
  6901   000D1E  1801               	xorwf	btGetData@rcv^0,w,c
  6902   000D20  A4D8               	btfss	status,2,c
  6903   000D22  EF95  F006         	goto	i2u189_41
  6904   000D26  EF97  F006         	goto	i2u189_40
  6905   000D2A                     i2u189_41:
  6906   000D2A  EFA0  F006         	goto	i2l527
  6907   000D2E                     i2u189_40:
  6908   000D2E                     
  6909                           ;main.c: 380:             uartBuffer[6] = ';';
  6910   000D2E  0E3B               	movlw	59
  6911   000D30  0100               	movlb	0	; () banked
  6912   000D32  6F86               	movwf	(_uartBuffer+6)& (0+255),b
  6913                           
  6914                           ;main.c: 381:             uartBufferIndex = 0;
  6915   000D34  0E00               	movlw	0
  6916   000D36  6E53               	movwf	_uartBufferIndex^0,c
  6917                           
  6918                           ;main.c: 382:             btTimeSet = 1;
  6919   000D38  0E01               	movlw	1
  6920   000D3A  6FA4               	movwf	_btTimeSet& (0+255),b
  6921   000D3C  EFA0  F006         	goto	i2l530
  6922   000D40                     i2l527:
  6923   000D40                     i2l530:
  6924   000D40  0012               	return		;funcret
  6925   000D42                     __end_of_btGetData:
  6926                           	callstack 0
  6927                           
  6928 ;; *************** function _TMR1_ISR *****************
  6929 ;; Defined at:
  6930 ;;		line 146 in file "mcc_generated_files/tmr1.c"
  6931 ;; Parameters:    Size  Location     Type
  6932 ;;		None
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;		None
  6935 ;; Return value:  Size  Location     Type
  6936 ;;                  1    wreg      void 
  6937 ;; Registers used:
  6938 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  6939 ;; Tracked objects:
  6940 ;;		On entry : 0/0
  6941 ;;		On exit  : 0/0
  6942 ;;		Unchanged: 0/0
  6943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6944 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6945 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6946 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6947 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6948 ;;Total ram usage:        0 bytes
  6949 ;; Hardware stack levels used: 1
  6950 ;; Hardware stack levels required when called: 3
  6951 ;; This function calls:
  6952 ;;		_TMR1_CallBack
  6953 ;;		_TMR1_WriteTimer
  6954 ;; This function is called by:
  6955 ;;		_INTERRUPT_InterruptManager
  6956 ;; This function uses a non-reentrant model
  6957 ;;
  6958                           
  6959                           	psect	text38
  6960   0011D0                     __ptext38:
  6961                           	callstack 0
  6962   0011D0                     _TMR1_ISR:
  6963                           	callstack 20
  6964   0011D0                     
  6965                           ;mcc_generated_files/tmr1.c: 150:     PIR1bits.TMR1IF = 0;
  6966   0011D0  909E               	bcf	158,0,c	;volatile
  6967   0011D2                     
  6968                           ;mcc_generated_files/tmr1.c: 151:     TMR1_WriteTimer(timer1ReloadVal);
  6969   0011D2  C0A0  F001         	movff	_timer1ReloadVal,TMR1_WriteTimer@timerVal	;volatile
  6970   0011D6  C0A1  F002         	movff	_timer1ReloadVal+1,TMR1_WriteTimer@timerVal+1	;volatile
  6971   0011DA  EC83  F008         	call	_TMR1_WriteTimer	;wreg free
  6972   0011DE                     
  6973                           ;mcc_generated_files/tmr1.c: 155:     TMR1_CallBack();
  6974   0011DE  EC57  F008         	call	_TMR1_CallBack	;wreg free
  6975   0011E2  0012               	return		;funcret
  6976   0011E4                     __end_of_TMR1_ISR:
  6977                           	callstack 0
  6978                           
  6979 ;; *************** function _TMR1_WriteTimer *****************
  6980 ;; Defined at:
  6981 ;;		line 119 in file "mcc_generated_files/tmr1.c"
  6982 ;; Parameters:    Size  Location     Type
  6983 ;;  timerVal        2    0[COMRAM] unsigned short 
  6984 ;; Auto vars:     Size  Location     Type
  6985 ;;		None
  6986 ;; Return value:  Size  Location     Type
  6987 ;;                  1    wreg      void 
  6988 ;; Registers used:
  6989 ;;		wreg, status,2
  6990 ;; Tracked objects:
  6991 ;;		On entry : 0/0
  6992 ;;		On exit  : 0/0
  6993 ;;		Unchanged: 0/0
  6994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6995 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6998 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6999 ;;Total ram usage:        2 bytes
  7000 ;; Hardware stack levels used: 1
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_TMR1_ISR
  7005 ;;		_TMR1_Reload
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text39
  7010   001106                     __ptext39:
  7011                           	callstack 0
  7012   001106                     _TMR1_WriteTimer:
  7013                           	callstack 22
  7014   001106                     
  7015                           ;mcc_generated_files/tmr1.c: 119: void TMR1_WriteTimer(uint16_t timerVal);mcc_generated_
      +                          files/tmr1.c: 120: {;mcc_generated_files/tmr1.c: 121:     if (T1CONbits.nT1SYNC == 1)
  7016   001106  A4CD               	btfss	205,2,c	;volatile
  7017   001108  EF88  F008         	goto	i2u172_41
  7018   00110C  EF8A  F008         	goto	i2u172_40
  7019   001110                     i2u172_41:
  7020   001110  EF92  F008         	goto	i2l2732
  7021   001114                     i2u172_40:
  7022   001114                     
  7023                           ;mcc_generated_files/tmr1.c: 122:     {;mcc_generated_files/tmr1.c: 124:         T1CONbi
      +                          ts.TMR1ON = 0;
  7024   001114  90CD               	bcf	205,0,c	;volatile
  7025   001116                     
  7026                           ;mcc_generated_files/tmr1.c: 127:         TMR1H = (uint8_t)(timerVal >> 8);
  7027   001116  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7028   001118  6ECF               	movwf	207,c	;volatile
  7029   00111A                     
  7030                           ;mcc_generated_files/tmr1.c: 128:         TMR1L = (uint8_t)timerVal;
  7031   00111A  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7032   00111E                     
  7033                           ;mcc_generated_files/tmr1.c: 131:         T1CONbits.TMR1ON =1;
  7034   00111E  80CD               	bsf	205,0,c	;volatile
  7035                           
  7036                           ;mcc_generated_files/tmr1.c: 132:     }
  7037   001120  EF96  F008         	goto	i2l335
  7038   001124                     i2l2732:
  7039                           
  7040                           ;mcc_generated_files/tmr1.c: 134:     {;mcc_generated_files/tmr1.c: 136:         TMR1H =
      +                           (uint8_t)(timerVal >> 8);
  7041   001124  5002               	movf	(TMR1_WriteTimer@timerVal+1)^0,w,c
  7042   001126  6ECF               	movwf	207,c	;volatile
  7043   001128                     
  7044                           ;mcc_generated_files/tmr1.c: 137:         TMR1L = (uint8_t)timerVal;
  7045   001128  C001  FFCE         	movff	TMR1_WriteTimer@timerVal,4046	;volatile
  7046   00112C                     i2l335:
  7047   00112C  0012               	return		;funcret
  7048   00112E                     __end_of_TMR1_WriteTimer:
  7049                           	callstack 0
  7050                           
  7051 ;; *************** function _TMR1_CallBack *****************
  7052 ;; Defined at:
  7053 ;;		line 158 in file "mcc_generated_files/tmr1.c"
  7054 ;; Parameters:    Size  Location     Type
  7055 ;;		None
  7056 ;; Auto vars:     Size  Location     Type
  7057 ;;		None
  7058 ;; Return value:  Size  Location     Type
  7059 ;;                  1    wreg      void 
  7060 ;; Registers used:
  7061 ;;		wreg, status,2, status,0, pcl, pclath, pclatu, tosl, cstack
  7062 ;; Tracked objects:
  7063 ;;		On entry : 0/0
  7064 ;;		On exit  : 0/0
  7065 ;;		Unchanged: 0/0
  7066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7071 ;;Total ram usage:        0 bytes
  7072 ;; Hardware stack levels used: 1
  7073 ;; Hardware stack levels required when called: 2
  7074 ;; This function calls:
  7075 ;;		NULL
  7076 ;;		_TMR1_DefaultInterruptHandler
  7077 ;; This function is called by:
  7078 ;;		_TMR1_ISR
  7079 ;; This function uses a non-reentrant model
  7080 ;;
  7081                           
  7082                           	psect	text40
  7083   0010AE                     __ptext40:
  7084                           	callstack 0
  7085   0010AE                     _TMR1_CallBack:
  7086                           	callstack 20
  7087   0010AE                     
  7088                           ;mcc_generated_files/tmr1.c: 162:     if(TMR1_InterruptHandler)
  7089   0010AE  0100               	movlb	0	; () banked
  7090   0010B0  51F7               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7091   0010B2  11F8               	iorwf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7092   0010B4  B4D8               	btfsc	status,2,c
  7093   0010B6  EF5F  F008         	goto	i2u173_41
  7094   0010BA  EF61  F008         	goto	i2u173_40
  7095   0010BE                     i2u173_41:
  7096   0010BE  EF6D  F008         	goto	i2l345
  7097   0010C2                     i2u173_40:
  7098   0010C2                     
  7099                           ; BSR set to: 0
  7100                           ;mcc_generated_files/tmr1.c: 163:     {;mcc_generated_files/tmr1.c: 164:         TMR1_In
      +                          terruptHandler();
  7101   0010C2  D802               	call	i2u174_48
  7102   0010C4  EF6D  F008         	goto	i2u174_49
  7103   0010C8                     i2u174_48:
  7104   0010C8  0005               	push	
  7105   0010CA  6EFA               	movwf	pclath,c
  7106   0010CC  51F7               	movf	_TMR1_InterruptHandler& (0+255),w,b
  7107   0010CE  6EFD               	movwf	tosl,c
  7108   0010D0  51F8               	movf	(_TMR1_InterruptHandler+1)& (0+255),w,b
  7109   0010D2  6EFE               	movwf	tosh,c
  7110   0010D4  6AFF               	clrf	tosu,c
  7111   0010D6  50FA               	movf	pclath,w,c
  7112   0010D8  0012               	return		;indir
  7113   0010DA                     i2u174_49:
  7114   0010DA                     i2l345:
  7115   0010DA  0012               	return		;funcret
  7116   0010DC                     __end_of_TMR1_CallBack:
  7117                           	callstack 0
  7118                           
  7119 ;; *************** function _TMR1_DefaultInterruptHandler *****************
  7120 ;; Defined at:
  7121 ;;		line 172 in file "mcc_generated_files/tmr1.c"
  7122 ;; Parameters:    Size  Location     Type
  7123 ;;		None
  7124 ;; Auto vars:     Size  Location     Type
  7125 ;;		None
  7126 ;; Return value:  Size  Location     Type
  7127 ;;                  1    wreg      void 
  7128 ;; Registers used:
  7129 ;;		wreg, status,2, status,0, cstack
  7130 ;; Tracked objects:
  7131 ;;		On entry : 0/0
  7132 ;;		On exit  : 0/0
  7133 ;;		Unchanged: 0/0
  7134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7137 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7138 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7139 ;;Total ram usage:        0 bytes
  7140 ;; Hardware stack levels used: 1
  7141 ;; Hardware stack levels required when called: 1
  7142 ;; This function calls:
  7143 ;;		_calculateTime
  7144 ;; This function is called by:
  7145 ;;		_TMR1_Initialize
  7146 ;;		_TMR1_CallBack
  7147 ;; This function uses a non-reentrant model
  7148 ;;
  7149                           
  7150                           	psect	text41
  7151   001238                     __ptext41:
  7152                           	callstack 0
  7153   001238                     _TMR1_DefaultInterruptHandler:
  7154                           	callstack 20
  7155   001238                     
  7156                           ;mcc_generated_files/tmr1.c: 175:     calculateTime();
  7157   001238  ECCD  F007         	call	_calculateTime	;wreg free
  7158   00123C  0012               	return		;funcret
  7159   00123E                     __end_of_TMR1_DefaultInterruptHandler:
  7160                           	callstack 0
  7161                           
  7162 ;; *************** function _calculateTime *****************
  7163 ;; Defined at:
  7164 ;;		line 130 in file "main.c"
  7165 ;; Parameters:    Size  Location     Type
  7166 ;;		None
  7167 ;; Auto vars:     Size  Location     Type
  7168 ;;		None
  7169 ;; Return value:  Size  Location     Type
  7170 ;;                  1    wreg      void 
  7171 ;; Registers used:
  7172 ;;		wreg, status,2, status,0
  7173 ;; Tracked objects:
  7174 ;;		On entry : 0/0
  7175 ;;		On exit  : 0/0
  7176 ;;		Unchanged: 0/0
  7177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7178 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7181 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7182 ;;Total ram usage:        0 bytes
  7183 ;; Hardware stack levels used: 1
  7184 ;; This function calls:
  7185 ;;		Nothing
  7186 ;; This function is called by:
  7187 ;;		_TMR1_DefaultInterruptHandler
  7188 ;; This function uses a non-reentrant model
  7189 ;;
  7190                           
  7191                           	psect	text42
  7192   000F9A                     __ptext42:
  7193                           	callstack 0
  7194   000F9A                     _calculateTime:
  7195                           	callstack 20
  7196   000F9A                     
  7197                           ;main.c: 132:     if (++seconds >= 60) {
  7198   000F9A  0100               	movlb	0	; () banked
  7199   000F9C  2BAC               	incf	_seconds& (0+255),f,b
  7200   000F9E  0E3B               	movlw	59
  7201   000FA0  65AC               	cpfsgt	_seconds& (0+255),b
  7202   000FA2  EFD5  F007         	goto	i2u135_41
  7203   000FA6  EFD7  F007         	goto	i2u135_40
  7204   000FAA                     i2u135_41:
  7205   000FAA  EFEF  F007         	goto	i2l459
  7206   000FAE                     i2u135_40:
  7207   000FAE                     
  7208                           ; BSR set to: 0
  7209                           ;main.c: 133:         seconds = 0;
  7210   000FAE  0E00               	movlw	0
  7211   000FB0  6FAC               	movwf	_seconds& (0+255),b
  7212   000FB2                     
  7213                           ; BSR set to: 0
  7214                           ;main.c: 135:         if (++minutes >= 60) {
  7215   000FB2  2BAD               	incf	_minutes& (0+255),f,b
  7216   000FB4  0E3B               	movlw	59
  7217   000FB6  65AD               	cpfsgt	_minutes& (0+255),b
  7218   000FB8  EFE0  F007         	goto	i2u136_41
  7219   000FBC  EFE2  F007         	goto	i2u136_40
  7220   000FC0                     i2u136_41:
  7221   000FC0  EFEF  F007         	goto	i2l459
  7222   000FC4                     i2u136_40:
  7223   000FC4                     
  7224                           ; BSR set to: 0
  7225                           ;main.c: 136:             minutes = 0;
  7226   000FC4  0E00               	movlw	0
  7227   000FC6  6FAD               	movwf	_minutes& (0+255),b
  7228   000FC8                     
  7229                           ; BSR set to: 0
  7230                           ;main.c: 138:             if (++hours >= 24) {
  7231   000FC8  2BAE               	incf	_hours& (0+255),f,b
  7232   000FCA  0E17               	movlw	23
  7233   000FCC  65AE               	cpfsgt	_hours& (0+255),b
  7234   000FCE  EFEB  F007         	goto	i2u137_41
  7235   000FD2  EFED  F007         	goto	i2u137_40
  7236   000FD6                     i2u137_41:
  7237   000FD6  EFEF  F007         	goto	i2l459
  7238   000FDA                     i2u137_40:
  7239   000FDA                     
  7240                           ; BSR set to: 0
  7241                           ;main.c: 139:                 hours = 0;
  7242   000FDA  0E00               	movlw	0
  7243   000FDC  6FAE               	movwf	_hours& (0+255),b
  7244   000FDE                     i2l459:
  7245                           
  7246                           ; BSR set to: 0
  7247   000FDE  0012               	return		;funcret
  7248   000FE0                     __end_of_calculateTime:
  7249                           	callstack 0
  7250                           
  7251                           	psect	rparam
  7252   000000                     
  7253                           	psect	temp
  7254   000059                     btemp:
  7255                           	callstack 0
  7256   000059                     	ds	1
  7257   000000                     int$flags	set	btemp
  7258   000000                     wtemp8	set	btemp+1
  7259   000000                     ttemp5	set	btemp+1
  7260   000000                     ttemp6	set	btemp+4
  7261   000000                     ttemp7	set	btemp+8
  7262                           
  7263                           	psect	idloc
  7264                           
  7265                           ;Config register IDLOC0 @ 0x200000
  7266                           ;	unspecified, using default values
  7267   200000                     	org	2097152
  7268   200000  FF                 	db	255
  7269                           
  7270                           ;Config register IDLOC1 @ 0x200001
  7271                           ;	unspecified, using default values
  7272   200001                     	org	2097153
  7273   200001  FF                 	db	255
  7274                           
  7275                           ;Config register IDLOC2 @ 0x200002
  7276                           ;	unspecified, using default values
  7277   200002                     	org	2097154
  7278   200002  FF                 	db	255
  7279                           
  7280                           ;Config register IDLOC3 @ 0x200003
  7281                           ;	unspecified, using default values
  7282   200003                     	org	2097155
  7283   200003  FF                 	db	255
  7284                           
  7285                           ;Config register IDLOC4 @ 0x200004
  7286                           ;	unspecified, using default values
  7287   200004                     	org	2097156
  7288   200004  FF                 	db	255
  7289                           
  7290                           ;Config register IDLOC5 @ 0x200005
  7291                           ;	unspecified, using default values
  7292   200005                     	org	2097157
  7293   200005  FF                 	db	255
  7294                           
  7295                           ;Config register IDLOC6 @ 0x200006
  7296                           ;	unspecified, using default values
  7297   200006                     	org	2097158
  7298   200006  FF                 	db	255
  7299                           
  7300                           ;Config register IDLOC7 @ 0x200007
  7301                           ;	unspecified, using default values
  7302   200007                     	org	2097159
  7303   200007  FF                 	db	255
  7304                           
  7305                           	psect	config
  7306                           
  7307                           ; Padding undefined space
  7308   300000                     	org	3145728
  7309   300000  FF                 	db	255
  7310                           
  7311                           ;Config register CONFIG1H @ 0x300001
  7312                           ;	Oscillator Selection bits
  7313                           ;	FOSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  7314                           ;	Fail-Safe Clock Monitor Enable bit
  7315                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  7316                           ;	Internal/External Oscillator Switchover bit
  7317                           ;	IESO = OFF, Oscillator Switchover mode disabled
  7318   300001                     	org	3145729
  7319   300001  08                 	db	8
  7320                           
  7321                           ;Config register CONFIG2L @ 0x300002
  7322                           ;	Power-up Timer Enable bit
  7323                           ;	PWRTEN = OFF, PWRT disabled
  7324                           ;	Brown-out Reset Enable bits
  7325                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
  7326                           ;	Brown Out Reset Voltage bits
  7327                           ;	BORV = 18, VBOR set to 1.8 V nominal
  7328   300002                     	org	3145730
  7329   300002  1F                 	db	31
  7330                           
  7331                           ;Config register CONFIG2H @ 0x300003
  7332                           ;	Watchdog Timer Enable bit
  7333                           ;	WDTEN = OFF, WDT is controlled by SWDTEN bit of the WDTCON register
  7334                           ;	Watchdog Timer Postscale Select bits
  7335                           ;	WDTPS = 32768, 1:32768
  7336   300003                     	org	3145731
  7337   300003  1E                 	db	30
  7338                           
  7339                           ; Padding undefined space
  7340   300004                     	org	3145732
  7341   300004  FF                 	db	255
  7342                           
  7343                           ;Config register CONFIG3H @ 0x300005
  7344                           ;	CCP2 MUX bit
  7345                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  7346                           ;	PORTB A/D Enable bit
  7347                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  7348                           ;	Low-Power Timer1 Oscillator Enable bit
  7349                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  7350                           ;	HFINTOSC Fast Start-up
  7351                           ;	HFOFST = ON, HFINTOSC starts clocking the CPU without waiting for the oscillator to st
      +                          ablize.
  7352                           ;	MCLR Pin Enable bit
  7353                           ;	MCLRE = OFF, RE3 input pin enabled; MCLR disabled
  7354   300005                     	org	3145733
  7355   300005  09                 	db	9
  7356                           
  7357                           ;Config register CONFIG4L @ 0x300006
  7358                           ;	Stack Full/Underflow Reset Enable bit
  7359                           ;	STVREN = ON, Stack full/underflow will cause Reset
  7360                           ;	Single-Supply ICSP Enable bit
  7361                           ;	LVP = OFF, Single-Supply ICSP disabled
  7362                           ;	Extended Instruction Set Enable bit
  7363                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  7364                           ;	Background Debugger Enable bit
  7365                           ;	DEBUG = OFF, Background debugger disabled, RB6 and RB7 configured as general purpose I
      +                          /O pins
  7366   300006                     	org	3145734
  7367   300006  81                 	db	129
  7368                           
  7369                           ; Padding undefined space
  7370   300007                     	org	3145735
  7371   300007  FF                 	db	255
  7372                           
  7373                           ;Config register CONFIG5L @ 0x300008
  7374                           ;	Code Protection Block 0
  7375                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  7376                           ;	Code Protection Block 1
  7377                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  7378                           ;	Code Protection Block 2
  7379                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  7380                           ;	Code Protection Block 3
  7381                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  7382   300008                     	org	3145736
  7383   300008  0F                 	db	15
  7384                           
  7385                           ;Config register CONFIG5H @ 0x300009
  7386                           ;	Boot Block Code Protection bit
  7387                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  7388                           ;	Data EEPROM Code Protection bit
  7389                           ;	CPD = OFF, Data EEPROM not code-protected
  7390   300009                     	org	3145737
  7391   300009  C0                 	db	192
  7392                           
  7393                           ;Config register CONFIG6L @ 0x30000A
  7394                           ;	Write Protection Block 0
  7395                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  7396                           ;	Write Protection Block 1
  7397                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  7398                           ;	Write Protection Block 2
  7399                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  7400                           ;	Write Protection Block 3
  7401                           ;	WRT3 = OFF, Block 3 (00C000h-00FFFFh) not write-protected
  7402   30000A                     	org	3145738
  7403   30000A  0F                 	db	15
  7404                           
  7405                           ;Config register CONFIG6H @ 0x30000B
  7406                           ;	Configuration Register Write Protection bit
  7407                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  7408                           ;	Boot Block Write Protection bit
  7409                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  7410                           ;	Data EEPROM Write Protection bit
  7411                           ;	WRTD = OFF, Data EEPROM not write-protected
  7412   30000B                     	org	3145739
  7413   30000B  E0                 	db	224
  7414                           
  7415                           ;Config register CONFIG7L @ 0x30000C
  7416                           ;	Table Read Protection Block 0
  7417                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  7418                           ;	Table Read Protection Block 1
  7419                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  7420                           ;	Table Read Protection Block 2
  7421                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  7422                           ;	Table Read Protection Block 3
  7423                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  7424   30000C                     	org	3145740
  7425   30000C  0F                 	db	15
  7426                           
  7427                           ;Config register CONFIG7H @ 0x30000D
  7428                           ;	Boot Block Table Read Protection bit
  7429                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  7430   30000D                     	org	3145741
  7431   30000D  40                 	db	64
  7432                           tosu	equ	0xFFF
  7433                           tosh	equ	0xFFE
  7434                           tosl	equ	0xFFD
  7435                           stkptr	equ	0xFFC
  7436                           pclatu	equ	0xFFB
  7437                           pclath	equ	0xFFA
  7438                           pcl	equ	0xFF9
  7439                           tblptru	equ	0xFF8
  7440                           tblptrh	equ	0xFF7
  7441                           tblptrl	equ	0xFF6
  7442                           tablat	equ	0xFF5
  7443                           prodh	equ	0xFF4
  7444                           prodl	equ	0xFF3
  7445                           indf0	equ	0xFEF
  7446                           postinc0	equ	0xFEE
  7447                           postdec0	equ	0xFED
  7448                           preinc0	equ	0xFEC
  7449                           plusw0	equ	0xFEB
  7450                           fsr0h	equ	0xFEA
  7451                           fsr0l	equ	0xFE9
  7452                           wreg	equ	0xFE8
  7453                           indf1	equ	0xFE7
  7454                           postinc1	equ	0xFE6
  7455                           postdec1	equ	0xFE5
  7456                           preinc1	equ	0xFE4
  7457                           plusw1	equ	0xFE3
  7458                           fsr1h	equ	0xFE2
  7459                           fsr1l	equ	0xFE1
  7460                           bsr	equ	0xFE0
  7461                           indf2	equ	0xFDF
  7462                           postinc2	equ	0xFDE
  7463                           postdec2	equ	0xFDD
  7464                           preinc2	equ	0xFDC
  7465                           plusw2	equ	0xFDB
  7466                           fsr2h	equ	0xFDA
  7467                           fsr2l	equ	0xFD9
  7468                           status	equ	0xFD8

Data Sizes:
    Strings     6
    Constant    2048
    Data        0
    BSS         118
    Persistent  6
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     82      88
    BANK0           160     71     157
    BANK1           256      0      32
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          239      0       0
    BANK15           96      0       0

Pointer List with Targets:

    EUSART_RxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    EUSART_SetRxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_SetTxInterruptHandler@handler	PTR void  size(2) Largest target is 0

    EUSART_TxDefaultInterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    FLASH_WriteBlock@flashWrBufPtr	PTR unsigned char  size(1) Largest target is 64
		 -> saveTimeToFlash@flashBuffer(BANK0[64]), 

    printString@str	PTR unsigned char  size(2) Largest target is 6
		 -> displayAlarmTime@displayString(BANK0[5]), displayTime@displayString(BANK0[5]), STR_1(CODE[6]), 

    TMR1_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), NULL(), 

    TMR1_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> TMR1_DefaultInterruptHandler(), 


Critical Paths under _main in COMRAM

    _main->_checkButtons
    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _generateBeep->___lwdiv
    ___lwdiv->___wmul
    _clearDisplay->_flushBuffer
    _matrixInit->_max7219_cmd
    _max7219_cmd->_SPI_Exchange8bit
    _loadTimeFromFlash->_FLASH_ReadByte
    _saveTimeToFlash->_FLASH_WriteBlock
    _FLASH_WriteBlock->_FLASH_EraseBlock
    _displayTime->_printString
    _displayAlarmTime->_printString
    _printString->_flushBuffer
    _flushBuffer->_max_write
    _max_write->___awdiv
    _TMR1_Initialize->_TMR1_SetInterruptHandler
    _EUSART_Initialize->_EUSART_SetRxInterruptHandler
    _EUSART_Initialize->_EUSART_SetTxInterruptHandler

Critical Paths under _INTERRUPT_InterruptManager in COMRAM

    _TMR1_ISR->_TMR1_WriteTimer

Critical Paths under _main in BANK0

    _main->_saveTimeToFlash
    _processAlarm->_triggerAlarm
    _triggerAlarm->_printString
    _checkButtons->_saveTimeToFlash
    _displayTime->_printString
    _displayAlarmTime->_printString

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   50344
                                             69 BANK0      2     2      0
                  _SYSTEM_Initialize
                    _TMR1_StartTimer
                       _checkButtons
                       _clearDisplay
                        _displayTime
                  _loadTimeFromFlash
                         _matrixInit
                       _processAlarm
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _processAlarm                                         0     0      0   10704
                       _triggerAlarm
 ---------------------------------------------------------------------------------
 (2) _triggerAlarm                                         6     6      0   10704
                                             80 COMRAM     2     2      0
                                             11 BANK0      4     4      0
                         _clearAlarm
                       _clearDisplay
                       _generateBeep
                        _printString
 ---------------------------------------------------------------------------------
 (3) _generateBeep                                         6     4      2    1273
                                             19 COMRAM     6     4      2
                            ___lwdiv
                             ___wmul
                  _delayMicroseconds
 ---------------------------------------------------------------------------------
 (4) _delayMicroseconds                                    4     2      2     248
                                              6 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     412
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     421
                                             12 COMRAM     7     3      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (3) _clearDisplay                                         2     2      0    4344
                                             70 COMRAM     2     2      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (3) _clearAlarm                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _matrixInit                                           0     0      0     676
                        _max7219_cmd
 ---------------------------------------------------------------------------------
 (2) _max7219_cmd                                          8     7      1     676
                                              7 COMRAM     8     7      1
                   _SPI_Exchange8bit
 ---------------------------------------------------------------------------------
 (1) _loadTimeFromFlash                                    4     4      0    1061
                     _FLASH_ReadByte
 ---------------------------------------------------------------------------------
 (1) _checkButtons                                         2     2      0   21871
                                             80 COMRAM     2     2      0
                            ___awmod
                   _displayAlarmTime
                        _displayTime
                    _saveTimeToFlash
 ---------------------------------------------------------------------------------
 (1) _saveTimeToFlash                                     69    69      0    2392
                                              0 BANK0     69    69      0
                     _FLASH_ReadByte
                   _FLASH_WriteBlock
 ---------------------------------------------------------------------------------
 (2) _FLASH_WriteBlock                                    14     9      5    1072
                                             11 COMRAM    14     9      5
                   _FLASH_EraseBlock
 ---------------------------------------------------------------------------------
 (3) _FLASH_EraseBlock                                     5     1      4     217
                                              6 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) _FLASH_ReadByte                                       4     0      4     903
                                              6 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _displayTime                                         12    12      0    8803
                                             11 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (2) _displayAlarmTime                                    12    12      0    8803
                                             11 BANK0     12    12      0
                            ___awdiv
                            ___awmod
                        _printString
 ---------------------------------------------------------------------------------
 (3) _printString                                         21    19      2    5016
                                             70 COMRAM    10     8      2
                                              0 BANK0     11    11      0
                        _flushBuffer
 ---------------------------------------------------------------------------------
 (4) _flushBuffer                                         43    43      0    4245
                                             27 COMRAM    43    43      0
                            ___awdiv
                          _max_write
 ---------------------------------------------------------------------------------
 (5) _max_write                                           13    10      3    2160
                                             14 COMRAM    13    10      3
                   _SPI_Exchange8bit
                            ___awdiv
 ---------------------------------------------------------------------------------
 (6) ___awdiv                                              8     4      4    1525
                                              6 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _SPI_Exchange8bit                                     1     1      0      31
                                              6 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4    1873
                                              6 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _TMR1_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0     363
                  _EUSART_Initialize
               _INTERRUPT_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                     _SPI_Initialize
                    _TMR1_Initialize
 ---------------------------------------------------------------------------------
 (2) _TMR1_Initialize                                      0     0      0     121
           _TMR1_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _TMR1_SetInterruptHandler                             2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _SPI_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _INTERRUPT_Initialize                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    0     0      0     242
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetTxInterruptHandler                         2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _EUSART_SetRxInterruptHandler                         2     0      2     121
                                              6 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _INTERRUPT_InterruptManager                           4     4      0     306
                                              2 COMRAM     4     4      0
                           _TMR1_ISR
                          _btGetData
 ---------------------------------------------------------------------------------
 (8) _btGetData                                            1     1      0      66
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) _TMR1_ISR                                             0     0      0     240
                      _TMR1_CallBack
                    _TMR1_WriteTimer
 ---------------------------------------------------------------------------------
 (9) _TMR1_WriteTimer                                      2     0      2     240
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (9) _TMR1_CallBack                                        0     0      0       0
                                NULL *
       _TMR1_DefaultInterruptHandler *
 ---------------------------------------------------------------------------------
 (10) _TMR1_DefaultInterruptHandler                        0     0      0       0
                      _calculateTime
 ---------------------------------------------------------------------------------
 (11) _calculateTime                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (10) NULL(Fake)                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
     _EUSART_Initialize
       _EUSART_SetRxInterruptHandler
       _EUSART_SetTxInterruptHandler
     _INTERRUPT_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _SPI_Initialize
     _TMR1_Initialize
       _TMR1_SetInterruptHandler
   _TMR1_StartTimer
   _checkButtons
     ___awmod
     _displayAlarmTime
       ___awdiv
       ___awmod
       _printString
         _flushBuffer
           ___awdiv
           _max_write
             _SPI_Exchange8bit
             ___awdiv
     _displayTime
       ___awdiv
       ___awmod
       _printString
     _saveTimeToFlash
       _FLASH_ReadByte
       _FLASH_WriteBlock
         _FLASH_EraseBlock
   _clearDisplay
     _flushBuffer
   _displayTime
   _loadTimeFromFlash
     _FLASH_ReadByte
   _matrixInit
     _max7219_cmd
       _SPI_Exchange8bit
   _processAlarm
     _triggerAlarm
       _clearAlarm
       _clearDisplay
       _generateBeep
         ___lwdiv
           ___wmul (ARG)
         ___wmul
         _delayMicroseconds
       _printString
   _saveTimeToFlash

 _INTERRUPT_InterruptManager (ROOT)
   _TMR1_ISR
     _TMR1_CallBack
       NULL(Fake) *
       _TMR1_DefaultInterruptHandler *
         _calculateTime
     _TMR1_WriteTimer
   _btGetData

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EEE      0       0      56        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      20       7       12.5%
BITBANK14           EF      0       0      32        0.0%
BANK14              EF      0       0      33        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     47      9D       5       98.1%
BITBANK15           60      0       0      34        0.0%
BANK15              60      0       0      35        0.0%
BIGRAM_1            60      0       0      55        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     52      58       1       93.6%
BITBIGSFRlll        1C      0       0      53        0.0%
BITBIGSFR_1lh        D      0       0      44        0.0%
BITBIGSFRlhh         7      0       0      50        0.0%
BITBIGSFR_1llhh      7      0       0      45        0.0%
BITBIGSFRhh          6      0       0      48        0.0%
BITBIGSFRhl          6      0       0      49        0.0%
BITBIGSFR_2          6      0       0      41        0.0%
BITBIGSFR_1llll      4      0       0      46        0.0%
BITBIGSFR_5hh        3      0       0      36        0.0%
BITBIGSFR_1hl        3      0       0      43        0.0%
BITBIGSFR_4          3      0       0      39        0.0%
BITBIGSFR_3          3      0       0      40        0.0%
BITBIGSFR_1hh        2      0       0      42        0.0%
BITBIGSFR_5hl        2      0       0      37        0.0%
BITBIGSFR_1llll      2      0       0      47        0.0%
BITBIGSFRllh         1      0       0      52        0.0%
BITBIGSFRlhl         1      0       0      51        0.0%
BITBIGSFR_5l         1      0       0      38        0.0%
BIGSFR_5             0      0       0     200        0.0%
BIGSFR_4             0      0       0     200        0.0%
BIGSFR_3             0      0       0     200        0.0%
BIGSFR_2             0      0       0     200        0.0%
BIGSFR_1             0      0       0     200        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115      54        0.0%
DATA                 0      0     115       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Thu Sep 12 01:01:27 2024

                    __end_of_checkButtons 0322             ?_EUSART_SetRxInterruptHandler 0007  
                          _SPI_Initialize 11F6                              ?_displayTime 0001  
                             _SSPSTATbits 0FC7                                        l20 11B2  
                                      l21 11B4                                        l15 1202  
                                      l18 11A4                                        l71 1222  
                                      l68 11CE                                        l94 119A  
                            ___awdiv@sign 000C                       ___wmul@multiplicand 0009  
                                     l221 11F4                                       l321 1178  
                                     l233 06CC                                       l243 107E  
                                     l148 0F98                                       l324 1240  
                                     l500 0216                                       l237 069A  
                                     l501 020A                                       l190 1236  
                                     l238 0684                                       l239 0688  
                                     l503 021A                                       l511 0320  
                                     l431 078C                                       l440 10E8  
                                     l521 0A8A                                       l442 1104  
                                     l187 122C                                       l515 0D92  
                                     l276 1244                                       l348 1218  
                                     l516 0DBE                                       l453 0B3E  
                                     l622 04B4                                       l446 0DFC  
                                     l464 0BF2                                       l480 120E  
                                     l448 0E32                                       l553 0914  
                                     l625 1152                                       l473 092E  
                                     l490 00B2                                       l555 0916  
                                     l476 09D4                                       l469 0EF8  
                                     l574 0F48                                       l567 05E2  
                                     l576 0F4A                                       l584 1016  
                                     l579 104A                                       l856 0856  
                                     l869 0CA2       EUSART_SetRxInterruptHandler@handler 0007  
                         _timer1ReloadVal 00A0                              ___awmod@sign 000C  
                                     prod 0FF3                                       tosl 0FFD  
                                     wreg 0FE8                            ??_generateBeep 0016  
                           generateBeep@i 0018                                      l1123 0EA6  
                                    l1116 0E9E                                      l4000 06E8  
                                    l4010 0718                                      l4002 06EC  
                                    l3300 0846                                      l4020 0774  
                                    l4012 072A                                      l4004 06F0  
                                    l3302 084E                                      l3310 089A  
                                    l4022 0778                                      l4014 073C  
                                    l4006 06F4                                      l3320 08A4  
                                    l3312 089A                                      l4024 077C  
                                    l4016 0754                                      l4008 0706  
                                    l3330 08E8                                      l3322 08BC  
                                    l3314 089C                                      l3306 0858  
                                    l3410 112E                                      l4026 0780  
                                    l4018 0764                                      l3500 1210  
                                    l3260 11A0                                      l3332 08EE  
                                    l3324 08D8                                      l3308 0878  
                                    l3404 05A2                                      l3340 1054  
                                    l3420 0E4E                                      l3412 114A  
                                    l4028 0784                                      l3270 07B2  
                                    l3262 0794                                      l3334 08F4  
                                    l3326 08DE                                      l3406 05C2  
                                    l3350 1064                                      l3342 1058  
                                    l3510 0FF2                                      l3502 0FE0  
                                    l3430 0E88                                      l3422 0E56  
                                    l3440 122E                                      l3600 0C76  
                                    l3280 07E6                                      l3272 07C0  
                                    l3264 0798                                      l3336 08F8  
                                    l3328 08E8                                      l3408 05C6  
                                    l3360 1072                                      l3352 1066  
                                    l3344 105C                                      l3512 0FF6  
                                    l3432 0E90                                      l3424 0E5E  
                                    l3416 0E34                                      l3520 0DFE  
                                    l3602 0C7C                                      l3258 119E  
                                    l3290 0820                                      l3282 07EE  
                                    l3274 07C8                                      l3266 07A6  
                                    l3370 04B6                                      l3530 0338  
                                    l3442 11E4                                      l3362 1074  
                                    l3354 1068                                      l3346 1060  
                                    l3338 104C                                      l3450 05FC  
                                    l3514 1012                                      l3434 0E92  
                                    l3426 0E6C                                      l3418 0E3C  
                                    l3522 0E0A                                      l3620 1188  
                                    l3612 11F6                                      l3604 0C82  
                                    l3292 0828                                      l3284 07F6  
                                    l3276 07CC                                      l3268 07AE  
                                    l3380 04E6                                      l3372 04C2  
                                    l3700 0B40                                      l3444 11F2  
                                    l3356 106A                                      l3348 1062  
                                    l3452 0604                                      l4068 0302  
                                    l3508 0FE8                                      l3436 0E98  
                                    l3428 0E72                                      l3364 10DC  
                                    l3524 0E18                                      l3516 0DC0  
                                    l3438 1224                                      l3614 1242  
                                    l3622 1196                                      l3630 115C  
                                    l3606 0C92                                      l3294 082A  
                                    l3286 0804                                      l3278 07D4  
                                    l3390 055A                                      l3550 0414  
                                    l3542 0356                                      l3710 0BB4  
                                    l3702 0BA8                                      l3358 106E  
                                    l3470 0654                                      l3462 0634  
                                    l3454 0604                                      l3366 10EA  
                                    l3526 0E1C                                      l3518 0DF0  
                                    l3640 0F4C                                      l3624 1198  
                                    l3616 117A                                      l3632 1164  
                                    l3608 0C9A                                      l3296 0830  
                                    l3288 080A                                      l3392 055E  
                                    l3560 043C                                      l3544 03DC  
                                    l3536 034A                                      l3528 0322  
                                    l3712 0BC8                                      l3704 0BAC  
                                    l3480 066C                                      l3472 065C  
                                    l3464 0648                                      l3456 0608  
                                    l3448 05E4                                      l3800 0A1E  
                                    l3368 10EE                                      l3720 093C  
                                    l3650 0F74                                      l3642 0F50  
                                    l3626 121A                                      l3618 1186  
                                    l3634 1166                                      l3298 0836  
                                    l3394 057A                                      l3386 04EE  
                                    l3378 04CA                                      l3562 0440  
                                    l3554 0426                                      l3546 03FE  
                                    l3570 0472                                      l3714 0BCC  
                                    l3490 06AA                                      l3482 067E  
                                    l3466 064C                                      l3458 060C  
                                    l3810 0A86                                      l3802 0A36  
                                    l3722 0956                                      l3730 0970  
                                    l3660 0F88                                      l3652 0F78  
                                    l3644 0F68                                      l3636 1168  
                                    l3628 1154                                      l3580 0C06  
                                    l3396 057E                                      l3388 0526  
                                    l3572 04B0                                      l3556 0432  
                                    l3564 045C                                      l3548 0406  
                                    l3716 0BE8                                      l3492 06AC  
                                    l3484 0686                                      l3468 0650  
                                    l3820 0108                                      l3812 00AE  
                                    l3804 0A62                                      l3740 09B8  
                                    l3732 097C                                      l3724 0964  
                                    l3900 0EEE                                      l3662 0F8C  
                                    l3654 0F7C                                      l3646 0F6C  
                                    l3638 1174                                      l3590 0C3A  
                                    l3582 0C0E                                      l3398 059A  
                                    l3566 0460                                      l3558 0438  
                                    l3670 0AF4                                      l3494 06AE  
                                    l3486 068A                                      l3478 0660  
                                    l3830 0162                                      l3814 00C0  
                                    l3822 010C                                      l3806 0A72  
                                    l3574 1204                                      l3734 0988  
                                    l3726 0968                                      l3742 09BE  
                                    l3718 0918                                      l3902 0EF2  
                                    l3664 0F90                                      l3656 0F80  
                                    l3648 0F70                                      l3592 0C42  
                                    l3584 0C12                                      l3576 0BF4  
                                    l3680 0B14                                      l3672 0AF8  
                                    l3496 06B8                                      l3488 06A2  
                                    l3840 01B0                                      l3824 011A  
                                    l3832 0166                                      l3816 00DA  
                                    l3808 0A76                                      l3744 0EFC  
                                    l3736 099E                                      l3666 0F96  
                                    l3658 0F84                                      l3594 0C4A  
                                    l3586 0C20                                      l3578 0BF8  
                                    l3682 0B18                                      l3498 06BA  
                                    l3850 01E0                                      l3842 01C0  
                                    l3834 0174                                      l3826 0134  
                                    l3818 00E8                                      l3754 0F1C  
                                    l3746 0F12                                      l3738 09A2  
                                    l3780 11BE                                      l3596 0C58  
                                    l3588 0C28                                      l3684 0B34  
                                    l3668 0A8C                                      l3692 0D58  
                                    l3860 0236                                      l3852 01E4  
                                    l3844 01C4                                      l3836 017E  
                                    l3828 0142                                      l3756 0F28  
                                    l3748 0F14                                      l3782 11C2  
                                    l3598 0C6E                                      l3678 0B00  
                                    l3694 0D7E                                      l3686 0D42  
                                    l3870 0290                                      l3862 0250  
                                    l3846 01CC                                      l3838 0198  
                                    l3854 01EE                                      l3758 0F2C  
                                    l3790 1018                                      l3784 11C6  
                                    l3776 11B6                                      l3696 0D82  
                                    l3880 02E4                                      l3872 02AA  
                                    l3864 025E                                      l3856 0206  
                                    l3848 01CE                                      l3792 09D6  
                                    l3786 11CA                                      l3778 11BA  
                                    l3698 0DA6                                      l3874 02B8  
                                    l3866 027E                                      l3858 0228  
                                    l3794 09D6                                      l3788 123E  
                                    l3868 0282                                      l3884 02EC  
                                    l3796 09EE                                      l3892 0EA8  
                                    l3878 02DC                                      l3798 0A06  
                                    l3894 0EBA                                      l3990 06DA  
                                    l3896 0ECA                                      l3992 06DE  
                                    l3898 0EDC                                      l3994 06E2  
                                    l3986 06CE                                      l3996 06E4  
                                    l3988 06D6                                      l3998 06E6  
                                    STR_1 FD29                              _triggerAlarm 0918  
                                    u3000 0A5E                                      u3010 0A72  
                                    u3011 0A6E                                      u3100 01E0  
                                    u3020 0A86                                      u3101 01DC  
                                    u3021 0A82                                      _LATA 0F89  
                                    u3110 0206                                      u3030 00C0  
                                    _LATB 0F8A                                      u3111 0202  
                                    u3031 00BC                                      _LATC 0F8B  
                                    u3120 0228                                      u3040 00E8  
                                    u3200 0EEE                                      u3121 0224  
                                    u3041 00E4                                      u3201 0EEA  
                                    u3130 0236                                      u3050 011A  
                                    u3131 0232                                      u3051 0116  
                                    u2500 07E6                                      u3140 025E  
                                    u3060 0142                                      u2501 07E2  
                                    u3141 025A                                      u3061 013E  
                                    u2510 0804                                      u3150 0290  
                                    u3070 0174                                      u2511 0800  
                                    u3151 028C                                      u3071 0170  
                                    u2520 0820                                      u2600 0526  
                                    u3160 02B8                                      u3080 01B0  
                                    u2521 081C                                      u2601 0522  
                                    u3161 02B4                                      u3081 01AC  
                                    u2530 0846                                      u3090 01C0  
                                    u3170 0EBA                                      u3330 0706  
                                    u2531 0842                                      u3091 01BC  
                                    u3171 0EB6                                      u3331 0702  
                                    u2540 08BC                                      u2620 057A  
                                    u2700 069A                                      u3180 0ECA  
                                    u3340 0718                                      u2541 08B8  
                                    u2621 0576                                      u2701 0696  
                                    u3181 0EC6                                      u3341 0714  
                                    u2470 11B2                                      u2550 0914  
                                    u2630 059A                                      u2614 0542  
                                    u3190 0EDC                                      u3350 072A  
                                    u2471 11AE                                      u2551 0910  
                                    u2631 0596                                      u2615 053E  
                                    u3407 0946                                      u3191 0ED8  
                                    u3351 0726                                      u2480 07A6  
                                    u2640 05E2                                      u2800 0422  
                                    u2720 06CC                                      u3360 073C  
                                    u2481 07A2                                      u2641 05DE  
                                    u2801 041E                                      u2721 06C8  
                                    u3417 0992                                      u3361 0738  
                                    u2490 07C0                                      u2810 045C  
                                    u2730 1012                                      u2650 0E4E  
                                    u2570 1104                                      u3370 0764  
                                    u2491 07BC                                      u2811 0458  
                                    u2715 06B6                                      u2731 100E  
                                    u2651 0E4A                                      u2571 1100  
                                    u3427 09AC                                      u3371 0760  
                                    u2900 0C92                                      u2820 046E  
                                    u2716 06B8                                      u2660 0E6C  
                                    u2740 0E32                                      u3380 0774  
                                    u2901 0C8E                                      u2581 04BC  
                                    u2821 046A                                      u2565 107C  
                                    u3437 00CA                                      u2661 0E68  
                                    u2741 0E2E                                      u3381 0770  
                                    u2830 04A0                                      u2750 0384  
                                    u2910 0B34                                      u2566 107E  
                                    u2670 0E88                                      u2911 0B30  
                                    u3447 0124                                      u2671 0E84  
                                    u2840 04B0                                      u2680 0630  
                                    u2920 0D92                                      u2841 04AC  
                                    u2681 062C                                      u2921 0D8E  
                                    u3457 0188                                      u2850 0C06  
                                    u2594 050C                                      u2770 03DC  
                                    u2930 0BE8                                      u2690 067E  
                                    u2851 0C02                                      u2595 0508  
                                    u2771 03D8                                      u2931 0BE4  
                                    u2691 067A                                      u3467 0240  
                                    u2860 0C20                                      u2764 03C2  
                                    u2940 093C                                      u2861 0C1C  
                                    u2837 0496                                      u2765 03BE  
                                    u2757 037A                                      u3477 029A  
                                    u2941 0938                                      u2870 0C3A  
                                    u2790 0414                                      u2950 0964  
                                    u2871 0C36                                      u2791 0410  
                                    u2951 0960                                      u2880 0C58  
                                    u2784 03F2                                      u2960 09D4  
                                    u2881 0C54                                      u2785 03EE  
                                    u2961 09D0                                      u2890 0C6E  
                                    u2970 0F48                                      u2891 0C6A  
                                    u2971 0F44                                      u2990 0A5C  
                                    u2991 0A56                                      _TMR1 0FCE  
                                    _WPUB 0F7C                                      _main 06CE  
                                    fsr1h 0FE2                                      fsr2h 0FDA  
                                    indf1 0FE7                                      indf2 0FDF  
                                    fsr1l 0FE1                                      fsr2l 0FD9  
                                    btemp 0059                              printString@i 00B5  
                            printString@j 00B9                              printString@k 00B7  
                       ?_FLASH_WriteBlock 000C                                      prodh 0FF4  
                                    prodl 0FF3                                      start 00AA  
                  __end_of_SPI_Initialize 1204                              ?_flushBuffer 0001  
                      ??_FLASH_WriteBlock 0011                ??_TMR1_SetInterruptHandler 0009  
                            ___param_bank 0000               saveTimeToFlash@flashAddress 00F0  
                    __end_of_clearDisplay 1018               checkButtons@button3HoldTime 009A  
           __end_of_OSCILLATOR_Initialize 1224                                     ?_main 0001  
                         __end_of___awdiv 0858                         ??_saveTimeToFlash 001A  
                                   _EEADR 0FA9                           __end_of___awmod 0CA4  
                         _TMR1_StartTimer 123E                                     _ANSEL 0F7E  
                         ___awdiv@divisor 0009                                     _T1CON 0FCD  
                         __end_of___lwdiv 0EA8                                     i2l341 11E2  
                                   i2l351 123C                                     i2l335 112C  
                                   i2l345 10DA                                     i2l530 0D40  
                                   i2l282 004C                                     i2l283 0096  
                                   i2l284 006E                                     i2l527 0D40  
                                   i2l288 0096                                     i2l459 0FDE  
                         ___awdiv@counter 000B                                     _RCREG 0FAE  
                                   _RCSTA 0FAB                                     _TMR1H 0FCF  
                                   _TMR1L 0FCE                                     _SPBRG 0FAF  
                                   _TRISA 0F92                                     _TRISB 0F93  
                                   _TRISC 0F94                                     _TXREG 0FAD  
                                   _TXSTA 0FAC                          __end_of_TMR1_ISR 11E4  
                                   _hours 00AE                              displayTime@i 00C5  
                        _button3PressTime 009C                   __end_of_TMR1_Initialize 117A  
                         max7219_cmd@Addr 000B                                     pclath 0FFA  
                                   pclatu 0FFB                                     tablat 0FF5  
                         max7219_cmd@data 0008                                     ttemp5 005A  
                                   ttemp6 005D                                     ttemp7 0061  
                                   status 0FD8                                     wtemp8 005A  
                         _TMR1_WriteTimer 1106                           ?_SPI_Initialize 0001  
                          _alarmTriggered 00A7                           __initialization 1080  
                            __end_of_main 0794                   FLASH_ReadByte@flashAddr 0007  
             ?_INTERRUPT_InterruptManager 0001            ??_EUSART_SetRxInterruptHandler 0009  
                                  ??_main 0053                             __activetblptr 0003  
                      generateBeep@cycles 0016                  __end_of_SPI_Exchange8bit 11B6  
               FLASH_WriteBlock@writeAddr 000C                                    _EEADRH 0FAA  
                                  _EEDATA 0FA8                                    _EECON2 0FA7  
                        ___awdiv@dividend 0007                                    _ANSELH 0F7F  
                 TMR1_WriteTimer@timerVal 0001                                    i2l2410 0FC4  
                                  i2l2412 0FC8                                    i2l2404 0F9A  
                                  i2l2414 0FDA                                    i2l2406 0FAE  
                                  i2l2408 0FB2                                    i2l3160 0036  
                                  i2l3170 008A                                    i2l3162 0044  
                                  i2l3172 0090                                    i2l3164 005A  
                                  i2l3156 001A                                    i2l3166 0068  
                                  i2l3158 0028                                    i2l3168 007C  
                                  i2l2554 1238                                    i2l2730 111E  
                                  i2l2722 1106                                    i2l2724 1114  
                                  i2l2732 1124                                    i2l2734 1128  
                                  i2l2726 1116                                    i2l2736 10AE  
                                  i2l2728 111A                                    i2l2738 10C2  
                                  i2l2870 11DE                                    i2l2880 0CDA  
                                  i2l2872 0CA6                                    i2l2866 11D0  
                                  i2l2890 0D1C                                    i2l2882 0CEA  
                                  i2l2874 0CB8                                    i2l2868 11D2  
                                  i2l2892 0D2E                                    i2l2884 0CFA  
                                  i2l2876 0CC8                                    i2l2878 0CD4  
                                  i2l2888 0D0A                                    _TABLAT 0FF5  
                      delayMicroseconds@i 0009                                    _OSCCON 0FD3  
                                  _SPBRGH 0FB0                                    _SSPADD 0FC8  
                                  _SSPBUF 0FC9                     triggerAlarm@numCycles 00BB  
    __end_of_TMR1_DefaultInterruptHandler 123E              _TMR1_DefaultInterruptHandler 1238  
                           main@hours_pom 00F5                   __end_of_TMR1_StartTimer 1242  
                                  ___wmul 112E                      __end_of_generateBeep 0E34  
                               ??___awdiv 000B                                 ??___awmod 000B  
                               ??___lwdiv 0011                       _EUSART_Transmit_ISR 0000  
                                  clear_0 1086                                    clear_1 1092  
                        ___awdiv@quotient 000D                           ___awmod@divisor 0009  
                                  isa$std 0001                           ___awmod@counter 000B  
                        flushBuffer@F2569 0100                     displayTime@timeString 00C0  
                          printString@str 0047                         displayAlarmTime@i 00C5  
             FLASH_WriteBlock@dataCounter 0018                         ?_displayAlarmTime 0001  
                            __mediumconst F528                                    tblptrh 0FF7  
                                  tblptrl 0FF6                                    tblptru 0FF8  
                            _checkButtons 00AE                        ??_displayAlarmTime 0051  
TMR1_SetInterruptHandler@InterruptHandler 0007                   __end_of_TMR1_WriteTimer 112E  
                   __end_of_TMR1_CallBack 10DC                              ?_printString 0047  
                        ?_TMR1_Initialize 0001                         _SYSTEM_Initialize 11B6  
                              __accesstop 0060                   __end_of__initialization 10A4  
                      ?_SYSTEM_Initialize 0001                             ___rparam_used 0001  
    __end_of_EUSART_SetTxInterruptHandler 122E              _EUSART_SetTxInterruptHandler 1224  
                          __pcstackCOMRAM 0001                       ??_SYSTEM_Initialize 0009  
                               ?_TMR1_ISR 0001             ?_TMR1_DefaultInterruptHandler 0001  
                            _alarmMinutes 00AA           __end_of_MAX7219_Dot_Matrix_font FD29  
             FLASH_WriteBlock@GIEBitValue 0015                              _clearDisplay 0FE0  
               __end_of_SYSTEM_Initialize 11D0                            flushBuffer@dev 003F  
                          flushBuffer@row 0043                                __pbssBANK0 0060  
                              __pbssBANK1 0100                                _alarmHours 00AB  
           delayMicroseconds@microseconds 0007                                _clearAlarm 1204  
           displayAlarmTime@displayString 00BB                              flushBuffer@i 0045  
                            flushBuffer@j 0041                           _saveTimeToFlash 0D42  
           ?_EUSART_SetTxInterruptHandler 0007          _EUSART_TxDefaultInterruptHandler 00FB  
                                 ?___wmul 0007                          ?_TMR1_StartTimer 0001  
                              _blinkTimer 009E                                ??_TMR1_ISR 0003  
                                 _BAUDCON 0FB8                            _FLASH_ReadByte 11E4  
                           _eusartRxCount 00AF                         __end_of_btGetData 0D42  
                                 _TBLPTRH 0FF7                                   _TBLPTRL 0FF6  
                                 _TBLPTRU 0FF8                                   _OSCTUNE 0F9B  
                                 _SSPCON1 0FC6                                   _SSPSTAT 0FC7  
                        ?_TMR1_WriteTimer 0001                          _FLASH_EraseBlock 104C  
                        ??_SPI_Initialize 0007       EUSART_SetTxInterruptHandler@handler 0007  
                 generateBeep@duration_ms 0014                                   __Hparam 0000  
                                 __Lparam 0000                                   ___awdiv 0794  
                                 ___awmod 0BF4                          _isButton3Pressed 00A5  
                                 ___lwdiv 0E34                    __end_of_FLASH_ReadByte 11F6  
                                 __pcinit 1080                                   __ramtop 1000  
                              _matrixInit 1018                                   __ptext0 06CE  
                                 __ptext1 0EA8                                   __ptext2 0918  
                                 __ptext3 0DC0                                   __ptext4 10DC  
                                 __ptext5 112E                                   __ptext6 0E34  
                                 __ptext7 0FE0                                   __ptext8 1204  
                                 __ptext9 1018            ??_TMR1_DefaultInterruptHandler 0001  
                           ??_max7219_cmd 0009                                 _T1CONbits 0FCD  
                   _OSCILLATOR_Initialize 121A                          ___awmod@dividend 0007  
                       __end_of_max_write 0918                                   _minutes 00AD  
                ??_PIN_MANAGER_Initialize 0007                                   _seconds 00AC  
               ?_TMR1_SetInterruptHandler 0007                         ?_SPI_Exchange8bit 0001  
                            _generateBeep 0DC0                      end_of_initialization 10A4  
                         printString@data 00B2                             triggerAlarm@i 00BD  
                      ??_SPI_Exchange8bit 0007                           printString@indx 00B0  
                    SPI_Exchange8bit@data 0007                   __end_of_saveTimeToFlash 0DC0  
                           _calculateTime 0F9A                               ?_clearAlarm 0001  
                       _EUSART_Initialize 0F4C                              max_write@dev 0018  
                              _uartBuffer 0080                              btGetData@rcv 0001  
                      ?_EUSART_Initialize 0001                              max_write@row 000F  
                               _RCSTAbits 0FAB                                   postinc0 0FEE  
                                 postinc2 0FDE                           ?_FLASH_ReadByte 0007  
                     ??_EUSART_Initialize 0009                          saveTimeToFlash@i 00F4  
          ??_EUSART_SetTxInterruptHandler 0009                         _loadTimeFromFlash 09D6  
                           ?_processAlarm 0001                                 _PORTBbits 0F81  
                           clearDisplay@i 0047                        ?_loadTimeFromFlash 0001  
                               _TRISBbits 0F93             FLASH_WriteBlock@flashWrBufPtr 0010  
                     ??_loadTimeFromFlash 000B                       __end_of_max7219_cmd 0F4C  
                FLASH_EraseBlock@baseAddr 0007                 __end_of_EUSART_Initialize 0F9A  
                          ?_calculateTime 0001                                 _TXSTAbits 0FAC  
                       FLASH_WriteBlock@i 0019                         FLASH_WriteBlock@j 0016  
              saveTimeToFlash@flashBuffer 00B0              __end_of_INTERRUPT_Initialize 1246  
                           ??_displayTime 0051                 __end_of_loadTimeFromFlash 0A8C  
                          __end_of___wmul 1154                            ??_processAlarm 0053  
                             ?_matrixInit 0001                          _FLASH_WriteBlock 05E4  
                  ?_OSCILLATOR_Initialize 0001                       start_initialization 1080  
                           ?_triggerAlarm 0001                          ?_saveTimeToFlash 0001  
                      printString@strindx 00B3                             ??_flushBuffer 001C  
                                ??___wmul 000B           displayAlarmTime@alarmTimeString 00C0  
             FLASH_EraseBlock@GIEBitValue 000B                  __end_of_FLASH_EraseBlock 1080  
                     __end_of_displayTime 0B40                               _max7219_cmd 0EFA  
                             __pbssCOMRAM 0053                               _alarmActive 00A8  
                           __pcstackBANK0 00B0                         _delayMicroseconds 10DC  
                          ??_triggerAlarm 0051                              max7219_cmd@i 000E  
                      ?_delayMicroseconds 0007                                 _btGetData 0CA4  
                         ??_calculateTime 0001          _EUSART_RxDefaultInterruptHandler 00F9  
                 _MAX7219_Dot_Matrix_font F529                                 __pnvBANK0 00F7  
                     ??_delayMicroseconds 0009                                 _btTimeSet 00A4  
                        ___lwdiv@dividend 000D                    _PIN_MANAGER_Initialize 117A  
                               __pintcode 0008          __end_of_TMR1_SetInterruptHandler 121A  
                           __pmediumconst F528                                  ?___awdiv 0007  
                                ?___awmod 0007                                  ?___lwdiv 000D  
                            _eusartRxHead 0055                              _eusartTxHead 0058  
                            _eusartRxTail 0054                       __end_of_flushBuffer 05E4  
                            _eusartTxTail 0057                                 _bufferCol 0060  
            ??_INTERRUPT_InterruptManager 0003                   _eusartTxBufferRemaining 0056  
               __end_of_delayMicroseconds 1106                          ___lwdiv@quotient 0012  
                               _max_write 0858                      _INTERRUPT_Initialize 1242  
                              ?_btGetData 0001            FLASH_WriteBlock@blockStartAddr 0011  
                          _eusartRxBuffer 008A                             _TMR1_CallBack 10AE  
                          _eusartTxBuffer 0092                      __end_of_processAlarm 0EFA  
                          ___wmul@product 000B                                  _LATBbits 0F8A  
                                _LATCbits 0F8B                              ??_clearAlarm 0007  
                                _PIE1bits 0F9D                          _displayAlarmTime 0B40  
                                i2u135_40 0FAE                                  i2u135_41 0FAA  
                                i2u136_40 0FC4                                  i2u136_41 0FC0  
                                i2u137_40 0FDA                                  i2u233_40 0028  
                                i2u137_41 0FD6                                  i2u233_41 0024  
                         max_write@offset 0014                                  i2u234_40 0036  
                                i2u234_41 0032                                  i2u235_40 0044  
                                i2u235_41 0040                                  i2u172_40 1114  
                                i2u236_40 005A                                  i2u172_41 1110  
                                i2u236_41 0056                                  i2u173_40 10C2  
                                i2u237_40 0068                                  i2u173_41 10BE  
                                i2u237_41 0064                                  i2u238_40 007C  
                                i2u238_41 0078                                  i2u174_48 10C8  
                                i2u239_40 008A                                  i2u174_49 10DA  
                                i2u239_41 0086                                  i2u184_40 0CB8  
                                i2u184_41 0CB4                                  i2u185_40 0CC8  
                                i2u185_41 0CC4                                  _PIR1bits 0F9E  
                                i2u186_40 0CEA                                  i2u186_41 0CE6  
                        ??_FLASH_ReadByte 000B                                  i2u187_40 0CFA  
                                i2u187_41 0CF6                                  _PIR2bits 0FA1  
                                i2u188_40 0D1C                                  i2u188_41 0D18  
                                i2u189_40 0D2E                                  i2u189_41 0D2A  
                                _RCONbits 0FD0                                  _TMR1_ISR 11D0  
                             _displayTime 0A8C                         ??_TMR1_Initialize 0009  
                       ___wmul@multiplier 0007                        __end_of_clearAlarm 1210  
                           ?_checkButtons 0001                               _INTCON2bits 0FF1  
                              ?_max_write 000F                     ?_INTERRUPT_Initialize 0001  
                           ??_printString 0049                            ?_TMR1_CallBack 0001  
                __end_of_FLASH_WriteBlock 06CE                                _EECON1bits 0FA6  
                                __Hrparam 0000                               _flushBuffer 04B6  
                                __Lrparam 0000                        max_write@devTarget 0016  
                 ??_OSCILLATOR_Initialize 0007                      __end_of_triggerAlarm 09D6  
                            ??_matrixInit 0010                  _TMR1_SetInterruptHandler 1210  
                   _TMR1_InterruptHandler 00F7                               _currentMode 00A3  
                         main@minutes_pom 00F6                                  _alarmSet 00A9  
                          ??_checkButtons 0051                           ___lwdiv@divisor 000F  
                         ___lwdiv@counter 0011                             ?_clearDisplay 0001  
                                __ptext10 0EFA                                  __ptext11 09D6  
                                __ptext20 04B6                                  __ptext12 00AE  
                                __ptext21 0858                                  __ptext13 0D42  
                                __ptext30 117A                                  __ptext22 0794  
                                __ptext14 05E4                                  __ptext31 121A  
                                __ptext23 119C                                  __ptext15 104C  
                                __ptext40 10AE                                  __ptext32 1242  
                                __ptext24 0BF4                                  __ptext16 11E4  
                                __ptext41 1238                                  __ptext33 0F4C  
                                __ptext25 123E                                  __ptext17 0A8C  
                                __ptext42 0F9A                                  __ptext34 1224  
                                __ptext26 11B6                                  __ptext18 0B40  
                                __ptext35 122E                                  __ptext27 1154  
                                __ptext19 0322                                  __ptext28 1210  
                                __ptext37 0CA4                                  __ptext29 11F6  
                                __ptext38 11D0                                  __ptext39 1106  
                       ??_TMR1_StartTimer 0007                               ??_btGetData 0001  
                      __end_of_matrixInit 104C                       __end_of_printString 04B6  
                    flushBuffer@bufferRow 001F                           _displayBlinking 00A6  
                                isa$xinst 0000                      max7219_cmd@writeData 000C  
                                int$flags 0059        __end_of_INTERRUPT_InterruptManager 00AA  
              _INTERRUPT_InterruptManager 0008                         ??_TMR1_WriteTimer 0003  
                       ?_FLASH_EraseBlock 0007       FLASH_WriteBlock@numberOfWriteBlocks 0017  
                            ?_max7219_cmd 0008                        ??_FLASH_EraseBlock 000B  
                              _INTCONbits 0FF2                           _uartBufferIndex 0053  
                          ??_clearDisplay 0047                    ??_INTERRUPT_Initialize 0007  
                         ??_TMR1_CallBack 0001                        max_write@writeData 001A  
                             ??_max_write 0012                                  intlevel2 0000  
                 ?_PIN_MANAGER_Initialize 0001      __end_of_EUSART_SetRxInterruptHandler 1238  
            _EUSART_SetRxInterruptHandler 122E                             max_write@data 0011  
                        _SPI_Exchange8bit 119C                        _EUSART_Receive_ISR 0000  
                displayTime@displayString 00BB                              _processAlarm 0EA8  
                __end_of_displayAlarmTime 0BF4             checkButtons@button3PressCount 00A2  
                             _SSPCON1bits 0FC6                             ?_generateBeep 0014  
          __end_of_PIN_MANAGER_Initialize 119C                               _printString 0322  
                   __end_of_calculateTime 0FE0                           _TMR1_Initialize 1154  
